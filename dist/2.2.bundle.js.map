{"version":3,"sources":["webpack:///2.2.bundle.js","webpack:///./~/pdfjs-dist/build/pdf.worker.js?1385"],"names":["webpackJsonp","220","module","exports","__webpack_require__","process","global","root","factory","this","modules","__w_pdfjs_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","setVerbosityLevel","level","verbosity","getVerbosityLevel","info","msg","VERBOSITY_LEVELS","infos","console","log","warn","warnings","deprecated","details","unreachable","Error","assert","cond","isSameOrigin","baseUrl","otherUrl","base","URL","origin","e","other","isValidProtocol","url","protocol","createValidAbsoluteUrl","absoluteUrl","ex","shadow","obj","prop","value","writable","getLookupTableFactory","initializer","lookup","create","removeNullCharacters","str","replace","NullCharactersRegExp","bytesToString","bytes","_typeof","undefined","length","MAX_ARGUMENT_COUNT","String","fromCharCode","apply","strBuf","chunkEnd","Math","min","chunk","subarray","push","join","stringToBytes","Uint8Array","charCodeAt","arrayByteLength","arr","byteLength","arraysToBytes","item","itemLength","resultLength","ii","pos","data","set","string32","log2","x","readInt8","start","readUint16","offset","readUint32","isLittleEndian","buffer8","view32","Uint32Array","buffer","isEvalSupported","Function","stringToPDFString","code","PDFStringTranslateTable","charAt","stringToUTF8String","decodeURIComponent","escape","utf8StringToString","unescape","encodeURIComponent","isEmptyObj","key","isBool","v","isNum","isString","isArrayBuffer","isSpace","ch","isNodeJS","createPromiseCapability","capability","promise","Promise","resolve","reject","resolveCall","fn","args","thisArg","arguments","wrapReason","reason","AbortException","message","MissingPDFException","UnexpectedResponseException","status","UnknownErrorException","makeReasonSerializable","toString","resolveOrReject","success","finalize","catch","MessageHandler","sourceName","targetName","comObj","_this","callbackId","streamId","postMessageTransfers","streamSinks","streamControllers","callbacksCapabilities","ah","actionHandler","_onComObjOnMessage","event","stream","_processStreamMessage","isReply","callback","error","action","_sourceName","_targetName","then","result","postMessage","_createStreamSink","addEventListener","loadJpegStream","id","imageUrl","objs","img","Image","onload","onerror","src","ReadableStream","createObjectURL","createBlob","FormatError","XRefParseException","Util","TextRenderingMode","StreamType","StatTimer","PasswordResponses","PasswordException","PageViewport","NotImplementedException","NativeImageDecoding","MissingDataException","InvalidPDFException","CMapCompressionType","ImageKind","FontType","AnnotationType","AnnotationFlag","AnnotationFieldFlag","AnnotationBorderStyleType","UNSUPPORTED_FEATURES","OPS","IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","Symbol","iterator","constructor","_streams_polyfill","NONE","DECODE","DISPLAY","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","HIDDEN","PRINT","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","SOLID","DASHED","BEVELED","INSET","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RL","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","errors","BINARY","STREAM","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","transform","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","unknown","forms","javaScript","smask","shadingPattern","font","NEED_PASSWORD","INCORRECT_PASSWORD","begin","end","rgbBuf","makeCssRgb","r","g","b","m1","m2","applyTransform","xt","yt","applyInverseTransform","getAxialAlignedBoundingBox","p1","p2","slice","p3","p4","max","inverseTransform","apply3dTransform","singularValueDecompose2dScale","transpose","a","first","second","sqrt","sx","sy","normalizeRect","rect","intersect","rect1","rect2","compare","orderedX","sort","orderedY","ROMAN_NUMBER_MAP","toRoman","number","lowerCase","Number","isInteger","romanBuf","romanStr","toLowerCase","appendToArray","arr1","arr2","Array","prependToArray","unshift","extendObj","obj1","obj2","getInheritableProperty","dict","getArray","has","inherit","sub","loadScript","script","document","createElement","loaded","setAttribute","getElementsByTagName","appendChild","viewBox","scale","rotation","offsetX","offsetY","dontFlip","rotateA","rotateB","rotateC","rotateD","centerX","centerY","offsetCanvasX","offsetCanvasY","width","height","abs","fontScale","clone","convertToViewportPoint","y","convertToViewportRectangle","tl","br","convertToPdfPoint","rpad","pad","started","times","enabled","time","Date","now","timeEnd","out","longest","span","duration","contentType","Blob","type","digits","forceDataSchema","blob","b1","b2","b3","d1","d2","d3","d4","on","actionName","handler","scope","send","transfers","sendWithPromise","sendWithStream","queueingStrategy","_this2","controller","startCapability","startCall","isClosed","desiredSize","pull","pullCapability","pullCall","cancel","cancelCapability","cancelCall","_this3","self","sendStreamRequest","_ref","streamSink","enqueue","size","isCancelled","lastDesiredSize","sinkCapability","ready","close","onPull","onCancel","_this4","sendStreamResponse","_ref2","deleteStreamController","all","map","destroy","removeEventListener","window","__g","isEOF","EOF","isName","Name","isCmd","cmd","Cmd","isDict","Dict","isRef","Ref","isRefsEqual","v1","v2","num","gen","isStream","getBytes","nameCache","nameValue","cmdCache","cmdValue","xref","_map","objId","suppressEncryption","__nonSerializable__","nonSerializable","assignXref","newXref","key1","key2","key3","fetchIfRef","getAsync","fetchIfRefAsync","isArray","fetch","getRaw","getKeys","keys","forEach","empty","merge","dictArray","mergedDict","keyName","RefSet","ref","put","remove","RefSetCache","putAlias","aliasRef","clear","it","store","uid","_Symbol","USE_SYMBOL","$exports","LZWStream","StringStream","StreamsSequenceStream","Stream","RunLengthStream","PredictorStream","NullStream","JpxStream","JpegStream","FlateStream","DecodeStream","DecryptStream","AsciiHexStream","Ascii85Stream","_util","_primitives","_jpg","_jpx","arrayBuffer","isEmpty","getByte","getUint16","b0","getInt32","strEnd","peekByte","peekedByte","peekBytes","skip","reset","moveStart","makeSubStream","maybeMinBufferLength","bufferLength","eof","emptyBuffer","minBufferLength","readBlock","ensureBuffer","requested","buffer2","bufEnd","getBaseStreams","streams","shift","newLength","baseStreams","maybeLength","cmf","flg","codeSize","codeBuf","codeLenCodeMap","Int32Array","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","getBits","bits","getCode","table","codes","maxLen","codeLen","codeVal","generateHuffmanTable","lengths","len","val","code2","t","hdr","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","bitsLength","bitsOffset","what","codeLengths","repeatLength","limit","code1","dist","k","blockLen","check","params","predictor","readBlockTiff","readBlockPng","colors","columns","pixBytes","rowBytes","rawBytes","inbuf","outbuf","inbits","outbits","bytesPerPixel","sum","compArray","bitMask","j","kk","prevRow","up","upLeft","left","pa","pb","pc","req","jpegImage","JpegImage","decodeArr","forceRGB","bitsPerComponent","decodeArrLength","transformNeeded","maxValue","decodeTransform","colorTransform","parse","getData","drawWidth","drawHeight","getIR","jpxImage","JpxImage","componentsCount","tileCount","tiles","items","Uint8ClampedArray","tileComponents","tileWidth","tileHeight","tileLeft","tileTop","top","srcPosition","dataPosition","imgRowSize","tileRowSize","decrypt","nextChunk","initialized","chunkSize","hasMoreData","input","TILDA_CHAR","Z_LOWER_CHAR","firstDigit","UPSTREAM_BLOCK_SIZE","maxDecodeLength","digit","repeatHeader","source","earlyChange","cachedData","bitsCached","maxLzwDictionarySize","lzwState","codeLength","nextCode","dictionaryValues","dictionaryLengths","Uint16Array","dictionaryPrevCodes","currentSequence","currentSequenceLength","readBits","lastCode","q","blockSize","estimatedDecodedSize","decodedSizeDelta","prevCode","decodedLength","currentBufferLength","hasPrev","core","hide","redefine","ctx","PROTOTYPE","$export","own","exp","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","P","IS_BIND","B","target","expProto","U","W","R","version","__e","dP","createDesc","f","isObject","TypeError","exec","aFunction","that","toInteger","anObject","IE8_DOM_DEFINE","toPrimitive","O","Attributes","SRC","TO_STRING","$toString","TPL","split","inspectSource","safe","isFunction","px","random","concat","ceil","floor","isNaN","defined","Constructor","forbiddenField","def","TAG","tag","stat","ColorSpace","resizeRgbImage","bpc","w1","h1","w2","h2","alpha01","dest","COMPONENTS","py","oldIndex","xRatio","yRatio","newIndex","xScaled","w1Scanline","getRgb","srcOffset","rgb","getRgbItem","destOffset","getRgbBuffer","count","getOutputLength","inputLength","isPassthrough","fillRgb","originalWidth","originalHeight","actualHeight","comps","numComponentColors","needsResizing","numComps","allColors","colorMap","destPos","rgbPos","usesZeroToOneRange","cs","res","pdfFunctionFactory","IR","parseToIR","fromIR","whitePoint","blackPoint","gamma","singletons","gray","cmyk","CalGrayCS","matrix","CalRGBCS","basePatternCS","PatternCS","baseIndexedCS","hiVal","IndexedCS","alt","tintFnIR","AlternateCS","createFromIR","range","LabCS","colorSpaces","refcs","mode","altIR","altCS","createIR","isDefaultDecode","decode","DeviceGrayCS","DeviceRgbCS","DeviceCmykCS","tintFn","defaultColor","Float32Array","tmpBuf","baseNumComps","baseBuf","scaled","tinted","decodeMap","baseCS","highVal","outputDelta","lookupPos","convertToRgb","srcScale","XW","YW","ZW","XB","YB","ZB","A","AG","pow","L","GR","GG","GB","MXA","MYA","MZA","MXB","MYB","MZB","MXC","MYC","MZC","matrixProduct","convertToFlat","sourceWhitePoint","LMS","convertToD65","D65X","D65Y","D65Z","sRGBTransferFunction","color","adjustToRange","decodeL","DECODE_L_CONSTANT","compensateBlackPoint","sourceBlackPoint","XYZ_Flat","zeroDecodeL","X_DST","X_SRC","Y_DST","Y_SRC","Z_DST","Z_SRC","X_Scale","X_Offset","Y_Scale","Y_Offset","Z_Scale","Z_Offset","normalizeWhitePointToFlat","XYZ_In","BRADFORD_SCALE_MATRIX","LMS_Flat","tempNormalizeMatrix","BRADFORD_SCALE_INVERSE_MATRIX","normalizeWhitePointToD65","LMS_D65","C","AGR","BGG","CGB","X","Y","Z","XYZ","tempConvertMatrix1","tempConvertMatrix2","XYZ_Black","XYZ_D65","FLAT_WHITEPOINT_MATRIX","SRGB","SRGB_D65_XYZ_TO_RGB_MATRIX","sR","sG","sB","round","amin","amax","bmin","bmax","fn_g","high1","low2","high2","maxVal","Ls","as","bs","M","N","getEncoding","encodingName","WinAnsiEncoding","StandardEncoding","MacRomanEncoding","SymbolSetEncoding","ZapfDingbatsEncoding","ExpertEncoding","MacExpertEncoding","bitmap","IObject","index","cof","ARG","tryGet","T","callee","isArrayIter","toLength","getIterFn","BREAK","RETURN","_exports","iterable","entries","ITERATOR","step","iterFn","next","done","Parser","Linearization","Lexer","_stream","_ccitt_stream","_jbig2_stream","MAX_LENGTH_TO_CACHE","lexer","allowStreams","recoveryMode","imageCache","refill","buf1","getObj","buf2","tryShift","cipherTransform","makeInlineImage","array","makeStream","decryptString","findDefaultInlineStreamEnd","E","I","SPACE","LF","CR","NUL","startPos","state","maybeEIPos","followingBytes","findDCTDecodeInlineStreamEnd","markerLength","foundEOI","inlineStreamSkipEI","findASCII85DecodeInlineStreamEnd","TILDE","GT","findASCIIHexDecodeInlineStreamEnd","filterName","filter","filterZero","adler32","imageStream","imageBytes","cacheEntry","createStream","cacheKey","skipToNextLine","nextChar","SCAN_BLOCK_SIZE","ENDSTREAM_SIGNATURE_LENGTH","ENDSTREAM_SIGNATURE","skipped","found","scanBytes","scanLength","makeFilter","filterArray","paramsArray","xrefStreamStats","stats","streamTypes","CCITTFaxStream","Jbig2Stream","knownCommands","toHexDigit","specialChars","currentChar","peekChar","getNumber","eNotation","divideBy","sign","baseValue","powerValue","powerValueSign","currentDigit","getString","numParen","charBuffered","getName","previousCh","x2","getHexString","secondDigit","isFirstHex","comment","knownCommandFound","possibleCommand","getInt","allowZeroValue","linDict","getHints","hintsLength","hints","parser","obj3","objectNumberFirst","endFirst","numPages","mainXRefEntriesOffset","pageFirst","is","valueOf","propertyIsEnumerable","shared","$keys","enumBugKeys","toObject","asc","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","$this","callbackfn","SPECIES","D","SAFE_CLOSING","riter","from","skipClosing","iter","PromiseCapability","$$resolve","$$reject","META","setDesc","isExtensible","FREEZE","preventExtensions","setMeta","w","fastKey","getWeak","onFreeze","meta","NEED","KEY","getGlyphsUnicode","getDingbatsGlyphsUnicode","Typed","TYPED","VIEW","ABV","ArrayBuffer","DataView","CONSTR","TypedArrayConstructors","RangeError","hiddenKeys","getOwnPropertyNames","toIObject","arrayIndexOf","IE_PROTO","names","toAbsoluteIndex","IS_INCLUDES","el","fromIndex","SHARED","aLen","endPos","Iterators","ArrayProto","dPs","Empty","_createDict","iframeDocument","iframe","lt","gt","style","display","contentWindow","open","write","Properties","documentElement","ObjectProto","getPrototypeOf","classof","getIteratorMethod","addToUnscopables","iterated","kind","_t","_i","_k","Arguments","LIBRARY","$iterCreate","setToStringTag","BUGGY","FF_ITERATOR","KEYS","VALUES","returnThis","Base","NAME","DEFAULT","IS_SET","FORCED","methods","IteratorPrototype","getMethod","proto","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","values","DESCRIPTORS","pIE","gOPD","getOwnPropertyDescriptor","test","$iterators","wks","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","defer","channel","port","invoke","html","cel","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","Dispatch","counter","queue","ONREADYSTATECHANGE","run","listener","nextTick","port2","port1","onmessage","importScripts","removeChild","setTimeout","newPromiseCapability","promiseCapability","ChunkedStreamManager","ChunkedStream","manager","loadedChunks","numChunksLoaded","numChunks","progressiveDataLength","lastSuccessfulEnsureByteChunk","getMissingChunks","chunks","allChunksLoaded","onReceiveData","curChunk","beginChunk","endChunk","onReceiveProgressiveData","position","ensureByte","ensureRange","nextEmptyChunk","hasChunk","getByteRange","ChunkedStreamSubstream","missingChunks","subStream","pdfNetworkStream","rangeChunkSize","disableAutoFetch","msgHandler","currRequestId","chunksNeededByRequest","requestsByChunk","promisesByRequest","aborted","_loadedStreamCapability","onLoadedStream","sendRequest","rangeReader","getRangeReader","isStreamingSupported","onProgress","bind","readChunk","read","chunkData","requestAllChunks","_requestChunks","requestId","chunksNeeded","chunksToRequest","groupedChunksToRequest","groupChunks","groupedChunk","getStream","requestRange","getBeginChunk","getEndChunk","requestRanges","ranges","indexOf","groupedChunks","prevChunk","bytesLoaded","total","isProgressive","loadedRequests","requestIds","lastChunk","onError","err","abort","cancelAllRequests","FileSpec","XRef","ObjectLoader","Catalog","_slicedToArray","sliceIterator","_arr","_n","_d","_e","_s","_parser","_chunked_stream","_crypto","_colorspace","pdfManager","pageFactory","catDict","getCatalogObj","fontCache","builtInCMapCache","pageKidsCountCache","pagePromises","metadata","streamRef","encryptMetadata","encrypt","subtype","toplevelPagesDict","pagesObj","documentOutline","readDocumentOutline","parent","processed","blackColor","outlineDict","parseDestDictionary","destDict","resultObj","docBaseUrl","title","flags","rgbColor","outlineItem","unsafeUrl","newWindow","bold","italic","destinations","fetchDestination","nameTreeRef","nameDictionaryRef","dests","nameTree","NameTree","getAll","getDestination","destinationId","pageLabels","readPageLabels","prefix","numberTree","NumberTree","nums","currentLabel","currentIndex","labelDict","st","LIMIT","A_UPPER_CASE","A_LOWER_CASE","baseCharCode","letterIndex","character","charBuf","jj","pageMode","attachments","fs","serializable","appendIfJavaScriptDict","jsDict","js","openactionDict","actionType","cleanup","promises","translatedFonts","translated","getPage","pageIndex","getPageDict","createPage","nodesToVisit","currentNode","pop","currentPageIndex","fetchAsync","kids","last","getPageIndex","pageRef","pagesBeforeRef","kidRef","parentRef","node","kidPromises","kid","addDefaultProtocolToUrl","tryConvertUrlEncoding","urlDict","remoteDest","JSON","stringify","namedAction","jsAction","URL_OPEN_METHODS","regex","RegExp","jsUrl","href","xrefstms","cache","fontTypes","setStartXRef","startXRef","startXRefQueue","trailerDict","indexObjects","readXRef","trailer","ids","fileId","CipherTransformFactory","password","processXRefTable","tableState","entryNum","streamPos","parserBuf1","parserBuf2","readXRefTable","firstEntryNum","entryCount","entry","free","uncompressed","processXRefStream","streamParameters","byteWidths","streamState","entryRanges","readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","splice","readToken","token","LT","skipUntil","dataLength","TAB","PERCENT","objRegExp","trailerBytes","startxrefBytes","endobjBytes","xrefBytes","trailers","xrefStms","contentLength","content","xrefTagOffset","startXRefParsedCache","topDict","getEntry","xrefEntry","fetchUncompressed","fetchCompressed","parseInt","substring","createCipherTransform","tableOffset","streamManager","tryFetch","NameOrNumberTree","_type","kidsOrEntries","loopCount","MAX_LEVELS","limits","currentKey","description","contentAvailable","pickPlatformItem","filename","_filename","contentRef","fileObj","mayHaveChildren","addChildren","dictKeys","rawValue","_ii","refSet","load","_walk","nodesToRevisit","pendingRequests","foundMissingData","_i2","_ii2","_arithmetic_decoder","JpxError","failOnCorruptedImage","calculateComponentDimensions","component","siz","x0","XOsiz","XRsiz","x1","Xsiz","y0","YOsiz","YRsiz","y1","Ysiz","calculateTileGrids","context","components","tile","SIZ","numXtiles","XTOsiz","XTsiz","numYtiles","YTOsiz","YTsiz","tx0","ty0","tx1","ty1","Csiz","tileComponent","tcx0","tcy0","tcx1","tcy1","getBlocksDimensions","codOrCoc","codingStyleParameters","entropyCoderWithCustomPrecincts","PPx","precinctsSizes","PPy","xcb_","xcb","ycb_","ycb","buildPrecincts","resolution","dimensions","precinctWidth","precinctHeight","isZeroRes","resLevel","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","trx1","trx0","numprecinctshigh","try1","try0","numprecincts","precinctParameters","buildCodeblocks","subband","codeblock","precinctNumber","codeblockWidth","codeblockHeight","cbx0","tbx0","cby0","tby0","cbx1","tbx1","cby1","tby1","codeblocks","precincts","cbx","cby","tbx0_","tby0_","tbx1_","tby1_","pi","pj","subbandType","Lblock","precinct","cbxMin","cbxMax","cbyMin","cbyMax","codeblockParameters","numcodeblockwide","numcodeblockhigh","createPacket","layerNumber","precinctCodeblocks","subbands","LayerResolutionComponentPositionIterator","tileIndex","currentTile","layersCount","codingStyleDefaultParameters","maxDecompositionLevelsCount","decompositionLevelsCount","nextPacket","resolutions","packet","ResolutionLayerComponentPositionIterator","ResolutionPositionComponentLayerIterator","maxNumPrecinctsInLevel","maxNumPrecincts","PositionComponentResolutionLayerIterator","getPrecinctSizesInImageScale","precinctsIterationSizes","maxNumHigh","maxNumWide","sizeInImageScale","getPrecinctIndexIfExist","ComponentPositionResolutionLayerIterator","pxIndex","pyIndex","precinctIterationSizes","posX","minWidth","posY","minHeight","startPrecinctRowIndex","MAX_VALUE","sizePerComponent","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","widthCurrentResolution","heightCurrentResolution","buildPackets","blocksDimensions","bscale","resolutionSubbands","progressionOrder","packetsIterator","parseTilePackets","bufferSize","skipNextBit","skipMarkerIfEqual","skipBytes","alignToByte","readCodingpasses","sopMarkerUsed","COD","ephMarkerUsed","valueReady","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","inclusionTree","zeroBitPlanesTree","InclusionTree","TagTree","incrementValue","nextLevel","included","zeroBitPlanes","codingpasses","codingpassesLog2","codedDataLength","packetItem","copyCoefficients","coefficients","levelWidth","levelHeight","delta","mb","reversible","segmentationSymbolUsed","right","bottom","blockWidth","blockHeight","bitModel","currentCodingpassType","BitModel","dataItem","totalLength","encodedData","decoder","ArithmeticDecoder","setDecoder","runSignificancePropagationPass","runMagnitudeRefinementPass","runCleanupPass","checkSegmentationSymbol","nb","coefficentsSign","magnitude","coefficentsMagnitude","bitsDecoded","magnitudeCorrection","interleave","row","levelOffset","transformTile","quantizationParameters","spqcds","SPqcds","scalarExpounded","guardBits","precision","reversibleTransformation","ReversibleTransform","IrreversibleTransform","subbandCoefficients","mu","epsilon","gainLog2","SubbandsGainLog2","calculate","transformComponents","resultImages","transformedTiles","y2","tile0","multipleComponentTransform","fourComponents","y0items","y1items","y2items","y3items","component0","initializeTile","qcdOrQcc","QCC","QCD","COC","LL","LH","HL","HH","head","parseCodestream","headerSize","lbox","tbox","jumpDataLength","method","colorspace","headerType","parseImageProperties","newByte","oldByte","doNotRecover","sqcd","spqcdSize","mainHeader","isSigned","qcd","noQuantization","spqcd","qcc","cqcc","cod","scod","blockStyle","selectiveArithmeticCodingBypass","resetContextProbabilities","terminationOnEachCodingPass","verticalyStripe","predictableTermination","precinctsSize","unsupported","dataEnd","partIndex","partsCount","levelsLength","levels","currentLevel","defaultValue","stopValue","propagateValues","levelIndex","currentValue","contextLabelTable","HHContextLabel","HLContextLabel","LLAndLHContextsLabel","coefficientCount","neighborsSignificance","processingFlags","UNIFORM_CONTEXT","RUNLENGTH_CONTEXT","contexts","Int8Array","setNeighborsSignificance","column","labels","processedInverseMask","processedMask","firstMagnitudeBitMask","i0","i1","contextLabel","decision","readBit","decodeSignBit","contribution","sign0","sign1","significance1","decoded","horizontalContribution","indexNext","width4","index0","significance","bit","iNext","oneRowDown","twoRowsDown","threeRowsDown","indexBase","checkAllEmpty","allEmpty","hasSignificantCoefficent","i2","symbol","Transform","u0","v0","ll","iterate","extend","j1","j2","hl_lh_hh","u","llWidth","llHeight","llItems","bufferPadding","rowBuffer","numBuffers","colBuffers","currentBuffer","current","alpha","beta","K","K_","bp","chigh","clow","byteIn","ct","QeTable","qe","nmps","nlps","switchFlag","cx_index","cx_mps","qeTableIcx","qeIcx","calculateSHA512","calculateSHA384","calculateSHA256","calculateMD5","PDF20","PDF17","ARCFourCipher","AES256Cipher","AES128Cipher","tmp","keyLength","encryptBlock","tmp2","output","decryptBlock","hash","h0","h3","paddedLength","padded","rotateArg","rotate","Word64","highInteger","lowInteger","high","low","and","word","xor","or","shiftRight","places","shiftLeft","rotateRight","not","add","lowAdd","highAdd","copyTo","assign","rotr","z","maj","sigma","sigmaPrime","littleSigma","littleSigmaPrime","h4","h5","h6","h7","t1","t2","h","mode384","tmp3","tmp1","NullCipher","expandKey128","cipherKey","t3","t4","rcon","decrypt128","inv_s","s0","mix","s1","s2","s3","encrypt128","mixCol","bufferPosition","decryptBlock2","sourceLength","iv","plain","outputLength","lastBlock","psLen","cipher","expandKey256","decrypt256","encrypt256","compareByteArrays","array1","array2","checkOwnerPassword","ownerValidationSalt","userBytes","ownerPassword","hashData","checkUserPassword","userValidationSalt","userPassword","getOwnerKey","ownerKeySalt","ownerEncryption","getUserKey","userKeySalt","userEncryption","concatArrays","calculatePDF20Hash","arrayLength","k1","remainder","concatBytes","CipherTransform","stringCipherConstructor","streamCipherConstructor","StringCipherConstructor","StreamCipherConstructor","createEncryptionKey20","revision","uBytes","perms","passwordLength","pdfAlgorithm","prepareKeyData","hashDataSize","defaultPasswordBytes","keyLengthInBytes","checkData","encryptionKey","derivedKey","decodeUserPassword","algorithm","cfDict","streamCryptoName","handlerDict","passwordBytes","fileIdBytes","decodedPassword","cf","stmf","identityName","strf","eff","buildObjectKey","isAes","buildCipherConstructor","cfm","cryptFilter","cipherConstructor","PartialEvaluator","OperatorList","_cmap","_fonts","_encodings","_unicode","_standard_fonts","_pattern","_bidi","_glyphlist","_metrics","_function","_murmurhash","_image","NativeImageDecoder","resources","_ref$forceDataSchema","idFactory","_ref2$options","options","DefaultPartialEvaluatorOptions","fetchBuiltInCMap","cachedCMap","compressionType","TimeSlotManager","normalizeBlendMode","maxImageSize","disableFontFace","nativeImageDecoderSupport","ignoreErrors","canDecode","image","isDecodable","colorSpace","decodePromise","isSupported","TIME_SLOT_DURATION_MS","CHECK_TIME_EVERY","checked","endTime","deferred","TILING_PATTERN","SHADING_PATTERN","newOptions","newEvaluator","hasBlendModes","nodes","graphicStates","graphicStatesKeys","graphicState","bm","xObjects","xObjectsKeys","xObject","xResources","buildFormXObject","xobj","operatorList","task","initialState","bbox","group","groupOptions","isolated","knockout","groupSubtype","backdrop","addOp","getOperatorList","buildPaintImageXObject","inline","imgData","imageMask","bitStrideLength","imgArray","PDFImage","createMask","imageIsFromDecodeStream","inverseDecode","cached","softMask","mask","SMALL_IMAGE_DIMENSIONS","imageObj","createImageData","createObjId","addDependency","nativeImageDecoder","buildImage","nativeDecoder","handleSMask","stateManager","smaskContent","smaskOptions","transferObj","isPDFFunction","transferFn","transferMap","handleTilingType","pattern","patternDict","tilingOpList","resourcesArray","patternResources","getTilingPatternIR","fnArray","argsArray","tilingPatternIR","addDependencies","dependencies","featureId","handleSetFont","fontArgs","fontRef","fontName","loadFont","isType3Font","loadType3Data","TranslatedFont","ErrorFont","loadedName","handleText","chars","_this5","glyphs","charsToGlyphs","isAddToPathSet","textRenderingMode","buildPath","fontChar","renderer","hasBuiltPath","path","getPathJs","glyph","accent","gState","_this6","gStateObj","gStateKeys","_loop","errorFont","_this7","fontRes","fontID","fontCapability","preEvaluatedFont","preEvaluateFont","descriptor","fontRefIsRef","fontAliases","aliasFontRef","Font","getFontID","docId","translatedPromise","translateFont","translatedFont","fontType","xrefFontStats","fontFile3","getFontType","lastIndex","opArgs","handleColorN","patterns","patternName","typeNum","shading","Pattern","parseShading","_ref3","closePendingRestoreOPS","argument","preprocessor","savedStatesDepth","_this8","_ref3$initialState","EvalState","xobjs","StateManager","EvaluatorPreprocessor","timeSlotManager","promiseBody","ensureNotTerminated","stop","operation","resolveXObject","rejectXObject","fontSize","combinedGlyphs","arrLength","arrItem","fillColorSpace","strokeColorSpace","shadingRes","patternIR","dictName","extGState","getTextContent","_ref4","ensureTextContentItem","textContentItem","textState","seenStyles","textContent","styles","fontFamily","fallbackName","ascent","descent","vertical","tsm","textHScale","textRise","fontMatrix","glyphHeight","trm","ctm","textMatrix","textLineMatrix","scaleLineX","scaleCtmX","textAdvanceScale","lastAdvanceWidth","lastAdvanceHeight","spaceWidth","fakeSpaceMin","SPACE_FACTOR","fakeMultiSpaceMin","MULTI_SPACE_FACTOR","fakeMultiSpaceMax","MULTI_SPACE_FACTOR_MAX","textRunBreakAllowed","isMonospace","Infinity","replaceWhitespace","WhitespaceRegexp","runBidiTransform","textChunk","bidiResult","bidi","normalizeWhitespace","dir","buildTextContentItem","glyphWidth","vmetric","glyphUnicode","unicode","NormalizedUnicodes","getNormalizedUnicodes","reverseIfRtl","charSpacing","wordSpacing","addFakeSpaces","tx","ty","w0","translateTextMatrix","fakeSpaces","flushTextContentItem","enqueueChunk","sink","_this9","_ref4$stateManager","_ref4$normalizeWhites","_ref4$combineTextItem","combineTextItems","_ref4$seenStyles","TextState","skipEmptyXObjs","advance","diff","fontNameArg","fontSizeArg","leading","isSameTextLine","translateTextLineMatrix","carriageReturn","calcTextLineMatrixAdvance","setTextLineMatrix","breakTextRun","currentState","xObjStateManager","sinkWrapper","enqueueInvoked","gStateFont","extractDataStructures","baseDict","properties","_this10","toUnicode","toUnicodePromise","readToUnicode","composite","cidSystemInfo","registry","ordering","supplement","cidToGidMap","readCidToGidMap","encoding","differences","baseEncodingName","diffEncoding","defaultEncoding","isSymbolicFont","FontFlags","Symbolic","isNonsymbolicFont","Nonsymbolic","file","hasEncoding","buildToUnicode","hasIncludedToUnicodeMap","charcode","glyphName","glyphsUnicodeMap","substr","getUnicodeForGlyph","baseEncoding","ToUnicodeMap","cMap","builtInCMap","IdentityCMap","ucs2CMapName","CMapFactory","useCMap","ucs2CMap","cid","ucs2","IdentityToUnicodeMap","firstChar","lastChar","cmapObj","cmap","getMap","charCode","cidToGidStream","glyphsData","glyphID","extractWidths","defaultVMetrics","widths","glyphsWidths","defaultWidth","glyphsVMetrics","vmetrics","parseFloat","baseFontName","metrics","getBaseFontMetrics","buildCharCodeToWidth","firstWidth","FixedPitch","isSerifFont","fontNameWoStyle","getSerifFonts","search","monospace","stdFontMap","getStdFontMap","lookupName","Metrics","getMetrics","glyphWidths","widthsByGlyphName","uint8array","df","MurmurHash3_64","update","diffLength","diffBuf","diffEntry","hexdigest","_this11","maxCharIndex","Serif","getSymbolsFonts","baseFont","fontNameStr","baseFontStr","fontFile","length1","length2","length3","wideChars","fixedPitch","xHeight","capHeight","italicAngle","cMapPromise","cidEncoding","type3Loaded","sent","fontData","exportData","evaluator","parentOperatorList","type3Options","type3Evaluator","loadCharProcsPromise","charProcs","fontResources","charProcKeys","charProcOperatorList","_loop2","glyphStream","getTransfers","arg","intent","messageHandler","_totalLength","CHUNK_SIZE","CHUNK_SIZE_ABOUT","flush","addOpList","opList","QueueOptimizer","optimize","stateStack","old","prev","txDiff","tyDiff","denominator","calcRenderMatrix","opMap","getOPMap","nonProcessedArgs","numArgs","variableArgs","opSpec","argsLength","preprocessCommand","addState","parentState","handlePaintSolidColorImageMask","iFirstSave","iFirstPIMXO","InitialState","MIN_IMAGES_IN_INLINE_IMAGES_BLOCK","MAX_IMAGES_IN_INLINE_IMAGES_BLOCK","MAX_WIDTH","IMAGE_PADDING","curr","iCurr","iFirstTransform","iFirstPIIXO","maxX","maxLineHeight","currentX","currentY","imgWidth","imgHeight","rowSize","dataOffset","MIN_IMAGES_IN_MASKS_BLOCK","MAX_IMAGES_IN_MASKS_BLOCK","MAX_SAME_IMAGES_IN_MASKS_BLOCK","iTransform","transformArgs","isSameImage","firstPIMXOArg0","firstTransformArg0","firstTransformArg3","iPIMXO","positions","images","maskParams","MIN_IMAGES_IN_BLOCK","MAX_IMAGES_IN_BLOCK","iFirstPIXO","iFirstRestore","firstPIXOArg0","MIN_CHARS_IN_BLOCK","MAX_CHARS_IN_BLOCK","iFirstBeginText","iFirstSetFont","iFirstSetTextMatrix","iFirstShowText","iFirstEndText","firstSetFontArg0","firstSetFontArg1","iFirst","iEndText","CFFCompiler","CFFPrivateDict","CFFTopDict","CFFCharset","CFFIndex","CFFStrings","CFFHeader","CFF","CFFParser","CFFStandardStrings","_charsets","MAX_SUBR_NESTING","seacAnalysisEnabled","CharstringValidationData","stackClearing","stem","resetStack","undefStack","CharstringValidationData12","stackDelta","stackFn","stack","cff","header","parseHeader","nameIndex","parseIndex","topDictIndex","stringIndex","globalSubrIndex","topDictParsed","parseDict","createDict","strings","parseNameIndex","parseStringIndex","parsePrivateDict","isCIDFont","hasName","charStringOffset","getByName","charStringIndex","fontBBox","ascentScaled","charset","fdArrayIndex","dictRaw","fontDict","fdArray","parseCharsets","fdSelect","parseFDSelect","parseEncoding","charStringsAndSeacs","parseCharStrings","charStrings","localSubrIndex","privateDict","subrsIndex","seacs","bytesLength","major","minor","hdrSize","offSize","parseOperand","parseFloatOperand","NaN","operands","cffIndex","offsets","offsetSize","offsetStart","offsetEnd","Type","cffDict","pair","setByKey","parseCharString","callDepth","stackSize","validationCommand","seac","bias","subrNumber","valid","firstStackClearing","charstring","localSubrToUse","privateDictToUse","fdIndex","getFDIndex","nominalWidth","emptyPrivateDictionary","parentDict","privateOffset","removeByName","privateDictEnd","dictData","subrsOffset","relativeOffset","CFFCharsetPredefinedTypes","ISO_ADOBE","ISOAdobeCharset","EXPERT","ExpertCharset","EXPERT_SUBSET","ExpertSubsetCharset","format","raw","readSupplement","supplementsCount","sid","predefined","dataStart","glyphsCount","rangesCount","gid","CFFEncoding","invalidFirstGID","CFFFDSelect","objects","CFFDict","tables","keyToNameMap","nameToKeyMap","defaults","types","opcodes","order","valueLength","setByName","createTables","layout","glyphIndex","CFFOffsetTracker","isTracking","track","location","setEntryLocation","offset0","offset1","offset2","offset3","offset4","compile","compileHeader","compileNameIndex","subDict","compiled","compileTopDicts","topDictTracker","trackers","compileStringIndex","compileIndex","compileEncoding","compileCharset","compileCharStrings","compileFDSelect","fontDictTrackers","compilePrivateDicts","encodeNumber","encodeFloat","encodeInteger","nibbles","sanitizedName","char","dicts","removeCidKeys","fontDictTracker","fontDictData","compileDict","privateDictTracker","privateDictData","subrs","offsetTracker","compileGlobalSubrIndex","writeByteArray","compileTypedArray","lastOffset","getSupplementalGlyphMapForArialBlack","getGlyphMapForStandardFonts","getNonStdFontMap","mapSpecialUnicodeValues","getSpecialPUASymbols","hexStr","nameLen","toUpperCase","getUnicodeRangeFor","UnicodeRanges","isRTLRangeFor","charsLength","_classCallCheck","instance","fnDict","PostScriptCompiler","PostScriptEvaluator","PDFFunctionFactory","_createClass","defineProperties","props","protoProps","staticProps","_ps_parser","IsEvalSupportedCached","_ref$isEvalSupported","PDFFunction","fnObj","parseArray","CONSTRUCT_SAMPLED","CONSTRUCT_INTERPOLATED","CONSTRUCT_STICHED","CONSTRUCT_POSTSCRIPT","getSampleArray","outputSize","bps","sampleMul","strBytes","strIdx","constructSampled","constructInterpolated","constructStiched","constructPostScript","typeFn","constructSampledFromIR","constructInterpolatedFromIR","constructStichedFromIR","constructPostScriptFromIR","_ref5","_ref6","toMultiArray","domain","inputSize","encode","samples","_ref7","interpolate","xmin","xmax","ymin","ymax","cubeVertices","cubeN","Float64Array","cubeVertex","domain_2i","domain_2i_1","xi","size_i","e0","n0","n1","rj","_ref8","c0","c1","_ref9","_ref10","fnRefs","fns","bounds","_ref11","fnsIR","dmin","dmax","rmin","rmax","_ref12","PostScriptLexer","PostScriptParser","_ref13","numOutputs","numInputs","MAX_CACHE_SIZE","cache_available","cachedValue","execute","stackIndex","bound","PostScriptStack","initialStack","MAX_STACK_SIZE","copy","roll","operators","operator","atan","cos","LN10","sin","AstNode","AstArgument","AstLiteral","AstBinaryOperation","op","arg1","arg2","AstMin","AstVariable","AstVariableDefinition","variable","ExpressionBuilderVisitor","parts","buildAddOperation","num1","num2","buildMulOperation","buildSubOperation","buildMinOperation","visit","visitor","visitArgument","visitLiteral","visitBinaryOperation","visitMin","visitVariable","visitVariableDefinition","literal","definition","ast1","ast2","tmpVar","instructions","lastRegister","instruction","statementBuilder","expr","pdfjsCoreWorker","WorkerMessageHandler","isMessagePort","maybePort","WorkerTask","_pdf_manager","terminated","_capability","finished","finish","terminate","PDFWorkerStream","_msgHandler","_contentLength","_fullRequestReader","_rangeRequestReaders","PDFWorkerStreamReader","_isRangeSupported","_isStreamingSupported","readableStream","_reader","getReader","_headersReady","isRangeSupported","PDFWorkerStreamRangeReader","getFullReader","reader","readers","headersReady","setup","testMessageProcessed","supportTransfers","xhr","XMLHttpRequest","responseExists","responseType","supportTypedArray","createDocumentHandler","docParams","startWorkerTask","WorkerTasks","finishWorkerTask","loadDocument","loadDocumentCapability","parseSuccess","numPagesPromise","ensureDoc","fingerprintPromise","encryptedPromise","ensureXRef","results","doc","fingerprint","encrypted","parseFailure","getPdfManager","evaluatorOptions","pdfManagerCapability","LocalPdfManager","pdfStream","cachedChunks","fullRequest","NetworkPdfManager","sendProgressiveData","cancelXHRs","flushChunks","pdfFile","readPromise","setupDoc","onSuccess","pdfInfo","onFailure","updatePassword","pdfManagerReady","requestLoadedStream","disableCreateObjectURL","newPdfManager","apiVersion","workerVersion","workerHandlerName","page","rotatePromise","ensure","refPromise","userUnitPromise","viewPromise","userUnit","view","catalog","pdfDocument","ensureCatalog","pageNum","renderInteractiveForms","wrappedException","minimumStackMessage","extractTextContent","waitOn","initializeFromPort","PDFJS","compatibilityChecked","globalScope","userAgent","navigator","isAndroid","isAndroidPre3","isAndroidPre5","isChrome","isChromeWithRangeBug","isIOSChrome","isIE","isIOS","isOpera","isSafari","hasDOM","TypedArray","setArrayOffset","Uint32ArrayView","ensureUint32ArrayViewProps","createUint32ArrayProp","uint32ArrayViewSetters","CanvasPixelArray","cpaProto","webkitURL","definePropertyPossible","Test","__defineGetter__","__defineSetter__","xhrPrototype","mimeType","_responseType","overrideMimeType","VBArray","responseBody","toArray","responseText","text","btoa","atob","bc","idx","headArgs","div","HTMLElement","_dataset","dataset","attributes","attribute","changeList","element","itemName","className","list","classListPrototype","contains","toggle","_classList","classList","consoleTimer","workerConsole","ignoreIfTargetDisabled","isDisabled","stopPropagation","disabled","parentNode","locale","userLanguage","disableRange","disableStream","history","pushState","disableHistory","versionMatch","polyfill","match","contextPrototype","CanvasRenderingContext2D","imageData","installFakeAnimationFrameFunctions","requestAnimationFrame","cancelAnimationFrame","timeoutID","clearTimeout","mozRequestAnimationFrame","webkitRequestAnimationFrame","maxCanvasPixels","disableFullscreen","scripts","inputProto","typeProperty","attachEvent","documentProto","readyStateProto","Element","WeakMap","isRelativeScheme","scheme","relative","invalid","_isInvalid","IDNAToASCII","percentEscape","percentEscapeQuery","stateOverride","cursor","seenAt","seenBracket","loop","ALPHA","ALPHANUMERIC","_scheme","_isRelative","_query","_fragment","_schemeData","_host","_port","_path","_username","_password","nextC","nextNextC","cp","tempC","temp","relativePathDotMapping","JURL","_url","hasWorkingUrl","pathname","authority","host","hostname","_","OriginalURL","revokeObjectURL","init","byteOffset","fails","$typed","$buffer","anInstance","propertyDesc","redefineAll","toIndex","gOPN","createArrayMethod","createArrayIncludes","speciesConstructor","ArrayIterators","$iterDetect","setSpecies","arrayFill","arrayCopyWithin","$DP","$GOPD","ARRAY_BUFFER","SHARED_BUFFER","BYTES_PER_ELEMENT","$ArrayBuffer","$DataView","arrayForEach","arrayFilter","arraySome","arrayEvery","arrayFind","arrayFindIndex","arrayIncludes","arrayValues","arrayKeys","arrayEntries","arrayLastIndexOf","lastIndexOf","arrayReduce","reduce","arrayReduceRight","reduceRight","arrayJoin","arraySort","arraySlice","arrayToString","arrayToLocaleString","toLocaleString","TYPED_CONSTRUCTOR","DEF_CONSTRUCTOR","ALL_CONSTRUCTORS","TYPED_ARRAY","WRONG_LENGTH","$map","allocate","LITTLE_ENDIAN","FORCED_SET","toOffset","BYTES","validate","speciesFromList","fromList","addGetter","internal","$from","mapfn","mapping","$of","TO_LOCALE_BUG","$toLocaleString","copyWithin","every","find","predicate","findIndex","searchElement","includes","separator","reverse","middle","some","comparefn","$begin","$slice","$set","arrayLike","isTAIndex","$getDesc","$setDesc","desc","$TypedArrayPrototype$","wrapper","CLAMPED","GETTER","SETTER","TAC","TypedArrayPrototype","setter","addElement","$offset","$length","klass","$len","$nativeIterator","CORRECT_ITER_NAME","$iterator","of","packIEEE754","mLen","nBytes","eLen","eMax","eBias","rt","LN2","unpackIEEE754","nBits","unpackI32","packI8","packI16","packI32","packF64","packF32","numIndex","intIndex","$LENGTH","WRONG_INDEX","$BUFFER","_b","$OFFSET","pack","conversion","DATA_VIEW","BaseBuffer","BUFFER","BYTE_LENGTH","BYTE_OFFSET","ArrayBufferProto","$setInt8","setInt8","getInt8","setUint8","getUint8","getInt16","getUint32","getFloat32","getFloat64","setInt16","setUint16","setInt32","setUint32","setFloat32","setFloat64","original","UNSCOPABLES","to","inc","isFinite","$at","point","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","forOf","microtask","newPromiseCapabilityModule","perform","promiseResolve","PROMISE","$Promise","isNode","USE_NATIVE","FakePromise","PromiseRejectionEvent","isThenable","notify","isReject","chain","_c","_v","ok","reaction","fail","_h","onHandleUnhandled","enter","exit","onUnhandled","unhandled","isUnhandled","emit","onunhandledrejection","_a","onrejectionhandled","$reject","_w","$resolve","executor","onFulfilled","onRejected","remaining","$index","alreadyCalled","race","ret","un","macrotask","Observer","MutationObserver","WebKitMutationObserver","createTextNode","observe","characterData","finally","onFinally","try","InternalMap","each","weak","WEAK_MAP","uncaughtFrozenStore","ufstore","$WeakMap","freeze","getConstructor","_f","gOPS","$assign","getSymbols","isEnum","getOwnPropertySymbols","$has","_l","UncaughtFrozenStore","findUncaughtFrozen","delete","ADDER","inheritIfRequired","common","IS_WEAK","fixMethod","HASNT_CHAINING","THROWS_ON_PRIMITIVES","ACCEPT_ITERABLES","BUGGY_ZERO","$instance","setStrong","setPrototypeOf","buggy","__proto__","COLLECTION","cb","mapFn","nextItem","isReadableStreamSupported","_typeof2","IsPropertyKey","Call","V","_require","typeIsObject","createDataProperty","createArrayFromList","elements","ArrayBufferCopy","CreateIterResultObject","IsFiniteNonNegativeNumber","InvokeOrNoop","PromiseInvokeOrNoop","returnValueE","PromiseInvokeOrPerformFallback","argsF","methodE","TransferArrayBuffer","ValidateAndNormalizeHighWaterMark","highWaterMark","ValidateAndNormalizeQueuingStrategy","rethrowAssertionErrorRejection","AssertionError","AcquireWritableStreamDefaultWriter","WritableStreamDefaultWriter","IsWritableStream","IsWritableStreamLocked","_writer","WritableStreamAbort","_state","_storedError","_pendingAbortRequest","wasAlreadyErroring","_resolve","_reject","_reason","_wasAlreadyErroring","WritableStreamStartErroring","WritableStreamAddWriteRequest","writeRequest","_writeRequests","WritableStreamDealWithRejection","WritableStreamFinishErroring","_writableStreamController","writer","WritableStreamDefaultWriterEnsureReadyPromiseRejected","WritableStreamHasOperationMarkedInFlight","_started","__errorSteps","storedError","WritableStreamRejectCloseAndClosedPromiseIfNeeded","abortRequest","__abortSteps","WritableStreamFinishInFlightWrite","_inFlightWriteRequest","WritableStreamFinishInFlightWriteWithError","WritableStreamFinishInFlightClose","_inFlightCloseRequest","defaultWriterClosedPromiseResolve","WritableStreamFinishInFlightCloseWithError","WritableStreamCloseQueuedOrInFlight","_closeRequest","WritableStreamMarkCloseRequestInFlight","WritableStreamMarkFirstWriteRequestInFlight","defaultWriterClosedPromiseReject","_closedPromise","WritableStreamUpdateBackpressure","backpressure","_backpressure","defaultWriterReadyPromiseReset","defaultWriterReadyPromiseResolve","IsWritableStreamDefaultWriter","WritableStreamDefaultWriterAbort","_ownerWritableStream","WritableStreamDefaultWriterClose","closeRequest","WritableStreamDefaultControllerClose","WritableStreamDefaultWriterCloseWithErrorPropagation","WritableStreamDefaultWriterEnsureClosedPromiseRejected","_closedPromiseState","defaultWriterClosedPromiseResetToRejected","_readyPromiseState","defaultWriterReadyPromiseReject","defaultWriterReadyPromiseResetToRejected","_readyPromise","WritableStreamDefaultWriterGetDesiredSize","WritableStreamDefaultControllerGetDesiredSize","WritableStreamDefaultWriterRelease","releasedError","WritableStreamDefaultWriterWrite","WritableStreamDefaultControllerGetChunkSize","defaultWriterLockException","WritableStreamDefaultControllerWrite","EnqueueValueWithSize","WritableStreamDefaultControllerAdvanceQueueIfNeeded","strategySize","_strategySize","chunkSizeE","WritableStreamDefaultControllerErrorIfNeeded","_strategyHWM","_queueTotalSize","writeRecord","enqueueE","_controlledWritableStream","WritableStreamDefaultControllerGetBackpressure","IsWritableStreamDefaultController","_queue","PeekQueueValue","WritableStreamDefaultControllerProcessClose","WritableStreamDefaultControllerProcessWrite","WritableStreamDefaultControllerError","DequeueValue","sinkClosePromise","_underlyingSink","sinkWritePromise","streamBrandCheckException","defaultWriterBrandCheckException","defaultWriterClosedPromiseInitialize","_closedPromise_resolve","_closedPromise_reject","defaultWriterClosedPromiseInitializeAsRejected","defaultWriterClosedPromiseInitializeAsResolved","defaultWriterReadyPromiseInitialize","_readyPromise_resolve","_readyPromise_reject","defaultWriterReadyPromiseInitializeAsRejected","defaultWriterReadyPromiseInitializeAsResolved","_require2","_require3","ResetQueue","WritableStream","underlyingSink","_ref$highWaterMark","WritableStreamDefaultController","__startSteps","normalizedStrategy","startResult","container","AcquireReadableStreamBYOBReader","ReadableStreamBYOBReader","AcquireReadableStreamDefaultReader","ReadableStreamDefaultReader","IsReadableStream","IsReadableStreamDisturbed","_disturbed","IsReadableStreamLocked","ReadableStreamTee","cloneForBranch2","teeState","closedOrErrored","canceled1","canceled2","reason1","reason2","create_ReadableStreamTeePullFunction","_teeState","_cloneForBranch2","cancel1","create_ReadableStreamTeeBranch1CancelFunction","cancel2","create_ReadableStreamTeeBranch2CancelFunction","underlyingSource1","branch1Stream","underlyingSource2","branch2Stream","_branch1","_readableStreamController","_branch2","ReadableStreamDefaultControllerError","branch1","branch2","ReadableStreamDefaultReaderRead","ReadableStreamDefaultControllerClose","value1","value2","ReadableStreamDefaultControllerEnqueue","compositeReason","cancelResult","ReadableStreamCancel","ReadableStreamAddReadIntoRequest","IsReadableStreamBYOBReader","readIntoRequest","_readIntoRequests","ReadableStreamAddReadRequest","IsReadableStreamDefaultReader","readRequest","_readRequests","ReadableStreamClose","sourceCancelPromise","__cancelSteps","defaultReaderClosedPromiseResolve","ReadableStreamError","defaultReaderClosedPromiseReject","ReadableStreamFulfillReadIntoRequest","ReadableStreamFulfillReadRequest","ReadableStreamGetNumReadIntoRequests","ReadableStreamGetNumReadRequests","ReadableStreamHasBYOBReader","ReadableStreamHasDefaultReader","ReadableStreamReaderGenericInitialize","_ownerReadableStream","defaultReaderClosedPromiseInitialize","defaultReaderClosedPromiseInitializeAsResolved","defaultReaderClosedPromiseInitializeAsRejected","ReadableStreamReaderGenericCancel","ReadableStreamReaderGenericRelease","defaultReaderClosedPromiseResetToRejected","ReadableStreamBYOBReaderRead","ReadableByteStreamControllerPullInto","__pullSteps","IsReadableStreamDefaultController","ReadableStreamDefaultControllerCallPullIfNeeded","shouldPull","ReadableStreamDefaultControllerShouldCallPull","_pulling","_pullAgain","pullPromise","_underlyingSource","ReadableStreamDefaultControllerErrorIfNeeded","_controlledReadableStream","_closeRequested","ReadableStreamDefaultControllerGetDesiredSize","IsReadableByteStreamController","IsReadableStreamBYOBRequest","ReadableByteStreamControllerCallPullIfNeeded","ReadableByteStreamControllerShouldCallPull","_underlyingByteSource","ReadableByteStreamControllerError","ReadableByteStreamControllerClearPendingPullIntos","ReadableByteStreamControllerInvalidateBYOBRequest","_pendingPullIntos","ReadableByteStreamControllerCommitPullIntoDescriptor","pullIntoDescriptor","bytesFilled","filledView","ReadableByteStreamControllerConvertPullIntoDescriptor","readerType","elementSize","ctor","ReadableByteStreamControllerEnqueueChunkToQueue","ReadableByteStreamControllerFillPullIntoDescriptorFromQueue","currentAlignedBytes","maxBytesToCopy","maxBytesFilled","maxAlignedBytes","totalBytesToCopyRemaining","headOfQueue","bytesToCopy","destStart","ReadableByteStreamControllerFillHeadPullIntoDescriptor","ReadableByteStreamControllerHandleQueueDrain","_byobRequest","_associatedReadableByteStreamController","_view","ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue","ReadableByteStreamControllerShiftPendingPullInto","emptyView","ReadableByteStreamControllerRespondInClosedState","firstDescriptor","ReadableByteStreamControllerRespondInReadableState","bytesWritten","remainderSize","ReadableByteStreamControllerRespondInternal","ReadableByteStreamControllerGetDesiredSize","ReadableByteStreamControllerClose","firstPendingPullInto","ReadableByteStreamControllerEnqueue","transferredBuffer","transferredView","ReadableByteStreamControllerRespond","ReadableByteStreamControllerRespondWithNewView","readerLockException","defaultReaderBrandCheckException","byobReaderBrandCheckException","defaultControllerBrandCheckException","byobRequestBrandCheckException","byteStreamControllerBrandCheckException","ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue","_require4","_require5","underlyingSource","typeString","ReadableByteStreamController","ReadableStreamDefaultController","readable","pipeTo","preventClose","preventAbort","preventCancel","Boolean","shuttingDown","currentWrite","pipeLoop","waitForWritesToFinish","oldCurrentWrite","isOrBecomesErrored","isOrBecomesClosed","shutdownWithAction","originalIsError","originalError","doTheRest","newError","shutdown","isError","destClosed","branches","isView","pendingPromise","ReadableStreamBYOBRequest","underlyingByteSource","autoAllocateChunkSize","_autoAllocateChunkSize","viewE","bufferE","transformStream","writableStream","TransformStream","TransformStreamCloseReadable","_errored","_readableClosed","TransformStreamCloseReadableInternal","TransformStreamEnqueueToReadable","_readableController","TransformStreamErrorIfNeeded","maybeBackpressure","TransformStreamSetBackpressure","TransformStreamError","TransformStreamErrorInternal","_writableDone","_writableController","TransformStreamReadableReadyPromise","_backpressureChangePromise","_backpressureChangePromise_resolve","TransformStreamDefaultTransform","transformStreamController","_controlledTransformStream","TransformStreamTransform","_transforming","transformer","_transformer","_transformStreamController","transformPromise","IsTransformStreamDefaultController","IsTransformStream","TransformStreamSink","startPromise","_transformStream","_startPromise","flushPromise","TransformStreamSource","TransformStreamDefaultController","readableController","readableStrategy","writableStrategy","startPromise_resolve","_readable","_writable","_document","BasePdfManager","_docId","_docBaseUrl","PDFDocument","ensureHelper","Page","_obj","_evaluator","_annotation","isAnnotationRenderable","annotation","viewable","printable","pageDict","resourcesPromise","uniquePrefix","idCounters","DEFAULT_USER_UNIT","LETTER_SIZE_MEDIABOX","getPageProp","getInheritedPageProp","valueArray","MAX_LOOP_COUNT","mediaBox","cropBox","intersection","getContentStream","loadResources","objectLoader","contentStreamPromise","partialEvaluator","dataPromises","pageListPromise","contentStream","transparency","annotationsPromise","pageOpList","annotations","opListPromises","opLists","getAnnotationsData","annotationsData","annotationRefs","annotationRef","AnnotationFactory","needle","backwards","FINGERPRINT_FIRST_BYTES","EMPTY_FINGERPRINT","DocumentInfoValidators","Title","Author","Subject","Keywords","Creator","Producer","CreationDate","ModDate","Trapped","pdfFormatVersion","acroForm","xfa","fields","linearization","checkHeader","MAX_VERSION_LENGTH","parseStartXRef","documentInfo","infoDict","docInfo","PDFFormatVersion","IsAcroFormPresent","IsXFAPresent","validEntries","fileID","idArray","hex","JpegError","buildHuffmanTable","children","getBlockBufferOffset","col","blocksPerLine","decodeScan","frame","resetInterval","spectralStart","spectralEnd","successivePrev","successive","bitsCount","bitsData","nextByte","decodeHuffman","tree","receive","receiveAndExtend","decodeBaseline","huffmanTableDC","blockData","pred","rs","huffmanTableAC","dctZigZag","decodeDCFirst","decodeDCSuccessive","decodeACFirst","eobrun","decodeACSuccessive","successiveACState","successiveACNextValue","decodeMcu","mcu","mcuRow","mcusPerLine","mcuCol","blockRow","blockCol","decodeBlock","decodeFn","progressive","startOffset","componentsLength","fileMarker","mcuExpected","blocksPerColumn","mcusPerColumn","mcuToRead","findNextFileMarker","marker","quantizeAndInverse","blockBufferOffset","v3","v4","v5","v6","v7","p0","p5","p6","p7","qt","quantizationTable","dctSqrt2","dctSqrt1d2","dctSin6","dctCos6","dctSin3","dctCos3","dctSin1","dctCos1","buildComponentData","computationBuffer","Int16Array","currentPos","peekUint16","maxPos","newPos","currentMarker","newMarker","readDataBlock","endOffset","prepareComponents","samplesPerLine","maxH","scanLines","maxV","blocksPerLineForMcu","blocksPerColumnForMcu","blocksBufferSize","jfif","adobe","quantizationTables","huffmanTablesAC","huffmanTablesDC","appData","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesLength","quantizationTablesEnd","quantizationTableSpec","tableData","extended","componentIds","componentId","qId","quantizationId","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","componentIndex","tableSpec","successiveApproximation","scaleX","scaleY","numComponents","_getLinearizedBlockData","componentScaleX","componentScaleY","blocksPerScanline","xScaleBlockOffset","mask3LSB","_isColorConversionNeeded","_convertYccToRgb","Cb","Cr","_convertYcckToRgb","_convertYcckToCmyk","_convertCmykToRgb","forceRGBoutput","rgbData","grayColor","_ccitt","ccittFaxDecoder","CCITTFaxDecoder","EndOfLine","EncodedByteAlign","Columns","Rows","EndOfBlock","BlackIs1","readNextChar","eoline","byteAlign","rows","eoblock","black","codingLine","refLine","codingPos","nextLine2D","inputBits","inputBuf","outputBits","rowsDone","_lookBits","_eatBits","ccittEOL","ccittEOF","twoDimPass","twoDimHoriz","twoDimVert0","twoDimVertR1","twoDimVertL1","twoDimVertR2","twoDimVertL2","twoDimVertR3","twoDimVertL3","twoDimTable","whiteTable1","whiteTable2","blackTable1","blackTable2","blackTable3","refPos","blackPixels","code3","_getTwoDimCode","_addPixels","_getBlackCode","_getWhiteCode","_addPixelsNeg","gotEOL","a1","_findTableCode","limitValue","_jbig","jbig2Image","Jbig2Image","globalsStream","globals","parseChunks","Jbig2Error","ContextCache","DecodingContext","decodeInteger","contextCache","procedure","getContexts","decodeIAID","decodeBitmapTemplate0","decodingContext","pixel","row1","row2","OLD_PIXEL_MASK","decodeBitmap","mmr","templateIndex","prediction","at","useskip","template","CodingTemplates","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","minX","minY","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","j0","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ReusedContexts","ltp","sltp","decodeRefinement","referenceBitmap","codingTemplate","RefinementTemplates","coding","codingTemplateLength","codingTemplateX","codingTemplateY","referenceTemplate","reference","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","RefinementReusedContexts","decodeSymbolDictionary","huffman","refinement","symbols","numberOfNewSymbols","numberOfExportedSymbols","huffmanTables","refinementTemplateIndex","refinementAt","newSymbols","currentHeight","symbolCodeLength","deltaHeight","currentWidth","deltaWidth","numberOfInstances","decodeTextRegion","symbolId","rdx","rdy","exportedSymbols","currentFlag","totalSymbolsLength","runLength","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","transposed","dsOffset","referenceCorner","combinationOperator","stripT","firstS","deltaT","deltaFirstS","currentS","currentT","applyRefinement","symbolBitmap","symbolWidth","symbolHeight","rdw","rdh","symbolRow","offsetT","offsetS","maxWidth","deltaS","decodePatternDictionary","patternWidth","patternHeight","maxPatternIndex","collectiveWidth","collectiveBitmap","patternBitmap","xMin","xMax","decodeHalftoneRegion","regionWidth","regionHeight","enableSkip","gridWidth","gridHeight","gridOffsetX","gridOffsetY","gridVectorX","gridVectorY","regionBitmap","numberOfPatterns","pattern0","bitsPerValue","grayScaleBitPlanes","mg","ng","patternIndex","patternRow","regionRow","regionX","regionY","readSegmentHeader","segmentHeader","segmentType","SegmentTypes","typeName","deferredNonRetain","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","referredToSegmentNumberSize","referredTo","pageAssociation","genericRegionInfo","readRegionSegmentInformation","genericRegionSegmentFlags","RegionSegmentInformationFieldLength","genericRegionMmr","searchPatternLength","searchPattern","headerEnd","readSegments","segments","segment","randomAccess","processSegment","atLength","dictionary","dictionaryFlags","huffmanDHSelector","huffmanDWSelector","bitmapSizeSelector","aggregationInstancesSelector","bitmapCodingContextUsed","bitmapCodingContextRetained","refinementTemplate","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","huffmanFS","huffmanDS","huffmanDT","huffmanRefinementDW","huffmanRefinementDH","huffmanRefinementDX","huffmanRefinementDY","huffmanRefinementSizeSelector","patternDictionary","patternDictionaryFlags","halftoneRegion","halftoneRegionFlags","genericRegion","pageInfo","resolutionX","resolutionY","pageSegmentFlags","lossless","requiresBuffer","combinationOperatorOverride","callbackName","processSegments","parseJbig2Chunks","SimpleSegmentVisitor","onPageInformation","currentPageInfo","drawBitmap","regionInfo","mask0","onImmediateGenericRegion","region","onImmediateLosslessGenericRegion","onSymbolDictionary","currentSegment","referredSegments","onImmediateTextRegion","onImmediateLosslessTextRegion","onPatternDictionary","onImmediateHalftoneRegion","onImmediateLosslessHalftoneRegion","CMap","BUILT_IN_CMAPS","codespaceRanges","numCodespaceRanges","addCodespaceRange","mapCidRange","dstLow","mapBfRange","lastByte","mapBfRangeToArray","mapOne","dst","charCodeOf","readCharCode","codespaceRangesLen","codespaceRange","isIdentityCMap","BinaryCMapReader","hexToInt","hexToStr","addHex","incHex","BinaryCMapStream","MAX_ENCODED_NUM_SIZE","processBinaryCMap","readByte","MAX_NUM_SIZE","sequence","dataSize","ucs2DataSize","subitemsCount","readNumber","readHex","readHexNumber","readSigned","readHexSigned","readString","sp","strToInt","expectString","expectInt","parseBfChar","parseBfRange","parseCidChar","parseCidRange","parseCodespaceRange","parseWMode","parseCMapName","parseCMap","previous","embededUseCMap","objLoop","extendCMap","createBuiltInCMap","newCMap","useCodespaceRanges","cMapData","parsedCMap","adjustWidths","adjustToUnicode","builtInEncoding","amend","recoverGlyphName","type1FontGlyphMapping","glyphNames","glyphId","charCodeToGlyphId","standardGlyphName","ProblematicCharRanges","PRIVATE_USE_OFFSET_END","PRIVATE_USE_OFFSET_START","SEAC_ANALYSIS_ENABLED","_cff_parser","_font_renderer","_type1_parser","SKIP_PRIVATE_USE_RANGE_F000_TO_F01F","PDF_GLYPH_SPACE_UNITS","Script","Italic","AllCap","SmallCap","ForceBold","MacStandardGlyphOrdering","Glyph","operatorListId","isInFont","matchesForCache","OpenTypeFileBuilder","writeInt16","writeInt32","writeData","sfnt","getSearchParams","entriesCount","entrySize","maxPower2","searchRange","rangeShift","OTF_HEADER_SIZE","OTF_TABLE_ENTRY_SIZE","tablesNames","tableName","numTables","tableOffsets","searchParams","checksum","quad","addTable","sizes","missingFile","glyphCache","toFontChar","fallbackToSystemFont","isTrueTypeFile","isOpenTypeFile","isType1File","mimetype","CFFFont","Type1Font","convert","checkAndRepair","isOpenType","seacMap","loading","int16","writeSignedInt16","signedInt16","int32","string16","safeString16","buildToFontChar","isProblematicUnicodeLocation","adjustMapping","missingGlyphs","isSymbolic","isIdentityUnicode","newMap","usedFontCharCodes","nextAvailableFontCharCode","originalCharCode","fontCharCode","hasUnicodeValue","getRanges","numGlyphs","codeIndices","createCmapTable","bmpLength","trailingRangesCount","segCount","startCount","endCount","idDeltas","idRangeOffsets","glyphsIds","contiguous","startCode","format314","format31012","header31012","validateOS2Table","os2","selection","usWinAscent","createOS2Table","charstrings","override","unitsPerEm","yMax","yMin","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","firstCharIndex","lastCharIndex","typoAscent","typoDescent","winAscent","winDescent","createPostTable","angle","createNameTable","stringsUnicode","strBufUnicode","platforms","encodings","languages","namesRecordCount","nameTable","strOffset","strs","nameRecord","ID","FontRendererFactory","nonStdFontMap","isStandardFont","remeasure","GlyphMapForStandardFonts","SupplementalGlyphMapForArialBlack","unicodeCharCode","readTableEntry","previousPosition","readOpenTypeHeader","ttf","entrySelector","readCmapTable","platformId","encodingId","mappings","hasShortCmap","potentialTable","canBreak","useTable","segIndex","offsetsCount","rangeOffset","offsetIndex","firstCode","sanitizeMetrics","numOfMetrics","numOfSidebearings","numMissing","sanitizeGlyph","sourceStart","sourceEnd","hintsValid","glyphProfile","sizeOfInstructions","glyf","contoursCount","flagsCount","endPoint","instructionsStart","instructionsLength","instructionsEnd","coordinatesLength","flag","xyLength","repeat","glyphDataLength","sanitizeHead","locaLength","indexToLocFormat","numGlyphsPlusOne","sanitizeGlyphLocations","loca","isGlyphLocationsLong","dupFirstEntry","maxSizeOfInstructions","itemSize","itemDecode","itemEncode","locaData","locaDataSize","oldGlyfData","oldGlyfDataLength","newGlyfData","writeOffset","locaCount","simpleGlyph","firstEntryLength","readPostScriptTable","post","maxpNumGlyphs","glyphNameIndexes","customNames","stringLength","readNameTable","FORMAT_0_HEADER_LENGTH","numRecords","stringsStart","records","NAME_RECORD_LENGTH","platform","language","record","sanitizeTTProgram","ttContext","funcId","lastEndf","lastDeff","callstack","functionsCalled","tooComplexToFollowFunctions","inFDEF","ifLevel","inELSE","functionsStackDeltas","stackTop","functionsDefined","functionsUsed","TTOpsStackDeltas","foldTTTable","checkInvalidFunctions","maxFunctionDefs","sanitizeTTPrograms","fpgm","prep","cvt","cvtData","hasGlyph","cffFile","VALID_TABLES","isTrueType","maxZones","glyphsInfo","metricsOverride","isCidToGidMapEmpty","cmapTable","cmapPlatformId","cmapEncodingId","cmapMappings","cmapMappingsLength","unicodeOrCharCode","newMapping","compiler","namePrototype","builder","tableTag","getCharCodes","charCodes","createCharCode","getGlyphMapping","getCharset","baseGlyphName","accentGlyphName","baseGlyphId","accentGlyphId","accentOffset","baseFontCharCode","accentFontCharCode","tan","cffWidths","hmtx","_shadowWidth","possibleSpaceReplacements","charToGlyph","widthCode","charsCache","charsCacheKey","findBlock","streamBytes","signature","startIndex","streamBytesLength","signatureLength","getHeaderBlock","suggestedLength","headerBytes","headerBytesLength","block","EEXEC_SIGNATURE","streamStartPos","actualLength","SCAN_BLOCK_LENGTH","getEexecBlock","eexecBytes","PFB_HEADER_SIZE","headerBlockLength","eexecBlockLength","pfbHeader","pfbHeaderPresent","headerBlock","headerBlockParser","Type1Parser","extractFontHeader","eexecBlock","eexecBlockParser","extractFontProgram","type2Charstrings","getType2Charstrings","getType2Subrs","wrap","getSeacs","type1Charstrings","type1Subrs","type2Subrs","charsetArray","charStringsIndex","field","privateData","subrIndex","charsets","getLong","getUshort","parseCmap","idDelta","idOffset","groups","parseCff","gsubrs","parseGlyfTable","lookupCmap","compileGlyf","cmds","quadraticCurveTo","xa","ya","numberOfContours","scale01","scale10","subglyph","endPtsOfContours","instructionLength","numberOfPoints","points","startPoint","contour","compileCharString","bezierCurveTo","xb","yb","y3","subrCode","stackClean","stems","subrsBias","achar","bchar","glyphNameMap","gsubrsBias","CompiledFont","compiledGlyphs","compiledCharCodeToGlyphId","TrueTypeCompiled","Type2Compiled","cffInfo","noop","compileGlyph","compileGlyphImpl","HINTING_ENABLED","Type1CharString","lsb","flexing","COMMAND_MAP","hstem","vstem","vmoveto","rlineto","hlineto","vlineto","rrcurveto","callsubr","flex","drop","endchar","rmoveto","hmoveto","vhcurveto","hvcurveto","encoded","wx","sbx","executeCommand","dy","sby","flexArgs","howManyArgs","command","keepStack","stackLength","isHexDigit","discardNumber","c2","decrypted","decryptAscii","digit1","digit2","isSpecial","isBinary","EEXEC_ENCRYPT_KEY","CHAR_STRS_ENCRYPT_KEY","readNumberArray","getToken","readInt","readBoolean","readCharStrings","lenIV","program","blueArray","charString","encodingArg","xstep","ystep","paintType","tilingType","ShadingType","FUNCTION_BASED","AXIAL","RADIAL","FREE_FORM_MESH","LATTICE_FORM_MESH","COONS_PATCH_MESH","TENSOR_PATCH_MESH","getPattern","Shadings","RadialAxial","Mesh","Dummy","SMALL_NUMBER","coordsArr","shadingType","t0","domainArr","extendStart","extendEnd","extendArr","r1","r2","distance","createFromArray","colorStops","ratio","cssColor","background","r0","MeshStreamReader","tmpCompsBuf","csNumComps","tmpCsCompsBuf","colorFn","decodeType4Shading","mesh","coords","ps","verticesLeft","hasData","readFlag","coord","readCoordinate","readComponents","align","figures","decodeType5Shading","verticesPerRow","buildFigureFromPatch","figure","ci","figureMinX","figureMinY","figureMaxX","figureMaxY","splitXBy","TRIANGLE_DENSITY","MIN_SPLIT_PATCH_CHUNKS_AMOUNT","MAX_SPLIT_PATCH_CHUNKS_AMOUNT","splitYBy","figureCoords","figureColors","cl","cr","c3","bRow","getB","bCol","newColor","decodeType6Shading","tmp4","decodeType7Shading","updateBounds","maxY","packData","coordsPacked","xy","colorsPacked","decodeContext","bitsPerCoordinate","bitsPerFlag","patchMesh","yi","buildB","lut","t_","isOdd","isEven","findUnequal","setValues","reverseValues","createBidiText","isLTR","startLevel","strLength","numBidi","charType","baseTypes","arabicTypes","sor","eor","lastType","before","after","highestLevel","lowestOddLevel","nextToken","accept","expect","PostScriptTokenTypes","LBRACE","parseBlock","RBRACE","NUMBER","OPERATOR","parseCondition","conditionLocation","IF","jumpLocation","endOfTrue","IFELSE","PostScriptToken","opCache","getOperator","opValue","seed","SEED","MASK_HIGH","MASK_LOW","blockCounts","tailLength","dataUint32","k2","C1","C2","C1_LOW","C2_LOW","handleImageData","decodeAndClamp","addend","coefficient","resizeImageMask","_ref$smask","_ref$mask","_ref$isMask","isMask","matte","needsDecode","decodeCoefficients","decodeAddends","maskDict","smaskPromise","maskPromise","_ref2$nativeDecoder","imagePromise","smaskData","maskData","computedLength","haveFullData","decodeBuffer","getComponents","buf","bufferPos","rowComps","loop1End","loop2End","remainingBits","fillOpacity","rgbaBuf","alphaBuf","sw","sh","fillGrayBuffer","opacity","imageOffset","maskOffset","undoPreblend","matteRgb","matteR","matteG","matteB","forceRGBA","getImageBytes","newArray","maybeUndoPreblend","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","getTransformMatrix","AnnotationBorderStyle","Annotation","_get","receiver","parameters","LinkAnnotation","TextAnnotation","fieldType","TextWidgetAnnotation","ButtonWidgetAnnotation","ChoiceWidgetAnnotation","WidgetAnnotation","PopupAnnotation","LineAnnotation","SquareAnnotation","CircleAnnotation","PolylineAnnotation","PolygonAnnotation","HighlightAnnotation","UnderlineAnnotation","SquigglyAnnotation","StrikeOutAnnotation","StampAnnotation","FileAttachmentAnnotation","setFlags","setRectangle","setColor","setBorderStyle","setAppearance","annotationFlags","borderStyle","hasAppearance","appearance","_hasFlag","dictType","setWidth","setStyle","setDashArray","setHorizontalCornerRadius","setVerticalCornerRadius","appearanceStates","normalAppearanceState","hasPopup","contents","renderForms","appearanceDict","_isViewable","_isPrintable","dashArray","horizontalCornerRadius","verticalCornerRadius","isValid","allZeros","validNumber","radius","_Annotation","annotationType","fieldName","_constructFieldName","fieldValue","alternativeText","defaultAppearance","fieldResources","fieldFlags","readOnly","hasFieldFlag","loopDict","_WidgetAnnotation","alignment","textAlignment","maximumLength","multiLine","comb","_WidgetAnnotation2","checkBox","radioButton","buttonValue","fieldParent","fieldParentValue","_WidgetAnnotation3","option","isOptionArray","exportValue","displayValue","combo","multiSelect","_Annotation2","DEFAULT_ICON_SIZE","_preparePopup","_Annotation3","_Annotation4","parentItem","parentSubtype","parentType","parentId","parentFlags","_Annotation5","lineCoordinates","_Annotation6","_Annotation7","_Annotation8","_this12","rawVertices","vertices","_PolylineAnnotation","_this13","_Annotation9","_this14","_Annotation10","_this15","_Annotation11","_this16","_Annotation12","_this17","_Annotation13","_this18","_Annotation14","_this19"],"mappings":"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,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EA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AA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,WACAA,EAAA,UACAA,EAAA,WACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,WACAA,EAA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C,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD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A,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA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","file":"2.2.bundle.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 220:\n/*!******************************************!*\\\n  !*** ./~/pdfjs-dist/build/pdf.worker.js ***!\n  \\******************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process, global) {/* Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory();\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine(\"pdfjs-dist/build/pdf.worker\", [], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"pdfjs-dist/build/pdf.worker\"] = factory();\n\t\telse\n\t\t\troot[\"pdfjs-dist/build/pdf.worker\"] = root.pdfjsDistBuildPdfWorker = factory();\n\t})(this, function() {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __w_pdfjs_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId]) {\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/ \t\t}\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\ti: moduleId,\n\t/******/ \t\t\tl: false,\n\t/******/ \t\t\texports: {}\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.l = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__w_pdfjs_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__w_pdfjs_require__.c = installedModules;\n\t/******/\n\t/******/ \t// define getter function for harmony exports\n\t/******/ \t__w_pdfjs_require__.d = function(exports, name, getter) {\n\t/******/ \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n\t/******/ \t\t\tObject.defineProperty(exports, name, {\n\t/******/ \t\t\t\tconfigurable: false,\n\t/******/ \t\t\t\tenumerable: true,\n\t/******/ \t\t\t\tget: getter\n\t/******/ \t\t\t});\n\t/******/ \t\t}\n\t/******/ \t};\n\t/******/\n\t/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n\t/******/ \t__w_pdfjs_require__.n = function(module) {\n\t/******/ \t\tvar getter = module && module.__esModule ?\n\t/******/ \t\t\tfunction getDefault() { return module['default']; } :\n\t/******/ \t\t\tfunction getModuleExports() { return module; };\n\t/******/ \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n\t/******/ \t\treturn getter;\n\t/******/ \t};\n\t/******/\n\t/******/ \t// Object.prototype.hasOwnProperty.call\n\t/******/ \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__w_pdfjs_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 82);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.unreachable = exports.warn = exports.utf8StringToString = exports.stringToUTF8String = exports.stringToPDFString = exports.stringToBytes = exports.string32 = exports.shadow = exports.setVerbosityLevel = exports.ReadableStream = exports.removeNullCharacters = exports.readUint32 = exports.readUint16 = exports.readInt8 = exports.log2 = exports.loadJpegStream = exports.isEvalSupported = exports.isLittleEndian = exports.createValidAbsoluteUrl = exports.isSameOrigin = exports.isNodeJS = exports.isSpace = exports.isString = exports.isNum = exports.isEmptyObj = exports.isBool = exports.isArrayBuffer = exports.info = exports.getVerbosityLevel = exports.getLookupTableFactory = exports.deprecated = exports.createObjectURL = exports.createPromiseCapability = exports.createBlob = exports.bytesToString = exports.assert = exports.arraysToBytes = exports.arrayByteLength = exports.FormatError = exports.XRefParseException = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.StatTimer = exports.PasswordResponses = exports.PasswordException = exports.PageViewport = exports.NotImplementedException = exports.NativeImageDecoding = exports.MissingPDFException = exports.MissingDataException = exports.MessageHandler = exports.InvalidPDFException = exports.AbortException = exports.CMapCompressionType = exports.ImageKind = exports.FontType = exports.AnnotationType = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.UNSUPPORTED_FEATURES = exports.VERBOSITY_LEVELS = exports.OPS = exports.IDENTITY_MATRIX = exports.FONT_IDENTITY_MATRIX = undefined;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t__w_pdfjs_require__(84);\n\t\n\tvar _streams_polyfill = __w_pdfjs_require__(124);\n\t\n\tvar FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\tvar NativeImageDecoding = {\n\t  NONE: 'none',\n\t  DECODE: 'decode',\n\t  DISPLAY: 'display'\n\t};\n\tvar TextRenderingMode = {\n\t  FILL: 0,\n\t  STROKE: 1,\n\t  FILL_STROKE: 2,\n\t  INVISIBLE: 3,\n\t  FILL_ADD_TO_PATH: 4,\n\t  STROKE_ADD_TO_PATH: 5,\n\t  FILL_STROKE_ADD_TO_PATH: 6,\n\t  ADD_TO_PATH: 7,\n\t  FILL_STROKE_MASK: 3,\n\t  ADD_TO_PATH_FLAG: 4\n\t};\n\tvar ImageKind = {\n\t  GRAYSCALE_1BPP: 1,\n\t  RGB_24BPP: 2,\n\t  RGBA_32BPP: 3\n\t};\n\tvar AnnotationType = {\n\t  TEXT: 1,\n\t  LINK: 2,\n\t  FREETEXT: 3,\n\t  LINE: 4,\n\t  SQUARE: 5,\n\t  CIRCLE: 6,\n\t  POLYGON: 7,\n\t  POLYLINE: 8,\n\t  HIGHLIGHT: 9,\n\t  UNDERLINE: 10,\n\t  SQUIGGLY: 11,\n\t  STRIKEOUT: 12,\n\t  STAMP: 13,\n\t  CARET: 14,\n\t  INK: 15,\n\t  POPUP: 16,\n\t  FILEATTACHMENT: 17,\n\t  SOUND: 18,\n\t  MOVIE: 19,\n\t  WIDGET: 20,\n\t  SCREEN: 21,\n\t  PRINTERMARK: 22,\n\t  TRAPNET: 23,\n\t  WATERMARK: 24,\n\t  THREED: 25,\n\t  REDACT: 26\n\t};\n\tvar AnnotationFlag = {\n\t  INVISIBLE: 0x01,\n\t  HIDDEN: 0x02,\n\t  PRINT: 0x04,\n\t  NOZOOM: 0x08,\n\t  NOROTATE: 0x10,\n\t  NOVIEW: 0x20,\n\t  READONLY: 0x40,\n\t  LOCKED: 0x80,\n\t  TOGGLENOVIEW: 0x100,\n\t  LOCKEDCONTENTS: 0x200\n\t};\n\tvar AnnotationFieldFlag = {\n\t  READONLY: 0x0000001,\n\t  REQUIRED: 0x0000002,\n\t  NOEXPORT: 0x0000004,\n\t  MULTILINE: 0x0001000,\n\t  PASSWORD: 0x0002000,\n\t  NOTOGGLETOOFF: 0x0004000,\n\t  RADIO: 0x0008000,\n\t  PUSHBUTTON: 0x0010000,\n\t  COMBO: 0x0020000,\n\t  EDIT: 0x0040000,\n\t  SORT: 0x0080000,\n\t  FILESELECT: 0x0100000,\n\t  MULTISELECT: 0x0200000,\n\t  DONOTSPELLCHECK: 0x0400000,\n\t  DONOTSCROLL: 0x0800000,\n\t  COMB: 0x1000000,\n\t  RICHTEXT: 0x2000000,\n\t  RADIOSINUNISON: 0x2000000,\n\t  COMMITONSELCHANGE: 0x4000000\n\t};\n\tvar AnnotationBorderStyleType = {\n\t  SOLID: 1,\n\t  DASHED: 2,\n\t  BEVELED: 3,\n\t  INSET: 4,\n\t  UNDERLINE: 5\n\t};\n\tvar StreamType = {\n\t  UNKNOWN: 0,\n\t  FLATE: 1,\n\t  LZW: 2,\n\t  DCT: 3,\n\t  JPX: 4,\n\t  JBIG: 5,\n\t  A85: 6,\n\t  AHX: 7,\n\t  CCF: 8,\n\t  RL: 9\n\t};\n\tvar FontType = {\n\t  UNKNOWN: 0,\n\t  TYPE1: 1,\n\t  TYPE1C: 2,\n\t  CIDFONTTYPE0: 3,\n\t  CIDFONTTYPE0C: 4,\n\t  TRUETYPE: 5,\n\t  CIDFONTTYPE2: 6,\n\t  TYPE3: 7,\n\t  OPENTYPE: 8,\n\t  TYPE0: 9,\n\t  MMTYPE1: 10\n\t};\n\tvar VERBOSITY_LEVELS = {\n\t  errors: 0,\n\t  warnings: 1,\n\t  infos: 5\n\t};\n\tvar CMapCompressionType = {\n\t  NONE: 0,\n\t  BINARY: 1,\n\t  STREAM: 2\n\t};\n\tvar OPS = {\n\t  dependency: 1,\n\t  setLineWidth: 2,\n\t  setLineCap: 3,\n\t  setLineJoin: 4,\n\t  setMiterLimit: 5,\n\t  setDash: 6,\n\t  setRenderingIntent: 7,\n\t  setFlatness: 8,\n\t  setGState: 9,\n\t  save: 10,\n\t  restore: 11,\n\t  transform: 12,\n\t  moveTo: 13,\n\t  lineTo: 14,\n\t  curveTo: 15,\n\t  curveTo2: 16,\n\t  curveTo3: 17,\n\t  closePath: 18,\n\t  rectangle: 19,\n\t  stroke: 20,\n\t  closeStroke: 21,\n\t  fill: 22,\n\t  eoFill: 23,\n\t  fillStroke: 24,\n\t  eoFillStroke: 25,\n\t  closeFillStroke: 26,\n\t  closeEOFillStroke: 27,\n\t  endPath: 28,\n\t  clip: 29,\n\t  eoClip: 30,\n\t  beginText: 31,\n\t  endText: 32,\n\t  setCharSpacing: 33,\n\t  setWordSpacing: 34,\n\t  setHScale: 35,\n\t  setLeading: 36,\n\t  setFont: 37,\n\t  setTextRenderingMode: 38,\n\t  setTextRise: 39,\n\t  moveText: 40,\n\t  setLeadingMoveText: 41,\n\t  setTextMatrix: 42,\n\t  nextLine: 43,\n\t  showText: 44,\n\t  showSpacedText: 45,\n\t  nextLineShowText: 46,\n\t  nextLineSetSpacingShowText: 47,\n\t  setCharWidth: 48,\n\t  setCharWidthAndBounds: 49,\n\t  setStrokeColorSpace: 50,\n\t  setFillColorSpace: 51,\n\t  setStrokeColor: 52,\n\t  setStrokeColorN: 53,\n\t  setFillColor: 54,\n\t  setFillColorN: 55,\n\t  setStrokeGray: 56,\n\t  setFillGray: 57,\n\t  setStrokeRGBColor: 58,\n\t  setFillRGBColor: 59,\n\t  setStrokeCMYKColor: 60,\n\t  setFillCMYKColor: 61,\n\t  shadingFill: 62,\n\t  beginInlineImage: 63,\n\t  beginImageData: 64,\n\t  endInlineImage: 65,\n\t  paintXObject: 66,\n\t  markPoint: 67,\n\t  markPointProps: 68,\n\t  beginMarkedContent: 69,\n\t  beginMarkedContentProps: 70,\n\t  endMarkedContent: 71,\n\t  beginCompat: 72,\n\t  endCompat: 73,\n\t  paintFormXObjectBegin: 74,\n\t  paintFormXObjectEnd: 75,\n\t  beginGroup: 76,\n\t  endGroup: 77,\n\t  beginAnnotations: 78,\n\t  endAnnotations: 79,\n\t  beginAnnotation: 80,\n\t  endAnnotation: 81,\n\t  paintJpegXObject: 82,\n\t  paintImageMaskXObject: 83,\n\t  paintImageMaskXObjectGroup: 84,\n\t  paintImageXObject: 85,\n\t  paintInlineImageXObject: 86,\n\t  paintInlineImageXObjectGroup: 87,\n\t  paintImageXObjectRepeat: 88,\n\t  paintImageMaskXObjectRepeat: 89,\n\t  paintSolidColorImageMask: 90,\n\t  constructPath: 91\n\t};\n\tvar verbosity = VERBOSITY_LEVELS.warnings;\n\tfunction setVerbosityLevel(level) {\n\t  verbosity = level;\n\t}\n\tfunction getVerbosityLevel() {\n\t  return verbosity;\n\t}\n\tfunction info(msg) {\n\t  if (verbosity >= VERBOSITY_LEVELS.infos) {\n\t    console.log('Info: ' + msg);\n\t  }\n\t}\n\tfunction warn(msg) {\n\t  if (verbosity >= VERBOSITY_LEVELS.warnings) {\n\t    console.log('Warning: ' + msg);\n\t  }\n\t}\n\tfunction deprecated(details) {\n\t  console.log('Deprecated API usage: ' + details);\n\t}\n\tfunction unreachable(msg) {\n\t  throw new Error(msg);\n\t}\n\tfunction assert(cond, msg) {\n\t  if (!cond) {\n\t    unreachable(msg);\n\t  }\n\t}\n\tvar UNSUPPORTED_FEATURES = {\n\t  unknown: 'unknown',\n\t  forms: 'forms',\n\t  javaScript: 'javaScript',\n\t  smask: 'smask',\n\t  shadingPattern: 'shadingPattern',\n\t  font: 'font'\n\t};\n\tfunction isSameOrigin(baseUrl, otherUrl) {\n\t  try {\n\t    var base = new URL(baseUrl);\n\t    if (!base.origin || base.origin === 'null') {\n\t      return false;\n\t    }\n\t  } catch (e) {\n\t    return false;\n\t  }\n\t  var other = new URL(otherUrl, base);\n\t  return base.origin === other.origin;\n\t}\n\tfunction isValidProtocol(url) {\n\t  if (!url) {\n\t    return false;\n\t  }\n\t  switch (url.protocol) {\n\t    case 'http:':\n\t    case 'https:':\n\t    case 'ftp:':\n\t    case 'mailto:':\n\t    case 'tel:':\n\t      return true;\n\t    default:\n\t      return false;\n\t  }\n\t}\n\tfunction createValidAbsoluteUrl(url, baseUrl) {\n\t  if (!url) {\n\t    return null;\n\t  }\n\t  try {\n\t    var absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n\t    if (isValidProtocol(absoluteUrl)) {\n\t      return absoluteUrl;\n\t    }\n\t  } catch (ex) {}\n\t  return null;\n\t}\n\tfunction shadow(obj, prop, value) {\n\t  Object.defineProperty(obj, prop, {\n\t    value: value,\n\t    enumerable: true,\n\t    configurable: true,\n\t    writable: false\n\t  });\n\t  return value;\n\t}\n\tfunction getLookupTableFactory(initializer) {\n\t  var lookup;\n\t  return function () {\n\t    if (initializer) {\n\t      lookup = Object.create(null);\n\t      initializer(lookup);\n\t      initializer = null;\n\t    }\n\t    return lookup;\n\t  };\n\t}\n\tvar PasswordResponses = {\n\t  NEED_PASSWORD: 1,\n\t  INCORRECT_PASSWORD: 2\n\t};\n\tvar PasswordException = function PasswordExceptionClosure() {\n\t  function PasswordException(msg, code) {\n\t    this.name = 'PasswordException';\n\t    this.message = msg;\n\t    this.code = code;\n\t  }\n\t  PasswordException.prototype = new Error();\n\t  PasswordException.constructor = PasswordException;\n\t  return PasswordException;\n\t}();\n\tvar UnknownErrorException = function UnknownErrorExceptionClosure() {\n\t  function UnknownErrorException(msg, details) {\n\t    this.name = 'UnknownErrorException';\n\t    this.message = msg;\n\t    this.details = details;\n\t  }\n\t  UnknownErrorException.prototype = new Error();\n\t  UnknownErrorException.constructor = UnknownErrorException;\n\t  return UnknownErrorException;\n\t}();\n\tvar InvalidPDFException = function InvalidPDFExceptionClosure() {\n\t  function InvalidPDFException(msg) {\n\t    this.name = 'InvalidPDFException';\n\t    this.message = msg;\n\t  }\n\t  InvalidPDFException.prototype = new Error();\n\t  InvalidPDFException.constructor = InvalidPDFException;\n\t  return InvalidPDFException;\n\t}();\n\tvar MissingPDFException = function MissingPDFExceptionClosure() {\n\t  function MissingPDFException(msg) {\n\t    this.name = 'MissingPDFException';\n\t    this.message = msg;\n\t  }\n\t  MissingPDFException.prototype = new Error();\n\t  MissingPDFException.constructor = MissingPDFException;\n\t  return MissingPDFException;\n\t}();\n\tvar UnexpectedResponseException = function UnexpectedResponseExceptionClosure() {\n\t  function UnexpectedResponseException(msg, status) {\n\t    this.name = 'UnexpectedResponseException';\n\t    this.message = msg;\n\t    this.status = status;\n\t  }\n\t  UnexpectedResponseException.prototype = new Error();\n\t  UnexpectedResponseException.constructor = UnexpectedResponseException;\n\t  return UnexpectedResponseException;\n\t}();\n\tvar NotImplementedException = function NotImplementedExceptionClosure() {\n\t  function NotImplementedException(msg) {\n\t    this.message = msg;\n\t  }\n\t  NotImplementedException.prototype = new Error();\n\t  NotImplementedException.prototype.name = 'NotImplementedException';\n\t  NotImplementedException.constructor = NotImplementedException;\n\t  return NotImplementedException;\n\t}();\n\tvar MissingDataException = function MissingDataExceptionClosure() {\n\t  function MissingDataException(begin, end) {\n\t    this.begin = begin;\n\t    this.end = end;\n\t    this.message = 'Missing data [' + begin + ', ' + end + ')';\n\t  }\n\t  MissingDataException.prototype = new Error();\n\t  MissingDataException.prototype.name = 'MissingDataException';\n\t  MissingDataException.constructor = MissingDataException;\n\t  return MissingDataException;\n\t}();\n\tvar XRefParseException = function XRefParseExceptionClosure() {\n\t  function XRefParseException(msg) {\n\t    this.message = msg;\n\t  }\n\t  XRefParseException.prototype = new Error();\n\t  XRefParseException.prototype.name = 'XRefParseException';\n\t  XRefParseException.constructor = XRefParseException;\n\t  return XRefParseException;\n\t}();\n\tvar FormatError = function FormatErrorClosure() {\n\t  function FormatError(msg) {\n\t    this.message = msg;\n\t  }\n\t  FormatError.prototype = new Error();\n\t  FormatError.prototype.name = 'FormatError';\n\t  FormatError.constructor = FormatError;\n\t  return FormatError;\n\t}();\n\tvar AbortException = function AbortExceptionClosure() {\n\t  function AbortException(msg) {\n\t    this.name = 'AbortException';\n\t    this.message = msg;\n\t  }\n\t  AbortException.prototype = new Error();\n\t  AbortException.constructor = AbortException;\n\t  return AbortException;\n\t}();\n\tvar NullCharactersRegExp = /\\x00/g;\n\tfunction removeNullCharacters(str) {\n\t  if (typeof str !== 'string') {\n\t    warn('The argument for removeNullCharacters must be a string.');\n\t    return str;\n\t  }\n\t  return str.replace(NullCharactersRegExp, '');\n\t}\n\tfunction bytesToString(bytes) {\n\t  assert(bytes !== null && (typeof bytes === 'undefined' ? 'undefined' : _typeof(bytes)) === 'object' && bytes.length !== undefined, 'Invalid argument for bytesToString');\n\t  var length = bytes.length;\n\t  var MAX_ARGUMENT_COUNT = 8192;\n\t  if (length < MAX_ARGUMENT_COUNT) {\n\t    return String.fromCharCode.apply(null, bytes);\n\t  }\n\t  var strBuf = [];\n\t  for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n\t    var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n\t    var chunk = bytes.subarray(i, chunkEnd);\n\t    strBuf.push(String.fromCharCode.apply(null, chunk));\n\t  }\n\t  return strBuf.join('');\n\t}\n\tfunction stringToBytes(str) {\n\t  assert(typeof str === 'string', 'Invalid argument for stringToBytes');\n\t  var length = str.length;\n\t  var bytes = new Uint8Array(length);\n\t  for (var i = 0; i < length; ++i) {\n\t    bytes[i] = str.charCodeAt(i) & 0xFF;\n\t  }\n\t  return bytes;\n\t}\n\tfunction arrayByteLength(arr) {\n\t  if (arr.length !== undefined) {\n\t    return arr.length;\n\t  }\n\t  assert(arr.byteLength !== undefined);\n\t  return arr.byteLength;\n\t}\n\tfunction arraysToBytes(arr) {\n\t  if (arr.length === 1 && arr[0] instanceof Uint8Array) {\n\t    return arr[0];\n\t  }\n\t  var resultLength = 0;\n\t  var i,\n\t      ii = arr.length;\n\t  var item, itemLength;\n\t  for (i = 0; i < ii; i++) {\n\t    item = arr[i];\n\t    itemLength = arrayByteLength(item);\n\t    resultLength += itemLength;\n\t  }\n\t  var pos = 0;\n\t  var data = new Uint8Array(resultLength);\n\t  for (i = 0; i < ii; i++) {\n\t    item = arr[i];\n\t    if (!(item instanceof Uint8Array)) {\n\t      if (typeof item === 'string') {\n\t        item = stringToBytes(item);\n\t      } else {\n\t        item = new Uint8Array(item);\n\t      }\n\t    }\n\t    itemLength = item.byteLength;\n\t    data.set(item, pos);\n\t    pos += itemLength;\n\t  }\n\t  return data;\n\t}\n\tfunction string32(value) {\n\t  return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n\t}\n\tfunction log2(x) {\n\t  var n = 1,\n\t      i = 0;\n\t  while (x > n) {\n\t    n <<= 1;\n\t    i++;\n\t  }\n\t  return i;\n\t}\n\tfunction readInt8(data, start) {\n\t  return data[start] << 24 >> 24;\n\t}\n\tfunction readUint16(data, offset) {\n\t  return data[offset] << 8 | data[offset + 1];\n\t}\n\tfunction readUint32(data, offset) {\n\t  return (data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3]) >>> 0;\n\t}\n\tfunction isLittleEndian() {\n\t  var buffer8 = new Uint8Array(4);\n\t  buffer8[0] = 1;\n\t  var view32 = new Uint32Array(buffer8.buffer, 0, 1);\n\t  return view32[0] === 1;\n\t}\n\tfunction isEvalSupported() {\n\t  try {\n\t    new Function('');\n\t    return true;\n\t  } catch (e) {\n\t    return false;\n\t  }\n\t}\n\tvar IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\n\tvar Util = function UtilClosure() {\n\t  function Util() {}\n\t  var rgbBuf = ['rgb(', 0, ',', 0, ',', 0, ')'];\n\t  Util.makeCssRgb = function Util_makeCssRgb(r, g, b) {\n\t    rgbBuf[1] = r;\n\t    rgbBuf[3] = g;\n\t    rgbBuf[5] = b;\n\t    return rgbBuf.join('');\n\t  };\n\t  Util.transform = function Util_transform(m1, m2) {\n\t    return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n\t  };\n\t  Util.applyTransform = function Util_applyTransform(p, m) {\n\t    var xt = p[0] * m[0] + p[1] * m[2] + m[4];\n\t    var yt = p[0] * m[1] + p[1] * m[3] + m[5];\n\t    return [xt, yt];\n\t  };\n\t  Util.applyInverseTransform = function Util_applyInverseTransform(p, m) {\n\t    var d = m[0] * m[3] - m[1] * m[2];\n\t    var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n\t    var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n\t    return [xt, yt];\n\t  };\n\t  Util.getAxialAlignedBoundingBox = function Util_getAxialAlignedBoundingBox(r, m) {\n\t    var p1 = Util.applyTransform(r, m);\n\t    var p2 = Util.applyTransform(r.slice(2, 4), m);\n\t    var p3 = Util.applyTransform([r[0], r[3]], m);\n\t    var p4 = Util.applyTransform([r[2], r[1]], m);\n\t    return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n\t  };\n\t  Util.inverseTransform = function Util_inverseTransform(m) {\n\t    var d = m[0] * m[3] - m[1] * m[2];\n\t    return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n\t  };\n\t  Util.apply3dTransform = function Util_apply3dTransform(m, v) {\n\t    return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n\t  };\n\t  Util.singularValueDecompose2dScale = function Util_singularValueDecompose2dScale(m) {\n\t    var transpose = [m[0], m[2], m[1], m[3]];\n\t    var a = m[0] * transpose[0] + m[1] * transpose[2];\n\t    var b = m[0] * transpose[1] + m[1] * transpose[3];\n\t    var c = m[2] * transpose[0] + m[3] * transpose[2];\n\t    var d = m[2] * transpose[1] + m[3] * transpose[3];\n\t    var first = (a + d) / 2;\n\t    var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n\t    var sx = first + second || 1;\n\t    var sy = first - second || 1;\n\t    return [Math.sqrt(sx), Math.sqrt(sy)];\n\t  };\n\t  Util.normalizeRect = function Util_normalizeRect(rect) {\n\t    var r = rect.slice(0);\n\t    if (rect[0] > rect[2]) {\n\t      r[0] = rect[2];\n\t      r[2] = rect[0];\n\t    }\n\t    if (rect[1] > rect[3]) {\n\t      r[1] = rect[3];\n\t      r[3] = rect[1];\n\t    }\n\t    return r;\n\t  };\n\t  Util.intersect = function Util_intersect(rect1, rect2) {\n\t    function compare(a, b) {\n\t      return a - b;\n\t    }\n\t    var orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare),\n\t        orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare),\n\t        result = [];\n\t    rect1 = Util.normalizeRect(rect1);\n\t    rect2 = Util.normalizeRect(rect2);\n\t    if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n\t      result[0] = orderedX[1];\n\t      result[2] = orderedX[2];\n\t    } else {\n\t      return false;\n\t    }\n\t    if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n\t      result[1] = orderedY[1];\n\t      result[3] = orderedY[2];\n\t    } else {\n\t      return false;\n\t    }\n\t    return result;\n\t  };\n\t  var ROMAN_NUMBER_MAP = ['', 'C', 'CC', 'CCC', 'CD', 'D', 'DC', 'DCC', 'DCCC', 'CM', '', 'X', 'XX', 'XXX', 'XL', 'L', 'LX', 'LXX', 'LXXX', 'XC', '', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX'];\n\t  Util.toRoman = function Util_toRoman(number, lowerCase) {\n\t    assert(Number.isInteger(number) && number > 0, 'The number should be a positive integer.');\n\t    var pos,\n\t        romanBuf = [];\n\t    while (number >= 1000) {\n\t      number -= 1000;\n\t      romanBuf.push('M');\n\t    }\n\t    pos = number / 100 | 0;\n\t    number %= 100;\n\t    romanBuf.push(ROMAN_NUMBER_MAP[pos]);\n\t    pos = number / 10 | 0;\n\t    number %= 10;\n\t    romanBuf.push(ROMAN_NUMBER_MAP[10 + pos]);\n\t    romanBuf.push(ROMAN_NUMBER_MAP[20 + number]);\n\t    var romanStr = romanBuf.join('');\n\t    return lowerCase ? romanStr.toLowerCase() : romanStr;\n\t  };\n\t  Util.appendToArray = function Util_appendToArray(arr1, arr2) {\n\t    Array.prototype.push.apply(arr1, arr2);\n\t  };\n\t  Util.prependToArray = function Util_prependToArray(arr1, arr2) {\n\t    Array.prototype.unshift.apply(arr1, arr2);\n\t  };\n\t  Util.extendObj = function extendObj(obj1, obj2) {\n\t    for (var key in obj2) {\n\t      obj1[key] = obj2[key];\n\t    }\n\t  };\n\t  Util.getInheritableProperty = function Util_getInheritableProperty(dict, name, getArray) {\n\t    while (dict && !dict.has(name)) {\n\t      dict = dict.get('Parent');\n\t    }\n\t    if (!dict) {\n\t      return null;\n\t    }\n\t    return getArray ? dict.getArray(name) : dict.get(name);\n\t  };\n\t  Util.inherit = function Util_inherit(sub, base, prototype) {\n\t    sub.prototype = Object.create(base.prototype);\n\t    sub.prototype.constructor = sub;\n\t    for (var prop in prototype) {\n\t      sub.prototype[prop] = prototype[prop];\n\t    }\n\t  };\n\t  Util.loadScript = function Util_loadScript(src, callback) {\n\t    var script = document.createElement('script');\n\t    var loaded = false;\n\t    script.setAttribute('src', src);\n\t    if (callback) {\n\t      script.onload = function () {\n\t        if (!loaded) {\n\t          callback();\n\t        }\n\t        loaded = true;\n\t      };\n\t    }\n\t    document.getElementsByTagName('head')[0].appendChild(script);\n\t  };\n\t  return Util;\n\t}();\n\tvar PageViewport = function PageViewportClosure() {\n\t  function PageViewport(viewBox, scale, rotation, offsetX, offsetY, dontFlip) {\n\t    this.viewBox = viewBox;\n\t    this.scale = scale;\n\t    this.rotation = rotation;\n\t    this.offsetX = offsetX;\n\t    this.offsetY = offsetY;\n\t    var centerX = (viewBox[2] + viewBox[0]) / 2;\n\t    var centerY = (viewBox[3] + viewBox[1]) / 2;\n\t    var rotateA, rotateB, rotateC, rotateD;\n\t    rotation = rotation % 360;\n\t    rotation = rotation < 0 ? rotation + 360 : rotation;\n\t    switch (rotation) {\n\t      case 180:\n\t        rotateA = -1;\n\t        rotateB = 0;\n\t        rotateC = 0;\n\t        rotateD = 1;\n\t        break;\n\t      case 90:\n\t        rotateA = 0;\n\t        rotateB = 1;\n\t        rotateC = 1;\n\t        rotateD = 0;\n\t        break;\n\t      case 270:\n\t        rotateA = 0;\n\t        rotateB = -1;\n\t        rotateC = -1;\n\t        rotateD = 0;\n\t        break;\n\t      default:\n\t        rotateA = 1;\n\t        rotateB = 0;\n\t        rotateC = 0;\n\t        rotateD = -1;\n\t        break;\n\t    }\n\t    if (dontFlip) {\n\t      rotateC = -rotateC;\n\t      rotateD = -rotateD;\n\t    }\n\t    var offsetCanvasX, offsetCanvasY;\n\t    var width, height;\n\t    if (rotateA === 0) {\n\t      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n\t      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n\t      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n\t      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n\t    } else {\n\t      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n\t      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n\t      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n\t      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n\t    }\n\t    this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n\t    this.width = width;\n\t    this.height = height;\n\t    this.fontScale = scale;\n\t  }\n\t  PageViewport.prototype = {\n\t    clone: function PageViewPort_clone(args) {\n\t      args = args || {};\n\t      var scale = 'scale' in args ? args.scale : this.scale;\n\t      var rotation = 'rotation' in args ? args.rotation : this.rotation;\n\t      return new PageViewport(this.viewBox.slice(), scale, rotation, this.offsetX, this.offsetY, args.dontFlip);\n\t    },\n\t    convertToViewportPoint: function PageViewport_convertToViewportPoint(x, y) {\n\t      return Util.applyTransform([x, y], this.transform);\n\t    },\n\t    convertToViewportRectangle: function PageViewport_convertToViewportRectangle(rect) {\n\t      var tl = Util.applyTransform([rect[0], rect[1]], this.transform);\n\t      var br = Util.applyTransform([rect[2], rect[3]], this.transform);\n\t      return [tl[0], tl[1], br[0], br[1]];\n\t    },\n\t    convertToPdfPoint: function PageViewport_convertToPdfPoint(x, y) {\n\t      return Util.applyInverseTransform([x, y], this.transform);\n\t    }\n\t  };\n\t  return PageViewport;\n\t}();\n\tvar PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];\n\tfunction stringToPDFString(str) {\n\t  var i,\n\t      n = str.length,\n\t      strBuf = [];\n\t  if (str[0] === '\\xFE' && str[1] === '\\xFF') {\n\t    for (i = 2; i < n; i += 2) {\n\t      strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n\t    }\n\t  } else {\n\t    for (i = 0; i < n; ++i) {\n\t      var code = PDFStringTranslateTable[str.charCodeAt(i)];\n\t      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n\t    }\n\t  }\n\t  return strBuf.join('');\n\t}\n\tfunction stringToUTF8String(str) {\n\t  return decodeURIComponent(escape(str));\n\t}\n\tfunction utf8StringToString(str) {\n\t  return unescape(encodeURIComponent(str));\n\t}\n\tfunction isEmptyObj(obj) {\n\t  for (var key in obj) {\n\t    return false;\n\t  }\n\t  return true;\n\t}\n\tfunction isBool(v) {\n\t  return typeof v === 'boolean';\n\t}\n\tfunction isNum(v) {\n\t  return typeof v === 'number';\n\t}\n\tfunction isString(v) {\n\t  return typeof v === 'string';\n\t}\n\tfunction isArrayBuffer(v) {\n\t  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.byteLength !== undefined;\n\t}\n\tfunction isSpace(ch) {\n\t  return ch === 0x20 || ch === 0x09 || ch === 0x0D || ch === 0x0A;\n\t}\n\tfunction isNodeJS() {\n\t  return (typeof process === 'undefined' ? 'undefined' : _typeof(process)) === 'object' && process + '' === '[object process]';\n\t}\n\tfunction createPromiseCapability() {\n\t  var capability = {};\n\t  capability.promise = new Promise(function (resolve, reject) {\n\t    capability.resolve = resolve;\n\t    capability.reject = reject;\n\t  });\n\t  return capability;\n\t}\n\tvar StatTimer = function StatTimerClosure() {\n\t  function rpad(str, pad, length) {\n\t    while (str.length < length) {\n\t      str += pad;\n\t    }\n\t    return str;\n\t  }\n\t  function StatTimer() {\n\t    this.started = Object.create(null);\n\t    this.times = [];\n\t    this.enabled = true;\n\t  }\n\t  StatTimer.prototype = {\n\t    time: function StatTimer_time(name) {\n\t      if (!this.enabled) {\n\t        return;\n\t      }\n\t      if (name in this.started) {\n\t        warn('Timer is already running for ' + name);\n\t      }\n\t      this.started[name] = Date.now();\n\t    },\n\t    timeEnd: function StatTimer_timeEnd(name) {\n\t      if (!this.enabled) {\n\t        return;\n\t      }\n\t      if (!(name in this.started)) {\n\t        warn('Timer has not been started for ' + name);\n\t      }\n\t      this.times.push({\n\t        'name': name,\n\t        'start': this.started[name],\n\t        'end': Date.now()\n\t      });\n\t      delete this.started[name];\n\t    },\n\t    toString: function StatTimer_toString() {\n\t      var i, ii;\n\t      var times = this.times;\n\t      var out = '';\n\t      var longest = 0;\n\t      for (i = 0, ii = times.length; i < ii; ++i) {\n\t        var name = times[i]['name'];\n\t        if (name.length > longest) {\n\t          longest = name.length;\n\t        }\n\t      }\n\t      for (i = 0, ii = times.length; i < ii; ++i) {\n\t        var span = times[i];\n\t        var duration = span.end - span.start;\n\t        out += rpad(span['name'], ' ', longest) + ' ' + duration + 'ms\\n';\n\t      }\n\t      return out;\n\t    }\n\t  };\n\t  return StatTimer;\n\t}();\n\tvar createBlob = function createBlob(data, contentType) {\n\t  if (typeof Blob !== 'undefined') {\n\t    return new Blob([data], { type: contentType });\n\t  }\n\t  throw new Error('The \"Blob\" constructor is not supported.');\n\t};\n\tvar createObjectURL = function createObjectURLClosure() {\n\t  var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\t  return function createObjectURL(data, contentType) {\n\t    var forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\t\n\t    if (!forceDataSchema && URL.createObjectURL) {\n\t      var blob = createBlob(data, contentType);\n\t      return URL.createObjectURL(blob);\n\t    }\n\t    var buffer = 'data:' + contentType + ';base64,';\n\t    for (var i = 0, ii = data.length; i < ii; i += 3) {\n\t      var b1 = data[i] & 0xFF;\n\t      var b2 = data[i + 1] & 0xFF;\n\t      var b3 = data[i + 2] & 0xFF;\n\t      var d1 = b1 >> 2,\n\t          d2 = (b1 & 3) << 4 | b2 >> 4;\n\t      var d3 = i + 1 < ii ? (b2 & 0xF) << 2 | b3 >> 6 : 64;\n\t      var d4 = i + 2 < ii ? b3 & 0x3F : 64;\n\t      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n\t    }\n\t    return buffer;\n\t  };\n\t}();\n\tfunction resolveCall(fn, args) {\n\t  var thisArg = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\t\n\t  if (!fn) {\n\t    return Promise.resolve(undefined);\n\t  }\n\t  return new Promise(function (resolve, reject) {\n\t    resolve(fn.apply(thisArg, args));\n\t  });\n\t}\n\tfunction wrapReason(reason) {\n\t  if ((typeof reason === 'undefined' ? 'undefined' : _typeof(reason)) !== 'object') {\n\t    return reason;\n\t  }\n\t  switch (reason.name) {\n\t    case 'AbortException':\n\t      return new AbortException(reason.message);\n\t    case 'MissingPDFException':\n\t      return new MissingPDFException(reason.message);\n\t    case 'UnexpectedResponseException':\n\t      return new UnexpectedResponseException(reason.message, reason.status);\n\t    default:\n\t      return new UnknownErrorException(reason.message, reason.details);\n\t  }\n\t}\n\tfunction makeReasonSerializable(reason) {\n\t  if (!(reason instanceof Error) || reason instanceof AbortException || reason instanceof MissingPDFException || reason instanceof UnexpectedResponseException || reason instanceof UnknownErrorException) {\n\t    return reason;\n\t  }\n\t  return new UnknownErrorException(reason.message, reason.toString());\n\t}\n\tfunction resolveOrReject(capability, success, reason) {\n\t  if (success) {\n\t    capability.resolve();\n\t  } else {\n\t    capability.reject(reason);\n\t  }\n\t}\n\tfunction finalize(promise) {\n\t  return Promise.resolve(promise).catch(function () {});\n\t}\n\tfunction MessageHandler(sourceName, targetName, comObj) {\n\t  var _this = this;\n\t\n\t  this.sourceName = sourceName;\n\t  this.targetName = targetName;\n\t  this.comObj = comObj;\n\t  this.callbackId = 1;\n\t  this.streamId = 1;\n\t  this.postMessageTransfers = true;\n\t  this.streamSinks = Object.create(null);\n\t  this.streamControllers = Object.create(null);\n\t  var callbacksCapabilities = this.callbacksCapabilities = Object.create(null);\n\t  var ah = this.actionHandler = Object.create(null);\n\t  this._onComObjOnMessage = function (event) {\n\t    var data = event.data;\n\t    if (data.targetName !== _this.sourceName) {\n\t      return;\n\t    }\n\t    if (data.stream) {\n\t      _this._processStreamMessage(data);\n\t    } else if (data.isReply) {\n\t      var callbackId = data.callbackId;\n\t      if (data.callbackId in callbacksCapabilities) {\n\t        var callback = callbacksCapabilities[callbackId];\n\t        delete callbacksCapabilities[callbackId];\n\t        if ('error' in data) {\n\t          callback.reject(wrapReason(data.error));\n\t        } else {\n\t          callback.resolve(data.data);\n\t        }\n\t      } else {\n\t        throw new Error('Cannot resolve callback ' + callbackId);\n\t      }\n\t    } else if (data.action in ah) {\n\t      var action = ah[data.action];\n\t      if (data.callbackId) {\n\t        var _sourceName = _this.sourceName;\n\t        var _targetName = data.sourceName;\n\t        Promise.resolve().then(function () {\n\t          return action[0].call(action[1], data.data);\n\t        }).then(function (result) {\n\t          comObj.postMessage({\n\t            sourceName: _sourceName,\n\t            targetName: _targetName,\n\t            isReply: true,\n\t            callbackId: data.callbackId,\n\t            data: result\n\t          });\n\t        }, function (reason) {\n\t          comObj.postMessage({\n\t            sourceName: _sourceName,\n\t            targetName: _targetName,\n\t            isReply: true,\n\t            callbackId: data.callbackId,\n\t            error: makeReasonSerializable(reason)\n\t          });\n\t        });\n\t      } else if (data.streamId) {\n\t        _this._createStreamSink(data);\n\t      } else {\n\t        action[0].call(action[1], data.data);\n\t      }\n\t    } else {\n\t      throw new Error('Unknown action from worker: ' + data.action);\n\t    }\n\t  };\n\t  comObj.addEventListener('message', this._onComObjOnMessage);\n\t}\n\tMessageHandler.prototype = {\n\t  on: function on(actionName, handler, scope) {\n\t    var ah = this.actionHandler;\n\t    if (ah[actionName]) {\n\t      throw new Error('There is already an actionName called \"' + actionName + '\"');\n\t    }\n\t    ah[actionName] = [handler, scope];\n\t  },\n\t  send: function send(actionName, data, transfers) {\n\t    var message = {\n\t      sourceName: this.sourceName,\n\t      targetName: this.targetName,\n\t      action: actionName,\n\t      data: data\n\t    };\n\t    this.postMessage(message, transfers);\n\t  },\n\t  sendWithPromise: function sendWithPromise(actionName, data, transfers) {\n\t    var callbackId = this.callbackId++;\n\t    var message = {\n\t      sourceName: this.sourceName,\n\t      targetName: this.targetName,\n\t      action: actionName,\n\t      data: data,\n\t      callbackId: callbackId\n\t    };\n\t    var capability = createPromiseCapability();\n\t    this.callbacksCapabilities[callbackId] = capability;\n\t    try {\n\t      this.postMessage(message, transfers);\n\t    } catch (e) {\n\t      capability.reject(e);\n\t    }\n\t    return capability.promise;\n\t  },\n\t  sendWithStream: function sendWithStream(actionName, data, queueingStrategy, transfers) {\n\t    var _this2 = this;\n\t\n\t    var streamId = this.streamId++;\n\t    var sourceName = this.sourceName;\n\t    var targetName = this.targetName;\n\t    return new _streams_polyfill.ReadableStream({\n\t      start: function start(controller) {\n\t        var startCapability = createPromiseCapability();\n\t        _this2.streamControllers[streamId] = {\n\t          controller: controller,\n\t          startCall: startCapability,\n\t          isClosed: false\n\t        };\n\t        _this2.postMessage({\n\t          sourceName: sourceName,\n\t          targetName: targetName,\n\t          action: actionName,\n\t          streamId: streamId,\n\t          data: data,\n\t          desiredSize: controller.desiredSize\n\t        });\n\t        return startCapability.promise;\n\t      },\n\t      pull: function pull(controller) {\n\t        var pullCapability = createPromiseCapability();\n\t        _this2.streamControllers[streamId].pullCall = pullCapability;\n\t        _this2.postMessage({\n\t          sourceName: sourceName,\n\t          targetName: targetName,\n\t          stream: 'pull',\n\t          streamId: streamId,\n\t          desiredSize: controller.desiredSize\n\t        });\n\t        return pullCapability.promise;\n\t      },\n\t      cancel: function cancel(reason) {\n\t        var cancelCapability = createPromiseCapability();\n\t        _this2.streamControllers[streamId].cancelCall = cancelCapability;\n\t        _this2.streamControllers[streamId].isClosed = true;\n\t        _this2.postMessage({\n\t          sourceName: sourceName,\n\t          targetName: targetName,\n\t          stream: 'cancel',\n\t          reason: reason,\n\t          streamId: streamId\n\t        });\n\t        return cancelCapability.promise;\n\t      }\n\t    }, queueingStrategy);\n\t  },\n\t  _createStreamSink: function _createStreamSink(data) {\n\t    var _this3 = this;\n\t\n\t    var self = this;\n\t    var action = this.actionHandler[data.action];\n\t    var streamId = data.streamId;\n\t    var desiredSize = data.desiredSize;\n\t    var sourceName = this.sourceName;\n\t    var targetName = data.sourceName;\n\t    var capability = createPromiseCapability();\n\t    var sendStreamRequest = function sendStreamRequest(_ref) {\n\t      var stream = _ref.stream,\n\t          chunk = _ref.chunk,\n\t          transfers = _ref.transfers,\n\t          success = _ref.success,\n\t          reason = _ref.reason;\n\t\n\t      _this3.postMessage({\n\t        sourceName: sourceName,\n\t        targetName: targetName,\n\t        stream: stream,\n\t        streamId: streamId,\n\t        chunk: chunk,\n\t        success: success,\n\t        reason: reason\n\t      }, transfers);\n\t    };\n\t    var streamSink = {\n\t      enqueue: function enqueue(chunk) {\n\t        var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\t        var transfers = arguments[2];\n\t\n\t        if (this.isCancelled) {\n\t          return;\n\t        }\n\t        var lastDesiredSize = this.desiredSize;\n\t        this.desiredSize -= size;\n\t        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n\t          this.sinkCapability = createPromiseCapability();\n\t          this.ready = this.sinkCapability.promise;\n\t        }\n\t        sendStreamRequest({\n\t          stream: 'enqueue',\n\t          chunk: chunk,\n\t          transfers: transfers\n\t        });\n\t      },\n\t      close: function close() {\n\t        if (this.isCancelled) {\n\t          return;\n\t        }\n\t        this.isCancelled = true;\n\t        sendStreamRequest({ stream: 'close' });\n\t        delete self.streamSinks[streamId];\n\t      },\n\t      error: function error(reason) {\n\t        if (this.isCancelled) {\n\t          return;\n\t        }\n\t        this.isCancelled = true;\n\t        sendStreamRequest({\n\t          stream: 'error',\n\t          reason: reason\n\t        });\n\t      },\n\t\n\t      sinkCapability: capability,\n\t      onPull: null,\n\t      onCancel: null,\n\t      isCancelled: false,\n\t      desiredSize: desiredSize,\n\t      ready: null\n\t    };\n\t    streamSink.sinkCapability.resolve();\n\t    streamSink.ready = streamSink.sinkCapability.promise;\n\t    this.streamSinks[streamId] = streamSink;\n\t    resolveCall(action[0], [data.data, streamSink], action[1]).then(function () {\n\t      sendStreamRequest({\n\t        stream: 'start_complete',\n\t        success: true\n\t      });\n\t    }, function (reason) {\n\t      sendStreamRequest({\n\t        stream: 'start_complete',\n\t        success: false,\n\t        reason: reason\n\t      });\n\t    });\n\t  },\n\t  _processStreamMessage: function _processStreamMessage(data) {\n\t    var _this4 = this;\n\t\n\t    var sourceName = this.sourceName;\n\t    var targetName = data.sourceName;\n\t    var streamId = data.streamId;\n\t    var sendStreamResponse = function sendStreamResponse(_ref2) {\n\t      var stream = _ref2.stream,\n\t          success = _ref2.success,\n\t          reason = _ref2.reason;\n\t\n\t      _this4.comObj.postMessage({\n\t        sourceName: sourceName,\n\t        targetName: targetName,\n\t        stream: stream,\n\t        success: success,\n\t        streamId: streamId,\n\t        reason: reason\n\t      });\n\t    };\n\t    var deleteStreamController = function deleteStreamController() {\n\t      Promise.all([_this4.streamControllers[data.streamId].startCall, _this4.streamControllers[data.streamId].pullCall, _this4.streamControllers[data.streamId].cancelCall].map(function (capability) {\n\t        return capability && finalize(capability.promise);\n\t      })).then(function () {\n\t        delete _this4.streamControllers[data.streamId];\n\t      });\n\t    };\n\t    switch (data.stream) {\n\t      case 'start_complete':\n\t        resolveOrReject(this.streamControllers[data.streamId].startCall, data.success, wrapReason(data.reason));\n\t        break;\n\t      case 'pull_complete':\n\t        resolveOrReject(this.streamControllers[data.streamId].pullCall, data.success, wrapReason(data.reason));\n\t        break;\n\t      case 'pull':\n\t        if (!this.streamSinks[data.streamId]) {\n\t          sendStreamResponse({\n\t            stream: 'pull_complete',\n\t            success: true\n\t          });\n\t          break;\n\t        }\n\t        if (this.streamSinks[data.streamId].desiredSize <= 0 && data.desiredSize > 0) {\n\t          this.streamSinks[data.streamId].sinkCapability.resolve();\n\t        }\n\t        this.streamSinks[data.streamId].desiredSize = data.desiredSize;\n\t        resolveCall(this.streamSinks[data.streamId].onPull).then(function () {\n\t          sendStreamResponse({\n\t            stream: 'pull_complete',\n\t            success: true\n\t          });\n\t        }, function (reason) {\n\t          sendStreamResponse({\n\t            stream: 'pull_complete',\n\t            success: false,\n\t            reason: reason\n\t          });\n\t        });\n\t        break;\n\t      case 'enqueue':\n\t        assert(this.streamControllers[data.streamId], 'enqueue should have stream controller');\n\t        if (!this.streamControllers[data.streamId].isClosed) {\n\t          this.streamControllers[data.streamId].controller.enqueue(data.chunk);\n\t        }\n\t        break;\n\t      case 'close':\n\t        assert(this.streamControllers[data.streamId], 'close should have stream controller');\n\t        if (this.streamControllers[data.streamId].isClosed) {\n\t          break;\n\t        }\n\t        this.streamControllers[data.streamId].isClosed = true;\n\t        this.streamControllers[data.streamId].controller.close();\n\t        deleteStreamController();\n\t        break;\n\t      case 'error':\n\t        assert(this.streamControllers[data.streamId], 'error should have stream controller');\n\t        this.streamControllers[data.streamId].controller.error(wrapReason(data.reason));\n\t        deleteStreamController();\n\t        break;\n\t      case 'cancel_complete':\n\t        resolveOrReject(this.streamControllers[data.streamId].cancelCall, data.success, wrapReason(data.reason));\n\t        deleteStreamController();\n\t        break;\n\t      case 'cancel':\n\t        if (!this.streamSinks[data.streamId]) {\n\t          break;\n\t        }\n\t        resolveCall(this.streamSinks[data.streamId].onCancel, [wrapReason(data.reason)]).then(function () {\n\t          sendStreamResponse({\n\t            stream: 'cancel_complete',\n\t            success: true\n\t          });\n\t        }, function (reason) {\n\t          sendStreamResponse({\n\t            stream: 'cancel_complete',\n\t            success: false,\n\t            reason: reason\n\t          });\n\t        });\n\t        this.streamSinks[data.streamId].sinkCapability.reject(wrapReason(data.reason));\n\t        this.streamSinks[data.streamId].isCancelled = true;\n\t        delete this.streamSinks[data.streamId];\n\t        break;\n\t      default:\n\t        throw new Error('Unexpected stream case');\n\t    }\n\t  },\n\t  postMessage: function postMessage(message, transfers) {\n\t    if (transfers && this.postMessageTransfers) {\n\t      this.comObj.postMessage(message, transfers);\n\t    } else {\n\t      this.comObj.postMessage(message);\n\t    }\n\t  },\n\t  destroy: function destroy() {\n\t    this.comObj.removeEventListener('message', this._onComObjOnMessage);\n\t  }\n\t};\n\tfunction loadJpegStream(id, imageUrl, objs) {\n\t  var img = new Image();\n\t  img.onload = function loadJpegStream_onloadClosure() {\n\t    objs.resolve(id, img);\n\t  };\n\t  img.onerror = function loadJpegStream_onerrorClosure() {\n\t    objs.resolve(id, null);\n\t    warn('Error during JPEG image loading');\n\t  };\n\t  img.src = imageUrl;\n\t}\n\texports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\n\texports.IDENTITY_MATRIX = IDENTITY_MATRIX;\n\texports.OPS = OPS;\n\texports.VERBOSITY_LEVELS = VERBOSITY_LEVELS;\n\texports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\n\texports.AnnotationBorderStyleType = AnnotationBorderStyleType;\n\texports.AnnotationFieldFlag = AnnotationFieldFlag;\n\texports.AnnotationFlag = AnnotationFlag;\n\texports.AnnotationType = AnnotationType;\n\texports.FontType = FontType;\n\texports.ImageKind = ImageKind;\n\texports.CMapCompressionType = CMapCompressionType;\n\texports.AbortException = AbortException;\n\texports.InvalidPDFException = InvalidPDFException;\n\texports.MessageHandler = MessageHandler;\n\texports.MissingDataException = MissingDataException;\n\texports.MissingPDFException = MissingPDFException;\n\texports.NativeImageDecoding = NativeImageDecoding;\n\texports.NotImplementedException = NotImplementedException;\n\texports.PageViewport = PageViewport;\n\texports.PasswordException = PasswordException;\n\texports.PasswordResponses = PasswordResponses;\n\texports.StatTimer = StatTimer;\n\texports.StreamType = StreamType;\n\texports.TextRenderingMode = TextRenderingMode;\n\texports.UnexpectedResponseException = UnexpectedResponseException;\n\texports.UnknownErrorException = UnknownErrorException;\n\texports.Util = Util;\n\texports.XRefParseException = XRefParseException;\n\texports.FormatError = FormatError;\n\texports.arrayByteLength = arrayByteLength;\n\texports.arraysToBytes = arraysToBytes;\n\texports.assert = assert;\n\texports.bytesToString = bytesToString;\n\texports.createBlob = createBlob;\n\texports.createPromiseCapability = createPromiseCapability;\n\texports.createObjectURL = createObjectURL;\n\texports.deprecated = deprecated;\n\texports.getLookupTableFactory = getLookupTableFactory;\n\texports.getVerbosityLevel = getVerbosityLevel;\n\texports.info = info;\n\texports.isArrayBuffer = isArrayBuffer;\n\texports.isBool = isBool;\n\texports.isEmptyObj = isEmptyObj;\n\texports.isNum = isNum;\n\texports.isString = isString;\n\texports.isSpace = isSpace;\n\texports.isNodeJS = isNodeJS;\n\texports.isSameOrigin = isSameOrigin;\n\texports.createValidAbsoluteUrl = createValidAbsoluteUrl;\n\texports.isLittleEndian = isLittleEndian;\n\texports.isEvalSupported = isEvalSupported;\n\texports.loadJpegStream = loadJpegStream;\n\texports.log2 = log2;\n\texports.readInt8 = readInt8;\n\texports.readUint16 = readUint16;\n\texports.readUint32 = readUint32;\n\texports.removeNullCharacters = removeNullCharacters;\n\texports.ReadableStream = _streams_polyfill.ReadableStream;\n\texports.setVerbosityLevel = setVerbosityLevel;\n\texports.shadow = shadow;\n\texports.string32 = string32;\n\texports.stringToBytes = stringToBytes;\n\texports.stringToPDFString = stringToPDFString;\n\texports.stringToUTF8String = stringToUTF8String;\n\texports.utf8StringToString = utf8StringToString;\n\texports.warn = warn;\n\texports.unreachable = unreachable;\n\t\n\t/***/ }),\n\t/* 1 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\n\tif (typeof __g == 'number') __g = global;\n\t\n\t/***/ }),\n\t/* 2 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar EOF = {};\n\tvar Name = function NameClosure() {\n\t  function Name(name) {\n\t    this.name = name;\n\t  }\n\t  Name.prototype = {};\n\t  var nameCache = Object.create(null);\n\t  Name.get = function Name_get(name) {\n\t    var nameValue = nameCache[name];\n\t    return nameValue ? nameValue : nameCache[name] = new Name(name);\n\t  };\n\t  return Name;\n\t}();\n\tvar Cmd = function CmdClosure() {\n\t  function Cmd(cmd) {\n\t    this.cmd = cmd;\n\t  }\n\t  Cmd.prototype = {};\n\t  var cmdCache = Object.create(null);\n\t  Cmd.get = function Cmd_get(cmd) {\n\t    var cmdValue = cmdCache[cmd];\n\t    return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n\t  };\n\t  return Cmd;\n\t}();\n\tvar Dict = function DictClosure() {\n\t  var nonSerializable = function nonSerializableClosure() {\n\t    return nonSerializable;\n\t  };\n\t  function Dict(xref) {\n\t    this._map = Object.create(null);\n\t    this.xref = xref;\n\t    this.objId = null;\n\t    this.suppressEncryption = false;\n\t    this.__nonSerializable__ = nonSerializable;\n\t  }\n\t  Dict.prototype = {\n\t    assignXref: function Dict_assignXref(newXref) {\n\t      this.xref = newXref;\n\t    },\n\t    get: function Dict_get(key1, key2, key3) {\n\t      var value;\n\t      var xref = this.xref,\n\t          suppressEncryption = this.suppressEncryption;\n\t      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n\t        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n\t      }\n\t      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n\t        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n\t      }\n\t      value = this._map[key3] || null;\n\t      return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n\t    },\n\t    getAsync: function Dict_getAsync(key1, key2, key3) {\n\t      var value;\n\t      var xref = this.xref,\n\t          suppressEncryption = this.suppressEncryption;\n\t      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n\t        if (xref) {\n\t          return xref.fetchIfRefAsync(value, suppressEncryption);\n\t        }\n\t        return Promise.resolve(value);\n\t      }\n\t      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n\t        if (xref) {\n\t          return xref.fetchIfRefAsync(value, suppressEncryption);\n\t        }\n\t        return Promise.resolve(value);\n\t      }\n\t      value = this._map[key3] || null;\n\t      if (xref) {\n\t        return xref.fetchIfRefAsync(value, suppressEncryption);\n\t      }\n\t      return Promise.resolve(value);\n\t    },\n\t    getArray: function Dict_getArray(key1, key2, key3) {\n\t      var value = this.get(key1, key2, key3);\n\t      var xref = this.xref,\n\t          suppressEncryption = this.suppressEncryption;\n\t      if (!Array.isArray(value) || !xref) {\n\t        return value;\n\t      }\n\t      value = value.slice();\n\t      for (var i = 0, ii = value.length; i < ii; i++) {\n\t        if (!isRef(value[i])) {\n\t          continue;\n\t        }\n\t        value[i] = xref.fetch(value[i], suppressEncryption);\n\t      }\n\t      return value;\n\t    },\n\t    getRaw: function Dict_getRaw(key) {\n\t      return this._map[key];\n\t    },\n\t    getKeys: function Dict_getKeys() {\n\t      return Object.keys(this._map);\n\t    },\n\t    set: function Dict_set(key, value) {\n\t      this._map[key] = value;\n\t    },\n\t    has: function Dict_has(key) {\n\t      return key in this._map;\n\t    },\n\t    forEach: function Dict_forEach(callback) {\n\t      for (var key in this._map) {\n\t        callback(key, this.get(key));\n\t      }\n\t    }\n\t  };\n\t  Dict.empty = new Dict(null);\n\t  Dict.merge = function (xref, dictArray) {\n\t    var mergedDict = new Dict(xref);\n\t    for (var i = 0, ii = dictArray.length; i < ii; i++) {\n\t      var dict = dictArray[i];\n\t      if (!isDict(dict)) {\n\t        continue;\n\t      }\n\t      for (var keyName in dict._map) {\n\t        if (mergedDict._map[keyName] !== undefined) {\n\t          continue;\n\t        }\n\t        mergedDict._map[keyName] = dict._map[keyName];\n\t      }\n\t    }\n\t    return mergedDict;\n\t  };\n\t  return Dict;\n\t}();\n\tvar Ref = function RefClosure() {\n\t  function Ref(num, gen) {\n\t    this.num = num;\n\t    this.gen = gen;\n\t  }\n\t  Ref.prototype = {\n\t    toString: function Ref_toString() {\n\t      var str = this.num + 'R';\n\t      if (this.gen !== 0) {\n\t        str += this.gen;\n\t      }\n\t      return str;\n\t    }\n\t  };\n\t  return Ref;\n\t}();\n\tvar RefSet = function RefSetClosure() {\n\t  function RefSet() {\n\t    this.dict = Object.create(null);\n\t  }\n\t  RefSet.prototype = {\n\t    has: function RefSet_has(ref) {\n\t      return ref.toString() in this.dict;\n\t    },\n\t    put: function RefSet_put(ref) {\n\t      this.dict[ref.toString()] = true;\n\t    },\n\t    remove: function RefSet_remove(ref) {\n\t      delete this.dict[ref.toString()];\n\t    }\n\t  };\n\t  return RefSet;\n\t}();\n\tvar RefSetCache = function RefSetCacheClosure() {\n\t  function RefSetCache() {\n\t    this.dict = Object.create(null);\n\t  }\n\t  RefSetCache.prototype = {\n\t    get: function RefSetCache_get(ref) {\n\t      return this.dict[ref.toString()];\n\t    },\n\t    has: function RefSetCache_has(ref) {\n\t      return ref.toString() in this.dict;\n\t    },\n\t    put: function RefSetCache_put(ref, obj) {\n\t      this.dict[ref.toString()] = obj;\n\t    },\n\t    putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n\t      this.dict[ref.toString()] = this.get(aliasRef);\n\t    },\n\t    forEach: function RefSetCache_forEach(fn, thisArg) {\n\t      for (var i in this.dict) {\n\t        fn.call(thisArg, this.dict[i]);\n\t      }\n\t    },\n\t    clear: function RefSetCache_clear() {\n\t      this.dict = Object.create(null);\n\t    }\n\t  };\n\t  return RefSetCache;\n\t}();\n\tfunction isEOF(v) {\n\t  return v === EOF;\n\t}\n\tfunction isName(v, name) {\n\t  return v instanceof Name && (name === undefined || v.name === name);\n\t}\n\tfunction isCmd(v, cmd) {\n\t  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n\t}\n\tfunction isDict(v, type) {\n\t  return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\n\t}\n\tfunction isRef(v) {\n\t  return v instanceof Ref;\n\t}\n\tfunction isRefsEqual(v1, v2) {\n\t  return v1.num === v2.num && v1.gen === v2.gen;\n\t}\n\tfunction isStream(v) {\n\t  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.getBytes !== undefined;\n\t}\n\texports.EOF = EOF;\n\texports.Cmd = Cmd;\n\texports.Dict = Dict;\n\texports.Name = Name;\n\texports.Ref = Ref;\n\texports.RefSet = RefSet;\n\texports.RefSetCache = RefSetCache;\n\texports.isEOF = isEOF;\n\texports.isCmd = isCmd;\n\texports.isDict = isDict;\n\texports.isName = isName;\n\texports.isRef = isRef;\n\texports.isRefsEqual = isRefsEqual;\n\texports.isStream = isStream;\n\t\n\t/***/ }),\n\t/* 3 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tmodule.exports = function (it) {\n\t  return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) === 'object' ? it !== null : typeof it === 'function';\n\t};\n\t\n\t/***/ }),\n\t/* 4 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar store = __w_pdfjs_require__(54)('wks');\n\tvar uid = __w_pdfjs_require__(17);\n\tvar _Symbol = __w_pdfjs_require__(1).Symbol;\n\tvar USE_SYMBOL = typeof _Symbol == 'function';\n\tvar $exports = module.exports = function (name) {\n\t  return store[name] || (store[name] = USE_SYMBOL && _Symbol[name] || (USE_SYMBOL ? _Symbol : uid)('Symbol.' + name));\n\t};\n\t$exports.store = store;\n\t\n\t/***/ }),\n\t/* 5 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.LZWStream = exports.StringStream = exports.StreamsSequenceStream = exports.Stream = exports.RunLengthStream = exports.PredictorStream = exports.NullStream = exports.JpxStream = exports.JpegStream = exports.FlateStream = exports.DecodeStream = exports.DecryptStream = exports.AsciiHexStream = exports.Ascii85Stream = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _primitives = __w_pdfjs_require__(2);\n\t\n\tvar _jpg = __w_pdfjs_require__(128);\n\t\n\tvar _jpx = __w_pdfjs_require__(74);\n\t\n\tvar Stream = function StreamClosure() {\n\t  function Stream(arrayBuffer, start, length, dict) {\n\t    this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n\t    this.start = start || 0;\n\t    this.pos = this.start;\n\t    this.end = start + length || this.bytes.length;\n\t    this.dict = dict;\n\t  }\n\t  Stream.prototype = {\n\t    get length() {\n\t      return this.end - this.start;\n\t    },\n\t    get isEmpty() {\n\t      return this.length === 0;\n\t    },\n\t    getByte: function Stream_getByte() {\n\t      if (this.pos >= this.end) {\n\t        return -1;\n\t      }\n\t      return this.bytes[this.pos++];\n\t    },\n\t    getUint16: function Stream_getUint16() {\n\t      var b0 = this.getByte();\n\t      var b1 = this.getByte();\n\t      if (b0 === -1 || b1 === -1) {\n\t        return -1;\n\t      }\n\t      return (b0 << 8) + b1;\n\t    },\n\t    getInt32: function Stream_getInt32() {\n\t      var b0 = this.getByte();\n\t      var b1 = this.getByte();\n\t      var b2 = this.getByte();\n\t      var b3 = this.getByte();\n\t      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n\t    },\n\t    getBytes: function Stream_getBytes(length) {\n\t      var bytes = this.bytes;\n\t      var pos = this.pos;\n\t      var strEnd = this.end;\n\t      if (!length) {\n\t        return bytes.subarray(pos, strEnd);\n\t      }\n\t      var end = pos + length;\n\t      if (end > strEnd) {\n\t        end = strEnd;\n\t      }\n\t      this.pos = end;\n\t      return bytes.subarray(pos, end);\n\t    },\n\t    peekByte: function Stream_peekByte() {\n\t      var peekedByte = this.getByte();\n\t      this.pos--;\n\t      return peekedByte;\n\t    },\n\t    peekBytes: function Stream_peekBytes(length) {\n\t      var bytes = this.getBytes(length);\n\t      this.pos -= bytes.length;\n\t      return bytes;\n\t    },\n\t    skip: function Stream_skip(n) {\n\t      if (!n) {\n\t        n = 1;\n\t      }\n\t      this.pos += n;\n\t    },\n\t    reset: function Stream_reset() {\n\t      this.pos = this.start;\n\t    },\n\t    moveStart: function Stream_moveStart() {\n\t      this.start = this.pos;\n\t    },\n\t    makeSubStream: function Stream_makeSubStream(start, length, dict) {\n\t      return new Stream(this.bytes.buffer, start, length, dict);\n\t    }\n\t  };\n\t  return Stream;\n\t}();\n\tvar StringStream = function StringStreamClosure() {\n\t  function StringStream(str) {\n\t    var bytes = (0, _util.stringToBytes)(str);\n\t    Stream.call(this, bytes);\n\t  }\n\t  StringStream.prototype = Stream.prototype;\n\t  return StringStream;\n\t}();\n\tvar DecodeStream = function DecodeStreamClosure() {\n\t  var emptyBuffer = new Uint8Array(0);\n\t  function DecodeStream(maybeMinBufferLength) {\n\t    this.pos = 0;\n\t    this.bufferLength = 0;\n\t    this.eof = false;\n\t    this.buffer = emptyBuffer;\n\t    this.minBufferLength = 512;\n\t    if (maybeMinBufferLength) {\n\t      while (this.minBufferLength < maybeMinBufferLength) {\n\t        this.minBufferLength *= 2;\n\t      }\n\t    }\n\t  }\n\t  DecodeStream.prototype = {\n\t    get isEmpty() {\n\t      while (!this.eof && this.bufferLength === 0) {\n\t        this.readBlock();\n\t      }\n\t      return this.bufferLength === 0;\n\t    },\n\t    ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n\t      var buffer = this.buffer;\n\t      if (requested <= buffer.byteLength) {\n\t        return buffer;\n\t      }\n\t      var size = this.minBufferLength;\n\t      while (size < requested) {\n\t        size *= 2;\n\t      }\n\t      var buffer2 = new Uint8Array(size);\n\t      buffer2.set(buffer);\n\t      return this.buffer = buffer2;\n\t    },\n\t    getByte: function DecodeStream_getByte() {\n\t      var pos = this.pos;\n\t      while (this.bufferLength <= pos) {\n\t        if (this.eof) {\n\t          return -1;\n\t        }\n\t        this.readBlock();\n\t      }\n\t      return this.buffer[this.pos++];\n\t    },\n\t    getUint16: function DecodeStream_getUint16() {\n\t      var b0 = this.getByte();\n\t      var b1 = this.getByte();\n\t      if (b0 === -1 || b1 === -1) {\n\t        return -1;\n\t      }\n\t      return (b0 << 8) + b1;\n\t    },\n\t    getInt32: function DecodeStream_getInt32() {\n\t      var b0 = this.getByte();\n\t      var b1 = this.getByte();\n\t      var b2 = this.getByte();\n\t      var b3 = this.getByte();\n\t      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n\t    },\n\t    getBytes: function DecodeStream_getBytes(length) {\n\t      var end,\n\t          pos = this.pos;\n\t      if (length) {\n\t        this.ensureBuffer(pos + length);\n\t        end = pos + length;\n\t        while (!this.eof && this.bufferLength < end) {\n\t          this.readBlock();\n\t        }\n\t        var bufEnd = this.bufferLength;\n\t        if (end > bufEnd) {\n\t          end = bufEnd;\n\t        }\n\t      } else {\n\t        while (!this.eof) {\n\t          this.readBlock();\n\t        }\n\t        end = this.bufferLength;\n\t      }\n\t      this.pos = end;\n\t      return this.buffer.subarray(pos, end);\n\t    },\n\t    peekByte: function DecodeStream_peekByte() {\n\t      var peekedByte = this.getByte();\n\t      this.pos--;\n\t      return peekedByte;\n\t    },\n\t    peekBytes: function DecodeStream_peekBytes(length) {\n\t      var bytes = this.getBytes(length);\n\t      this.pos -= bytes.length;\n\t      return bytes;\n\t    },\n\t    makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n\t      var end = start + length;\n\t      while (this.bufferLength <= end && !this.eof) {\n\t        this.readBlock();\n\t      }\n\t      return new Stream(this.buffer, start, length, dict);\n\t    },\n\t    skip: function DecodeStream_skip(n) {\n\t      if (!n) {\n\t        n = 1;\n\t      }\n\t      this.pos += n;\n\t    },\n\t    reset: function DecodeStream_reset() {\n\t      this.pos = 0;\n\t    },\n\t    getBaseStreams: function DecodeStream_getBaseStreams() {\n\t      if (this.str && this.str.getBaseStreams) {\n\t        return this.str.getBaseStreams();\n\t      }\n\t      return [];\n\t    }\n\t  };\n\t  return DecodeStream;\n\t}();\n\tvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n\t  function StreamsSequenceStream(streams) {\n\t    this.streams = streams;\n\t    DecodeStream.call(this, null);\n\t  }\n\t  StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n\t  StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n\t    var streams = this.streams;\n\t    if (streams.length === 0) {\n\t      this.eof = true;\n\t      return;\n\t    }\n\t    var stream = streams.shift();\n\t    var chunk = stream.getBytes();\n\t    var bufferLength = this.bufferLength;\n\t    var newLength = bufferLength + chunk.length;\n\t    var buffer = this.ensureBuffer(newLength);\n\t    buffer.set(chunk, bufferLength);\n\t    this.bufferLength = newLength;\n\t  };\n\t  StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n\t    var baseStreams = [];\n\t    for (var i = 0, ii = this.streams.length; i < ii; i++) {\n\t      var stream = this.streams[i];\n\t      if (stream.getBaseStreams) {\n\t        _util.Util.appendToArray(baseStreams, stream.getBaseStreams());\n\t      }\n\t    }\n\t    return baseStreams;\n\t  };\n\t  return StreamsSequenceStream;\n\t}();\n\tvar FlateStream = function FlateStreamClosure() {\n\t  var codeLenCodeMap = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n\t  var lengthDecode = new Int32Array([0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a, 0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f, 0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073, 0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102]);\n\t  var distDecode = new Int32Array([0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d, 0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1, 0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01, 0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001]);\n\t  var fixedLitCodeTab = [new Int32Array([0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0, 0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0, 0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0, 0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8, 0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8, 0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8, 0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4, 0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4, 0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4, 0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc, 0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec, 0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc, 0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2, 0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2, 0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2, 0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca, 0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea, 0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da, 0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6, 0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6, 0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6, 0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce, 0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee, 0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de, 0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe, 0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1, 0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1, 0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1, 0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9, 0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9, 0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9, 0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5, 0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5, 0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5, 0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd, 0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed, 0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd, 0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3, 0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3, 0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3, 0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb, 0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb, 0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db, 0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7, 0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7, 0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7, 0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf, 0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef, 0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df, 0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff]), 9];\n\t  var fixedDistCodeTab = [new Int32Array([0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c, 0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000, 0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d, 0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000]), 5];\n\t  function FlateStream(str, maybeLength) {\n\t    this.str = str;\n\t    this.dict = str.dict;\n\t    var cmf = str.getByte();\n\t    var flg = str.getByte();\n\t    if (cmf === -1 || flg === -1) {\n\t      throw new _util.FormatError('Invalid header in flate stream: ' + cmf + ', ' + flg);\n\t    }\n\t    if ((cmf & 0x0f) !== 0x08) {\n\t      throw new _util.FormatError('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n\t    }\n\t    if (((cmf << 8) + flg) % 31 !== 0) {\n\t      throw new _util.FormatError('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n\t    }\n\t    if (flg & 0x20) {\n\t      throw new _util.FormatError('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n\t    }\n\t    this.codeSize = 0;\n\t    this.codeBuf = 0;\n\t    DecodeStream.call(this, maybeLength);\n\t  }\n\t  FlateStream.prototype = Object.create(DecodeStream.prototype);\n\t  FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n\t    var str = this.str;\n\t    var codeSize = this.codeSize;\n\t    var codeBuf = this.codeBuf;\n\t    var b;\n\t    while (codeSize < bits) {\n\t      if ((b = str.getByte()) === -1) {\n\t        throw new _util.FormatError('Bad encoding in flate stream');\n\t      }\n\t      codeBuf |= b << codeSize;\n\t      codeSize += 8;\n\t    }\n\t    b = codeBuf & (1 << bits) - 1;\n\t    this.codeBuf = codeBuf >> bits;\n\t    this.codeSize = codeSize -= bits;\n\t    return b;\n\t  };\n\t  FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n\t    var str = this.str;\n\t    var codes = table[0];\n\t    var maxLen = table[1];\n\t    var codeSize = this.codeSize;\n\t    var codeBuf = this.codeBuf;\n\t    var b;\n\t    while (codeSize < maxLen) {\n\t      if ((b = str.getByte()) === -1) {\n\t        break;\n\t      }\n\t      codeBuf |= b << codeSize;\n\t      codeSize += 8;\n\t    }\n\t    var code = codes[codeBuf & (1 << maxLen) - 1];\n\t    var codeLen = code >> 16;\n\t    var codeVal = code & 0xffff;\n\t    if (codeLen < 1 || codeSize < codeLen) {\n\t      throw new _util.FormatError('Bad encoding in flate stream');\n\t    }\n\t    this.codeBuf = codeBuf >> codeLen;\n\t    this.codeSize = codeSize - codeLen;\n\t    return codeVal;\n\t  };\n\t  FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n\t    var n = lengths.length;\n\t    var maxLen = 0;\n\t    var i;\n\t    for (i = 0; i < n; ++i) {\n\t      if (lengths[i] > maxLen) {\n\t        maxLen = lengths[i];\n\t      }\n\t    }\n\t    var size = 1 << maxLen;\n\t    var codes = new Int32Array(size);\n\t    for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n\t      for (var val = 0; val < n; ++val) {\n\t        if (lengths[val] === len) {\n\t          var code2 = 0;\n\t          var t = code;\n\t          for (i = 0; i < len; ++i) {\n\t            code2 = code2 << 1 | t & 1;\n\t            t >>= 1;\n\t          }\n\t          for (i = code2; i < size; i += skip) {\n\t            codes[i] = len << 16 | val;\n\t          }\n\t          ++code;\n\t        }\n\t      }\n\t    }\n\t    return [codes, maxLen];\n\t  };\n\t  FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n\t    var buffer, len;\n\t    var str = this.str;\n\t    var hdr = this.getBits(3);\n\t    if (hdr & 1) {\n\t      this.eof = true;\n\t    }\n\t    hdr >>= 1;\n\t    if (hdr === 0) {\n\t      var b;\n\t      if ((b = str.getByte()) === -1) {\n\t        throw new _util.FormatError('Bad block header in flate stream');\n\t      }\n\t      var blockLen = b;\n\t      if ((b = str.getByte()) === -1) {\n\t        throw new _util.FormatError('Bad block header in flate stream');\n\t      }\n\t      blockLen |= b << 8;\n\t      if ((b = str.getByte()) === -1) {\n\t        throw new _util.FormatError('Bad block header in flate stream');\n\t      }\n\t      var check = b;\n\t      if ((b = str.getByte()) === -1) {\n\t        throw new _util.FormatError('Bad block header in flate stream');\n\t      }\n\t      check |= b << 8;\n\t      if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n\t        throw new _util.FormatError('Bad uncompressed block length in flate stream');\n\t      }\n\t      this.codeBuf = 0;\n\t      this.codeSize = 0;\n\t      var bufferLength = this.bufferLength;\n\t      buffer = this.ensureBuffer(bufferLength + blockLen);\n\t      var end = bufferLength + blockLen;\n\t      this.bufferLength = end;\n\t      if (blockLen === 0) {\n\t        if (str.peekByte() === -1) {\n\t          this.eof = true;\n\t        }\n\t      } else {\n\t        for (var n = bufferLength; n < end; ++n) {\n\t          if ((b = str.getByte()) === -1) {\n\t            this.eof = true;\n\t            break;\n\t          }\n\t          buffer[n] = b;\n\t        }\n\t      }\n\t      return;\n\t    }\n\t    var litCodeTable;\n\t    var distCodeTable;\n\t    if (hdr === 1) {\n\t      litCodeTable = fixedLitCodeTab;\n\t      distCodeTable = fixedDistCodeTab;\n\t    } else if (hdr === 2) {\n\t      var numLitCodes = this.getBits(5) + 257;\n\t      var numDistCodes = this.getBits(5) + 1;\n\t      var numCodeLenCodes = this.getBits(4) + 4;\n\t      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n\t      var i;\n\t      for (i = 0; i < numCodeLenCodes; ++i) {\n\t        codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n\t      }\n\t      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n\t      len = 0;\n\t      i = 0;\n\t      var codes = numLitCodes + numDistCodes;\n\t      var codeLengths = new Uint8Array(codes);\n\t      var bitsLength, bitsOffset, what;\n\t      while (i < codes) {\n\t        var code = this.getCode(codeLenCodeTab);\n\t        if (code === 16) {\n\t          bitsLength = 2;\n\t          bitsOffset = 3;\n\t          what = len;\n\t        } else if (code === 17) {\n\t          bitsLength = 3;\n\t          bitsOffset = 3;\n\t          what = len = 0;\n\t        } else if (code === 18) {\n\t          bitsLength = 7;\n\t          bitsOffset = 11;\n\t          what = len = 0;\n\t        } else {\n\t          codeLengths[i++] = len = code;\n\t          continue;\n\t        }\n\t        var repeatLength = this.getBits(bitsLength) + bitsOffset;\n\t        while (repeatLength-- > 0) {\n\t          codeLengths[i++] = what;\n\t        }\n\t      }\n\t      litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n\t      distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n\t    } else {\n\t      throw new _util.FormatError('Unknown block type in flate stream');\n\t    }\n\t    buffer = this.buffer;\n\t    var limit = buffer ? buffer.length : 0;\n\t    var pos = this.bufferLength;\n\t    while (true) {\n\t      var code1 = this.getCode(litCodeTable);\n\t      if (code1 < 256) {\n\t        if (pos + 1 >= limit) {\n\t          buffer = this.ensureBuffer(pos + 1);\n\t          limit = buffer.length;\n\t        }\n\t        buffer[pos++] = code1;\n\t        continue;\n\t      }\n\t      if (code1 === 256) {\n\t        this.bufferLength = pos;\n\t        return;\n\t      }\n\t      code1 -= 257;\n\t      code1 = lengthDecode[code1];\n\t      var code2 = code1 >> 16;\n\t      if (code2 > 0) {\n\t        code2 = this.getBits(code2);\n\t      }\n\t      len = (code1 & 0xffff) + code2;\n\t      code1 = this.getCode(distCodeTable);\n\t      code1 = distDecode[code1];\n\t      code2 = code1 >> 16;\n\t      if (code2 > 0) {\n\t        code2 = this.getBits(code2);\n\t      }\n\t      var dist = (code1 & 0xffff) + code2;\n\t      if (pos + len >= limit) {\n\t        buffer = this.ensureBuffer(pos + len);\n\t        limit = buffer.length;\n\t      }\n\t      for (var k = 0; k < len; ++k, ++pos) {\n\t        buffer[pos] = buffer[pos - dist];\n\t      }\n\t    }\n\t  };\n\t  return FlateStream;\n\t}();\n\tvar PredictorStream = function PredictorStreamClosure() {\n\t  function PredictorStream(str, maybeLength, params) {\n\t    if (!(0, _primitives.isDict)(params)) {\n\t      return str;\n\t    }\n\t    var predictor = this.predictor = params.get('Predictor') || 1;\n\t    if (predictor <= 1) {\n\t      return str;\n\t    }\n\t    if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n\t      throw new _util.FormatError('Unsupported predictor: ' + predictor);\n\t    }\n\t    if (predictor === 2) {\n\t      this.readBlock = this.readBlockTiff;\n\t    } else {\n\t      this.readBlock = this.readBlockPng;\n\t    }\n\t    this.str = str;\n\t    this.dict = str.dict;\n\t    var colors = this.colors = params.get('Colors') || 1;\n\t    var bits = this.bits = params.get('BitsPerComponent') || 8;\n\t    var columns = this.columns = params.get('Columns') || 1;\n\t    this.pixBytes = colors * bits + 7 >> 3;\n\t    this.rowBytes = columns * colors * bits + 7 >> 3;\n\t    DecodeStream.call(this, maybeLength);\n\t    return this;\n\t  }\n\t  PredictorStream.prototype = Object.create(DecodeStream.prototype);\n\t  PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n\t    var rowBytes = this.rowBytes;\n\t    var bufferLength = this.bufferLength;\n\t    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n\t    var bits = this.bits;\n\t    var colors = this.colors;\n\t    var rawBytes = this.str.getBytes(rowBytes);\n\t    this.eof = !rawBytes.length;\n\t    if (this.eof) {\n\t      return;\n\t    }\n\t    var inbuf = 0,\n\t        outbuf = 0;\n\t    var inbits = 0,\n\t        outbits = 0;\n\t    var pos = bufferLength;\n\t    var i;\n\t    if (bits === 1 && colors === 1) {\n\t      for (i = 0; i < rowBytes; ++i) {\n\t        var c = rawBytes[i] ^ inbuf;\n\t        c ^= c >> 1;\n\t        c ^= c >> 2;\n\t        c ^= c >> 4;\n\t        inbuf = (c & 1) << 7;\n\t        buffer[pos++] = c;\n\t      }\n\t    } else if (bits === 8) {\n\t      for (i = 0; i < colors; ++i) {\n\t        buffer[pos++] = rawBytes[i];\n\t      }\n\t      for (; i < rowBytes; ++i) {\n\t        buffer[pos] = buffer[pos - colors] + rawBytes[i];\n\t        pos++;\n\t      }\n\t    } else if (bits === 16) {\n\t      var bytesPerPixel = colors * 2;\n\t      for (i = 0; i < bytesPerPixel; ++i) {\n\t        buffer[pos++] = rawBytes[i];\n\t      }\n\t      for (; i < rowBytes; i += 2) {\n\t        var sum = ((rawBytes[i] & 0xFF) << 8) + (rawBytes[i + 1] & 0xFF) + ((buffer[pos - bytesPerPixel] & 0xFF) << 8) + (buffer[pos - bytesPerPixel + 1] & 0xFF);\n\t        buffer[pos++] = sum >> 8 & 0xFF;\n\t        buffer[pos++] = sum & 0xFF;\n\t      }\n\t    } else {\n\t      var compArray = new Uint8Array(colors + 1);\n\t      var bitMask = (1 << bits) - 1;\n\t      var j = 0,\n\t          k = bufferLength;\n\t      var columns = this.columns;\n\t      for (i = 0; i < columns; ++i) {\n\t        for (var kk = 0; kk < colors; ++kk) {\n\t          if (inbits < bits) {\n\t            inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\n\t            inbits += 8;\n\t          }\n\t          compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n\t          inbits -= bits;\n\t          outbuf = outbuf << bits | compArray[kk];\n\t          outbits += bits;\n\t          if (outbits >= 8) {\n\t            buffer[k++] = outbuf >> outbits - 8 & 0xFF;\n\t            outbits -= 8;\n\t          }\n\t        }\n\t      }\n\t      if (outbits > 0) {\n\t        buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n\t      }\n\t    }\n\t    this.bufferLength += rowBytes;\n\t  };\n\t  PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n\t    var rowBytes = this.rowBytes;\n\t    var pixBytes = this.pixBytes;\n\t    var predictor = this.str.getByte();\n\t    var rawBytes = this.str.getBytes(rowBytes);\n\t    this.eof = !rawBytes.length;\n\t    if (this.eof) {\n\t      return;\n\t    }\n\t    var bufferLength = this.bufferLength;\n\t    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n\t    var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n\t    if (prevRow.length === 0) {\n\t      prevRow = new Uint8Array(rowBytes);\n\t    }\n\t    var i,\n\t        j = bufferLength,\n\t        up,\n\t        c;\n\t    switch (predictor) {\n\t      case 0:\n\t        for (i = 0; i < rowBytes; ++i) {\n\t          buffer[j++] = rawBytes[i];\n\t        }\n\t        break;\n\t      case 1:\n\t        for (i = 0; i < pixBytes; ++i) {\n\t          buffer[j++] = rawBytes[i];\n\t        }\n\t        for (; i < rowBytes; ++i) {\n\t          buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\n\t          j++;\n\t        }\n\t        break;\n\t      case 2:\n\t        for (i = 0; i < rowBytes; ++i) {\n\t          buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\n\t        }\n\t        break;\n\t      case 3:\n\t        for (i = 0; i < pixBytes; ++i) {\n\t          buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n\t        }\n\t        for (; i < rowBytes; ++i) {\n\t          buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\n\t          j++;\n\t        }\n\t        break;\n\t      case 4:\n\t        for (i = 0; i < pixBytes; ++i) {\n\t          up = prevRow[i];\n\t          c = rawBytes[i];\n\t          buffer[j++] = up + c;\n\t        }\n\t        for (; i < rowBytes; ++i) {\n\t          up = prevRow[i];\n\t          var upLeft = prevRow[i - pixBytes];\n\t          var left = buffer[j - pixBytes];\n\t          var p = left + up - upLeft;\n\t          var pa = p - left;\n\t          if (pa < 0) {\n\t            pa = -pa;\n\t          }\n\t          var pb = p - up;\n\t          if (pb < 0) {\n\t            pb = -pb;\n\t          }\n\t          var pc = p - upLeft;\n\t          if (pc < 0) {\n\t            pc = -pc;\n\t          }\n\t          c = rawBytes[i];\n\t          if (pa <= pb && pa <= pc) {\n\t            buffer[j++] = left + c;\n\t          } else if (pb <= pc) {\n\t            buffer[j++] = up + c;\n\t          } else {\n\t            buffer[j++] = upLeft + c;\n\t          }\n\t        }\n\t        break;\n\t      default:\n\t        throw new _util.FormatError('Unsupported predictor: ' + predictor);\n\t    }\n\t    this.bufferLength += rowBytes;\n\t  };\n\t  return PredictorStream;\n\t}();\n\tvar JpegStream = function JpegStreamClosure() {\n\t  function JpegStream(stream, maybeLength, dict, params) {\n\t    var ch;\n\t    while ((ch = stream.getByte()) !== -1) {\n\t      if (ch === 0xFF) {\n\t        stream.skip(-1);\n\t        break;\n\t      }\n\t    }\n\t    this.stream = stream;\n\t    this.maybeLength = maybeLength;\n\t    this.dict = dict;\n\t    this.params = params;\n\t    DecodeStream.call(this, maybeLength);\n\t  }\n\t  JpegStream.prototype = Object.create(DecodeStream.prototype);\n\t  Object.defineProperty(JpegStream.prototype, 'bytes', {\n\t    get: function JpegStream_bytes() {\n\t      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n\t    },\n\t    configurable: true\n\t  });\n\t  JpegStream.prototype.ensureBuffer = function JpegStream_ensureBuffer(req) {\n\t    if (this.bufferLength) {\n\t      return;\n\t    }\n\t    var jpegImage = new _jpg.JpegImage();\n\t    var decodeArr = this.dict.getArray('Decode', 'D');\n\t    if (this.forceRGB && Array.isArray(decodeArr)) {\n\t      var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n\t      var decodeArrLength = decodeArr.length;\n\t      var transform = new Int32Array(decodeArrLength);\n\t      var transformNeeded = false;\n\t      var maxValue = (1 << bitsPerComponent) - 1;\n\t      for (var i = 0; i < decodeArrLength; i += 2) {\n\t        transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n\t        transform[i + 1] = decodeArr[i] * maxValue | 0;\n\t        if (transform[i] !== 256 || transform[i + 1] !== 0) {\n\t          transformNeeded = true;\n\t        }\n\t      }\n\t      if (transformNeeded) {\n\t        jpegImage.decodeTransform = transform;\n\t      }\n\t    }\n\t    if ((0, _primitives.isDict)(this.params)) {\n\t      var colorTransform = this.params.get('ColorTransform');\n\t      if (Number.isInteger(colorTransform)) {\n\t        jpegImage.colorTransform = colorTransform;\n\t      }\n\t    }\n\t    jpegImage.parse(this.bytes);\n\t    var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\n\t    this.buffer = data;\n\t    this.bufferLength = data.length;\n\t    this.eof = true;\n\t  };\n\t  JpegStream.prototype.getBytes = function JpegStream_getBytes(length) {\n\t    this.ensureBuffer();\n\t    return this.buffer;\n\t  };\n\t  JpegStream.prototype.getIR = function JpegStream_getIR(forceDataSchema) {\n\t    return (0, _util.createObjectURL)(this.bytes, 'image/jpeg', forceDataSchema);\n\t  };\n\t  return JpegStream;\n\t}();\n\tvar JpxStream = function JpxStreamClosure() {\n\t  function JpxStream(stream, maybeLength, dict, params) {\n\t    this.stream = stream;\n\t    this.maybeLength = maybeLength;\n\t    this.dict = dict;\n\t    this.params = params;\n\t    DecodeStream.call(this, maybeLength);\n\t  }\n\t  JpxStream.prototype = Object.create(DecodeStream.prototype);\n\t  Object.defineProperty(JpxStream.prototype, 'bytes', {\n\t    get: function JpxStream_bytes() {\n\t      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n\t    },\n\t    configurable: true\n\t  });\n\t  JpxStream.prototype.ensureBuffer = function JpxStream_ensureBuffer(req) {\n\t    if (this.bufferLength) {\n\t      return;\n\t    }\n\t    var jpxImage = new _jpx.JpxImage();\n\t    jpxImage.parse(this.bytes);\n\t    var width = jpxImage.width;\n\t    var height = jpxImage.height;\n\t    var componentsCount = jpxImage.componentsCount;\n\t    var tileCount = jpxImage.tiles.length;\n\t    if (tileCount === 1) {\n\t      this.buffer = jpxImage.tiles[0].items;\n\t    } else {\n\t      var data = new Uint8ClampedArray(width * height * componentsCount);\n\t      for (var k = 0; k < tileCount; k++) {\n\t        var tileComponents = jpxImage.tiles[k];\n\t        var tileWidth = tileComponents.width;\n\t        var tileHeight = tileComponents.height;\n\t        var tileLeft = tileComponents.left;\n\t        var tileTop = tileComponents.top;\n\t        var src = tileComponents.items;\n\t        var srcPosition = 0;\n\t        var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n\t        var imgRowSize = width * componentsCount;\n\t        var tileRowSize = tileWidth * componentsCount;\n\t        for (var j = 0; j < tileHeight; j++) {\n\t          var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n\t          data.set(rowBytes, dataPosition);\n\t          srcPosition += tileRowSize;\n\t          dataPosition += imgRowSize;\n\t        }\n\t      }\n\t      this.buffer = data;\n\t    }\n\t    this.bufferLength = this.buffer.length;\n\t    this.eof = true;\n\t  };\n\t  return JpxStream;\n\t}();\n\tvar DecryptStream = function DecryptStreamClosure() {\n\t  function DecryptStream(str, maybeLength, decrypt) {\n\t    this.str = str;\n\t    this.dict = str.dict;\n\t    this.decrypt = decrypt;\n\t    this.nextChunk = null;\n\t    this.initialized = false;\n\t    DecodeStream.call(this, maybeLength);\n\t  }\n\t  var chunkSize = 512;\n\t  DecryptStream.prototype = Object.create(DecodeStream.prototype);\n\t  DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n\t    var chunk;\n\t    if (this.initialized) {\n\t      chunk = this.nextChunk;\n\t    } else {\n\t      chunk = this.str.getBytes(chunkSize);\n\t      this.initialized = true;\n\t    }\n\t    if (!chunk || chunk.length === 0) {\n\t      this.eof = true;\n\t      return;\n\t    }\n\t    this.nextChunk = this.str.getBytes(chunkSize);\n\t    var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n\t    var decrypt = this.decrypt;\n\t    chunk = decrypt(chunk, !hasMoreData);\n\t    var bufferLength = this.bufferLength;\n\t    var i,\n\t        n = chunk.length;\n\t    var buffer = this.ensureBuffer(bufferLength + n);\n\t    for (i = 0; i < n; i++) {\n\t      buffer[bufferLength++] = chunk[i];\n\t    }\n\t    this.bufferLength = bufferLength;\n\t  };\n\t  return DecryptStream;\n\t}();\n\tvar Ascii85Stream = function Ascii85StreamClosure() {\n\t  function Ascii85Stream(str, maybeLength) {\n\t    this.str = str;\n\t    this.dict = str.dict;\n\t    this.input = new Uint8Array(5);\n\t    if (maybeLength) {\n\t      maybeLength = 0.8 * maybeLength;\n\t    }\n\t    DecodeStream.call(this, maybeLength);\n\t  }\n\t  Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n\t  Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n\t    var TILDA_CHAR = 0x7E;\n\t    var Z_LOWER_CHAR = 0x7A;\n\t    var EOF = -1;\n\t    var str = this.str;\n\t    var c = str.getByte();\n\t    while ((0, _util.isSpace)(c)) {\n\t      c = str.getByte();\n\t    }\n\t    if (c === EOF || c === TILDA_CHAR) {\n\t      this.eof = true;\n\t      return;\n\t    }\n\t    var bufferLength = this.bufferLength,\n\t        buffer;\n\t    var i;\n\t    if (c === Z_LOWER_CHAR) {\n\t      buffer = this.ensureBuffer(bufferLength + 4);\n\t      for (i = 0; i < 4; ++i) {\n\t        buffer[bufferLength + i] = 0;\n\t      }\n\t      this.bufferLength += 4;\n\t    } else {\n\t      var input = this.input;\n\t      input[0] = c;\n\t      for (i = 1; i < 5; ++i) {\n\t        c = str.getByte();\n\t        while ((0, _util.isSpace)(c)) {\n\t          c = str.getByte();\n\t        }\n\t        input[i] = c;\n\t        if (c === EOF || c === TILDA_CHAR) {\n\t          break;\n\t        }\n\t      }\n\t      buffer = this.ensureBuffer(bufferLength + i - 1);\n\t      this.bufferLength += i - 1;\n\t      if (i < 5) {\n\t        for (; i < 5; ++i) {\n\t          input[i] = 0x21 + 84;\n\t        }\n\t        this.eof = true;\n\t      }\n\t      var t = 0;\n\t      for (i = 0; i < 5; ++i) {\n\t        t = t * 85 + (input[i] - 0x21);\n\t      }\n\t      for (i = 3; i >= 0; --i) {\n\t        buffer[bufferLength + i] = t & 0xFF;\n\t        t >>= 8;\n\t      }\n\t    }\n\t  };\n\t  return Ascii85Stream;\n\t}();\n\tvar AsciiHexStream = function AsciiHexStreamClosure() {\n\t  function AsciiHexStream(str, maybeLength) {\n\t    this.str = str;\n\t    this.dict = str.dict;\n\t    this.firstDigit = -1;\n\t    if (maybeLength) {\n\t      maybeLength = 0.5 * maybeLength;\n\t    }\n\t    DecodeStream.call(this, maybeLength);\n\t  }\n\t  AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n\t  AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n\t    var UPSTREAM_BLOCK_SIZE = 8000;\n\t    var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n\t    if (!bytes.length) {\n\t      this.eof = true;\n\t      return;\n\t    }\n\t    var maxDecodeLength = bytes.length + 1 >> 1;\n\t    var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n\t    var bufferLength = this.bufferLength;\n\t    var firstDigit = this.firstDigit;\n\t    for (var i = 0, ii = bytes.length; i < ii; i++) {\n\t      var ch = bytes[i],\n\t          digit;\n\t      if (ch >= 0x30 && ch <= 0x39) {\n\t        digit = ch & 0x0F;\n\t      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n\t        digit = (ch & 0x0F) + 9;\n\t      } else if (ch === 0x3E) {\n\t        this.eof = true;\n\t        break;\n\t      } else {\n\t        continue;\n\t      }\n\t      if (firstDigit < 0) {\n\t        firstDigit = digit;\n\t      } else {\n\t        buffer[bufferLength++] = firstDigit << 4 | digit;\n\t        firstDigit = -1;\n\t      }\n\t    }\n\t    if (firstDigit >= 0 && this.eof) {\n\t      buffer[bufferLength++] = firstDigit << 4;\n\t      firstDigit = -1;\n\t    }\n\t    this.firstDigit = firstDigit;\n\t    this.bufferLength = bufferLength;\n\t  };\n\t  return AsciiHexStream;\n\t}();\n\tvar RunLengthStream = function RunLengthStreamClosure() {\n\t  function RunLengthStream(str, maybeLength) {\n\t    this.str = str;\n\t    this.dict = str.dict;\n\t    DecodeStream.call(this, maybeLength);\n\t  }\n\t  RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n\t  RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n\t    var repeatHeader = this.str.getBytes(2);\n\t    if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n\t      this.eof = true;\n\t      return;\n\t    }\n\t    var buffer;\n\t    var bufferLength = this.bufferLength;\n\t    var n = repeatHeader[0];\n\t    if (n < 128) {\n\t      buffer = this.ensureBuffer(bufferLength + n + 1);\n\t      buffer[bufferLength++] = repeatHeader[1];\n\t      if (n > 0) {\n\t        var source = this.str.getBytes(n);\n\t        buffer.set(source, bufferLength);\n\t        bufferLength += n;\n\t      }\n\t    } else {\n\t      n = 257 - n;\n\t      var b = repeatHeader[1];\n\t      buffer = this.ensureBuffer(bufferLength + n + 1);\n\t      for (var i = 0; i < n; i++) {\n\t        buffer[bufferLength++] = b;\n\t      }\n\t    }\n\t    this.bufferLength = bufferLength;\n\t  };\n\t  return RunLengthStream;\n\t}();\n\tvar LZWStream = function LZWStreamClosure() {\n\t  function LZWStream(str, maybeLength, earlyChange) {\n\t    this.str = str;\n\t    this.dict = str.dict;\n\t    this.cachedData = 0;\n\t    this.bitsCached = 0;\n\t    var maxLzwDictionarySize = 4096;\n\t    var lzwState = {\n\t      earlyChange: earlyChange,\n\t      codeLength: 9,\n\t      nextCode: 258,\n\t      dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n\t      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n\t      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n\t      currentSequence: new Uint8Array(maxLzwDictionarySize),\n\t      currentSequenceLength: 0\n\t    };\n\t    for (var i = 0; i < 256; ++i) {\n\t      lzwState.dictionaryValues[i] = i;\n\t      lzwState.dictionaryLengths[i] = 1;\n\t    }\n\t    this.lzwState = lzwState;\n\t    DecodeStream.call(this, maybeLength);\n\t  }\n\t  LZWStream.prototype = Object.create(DecodeStream.prototype);\n\t  LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n\t    var bitsCached = this.bitsCached;\n\t    var cachedData = this.cachedData;\n\t    while (bitsCached < n) {\n\t      var c = this.str.getByte();\n\t      if (c === -1) {\n\t        this.eof = true;\n\t        return null;\n\t      }\n\t      cachedData = cachedData << 8 | c;\n\t      bitsCached += 8;\n\t    }\n\t    this.bitsCached = bitsCached -= n;\n\t    this.cachedData = cachedData;\n\t    this.lastCode = null;\n\t    return cachedData >>> bitsCached & (1 << n) - 1;\n\t  };\n\t  LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n\t    var blockSize = 512;\n\t    var estimatedDecodedSize = blockSize * 2,\n\t        decodedSizeDelta = blockSize;\n\t    var i, j, q;\n\t    var lzwState = this.lzwState;\n\t    if (!lzwState) {\n\t      return;\n\t    }\n\t    var earlyChange = lzwState.earlyChange;\n\t    var nextCode = lzwState.nextCode;\n\t    var dictionaryValues = lzwState.dictionaryValues;\n\t    var dictionaryLengths = lzwState.dictionaryLengths;\n\t    var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n\t    var codeLength = lzwState.codeLength;\n\t    var prevCode = lzwState.prevCode;\n\t    var currentSequence = lzwState.currentSequence;\n\t    var currentSequenceLength = lzwState.currentSequenceLength;\n\t    var decodedLength = 0;\n\t    var currentBufferLength = this.bufferLength;\n\t    var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n\t    for (i = 0; i < blockSize; i++) {\n\t      var code = this.readBits(codeLength);\n\t      var hasPrev = currentSequenceLength > 0;\n\t      if (code < 256) {\n\t        currentSequence[0] = code;\n\t        currentSequenceLength = 1;\n\t      } else if (code >= 258) {\n\t        if (code < nextCode) {\n\t          currentSequenceLength = dictionaryLengths[code];\n\t          for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n\t            currentSequence[j] = dictionaryValues[q];\n\t            q = dictionaryPrevCodes[q];\n\t          }\n\t        } else {\n\t          currentSequence[currentSequenceLength++] = currentSequence[0];\n\t        }\n\t      } else if (code === 256) {\n\t        codeLength = 9;\n\t        nextCode = 258;\n\t        currentSequenceLength = 0;\n\t        continue;\n\t      } else {\n\t        this.eof = true;\n\t        delete this.lzwState;\n\t        break;\n\t      }\n\t      if (hasPrev) {\n\t        dictionaryPrevCodes[nextCode] = prevCode;\n\t        dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n\t        dictionaryValues[nextCode] = currentSequence[0];\n\t        nextCode++;\n\t        codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n\t      }\n\t      prevCode = code;\n\t      decodedLength += currentSequenceLength;\n\t      if (estimatedDecodedSize < decodedLength) {\n\t        do {\n\t          estimatedDecodedSize += decodedSizeDelta;\n\t        } while (estimatedDecodedSize < decodedLength);\n\t        buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n\t      }\n\t      for (j = 0; j < currentSequenceLength; j++) {\n\t        buffer[currentBufferLength++] = currentSequence[j];\n\t      }\n\t    }\n\t    lzwState.nextCode = nextCode;\n\t    lzwState.codeLength = codeLength;\n\t    lzwState.prevCode = prevCode;\n\t    lzwState.currentSequenceLength = currentSequenceLength;\n\t    this.bufferLength = currentBufferLength;\n\t  };\n\t  return LZWStream;\n\t}();\n\tvar NullStream = function NullStreamClosure() {\n\t  function NullStream() {\n\t    Stream.call(this, new Uint8Array(0));\n\t  }\n\t  NullStream.prototype = Stream.prototype;\n\t  return NullStream;\n\t}();\n\texports.Ascii85Stream = Ascii85Stream;\n\texports.AsciiHexStream = AsciiHexStream;\n\texports.DecryptStream = DecryptStream;\n\texports.DecodeStream = DecodeStream;\n\texports.FlateStream = FlateStream;\n\texports.JpegStream = JpegStream;\n\texports.JpxStream = JpxStream;\n\texports.NullStream = NullStream;\n\texports.PredictorStream = PredictorStream;\n\texports.RunLengthStream = RunLengthStream;\n\texports.Stream = Stream;\n\texports.StreamsSequenceStream = StreamsSequenceStream;\n\texports.StringStream = StringStream;\n\texports.LZWStream = LZWStream;\n\t\n\t/***/ }),\n\t/* 6 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar global = __w_pdfjs_require__(1);\n\tvar core = __w_pdfjs_require__(7);\n\tvar hide = __w_pdfjs_require__(8);\n\tvar redefine = __w_pdfjs_require__(16);\n\tvar ctx = __w_pdfjs_require__(13);\n\tvar PROTOTYPE = 'prototype';\n\tvar $export = function $export(type, name, source) {\n\t  var IS_FORCED = type & $export.F;\n\t  var IS_GLOBAL = type & $export.G;\n\t  var IS_STATIC = type & $export.S;\n\t  var IS_PROTO = type & $export.P;\n\t  var IS_BIND = type & $export.B;\n\t  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n\t  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n\t  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n\t  var key, own, out, exp;\n\t  if (IS_GLOBAL) source = name;\n\t  for (key in source) {\n\t    own = !IS_FORCED && target && target[key] !== undefined;\n\t    out = (own ? target : source)[key];\n\t    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n\t    if (target) redefine(target, key, out, type & $export.U);\n\t    if (exports[key] != out) hide(exports, key, exp);\n\t    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n\t  }\n\t};\n\tglobal.core = core;\n\t$export.F = 1;\n\t$export.G = 2;\n\t$export.S = 4;\n\t$export.P = 8;\n\t$export.B = 16;\n\t$export.W = 32;\n\t$export.U = 64;\n\t$export.R = 128;\n\tmodule.exports = $export;\n\t\n\t/***/ }),\n\t/* 7 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar core = module.exports = { version: '2.5.1' };\n\tif (typeof __e == 'number') __e = core;\n\t\n\t/***/ }),\n\t/* 8 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar dP = __w_pdfjs_require__(15);\n\tvar createDesc = __w_pdfjs_require__(29);\n\tmodule.exports = __w_pdfjs_require__(11) ? function (object, key, value) {\n\t  return dP.f(object, key, createDesc(1, value));\n\t} : function (object, key, value) {\n\t  object[key] = value;\n\t  return object;\n\t};\n\t\n\t/***/ }),\n\t/* 9 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar isObject = __w_pdfjs_require__(3);\n\tmodule.exports = function (it) {\n\t  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n\t  return it;\n\t};\n\t\n\t/***/ }),\n\t/* 10 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar hasOwnProperty = {}.hasOwnProperty;\n\tmodule.exports = function (it, key) {\n\t  return hasOwnProperty.call(it, key);\n\t};\n\t\n\t/***/ }),\n\t/* 11 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tmodule.exports = !__w_pdfjs_require__(12)(function () {\n\t  return Object.defineProperty({}, 'a', {\n\t    get: function get() {\n\t      return 7;\n\t    }\n\t  }).a != 7;\n\t});\n\t\n\t/***/ }),\n\t/* 12 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tmodule.exports = function (exec) {\n\t  try {\n\t    return !!exec();\n\t  } catch (e) {\n\t    return true;\n\t  }\n\t};\n\t\n\t/***/ }),\n\t/* 13 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar aFunction = __w_pdfjs_require__(21);\n\tmodule.exports = function (fn, that, length) {\n\t  aFunction(fn);\n\t  if (that === undefined) return fn;\n\t  switch (length) {\n\t    case 1:\n\t      return function (a) {\n\t        return fn.call(that, a);\n\t      };\n\t    case 2:\n\t      return function (a, b) {\n\t        return fn.call(that, a, b);\n\t      };\n\t    case 3:\n\t      return function (a, b, c) {\n\t        return fn.call(that, a, b, c);\n\t      };\n\t  }\n\t  return function () {\n\t    return fn.apply(that, arguments);\n\t  };\n\t};\n\t\n\t/***/ }),\n\t/* 14 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar toInteger = __w_pdfjs_require__(18);\n\tvar min = Math.min;\n\tmodule.exports = function (it) {\n\t  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0;\n\t};\n\t\n\t/***/ }),\n\t/* 15 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar anObject = __w_pdfjs_require__(9);\n\tvar IE8_DOM_DEFINE = __w_pdfjs_require__(48);\n\tvar toPrimitive = __w_pdfjs_require__(36);\n\tvar dP = Object.defineProperty;\n\texports.f = __w_pdfjs_require__(11) ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n\t  anObject(O);\n\t  P = toPrimitive(P, true);\n\t  anObject(Attributes);\n\t  if (IE8_DOM_DEFINE) try {\n\t    return dP(O, P, Attributes);\n\t  } catch (e) {}\n\t  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n\t  if ('value' in Attributes) O[P] = Attributes.value;\n\t  return O;\n\t};\n\t\n\t/***/ }),\n\t/* 16 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar global = __w_pdfjs_require__(1);\n\tvar hide = __w_pdfjs_require__(8);\n\tvar has = __w_pdfjs_require__(10);\n\tvar SRC = __w_pdfjs_require__(17)('src');\n\tvar TO_STRING = 'toString';\n\tvar $toString = Function[TO_STRING];\n\tvar TPL = ('' + $toString).split(TO_STRING);\n\t__w_pdfjs_require__(7).inspectSource = function (it) {\n\t  return $toString.call(it);\n\t};\n\t(module.exports = function (O, key, val, safe) {\n\t  var isFunction = typeof val == 'function';\n\t  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n\t  if (O[key] === val) return;\n\t  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n\t  if (O === global) {\n\t    O[key] = val;\n\t  } else if (!safe) {\n\t    delete O[key];\n\t    hide(O, key, val);\n\t  } else if (O[key]) {\n\t    O[key] = val;\n\t  } else {\n\t    hide(O, key, val);\n\t  }\n\t})(Function.prototype, TO_STRING, function toString() {\n\t  return typeof this == 'function' && this[SRC] || $toString.call(this);\n\t});\n\t\n\t/***/ }),\n\t/* 17 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar id = 0;\n\tvar px = Math.random();\n\tmodule.exports = function (key) {\n\t  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n\t};\n\t\n\t/***/ }),\n\t/* 18 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar ceil = Math.ceil;\n\tvar floor = Math.floor;\n\tmodule.exports = function (it) {\n\t  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n\t};\n\t\n\t/***/ }),\n\t/* 19 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar defined = __w_pdfjs_require__(38);\n\tmodule.exports = function (it) {\n\t  return Object(defined(it));\n\t};\n\t\n\t/***/ }),\n\t/* 20 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tmodule.exports = {};\n\t\n\t/***/ }),\n\t/* 21 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tmodule.exports = function (it) {\n\t  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n\t  return it;\n\t};\n\t\n\t/***/ }),\n\t/* 22 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar redefine = __w_pdfjs_require__(16);\n\tmodule.exports = function (target, src, safe) {\n\t  for (var key in src) {\n\t    redefine(target, key, src[key], safe);\n\t  }return target;\n\t};\n\t\n\t/***/ }),\n\t/* 23 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tmodule.exports = function (it, Constructor, name, forbiddenField) {\n\t  if (!(it instanceof Constructor) || forbiddenField !== undefined && forbiddenField in it) {\n\t    throw TypeError(name + ': incorrect invocation!');\n\t  }\n\t  return it;\n\t};\n\t\n\t/***/ }),\n\t/* 24 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar toString = {}.toString;\n\tmodule.exports = function (it) {\n\t  return toString.call(it).slice(8, -1);\n\t};\n\t\n\t/***/ }),\n\t/* 25 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar def = __w_pdfjs_require__(15).f;\n\tvar has = __w_pdfjs_require__(10);\n\tvar TAG = __w_pdfjs_require__(4)('toStringTag');\n\tmodule.exports = function (it, tag, stat) {\n\t  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {\n\t    configurable: true,\n\t    value: tag\n\t  });\n\t};\n\t\n\t/***/ }),\n\t/* 26 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.ColorSpace = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _primitives = __w_pdfjs_require__(2);\n\t\n\tvar ColorSpace = function ColorSpaceClosure() {\n\t  function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\n\t    var COMPONENTS = 3;\n\t    alpha01 = alpha01 !== 1 ? 0 : alpha01;\n\t    var xRatio = w1 / w2;\n\t    var yRatio = h1 / h2;\n\t    var i,\n\t        j,\n\t        py,\n\t        newIndex = 0,\n\t        oldIndex;\n\t    var xScaled = new Uint16Array(w2);\n\t    var w1Scanline = w1 * COMPONENTS;\n\t    for (i = 0; i < w2; i++) {\n\t      xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n\t    }\n\t    for (i = 0; i < h2; i++) {\n\t      py = Math.floor(i * yRatio) * w1Scanline;\n\t      for (j = 0; j < w2; j++) {\n\t        oldIndex = py + xScaled[j];\n\t        dest[newIndex++] = src[oldIndex++];\n\t        dest[newIndex++] = src[oldIndex++];\n\t        dest[newIndex++] = src[oldIndex++];\n\t        newIndex += alpha01;\n\t      }\n\t    }\n\t  }\n\t  function ColorSpace() {\n\t    throw new Error('should not call ColorSpace constructor');\n\t  }\n\t  ColorSpace.prototype = {\n\t    getRgb: function ColorSpace_getRgb(src, srcOffset) {\n\t      var rgb = new Uint8Array(3);\n\t      this.getRgbItem(src, srcOffset, rgb, 0);\n\t      return rgb;\n\t    },\n\t    getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      throw new Error('Should not call ColorSpace.getRgbItem');\n\t    },\n\t    getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      throw new Error('Should not call ColorSpace.getRgbBuffer');\n\t    },\n\t    getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\n\t      throw new Error('Should not call ColorSpace.getOutputLength');\n\t    },\n\t    isPassthrough: function ColorSpace_isPassthrough(bits) {\n\t      return false;\n\t    },\n\t    fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n\t      var count = originalWidth * originalHeight;\n\t      var rgbBuf = null;\n\t      var numComponentColors = 1 << bpc;\n\t      var needsResizing = originalHeight !== height || originalWidth !== width;\n\t      var i, ii;\n\t      if (this.isPassthrough(bpc)) {\n\t        rgbBuf = comps;\n\t      } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n\t        var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n\t        var key;\n\t        for (i = 0; i < numComponentColors; i++) {\n\t          allColors[i] = i;\n\t        }\n\t        var colorMap = new Uint8Array(numComponentColors * 3);\n\t        this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n\t        var destPos, rgbPos;\n\t        if (!needsResizing) {\n\t          destPos = 0;\n\t          for (i = 0; i < count; ++i) {\n\t            key = comps[i] * 3;\n\t            dest[destPos++] = colorMap[key];\n\t            dest[destPos++] = colorMap[key + 1];\n\t            dest[destPos++] = colorMap[key + 2];\n\t            destPos += alpha01;\n\t          }\n\t        } else {\n\t          rgbBuf = new Uint8Array(count * 3);\n\t          rgbPos = 0;\n\t          for (i = 0; i < count; ++i) {\n\t            key = comps[i] * 3;\n\t            rgbBuf[rgbPos++] = colorMap[key];\n\t            rgbBuf[rgbPos++] = colorMap[key + 1];\n\t            rgbBuf[rgbPos++] = colorMap[key + 2];\n\t          }\n\t        }\n\t      } else {\n\t        if (!needsResizing) {\n\t          this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n\t        } else {\n\t          rgbBuf = new Uint8Array(count * 3);\n\t          this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n\t        }\n\t      }\n\t      if (rgbBuf) {\n\t        if (needsResizing) {\n\t          resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\n\t        } else {\n\t          rgbPos = 0;\n\t          destPos = 0;\n\t          for (i = 0, ii = width * actualHeight; i < ii; i++) {\n\t            dest[destPos++] = rgbBuf[rgbPos++];\n\t            dest[destPos++] = rgbBuf[rgbPos++];\n\t            dest[destPos++] = rgbBuf[rgbPos++];\n\t            destPos += alpha01;\n\t          }\n\t        }\n\t      }\n\t    },\n\t    usesZeroToOneRange: true\n\t  };\n\t  ColorSpace.parse = function (cs, xref, res, pdfFunctionFactory) {\n\t    var IR = ColorSpace.parseToIR(cs, xref, res, pdfFunctionFactory);\n\t    return ColorSpace.fromIR(IR, pdfFunctionFactory);\n\t  };\n\t  ColorSpace.fromIR = function (IR, pdfFunctionFactory) {\n\t    var name = Array.isArray(IR) ? IR[0] : IR;\n\t    var whitePoint, blackPoint, gamma;\n\t    switch (name) {\n\t      case 'DeviceGrayCS':\n\t        return this.singletons.gray;\n\t      case 'DeviceRgbCS':\n\t        return this.singletons.rgb;\n\t      case 'DeviceCmykCS':\n\t        return this.singletons.cmyk;\n\t      case 'CalGrayCS':\n\t        whitePoint = IR[1];\n\t        blackPoint = IR[2];\n\t        gamma = IR[3];\n\t        return new CalGrayCS(whitePoint, blackPoint, gamma);\n\t      case 'CalRGBCS':\n\t        whitePoint = IR[1];\n\t        blackPoint = IR[2];\n\t        gamma = IR[3];\n\t        var matrix = IR[4];\n\t        return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n\t      case 'PatternCS':\n\t        var basePatternCS = IR[1];\n\t        if (basePatternCS) {\n\t          basePatternCS = ColorSpace.fromIR(basePatternCS, pdfFunctionFactory);\n\t        }\n\t        return new PatternCS(basePatternCS);\n\t      case 'IndexedCS':\n\t        var baseIndexedCS = IR[1];\n\t        var hiVal = IR[2];\n\t        var lookup = IR[3];\n\t        return new IndexedCS(ColorSpace.fromIR(baseIndexedCS, pdfFunctionFactory), hiVal, lookup);\n\t      case 'AlternateCS':\n\t        var numComps = IR[1];\n\t        var alt = IR[2];\n\t        var tintFnIR = IR[3];\n\t        return new AlternateCS(numComps, ColorSpace.fromIR(alt, pdfFunctionFactory), pdfFunctionFactory.createFromIR(tintFnIR));\n\t      case 'LabCS':\n\t        whitePoint = IR[1];\n\t        blackPoint = IR[2];\n\t        var range = IR[3];\n\t        return new LabCS(whitePoint, blackPoint, range);\n\t      default:\n\t        throw new _util.FormatError('Unknown colorspace name: ' + name);\n\t    }\n\t  };\n\t  ColorSpace.parseToIR = function (cs, xref, res, pdfFunctionFactory) {\n\t    if ((0, _primitives.isName)(cs)) {\n\t      var colorSpaces = res.get('ColorSpace');\n\t      if ((0, _primitives.isDict)(colorSpaces)) {\n\t        var refcs = colorSpaces.get(cs.name);\n\t        if (refcs) {\n\t          cs = refcs;\n\t        }\n\t      }\n\t    }\n\t    cs = xref.fetchIfRef(cs);\n\t    if ((0, _primitives.isName)(cs)) {\n\t      switch (cs.name) {\n\t        case 'DeviceGray':\n\t        case 'G':\n\t          return 'DeviceGrayCS';\n\t        case 'DeviceRGB':\n\t        case 'RGB':\n\t          return 'DeviceRgbCS';\n\t        case 'DeviceCMYK':\n\t        case 'CMYK':\n\t          return 'DeviceCmykCS';\n\t        case 'Pattern':\n\t          return ['PatternCS', null];\n\t        default:\n\t          throw new _util.FormatError('unrecognized colorspace ' + cs.name);\n\t      }\n\t    }\n\t    if (Array.isArray(cs)) {\n\t      var mode = xref.fetchIfRef(cs[0]).name;\n\t      var numComps, params, alt, whitePoint, blackPoint, gamma;\n\t      switch (mode) {\n\t        case 'DeviceGray':\n\t        case 'G':\n\t          return 'DeviceGrayCS';\n\t        case 'DeviceRGB':\n\t        case 'RGB':\n\t          return 'DeviceRgbCS';\n\t        case 'DeviceCMYK':\n\t        case 'CMYK':\n\t          return 'DeviceCmykCS';\n\t        case 'CalGray':\n\t          params = xref.fetchIfRef(cs[1]);\n\t          whitePoint = params.getArray('WhitePoint');\n\t          blackPoint = params.getArray('BlackPoint');\n\t          gamma = params.get('Gamma');\n\t          return ['CalGrayCS', whitePoint, blackPoint, gamma];\n\t        case 'CalRGB':\n\t          params = xref.fetchIfRef(cs[1]);\n\t          whitePoint = params.getArray('WhitePoint');\n\t          blackPoint = params.getArray('BlackPoint');\n\t          gamma = params.getArray('Gamma');\n\t          var matrix = params.getArray('Matrix');\n\t          return ['CalRGBCS', whitePoint, blackPoint, gamma, matrix];\n\t        case 'ICCBased':\n\t          var stream = xref.fetchIfRef(cs[1]);\n\t          var dict = stream.dict;\n\t          numComps = dict.get('N');\n\t          alt = dict.get('Alternate');\n\t          if (alt) {\n\t            var altIR = ColorSpace.parseToIR(alt, xref, res, pdfFunctionFactory);\n\t            var altCS = ColorSpace.fromIR(altIR, pdfFunctionFactory);\n\t            if (altCS.numComps === numComps) {\n\t              return altIR;\n\t            }\n\t            (0, _util.warn)('ICCBased color space: Ignoring incorrect /Alternate entry.');\n\t          }\n\t          if (numComps === 1) {\n\t            return 'DeviceGrayCS';\n\t          } else if (numComps === 3) {\n\t            return 'DeviceRgbCS';\n\t          } else if (numComps === 4) {\n\t            return 'DeviceCmykCS';\n\t          }\n\t          break;\n\t        case 'Pattern':\n\t          var basePatternCS = cs[1] || null;\n\t          if (basePatternCS) {\n\t            basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res, pdfFunctionFactory);\n\t          }\n\t          return ['PatternCS', basePatternCS];\n\t        case 'Indexed':\n\t        case 'I':\n\t          var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res, pdfFunctionFactory);\n\t          var hiVal = xref.fetchIfRef(cs[2]) + 1;\n\t          var lookup = xref.fetchIfRef(cs[3]);\n\t          if ((0, _primitives.isStream)(lookup)) {\n\t            lookup = lookup.getBytes();\n\t          }\n\t          return ['IndexedCS', baseIndexedCS, hiVal, lookup];\n\t        case 'Separation':\n\t        case 'DeviceN':\n\t          var name = xref.fetchIfRef(cs[1]);\n\t          numComps = Array.isArray(name) ? name.length : 1;\n\t          alt = ColorSpace.parseToIR(cs[2], xref, res, pdfFunctionFactory);\n\t          var tintFnIR = pdfFunctionFactory.createIR(xref.fetchIfRef(cs[3]));\n\t          return ['AlternateCS', numComps, alt, tintFnIR];\n\t        case 'Lab':\n\t          params = xref.fetchIfRef(cs[1]);\n\t          whitePoint = params.getArray('WhitePoint');\n\t          blackPoint = params.getArray('BlackPoint');\n\t          var range = params.getArray('Range');\n\t          return ['LabCS', whitePoint, blackPoint, range];\n\t        default:\n\t          throw new _util.FormatError('unimplemented color space object \"' + mode + '\"');\n\t      }\n\t    }\n\t    throw new _util.FormatError('unrecognized color space object: \"' + cs + '\"');\n\t  };\n\t  ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n\t    if (!Array.isArray(decode)) {\n\t      return true;\n\t    }\n\t    if (n * 2 !== decode.length) {\n\t      (0, _util.warn)('The decode map is not the correct length');\n\t      return true;\n\t    }\n\t    for (var i = 0, ii = decode.length; i < ii; i += 2) {\n\t      if (decode[i] !== 0 || decode[i + 1] !== 1) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  };\n\t  ColorSpace.singletons = {\n\t    get gray() {\n\t      return (0, _util.shadow)(this, 'gray', new DeviceGrayCS());\n\t    },\n\t    get rgb() {\n\t      return (0, _util.shadow)(this, 'rgb', new DeviceRgbCS());\n\t    },\n\t    get cmyk() {\n\t      return (0, _util.shadow)(this, 'cmyk', new DeviceCmykCS());\n\t    }\n\t  };\n\t  return ColorSpace;\n\t}();\n\tvar AlternateCS = function AlternateCSClosure() {\n\t  function AlternateCS(numComps, base, tintFn) {\n\t    this.name = 'Alternate';\n\t    this.numComps = numComps;\n\t    this.defaultColor = new Float32Array(numComps);\n\t    for (var i = 0; i < numComps; ++i) {\n\t      this.defaultColor[i] = 1;\n\t    }\n\t    this.base = base;\n\t    this.tintFn = tintFn;\n\t    this.tmpBuf = new Float32Array(base.numComps);\n\t  }\n\t  AlternateCS.prototype = {\n\t    getRgb: ColorSpace.prototype.getRgb,\n\t    getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      var tmpBuf = this.tmpBuf;\n\t      this.tintFn(src, srcOffset, tmpBuf, 0);\n\t      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n\t    },\n\t    getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      var tintFn = this.tintFn;\n\t      var base = this.base;\n\t      var scale = 1 / ((1 << bits) - 1);\n\t      var baseNumComps = base.numComps;\n\t      var usesZeroToOneRange = base.usesZeroToOneRange;\n\t      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n\t      var pos = isPassthrough ? destOffset : 0;\n\t      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n\t      var numComps = this.numComps;\n\t      var scaled = new Float32Array(numComps);\n\t      var tinted = new Float32Array(baseNumComps);\n\t      var i, j;\n\t      for (i = 0; i < count; i++) {\n\t        for (j = 0; j < numComps; j++) {\n\t          scaled[j] = src[srcOffset++] * scale;\n\t        }\n\t        tintFn(scaled, 0, tinted, 0);\n\t        if (usesZeroToOneRange) {\n\t          for (j = 0; j < baseNumComps; j++) {\n\t            baseBuf[pos++] = tinted[j] * 255;\n\t          }\n\t        } else {\n\t          base.getRgbItem(tinted, 0, baseBuf, pos);\n\t          pos += baseNumComps;\n\t        }\n\t      }\n\t      if (!isPassthrough) {\n\t        base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n\t      }\n\t    },\n\t    getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\n\t      return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n\t    },\n\t    isPassthrough: ColorSpace.prototype.isPassthrough,\n\t    fillRgb: ColorSpace.prototype.fillRgb,\n\t    isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n\t      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n\t    },\n\t    usesZeroToOneRange: true\n\t  };\n\t  return AlternateCS;\n\t}();\n\tvar PatternCS = function PatternCSClosure() {\n\t  function PatternCS(baseCS) {\n\t    this.name = 'Pattern';\n\t    this.base = baseCS;\n\t  }\n\t  PatternCS.prototype = {};\n\t  return PatternCS;\n\t}();\n\tvar IndexedCS = function IndexedCSClosure() {\n\t  function IndexedCS(base, highVal, lookup) {\n\t    this.name = 'Indexed';\n\t    this.numComps = 1;\n\t    this.defaultColor = new Uint8Array(this.numComps);\n\t    this.base = base;\n\t    this.highVal = highVal;\n\t    var baseNumComps = base.numComps;\n\t    var length = baseNumComps * highVal;\n\t    if ((0, _primitives.isStream)(lookup)) {\n\t      this.lookup = new Uint8Array(length);\n\t      var bytes = lookup.getBytes(length);\n\t      this.lookup.set(bytes);\n\t    } else if ((0, _util.isString)(lookup)) {\n\t      this.lookup = new Uint8Array(length);\n\t      for (var i = 0; i < length; ++i) {\n\t        this.lookup[i] = lookup.charCodeAt(i);\n\t      }\n\t    } else if (lookup instanceof Uint8Array || lookup instanceof Array) {\n\t      this.lookup = lookup;\n\t    } else {\n\t      throw new _util.FormatError('Unrecognized lookup table: ' + lookup);\n\t    }\n\t  }\n\t  IndexedCS.prototype = {\n\t    getRgb: ColorSpace.prototype.getRgb,\n\t    getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      var numComps = this.base.numComps;\n\t      var start = src[srcOffset] * numComps;\n\t      this.base.getRgbBuffer(this.lookup, start, 1, dest, destOffset, 8, 0);\n\t    },\n\t    getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      var base = this.base;\n\t      var numComps = base.numComps;\n\t      var outputDelta = base.getOutputLength(numComps, alpha01);\n\t      var lookup = this.lookup;\n\t      for (var i = 0; i < count; ++i) {\n\t        var lookupPos = src[srcOffset++] * numComps;\n\t        base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n\t        destOffset += outputDelta;\n\t      }\n\t    },\n\t    getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n\t      return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n\t    },\n\t    isPassthrough: ColorSpace.prototype.isPassthrough,\n\t    fillRgb: ColorSpace.prototype.fillRgb,\n\t    isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n\t      return true;\n\t    },\n\t    usesZeroToOneRange: true\n\t  };\n\t  return IndexedCS;\n\t}();\n\tvar DeviceGrayCS = function DeviceGrayCSClosure() {\n\t  function DeviceGrayCS() {\n\t    this.name = 'DeviceGray';\n\t    this.numComps = 1;\n\t    this.defaultColor = new Float32Array(this.numComps);\n\t  }\n\t  DeviceGrayCS.prototype = {\n\t    getRgb: ColorSpace.prototype.getRgb,\n\t    getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      var c = src[srcOffset] * 255 | 0;\n\t      c = c < 0 ? 0 : c > 255 ? 255 : c;\n\t      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n\t    },\n\t    getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      var scale = 255 / ((1 << bits) - 1);\n\t      var j = srcOffset,\n\t          q = destOffset;\n\t      for (var i = 0; i < count; ++i) {\n\t        var c = scale * src[j++] | 0;\n\t        dest[q++] = c;\n\t        dest[q++] = c;\n\t        dest[q++] = c;\n\t        q += alpha01;\n\t      }\n\t    },\n\t    getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\n\t      return inputLength * (3 + alpha01);\n\t    },\n\t    isPassthrough: ColorSpace.prototype.isPassthrough,\n\t    fillRgb: ColorSpace.prototype.fillRgb,\n\t    isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n\t      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n\t    },\n\t    usesZeroToOneRange: true\n\t  };\n\t  return DeviceGrayCS;\n\t}();\n\tvar DeviceRgbCS = function DeviceRgbCSClosure() {\n\t  function DeviceRgbCS() {\n\t    this.name = 'DeviceRGB';\n\t    this.numComps = 3;\n\t    this.defaultColor = new Float32Array(this.numComps);\n\t  }\n\t  DeviceRgbCS.prototype = {\n\t    getRgb: ColorSpace.prototype.getRgb,\n\t    getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      var r = src[srcOffset] * 255 | 0;\n\t      var g = src[srcOffset + 1] * 255 | 0;\n\t      var b = src[srcOffset + 2] * 255 | 0;\n\t      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n\t      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n\t      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n\t    },\n\t    getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      if (bits === 8 && alpha01 === 0) {\n\t        dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n\t        return;\n\t      }\n\t      var scale = 255 / ((1 << bits) - 1);\n\t      var j = srcOffset,\n\t          q = destOffset;\n\t      for (var i = 0; i < count; ++i) {\n\t        dest[q++] = scale * src[j++] | 0;\n\t        dest[q++] = scale * src[j++] | 0;\n\t        dest[q++] = scale * src[j++] | 0;\n\t        q += alpha01;\n\t      }\n\t    },\n\t    getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\n\t      return inputLength * (3 + alpha01) / 3 | 0;\n\t    },\n\t    isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n\t      return bits === 8;\n\t    },\n\t    fillRgb: ColorSpace.prototype.fillRgb,\n\t    isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n\t      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n\t    },\n\t    usesZeroToOneRange: true\n\t  };\n\t  return DeviceRgbCS;\n\t}();\n\tvar DeviceCmykCS = function DeviceCmykCSClosure() {\n\t  function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n\t    var c = src[srcOffset + 0] * srcScale;\n\t    var m = src[srcOffset + 1] * srcScale;\n\t    var y = src[srcOffset + 2] * srcScale;\n\t    var k = src[srcOffset + 3] * srcScale;\n\t    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\n\t    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\n\t    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\n\t    dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n\t    dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n\t    dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n\t  }\n\t  function DeviceCmykCS() {\n\t    this.name = 'DeviceCMYK';\n\t    this.numComps = 4;\n\t    this.defaultColor = new Float32Array(this.numComps);\n\t    this.defaultColor[3] = 1;\n\t  }\n\t  DeviceCmykCS.prototype = {\n\t    getRgb: ColorSpace.prototype.getRgb,\n\t    getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      convertToRgb(src, srcOffset, 1, dest, destOffset);\n\t    },\n\t    getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      var scale = 1 / ((1 << bits) - 1);\n\t      for (var i = 0; i < count; i++) {\n\t        convertToRgb(src, srcOffset, scale, dest, destOffset);\n\t        srcOffset += 4;\n\t        destOffset += 3 + alpha01;\n\t      }\n\t    },\n\t    getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\n\t      return inputLength / 4 * (3 + alpha01) | 0;\n\t    },\n\t    isPassthrough: ColorSpace.prototype.isPassthrough,\n\t    fillRgb: ColorSpace.prototype.fillRgb,\n\t    isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n\t      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n\t    },\n\t    usesZeroToOneRange: true\n\t  };\n\t  return DeviceCmykCS;\n\t}();\n\tvar CalGrayCS = function CalGrayCSClosure() {\n\t  function CalGrayCS(whitePoint, blackPoint, gamma) {\n\t    this.name = 'CalGray';\n\t    this.numComps = 1;\n\t    this.defaultColor = new Float32Array(this.numComps);\n\t    if (!whitePoint) {\n\t      throw new _util.FormatError('WhitePoint missing - required for color space CalGray');\n\t    }\n\t    blackPoint = blackPoint || [0, 0, 0];\n\t    gamma = gamma || 1;\n\t    this.XW = whitePoint[0];\n\t    this.YW = whitePoint[1];\n\t    this.ZW = whitePoint[2];\n\t    this.XB = blackPoint[0];\n\t    this.YB = blackPoint[1];\n\t    this.ZB = blackPoint[2];\n\t    this.G = gamma;\n\t    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n\t      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n\t    }\n\t    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n\t      (0, _util.info)('Invalid BlackPoint for ' + this.name + ', falling back to default');\n\t      this.XB = this.YB = this.ZB = 0;\n\t    }\n\t    if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n\t      (0, _util.warn)(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\n\t    }\n\t    if (this.G < 1) {\n\t      (0, _util.info)('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\n\t      this.G = 1;\n\t    }\n\t  }\n\t  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n\t    var A = src[srcOffset] * scale;\n\t    var AG = Math.pow(A, cs.G);\n\t    var L = cs.YW * AG;\n\t    var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n\t    dest[destOffset] = val;\n\t    dest[destOffset + 1] = val;\n\t    dest[destOffset + 2] = val;\n\t  }\n\t  CalGrayCS.prototype = {\n\t    getRgb: ColorSpace.prototype.getRgb,\n\t    getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n\t    },\n\t    getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      var scale = 1 / ((1 << bits) - 1);\n\t      for (var i = 0; i < count; ++i) {\n\t        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n\t        srcOffset += 1;\n\t        destOffset += 3 + alpha01;\n\t      }\n\t    },\n\t    getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n\t      return inputLength * (3 + alpha01);\n\t    },\n\t    isPassthrough: ColorSpace.prototype.isPassthrough,\n\t    fillRgb: ColorSpace.prototype.fillRgb,\n\t    isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n\t      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n\t    },\n\t    usesZeroToOneRange: true\n\t  };\n\t  return CalGrayCS;\n\t}();\n\tvar CalRGBCS = function CalRGBCSClosure() {\n\t  var BRADFORD_SCALE_MATRIX = new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296]);\n\t  var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -0.0085287, 0.0400428, 0.9684867]);\n\t  var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.9692660, 1.8760108, 0.0415560, 0.0556434, -0.2040259, 1.0572252]);\n\t  var FLAT_WHITEPOINT_MATRIX = new Float32Array([1, 1, 1]);\n\t  var tempNormalizeMatrix = new Float32Array(3);\n\t  var tempConvertMatrix1 = new Float32Array(3);\n\t  var tempConvertMatrix2 = new Float32Array(3);\n\t  var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n\t  function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n\t    this.name = 'CalRGB';\n\t    this.numComps = 3;\n\t    this.defaultColor = new Float32Array(this.numComps);\n\t    if (!whitePoint) {\n\t      throw new _util.FormatError('WhitePoint missing - required for color space CalRGB');\n\t    }\n\t    blackPoint = blackPoint || new Float32Array(3);\n\t    gamma = gamma || new Float32Array([1, 1, 1]);\n\t    matrix = matrix || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n\t    var XW = whitePoint[0];\n\t    var YW = whitePoint[1];\n\t    var ZW = whitePoint[2];\n\t    this.whitePoint = whitePoint;\n\t    var XB = blackPoint[0];\n\t    var YB = blackPoint[1];\n\t    var ZB = blackPoint[2];\n\t    this.blackPoint = blackPoint;\n\t    this.GR = gamma[0];\n\t    this.GG = gamma[1];\n\t    this.GB = gamma[2];\n\t    this.MXA = matrix[0];\n\t    this.MYA = matrix[1];\n\t    this.MZA = matrix[2];\n\t    this.MXB = matrix[3];\n\t    this.MYB = matrix[4];\n\t    this.MZB = matrix[5];\n\t    this.MXC = matrix[6];\n\t    this.MYC = matrix[7];\n\t    this.MZC = matrix[8];\n\t    if (XW < 0 || ZW < 0 || YW !== 1) {\n\t      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n\t    }\n\t    if (XB < 0 || YB < 0 || ZB < 0) {\n\t      (0, _util.info)('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\n\t      this.blackPoint = new Float32Array(3);\n\t    }\n\t    if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n\t      (0, _util.info)('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\n\t      this.GR = this.GG = this.GB = 1;\n\t    }\n\t    if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n\t      (0, _util.info)('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\n\t      this.MXA = this.MYB = this.MZC = 1;\n\t      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n\t    }\n\t  }\n\t  function matrixProduct(a, b, result) {\n\t    result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t    result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n\t    result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n\t  }\n\t  function convertToFlat(sourceWhitePoint, LMS, result) {\n\t    result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n\t    result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n\t    result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n\t  }\n\t  function convertToD65(sourceWhitePoint, LMS, result) {\n\t    var D65X = 0.95047;\n\t    var D65Y = 1;\n\t    var D65Z = 1.08883;\n\t    result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n\t    result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n\t    result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n\t  }\n\t  function sRGBTransferFunction(color) {\n\t    if (color <= 0.0031308) {\n\t      return adjustToRange(0, 1, 12.92 * color);\n\t    }\n\t    return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n\t  }\n\t  function adjustToRange(min, max, value) {\n\t    return Math.max(min, Math.min(max, value));\n\t  }\n\t  function decodeL(L) {\n\t    if (L < 0) {\n\t      return -decodeL(-L);\n\t    }\n\t    if (L > 8.0) {\n\t      return Math.pow((L + 16) / 116, 3);\n\t    }\n\t    return L * DECODE_L_CONSTANT;\n\t  }\n\t  function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n\t    if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n\t      result[0] = XYZ_Flat[0];\n\t      result[1] = XYZ_Flat[1];\n\t      result[2] = XYZ_Flat[2];\n\t      return;\n\t    }\n\t    var zeroDecodeL = decodeL(0);\n\t    var X_DST = zeroDecodeL;\n\t    var X_SRC = decodeL(sourceBlackPoint[0]);\n\t    var Y_DST = zeroDecodeL;\n\t    var Y_SRC = decodeL(sourceBlackPoint[1]);\n\t    var Z_DST = zeroDecodeL;\n\t    var Z_SRC = decodeL(sourceBlackPoint[2]);\n\t    var X_Scale = (1 - X_DST) / (1 - X_SRC);\n\t    var X_Offset = 1 - X_Scale;\n\t    var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n\t    var Y_Offset = 1 - Y_Scale;\n\t    var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n\t    var Z_Offset = 1 - Z_Scale;\n\t    result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n\t    result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n\t    result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n\t  }\n\t  function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n\t    if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n\t      result[0] = XYZ_In[0];\n\t      result[1] = XYZ_In[1];\n\t      result[2] = XYZ_In[2];\n\t      return;\n\t    }\n\t    var LMS = result;\n\t    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n\t    var LMS_Flat = tempNormalizeMatrix;\n\t    convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n\t    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n\t  }\n\t  function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n\t    var LMS = result;\n\t    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n\t    var LMS_D65 = tempNormalizeMatrix;\n\t    convertToD65(sourceWhitePoint, LMS, LMS_D65);\n\t    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n\t  }\n\t  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n\t    var A = adjustToRange(0, 1, src[srcOffset] * scale);\n\t    var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n\t    var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n\t    var AGR = Math.pow(A, cs.GR);\n\t    var BGG = Math.pow(B, cs.GG);\n\t    var CGB = Math.pow(C, cs.GB);\n\t    var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n\t    var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n\t    var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n\t    var XYZ = tempConvertMatrix1;\n\t    XYZ[0] = X;\n\t    XYZ[1] = Y;\n\t    XYZ[2] = Z;\n\t    var XYZ_Flat = tempConvertMatrix2;\n\t    normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n\t    var XYZ_Black = tempConvertMatrix1;\n\t    compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n\t    var XYZ_D65 = tempConvertMatrix2;\n\t    normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n\t    var SRGB = tempConvertMatrix1;\n\t    matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n\t    var sR = sRGBTransferFunction(SRGB[0]);\n\t    var sG = sRGBTransferFunction(SRGB[1]);\n\t    var sB = sRGBTransferFunction(SRGB[2]);\n\t    dest[destOffset] = Math.round(sR * 255);\n\t    dest[destOffset + 1] = Math.round(sG * 255);\n\t    dest[destOffset + 2] = Math.round(sB * 255);\n\t  }\n\t  CalRGBCS.prototype = {\n\t    getRgb: ColorSpace.prototype.getRgb,\n\t    getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n\t    },\n\t    getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      var scale = 1 / ((1 << bits) - 1);\n\t      for (var i = 0; i < count; ++i) {\n\t        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n\t        srcOffset += 3;\n\t        destOffset += 3 + alpha01;\n\t      }\n\t    },\n\t    getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n\t      return inputLength * (3 + alpha01) / 3 | 0;\n\t    },\n\t    isPassthrough: ColorSpace.prototype.isPassthrough,\n\t    fillRgb: ColorSpace.prototype.fillRgb,\n\t    isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n\t      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n\t    },\n\t    usesZeroToOneRange: true\n\t  };\n\t  return CalRGBCS;\n\t}();\n\tvar LabCS = function LabCSClosure() {\n\t  function LabCS(whitePoint, blackPoint, range) {\n\t    this.name = 'Lab';\n\t    this.numComps = 3;\n\t    this.defaultColor = new Float32Array(this.numComps);\n\t    if (!whitePoint) {\n\t      throw new _util.FormatError('WhitePoint missing - required for color space Lab');\n\t    }\n\t    blackPoint = blackPoint || [0, 0, 0];\n\t    range = range || [-100, 100, -100, 100];\n\t    this.XW = whitePoint[0];\n\t    this.YW = whitePoint[1];\n\t    this.ZW = whitePoint[2];\n\t    this.amin = range[0];\n\t    this.amax = range[1];\n\t    this.bmin = range[2];\n\t    this.bmax = range[3];\n\t    this.XB = blackPoint[0];\n\t    this.YB = blackPoint[1];\n\t    this.ZB = blackPoint[2];\n\t    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n\t      throw new _util.FormatError('Invalid WhitePoint components, no fallback available');\n\t    }\n\t    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n\t      (0, _util.info)('Invalid BlackPoint, falling back to default');\n\t      this.XB = this.YB = this.ZB = 0;\n\t    }\n\t    if (this.amin > this.amax || this.bmin > this.bmax) {\n\t      (0, _util.info)('Invalid Range, falling back to defaults');\n\t      this.amin = -100;\n\t      this.amax = 100;\n\t      this.bmin = -100;\n\t      this.bmax = 100;\n\t    }\n\t  }\n\t  function fn_g(x) {\n\t    var result;\n\t    if (x >= 6 / 29) {\n\t      result = x * x * x;\n\t    } else {\n\t      result = 108 / 841 * (x - 4 / 29);\n\t    }\n\t    return result;\n\t  }\n\t  function decode(value, high1, low2, high2) {\n\t    return low2 + value * (high2 - low2) / high1;\n\t  }\n\t  function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n\t    var Ls = src[srcOffset];\n\t    var as = src[srcOffset + 1];\n\t    var bs = src[srcOffset + 2];\n\t    if (maxVal !== false) {\n\t      Ls = decode(Ls, maxVal, 0, 100);\n\t      as = decode(as, maxVal, cs.amin, cs.amax);\n\t      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n\t    }\n\t    as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n\t    bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n\t    var M = (Ls + 16) / 116;\n\t    var L = M + as / 500;\n\t    var N = M - bs / 200;\n\t    var X = cs.XW * fn_g(L);\n\t    var Y = cs.YW * fn_g(M);\n\t    var Z = cs.ZW * fn_g(N);\n\t    var r, g, b;\n\t    if (cs.ZW < 1) {\n\t      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n\t      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n\t      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n\t    } else {\n\t      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n\t      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n\t      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n\t    }\n\t    dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n\t    dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n\t    dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n\t  }\n\t  LabCS.prototype = {\n\t    getRgb: ColorSpace.prototype.getRgb,\n\t    getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      convertToRgb(this, src, srcOffset, false, dest, destOffset);\n\t    },\n\t    getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      var maxVal = (1 << bits) - 1;\n\t      for (var i = 0; i < count; i++) {\n\t        convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n\t        srcOffset += 3;\n\t        destOffset += 3 + alpha01;\n\t      }\n\t    },\n\t    getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n\t      return inputLength * (3 + alpha01) / 3 | 0;\n\t    },\n\t    isPassthrough: ColorSpace.prototype.isPassthrough,\n\t    fillRgb: ColorSpace.prototype.fillRgb,\n\t    isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n\t      return true;\n\t    },\n\t    usesZeroToOneRange: false\n\t  };\n\t  return LabCS;\n\t}();\n\texports.ColorSpace = ColorSpace;\n\t\n\t/***/ }),\n\t/* 27 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\tvar MacExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', 'centoldstyle', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', '', 'threequartersemdash', '', 'questionsmall', '', '', '', '', 'Ethsmall', '', '', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', '', '', '', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hypheninferior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', 'asuperior', 'centsuperior', '', '', '', '', 'Aacutesmall', 'Agravesmall', 'Acircumflexsmall', 'Adieresissmall', 'Atildesmall', 'Aringsmall', 'Ccedillasmall', 'Eacutesmall', 'Egravesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Iacutesmall', 'Igravesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ntildesmall', 'Oacutesmall', 'Ogravesmall', 'Ocircumflexsmall', 'Odieresissmall', 'Otildesmall', 'Uacutesmall', 'Ugravesmall', 'Ucircumflexsmall', 'Udieresissmall', '', 'eightsuperior', 'fourinferior', 'threeinferior', 'sixinferior', 'eightinferior', 'seveninferior', 'Scaronsmall', '', 'centinferior', 'twoinferior', '', 'Dieresissmall', '', 'Caronsmall', 'osuperior', 'fiveinferior', '', 'commainferior', 'periodinferior', 'Yacutesmall', '', 'dollarinferior', '', 'Thornsmall', '', 'nineinferior', 'zeroinferior', 'Zcaronsmall', 'AEsmall', 'Oslashsmall', 'questiondownsmall', 'oneinferior', 'Lslashsmall', '', '', '', '', '', '', 'Cedillasmall', '', '', '', '', '', 'OEsmall', 'figuredash', 'hyphensuperior', '', '', '', '', 'exclamdownsmall', '', 'Ydieresissmall', '', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'ninesuperior', 'zerosuperior', '', 'esuperior', 'rsuperior', 'tsuperior', '', '', 'isuperior', 'ssuperior', 'dsuperior', '', '', '', '', '', 'lsuperior', 'Ogoneksmall', 'Brevesmall', 'Macronsmall', 'bsuperior', 'nsuperior', 'msuperior', 'commasuperior', 'periodsuperior', 'Dotaccentsmall', 'Ringsmall'];\n\tvar MacRomanEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'space', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron'];\n\tvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls'];\n\tvar WinAnsiEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'bullet', 'Euro', 'bullet', 'quotesinglbase', 'florin', 'quotedblbase', 'ellipsis', 'dagger', 'daggerdbl', 'circumflex', 'perthousand', 'Scaron', 'guilsinglleft', 'OE', 'bullet', 'Zcaron', 'bullet', 'bullet', 'quoteleft', 'quoteright', 'quotedblleft', 'quotedblright', 'bullet', 'endash', 'emdash', 'tilde', 'trademark', 'scaron', 'guilsinglright', 'oe', 'bullet', 'zcaron', 'Ydieresis', 'space', 'exclamdown', 'cent', 'sterling', 'currency', 'yen', 'brokenbar', 'section', 'dieresis', 'copyright', 'ordfeminine', 'guillemotleft', 'logicalnot', 'hyphen', 'registered', 'macron', 'degree', 'plusminus', 'twosuperior', 'threesuperior', 'acute', 'mu', 'paragraph', 'periodcentered', 'cedilla', 'onesuperior', 'ordmasculine', 'guillemotright', 'onequarter', 'onehalf', 'threequarters', 'questiondown', 'Agrave', 'Aacute', 'Acircumflex', 'Atilde', 'Adieresis', 'Aring', 'AE', 'Ccedilla', 'Egrave', 'Eacute', 'Ecircumflex', 'Edieresis', 'Igrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Eth', 'Ntilde', 'Ograve', 'Oacute', 'Ocircumflex', 'Otilde', 'Odieresis', 'multiply', 'Oslash', 'Ugrave', 'Uacute', 'Ucircumflex', 'Udieresis', 'Yacute', 'Thorn', 'germandbls', 'agrave', 'aacute', 'acircumflex', 'atilde', 'adieresis', 'aring', 'ae', 'ccedilla', 'egrave', 'eacute', 'ecircumflex', 'edieresis', 'igrave', 'iacute', 'icircumflex', 'idieresis', 'eth', 'ntilde', 'ograve', 'oacute', 'ocircumflex', 'otilde', 'odieresis', 'divide', 'oslash', 'ugrave', 'uacute', 'ucircumflex', 'udieresis', 'yacute', 'thorn', 'ydieresis'];\n\tvar SymbolSetEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'universal', 'numbersign', 'existential', 'percent', 'ampersand', 'suchthat', 'parenleft', 'parenright', 'asteriskmath', 'plus', 'comma', 'minus', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'congruent', 'Alpha', 'Beta', 'Chi', 'Delta', 'Epsilon', 'Phi', 'Gamma', 'Eta', 'Iota', 'theta1', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Omicron', 'Pi', 'Theta', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'sigma1', 'Omega', 'Xi', 'Psi', 'Zeta', 'bracketleft', 'therefore', 'bracketright', 'perpendicular', 'underscore', 'radicalex', 'alpha', 'beta', 'chi', 'delta', 'epsilon', 'phi', 'gamma', 'eta', 'iota', 'phi1', 'kappa', 'lambda', 'mu', 'nu', 'omicron', 'pi', 'theta', 'rho', 'sigma', 'tau', 'upsilon', 'omega1', 'omega', 'xi', 'psi', 'zeta', 'braceleft', 'bar', 'braceright', 'similar', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'Euro', 'Upsilon1', 'minute', 'lessequal', 'fraction', 'infinity', 'florin', 'club', 'diamond', 'heart', 'spade', 'arrowboth', 'arrowleft', 'arrowup', 'arrowright', 'arrowdown', 'degree', 'plusminus', 'second', 'greaterequal', 'multiply', 'proportional', 'partialdiff', 'bullet', 'divide', 'notequal', 'equivalence', 'approxequal', 'ellipsis', 'arrowvertex', 'arrowhorizex', 'carriagereturn', 'aleph', 'Ifraktur', 'Rfraktur', 'weierstrass', 'circlemultiply', 'circleplus', 'emptyset', 'intersection', 'union', 'propersuperset', 'reflexsuperset', 'notsubset', 'propersubset', 'reflexsubset', 'element', 'notelement', 'angle', 'gradient', 'registerserif', 'copyrightserif', 'trademarkserif', 'product', 'radical', 'dotmath', 'logicalnot', 'logicaland', 'logicalor', 'arrowdblboth', 'arrowdblleft', 'arrowdblup', 'arrowdblright', 'arrowdbldown', 'lozenge', 'angleleft', 'registersans', 'copyrightsans', 'trademarksans', 'summation', 'parenlefttp', 'parenleftex', 'parenleftbt', 'bracketlefttp', 'bracketleftex', 'bracketleftbt', 'bracelefttp', 'braceleftmid', 'braceleftbt', 'braceex', '', 'angleright', 'integral', 'integraltp', 'integralex', 'integralbt', 'parenrighttp', 'parenrightex', 'parenrightbt', 'bracketrighttp', 'bracketrightex', 'bracketrightbt', 'bracerighttp', 'bracerightmid', 'bracerightbt'];\n\tvar ZapfDingbatsEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'a1', 'a2', 'a202', 'a3', 'a4', 'a5', 'a119', 'a118', 'a117', 'a11', 'a12', 'a13', 'a14', 'a15', 'a16', 'a105', 'a17', 'a18', 'a19', 'a20', 'a21', 'a22', 'a23', 'a24', 'a25', 'a26', 'a27', 'a28', 'a6', 'a7', 'a8', 'a9', 'a10', 'a29', 'a30', 'a31', 'a32', 'a33', 'a34', 'a35', 'a36', 'a37', 'a38', 'a39', 'a40', 'a41', 'a42', 'a43', 'a44', 'a45', 'a46', 'a47', 'a48', 'a49', 'a50', 'a51', 'a52', 'a53', 'a54', 'a55', 'a56', 'a57', 'a58', 'a59', 'a60', 'a61', 'a62', 'a63', 'a64', 'a65', 'a66', 'a67', 'a68', 'a69', 'a70', 'a71', 'a72', 'a73', 'a74', 'a203', 'a75', 'a204', 'a76', 'a77', 'a78', 'a79', 'a81', 'a82', 'a83', 'a84', 'a97', 'a98', 'a99', 'a100', '', 'a89', 'a90', 'a93', 'a94', 'a91', 'a92', 'a205', 'a85', 'a206', 'a86', 'a87', 'a88', 'a95', 'a96', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'a101', 'a102', 'a103', 'a104', 'a106', 'a107', 'a108', 'a112', 'a111', 'a110', 'a109', 'a120', 'a121', 'a122', 'a123', 'a124', 'a125', 'a126', 'a127', 'a128', 'a129', 'a130', 'a131', 'a132', 'a133', 'a134', 'a135', 'a136', 'a137', 'a138', 'a139', 'a140', 'a141', 'a142', 'a143', 'a144', 'a145', 'a146', 'a147', 'a148', 'a149', 'a150', 'a151', 'a152', 'a153', 'a154', 'a155', 'a156', 'a157', 'a158', 'a159', 'a160', 'a161', 'a163', 'a164', 'a196', 'a165', 'a192', 'a166', 'a167', 'a168', 'a169', 'a170', 'a171', 'a172', 'a173', 'a162', 'a174', 'a175', 'a176', 'a177', 'a178', 'a179', 'a193', 'a180', 'a199', 'a181', 'a200', 'a182', '', 'a201', 'a183', 'a184', 'a197', 'a185', 'a194', 'a198', 'a186', 'a195', 'a187', 'a188', 'a189', 'a190', 'a191'];\n\tfunction getEncoding(encodingName) {\n\t  switch (encodingName) {\n\t    case 'WinAnsiEncoding':\n\t      return WinAnsiEncoding;\n\t    case 'StandardEncoding':\n\t      return StandardEncoding;\n\t    case 'MacRomanEncoding':\n\t      return MacRomanEncoding;\n\t    case 'SymbolSetEncoding':\n\t      return SymbolSetEncoding;\n\t    case 'ZapfDingbatsEncoding':\n\t      return ZapfDingbatsEncoding;\n\t    case 'ExpertEncoding':\n\t      return ExpertEncoding;\n\t    case 'MacExpertEncoding':\n\t      return MacExpertEncoding;\n\t    default:\n\t      return null;\n\t  }\n\t}\n\texports.WinAnsiEncoding = WinAnsiEncoding;\n\texports.StandardEncoding = StandardEncoding;\n\texports.MacRomanEncoding = MacRomanEncoding;\n\texports.SymbolSetEncoding = SymbolSetEncoding;\n\texports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\n\texports.ExpertEncoding = ExpertEncoding;\n\texports.getEncoding = getEncoding;\n\t\n\t/***/ }),\n\t/* 28 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tmodule.exports = false;\n\t\n\t/***/ }),\n\t/* 29 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tmodule.exports = function (bitmap, value) {\n\t  return {\n\t    enumerable: !(bitmap & 1),\n\t    configurable: !(bitmap & 2),\n\t    writable: !(bitmap & 4),\n\t    value: value\n\t  };\n\t};\n\t\n\t/***/ }),\n\t/* 30 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar IObject = __w_pdfjs_require__(37);\n\tvar defined = __w_pdfjs_require__(38);\n\tmodule.exports = function (it) {\n\t  return IObject(defined(it));\n\t};\n\t\n\t/***/ }),\n\t/* 31 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar toInteger = __w_pdfjs_require__(18);\n\tvar max = Math.max;\n\tvar min = Math.min;\n\tmodule.exports = function (index, length) {\n\t  index = toInteger(index);\n\t  return index < 0 ? max(index + length, 0) : min(index, length);\n\t};\n\t\n\t/***/ }),\n\t/* 32 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar cof = __w_pdfjs_require__(24);\n\tvar TAG = __w_pdfjs_require__(4)('toStringTag');\n\tvar ARG = cof(function () {\n\t  return arguments;\n\t}()) == 'Arguments';\n\tvar tryGet = function tryGet(it, key) {\n\t  try {\n\t    return it[key];\n\t  } catch (e) {}\n\t};\n\tmodule.exports = function (it) {\n\t  var O, T, B;\n\t  return it === undefined ? 'Undefined' : it === null ? 'Null' : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T : ARG ? cof(O) : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n\t};\n\t\n\t/***/ }),\n\t/* 33 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar ctx = __w_pdfjs_require__(13);\n\tvar call = __w_pdfjs_require__(107);\n\tvar isArrayIter = __w_pdfjs_require__(56);\n\tvar anObject = __w_pdfjs_require__(9);\n\tvar toLength = __w_pdfjs_require__(14);\n\tvar getIterFn = __w_pdfjs_require__(60);\n\tvar BREAK = {};\n\tvar RETURN = {};\n\tvar _exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n\t  var iterFn = ITERATOR ? function () {\n\t    return iterable;\n\t  } : getIterFn(iterable);\n\t  var f = ctx(fn, that, entries ? 2 : 1);\n\t  var index = 0;\n\t  var length, step, iterator, result;\n\t  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n\t  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n\t    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n\t    if (result === BREAK || result === RETURN) return result;\n\t  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n\t    result = call(iterator, f, step.value, entries);\n\t    if (result === BREAK || result === RETURN) return result;\n\t  }\n\t};\n\t_exports.BREAK = BREAK;\n\t_exports.RETURN = RETURN;\n\t\n\t/***/ }),\n\t/* 34 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Parser = exports.Linearization = exports.Lexer = undefined;\n\t\n\tvar _stream = __w_pdfjs_require__(5);\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _primitives = __w_pdfjs_require__(2);\n\t\n\tvar _ccitt_stream = __w_pdfjs_require__(129);\n\t\n\tvar _jbig2_stream = __w_pdfjs_require__(131);\n\t\n\tvar MAX_LENGTH_TO_CACHE = 1000;\n\tvar Parser = function ParserClosure() {\n\t  function Parser(lexer, allowStreams, xref, recoveryMode) {\n\t    this.lexer = lexer;\n\t    this.allowStreams = allowStreams;\n\t    this.xref = xref;\n\t    this.recoveryMode = recoveryMode || false;\n\t    this.imageCache = Object.create(null);\n\t    this.refill();\n\t  }\n\t  Parser.prototype = {\n\t    refill: function Parser_refill() {\n\t      this.buf1 = this.lexer.getObj();\n\t      this.buf2 = this.lexer.getObj();\n\t    },\n\t    shift: function Parser_shift() {\n\t      if ((0, _primitives.isCmd)(this.buf2, 'ID')) {\n\t        this.buf1 = this.buf2;\n\t        this.buf2 = null;\n\t      } else {\n\t        this.buf1 = this.buf2;\n\t        this.buf2 = this.lexer.getObj();\n\t      }\n\t    },\n\t    tryShift: function Parser_tryShift() {\n\t      try {\n\t        this.shift();\n\t        return true;\n\t      } catch (e) {\n\t        if (e instanceof _util.MissingDataException) {\n\t          throw e;\n\t        }\n\t        return false;\n\t      }\n\t    },\n\t    getObj: function Parser_getObj(cipherTransform) {\n\t      var buf1 = this.buf1;\n\t      this.shift();\n\t      if (buf1 instanceof _primitives.Cmd) {\n\t        switch (buf1.cmd) {\n\t          case 'BI':\n\t            return this.makeInlineImage(cipherTransform);\n\t          case '[':\n\t            var array = [];\n\t            while (!(0, _primitives.isCmd)(this.buf1, ']') && !(0, _primitives.isEOF)(this.buf1)) {\n\t              array.push(this.getObj(cipherTransform));\n\t            }\n\t            if ((0, _primitives.isEOF)(this.buf1)) {\n\t              if (!this.recoveryMode) {\n\t                throw new _util.FormatError('End of file inside array');\n\t              }\n\t              return array;\n\t            }\n\t            this.shift();\n\t            return array;\n\t          case '<<':\n\t            var dict = new _primitives.Dict(this.xref);\n\t            while (!(0, _primitives.isCmd)(this.buf1, '>>') && !(0, _primitives.isEOF)(this.buf1)) {\n\t              if (!(0, _primitives.isName)(this.buf1)) {\n\t                (0, _util.info)('Malformed dictionary: key must be a name object');\n\t                this.shift();\n\t                continue;\n\t              }\n\t              var key = this.buf1.name;\n\t              this.shift();\n\t              if ((0, _primitives.isEOF)(this.buf1)) {\n\t                break;\n\t              }\n\t              dict.set(key, this.getObj(cipherTransform));\n\t            }\n\t            if ((0, _primitives.isEOF)(this.buf1)) {\n\t              if (!this.recoveryMode) {\n\t                throw new _util.FormatError('End of file inside dictionary');\n\t              }\n\t              return dict;\n\t            }\n\t            if ((0, _primitives.isCmd)(this.buf2, 'stream')) {\n\t              return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n\t            }\n\t            this.shift();\n\t            return dict;\n\t          default:\n\t            return buf1;\n\t        }\n\t      }\n\t      if (Number.isInteger(buf1)) {\n\t        var num = buf1;\n\t        if (Number.isInteger(this.buf1) && (0, _primitives.isCmd)(this.buf2, 'R')) {\n\t          var ref = new _primitives.Ref(num, this.buf1);\n\t          this.shift();\n\t          this.shift();\n\t          return ref;\n\t        }\n\t        return num;\n\t      }\n\t      if ((0, _util.isString)(buf1)) {\n\t        var str = buf1;\n\t        if (cipherTransform) {\n\t          str = cipherTransform.decryptString(str);\n\t        }\n\t        return str;\n\t      }\n\t      return buf1;\n\t    },\n\t    findDefaultInlineStreamEnd: function findDefaultInlineStreamEnd(stream) {\n\t      var E = 0x45,\n\t          I = 0x49,\n\t          SPACE = 0x20,\n\t          LF = 0xA,\n\t          CR = 0xD;\n\t      var n = 10,\n\t          NUL = 0x0;\n\t      var startPos = stream.pos,\n\t          state = 0,\n\t          ch = void 0,\n\t          maybeEIPos = void 0;\n\t      while ((ch = stream.getByte()) !== -1) {\n\t        if (state === 0) {\n\t          state = ch === E ? 1 : 0;\n\t        } else if (state === 1) {\n\t          state = ch === I ? 2 : 0;\n\t        } else {\n\t          (0, _util.assert)(state === 2);\n\t          if (ch === SPACE || ch === LF || ch === CR) {\n\t            maybeEIPos = stream.pos;\n\t            var followingBytes = stream.peekBytes(n);\n\t            for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n\t              ch = followingBytes[i];\n\t              if (ch === NUL && followingBytes[i + 1] !== NUL) {\n\t                continue;\n\t              }\n\t              if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n\t                state = 0;\n\t                break;\n\t              }\n\t            }\n\t            if (state === 2) {\n\t              break;\n\t            }\n\t          } else {\n\t            state = 0;\n\t          }\n\t        }\n\t      }\n\t      if (ch === -1) {\n\t        (0, _util.warn)('findDefaultInlineStreamEnd: ' + 'Reached the end of the stream without finding a valid EI marker');\n\t        if (maybeEIPos) {\n\t          (0, _util.warn)('... trying to recover by using the last \"EI\" occurrence.');\n\t          stream.skip(-(stream.pos - maybeEIPos));\n\t        }\n\t      }\n\t      return stream.pos - 4 - startPos;\n\t    },\n\t\n\t    findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\n\t      var startPos = stream.pos,\n\t          foundEOI = false,\n\t          b,\n\t          markerLength,\n\t          length;\n\t      while ((b = stream.getByte()) !== -1) {\n\t        if (b !== 0xFF) {\n\t          continue;\n\t        }\n\t        switch (stream.getByte()) {\n\t          case 0x00:\n\t            break;\n\t          case 0xFF:\n\t            stream.skip(-1);\n\t            break;\n\t          case 0xD9:\n\t            foundEOI = true;\n\t            break;\n\t          case 0xC0:\n\t          case 0xC1:\n\t          case 0xC2:\n\t          case 0xC3:\n\t          case 0xC5:\n\t          case 0xC6:\n\t          case 0xC7:\n\t          case 0xC9:\n\t          case 0xCA:\n\t          case 0xCB:\n\t          case 0xCD:\n\t          case 0xCE:\n\t          case 0xCF:\n\t          case 0xC4:\n\t          case 0xCC:\n\t          case 0xDA:\n\t          case 0xDB:\n\t          case 0xDC:\n\t          case 0xDD:\n\t          case 0xDE:\n\t          case 0xDF:\n\t          case 0xE0:\n\t          case 0xE1:\n\t          case 0xE2:\n\t          case 0xE3:\n\t          case 0xE4:\n\t          case 0xE5:\n\t          case 0xE6:\n\t          case 0xE7:\n\t          case 0xE8:\n\t          case 0xE9:\n\t          case 0xEA:\n\t          case 0xEB:\n\t          case 0xEC:\n\t          case 0xED:\n\t          case 0xEE:\n\t          case 0xEF:\n\t          case 0xFE:\n\t            markerLength = stream.getUint16();\n\t            if (markerLength > 2) {\n\t              stream.skip(markerLength - 2);\n\t            } else {\n\t              stream.skip(-2);\n\t            }\n\t            break;\n\t        }\n\t        if (foundEOI) {\n\t          break;\n\t        }\n\t      }\n\t      length = stream.pos - startPos;\n\t      if (b === -1) {\n\t        (0, _util.warn)('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\n\t        stream.skip(-length);\n\t        return this.findDefaultInlineStreamEnd(stream);\n\t      }\n\t      this.inlineStreamSkipEI(stream);\n\t      return length;\n\t    },\n\t    findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n\t      var TILDE = 0x7E,\n\t          GT = 0x3E;\n\t      var startPos = stream.pos,\n\t          ch,\n\t          length;\n\t      while ((ch = stream.getByte()) !== -1) {\n\t        if (ch === TILDE && stream.peekByte() === GT) {\n\t          stream.skip();\n\t          break;\n\t        }\n\t      }\n\t      length = stream.pos - startPos;\n\t      if (ch === -1) {\n\t        (0, _util.warn)('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n\t        stream.skip(-length);\n\t        return this.findDefaultInlineStreamEnd(stream);\n\t      }\n\t      this.inlineStreamSkipEI(stream);\n\t      return length;\n\t    },\n\t    findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n\t      var GT = 0x3E;\n\t      var startPos = stream.pos,\n\t          ch,\n\t          length;\n\t      while ((ch = stream.getByte()) !== -1) {\n\t        if (ch === GT) {\n\t          break;\n\t        }\n\t      }\n\t      length = stream.pos - startPos;\n\t      if (ch === -1) {\n\t        (0, _util.warn)('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n\t        stream.skip(-length);\n\t        return this.findDefaultInlineStreamEnd(stream);\n\t      }\n\t      this.inlineStreamSkipEI(stream);\n\t      return length;\n\t    },\n\t    inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n\t      var E = 0x45,\n\t          I = 0x49;\n\t      var state = 0,\n\t          ch;\n\t      while ((ch = stream.getByte()) !== -1) {\n\t        if (state === 0) {\n\t          state = ch === E ? 1 : 0;\n\t        } else if (state === 1) {\n\t          state = ch === I ? 2 : 0;\n\t        } else if (state === 2) {\n\t          break;\n\t        }\n\t      }\n\t    },\n\t    makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n\t      var lexer = this.lexer;\n\t      var stream = lexer.stream;\n\t      var dict = new _primitives.Dict(this.xref);\n\t      while (!(0, _primitives.isCmd)(this.buf1, 'ID') && !(0, _primitives.isEOF)(this.buf1)) {\n\t        if (!(0, _primitives.isName)(this.buf1)) {\n\t          throw new _util.FormatError('Dictionary key must be a name object');\n\t        }\n\t        var key = this.buf1.name;\n\t        this.shift();\n\t        if ((0, _primitives.isEOF)(this.buf1)) {\n\t          break;\n\t        }\n\t        dict.set(key, this.getObj(cipherTransform));\n\t      }\n\t      var filter = dict.get('Filter', 'F'),\n\t          filterName;\n\t      if ((0, _primitives.isName)(filter)) {\n\t        filterName = filter.name;\n\t      } else if (Array.isArray(filter)) {\n\t        var filterZero = this.xref.fetchIfRef(filter[0]);\n\t        if ((0, _primitives.isName)(filterZero)) {\n\t          filterName = filterZero.name;\n\t        }\n\t      }\n\t      var startPos = stream.pos,\n\t          length,\n\t          i,\n\t          ii;\n\t      if (filterName === 'DCTDecode' || filterName === 'DCT') {\n\t        length = this.findDCTDecodeInlineStreamEnd(stream);\n\t      } else if (filterName === 'ASCII85Decode' || filterName === 'A85') {\n\t        length = this.findASCII85DecodeInlineStreamEnd(stream);\n\t      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n\t        length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n\t      } else {\n\t        length = this.findDefaultInlineStreamEnd(stream);\n\t      }\n\t      var imageStream = stream.makeSubStream(startPos, length, dict);\n\t      var adler32;\n\t      if (length < MAX_LENGTH_TO_CACHE) {\n\t        var imageBytes = imageStream.getBytes();\n\t        imageStream.reset();\n\t        var a = 1;\n\t        var b = 0;\n\t        for (i = 0, ii = imageBytes.length; i < ii; ++i) {\n\t          a += imageBytes[i] & 0xff;\n\t          b += a;\n\t        }\n\t        adler32 = b % 65521 << 16 | a % 65521;\n\t        var cacheEntry = this.imageCache[adler32];\n\t        if (cacheEntry !== undefined) {\n\t          this.buf2 = _primitives.Cmd.get('EI');\n\t          this.shift();\n\t          cacheEntry.reset();\n\t          return cacheEntry;\n\t        }\n\t      }\n\t      if (cipherTransform) {\n\t        imageStream = cipherTransform.createStream(imageStream, length);\n\t      }\n\t      imageStream = this.filter(imageStream, dict, length);\n\t      imageStream.dict = dict;\n\t      if (adler32 !== undefined) {\n\t        imageStream.cacheKey = 'inline_' + length + '_' + adler32;\n\t        this.imageCache[adler32] = imageStream;\n\t      }\n\t      this.buf2 = _primitives.Cmd.get('EI');\n\t      this.shift();\n\t      return imageStream;\n\t    },\n\t    makeStream: function Parser_makeStream(dict, cipherTransform) {\n\t      var lexer = this.lexer;\n\t      var stream = lexer.stream;\n\t      lexer.skipToNextLine();\n\t      var pos = stream.pos - 1;\n\t      var length = dict.get('Length');\n\t      if (!Number.isInteger(length)) {\n\t        (0, _util.info)('Bad ' + length + ' attribute in stream');\n\t        length = 0;\n\t      }\n\t      stream.pos = pos + length;\n\t      lexer.nextChar();\n\t      if (this.tryShift() && (0, _primitives.isCmd)(this.buf2, 'endstream')) {\n\t        this.shift();\n\t      } else {\n\t        stream.pos = pos;\n\t        var SCAN_BLOCK_SIZE = 2048;\n\t        var ENDSTREAM_SIGNATURE_LENGTH = 9;\n\t        var ENDSTREAM_SIGNATURE = [0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D];\n\t        var skipped = 0,\n\t            found = false,\n\t            i,\n\t            j;\n\t        while (stream.pos < stream.end) {\n\t          var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n\t          var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n\t          if (scanLength <= 0) {\n\t            break;\n\t          }\n\t          found = false;\n\t          i = 0;\n\t          while (i < scanLength) {\n\t            j = 0;\n\t            while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\n\t              j++;\n\t            }\n\t            if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n\t              found = true;\n\t              break;\n\t            }\n\t            i++;\n\t          }\n\t          if (found) {\n\t            skipped += i;\n\t            stream.pos += i;\n\t            break;\n\t          }\n\t          skipped += scanLength;\n\t          stream.pos += scanLength;\n\t        }\n\t        if (!found) {\n\t          throw new _util.FormatError('Missing endstream');\n\t        }\n\t        length = skipped;\n\t        lexer.nextChar();\n\t        this.shift();\n\t        this.shift();\n\t      }\n\t      this.shift();\n\t      stream = stream.makeSubStream(pos, length, dict);\n\t      if (cipherTransform) {\n\t        stream = cipherTransform.createStream(stream, length);\n\t      }\n\t      stream = this.filter(stream, dict, length);\n\t      stream.dict = dict;\n\t      return stream;\n\t    },\n\t    filter: function Parser_filter(stream, dict, length) {\n\t      var filter = dict.get('Filter', 'F');\n\t      var params = dict.get('DecodeParms', 'DP');\n\t      if ((0, _primitives.isName)(filter)) {\n\t        if (Array.isArray(params)) {\n\t          (0, _util.warn)('/DecodeParms should not contain an Array, ' + 'when /Filter contains a Name.');\n\t        }\n\t        return this.makeFilter(stream, filter.name, length, params);\n\t      }\n\t      var maybeLength = length;\n\t      if (Array.isArray(filter)) {\n\t        var filterArray = filter;\n\t        var paramsArray = params;\n\t        for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n\t          filter = this.xref.fetchIfRef(filterArray[i]);\n\t          if (!(0, _primitives.isName)(filter)) {\n\t            throw new _util.FormatError('Bad filter name: ' + filter);\n\t          }\n\t          params = null;\n\t          if (Array.isArray(paramsArray) && i in paramsArray) {\n\t            params = this.xref.fetchIfRef(paramsArray[i]);\n\t          }\n\t          stream = this.makeFilter(stream, filter.name, maybeLength, params);\n\t          maybeLength = null;\n\t        }\n\t      }\n\t      return stream;\n\t    },\n\t    makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n\t      if (maybeLength === 0) {\n\t        (0, _util.warn)('Empty \"' + name + '\" stream.');\n\t        return new _stream.NullStream(stream);\n\t      }\n\t      try {\n\t        var xrefStreamStats = this.xref.stats.streamTypes;\n\t        if (name === 'FlateDecode' || name === 'Fl') {\n\t          xrefStreamStats[_util.StreamType.FLATE] = true;\n\t          if (params) {\n\t            return new _stream.PredictorStream(new _stream.FlateStream(stream, maybeLength), maybeLength, params);\n\t          }\n\t          return new _stream.FlateStream(stream, maybeLength);\n\t        }\n\t        if (name === 'LZWDecode' || name === 'LZW') {\n\t          xrefStreamStats[_util.StreamType.LZW] = true;\n\t          var earlyChange = 1;\n\t          if (params) {\n\t            if (params.has('EarlyChange')) {\n\t              earlyChange = params.get('EarlyChange');\n\t            }\n\t            return new _stream.PredictorStream(new _stream.LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n\t          }\n\t          return new _stream.LZWStream(stream, maybeLength, earlyChange);\n\t        }\n\t        if (name === 'DCTDecode' || name === 'DCT') {\n\t          xrefStreamStats[_util.StreamType.DCT] = true;\n\t          return new _stream.JpegStream(stream, maybeLength, stream.dict, params);\n\t        }\n\t        if (name === 'JPXDecode' || name === 'JPX') {\n\t          xrefStreamStats[_util.StreamType.JPX] = true;\n\t          return new _stream.JpxStream(stream, maybeLength, stream.dict, params);\n\t        }\n\t        if (name === 'ASCII85Decode' || name === 'A85') {\n\t          xrefStreamStats[_util.StreamType.A85] = true;\n\t          return new _stream.Ascii85Stream(stream, maybeLength);\n\t        }\n\t        if (name === 'ASCIIHexDecode' || name === 'AHx') {\n\t          xrefStreamStats[_util.StreamType.AHX] = true;\n\t          return new _stream.AsciiHexStream(stream, maybeLength);\n\t        }\n\t        if (name === 'CCITTFaxDecode' || name === 'CCF') {\n\t          xrefStreamStats[_util.StreamType.CCF] = true;\n\t          return new _ccitt_stream.CCITTFaxStream(stream, maybeLength, params);\n\t        }\n\t        if (name === 'RunLengthDecode' || name === 'RL') {\n\t          xrefStreamStats[_util.StreamType.RL] = true;\n\t          return new _stream.RunLengthStream(stream, maybeLength);\n\t        }\n\t        if (name === 'JBIG2Decode') {\n\t          xrefStreamStats[_util.StreamType.JBIG] = true;\n\t          return new _jbig2_stream.Jbig2Stream(stream, maybeLength, stream.dict, params);\n\t        }\n\t        (0, _util.warn)('filter \"' + name + '\" not supported yet');\n\t        return stream;\n\t      } catch (ex) {\n\t        if (ex instanceof _util.MissingDataException) {\n\t          throw ex;\n\t        }\n\t        (0, _util.warn)('Invalid stream: \\\"' + ex + '\\\"');\n\t        return new _stream.NullStream(stream);\n\t      }\n\t    }\n\t  };\n\t  return Parser;\n\t}();\n\tvar Lexer = function LexerClosure() {\n\t  function Lexer(stream, knownCommands) {\n\t    this.stream = stream;\n\t    this.nextChar();\n\t    this.strBuf = [];\n\t    this.knownCommands = knownCommands;\n\t  }\n\t  var specialChars = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\t  function toHexDigit(ch) {\n\t    if (ch >= 0x30 && ch <= 0x39) {\n\t      return ch & 0x0F;\n\t    }\n\t    if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n\t      return (ch & 0x0F) + 9;\n\t    }\n\t    return -1;\n\t  }\n\t  Lexer.prototype = {\n\t    nextChar: function Lexer_nextChar() {\n\t      return this.currentChar = this.stream.getByte();\n\t    },\n\t    peekChar: function Lexer_peekChar() {\n\t      return this.stream.peekByte();\n\t    },\n\t    getNumber: function Lexer_getNumber() {\n\t      var ch = this.currentChar;\n\t      var eNotation = false;\n\t      var divideBy = 0;\n\t      var sign = 1;\n\t      if (ch === 0x2D) {\n\t        sign = -1;\n\t        ch = this.nextChar();\n\t        if (ch === 0x2D) {\n\t          ch = this.nextChar();\n\t        }\n\t      } else if (ch === 0x2B) {\n\t        ch = this.nextChar();\n\t      }\n\t      if (ch === 0x2E) {\n\t        divideBy = 10;\n\t        ch = this.nextChar();\n\t      }\n\t      if (ch === 0x0A || ch === 0x0D) {\n\t        do {\n\t          ch = this.nextChar();\n\t        } while (ch === 0x0A || ch === 0x0D);\n\t      }\n\t      if (ch < 0x30 || ch > 0x39) {\n\t        throw new _util.FormatError('Invalid number: ' + String.fromCharCode(ch) + ' (charCode ' + ch + ')');\n\t      }\n\t      var baseValue = ch - 0x30;\n\t      var powerValue = 0;\n\t      var powerValueSign = 1;\n\t      while ((ch = this.nextChar()) >= 0) {\n\t        if (0x30 <= ch && ch <= 0x39) {\n\t          var currentDigit = ch - 0x30;\n\t          if (eNotation) {\n\t            powerValue = powerValue * 10 + currentDigit;\n\t          } else {\n\t            if (divideBy !== 0) {\n\t              divideBy *= 10;\n\t            }\n\t            baseValue = baseValue * 10 + currentDigit;\n\t          }\n\t        } else if (ch === 0x2E) {\n\t          if (divideBy === 0) {\n\t            divideBy = 1;\n\t          } else {\n\t            break;\n\t          }\n\t        } else if (ch === 0x2D) {\n\t          (0, _util.warn)('Badly formatted number');\n\t        } else if (ch === 0x45 || ch === 0x65) {\n\t          ch = this.peekChar();\n\t          if (ch === 0x2B || ch === 0x2D) {\n\t            powerValueSign = ch === 0x2D ? -1 : 1;\n\t            this.nextChar();\n\t          } else if (ch < 0x30 || ch > 0x39) {\n\t            break;\n\t          }\n\t          eNotation = true;\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t      if (divideBy !== 0) {\n\t        baseValue /= divideBy;\n\t      }\n\t      if (eNotation) {\n\t        baseValue *= Math.pow(10, powerValueSign * powerValue);\n\t      }\n\t      return sign * baseValue;\n\t    },\n\t    getString: function Lexer_getString() {\n\t      var numParen = 1;\n\t      var done = false;\n\t      var strBuf = this.strBuf;\n\t      strBuf.length = 0;\n\t      var ch = this.nextChar();\n\t      while (true) {\n\t        var charBuffered = false;\n\t        switch (ch | 0) {\n\t          case -1:\n\t            (0, _util.warn)('Unterminated string');\n\t            done = true;\n\t            break;\n\t          case 0x28:\n\t            ++numParen;\n\t            strBuf.push('(');\n\t            break;\n\t          case 0x29:\n\t            if (--numParen === 0) {\n\t              this.nextChar();\n\t              done = true;\n\t            } else {\n\t              strBuf.push(')');\n\t            }\n\t            break;\n\t          case 0x5C:\n\t            ch = this.nextChar();\n\t            switch (ch) {\n\t              case -1:\n\t                (0, _util.warn)('Unterminated string');\n\t                done = true;\n\t                break;\n\t              case 0x6E:\n\t                strBuf.push('\\n');\n\t                break;\n\t              case 0x72:\n\t                strBuf.push('\\r');\n\t                break;\n\t              case 0x74:\n\t                strBuf.push('\\t');\n\t                break;\n\t              case 0x62:\n\t                strBuf.push('\\b');\n\t                break;\n\t              case 0x66:\n\t                strBuf.push('\\f');\n\t                break;\n\t              case 0x5C:\n\t              case 0x28:\n\t              case 0x29:\n\t                strBuf.push(String.fromCharCode(ch));\n\t                break;\n\t              case 0x30:\n\t              case 0x31:\n\t              case 0x32:\n\t              case 0x33:\n\t              case 0x34:\n\t              case 0x35:\n\t              case 0x36:\n\t              case 0x37:\n\t                var x = ch & 0x0F;\n\t                ch = this.nextChar();\n\t                charBuffered = true;\n\t                if (ch >= 0x30 && ch <= 0x37) {\n\t                  x = (x << 3) + (ch & 0x0F);\n\t                  ch = this.nextChar();\n\t                  if (ch >= 0x30 && ch <= 0x37) {\n\t                    charBuffered = false;\n\t                    x = (x << 3) + (ch & 0x0F);\n\t                  }\n\t                }\n\t                strBuf.push(String.fromCharCode(x));\n\t                break;\n\t              case 0x0D:\n\t                if (this.peekChar() === 0x0A) {\n\t                  this.nextChar();\n\t                }\n\t                break;\n\t              case 0x0A:\n\t                break;\n\t              default:\n\t                strBuf.push(String.fromCharCode(ch));\n\t                break;\n\t            }\n\t            break;\n\t          default:\n\t            strBuf.push(String.fromCharCode(ch));\n\t            break;\n\t        }\n\t        if (done) {\n\t          break;\n\t        }\n\t        if (!charBuffered) {\n\t          ch = this.nextChar();\n\t        }\n\t      }\n\t      return strBuf.join('');\n\t    },\n\t    getName: function Lexer_getName() {\n\t      var ch, previousCh;\n\t      var strBuf = this.strBuf;\n\t      strBuf.length = 0;\n\t      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n\t        if (ch === 0x23) {\n\t          ch = this.nextChar();\n\t          if (specialChars[ch]) {\n\t            (0, _util.warn)('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\n\t            strBuf.push('#');\n\t            break;\n\t          }\n\t          var x = toHexDigit(ch);\n\t          if (x !== -1) {\n\t            previousCh = ch;\n\t            ch = this.nextChar();\n\t            var x2 = toHexDigit(ch);\n\t            if (x2 === -1) {\n\t              (0, _util.warn)('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\n\t              strBuf.push('#', String.fromCharCode(previousCh));\n\t              if (specialChars[ch]) {\n\t                break;\n\t              }\n\t              strBuf.push(String.fromCharCode(ch));\n\t              continue;\n\t            }\n\t            strBuf.push(String.fromCharCode(x << 4 | x2));\n\t          } else {\n\t            strBuf.push('#', String.fromCharCode(ch));\n\t          }\n\t        } else {\n\t          strBuf.push(String.fromCharCode(ch));\n\t        }\n\t      }\n\t      if (strBuf.length > 127) {\n\t        (0, _util.warn)('name token is longer than allowed by the spec: ' + strBuf.length);\n\t      }\n\t      return _primitives.Name.get(strBuf.join(''));\n\t    },\n\t    getHexString: function Lexer_getHexString() {\n\t      var strBuf = this.strBuf;\n\t      strBuf.length = 0;\n\t      var ch = this.currentChar;\n\t      var isFirstHex = true;\n\t      var firstDigit;\n\t      var secondDigit;\n\t      while (true) {\n\t        if (ch < 0) {\n\t          (0, _util.warn)('Unterminated hex string');\n\t          break;\n\t        } else if (ch === 0x3E) {\n\t          this.nextChar();\n\t          break;\n\t        } else if (specialChars[ch] === 1) {\n\t          ch = this.nextChar();\n\t          continue;\n\t        } else {\n\t          if (isFirstHex) {\n\t            firstDigit = toHexDigit(ch);\n\t            if (firstDigit === -1) {\n\t              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n\t              ch = this.nextChar();\n\t              continue;\n\t            }\n\t          } else {\n\t            secondDigit = toHexDigit(ch);\n\t            if (secondDigit === -1) {\n\t              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n\t              ch = this.nextChar();\n\t              continue;\n\t            }\n\t            strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n\t          }\n\t          isFirstHex = !isFirstHex;\n\t          ch = this.nextChar();\n\t        }\n\t      }\n\t      return strBuf.join('');\n\t    },\n\t    getObj: function Lexer_getObj() {\n\t      var comment = false;\n\t      var ch = this.currentChar;\n\t      while (true) {\n\t        if (ch < 0) {\n\t          return _primitives.EOF;\n\t        }\n\t        if (comment) {\n\t          if (ch === 0x0A || ch === 0x0D) {\n\t            comment = false;\n\t          }\n\t        } else if (ch === 0x25) {\n\t          comment = true;\n\t        } else if (specialChars[ch] !== 1) {\n\t          break;\n\t        }\n\t        ch = this.nextChar();\n\t      }\n\t      switch (ch | 0) {\n\t        case 0x30:\n\t        case 0x31:\n\t        case 0x32:\n\t        case 0x33:\n\t        case 0x34:\n\t        case 0x35:\n\t        case 0x36:\n\t        case 0x37:\n\t        case 0x38:\n\t        case 0x39:\n\t        case 0x2B:\n\t        case 0x2D:\n\t        case 0x2E:\n\t          return this.getNumber();\n\t        case 0x28:\n\t          return this.getString();\n\t        case 0x2F:\n\t          return this.getName();\n\t        case 0x5B:\n\t          this.nextChar();\n\t          return _primitives.Cmd.get('[');\n\t        case 0x5D:\n\t          this.nextChar();\n\t          return _primitives.Cmd.get(']');\n\t        case 0x3C:\n\t          ch = this.nextChar();\n\t          if (ch === 0x3C) {\n\t            this.nextChar();\n\t            return _primitives.Cmd.get('<<');\n\t          }\n\t          return this.getHexString();\n\t        case 0x3E:\n\t          ch = this.nextChar();\n\t          if (ch === 0x3E) {\n\t            this.nextChar();\n\t            return _primitives.Cmd.get('>>');\n\t          }\n\t          return _primitives.Cmd.get('>');\n\t        case 0x7B:\n\t          this.nextChar();\n\t          return _primitives.Cmd.get('{');\n\t        case 0x7D:\n\t          this.nextChar();\n\t          return _primitives.Cmd.get('}');\n\t        case 0x29:\n\t          this.nextChar();\n\t          throw new _util.FormatError('Illegal character: ' + ch);\n\t      }\n\t      var str = String.fromCharCode(ch);\n\t      var knownCommands = this.knownCommands;\n\t      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n\t      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n\t        var possibleCommand = str + String.fromCharCode(ch);\n\t        if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n\t          break;\n\t        }\n\t        if (str.length === 128) {\n\t          throw new _util.FormatError('Command token too long: ' + str.length);\n\t        }\n\t        str = possibleCommand;\n\t        knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n\t      }\n\t      if (str === 'true') {\n\t        return true;\n\t      }\n\t      if (str === 'false') {\n\t        return false;\n\t      }\n\t      if (str === 'null') {\n\t        return null;\n\t      }\n\t      return _primitives.Cmd.get(str);\n\t    },\n\t    skipToNextLine: function Lexer_skipToNextLine() {\n\t      var ch = this.currentChar;\n\t      while (ch >= 0) {\n\t        if (ch === 0x0D) {\n\t          ch = this.nextChar();\n\t          if (ch === 0x0A) {\n\t            this.nextChar();\n\t          }\n\t          break;\n\t        } else if (ch === 0x0A) {\n\t          this.nextChar();\n\t          break;\n\t        }\n\t        ch = this.nextChar();\n\t      }\n\t    }\n\t  };\n\t  return Lexer;\n\t}();\n\tvar Linearization = {\n\t  create: function LinearizationCreate(stream) {\n\t    function getInt(name, allowZeroValue) {\n\t      var obj = linDict.get(name);\n\t      if (Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n\t        return obj;\n\t      }\n\t      throw new Error('The \"' + name + '\" parameter in the linearization ' + 'dictionary is invalid.');\n\t    }\n\t    function getHints() {\n\t      var hints = linDict.get('H'),\n\t          hintsLength,\n\t          item;\n\t      if (Array.isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n\t        for (var index = 0; index < hintsLength; index++) {\n\t          if (!(Number.isInteger(item = hints[index]) && item > 0)) {\n\t            throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\n\t          }\n\t        }\n\t        return hints;\n\t      }\n\t      throw new Error('Hint array in the linearization dictionary is invalid.');\n\t    }\n\t    var parser = new Parser(new Lexer(stream), false, null);\n\t    var obj1 = parser.getObj();\n\t    var obj2 = parser.getObj();\n\t    var obj3 = parser.getObj();\n\t    var linDict = parser.getObj();\n\t    var obj, length;\n\t    if (!(Number.isInteger(obj1) && Number.isInteger(obj2) && (0, _primitives.isCmd)(obj3, 'obj') && (0, _primitives.isDict)(linDict) && (0, _util.isNum)(obj = linDict.get('Linearized')) && obj > 0)) {\n\t      return null;\n\t    } else if ((length = getInt('L')) !== stream.length) {\n\t      throw new Error('The \"L\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\n\t    }\n\t    return {\n\t      length: length,\n\t      hints: getHints(),\n\t      objectNumberFirst: getInt('O'),\n\t      endFirst: getInt('E'),\n\t      numPages: getInt('N'),\n\t      mainXRefEntriesOffset: getInt('T'),\n\t      pageFirst: linDict.has('P') ? getInt('P', true) : 0\n\t    };\n\t  }\n\t};\n\texports.Lexer = Lexer;\n\texports.Linearization = Linearization;\n\texports.Parser = Parser;\n\t\n\t/***/ }),\n\t/* 35 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar isObject = __w_pdfjs_require__(3);\n\tvar document = __w_pdfjs_require__(1).document;\n\tvar is = isObject(document) && isObject(document.createElement);\n\tmodule.exports = function (it) {\n\t  return is ? document.createElement(it) : {};\n\t};\n\t\n\t/***/ }),\n\t/* 36 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar isObject = __w_pdfjs_require__(3);\n\tmodule.exports = function (it, S) {\n\t  if (!isObject(it)) return it;\n\t  var fn, val;\n\t  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n\t  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n\t  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n\t  throw TypeError(\"Can't convert object to primitive value\");\n\t};\n\t\n\t/***/ }),\n\t/* 37 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar cof = __w_pdfjs_require__(24);\n\tmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n\t  return cof(it) == 'String' ? it.split('') : Object(it);\n\t};\n\t\n\t/***/ }),\n\t/* 38 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tmodule.exports = function (it) {\n\t  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n\t  return it;\n\t};\n\t\n\t/***/ }),\n\t/* 39 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar shared = __w_pdfjs_require__(54)('keys');\n\tvar uid = __w_pdfjs_require__(17);\n\tmodule.exports = function (key) {\n\t  return shared[key] || (shared[key] = uid(key));\n\t};\n\t\n\t/***/ }),\n\t/* 40 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tmodule.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');\n\t\n\t/***/ }),\n\t/* 41 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar $keys = __w_pdfjs_require__(52);\n\tvar enumBugKeys = __w_pdfjs_require__(40);\n\tmodule.exports = Object.keys || function keys(O) {\n\t  return $keys(O, enumBugKeys);\n\t};\n\t\n\t/***/ }),\n\t/* 42 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar ctx = __w_pdfjs_require__(13);\n\tvar IObject = __w_pdfjs_require__(37);\n\tvar toObject = __w_pdfjs_require__(19);\n\tvar toLength = __w_pdfjs_require__(14);\n\tvar asc = __w_pdfjs_require__(91);\n\tmodule.exports = function (TYPE, $create) {\n\t  var IS_MAP = TYPE == 1;\n\t  var IS_FILTER = TYPE == 2;\n\t  var IS_SOME = TYPE == 3;\n\t  var IS_EVERY = TYPE == 4;\n\t  var IS_FIND_INDEX = TYPE == 6;\n\t  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n\t  var create = $create || asc;\n\t  return function ($this, callbackfn, that) {\n\t    var O = toObject($this);\n\t    var self = IObject(O);\n\t    var f = ctx(callbackfn, that, 3);\n\t    var length = toLength(self.length);\n\t    var index = 0;\n\t    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n\t    var val, res;\n\t    for (; length > index; index++) {\n\t      if (NO_HOLES || index in self) {\n\t        val = self[index];\n\t        res = f(val, index, O);\n\t        if (TYPE) {\n\t          if (IS_MAP) result[index] = res;else if (res) switch (TYPE) {\n\t            case 3:\n\t              return true;\n\t            case 5:\n\t              return val;\n\t            case 6:\n\t              return index;\n\t            case 2:\n\t              result.push(val);\n\t          } else if (IS_EVERY) return false;\n\t        }\n\t      }\n\t    }return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n\t  };\n\t};\n\t\n\t/***/ }),\n\t/* 43 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar anObject = __w_pdfjs_require__(9);\n\tvar aFunction = __w_pdfjs_require__(21);\n\tvar SPECIES = __w_pdfjs_require__(4)('species');\n\tmodule.exports = function (O, D) {\n\t  var C = anObject(O).constructor;\n\t  var S;\n\t  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n\t};\n\t\n\t/***/ }),\n\t/* 44 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar ITERATOR = __w_pdfjs_require__(4)('iterator');\n\tvar SAFE_CLOSING = false;\n\ttry {\n\t  var riter = [7][ITERATOR]();\n\t  riter['return'] = function () {\n\t    SAFE_CLOSING = true;\n\t  };\n\t  Array.from(riter, function () {\n\t    throw 2;\n\t  });\n\t} catch (e) {}\n\tmodule.exports = function (exec, skipClosing) {\n\t  if (!skipClosing && !SAFE_CLOSING) return false;\n\t  var safe = false;\n\t  try {\n\t    var arr = [7];\n\t    var iter = arr[ITERATOR]();\n\t    iter.next = function () {\n\t      return { done: safe = true };\n\t    };\n\t    arr[ITERATOR] = function () {\n\t      return iter;\n\t    };\n\t    exec(arr);\n\t  } catch (e) {}\n\t  return safe;\n\t};\n\t\n\t/***/ }),\n\t/* 45 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar aFunction = __w_pdfjs_require__(21);\n\tfunction PromiseCapability(C) {\n\t  var resolve, reject;\n\t  this.promise = new C(function ($$resolve, $$reject) {\n\t    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n\t    resolve = $$resolve;\n\t    reject = $$reject;\n\t  });\n\t  this.resolve = aFunction(resolve);\n\t  this.reject = aFunction(reject);\n\t}\n\tmodule.exports.f = function (C) {\n\t  return new PromiseCapability(C);\n\t};\n\t\n\t/***/ }),\n\t/* 46 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar META = __w_pdfjs_require__(17)('meta');\n\tvar isObject = __w_pdfjs_require__(3);\n\tvar has = __w_pdfjs_require__(10);\n\tvar setDesc = __w_pdfjs_require__(15).f;\n\tvar id = 0;\n\tvar isExtensible = Object.isExtensible || function () {\n\t  return true;\n\t};\n\tvar FREEZE = !__w_pdfjs_require__(12)(function () {\n\t  return isExtensible(Object.preventExtensions({}));\n\t});\n\tvar setMeta = function setMeta(it) {\n\t  setDesc(it, META, {\n\t    value: {\n\t      i: 'O' + ++id,\n\t      w: {}\n\t    }\n\t  });\n\t};\n\tvar fastKey = function fastKey(it, create) {\n\t  if (!isObject(it)) return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n\t  if (!has(it, META)) {\n\t    if (!isExtensible(it)) return 'F';\n\t    if (!create) return 'E';\n\t    setMeta(it);\n\t  }\n\t  return it[META].i;\n\t};\n\tvar getWeak = function getWeak(it, create) {\n\t  if (!has(it, META)) {\n\t    if (!isExtensible(it)) return true;\n\t    if (!create) return false;\n\t    setMeta(it);\n\t  }\n\t  return it[META].w;\n\t};\n\tvar onFreeze = function onFreeze(it) {\n\t  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n\t  return it;\n\t};\n\tvar meta = module.exports = {\n\t  KEY: META,\n\t  NEED: false,\n\t  fastKey: fastKey,\n\t  getWeak: getWeak,\n\t  onFreeze: onFreeze\n\t};\n\t\n\t/***/ }),\n\t/* 47 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar getLookupTableFactory = __w_pdfjs_require__(0).getLookupTableFactory;\n\tvar getGlyphsUnicode = getLookupTableFactory(function (t) {\n\t  t['A'] = 0x0041;\n\t  t['AE'] = 0x00C6;\n\t  t['AEacute'] = 0x01FC;\n\t  t['AEmacron'] = 0x01E2;\n\t  t['AEsmall'] = 0xF7E6;\n\t  t['Aacute'] = 0x00C1;\n\t  t['Aacutesmall'] = 0xF7E1;\n\t  t['Abreve'] = 0x0102;\n\t  t['Abreveacute'] = 0x1EAE;\n\t  t['Abrevecyrillic'] = 0x04D0;\n\t  t['Abrevedotbelow'] = 0x1EB6;\n\t  t['Abrevegrave'] = 0x1EB0;\n\t  t['Abrevehookabove'] = 0x1EB2;\n\t  t['Abrevetilde'] = 0x1EB4;\n\t  t['Acaron'] = 0x01CD;\n\t  t['Acircle'] = 0x24B6;\n\t  t['Acircumflex'] = 0x00C2;\n\t  t['Acircumflexacute'] = 0x1EA4;\n\t  t['Acircumflexdotbelow'] = 0x1EAC;\n\t  t['Acircumflexgrave'] = 0x1EA6;\n\t  t['Acircumflexhookabove'] = 0x1EA8;\n\t  t['Acircumflexsmall'] = 0xF7E2;\n\t  t['Acircumflextilde'] = 0x1EAA;\n\t  t['Acute'] = 0xF6C9;\n\t  t['Acutesmall'] = 0xF7B4;\n\t  t['Acyrillic'] = 0x0410;\n\t  t['Adblgrave'] = 0x0200;\n\t  t['Adieresis'] = 0x00C4;\n\t  t['Adieresiscyrillic'] = 0x04D2;\n\t  t['Adieresismacron'] = 0x01DE;\n\t  t['Adieresissmall'] = 0xF7E4;\n\t  t['Adotbelow'] = 0x1EA0;\n\t  t['Adotmacron'] = 0x01E0;\n\t  t['Agrave'] = 0x00C0;\n\t  t['Agravesmall'] = 0xF7E0;\n\t  t['Ahookabove'] = 0x1EA2;\n\t  t['Aiecyrillic'] = 0x04D4;\n\t  t['Ainvertedbreve'] = 0x0202;\n\t  t['Alpha'] = 0x0391;\n\t  t['Alphatonos'] = 0x0386;\n\t  t['Amacron'] = 0x0100;\n\t  t['Amonospace'] = 0xFF21;\n\t  t['Aogonek'] = 0x0104;\n\t  t['Aring'] = 0x00C5;\n\t  t['Aringacute'] = 0x01FA;\n\t  t['Aringbelow'] = 0x1E00;\n\t  t['Aringsmall'] = 0xF7E5;\n\t  t['Asmall'] = 0xF761;\n\t  t['Atilde'] = 0x00C3;\n\t  t['Atildesmall'] = 0xF7E3;\n\t  t['Aybarmenian'] = 0x0531;\n\t  t['B'] = 0x0042;\n\t  t['Bcircle'] = 0x24B7;\n\t  t['Bdotaccent'] = 0x1E02;\n\t  t['Bdotbelow'] = 0x1E04;\n\t  t['Becyrillic'] = 0x0411;\n\t  t['Benarmenian'] = 0x0532;\n\t  t['Beta'] = 0x0392;\n\t  t['Bhook'] = 0x0181;\n\t  t['Blinebelow'] = 0x1E06;\n\t  t['Bmonospace'] = 0xFF22;\n\t  t['Brevesmall'] = 0xF6F4;\n\t  t['Bsmall'] = 0xF762;\n\t  t['Btopbar'] = 0x0182;\n\t  t['C'] = 0x0043;\n\t  t['Caarmenian'] = 0x053E;\n\t  t['Cacute'] = 0x0106;\n\t  t['Caron'] = 0xF6CA;\n\t  t['Caronsmall'] = 0xF6F5;\n\t  t['Ccaron'] = 0x010C;\n\t  t['Ccedilla'] = 0x00C7;\n\t  t['Ccedillaacute'] = 0x1E08;\n\t  t['Ccedillasmall'] = 0xF7E7;\n\t  t['Ccircle'] = 0x24B8;\n\t  t['Ccircumflex'] = 0x0108;\n\t  t['Cdot'] = 0x010A;\n\t  t['Cdotaccent'] = 0x010A;\n\t  t['Cedillasmall'] = 0xF7B8;\n\t  t['Chaarmenian'] = 0x0549;\n\t  t['Cheabkhasiancyrillic'] = 0x04BC;\n\t  t['Checyrillic'] = 0x0427;\n\t  t['Chedescenderabkhasiancyrillic'] = 0x04BE;\n\t  t['Chedescendercyrillic'] = 0x04B6;\n\t  t['Chedieresiscyrillic'] = 0x04F4;\n\t  t['Cheharmenian'] = 0x0543;\n\t  t['Chekhakassiancyrillic'] = 0x04CB;\n\t  t['Cheverticalstrokecyrillic'] = 0x04B8;\n\t  t['Chi'] = 0x03A7;\n\t  t['Chook'] = 0x0187;\n\t  t['Circumflexsmall'] = 0xF6F6;\n\t  t['Cmonospace'] = 0xFF23;\n\t  t['Coarmenian'] = 0x0551;\n\t  t['Csmall'] = 0xF763;\n\t  t['D'] = 0x0044;\n\t  t['DZ'] = 0x01F1;\n\t  t['DZcaron'] = 0x01C4;\n\t  t['Daarmenian'] = 0x0534;\n\t  t['Dafrican'] = 0x0189;\n\t  t['Dcaron'] = 0x010E;\n\t  t['Dcedilla'] = 0x1E10;\n\t  t['Dcircle'] = 0x24B9;\n\t  t['Dcircumflexbelow'] = 0x1E12;\n\t  t['Dcroat'] = 0x0110;\n\t  t['Ddotaccent'] = 0x1E0A;\n\t  t['Ddotbelow'] = 0x1E0C;\n\t  t['Decyrillic'] = 0x0414;\n\t  t['Deicoptic'] = 0x03EE;\n\t  t['Delta'] = 0x2206;\n\t  t['Deltagreek'] = 0x0394;\n\t  t['Dhook'] = 0x018A;\n\t  t['Dieresis'] = 0xF6CB;\n\t  t['DieresisAcute'] = 0xF6CC;\n\t  t['DieresisGrave'] = 0xF6CD;\n\t  t['Dieresissmall'] = 0xF7A8;\n\t  t['Digammagreek'] = 0x03DC;\n\t  t['Djecyrillic'] = 0x0402;\n\t  t['Dlinebelow'] = 0x1E0E;\n\t  t['Dmonospace'] = 0xFF24;\n\t  t['Dotaccentsmall'] = 0xF6F7;\n\t  t['Dslash'] = 0x0110;\n\t  t['Dsmall'] = 0xF764;\n\t  t['Dtopbar'] = 0x018B;\n\t  t['Dz'] = 0x01F2;\n\t  t['Dzcaron'] = 0x01C5;\n\t  t['Dzeabkhasiancyrillic'] = 0x04E0;\n\t  t['Dzecyrillic'] = 0x0405;\n\t  t['Dzhecyrillic'] = 0x040F;\n\t  t['E'] = 0x0045;\n\t  t['Eacute'] = 0x00C9;\n\t  t['Eacutesmall'] = 0xF7E9;\n\t  t['Ebreve'] = 0x0114;\n\t  t['Ecaron'] = 0x011A;\n\t  t['Ecedillabreve'] = 0x1E1C;\n\t  t['Echarmenian'] = 0x0535;\n\t  t['Ecircle'] = 0x24BA;\n\t  t['Ecircumflex'] = 0x00CA;\n\t  t['Ecircumflexacute'] = 0x1EBE;\n\t  t['Ecircumflexbelow'] = 0x1E18;\n\t  t['Ecircumflexdotbelow'] = 0x1EC6;\n\t  t['Ecircumflexgrave'] = 0x1EC0;\n\t  t['Ecircumflexhookabove'] = 0x1EC2;\n\t  t['Ecircumflexsmall'] = 0xF7EA;\n\t  t['Ecircumflextilde'] = 0x1EC4;\n\t  t['Ecyrillic'] = 0x0404;\n\t  t['Edblgrave'] = 0x0204;\n\t  t['Edieresis'] = 0x00CB;\n\t  t['Edieresissmall'] = 0xF7EB;\n\t  t['Edot'] = 0x0116;\n\t  t['Edotaccent'] = 0x0116;\n\t  t['Edotbelow'] = 0x1EB8;\n\t  t['Efcyrillic'] = 0x0424;\n\t  t['Egrave'] = 0x00C8;\n\t  t['Egravesmall'] = 0xF7E8;\n\t  t['Eharmenian'] = 0x0537;\n\t  t['Ehookabove'] = 0x1EBA;\n\t  t['Eightroman'] = 0x2167;\n\t  t['Einvertedbreve'] = 0x0206;\n\t  t['Eiotifiedcyrillic'] = 0x0464;\n\t  t['Elcyrillic'] = 0x041B;\n\t  t['Elevenroman'] = 0x216A;\n\t  t['Emacron'] = 0x0112;\n\t  t['Emacronacute'] = 0x1E16;\n\t  t['Emacrongrave'] = 0x1E14;\n\t  t['Emcyrillic'] = 0x041C;\n\t  t['Emonospace'] = 0xFF25;\n\t  t['Encyrillic'] = 0x041D;\n\t  t['Endescendercyrillic'] = 0x04A2;\n\t  t['Eng'] = 0x014A;\n\t  t['Enghecyrillic'] = 0x04A4;\n\t  t['Enhookcyrillic'] = 0x04C7;\n\t  t['Eogonek'] = 0x0118;\n\t  t['Eopen'] = 0x0190;\n\t  t['Epsilon'] = 0x0395;\n\t  t['Epsilontonos'] = 0x0388;\n\t  t['Ercyrillic'] = 0x0420;\n\t  t['Ereversed'] = 0x018E;\n\t  t['Ereversedcyrillic'] = 0x042D;\n\t  t['Escyrillic'] = 0x0421;\n\t  t['Esdescendercyrillic'] = 0x04AA;\n\t  t['Esh'] = 0x01A9;\n\t  t['Esmall'] = 0xF765;\n\t  t['Eta'] = 0x0397;\n\t  t['Etarmenian'] = 0x0538;\n\t  t['Etatonos'] = 0x0389;\n\t  t['Eth'] = 0x00D0;\n\t  t['Ethsmall'] = 0xF7F0;\n\t  t['Etilde'] = 0x1EBC;\n\t  t['Etildebelow'] = 0x1E1A;\n\t  t['Euro'] = 0x20AC;\n\t  t['Ezh'] = 0x01B7;\n\t  t['Ezhcaron'] = 0x01EE;\n\t  t['Ezhreversed'] = 0x01B8;\n\t  t['F'] = 0x0046;\n\t  t['Fcircle'] = 0x24BB;\n\t  t['Fdotaccent'] = 0x1E1E;\n\t  t['Feharmenian'] = 0x0556;\n\t  t['Feicoptic'] = 0x03E4;\n\t  t['Fhook'] = 0x0191;\n\t  t['Fitacyrillic'] = 0x0472;\n\t  t['Fiveroman'] = 0x2164;\n\t  t['Fmonospace'] = 0xFF26;\n\t  t['Fourroman'] = 0x2163;\n\t  t['Fsmall'] = 0xF766;\n\t  t['G'] = 0x0047;\n\t  t['GBsquare'] = 0x3387;\n\t  t['Gacute'] = 0x01F4;\n\t  t['Gamma'] = 0x0393;\n\t  t['Gammaafrican'] = 0x0194;\n\t  t['Gangiacoptic'] = 0x03EA;\n\t  t['Gbreve'] = 0x011E;\n\t  t['Gcaron'] = 0x01E6;\n\t  t['Gcedilla'] = 0x0122;\n\t  t['Gcircle'] = 0x24BC;\n\t  t['Gcircumflex'] = 0x011C;\n\t  t['Gcommaaccent'] = 0x0122;\n\t  t['Gdot'] = 0x0120;\n\t  t['Gdotaccent'] = 0x0120;\n\t  t['Gecyrillic'] = 0x0413;\n\t  t['Ghadarmenian'] = 0x0542;\n\t  t['Ghemiddlehookcyrillic'] = 0x0494;\n\t  t['Ghestrokecyrillic'] = 0x0492;\n\t  t['Gheupturncyrillic'] = 0x0490;\n\t  t['Ghook'] = 0x0193;\n\t  t['Gimarmenian'] = 0x0533;\n\t  t['Gjecyrillic'] = 0x0403;\n\t  t['Gmacron'] = 0x1E20;\n\t  t['Gmonospace'] = 0xFF27;\n\t  t['Grave'] = 0xF6CE;\n\t  t['Gravesmall'] = 0xF760;\n\t  t['Gsmall'] = 0xF767;\n\t  t['Gsmallhook'] = 0x029B;\n\t  t['Gstroke'] = 0x01E4;\n\t  t['H'] = 0x0048;\n\t  t['H18533'] = 0x25CF;\n\t  t['H18543'] = 0x25AA;\n\t  t['H18551'] = 0x25AB;\n\t  t['H22073'] = 0x25A1;\n\t  t['HPsquare'] = 0x33CB;\n\t  t['Haabkhasiancyrillic'] = 0x04A8;\n\t  t['Hadescendercyrillic'] = 0x04B2;\n\t  t['Hardsigncyrillic'] = 0x042A;\n\t  t['Hbar'] = 0x0126;\n\t  t['Hbrevebelow'] = 0x1E2A;\n\t  t['Hcedilla'] = 0x1E28;\n\t  t['Hcircle'] = 0x24BD;\n\t  t['Hcircumflex'] = 0x0124;\n\t  t['Hdieresis'] = 0x1E26;\n\t  t['Hdotaccent'] = 0x1E22;\n\t  t['Hdotbelow'] = 0x1E24;\n\t  t['Hmonospace'] = 0xFF28;\n\t  t['Hoarmenian'] = 0x0540;\n\t  t['Horicoptic'] = 0x03E8;\n\t  t['Hsmall'] = 0xF768;\n\t  t['Hungarumlaut'] = 0xF6CF;\n\t  t['Hungarumlautsmall'] = 0xF6F8;\n\t  t['Hzsquare'] = 0x3390;\n\t  t['I'] = 0x0049;\n\t  t['IAcyrillic'] = 0x042F;\n\t  t['IJ'] = 0x0132;\n\t  t['IUcyrillic'] = 0x042E;\n\t  t['Iacute'] = 0x00CD;\n\t  t['Iacutesmall'] = 0xF7ED;\n\t  t['Ibreve'] = 0x012C;\n\t  t['Icaron'] = 0x01CF;\n\t  t['Icircle'] = 0x24BE;\n\t  t['Icircumflex'] = 0x00CE;\n\t  t['Icircumflexsmall'] = 0xF7EE;\n\t  t['Icyrillic'] = 0x0406;\n\t  t['Idblgrave'] = 0x0208;\n\t  t['Idieresis'] = 0x00CF;\n\t  t['Idieresisacute'] = 0x1E2E;\n\t  t['Idieresiscyrillic'] = 0x04E4;\n\t  t['Idieresissmall'] = 0xF7EF;\n\t  t['Idot'] = 0x0130;\n\t  t['Idotaccent'] = 0x0130;\n\t  t['Idotbelow'] = 0x1ECA;\n\t  t['Iebrevecyrillic'] = 0x04D6;\n\t  t['Iecyrillic'] = 0x0415;\n\t  t['Ifraktur'] = 0x2111;\n\t  t['Igrave'] = 0x00CC;\n\t  t['Igravesmall'] = 0xF7EC;\n\t  t['Ihookabove'] = 0x1EC8;\n\t  t['Iicyrillic'] = 0x0418;\n\t  t['Iinvertedbreve'] = 0x020A;\n\t  t['Iishortcyrillic'] = 0x0419;\n\t  t['Imacron'] = 0x012A;\n\t  t['Imacroncyrillic'] = 0x04E2;\n\t  t['Imonospace'] = 0xFF29;\n\t  t['Iniarmenian'] = 0x053B;\n\t  t['Iocyrillic'] = 0x0401;\n\t  t['Iogonek'] = 0x012E;\n\t  t['Iota'] = 0x0399;\n\t  t['Iotaafrican'] = 0x0196;\n\t  t['Iotadieresis'] = 0x03AA;\n\t  t['Iotatonos'] = 0x038A;\n\t  t['Ismall'] = 0xF769;\n\t  t['Istroke'] = 0x0197;\n\t  t['Itilde'] = 0x0128;\n\t  t['Itildebelow'] = 0x1E2C;\n\t  t['Izhitsacyrillic'] = 0x0474;\n\t  t['Izhitsadblgravecyrillic'] = 0x0476;\n\t  t['J'] = 0x004A;\n\t  t['Jaarmenian'] = 0x0541;\n\t  t['Jcircle'] = 0x24BF;\n\t  t['Jcircumflex'] = 0x0134;\n\t  t['Jecyrillic'] = 0x0408;\n\t  t['Jheharmenian'] = 0x054B;\n\t  t['Jmonospace'] = 0xFF2A;\n\t  t['Jsmall'] = 0xF76A;\n\t  t['K'] = 0x004B;\n\t  t['KBsquare'] = 0x3385;\n\t  t['KKsquare'] = 0x33CD;\n\t  t['Kabashkircyrillic'] = 0x04A0;\n\t  t['Kacute'] = 0x1E30;\n\t  t['Kacyrillic'] = 0x041A;\n\t  t['Kadescendercyrillic'] = 0x049A;\n\t  t['Kahookcyrillic'] = 0x04C3;\n\t  t['Kappa'] = 0x039A;\n\t  t['Kastrokecyrillic'] = 0x049E;\n\t  t['Kaverticalstrokecyrillic'] = 0x049C;\n\t  t['Kcaron'] = 0x01E8;\n\t  t['Kcedilla'] = 0x0136;\n\t  t['Kcircle'] = 0x24C0;\n\t  t['Kcommaaccent'] = 0x0136;\n\t  t['Kdotbelow'] = 0x1E32;\n\t  t['Keharmenian'] = 0x0554;\n\t  t['Kenarmenian'] = 0x053F;\n\t  t['Khacyrillic'] = 0x0425;\n\t  t['Kheicoptic'] = 0x03E6;\n\t  t['Khook'] = 0x0198;\n\t  t['Kjecyrillic'] = 0x040C;\n\t  t['Klinebelow'] = 0x1E34;\n\t  t['Kmonospace'] = 0xFF2B;\n\t  t['Koppacyrillic'] = 0x0480;\n\t  t['Koppagreek'] = 0x03DE;\n\t  t['Ksicyrillic'] = 0x046E;\n\t  t['Ksmall'] = 0xF76B;\n\t  t['L'] = 0x004C;\n\t  t['LJ'] = 0x01C7;\n\t  t['LL'] = 0xF6BF;\n\t  t['Lacute'] = 0x0139;\n\t  t['Lambda'] = 0x039B;\n\t  t['Lcaron'] = 0x013D;\n\t  t['Lcedilla'] = 0x013B;\n\t  t['Lcircle'] = 0x24C1;\n\t  t['Lcircumflexbelow'] = 0x1E3C;\n\t  t['Lcommaaccent'] = 0x013B;\n\t  t['Ldot'] = 0x013F;\n\t  t['Ldotaccent'] = 0x013F;\n\t  t['Ldotbelow'] = 0x1E36;\n\t  t['Ldotbelowmacron'] = 0x1E38;\n\t  t['Liwnarmenian'] = 0x053C;\n\t  t['Lj'] = 0x01C8;\n\t  t['Ljecyrillic'] = 0x0409;\n\t  t['Llinebelow'] = 0x1E3A;\n\t  t['Lmonospace'] = 0xFF2C;\n\t  t['Lslash'] = 0x0141;\n\t  t['Lslashsmall'] = 0xF6F9;\n\t  t['Lsmall'] = 0xF76C;\n\t  t['M'] = 0x004D;\n\t  t['MBsquare'] = 0x3386;\n\t  t['Macron'] = 0xF6D0;\n\t  t['Macronsmall'] = 0xF7AF;\n\t  t['Macute'] = 0x1E3E;\n\t  t['Mcircle'] = 0x24C2;\n\t  t['Mdotaccent'] = 0x1E40;\n\t  t['Mdotbelow'] = 0x1E42;\n\t  t['Menarmenian'] = 0x0544;\n\t  t['Mmonospace'] = 0xFF2D;\n\t  t['Msmall'] = 0xF76D;\n\t  t['Mturned'] = 0x019C;\n\t  t['Mu'] = 0x039C;\n\t  t['N'] = 0x004E;\n\t  t['NJ'] = 0x01CA;\n\t  t['Nacute'] = 0x0143;\n\t  t['Ncaron'] = 0x0147;\n\t  t['Ncedilla'] = 0x0145;\n\t  t['Ncircle'] = 0x24C3;\n\t  t['Ncircumflexbelow'] = 0x1E4A;\n\t  t['Ncommaaccent'] = 0x0145;\n\t  t['Ndotaccent'] = 0x1E44;\n\t  t['Ndotbelow'] = 0x1E46;\n\t  t['Nhookleft'] = 0x019D;\n\t  t['Nineroman'] = 0x2168;\n\t  t['Nj'] = 0x01CB;\n\t  t['Njecyrillic'] = 0x040A;\n\t  t['Nlinebelow'] = 0x1E48;\n\t  t['Nmonospace'] = 0xFF2E;\n\t  t['Nowarmenian'] = 0x0546;\n\t  t['Nsmall'] = 0xF76E;\n\t  t['Ntilde'] = 0x00D1;\n\t  t['Ntildesmall'] = 0xF7F1;\n\t  t['Nu'] = 0x039D;\n\t  t['O'] = 0x004F;\n\t  t['OE'] = 0x0152;\n\t  t['OEsmall'] = 0xF6FA;\n\t  t['Oacute'] = 0x00D3;\n\t  t['Oacutesmall'] = 0xF7F3;\n\t  t['Obarredcyrillic'] = 0x04E8;\n\t  t['Obarreddieresiscyrillic'] = 0x04EA;\n\t  t['Obreve'] = 0x014E;\n\t  t['Ocaron'] = 0x01D1;\n\t  t['Ocenteredtilde'] = 0x019F;\n\t  t['Ocircle'] = 0x24C4;\n\t  t['Ocircumflex'] = 0x00D4;\n\t  t['Ocircumflexacute'] = 0x1ED0;\n\t  t['Ocircumflexdotbelow'] = 0x1ED8;\n\t  t['Ocircumflexgrave'] = 0x1ED2;\n\t  t['Ocircumflexhookabove'] = 0x1ED4;\n\t  t['Ocircumflexsmall'] = 0xF7F4;\n\t  t['Ocircumflextilde'] = 0x1ED6;\n\t  t['Ocyrillic'] = 0x041E;\n\t  t['Odblacute'] = 0x0150;\n\t  t['Odblgrave'] = 0x020C;\n\t  t['Odieresis'] = 0x00D6;\n\t  t['Odieresiscyrillic'] = 0x04E6;\n\t  t['Odieresissmall'] = 0xF7F6;\n\t  t['Odotbelow'] = 0x1ECC;\n\t  t['Ogoneksmall'] = 0xF6FB;\n\t  t['Ograve'] = 0x00D2;\n\t  t['Ogravesmall'] = 0xF7F2;\n\t  t['Oharmenian'] = 0x0555;\n\t  t['Ohm'] = 0x2126;\n\t  t['Ohookabove'] = 0x1ECE;\n\t  t['Ohorn'] = 0x01A0;\n\t  t['Ohornacute'] = 0x1EDA;\n\t  t['Ohorndotbelow'] = 0x1EE2;\n\t  t['Ohorngrave'] = 0x1EDC;\n\t  t['Ohornhookabove'] = 0x1EDE;\n\t  t['Ohorntilde'] = 0x1EE0;\n\t  t['Ohungarumlaut'] = 0x0150;\n\t  t['Oi'] = 0x01A2;\n\t  t['Oinvertedbreve'] = 0x020E;\n\t  t['Omacron'] = 0x014C;\n\t  t['Omacronacute'] = 0x1E52;\n\t  t['Omacrongrave'] = 0x1E50;\n\t  t['Omega'] = 0x2126;\n\t  t['Omegacyrillic'] = 0x0460;\n\t  t['Omegagreek'] = 0x03A9;\n\t  t['Omegaroundcyrillic'] = 0x047A;\n\t  t['Omegatitlocyrillic'] = 0x047C;\n\t  t['Omegatonos'] = 0x038F;\n\t  t['Omicron'] = 0x039F;\n\t  t['Omicrontonos'] = 0x038C;\n\t  t['Omonospace'] = 0xFF2F;\n\t  t['Oneroman'] = 0x2160;\n\t  t['Oogonek'] = 0x01EA;\n\t  t['Oogonekmacron'] = 0x01EC;\n\t  t['Oopen'] = 0x0186;\n\t  t['Oslash'] = 0x00D8;\n\t  t['Oslashacute'] = 0x01FE;\n\t  t['Oslashsmall'] = 0xF7F8;\n\t  t['Osmall'] = 0xF76F;\n\t  t['Ostrokeacute'] = 0x01FE;\n\t  t['Otcyrillic'] = 0x047E;\n\t  t['Otilde'] = 0x00D5;\n\t  t['Otildeacute'] = 0x1E4C;\n\t  t['Otildedieresis'] = 0x1E4E;\n\t  t['Otildesmall'] = 0xF7F5;\n\t  t['P'] = 0x0050;\n\t  t['Pacute'] = 0x1E54;\n\t  t['Pcircle'] = 0x24C5;\n\t  t['Pdotaccent'] = 0x1E56;\n\t  t['Pecyrillic'] = 0x041F;\n\t  t['Peharmenian'] = 0x054A;\n\t  t['Pemiddlehookcyrillic'] = 0x04A6;\n\t  t['Phi'] = 0x03A6;\n\t  t['Phook'] = 0x01A4;\n\t  t['Pi'] = 0x03A0;\n\t  t['Piwrarmenian'] = 0x0553;\n\t  t['Pmonospace'] = 0xFF30;\n\t  t['Psi'] = 0x03A8;\n\t  t['Psicyrillic'] = 0x0470;\n\t  t['Psmall'] = 0xF770;\n\t  t['Q'] = 0x0051;\n\t  t['Qcircle'] = 0x24C6;\n\t  t['Qmonospace'] = 0xFF31;\n\t  t['Qsmall'] = 0xF771;\n\t  t['R'] = 0x0052;\n\t  t['Raarmenian'] = 0x054C;\n\t  t['Racute'] = 0x0154;\n\t  t['Rcaron'] = 0x0158;\n\t  t['Rcedilla'] = 0x0156;\n\t  t['Rcircle'] = 0x24C7;\n\t  t['Rcommaaccent'] = 0x0156;\n\t  t['Rdblgrave'] = 0x0210;\n\t  t['Rdotaccent'] = 0x1E58;\n\t  t['Rdotbelow'] = 0x1E5A;\n\t  t['Rdotbelowmacron'] = 0x1E5C;\n\t  t['Reharmenian'] = 0x0550;\n\t  t['Rfraktur'] = 0x211C;\n\t  t['Rho'] = 0x03A1;\n\t  t['Ringsmall'] = 0xF6FC;\n\t  t['Rinvertedbreve'] = 0x0212;\n\t  t['Rlinebelow'] = 0x1E5E;\n\t  t['Rmonospace'] = 0xFF32;\n\t  t['Rsmall'] = 0xF772;\n\t  t['Rsmallinverted'] = 0x0281;\n\t  t['Rsmallinvertedsuperior'] = 0x02B6;\n\t  t['S'] = 0x0053;\n\t  t['SF010000'] = 0x250C;\n\t  t['SF020000'] = 0x2514;\n\t  t['SF030000'] = 0x2510;\n\t  t['SF040000'] = 0x2518;\n\t  t['SF050000'] = 0x253C;\n\t  t['SF060000'] = 0x252C;\n\t  t['SF070000'] = 0x2534;\n\t  t['SF080000'] = 0x251C;\n\t  t['SF090000'] = 0x2524;\n\t  t['SF100000'] = 0x2500;\n\t  t['SF110000'] = 0x2502;\n\t  t['SF190000'] = 0x2561;\n\t  t['SF200000'] = 0x2562;\n\t  t['SF210000'] = 0x2556;\n\t  t['SF220000'] = 0x2555;\n\t  t['SF230000'] = 0x2563;\n\t  t['SF240000'] = 0x2551;\n\t  t['SF250000'] = 0x2557;\n\t  t['SF260000'] = 0x255D;\n\t  t['SF270000'] = 0x255C;\n\t  t['SF280000'] = 0x255B;\n\t  t['SF360000'] = 0x255E;\n\t  t['SF370000'] = 0x255F;\n\t  t['SF380000'] = 0x255A;\n\t  t['SF390000'] = 0x2554;\n\t  t['SF400000'] = 0x2569;\n\t  t['SF410000'] = 0x2566;\n\t  t['SF420000'] = 0x2560;\n\t  t['SF430000'] = 0x2550;\n\t  t['SF440000'] = 0x256C;\n\t  t['SF450000'] = 0x2567;\n\t  t['SF460000'] = 0x2568;\n\t  t['SF470000'] = 0x2564;\n\t  t['SF480000'] = 0x2565;\n\t  t['SF490000'] = 0x2559;\n\t  t['SF500000'] = 0x2558;\n\t  t['SF510000'] = 0x2552;\n\t  t['SF520000'] = 0x2553;\n\t  t['SF530000'] = 0x256B;\n\t  t['SF540000'] = 0x256A;\n\t  t['Sacute'] = 0x015A;\n\t  t['Sacutedotaccent'] = 0x1E64;\n\t  t['Sampigreek'] = 0x03E0;\n\t  t['Scaron'] = 0x0160;\n\t  t['Scarondotaccent'] = 0x1E66;\n\t  t['Scaronsmall'] = 0xF6FD;\n\t  t['Scedilla'] = 0x015E;\n\t  t['Schwa'] = 0x018F;\n\t  t['Schwacyrillic'] = 0x04D8;\n\t  t['Schwadieresiscyrillic'] = 0x04DA;\n\t  t['Scircle'] = 0x24C8;\n\t  t['Scircumflex'] = 0x015C;\n\t  t['Scommaaccent'] = 0x0218;\n\t  t['Sdotaccent'] = 0x1E60;\n\t  t['Sdotbelow'] = 0x1E62;\n\t  t['Sdotbelowdotaccent'] = 0x1E68;\n\t  t['Seharmenian'] = 0x054D;\n\t  t['Sevenroman'] = 0x2166;\n\t  t['Shaarmenian'] = 0x0547;\n\t  t['Shacyrillic'] = 0x0428;\n\t  t['Shchacyrillic'] = 0x0429;\n\t  t['Sheicoptic'] = 0x03E2;\n\t  t['Shhacyrillic'] = 0x04BA;\n\t  t['Shimacoptic'] = 0x03EC;\n\t  t['Sigma'] = 0x03A3;\n\t  t['Sixroman'] = 0x2165;\n\t  t['Smonospace'] = 0xFF33;\n\t  t['Softsigncyrillic'] = 0x042C;\n\t  t['Ssmall'] = 0xF773;\n\t  t['Stigmagreek'] = 0x03DA;\n\t  t['T'] = 0x0054;\n\t  t['Tau'] = 0x03A4;\n\t  t['Tbar'] = 0x0166;\n\t  t['Tcaron'] = 0x0164;\n\t  t['Tcedilla'] = 0x0162;\n\t  t['Tcircle'] = 0x24C9;\n\t  t['Tcircumflexbelow'] = 0x1E70;\n\t  t['Tcommaaccent'] = 0x0162;\n\t  t['Tdotaccent'] = 0x1E6A;\n\t  t['Tdotbelow'] = 0x1E6C;\n\t  t['Tecyrillic'] = 0x0422;\n\t  t['Tedescendercyrillic'] = 0x04AC;\n\t  t['Tenroman'] = 0x2169;\n\t  t['Tetsecyrillic'] = 0x04B4;\n\t  t['Theta'] = 0x0398;\n\t  t['Thook'] = 0x01AC;\n\t  t['Thorn'] = 0x00DE;\n\t  t['Thornsmall'] = 0xF7FE;\n\t  t['Threeroman'] = 0x2162;\n\t  t['Tildesmall'] = 0xF6FE;\n\t  t['Tiwnarmenian'] = 0x054F;\n\t  t['Tlinebelow'] = 0x1E6E;\n\t  t['Tmonospace'] = 0xFF34;\n\t  t['Toarmenian'] = 0x0539;\n\t  t['Tonefive'] = 0x01BC;\n\t  t['Tonesix'] = 0x0184;\n\t  t['Tonetwo'] = 0x01A7;\n\t  t['Tretroflexhook'] = 0x01AE;\n\t  t['Tsecyrillic'] = 0x0426;\n\t  t['Tshecyrillic'] = 0x040B;\n\t  t['Tsmall'] = 0xF774;\n\t  t['Twelveroman'] = 0x216B;\n\t  t['Tworoman'] = 0x2161;\n\t  t['U'] = 0x0055;\n\t  t['Uacute'] = 0x00DA;\n\t  t['Uacutesmall'] = 0xF7FA;\n\t  t['Ubreve'] = 0x016C;\n\t  t['Ucaron'] = 0x01D3;\n\t  t['Ucircle'] = 0x24CA;\n\t  t['Ucircumflex'] = 0x00DB;\n\t  t['Ucircumflexbelow'] = 0x1E76;\n\t  t['Ucircumflexsmall'] = 0xF7FB;\n\t  t['Ucyrillic'] = 0x0423;\n\t  t['Udblacute'] = 0x0170;\n\t  t['Udblgrave'] = 0x0214;\n\t  t['Udieresis'] = 0x00DC;\n\t  t['Udieresisacute'] = 0x01D7;\n\t  t['Udieresisbelow'] = 0x1E72;\n\t  t['Udieresiscaron'] = 0x01D9;\n\t  t['Udieresiscyrillic'] = 0x04F0;\n\t  t['Udieresisgrave'] = 0x01DB;\n\t  t['Udieresismacron'] = 0x01D5;\n\t  t['Udieresissmall'] = 0xF7FC;\n\t  t['Udotbelow'] = 0x1EE4;\n\t  t['Ugrave'] = 0x00D9;\n\t  t['Ugravesmall'] = 0xF7F9;\n\t  t['Uhookabove'] = 0x1EE6;\n\t  t['Uhorn'] = 0x01AF;\n\t  t['Uhornacute'] = 0x1EE8;\n\t  t['Uhorndotbelow'] = 0x1EF0;\n\t  t['Uhorngrave'] = 0x1EEA;\n\t  t['Uhornhookabove'] = 0x1EEC;\n\t  t['Uhorntilde'] = 0x1EEE;\n\t  t['Uhungarumlaut'] = 0x0170;\n\t  t['Uhungarumlautcyrillic'] = 0x04F2;\n\t  t['Uinvertedbreve'] = 0x0216;\n\t  t['Ukcyrillic'] = 0x0478;\n\t  t['Umacron'] = 0x016A;\n\t  t['Umacroncyrillic'] = 0x04EE;\n\t  t['Umacrondieresis'] = 0x1E7A;\n\t  t['Umonospace'] = 0xFF35;\n\t  t['Uogonek'] = 0x0172;\n\t  t['Upsilon'] = 0x03A5;\n\t  t['Upsilon1'] = 0x03D2;\n\t  t['Upsilonacutehooksymbolgreek'] = 0x03D3;\n\t  t['Upsilonafrican'] = 0x01B1;\n\t  t['Upsilondieresis'] = 0x03AB;\n\t  t['Upsilondieresishooksymbolgreek'] = 0x03D4;\n\t  t['Upsilonhooksymbol'] = 0x03D2;\n\t  t['Upsilontonos'] = 0x038E;\n\t  t['Uring'] = 0x016E;\n\t  t['Ushortcyrillic'] = 0x040E;\n\t  t['Usmall'] = 0xF775;\n\t  t['Ustraightcyrillic'] = 0x04AE;\n\t  t['Ustraightstrokecyrillic'] = 0x04B0;\n\t  t['Utilde'] = 0x0168;\n\t  t['Utildeacute'] = 0x1E78;\n\t  t['Utildebelow'] = 0x1E74;\n\t  t['V'] = 0x0056;\n\t  t['Vcircle'] = 0x24CB;\n\t  t['Vdotbelow'] = 0x1E7E;\n\t  t['Vecyrillic'] = 0x0412;\n\t  t['Vewarmenian'] = 0x054E;\n\t  t['Vhook'] = 0x01B2;\n\t  t['Vmonospace'] = 0xFF36;\n\t  t['Voarmenian'] = 0x0548;\n\t  t['Vsmall'] = 0xF776;\n\t  t['Vtilde'] = 0x1E7C;\n\t  t['W'] = 0x0057;\n\t  t['Wacute'] = 0x1E82;\n\t  t['Wcircle'] = 0x24CC;\n\t  t['Wcircumflex'] = 0x0174;\n\t  t['Wdieresis'] = 0x1E84;\n\t  t['Wdotaccent'] = 0x1E86;\n\t  t['Wdotbelow'] = 0x1E88;\n\t  t['Wgrave'] = 0x1E80;\n\t  t['Wmonospace'] = 0xFF37;\n\t  t['Wsmall'] = 0xF777;\n\t  t['X'] = 0x0058;\n\t  t['Xcircle'] = 0x24CD;\n\t  t['Xdieresis'] = 0x1E8C;\n\t  t['Xdotaccent'] = 0x1E8A;\n\t  t['Xeharmenian'] = 0x053D;\n\t  t['Xi'] = 0x039E;\n\t  t['Xmonospace'] = 0xFF38;\n\t  t['Xsmall'] = 0xF778;\n\t  t['Y'] = 0x0059;\n\t  t['Yacute'] = 0x00DD;\n\t  t['Yacutesmall'] = 0xF7FD;\n\t  t['Yatcyrillic'] = 0x0462;\n\t  t['Ycircle'] = 0x24CE;\n\t  t['Ycircumflex'] = 0x0176;\n\t  t['Ydieresis'] = 0x0178;\n\t  t['Ydieresissmall'] = 0xF7FF;\n\t  t['Ydotaccent'] = 0x1E8E;\n\t  t['Ydotbelow'] = 0x1EF4;\n\t  t['Yericyrillic'] = 0x042B;\n\t  t['Yerudieresiscyrillic'] = 0x04F8;\n\t  t['Ygrave'] = 0x1EF2;\n\t  t['Yhook'] = 0x01B3;\n\t  t['Yhookabove'] = 0x1EF6;\n\t  t['Yiarmenian'] = 0x0545;\n\t  t['Yicyrillic'] = 0x0407;\n\t  t['Yiwnarmenian'] = 0x0552;\n\t  t['Ymonospace'] = 0xFF39;\n\t  t['Ysmall'] = 0xF779;\n\t  t['Ytilde'] = 0x1EF8;\n\t  t['Yusbigcyrillic'] = 0x046A;\n\t  t['Yusbigiotifiedcyrillic'] = 0x046C;\n\t  t['Yuslittlecyrillic'] = 0x0466;\n\t  t['Yuslittleiotifiedcyrillic'] = 0x0468;\n\t  t['Z'] = 0x005A;\n\t  t['Zaarmenian'] = 0x0536;\n\t  t['Zacute'] = 0x0179;\n\t  t['Zcaron'] = 0x017D;\n\t  t['Zcaronsmall'] = 0xF6FF;\n\t  t['Zcircle'] = 0x24CF;\n\t  t['Zcircumflex'] = 0x1E90;\n\t  t['Zdot'] = 0x017B;\n\t  t['Zdotaccent'] = 0x017B;\n\t  t['Zdotbelow'] = 0x1E92;\n\t  t['Zecyrillic'] = 0x0417;\n\t  t['Zedescendercyrillic'] = 0x0498;\n\t  t['Zedieresiscyrillic'] = 0x04DE;\n\t  t['Zeta'] = 0x0396;\n\t  t['Zhearmenian'] = 0x053A;\n\t  t['Zhebrevecyrillic'] = 0x04C1;\n\t  t['Zhecyrillic'] = 0x0416;\n\t  t['Zhedescendercyrillic'] = 0x0496;\n\t  t['Zhedieresiscyrillic'] = 0x04DC;\n\t  t['Zlinebelow'] = 0x1E94;\n\t  t['Zmonospace'] = 0xFF3A;\n\t  t['Zsmall'] = 0xF77A;\n\t  t['Zstroke'] = 0x01B5;\n\t  t['a'] = 0x0061;\n\t  t['aabengali'] = 0x0986;\n\t  t['aacute'] = 0x00E1;\n\t  t['aadeva'] = 0x0906;\n\t  t['aagujarati'] = 0x0A86;\n\t  t['aagurmukhi'] = 0x0A06;\n\t  t['aamatragurmukhi'] = 0x0A3E;\n\t  t['aarusquare'] = 0x3303;\n\t  t['aavowelsignbengali'] = 0x09BE;\n\t  t['aavowelsigndeva'] = 0x093E;\n\t  t['aavowelsigngujarati'] = 0x0ABE;\n\t  t['abbreviationmarkarmenian'] = 0x055F;\n\t  t['abbreviationsigndeva'] = 0x0970;\n\t  t['abengali'] = 0x0985;\n\t  t['abopomofo'] = 0x311A;\n\t  t['abreve'] = 0x0103;\n\t  t['abreveacute'] = 0x1EAF;\n\t  t['abrevecyrillic'] = 0x04D1;\n\t  t['abrevedotbelow'] = 0x1EB7;\n\t  t['abrevegrave'] = 0x1EB1;\n\t  t['abrevehookabove'] = 0x1EB3;\n\t  t['abrevetilde'] = 0x1EB5;\n\t  t['acaron'] = 0x01CE;\n\t  t['acircle'] = 0x24D0;\n\t  t['acircumflex'] = 0x00E2;\n\t  t['acircumflexacute'] = 0x1EA5;\n\t  t['acircumflexdotbelow'] = 0x1EAD;\n\t  t['acircumflexgrave'] = 0x1EA7;\n\t  t['acircumflexhookabove'] = 0x1EA9;\n\t  t['acircumflextilde'] = 0x1EAB;\n\t  t['acute'] = 0x00B4;\n\t  t['acutebelowcmb'] = 0x0317;\n\t  t['acutecmb'] = 0x0301;\n\t  t['acutecomb'] = 0x0301;\n\t  t['acutedeva'] = 0x0954;\n\t  t['acutelowmod'] = 0x02CF;\n\t  t['acutetonecmb'] = 0x0341;\n\t  t['acyrillic'] = 0x0430;\n\t  t['adblgrave'] = 0x0201;\n\t  t['addakgurmukhi'] = 0x0A71;\n\t  t['adeva'] = 0x0905;\n\t  t['adieresis'] = 0x00E4;\n\t  t['adieresiscyrillic'] = 0x04D3;\n\t  t['adieresismacron'] = 0x01DF;\n\t  t['adotbelow'] = 0x1EA1;\n\t  t['adotmacron'] = 0x01E1;\n\t  t['ae'] = 0x00E6;\n\t  t['aeacute'] = 0x01FD;\n\t  t['aekorean'] = 0x3150;\n\t  t['aemacron'] = 0x01E3;\n\t  t['afii00208'] = 0x2015;\n\t  t['afii08941'] = 0x20A4;\n\t  t['afii10017'] = 0x0410;\n\t  t['afii10018'] = 0x0411;\n\t  t['afii10019'] = 0x0412;\n\t  t['afii10020'] = 0x0413;\n\t  t['afii10021'] = 0x0414;\n\t  t['afii10022'] = 0x0415;\n\t  t['afii10023'] = 0x0401;\n\t  t['afii10024'] = 0x0416;\n\t  t['afii10025'] = 0x0417;\n\t  t['afii10026'] = 0x0418;\n\t  t['afii10027'] = 0x0419;\n\t  t['afii10028'] = 0x041A;\n\t  t['afii10029'] = 0x041B;\n\t  t['afii10030'] = 0x041C;\n\t  t['afii10031'] = 0x041D;\n\t  t['afii10032'] = 0x041E;\n\t  t['afii10033'] = 0x041F;\n\t  t['afii10034'] = 0x0420;\n\t  t['afii10035'] = 0x0421;\n\t  t['afii10036'] = 0x0422;\n\t  t['afii10037'] = 0x0423;\n\t  t['afii10038'] = 0x0424;\n\t  t['afii10039'] = 0x0425;\n\t  t['afii10040'] = 0x0426;\n\t  t['afii10041'] = 0x0427;\n\t  t['afii10042'] = 0x0428;\n\t  t['afii10043'] = 0x0429;\n\t  t['afii10044'] = 0x042A;\n\t  t['afii10045'] = 0x042B;\n\t  t['afii10046'] = 0x042C;\n\t  t['afii10047'] = 0x042D;\n\t  t['afii10048'] = 0x042E;\n\t  t['afii10049'] = 0x042F;\n\t  t['afii10050'] = 0x0490;\n\t  t['afii10051'] = 0x0402;\n\t  t['afii10052'] = 0x0403;\n\t  t['afii10053'] = 0x0404;\n\t  t['afii10054'] = 0x0405;\n\t  t['afii10055'] = 0x0406;\n\t  t['afii10056'] = 0x0407;\n\t  t['afii10057'] = 0x0408;\n\t  t['afii10058'] = 0x0409;\n\t  t['afii10059'] = 0x040A;\n\t  t['afii10060'] = 0x040B;\n\t  t['afii10061'] = 0x040C;\n\t  t['afii10062'] = 0x040E;\n\t  t['afii10063'] = 0xF6C4;\n\t  t['afii10064'] = 0xF6C5;\n\t  t['afii10065'] = 0x0430;\n\t  t['afii10066'] = 0x0431;\n\t  t['afii10067'] = 0x0432;\n\t  t['afii10068'] = 0x0433;\n\t  t['afii10069'] = 0x0434;\n\t  t['afii10070'] = 0x0435;\n\t  t['afii10071'] = 0x0451;\n\t  t['afii10072'] = 0x0436;\n\t  t['afii10073'] = 0x0437;\n\t  t['afii10074'] = 0x0438;\n\t  t['afii10075'] = 0x0439;\n\t  t['afii10076'] = 0x043A;\n\t  t['afii10077'] = 0x043B;\n\t  t['afii10078'] = 0x043C;\n\t  t['afii10079'] = 0x043D;\n\t  t['afii10080'] = 0x043E;\n\t  t['afii10081'] = 0x043F;\n\t  t['afii10082'] = 0x0440;\n\t  t['afii10083'] = 0x0441;\n\t  t['afii10084'] = 0x0442;\n\t  t['afii10085'] = 0x0443;\n\t  t['afii10086'] = 0x0444;\n\t  t['afii10087'] = 0x0445;\n\t  t['afii10088'] = 0x0446;\n\t  t['afii10089'] = 0x0447;\n\t  t['afii10090'] = 0x0448;\n\t  t['afii10091'] = 0x0449;\n\t  t['afii10092'] = 0x044A;\n\t  t['afii10093'] = 0x044B;\n\t  t['afii10094'] = 0x044C;\n\t  t['afii10095'] = 0x044D;\n\t  t['afii10096'] = 0x044E;\n\t  t['afii10097'] = 0x044F;\n\t  t['afii10098'] = 0x0491;\n\t  t['afii10099'] = 0x0452;\n\t  t['afii10100'] = 0x0453;\n\t  t['afii10101'] = 0x0454;\n\t  t['afii10102'] = 0x0455;\n\t  t['afii10103'] = 0x0456;\n\t  t['afii10104'] = 0x0457;\n\t  t['afii10105'] = 0x0458;\n\t  t['afii10106'] = 0x0459;\n\t  t['afii10107'] = 0x045A;\n\t  t['afii10108'] = 0x045B;\n\t  t['afii10109'] = 0x045C;\n\t  t['afii10110'] = 0x045E;\n\t  t['afii10145'] = 0x040F;\n\t  t['afii10146'] = 0x0462;\n\t  t['afii10147'] = 0x0472;\n\t  t['afii10148'] = 0x0474;\n\t  t['afii10192'] = 0xF6C6;\n\t  t['afii10193'] = 0x045F;\n\t  t['afii10194'] = 0x0463;\n\t  t['afii10195'] = 0x0473;\n\t  t['afii10196'] = 0x0475;\n\t  t['afii10831'] = 0xF6C7;\n\t  t['afii10832'] = 0xF6C8;\n\t  t['afii10846'] = 0x04D9;\n\t  t['afii299'] = 0x200E;\n\t  t['afii300'] = 0x200F;\n\t  t['afii301'] = 0x200D;\n\t  t['afii57381'] = 0x066A;\n\t  t['afii57388'] = 0x060C;\n\t  t['afii57392'] = 0x0660;\n\t  t['afii57393'] = 0x0661;\n\t  t['afii57394'] = 0x0662;\n\t  t['afii57395'] = 0x0663;\n\t  t['afii57396'] = 0x0664;\n\t  t['afii57397'] = 0x0665;\n\t  t['afii57398'] = 0x0666;\n\t  t['afii57399'] = 0x0667;\n\t  t['afii57400'] = 0x0668;\n\t  t['afii57401'] = 0x0669;\n\t  t['afii57403'] = 0x061B;\n\t  t['afii57407'] = 0x061F;\n\t  t['afii57409'] = 0x0621;\n\t  t['afii57410'] = 0x0622;\n\t  t['afii57411'] = 0x0623;\n\t  t['afii57412'] = 0x0624;\n\t  t['afii57413'] = 0x0625;\n\t  t['afii57414'] = 0x0626;\n\t  t['afii57415'] = 0x0627;\n\t  t['afii57416'] = 0x0628;\n\t  t['afii57417'] = 0x0629;\n\t  t['afii57418'] = 0x062A;\n\t  t['afii57419'] = 0x062B;\n\t  t['afii57420'] = 0x062C;\n\t  t['afii57421'] = 0x062D;\n\t  t['afii57422'] = 0x062E;\n\t  t['afii57423'] = 0x062F;\n\t  t['afii57424'] = 0x0630;\n\t  t['afii57425'] = 0x0631;\n\t  t['afii57426'] = 0x0632;\n\t  t['afii57427'] = 0x0633;\n\t  t['afii57428'] = 0x0634;\n\t  t['afii57429'] = 0x0635;\n\t  t['afii57430'] = 0x0636;\n\t  t['afii57431'] = 0x0637;\n\t  t['afii57432'] = 0x0638;\n\t  t['afii57433'] = 0x0639;\n\t  t['afii57434'] = 0x063A;\n\t  t['afii57440'] = 0x0640;\n\t  t['afii57441'] = 0x0641;\n\t  t['afii57442'] = 0x0642;\n\t  t['afii57443'] = 0x0643;\n\t  t['afii57444'] = 0x0644;\n\t  t['afii57445'] = 0x0645;\n\t  t['afii57446'] = 0x0646;\n\t  t['afii57448'] = 0x0648;\n\t  t['afii57449'] = 0x0649;\n\t  t['afii57450'] = 0x064A;\n\t  t['afii57451'] = 0x064B;\n\t  t['afii57452'] = 0x064C;\n\t  t['afii57453'] = 0x064D;\n\t  t['afii57454'] = 0x064E;\n\t  t['afii57455'] = 0x064F;\n\t  t['afii57456'] = 0x0650;\n\t  t['afii57457'] = 0x0651;\n\t  t['afii57458'] = 0x0652;\n\t  t['afii57470'] = 0x0647;\n\t  t['afii57505'] = 0x06A4;\n\t  t['afii57506'] = 0x067E;\n\t  t['afii57507'] = 0x0686;\n\t  t['afii57508'] = 0x0698;\n\t  t['afii57509'] = 0x06AF;\n\t  t['afii57511'] = 0x0679;\n\t  t['afii57512'] = 0x0688;\n\t  t['afii57513'] = 0x0691;\n\t  t['afii57514'] = 0x06BA;\n\t  t['afii57519'] = 0x06D2;\n\t  t['afii57534'] = 0x06D5;\n\t  t['afii57636'] = 0x20AA;\n\t  t['afii57645'] = 0x05BE;\n\t  t['afii57658'] = 0x05C3;\n\t  t['afii57664'] = 0x05D0;\n\t  t['afii57665'] = 0x05D1;\n\t  t['afii57666'] = 0x05D2;\n\t  t['afii57667'] = 0x05D3;\n\t  t['afii57668'] = 0x05D4;\n\t  t['afii57669'] = 0x05D5;\n\t  t['afii57670'] = 0x05D6;\n\t  t['afii57671'] = 0x05D7;\n\t  t['afii57672'] = 0x05D8;\n\t  t['afii57673'] = 0x05D9;\n\t  t['afii57674'] = 0x05DA;\n\t  t['afii57675'] = 0x05DB;\n\t  t['afii57676'] = 0x05DC;\n\t  t['afii57677'] = 0x05DD;\n\t  t['afii57678'] = 0x05DE;\n\t  t['afii57679'] = 0x05DF;\n\t  t['afii57680'] = 0x05E0;\n\t  t['afii57681'] = 0x05E1;\n\t  t['afii57682'] = 0x05E2;\n\t  t['afii57683'] = 0x05E3;\n\t  t['afii57684'] = 0x05E4;\n\t  t['afii57685'] = 0x05E5;\n\t  t['afii57686'] = 0x05E6;\n\t  t['afii57687'] = 0x05E7;\n\t  t['afii57688'] = 0x05E8;\n\t  t['afii57689'] = 0x05E9;\n\t  t['afii57690'] = 0x05EA;\n\t  t['afii57694'] = 0xFB2A;\n\t  t['afii57695'] = 0xFB2B;\n\t  t['afii57700'] = 0xFB4B;\n\t  t['afii57705'] = 0xFB1F;\n\t  t['afii57716'] = 0x05F0;\n\t  t['afii57717'] = 0x05F1;\n\t  t['afii57718'] = 0x05F2;\n\t  t['afii57723'] = 0xFB35;\n\t  t['afii57793'] = 0x05B4;\n\t  t['afii57794'] = 0x05B5;\n\t  t['afii57795'] = 0x05B6;\n\t  t['afii57796'] = 0x05BB;\n\t  t['afii57797'] = 0x05B8;\n\t  t['afii57798'] = 0x05B7;\n\t  t['afii57799'] = 0x05B0;\n\t  t['afii57800'] = 0x05B2;\n\t  t['afii57801'] = 0x05B1;\n\t  t['afii57802'] = 0x05B3;\n\t  t['afii57803'] = 0x05C2;\n\t  t['afii57804'] = 0x05C1;\n\t  t['afii57806'] = 0x05B9;\n\t  t['afii57807'] = 0x05BC;\n\t  t['afii57839'] = 0x05BD;\n\t  t['afii57841'] = 0x05BF;\n\t  t['afii57842'] = 0x05C0;\n\t  t['afii57929'] = 0x02BC;\n\t  t['afii61248'] = 0x2105;\n\t  t['afii61289'] = 0x2113;\n\t  t['afii61352'] = 0x2116;\n\t  t['afii61573'] = 0x202C;\n\t  t['afii61574'] = 0x202D;\n\t  t['afii61575'] = 0x202E;\n\t  t['afii61664'] = 0x200C;\n\t  t['afii63167'] = 0x066D;\n\t  t['afii64937'] = 0x02BD;\n\t  t['agrave'] = 0x00E0;\n\t  t['agujarati'] = 0x0A85;\n\t  t['agurmukhi'] = 0x0A05;\n\t  t['ahiragana'] = 0x3042;\n\t  t['ahookabove'] = 0x1EA3;\n\t  t['aibengali'] = 0x0990;\n\t  t['aibopomofo'] = 0x311E;\n\t  t['aideva'] = 0x0910;\n\t  t['aiecyrillic'] = 0x04D5;\n\t  t['aigujarati'] = 0x0A90;\n\t  t['aigurmukhi'] = 0x0A10;\n\t  t['aimatragurmukhi'] = 0x0A48;\n\t  t['ainarabic'] = 0x0639;\n\t  t['ainfinalarabic'] = 0xFECA;\n\t  t['aininitialarabic'] = 0xFECB;\n\t  t['ainmedialarabic'] = 0xFECC;\n\t  t['ainvertedbreve'] = 0x0203;\n\t  t['aivowelsignbengali'] = 0x09C8;\n\t  t['aivowelsigndeva'] = 0x0948;\n\t  t['aivowelsigngujarati'] = 0x0AC8;\n\t  t['akatakana'] = 0x30A2;\n\t  t['akatakanahalfwidth'] = 0xFF71;\n\t  t['akorean'] = 0x314F;\n\t  t['alef'] = 0x05D0;\n\t  t['alefarabic'] = 0x0627;\n\t  t['alefdageshhebrew'] = 0xFB30;\n\t  t['aleffinalarabic'] = 0xFE8E;\n\t  t['alefhamzaabovearabic'] = 0x0623;\n\t  t['alefhamzaabovefinalarabic'] = 0xFE84;\n\t  t['alefhamzabelowarabic'] = 0x0625;\n\t  t['alefhamzabelowfinalarabic'] = 0xFE88;\n\t  t['alefhebrew'] = 0x05D0;\n\t  t['aleflamedhebrew'] = 0xFB4F;\n\t  t['alefmaddaabovearabic'] = 0x0622;\n\t  t['alefmaddaabovefinalarabic'] = 0xFE82;\n\t  t['alefmaksuraarabic'] = 0x0649;\n\t  t['alefmaksurafinalarabic'] = 0xFEF0;\n\t  t['alefmaksurainitialarabic'] = 0xFEF3;\n\t  t['alefmaksuramedialarabic'] = 0xFEF4;\n\t  t['alefpatahhebrew'] = 0xFB2E;\n\t  t['alefqamatshebrew'] = 0xFB2F;\n\t  t['aleph'] = 0x2135;\n\t  t['allequal'] = 0x224C;\n\t  t['alpha'] = 0x03B1;\n\t  t['alphatonos'] = 0x03AC;\n\t  t['amacron'] = 0x0101;\n\t  t['amonospace'] = 0xFF41;\n\t  t['ampersand'] = 0x0026;\n\t  t['ampersandmonospace'] = 0xFF06;\n\t  t['ampersandsmall'] = 0xF726;\n\t  t['amsquare'] = 0x33C2;\n\t  t['anbopomofo'] = 0x3122;\n\t  t['angbopomofo'] = 0x3124;\n\t  t['angbracketleft'] = 0x3008;\n\t  t['angbracketright'] = 0x3009;\n\t  t['angkhankhuthai'] = 0x0E5A;\n\t  t['angle'] = 0x2220;\n\t  t['anglebracketleft'] = 0x3008;\n\t  t['anglebracketleftvertical'] = 0xFE3F;\n\t  t['anglebracketright'] = 0x3009;\n\t  t['anglebracketrightvertical'] = 0xFE40;\n\t  t['angleleft'] = 0x2329;\n\t  t['angleright'] = 0x232A;\n\t  t['angstrom'] = 0x212B;\n\t  t['anoteleia'] = 0x0387;\n\t  t['anudattadeva'] = 0x0952;\n\t  t['anusvarabengali'] = 0x0982;\n\t  t['anusvaradeva'] = 0x0902;\n\t  t['anusvaragujarati'] = 0x0A82;\n\t  t['aogonek'] = 0x0105;\n\t  t['apaatosquare'] = 0x3300;\n\t  t['aparen'] = 0x249C;\n\t  t['apostrophearmenian'] = 0x055A;\n\t  t['apostrophemod'] = 0x02BC;\n\t  t['apple'] = 0xF8FF;\n\t  t['approaches'] = 0x2250;\n\t  t['approxequal'] = 0x2248;\n\t  t['approxequalorimage'] = 0x2252;\n\t  t['approximatelyequal'] = 0x2245;\n\t  t['araeaekorean'] = 0x318E;\n\t  t['araeakorean'] = 0x318D;\n\t  t['arc'] = 0x2312;\n\t  t['arighthalfring'] = 0x1E9A;\n\t  t['aring'] = 0x00E5;\n\t  t['aringacute'] = 0x01FB;\n\t  t['aringbelow'] = 0x1E01;\n\t  t['arrowboth'] = 0x2194;\n\t  t['arrowdashdown'] = 0x21E3;\n\t  t['arrowdashleft'] = 0x21E0;\n\t  t['arrowdashright'] = 0x21E2;\n\t  t['arrowdashup'] = 0x21E1;\n\t  t['arrowdblboth'] = 0x21D4;\n\t  t['arrowdbldown'] = 0x21D3;\n\t  t['arrowdblleft'] = 0x21D0;\n\t  t['arrowdblright'] = 0x21D2;\n\t  t['arrowdblup'] = 0x21D1;\n\t  t['arrowdown'] = 0x2193;\n\t  t['arrowdownleft'] = 0x2199;\n\t  t['arrowdownright'] = 0x2198;\n\t  t['arrowdownwhite'] = 0x21E9;\n\t  t['arrowheaddownmod'] = 0x02C5;\n\t  t['arrowheadleftmod'] = 0x02C2;\n\t  t['arrowheadrightmod'] = 0x02C3;\n\t  t['arrowheadupmod'] = 0x02C4;\n\t  t['arrowhorizex'] = 0xF8E7;\n\t  t['arrowleft'] = 0x2190;\n\t  t['arrowleftdbl'] = 0x21D0;\n\t  t['arrowleftdblstroke'] = 0x21CD;\n\t  t['arrowleftoverright'] = 0x21C6;\n\t  t['arrowleftwhite'] = 0x21E6;\n\t  t['arrowright'] = 0x2192;\n\t  t['arrowrightdblstroke'] = 0x21CF;\n\t  t['arrowrightheavy'] = 0x279E;\n\t  t['arrowrightoverleft'] = 0x21C4;\n\t  t['arrowrightwhite'] = 0x21E8;\n\t  t['arrowtableft'] = 0x21E4;\n\t  t['arrowtabright'] = 0x21E5;\n\t  t['arrowup'] = 0x2191;\n\t  t['arrowupdn'] = 0x2195;\n\t  t['arrowupdnbse'] = 0x21A8;\n\t  t['arrowupdownbase'] = 0x21A8;\n\t  t['arrowupleft'] = 0x2196;\n\t  t['arrowupleftofdown'] = 0x21C5;\n\t  t['arrowupright'] = 0x2197;\n\t  t['arrowupwhite'] = 0x21E7;\n\t  t['arrowvertex'] = 0xF8E6;\n\t  t['asciicircum'] = 0x005E;\n\t  t['asciicircummonospace'] = 0xFF3E;\n\t  t['asciitilde'] = 0x007E;\n\t  t['asciitildemonospace'] = 0xFF5E;\n\t  t['ascript'] = 0x0251;\n\t  t['ascriptturned'] = 0x0252;\n\t  t['asmallhiragana'] = 0x3041;\n\t  t['asmallkatakana'] = 0x30A1;\n\t  t['asmallkatakanahalfwidth'] = 0xFF67;\n\t  t['asterisk'] = 0x002A;\n\t  t['asteriskaltonearabic'] = 0x066D;\n\t  t['asteriskarabic'] = 0x066D;\n\t  t['asteriskmath'] = 0x2217;\n\t  t['asteriskmonospace'] = 0xFF0A;\n\t  t['asterisksmall'] = 0xFE61;\n\t  t['asterism'] = 0x2042;\n\t  t['asuperior'] = 0xF6E9;\n\t  t['asymptoticallyequal'] = 0x2243;\n\t  t['at'] = 0x0040;\n\t  t['atilde'] = 0x00E3;\n\t  t['atmonospace'] = 0xFF20;\n\t  t['atsmall'] = 0xFE6B;\n\t  t['aturned'] = 0x0250;\n\t  t['aubengali'] = 0x0994;\n\t  t['aubopomofo'] = 0x3120;\n\t  t['audeva'] = 0x0914;\n\t  t['augujarati'] = 0x0A94;\n\t  t['augurmukhi'] = 0x0A14;\n\t  t['aulengthmarkbengali'] = 0x09D7;\n\t  t['aumatragurmukhi'] = 0x0A4C;\n\t  t['auvowelsignbengali'] = 0x09CC;\n\t  t['auvowelsigndeva'] = 0x094C;\n\t  t['auvowelsigngujarati'] = 0x0ACC;\n\t  t['avagrahadeva'] = 0x093D;\n\t  t['aybarmenian'] = 0x0561;\n\t  t['ayin'] = 0x05E2;\n\t  t['ayinaltonehebrew'] = 0xFB20;\n\t  t['ayinhebrew'] = 0x05E2;\n\t  t['b'] = 0x0062;\n\t  t['babengali'] = 0x09AC;\n\t  t['backslash'] = 0x005C;\n\t  t['backslashmonospace'] = 0xFF3C;\n\t  t['badeva'] = 0x092C;\n\t  t['bagujarati'] = 0x0AAC;\n\t  t['bagurmukhi'] = 0x0A2C;\n\t  t['bahiragana'] = 0x3070;\n\t  t['bahtthai'] = 0x0E3F;\n\t  t['bakatakana'] = 0x30D0;\n\t  t['bar'] = 0x007C;\n\t  t['barmonospace'] = 0xFF5C;\n\t  t['bbopomofo'] = 0x3105;\n\t  t['bcircle'] = 0x24D1;\n\t  t['bdotaccent'] = 0x1E03;\n\t  t['bdotbelow'] = 0x1E05;\n\t  t['beamedsixteenthnotes'] = 0x266C;\n\t  t['because'] = 0x2235;\n\t  t['becyrillic'] = 0x0431;\n\t  t['beharabic'] = 0x0628;\n\t  t['behfinalarabic'] = 0xFE90;\n\t  t['behinitialarabic'] = 0xFE91;\n\t  t['behiragana'] = 0x3079;\n\t  t['behmedialarabic'] = 0xFE92;\n\t  t['behmeeminitialarabic'] = 0xFC9F;\n\t  t['behmeemisolatedarabic'] = 0xFC08;\n\t  t['behnoonfinalarabic'] = 0xFC6D;\n\t  t['bekatakana'] = 0x30D9;\n\t  t['benarmenian'] = 0x0562;\n\t  t['bet'] = 0x05D1;\n\t  t['beta'] = 0x03B2;\n\t  t['betasymbolgreek'] = 0x03D0;\n\t  t['betdagesh'] = 0xFB31;\n\t  t['betdageshhebrew'] = 0xFB31;\n\t  t['bethebrew'] = 0x05D1;\n\t  t['betrafehebrew'] = 0xFB4C;\n\t  t['bhabengali'] = 0x09AD;\n\t  t['bhadeva'] = 0x092D;\n\t  t['bhagujarati'] = 0x0AAD;\n\t  t['bhagurmukhi'] = 0x0A2D;\n\t  t['bhook'] = 0x0253;\n\t  t['bihiragana'] = 0x3073;\n\t  t['bikatakana'] = 0x30D3;\n\t  t['bilabialclick'] = 0x0298;\n\t  t['bindigurmukhi'] = 0x0A02;\n\t  t['birusquare'] = 0x3331;\n\t  t['blackcircle'] = 0x25CF;\n\t  t['blackdiamond'] = 0x25C6;\n\t  t['blackdownpointingtriangle'] = 0x25BC;\n\t  t['blackleftpointingpointer'] = 0x25C4;\n\t  t['blackleftpointingtriangle'] = 0x25C0;\n\t  t['blacklenticularbracketleft'] = 0x3010;\n\t  t['blacklenticularbracketleftvertical'] = 0xFE3B;\n\t  t['blacklenticularbracketright'] = 0x3011;\n\t  t['blacklenticularbracketrightvertical'] = 0xFE3C;\n\t  t['blacklowerlefttriangle'] = 0x25E3;\n\t  t['blacklowerrighttriangle'] = 0x25E2;\n\t  t['blackrectangle'] = 0x25AC;\n\t  t['blackrightpointingpointer'] = 0x25BA;\n\t  t['blackrightpointingtriangle'] = 0x25B6;\n\t  t['blacksmallsquare'] = 0x25AA;\n\t  t['blacksmilingface'] = 0x263B;\n\t  t['blacksquare'] = 0x25A0;\n\t  t['blackstar'] = 0x2605;\n\t  t['blackupperlefttriangle'] = 0x25E4;\n\t  t['blackupperrighttriangle'] = 0x25E5;\n\t  t['blackuppointingsmalltriangle'] = 0x25B4;\n\t  t['blackuppointingtriangle'] = 0x25B2;\n\t  t['blank'] = 0x2423;\n\t  t['blinebelow'] = 0x1E07;\n\t  t['block'] = 0x2588;\n\t  t['bmonospace'] = 0xFF42;\n\t  t['bobaimaithai'] = 0x0E1A;\n\t  t['bohiragana'] = 0x307C;\n\t  t['bokatakana'] = 0x30DC;\n\t  t['bparen'] = 0x249D;\n\t  t['bqsquare'] = 0x33C3;\n\t  t['braceex'] = 0xF8F4;\n\t  t['braceleft'] = 0x007B;\n\t  t['braceleftbt'] = 0xF8F3;\n\t  t['braceleftmid'] = 0xF8F2;\n\t  t['braceleftmonospace'] = 0xFF5B;\n\t  t['braceleftsmall'] = 0xFE5B;\n\t  t['bracelefttp'] = 0xF8F1;\n\t  t['braceleftvertical'] = 0xFE37;\n\t  t['braceright'] = 0x007D;\n\t  t['bracerightbt'] = 0xF8FE;\n\t  t['bracerightmid'] = 0xF8FD;\n\t  t['bracerightmonospace'] = 0xFF5D;\n\t  t['bracerightsmall'] = 0xFE5C;\n\t  t['bracerighttp'] = 0xF8FC;\n\t  t['bracerightvertical'] = 0xFE38;\n\t  t['bracketleft'] = 0x005B;\n\t  t['bracketleftbt'] = 0xF8F0;\n\t  t['bracketleftex'] = 0xF8EF;\n\t  t['bracketleftmonospace'] = 0xFF3B;\n\t  t['bracketlefttp'] = 0xF8EE;\n\t  t['bracketright'] = 0x005D;\n\t  t['bracketrightbt'] = 0xF8FB;\n\t  t['bracketrightex'] = 0xF8FA;\n\t  t['bracketrightmonospace'] = 0xFF3D;\n\t  t['bracketrighttp'] = 0xF8F9;\n\t  t['breve'] = 0x02D8;\n\t  t['brevebelowcmb'] = 0x032E;\n\t  t['brevecmb'] = 0x0306;\n\t  t['breveinvertedbelowcmb'] = 0x032F;\n\t  t['breveinvertedcmb'] = 0x0311;\n\t  t['breveinverteddoublecmb'] = 0x0361;\n\t  t['bridgebelowcmb'] = 0x032A;\n\t  t['bridgeinvertedbelowcmb'] = 0x033A;\n\t  t['brokenbar'] = 0x00A6;\n\t  t['bstroke'] = 0x0180;\n\t  t['bsuperior'] = 0xF6EA;\n\t  t['btopbar'] = 0x0183;\n\t  t['buhiragana'] = 0x3076;\n\t  t['bukatakana'] = 0x30D6;\n\t  t['bullet'] = 0x2022;\n\t  t['bulletinverse'] = 0x25D8;\n\t  t['bulletoperator'] = 0x2219;\n\t  t['bullseye'] = 0x25CE;\n\t  t['c'] = 0x0063;\n\t  t['caarmenian'] = 0x056E;\n\t  t['cabengali'] = 0x099A;\n\t  t['cacute'] = 0x0107;\n\t  t['cadeva'] = 0x091A;\n\t  t['cagujarati'] = 0x0A9A;\n\t  t['cagurmukhi'] = 0x0A1A;\n\t  t['calsquare'] = 0x3388;\n\t  t['candrabindubengali'] = 0x0981;\n\t  t['candrabinducmb'] = 0x0310;\n\t  t['candrabindudeva'] = 0x0901;\n\t  t['candrabindugujarati'] = 0x0A81;\n\t  t['capslock'] = 0x21EA;\n\t  t['careof'] = 0x2105;\n\t  t['caron'] = 0x02C7;\n\t  t['caronbelowcmb'] = 0x032C;\n\t  t['caroncmb'] = 0x030C;\n\t  t['carriagereturn'] = 0x21B5;\n\t  t['cbopomofo'] = 0x3118;\n\t  t['ccaron'] = 0x010D;\n\t  t['ccedilla'] = 0x00E7;\n\t  t['ccedillaacute'] = 0x1E09;\n\t  t['ccircle'] = 0x24D2;\n\t  t['ccircumflex'] = 0x0109;\n\t  t['ccurl'] = 0x0255;\n\t  t['cdot'] = 0x010B;\n\t  t['cdotaccent'] = 0x010B;\n\t  t['cdsquare'] = 0x33C5;\n\t  t['cedilla'] = 0x00B8;\n\t  t['cedillacmb'] = 0x0327;\n\t  t['cent'] = 0x00A2;\n\t  t['centigrade'] = 0x2103;\n\t  t['centinferior'] = 0xF6DF;\n\t  t['centmonospace'] = 0xFFE0;\n\t  t['centoldstyle'] = 0xF7A2;\n\t  t['centsuperior'] = 0xF6E0;\n\t  t['chaarmenian'] = 0x0579;\n\t  t['chabengali'] = 0x099B;\n\t  t['chadeva'] = 0x091B;\n\t  t['chagujarati'] = 0x0A9B;\n\t  t['chagurmukhi'] = 0x0A1B;\n\t  t['chbopomofo'] = 0x3114;\n\t  t['cheabkhasiancyrillic'] = 0x04BD;\n\t  t['checkmark'] = 0x2713;\n\t  t['checyrillic'] = 0x0447;\n\t  t['chedescenderabkhasiancyrillic'] = 0x04BF;\n\t  t['chedescendercyrillic'] = 0x04B7;\n\t  t['chedieresiscyrillic'] = 0x04F5;\n\t  t['cheharmenian'] = 0x0573;\n\t  t['chekhakassiancyrillic'] = 0x04CC;\n\t  t['cheverticalstrokecyrillic'] = 0x04B9;\n\t  t['chi'] = 0x03C7;\n\t  t['chieuchacirclekorean'] = 0x3277;\n\t  t['chieuchaparenkorean'] = 0x3217;\n\t  t['chieuchcirclekorean'] = 0x3269;\n\t  t['chieuchkorean'] = 0x314A;\n\t  t['chieuchparenkorean'] = 0x3209;\n\t  t['chochangthai'] = 0x0E0A;\n\t  t['chochanthai'] = 0x0E08;\n\t  t['chochingthai'] = 0x0E09;\n\t  t['chochoethai'] = 0x0E0C;\n\t  t['chook'] = 0x0188;\n\t  t['cieucacirclekorean'] = 0x3276;\n\t  t['cieucaparenkorean'] = 0x3216;\n\t  t['cieuccirclekorean'] = 0x3268;\n\t  t['cieuckorean'] = 0x3148;\n\t  t['cieucparenkorean'] = 0x3208;\n\t  t['cieucuparenkorean'] = 0x321C;\n\t  t['circle'] = 0x25CB;\n\t  t['circlecopyrt'] = 0x00A9;\n\t  t['circlemultiply'] = 0x2297;\n\t  t['circleot'] = 0x2299;\n\t  t['circleplus'] = 0x2295;\n\t  t['circlepostalmark'] = 0x3036;\n\t  t['circlewithlefthalfblack'] = 0x25D0;\n\t  t['circlewithrighthalfblack'] = 0x25D1;\n\t  t['circumflex'] = 0x02C6;\n\t  t['circumflexbelowcmb'] = 0x032D;\n\t  t['circumflexcmb'] = 0x0302;\n\t  t['clear'] = 0x2327;\n\t  t['clickalveolar'] = 0x01C2;\n\t  t['clickdental'] = 0x01C0;\n\t  t['clicklateral'] = 0x01C1;\n\t  t['clickretroflex'] = 0x01C3;\n\t  t['club'] = 0x2663;\n\t  t['clubsuitblack'] = 0x2663;\n\t  t['clubsuitwhite'] = 0x2667;\n\t  t['cmcubedsquare'] = 0x33A4;\n\t  t['cmonospace'] = 0xFF43;\n\t  t['cmsquaredsquare'] = 0x33A0;\n\t  t['coarmenian'] = 0x0581;\n\t  t['colon'] = 0x003A;\n\t  t['colonmonetary'] = 0x20A1;\n\t  t['colonmonospace'] = 0xFF1A;\n\t  t['colonsign'] = 0x20A1;\n\t  t['colonsmall'] = 0xFE55;\n\t  t['colontriangularhalfmod'] = 0x02D1;\n\t  t['colontriangularmod'] = 0x02D0;\n\t  t['comma'] = 0x002C;\n\t  t['commaabovecmb'] = 0x0313;\n\t  t['commaaboverightcmb'] = 0x0315;\n\t  t['commaaccent'] = 0xF6C3;\n\t  t['commaarabic'] = 0x060C;\n\t  t['commaarmenian'] = 0x055D;\n\t  t['commainferior'] = 0xF6E1;\n\t  t['commamonospace'] = 0xFF0C;\n\t  t['commareversedabovecmb'] = 0x0314;\n\t  t['commareversedmod'] = 0x02BD;\n\t  t['commasmall'] = 0xFE50;\n\t  t['commasuperior'] = 0xF6E2;\n\t  t['commaturnedabovecmb'] = 0x0312;\n\t  t['commaturnedmod'] = 0x02BB;\n\t  t['compass'] = 0x263C;\n\t  t['congruent'] = 0x2245;\n\t  t['contourintegral'] = 0x222E;\n\t  t['control'] = 0x2303;\n\t  t['controlACK'] = 0x0006;\n\t  t['controlBEL'] = 0x0007;\n\t  t['controlBS'] = 0x0008;\n\t  t['controlCAN'] = 0x0018;\n\t  t['controlCR'] = 0x000D;\n\t  t['controlDC1'] = 0x0011;\n\t  t['controlDC2'] = 0x0012;\n\t  t['controlDC3'] = 0x0013;\n\t  t['controlDC4'] = 0x0014;\n\t  t['controlDEL'] = 0x007F;\n\t  t['controlDLE'] = 0x0010;\n\t  t['controlEM'] = 0x0019;\n\t  t['controlENQ'] = 0x0005;\n\t  t['controlEOT'] = 0x0004;\n\t  t['controlESC'] = 0x001B;\n\t  t['controlETB'] = 0x0017;\n\t  t['controlETX'] = 0x0003;\n\t  t['controlFF'] = 0x000C;\n\t  t['controlFS'] = 0x001C;\n\t  t['controlGS'] = 0x001D;\n\t  t['controlHT'] = 0x0009;\n\t  t['controlLF'] = 0x000A;\n\t  t['controlNAK'] = 0x0015;\n\t  t['controlNULL'] = 0x0000;\n\t  t['controlRS'] = 0x001E;\n\t  t['controlSI'] = 0x000F;\n\t  t['controlSO'] = 0x000E;\n\t  t['controlSOT'] = 0x0002;\n\t  t['controlSTX'] = 0x0001;\n\t  t['controlSUB'] = 0x001A;\n\t  t['controlSYN'] = 0x0016;\n\t  t['controlUS'] = 0x001F;\n\t  t['controlVT'] = 0x000B;\n\t  t['copyright'] = 0x00A9;\n\t  t['copyrightsans'] = 0xF8E9;\n\t  t['copyrightserif'] = 0xF6D9;\n\t  t['cornerbracketleft'] = 0x300C;\n\t  t['cornerbracketlefthalfwidth'] = 0xFF62;\n\t  t['cornerbracketleftvertical'] = 0xFE41;\n\t  t['cornerbracketright'] = 0x300D;\n\t  t['cornerbracketrighthalfwidth'] = 0xFF63;\n\t  t['cornerbracketrightvertical'] = 0xFE42;\n\t  t['corporationsquare'] = 0x337F;\n\t  t['cosquare'] = 0x33C7;\n\t  t['coverkgsquare'] = 0x33C6;\n\t  t['cparen'] = 0x249E;\n\t  t['cruzeiro'] = 0x20A2;\n\t  t['cstretched'] = 0x0297;\n\t  t['curlyand'] = 0x22CF;\n\t  t['curlyor'] = 0x22CE;\n\t  t['currency'] = 0x00A4;\n\t  t['cyrBreve'] = 0xF6D1;\n\t  t['cyrFlex'] = 0xF6D2;\n\t  t['cyrbreve'] = 0xF6D4;\n\t  t['cyrflex'] = 0xF6D5;\n\t  t['d'] = 0x0064;\n\t  t['daarmenian'] = 0x0564;\n\t  t['dabengali'] = 0x09A6;\n\t  t['dadarabic'] = 0x0636;\n\t  t['dadeva'] = 0x0926;\n\t  t['dadfinalarabic'] = 0xFEBE;\n\t  t['dadinitialarabic'] = 0xFEBF;\n\t  t['dadmedialarabic'] = 0xFEC0;\n\t  t['dagesh'] = 0x05BC;\n\t  t['dageshhebrew'] = 0x05BC;\n\t  t['dagger'] = 0x2020;\n\t  t['daggerdbl'] = 0x2021;\n\t  t['dagujarati'] = 0x0AA6;\n\t  t['dagurmukhi'] = 0x0A26;\n\t  t['dahiragana'] = 0x3060;\n\t  t['dakatakana'] = 0x30C0;\n\t  t['dalarabic'] = 0x062F;\n\t  t['dalet'] = 0x05D3;\n\t  t['daletdagesh'] = 0xFB33;\n\t  t['daletdageshhebrew'] = 0xFB33;\n\t  t['dalethebrew'] = 0x05D3;\n\t  t['dalfinalarabic'] = 0xFEAA;\n\t  t['dammaarabic'] = 0x064F;\n\t  t['dammalowarabic'] = 0x064F;\n\t  t['dammatanaltonearabic'] = 0x064C;\n\t  t['dammatanarabic'] = 0x064C;\n\t  t['danda'] = 0x0964;\n\t  t['dargahebrew'] = 0x05A7;\n\t  t['dargalefthebrew'] = 0x05A7;\n\t  t['dasiapneumatacyrilliccmb'] = 0x0485;\n\t  t['dblGrave'] = 0xF6D3;\n\t  t['dblanglebracketleft'] = 0x300A;\n\t  t['dblanglebracketleftvertical'] = 0xFE3D;\n\t  t['dblanglebracketright'] = 0x300B;\n\t  t['dblanglebracketrightvertical'] = 0xFE3E;\n\t  t['dblarchinvertedbelowcmb'] = 0x032B;\n\t  t['dblarrowleft'] = 0x21D4;\n\t  t['dblarrowright'] = 0x21D2;\n\t  t['dbldanda'] = 0x0965;\n\t  t['dblgrave'] = 0xF6D6;\n\t  t['dblgravecmb'] = 0x030F;\n\t  t['dblintegral'] = 0x222C;\n\t  t['dbllowline'] = 0x2017;\n\t  t['dbllowlinecmb'] = 0x0333;\n\t  t['dbloverlinecmb'] = 0x033F;\n\t  t['dblprimemod'] = 0x02BA;\n\t  t['dblverticalbar'] = 0x2016;\n\t  t['dblverticallineabovecmb'] = 0x030E;\n\t  t['dbopomofo'] = 0x3109;\n\t  t['dbsquare'] = 0x33C8;\n\t  t['dcaron'] = 0x010F;\n\t  t['dcedilla'] = 0x1E11;\n\t  t['dcircle'] = 0x24D3;\n\t  t['dcircumflexbelow'] = 0x1E13;\n\t  t['dcroat'] = 0x0111;\n\t  t['ddabengali'] = 0x09A1;\n\t  t['ddadeva'] = 0x0921;\n\t  t['ddagujarati'] = 0x0AA1;\n\t  t['ddagurmukhi'] = 0x0A21;\n\t  t['ddalarabic'] = 0x0688;\n\t  t['ddalfinalarabic'] = 0xFB89;\n\t  t['dddhadeva'] = 0x095C;\n\t  t['ddhabengali'] = 0x09A2;\n\t  t['ddhadeva'] = 0x0922;\n\t  t['ddhagujarati'] = 0x0AA2;\n\t  t['ddhagurmukhi'] = 0x0A22;\n\t  t['ddotaccent'] = 0x1E0B;\n\t  t['ddotbelow'] = 0x1E0D;\n\t  t['decimalseparatorarabic'] = 0x066B;\n\t  t['decimalseparatorpersian'] = 0x066B;\n\t  t['decyrillic'] = 0x0434;\n\t  t['degree'] = 0x00B0;\n\t  t['dehihebrew'] = 0x05AD;\n\t  t['dehiragana'] = 0x3067;\n\t  t['deicoptic'] = 0x03EF;\n\t  t['dekatakana'] = 0x30C7;\n\t  t['deleteleft'] = 0x232B;\n\t  t['deleteright'] = 0x2326;\n\t  t['delta'] = 0x03B4;\n\t  t['deltaturned'] = 0x018D;\n\t  t['denominatorminusonenumeratorbengali'] = 0x09F8;\n\t  t['dezh'] = 0x02A4;\n\t  t['dhabengali'] = 0x09A7;\n\t  t['dhadeva'] = 0x0927;\n\t  t['dhagujarati'] = 0x0AA7;\n\t  t['dhagurmukhi'] = 0x0A27;\n\t  t['dhook'] = 0x0257;\n\t  t['dialytikatonos'] = 0x0385;\n\t  t['dialytikatonoscmb'] = 0x0344;\n\t  t['diamond'] = 0x2666;\n\t  t['diamondsuitwhite'] = 0x2662;\n\t  t['dieresis'] = 0x00A8;\n\t  t['dieresisacute'] = 0xF6D7;\n\t  t['dieresisbelowcmb'] = 0x0324;\n\t  t['dieresiscmb'] = 0x0308;\n\t  t['dieresisgrave'] = 0xF6D8;\n\t  t['dieresistonos'] = 0x0385;\n\t  t['dihiragana'] = 0x3062;\n\t  t['dikatakana'] = 0x30C2;\n\t  t['dittomark'] = 0x3003;\n\t  t['divide'] = 0x00F7;\n\t  t['divides'] = 0x2223;\n\t  t['divisionslash'] = 0x2215;\n\t  t['djecyrillic'] = 0x0452;\n\t  t['dkshade'] = 0x2593;\n\t  t['dlinebelow'] = 0x1E0F;\n\t  t['dlsquare'] = 0x3397;\n\t  t['dmacron'] = 0x0111;\n\t  t['dmonospace'] = 0xFF44;\n\t  t['dnblock'] = 0x2584;\n\t  t['dochadathai'] = 0x0E0E;\n\t  t['dodekthai'] = 0x0E14;\n\t  t['dohiragana'] = 0x3069;\n\t  t['dokatakana'] = 0x30C9;\n\t  t['dollar'] = 0x0024;\n\t  t['dollarinferior'] = 0xF6E3;\n\t  t['dollarmonospace'] = 0xFF04;\n\t  t['dollaroldstyle'] = 0xF724;\n\t  t['dollarsmall'] = 0xFE69;\n\t  t['dollarsuperior'] = 0xF6E4;\n\t  t['dong'] = 0x20AB;\n\t  t['dorusquare'] = 0x3326;\n\t  t['dotaccent'] = 0x02D9;\n\t  t['dotaccentcmb'] = 0x0307;\n\t  t['dotbelowcmb'] = 0x0323;\n\t  t['dotbelowcomb'] = 0x0323;\n\t  t['dotkatakana'] = 0x30FB;\n\t  t['dotlessi'] = 0x0131;\n\t  t['dotlessj'] = 0xF6BE;\n\t  t['dotlessjstrokehook'] = 0x0284;\n\t  t['dotmath'] = 0x22C5;\n\t  t['dottedcircle'] = 0x25CC;\n\t  t['doubleyodpatah'] = 0xFB1F;\n\t  t['doubleyodpatahhebrew'] = 0xFB1F;\n\t  t['downtackbelowcmb'] = 0x031E;\n\t  t['downtackmod'] = 0x02D5;\n\t  t['dparen'] = 0x249F;\n\t  t['dsuperior'] = 0xF6EB;\n\t  t['dtail'] = 0x0256;\n\t  t['dtopbar'] = 0x018C;\n\t  t['duhiragana'] = 0x3065;\n\t  t['dukatakana'] = 0x30C5;\n\t  t['dz'] = 0x01F3;\n\t  t['dzaltone'] = 0x02A3;\n\t  t['dzcaron'] = 0x01C6;\n\t  t['dzcurl'] = 0x02A5;\n\t  t['dzeabkhasiancyrillic'] = 0x04E1;\n\t  t['dzecyrillic'] = 0x0455;\n\t  t['dzhecyrillic'] = 0x045F;\n\t  t['e'] = 0x0065;\n\t  t['eacute'] = 0x00E9;\n\t  t['earth'] = 0x2641;\n\t  t['ebengali'] = 0x098F;\n\t  t['ebopomofo'] = 0x311C;\n\t  t['ebreve'] = 0x0115;\n\t  t['ecandradeva'] = 0x090D;\n\t  t['ecandragujarati'] = 0x0A8D;\n\t  t['ecandravowelsigndeva'] = 0x0945;\n\t  t['ecandravowelsigngujarati'] = 0x0AC5;\n\t  t['ecaron'] = 0x011B;\n\t  t['ecedillabreve'] = 0x1E1D;\n\t  t['echarmenian'] = 0x0565;\n\t  t['echyiwnarmenian'] = 0x0587;\n\t  t['ecircle'] = 0x24D4;\n\t  t['ecircumflex'] = 0x00EA;\n\t  t['ecircumflexacute'] = 0x1EBF;\n\t  t['ecircumflexbelow'] = 0x1E19;\n\t  t['ecircumflexdotbelow'] = 0x1EC7;\n\t  t['ecircumflexgrave'] = 0x1EC1;\n\t  t['ecircumflexhookabove'] = 0x1EC3;\n\t  t['ecircumflextilde'] = 0x1EC5;\n\t  t['ecyrillic'] = 0x0454;\n\t  t['edblgrave'] = 0x0205;\n\t  t['edeva'] = 0x090F;\n\t  t['edieresis'] = 0x00EB;\n\t  t['edot'] = 0x0117;\n\t  t['edotaccent'] = 0x0117;\n\t  t['edotbelow'] = 0x1EB9;\n\t  t['eegurmukhi'] = 0x0A0F;\n\t  t['eematragurmukhi'] = 0x0A47;\n\t  t['efcyrillic'] = 0x0444;\n\t  t['egrave'] = 0x00E8;\n\t  t['egujarati'] = 0x0A8F;\n\t  t['eharmenian'] = 0x0567;\n\t  t['ehbopomofo'] = 0x311D;\n\t  t['ehiragana'] = 0x3048;\n\t  t['ehookabove'] = 0x1EBB;\n\t  t['eibopomofo'] = 0x311F;\n\t  t['eight'] = 0x0038;\n\t  t['eightarabic'] = 0x0668;\n\t  t['eightbengali'] = 0x09EE;\n\t  t['eightcircle'] = 0x2467;\n\t  t['eightcircleinversesansserif'] = 0x2791;\n\t  t['eightdeva'] = 0x096E;\n\t  t['eighteencircle'] = 0x2471;\n\t  t['eighteenparen'] = 0x2485;\n\t  t['eighteenperiod'] = 0x2499;\n\t  t['eightgujarati'] = 0x0AEE;\n\t  t['eightgurmukhi'] = 0x0A6E;\n\t  t['eighthackarabic'] = 0x0668;\n\t  t['eighthangzhou'] = 0x3028;\n\t  t['eighthnotebeamed'] = 0x266B;\n\t  t['eightideographicparen'] = 0x3227;\n\t  t['eightinferior'] = 0x2088;\n\t  t['eightmonospace'] = 0xFF18;\n\t  t['eightoldstyle'] = 0xF738;\n\t  t['eightparen'] = 0x247B;\n\t  t['eightperiod'] = 0x248F;\n\t  t['eightpersian'] = 0x06F8;\n\t  t['eightroman'] = 0x2177;\n\t  t['eightsuperior'] = 0x2078;\n\t  t['eightthai'] = 0x0E58;\n\t  t['einvertedbreve'] = 0x0207;\n\t  t['eiotifiedcyrillic'] = 0x0465;\n\t  t['ekatakana'] = 0x30A8;\n\t  t['ekatakanahalfwidth'] = 0xFF74;\n\t  t['ekonkargurmukhi'] = 0x0A74;\n\t  t['ekorean'] = 0x3154;\n\t  t['elcyrillic'] = 0x043B;\n\t  t['element'] = 0x2208;\n\t  t['elevencircle'] = 0x246A;\n\t  t['elevenparen'] = 0x247E;\n\t  t['elevenperiod'] = 0x2492;\n\t  t['elevenroman'] = 0x217A;\n\t  t['ellipsis'] = 0x2026;\n\t  t['ellipsisvertical'] = 0x22EE;\n\t  t['emacron'] = 0x0113;\n\t  t['emacronacute'] = 0x1E17;\n\t  t['emacrongrave'] = 0x1E15;\n\t  t['emcyrillic'] = 0x043C;\n\t  t['emdash'] = 0x2014;\n\t  t['emdashvertical'] = 0xFE31;\n\t  t['emonospace'] = 0xFF45;\n\t  t['emphasismarkarmenian'] = 0x055B;\n\t  t['emptyset'] = 0x2205;\n\t  t['enbopomofo'] = 0x3123;\n\t  t['encyrillic'] = 0x043D;\n\t  t['endash'] = 0x2013;\n\t  t['endashvertical'] = 0xFE32;\n\t  t['endescendercyrillic'] = 0x04A3;\n\t  t['eng'] = 0x014B;\n\t  t['engbopomofo'] = 0x3125;\n\t  t['enghecyrillic'] = 0x04A5;\n\t  t['enhookcyrillic'] = 0x04C8;\n\t  t['enspace'] = 0x2002;\n\t  t['eogonek'] = 0x0119;\n\t  t['eokorean'] = 0x3153;\n\t  t['eopen'] = 0x025B;\n\t  t['eopenclosed'] = 0x029A;\n\t  t['eopenreversed'] = 0x025C;\n\t  t['eopenreversedclosed'] = 0x025E;\n\t  t['eopenreversedhook'] = 0x025D;\n\t  t['eparen'] = 0x24A0;\n\t  t['epsilon'] = 0x03B5;\n\t  t['epsilontonos'] = 0x03AD;\n\t  t['equal'] = 0x003D;\n\t  t['equalmonospace'] = 0xFF1D;\n\t  t['equalsmall'] = 0xFE66;\n\t  t['equalsuperior'] = 0x207C;\n\t  t['equivalence'] = 0x2261;\n\t  t['erbopomofo'] = 0x3126;\n\t  t['ercyrillic'] = 0x0440;\n\t  t['ereversed'] = 0x0258;\n\t  t['ereversedcyrillic'] = 0x044D;\n\t  t['escyrillic'] = 0x0441;\n\t  t['esdescendercyrillic'] = 0x04AB;\n\t  t['esh'] = 0x0283;\n\t  t['eshcurl'] = 0x0286;\n\t  t['eshortdeva'] = 0x090E;\n\t  t['eshortvowelsigndeva'] = 0x0946;\n\t  t['eshreversedloop'] = 0x01AA;\n\t  t['eshsquatreversed'] = 0x0285;\n\t  t['esmallhiragana'] = 0x3047;\n\t  t['esmallkatakana'] = 0x30A7;\n\t  t['esmallkatakanahalfwidth'] = 0xFF6A;\n\t  t['estimated'] = 0x212E;\n\t  t['esuperior'] = 0xF6EC;\n\t  t['eta'] = 0x03B7;\n\t  t['etarmenian'] = 0x0568;\n\t  t['etatonos'] = 0x03AE;\n\t  t['eth'] = 0x00F0;\n\t  t['etilde'] = 0x1EBD;\n\t  t['etildebelow'] = 0x1E1B;\n\t  t['etnahtafoukhhebrew'] = 0x0591;\n\t  t['etnahtafoukhlefthebrew'] = 0x0591;\n\t  t['etnahtahebrew'] = 0x0591;\n\t  t['etnahtalefthebrew'] = 0x0591;\n\t  t['eturned'] = 0x01DD;\n\t  t['eukorean'] = 0x3161;\n\t  t['euro'] = 0x20AC;\n\t  t['evowelsignbengali'] = 0x09C7;\n\t  t['evowelsigndeva'] = 0x0947;\n\t  t['evowelsigngujarati'] = 0x0AC7;\n\t  t['exclam'] = 0x0021;\n\t  t['exclamarmenian'] = 0x055C;\n\t  t['exclamdbl'] = 0x203C;\n\t  t['exclamdown'] = 0x00A1;\n\t  t['exclamdownsmall'] = 0xF7A1;\n\t  t['exclammonospace'] = 0xFF01;\n\t  t['exclamsmall'] = 0xF721;\n\t  t['existential'] = 0x2203;\n\t  t['ezh'] = 0x0292;\n\t  t['ezhcaron'] = 0x01EF;\n\t  t['ezhcurl'] = 0x0293;\n\t  t['ezhreversed'] = 0x01B9;\n\t  t['ezhtail'] = 0x01BA;\n\t  t['f'] = 0x0066;\n\t  t['fadeva'] = 0x095E;\n\t  t['fagurmukhi'] = 0x0A5E;\n\t  t['fahrenheit'] = 0x2109;\n\t  t['fathaarabic'] = 0x064E;\n\t  t['fathalowarabic'] = 0x064E;\n\t  t['fathatanarabic'] = 0x064B;\n\t  t['fbopomofo'] = 0x3108;\n\t  t['fcircle'] = 0x24D5;\n\t  t['fdotaccent'] = 0x1E1F;\n\t  t['feharabic'] = 0x0641;\n\t  t['feharmenian'] = 0x0586;\n\t  t['fehfinalarabic'] = 0xFED2;\n\t  t['fehinitialarabic'] = 0xFED3;\n\t  t['fehmedialarabic'] = 0xFED4;\n\t  t['feicoptic'] = 0x03E5;\n\t  t['female'] = 0x2640;\n\t  t['ff'] = 0xFB00;\n\t  t['ffi'] = 0xFB03;\n\t  t['ffl'] = 0xFB04;\n\t  t['fi'] = 0xFB01;\n\t  t['fifteencircle'] = 0x246E;\n\t  t['fifteenparen'] = 0x2482;\n\t  t['fifteenperiod'] = 0x2496;\n\t  t['figuredash'] = 0x2012;\n\t  t['filledbox'] = 0x25A0;\n\t  t['filledrect'] = 0x25AC;\n\t  t['finalkaf'] = 0x05DA;\n\t  t['finalkafdagesh'] = 0xFB3A;\n\t  t['finalkafdageshhebrew'] = 0xFB3A;\n\t  t['finalkafhebrew'] = 0x05DA;\n\t  t['finalmem'] = 0x05DD;\n\t  t['finalmemhebrew'] = 0x05DD;\n\t  t['finalnun'] = 0x05DF;\n\t  t['finalnunhebrew'] = 0x05DF;\n\t  t['finalpe'] = 0x05E3;\n\t  t['finalpehebrew'] = 0x05E3;\n\t  t['finaltsadi'] = 0x05E5;\n\t  t['finaltsadihebrew'] = 0x05E5;\n\t  t['firsttonechinese'] = 0x02C9;\n\t  t['fisheye'] = 0x25C9;\n\t  t['fitacyrillic'] = 0x0473;\n\t  t['five'] = 0x0035;\n\t  t['fivearabic'] = 0x0665;\n\t  t['fivebengali'] = 0x09EB;\n\t  t['fivecircle'] = 0x2464;\n\t  t['fivecircleinversesansserif'] = 0x278E;\n\t  t['fivedeva'] = 0x096B;\n\t  t['fiveeighths'] = 0x215D;\n\t  t['fivegujarati'] = 0x0AEB;\n\t  t['fivegurmukhi'] = 0x0A6B;\n\t  t['fivehackarabic'] = 0x0665;\n\t  t['fivehangzhou'] = 0x3025;\n\t  t['fiveideographicparen'] = 0x3224;\n\t  t['fiveinferior'] = 0x2085;\n\t  t['fivemonospace'] = 0xFF15;\n\t  t['fiveoldstyle'] = 0xF735;\n\t  t['fiveparen'] = 0x2478;\n\t  t['fiveperiod'] = 0x248C;\n\t  t['fivepersian'] = 0x06F5;\n\t  t['fiveroman'] = 0x2174;\n\t  t['fivesuperior'] = 0x2075;\n\t  t['fivethai'] = 0x0E55;\n\t  t['fl'] = 0xFB02;\n\t  t['florin'] = 0x0192;\n\t  t['fmonospace'] = 0xFF46;\n\t  t['fmsquare'] = 0x3399;\n\t  t['fofanthai'] = 0x0E1F;\n\t  t['fofathai'] = 0x0E1D;\n\t  t['fongmanthai'] = 0x0E4F;\n\t  t['forall'] = 0x2200;\n\t  t['four'] = 0x0034;\n\t  t['fourarabic'] = 0x0664;\n\t  t['fourbengali'] = 0x09EA;\n\t  t['fourcircle'] = 0x2463;\n\t  t['fourcircleinversesansserif'] = 0x278D;\n\t  t['fourdeva'] = 0x096A;\n\t  t['fourgujarati'] = 0x0AEA;\n\t  t['fourgurmukhi'] = 0x0A6A;\n\t  t['fourhackarabic'] = 0x0664;\n\t  t['fourhangzhou'] = 0x3024;\n\t  t['fourideographicparen'] = 0x3223;\n\t  t['fourinferior'] = 0x2084;\n\t  t['fourmonospace'] = 0xFF14;\n\t  t['fournumeratorbengali'] = 0x09F7;\n\t  t['fouroldstyle'] = 0xF734;\n\t  t['fourparen'] = 0x2477;\n\t  t['fourperiod'] = 0x248B;\n\t  t['fourpersian'] = 0x06F4;\n\t  t['fourroman'] = 0x2173;\n\t  t['foursuperior'] = 0x2074;\n\t  t['fourteencircle'] = 0x246D;\n\t  t['fourteenparen'] = 0x2481;\n\t  t['fourteenperiod'] = 0x2495;\n\t  t['fourthai'] = 0x0E54;\n\t  t['fourthtonechinese'] = 0x02CB;\n\t  t['fparen'] = 0x24A1;\n\t  t['fraction'] = 0x2044;\n\t  t['franc'] = 0x20A3;\n\t  t['g'] = 0x0067;\n\t  t['gabengali'] = 0x0997;\n\t  t['gacute'] = 0x01F5;\n\t  t['gadeva'] = 0x0917;\n\t  t['gafarabic'] = 0x06AF;\n\t  t['gaffinalarabic'] = 0xFB93;\n\t  t['gafinitialarabic'] = 0xFB94;\n\t  t['gafmedialarabic'] = 0xFB95;\n\t  t['gagujarati'] = 0x0A97;\n\t  t['gagurmukhi'] = 0x0A17;\n\t  t['gahiragana'] = 0x304C;\n\t  t['gakatakana'] = 0x30AC;\n\t  t['gamma'] = 0x03B3;\n\t  t['gammalatinsmall'] = 0x0263;\n\t  t['gammasuperior'] = 0x02E0;\n\t  t['gangiacoptic'] = 0x03EB;\n\t  t['gbopomofo'] = 0x310D;\n\t  t['gbreve'] = 0x011F;\n\t  t['gcaron'] = 0x01E7;\n\t  t['gcedilla'] = 0x0123;\n\t  t['gcircle'] = 0x24D6;\n\t  t['gcircumflex'] = 0x011D;\n\t  t['gcommaaccent'] = 0x0123;\n\t  t['gdot'] = 0x0121;\n\t  t['gdotaccent'] = 0x0121;\n\t  t['gecyrillic'] = 0x0433;\n\t  t['gehiragana'] = 0x3052;\n\t  t['gekatakana'] = 0x30B2;\n\t  t['geometricallyequal'] = 0x2251;\n\t  t['gereshaccenthebrew'] = 0x059C;\n\t  t['gereshhebrew'] = 0x05F3;\n\t  t['gereshmuqdamhebrew'] = 0x059D;\n\t  t['germandbls'] = 0x00DF;\n\t  t['gershayimaccenthebrew'] = 0x059E;\n\t  t['gershayimhebrew'] = 0x05F4;\n\t  t['getamark'] = 0x3013;\n\t  t['ghabengali'] = 0x0998;\n\t  t['ghadarmenian'] = 0x0572;\n\t  t['ghadeva'] = 0x0918;\n\t  t['ghagujarati'] = 0x0A98;\n\t  t['ghagurmukhi'] = 0x0A18;\n\t  t['ghainarabic'] = 0x063A;\n\t  t['ghainfinalarabic'] = 0xFECE;\n\t  t['ghaininitialarabic'] = 0xFECF;\n\t  t['ghainmedialarabic'] = 0xFED0;\n\t  t['ghemiddlehookcyrillic'] = 0x0495;\n\t  t['ghestrokecyrillic'] = 0x0493;\n\t  t['gheupturncyrillic'] = 0x0491;\n\t  t['ghhadeva'] = 0x095A;\n\t  t['ghhagurmukhi'] = 0x0A5A;\n\t  t['ghook'] = 0x0260;\n\t  t['ghzsquare'] = 0x3393;\n\t  t['gihiragana'] = 0x304E;\n\t  t['gikatakana'] = 0x30AE;\n\t  t['gimarmenian'] = 0x0563;\n\t  t['gimel'] = 0x05D2;\n\t  t['gimeldagesh'] = 0xFB32;\n\t  t['gimeldageshhebrew'] = 0xFB32;\n\t  t['gimelhebrew'] = 0x05D2;\n\t  t['gjecyrillic'] = 0x0453;\n\t  t['glottalinvertedstroke'] = 0x01BE;\n\t  t['glottalstop'] = 0x0294;\n\t  t['glottalstopinverted'] = 0x0296;\n\t  t['glottalstopmod'] = 0x02C0;\n\t  t['glottalstopreversed'] = 0x0295;\n\t  t['glottalstopreversedmod'] = 0x02C1;\n\t  t['glottalstopreversedsuperior'] = 0x02E4;\n\t  t['glottalstopstroke'] = 0x02A1;\n\t  t['glottalstopstrokereversed'] = 0x02A2;\n\t  t['gmacron'] = 0x1E21;\n\t  t['gmonospace'] = 0xFF47;\n\t  t['gohiragana'] = 0x3054;\n\t  t['gokatakana'] = 0x30B4;\n\t  t['gparen'] = 0x24A2;\n\t  t['gpasquare'] = 0x33AC;\n\t  t['gradient'] = 0x2207;\n\t  t['grave'] = 0x0060;\n\t  t['gravebelowcmb'] = 0x0316;\n\t  t['gravecmb'] = 0x0300;\n\t  t['gravecomb'] = 0x0300;\n\t  t['gravedeva'] = 0x0953;\n\t  t['gravelowmod'] = 0x02CE;\n\t  t['gravemonospace'] = 0xFF40;\n\t  t['gravetonecmb'] = 0x0340;\n\t  t['greater'] = 0x003E;\n\t  t['greaterequal'] = 0x2265;\n\t  t['greaterequalorless'] = 0x22DB;\n\t  t['greatermonospace'] = 0xFF1E;\n\t  t['greaterorequivalent'] = 0x2273;\n\t  t['greaterorless'] = 0x2277;\n\t  t['greateroverequal'] = 0x2267;\n\t  t['greatersmall'] = 0xFE65;\n\t  t['gscript'] = 0x0261;\n\t  t['gstroke'] = 0x01E5;\n\t  t['guhiragana'] = 0x3050;\n\t  t['guillemotleft'] = 0x00AB;\n\t  t['guillemotright'] = 0x00BB;\n\t  t['guilsinglleft'] = 0x2039;\n\t  t['guilsinglright'] = 0x203A;\n\t  t['gukatakana'] = 0x30B0;\n\t  t['guramusquare'] = 0x3318;\n\t  t['gysquare'] = 0x33C9;\n\t  t['h'] = 0x0068;\n\t  t['haabkhasiancyrillic'] = 0x04A9;\n\t  t['haaltonearabic'] = 0x06C1;\n\t  t['habengali'] = 0x09B9;\n\t  t['hadescendercyrillic'] = 0x04B3;\n\t  t['hadeva'] = 0x0939;\n\t  t['hagujarati'] = 0x0AB9;\n\t  t['hagurmukhi'] = 0x0A39;\n\t  t['haharabic'] = 0x062D;\n\t  t['hahfinalarabic'] = 0xFEA2;\n\t  t['hahinitialarabic'] = 0xFEA3;\n\t  t['hahiragana'] = 0x306F;\n\t  t['hahmedialarabic'] = 0xFEA4;\n\t  t['haitusquare'] = 0x332A;\n\t  t['hakatakana'] = 0x30CF;\n\t  t['hakatakanahalfwidth'] = 0xFF8A;\n\t  t['halantgurmukhi'] = 0x0A4D;\n\t  t['hamzaarabic'] = 0x0621;\n\t  t['hamzalowarabic'] = 0x0621;\n\t  t['hangulfiller'] = 0x3164;\n\t  t['hardsigncyrillic'] = 0x044A;\n\t  t['harpoonleftbarbup'] = 0x21BC;\n\t  t['harpoonrightbarbup'] = 0x21C0;\n\t  t['hasquare'] = 0x33CA;\n\t  t['hatafpatah'] = 0x05B2;\n\t  t['hatafpatah16'] = 0x05B2;\n\t  t['hatafpatah23'] = 0x05B2;\n\t  t['hatafpatah2f'] = 0x05B2;\n\t  t['hatafpatahhebrew'] = 0x05B2;\n\t  t['hatafpatahnarrowhebrew'] = 0x05B2;\n\t  t['hatafpatahquarterhebrew'] = 0x05B2;\n\t  t['hatafpatahwidehebrew'] = 0x05B2;\n\t  t['hatafqamats'] = 0x05B3;\n\t  t['hatafqamats1b'] = 0x05B3;\n\t  t['hatafqamats28'] = 0x05B3;\n\t  t['hatafqamats34'] = 0x05B3;\n\t  t['hatafqamatshebrew'] = 0x05B3;\n\t  t['hatafqamatsnarrowhebrew'] = 0x05B3;\n\t  t['hatafqamatsquarterhebrew'] = 0x05B3;\n\t  t['hatafqamatswidehebrew'] = 0x05B3;\n\t  t['hatafsegol'] = 0x05B1;\n\t  t['hatafsegol17'] = 0x05B1;\n\t  t['hatafsegol24'] = 0x05B1;\n\t  t['hatafsegol30'] = 0x05B1;\n\t  t['hatafsegolhebrew'] = 0x05B1;\n\t  t['hatafsegolnarrowhebrew'] = 0x05B1;\n\t  t['hatafsegolquarterhebrew'] = 0x05B1;\n\t  t['hatafsegolwidehebrew'] = 0x05B1;\n\t  t['hbar'] = 0x0127;\n\t  t['hbopomofo'] = 0x310F;\n\t  t['hbrevebelow'] = 0x1E2B;\n\t  t['hcedilla'] = 0x1E29;\n\t  t['hcircle'] = 0x24D7;\n\t  t['hcircumflex'] = 0x0125;\n\t  t['hdieresis'] = 0x1E27;\n\t  t['hdotaccent'] = 0x1E23;\n\t  t['hdotbelow'] = 0x1E25;\n\t  t['he'] = 0x05D4;\n\t  t['heart'] = 0x2665;\n\t  t['heartsuitblack'] = 0x2665;\n\t  t['heartsuitwhite'] = 0x2661;\n\t  t['hedagesh'] = 0xFB34;\n\t  t['hedageshhebrew'] = 0xFB34;\n\t  t['hehaltonearabic'] = 0x06C1;\n\t  t['heharabic'] = 0x0647;\n\t  t['hehebrew'] = 0x05D4;\n\t  t['hehfinalaltonearabic'] = 0xFBA7;\n\t  t['hehfinalalttwoarabic'] = 0xFEEA;\n\t  t['hehfinalarabic'] = 0xFEEA;\n\t  t['hehhamzaabovefinalarabic'] = 0xFBA5;\n\t  t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\n\t  t['hehinitialaltonearabic'] = 0xFBA8;\n\t  t['hehinitialarabic'] = 0xFEEB;\n\t  t['hehiragana'] = 0x3078;\n\t  t['hehmedialaltonearabic'] = 0xFBA9;\n\t  t['hehmedialarabic'] = 0xFEEC;\n\t  t['heiseierasquare'] = 0x337B;\n\t  t['hekatakana'] = 0x30D8;\n\t  t['hekatakanahalfwidth'] = 0xFF8D;\n\t  t['hekutaarusquare'] = 0x3336;\n\t  t['henghook'] = 0x0267;\n\t  t['herutusquare'] = 0x3339;\n\t  t['het'] = 0x05D7;\n\t  t['hethebrew'] = 0x05D7;\n\t  t['hhook'] = 0x0266;\n\t  t['hhooksuperior'] = 0x02B1;\n\t  t['hieuhacirclekorean'] = 0x327B;\n\t  t['hieuhaparenkorean'] = 0x321B;\n\t  t['hieuhcirclekorean'] = 0x326D;\n\t  t['hieuhkorean'] = 0x314E;\n\t  t['hieuhparenkorean'] = 0x320D;\n\t  t['hihiragana'] = 0x3072;\n\t  t['hikatakana'] = 0x30D2;\n\t  t['hikatakanahalfwidth'] = 0xFF8B;\n\t  t['hiriq'] = 0x05B4;\n\t  t['hiriq14'] = 0x05B4;\n\t  t['hiriq21'] = 0x05B4;\n\t  t['hiriq2d'] = 0x05B4;\n\t  t['hiriqhebrew'] = 0x05B4;\n\t  t['hiriqnarrowhebrew'] = 0x05B4;\n\t  t['hiriqquarterhebrew'] = 0x05B4;\n\t  t['hiriqwidehebrew'] = 0x05B4;\n\t  t['hlinebelow'] = 0x1E96;\n\t  t['hmonospace'] = 0xFF48;\n\t  t['hoarmenian'] = 0x0570;\n\t  t['hohipthai'] = 0x0E2B;\n\t  t['hohiragana'] = 0x307B;\n\t  t['hokatakana'] = 0x30DB;\n\t  t['hokatakanahalfwidth'] = 0xFF8E;\n\t  t['holam'] = 0x05B9;\n\t  t['holam19'] = 0x05B9;\n\t  t['holam26'] = 0x05B9;\n\t  t['holam32'] = 0x05B9;\n\t  t['holamhebrew'] = 0x05B9;\n\t  t['holamnarrowhebrew'] = 0x05B9;\n\t  t['holamquarterhebrew'] = 0x05B9;\n\t  t['holamwidehebrew'] = 0x05B9;\n\t  t['honokhukthai'] = 0x0E2E;\n\t  t['hookabovecomb'] = 0x0309;\n\t  t['hookcmb'] = 0x0309;\n\t  t['hookpalatalizedbelowcmb'] = 0x0321;\n\t  t['hookretroflexbelowcmb'] = 0x0322;\n\t  t['hoonsquare'] = 0x3342;\n\t  t['horicoptic'] = 0x03E9;\n\t  t['horizontalbar'] = 0x2015;\n\t  t['horncmb'] = 0x031B;\n\t  t['hotsprings'] = 0x2668;\n\t  t['house'] = 0x2302;\n\t  t['hparen'] = 0x24A3;\n\t  t['hsuperior'] = 0x02B0;\n\t  t['hturned'] = 0x0265;\n\t  t['huhiragana'] = 0x3075;\n\t  t['huiitosquare'] = 0x3333;\n\t  t['hukatakana'] = 0x30D5;\n\t  t['hukatakanahalfwidth'] = 0xFF8C;\n\t  t['hungarumlaut'] = 0x02DD;\n\t  t['hungarumlautcmb'] = 0x030B;\n\t  t['hv'] = 0x0195;\n\t  t['hyphen'] = 0x002D;\n\t  t['hypheninferior'] = 0xF6E5;\n\t  t['hyphenmonospace'] = 0xFF0D;\n\t  t['hyphensmall'] = 0xFE63;\n\t  t['hyphensuperior'] = 0xF6E6;\n\t  t['hyphentwo'] = 0x2010;\n\t  t['i'] = 0x0069;\n\t  t['iacute'] = 0x00ED;\n\t  t['iacyrillic'] = 0x044F;\n\t  t['ibengali'] = 0x0987;\n\t  t['ibopomofo'] = 0x3127;\n\t  t['ibreve'] = 0x012D;\n\t  t['icaron'] = 0x01D0;\n\t  t['icircle'] = 0x24D8;\n\t  t['icircumflex'] = 0x00EE;\n\t  t['icyrillic'] = 0x0456;\n\t  t['idblgrave'] = 0x0209;\n\t  t['ideographearthcircle'] = 0x328F;\n\t  t['ideographfirecircle'] = 0x328B;\n\t  t['ideographicallianceparen'] = 0x323F;\n\t  t['ideographiccallparen'] = 0x323A;\n\t  t['ideographiccentrecircle'] = 0x32A5;\n\t  t['ideographicclose'] = 0x3006;\n\t  t['ideographiccomma'] = 0x3001;\n\t  t['ideographiccommaleft'] = 0xFF64;\n\t  t['ideographiccongratulationparen'] = 0x3237;\n\t  t['ideographiccorrectcircle'] = 0x32A3;\n\t  t['ideographicearthparen'] = 0x322F;\n\t  t['ideographicenterpriseparen'] = 0x323D;\n\t  t['ideographicexcellentcircle'] = 0x329D;\n\t  t['ideographicfestivalparen'] = 0x3240;\n\t  t['ideographicfinancialcircle'] = 0x3296;\n\t  t['ideographicfinancialparen'] = 0x3236;\n\t  t['ideographicfireparen'] = 0x322B;\n\t  t['ideographichaveparen'] = 0x3232;\n\t  t['ideographichighcircle'] = 0x32A4;\n\t  t['ideographiciterationmark'] = 0x3005;\n\t  t['ideographiclaborcircle'] = 0x3298;\n\t  t['ideographiclaborparen'] = 0x3238;\n\t  t['ideographicleftcircle'] = 0x32A7;\n\t  t['ideographiclowcircle'] = 0x32A6;\n\t  t['ideographicmedicinecircle'] = 0x32A9;\n\t  t['ideographicmetalparen'] = 0x322E;\n\t  t['ideographicmoonparen'] = 0x322A;\n\t  t['ideographicnameparen'] = 0x3234;\n\t  t['ideographicperiod'] = 0x3002;\n\t  t['ideographicprintcircle'] = 0x329E;\n\t  t['ideographicreachparen'] = 0x3243;\n\t  t['ideographicrepresentparen'] = 0x3239;\n\t  t['ideographicresourceparen'] = 0x323E;\n\t  t['ideographicrightcircle'] = 0x32A8;\n\t  t['ideographicsecretcircle'] = 0x3299;\n\t  t['ideographicselfparen'] = 0x3242;\n\t  t['ideographicsocietyparen'] = 0x3233;\n\t  t['ideographicspace'] = 0x3000;\n\t  t['ideographicspecialparen'] = 0x3235;\n\t  t['ideographicstockparen'] = 0x3231;\n\t  t['ideographicstudyparen'] = 0x323B;\n\t  t['ideographicsunparen'] = 0x3230;\n\t  t['ideographicsuperviseparen'] = 0x323C;\n\t  t['ideographicwaterparen'] = 0x322C;\n\t  t['ideographicwoodparen'] = 0x322D;\n\t  t['ideographiczero'] = 0x3007;\n\t  t['ideographmetalcircle'] = 0x328E;\n\t  t['ideographmooncircle'] = 0x328A;\n\t  t['ideographnamecircle'] = 0x3294;\n\t  t['ideographsuncircle'] = 0x3290;\n\t  t['ideographwatercircle'] = 0x328C;\n\t  t['ideographwoodcircle'] = 0x328D;\n\t  t['ideva'] = 0x0907;\n\t  t['idieresis'] = 0x00EF;\n\t  t['idieresisacute'] = 0x1E2F;\n\t  t['idieresiscyrillic'] = 0x04E5;\n\t  t['idotbelow'] = 0x1ECB;\n\t  t['iebrevecyrillic'] = 0x04D7;\n\t  t['iecyrillic'] = 0x0435;\n\t  t['ieungacirclekorean'] = 0x3275;\n\t  t['ieungaparenkorean'] = 0x3215;\n\t  t['ieungcirclekorean'] = 0x3267;\n\t  t['ieungkorean'] = 0x3147;\n\t  t['ieungparenkorean'] = 0x3207;\n\t  t['igrave'] = 0x00EC;\n\t  t['igujarati'] = 0x0A87;\n\t  t['igurmukhi'] = 0x0A07;\n\t  t['ihiragana'] = 0x3044;\n\t  t['ihookabove'] = 0x1EC9;\n\t  t['iibengali'] = 0x0988;\n\t  t['iicyrillic'] = 0x0438;\n\t  t['iideva'] = 0x0908;\n\t  t['iigujarati'] = 0x0A88;\n\t  t['iigurmukhi'] = 0x0A08;\n\t  t['iimatragurmukhi'] = 0x0A40;\n\t  t['iinvertedbreve'] = 0x020B;\n\t  t['iishortcyrillic'] = 0x0439;\n\t  t['iivowelsignbengali'] = 0x09C0;\n\t  t['iivowelsigndeva'] = 0x0940;\n\t  t['iivowelsigngujarati'] = 0x0AC0;\n\t  t['ij'] = 0x0133;\n\t  t['ikatakana'] = 0x30A4;\n\t  t['ikatakanahalfwidth'] = 0xFF72;\n\t  t['ikorean'] = 0x3163;\n\t  t['ilde'] = 0x02DC;\n\t  t['iluyhebrew'] = 0x05AC;\n\t  t['imacron'] = 0x012B;\n\t  t['imacroncyrillic'] = 0x04E3;\n\t  t['imageorapproximatelyequal'] = 0x2253;\n\t  t['imatragurmukhi'] = 0x0A3F;\n\t  t['imonospace'] = 0xFF49;\n\t  t['increment'] = 0x2206;\n\t  t['infinity'] = 0x221E;\n\t  t['iniarmenian'] = 0x056B;\n\t  t['integral'] = 0x222B;\n\t  t['integralbottom'] = 0x2321;\n\t  t['integralbt'] = 0x2321;\n\t  t['integralex'] = 0xF8F5;\n\t  t['integraltop'] = 0x2320;\n\t  t['integraltp'] = 0x2320;\n\t  t['intersection'] = 0x2229;\n\t  t['intisquare'] = 0x3305;\n\t  t['invbullet'] = 0x25D8;\n\t  t['invcircle'] = 0x25D9;\n\t  t['invsmileface'] = 0x263B;\n\t  t['iocyrillic'] = 0x0451;\n\t  t['iogonek'] = 0x012F;\n\t  t['iota'] = 0x03B9;\n\t  t['iotadieresis'] = 0x03CA;\n\t  t['iotadieresistonos'] = 0x0390;\n\t  t['iotalatin'] = 0x0269;\n\t  t['iotatonos'] = 0x03AF;\n\t  t['iparen'] = 0x24A4;\n\t  t['irigurmukhi'] = 0x0A72;\n\t  t['ismallhiragana'] = 0x3043;\n\t  t['ismallkatakana'] = 0x30A3;\n\t  t['ismallkatakanahalfwidth'] = 0xFF68;\n\t  t['issharbengali'] = 0x09FA;\n\t  t['istroke'] = 0x0268;\n\t  t['isuperior'] = 0xF6ED;\n\t  t['iterationhiragana'] = 0x309D;\n\t  t['iterationkatakana'] = 0x30FD;\n\t  t['itilde'] = 0x0129;\n\t  t['itildebelow'] = 0x1E2D;\n\t  t['iubopomofo'] = 0x3129;\n\t  t['iucyrillic'] = 0x044E;\n\t  t['ivowelsignbengali'] = 0x09BF;\n\t  t['ivowelsigndeva'] = 0x093F;\n\t  t['ivowelsigngujarati'] = 0x0ABF;\n\t  t['izhitsacyrillic'] = 0x0475;\n\t  t['izhitsadblgravecyrillic'] = 0x0477;\n\t  t['j'] = 0x006A;\n\t  t['jaarmenian'] = 0x0571;\n\t  t['jabengali'] = 0x099C;\n\t  t['jadeva'] = 0x091C;\n\t  t['jagujarati'] = 0x0A9C;\n\t  t['jagurmukhi'] = 0x0A1C;\n\t  t['jbopomofo'] = 0x3110;\n\t  t['jcaron'] = 0x01F0;\n\t  t['jcircle'] = 0x24D9;\n\t  t['jcircumflex'] = 0x0135;\n\t  t['jcrossedtail'] = 0x029D;\n\t  t['jdotlessstroke'] = 0x025F;\n\t  t['jecyrillic'] = 0x0458;\n\t  t['jeemarabic'] = 0x062C;\n\t  t['jeemfinalarabic'] = 0xFE9E;\n\t  t['jeeminitialarabic'] = 0xFE9F;\n\t  t['jeemmedialarabic'] = 0xFEA0;\n\t  t['jeharabic'] = 0x0698;\n\t  t['jehfinalarabic'] = 0xFB8B;\n\t  t['jhabengali'] = 0x099D;\n\t  t['jhadeva'] = 0x091D;\n\t  t['jhagujarati'] = 0x0A9D;\n\t  t['jhagurmukhi'] = 0x0A1D;\n\t  t['jheharmenian'] = 0x057B;\n\t  t['jis'] = 0x3004;\n\t  t['jmonospace'] = 0xFF4A;\n\t  t['jparen'] = 0x24A5;\n\t  t['jsuperior'] = 0x02B2;\n\t  t['k'] = 0x006B;\n\t  t['kabashkircyrillic'] = 0x04A1;\n\t  t['kabengali'] = 0x0995;\n\t  t['kacute'] = 0x1E31;\n\t  t['kacyrillic'] = 0x043A;\n\t  t['kadescendercyrillic'] = 0x049B;\n\t  t['kadeva'] = 0x0915;\n\t  t['kaf'] = 0x05DB;\n\t  t['kafarabic'] = 0x0643;\n\t  t['kafdagesh'] = 0xFB3B;\n\t  t['kafdageshhebrew'] = 0xFB3B;\n\t  t['kaffinalarabic'] = 0xFEDA;\n\t  t['kafhebrew'] = 0x05DB;\n\t  t['kafinitialarabic'] = 0xFEDB;\n\t  t['kafmedialarabic'] = 0xFEDC;\n\t  t['kafrafehebrew'] = 0xFB4D;\n\t  t['kagujarati'] = 0x0A95;\n\t  t['kagurmukhi'] = 0x0A15;\n\t  t['kahiragana'] = 0x304B;\n\t  t['kahookcyrillic'] = 0x04C4;\n\t  t['kakatakana'] = 0x30AB;\n\t  t['kakatakanahalfwidth'] = 0xFF76;\n\t  t['kappa'] = 0x03BA;\n\t  t['kappasymbolgreek'] = 0x03F0;\n\t  t['kapyeounmieumkorean'] = 0x3171;\n\t  t['kapyeounphieuphkorean'] = 0x3184;\n\t  t['kapyeounpieupkorean'] = 0x3178;\n\t  t['kapyeounssangpieupkorean'] = 0x3179;\n\t  t['karoriisquare'] = 0x330D;\n\t  t['kashidaautoarabic'] = 0x0640;\n\t  t['kashidaautonosidebearingarabic'] = 0x0640;\n\t  t['kasmallkatakana'] = 0x30F5;\n\t  t['kasquare'] = 0x3384;\n\t  t['kasraarabic'] = 0x0650;\n\t  t['kasratanarabic'] = 0x064D;\n\t  t['kastrokecyrillic'] = 0x049F;\n\t  t['katahiraprolongmarkhalfwidth'] = 0xFF70;\n\t  t['kaverticalstrokecyrillic'] = 0x049D;\n\t  t['kbopomofo'] = 0x310E;\n\t  t['kcalsquare'] = 0x3389;\n\t  t['kcaron'] = 0x01E9;\n\t  t['kcedilla'] = 0x0137;\n\t  t['kcircle'] = 0x24DA;\n\t  t['kcommaaccent'] = 0x0137;\n\t  t['kdotbelow'] = 0x1E33;\n\t  t['keharmenian'] = 0x0584;\n\t  t['kehiragana'] = 0x3051;\n\t  t['kekatakana'] = 0x30B1;\n\t  t['kekatakanahalfwidth'] = 0xFF79;\n\t  t['kenarmenian'] = 0x056F;\n\t  t['kesmallkatakana'] = 0x30F6;\n\t  t['kgreenlandic'] = 0x0138;\n\t  t['khabengali'] = 0x0996;\n\t  t['khacyrillic'] = 0x0445;\n\t  t['khadeva'] = 0x0916;\n\t  t['khagujarati'] = 0x0A96;\n\t  t['khagurmukhi'] = 0x0A16;\n\t  t['khaharabic'] = 0x062E;\n\t  t['khahfinalarabic'] = 0xFEA6;\n\t  t['khahinitialarabic'] = 0xFEA7;\n\t  t['khahmedialarabic'] = 0xFEA8;\n\t  t['kheicoptic'] = 0x03E7;\n\t  t['khhadeva'] = 0x0959;\n\t  t['khhagurmukhi'] = 0x0A59;\n\t  t['khieukhacirclekorean'] = 0x3278;\n\t  t['khieukhaparenkorean'] = 0x3218;\n\t  t['khieukhcirclekorean'] = 0x326A;\n\t  t['khieukhkorean'] = 0x314B;\n\t  t['khieukhparenkorean'] = 0x320A;\n\t  t['khokhaithai'] = 0x0E02;\n\t  t['khokhonthai'] = 0x0E05;\n\t  t['khokhuatthai'] = 0x0E03;\n\t  t['khokhwaithai'] = 0x0E04;\n\t  t['khomutthai'] = 0x0E5B;\n\t  t['khook'] = 0x0199;\n\t  t['khorakhangthai'] = 0x0E06;\n\t  t['khzsquare'] = 0x3391;\n\t  t['kihiragana'] = 0x304D;\n\t  t['kikatakana'] = 0x30AD;\n\t  t['kikatakanahalfwidth'] = 0xFF77;\n\t  t['kiroguramusquare'] = 0x3315;\n\t  t['kiromeetorusquare'] = 0x3316;\n\t  t['kirosquare'] = 0x3314;\n\t  t['kiyeokacirclekorean'] = 0x326E;\n\t  t['kiyeokaparenkorean'] = 0x320E;\n\t  t['kiyeokcirclekorean'] = 0x3260;\n\t  t['kiyeokkorean'] = 0x3131;\n\t  t['kiyeokparenkorean'] = 0x3200;\n\t  t['kiyeoksioskorean'] = 0x3133;\n\t  t['kjecyrillic'] = 0x045C;\n\t  t['klinebelow'] = 0x1E35;\n\t  t['klsquare'] = 0x3398;\n\t  t['kmcubedsquare'] = 0x33A6;\n\t  t['kmonospace'] = 0xFF4B;\n\t  t['kmsquaredsquare'] = 0x33A2;\n\t  t['kohiragana'] = 0x3053;\n\t  t['kohmsquare'] = 0x33C0;\n\t  t['kokaithai'] = 0x0E01;\n\t  t['kokatakana'] = 0x30B3;\n\t  t['kokatakanahalfwidth'] = 0xFF7A;\n\t  t['kooposquare'] = 0x331E;\n\t  t['koppacyrillic'] = 0x0481;\n\t  t['koreanstandardsymbol'] = 0x327F;\n\t  t['koroniscmb'] = 0x0343;\n\t  t['kparen'] = 0x24A6;\n\t  t['kpasquare'] = 0x33AA;\n\t  t['ksicyrillic'] = 0x046F;\n\t  t['ktsquare'] = 0x33CF;\n\t  t['kturned'] = 0x029E;\n\t  t['kuhiragana'] = 0x304F;\n\t  t['kukatakana'] = 0x30AF;\n\t  t['kukatakanahalfwidth'] = 0xFF78;\n\t  t['kvsquare'] = 0x33B8;\n\t  t['kwsquare'] = 0x33BE;\n\t  t['l'] = 0x006C;\n\t  t['labengali'] = 0x09B2;\n\t  t['lacute'] = 0x013A;\n\t  t['ladeva'] = 0x0932;\n\t  t['lagujarati'] = 0x0AB2;\n\t  t['lagurmukhi'] = 0x0A32;\n\t  t['lakkhangyaothai'] = 0x0E45;\n\t  t['lamaleffinalarabic'] = 0xFEFC;\n\t  t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\n\t  t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\n\t  t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\n\t  t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\n\t  t['lamalefisolatedarabic'] = 0xFEFB;\n\t  t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\n\t  t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\n\t  t['lamarabic'] = 0x0644;\n\t  t['lambda'] = 0x03BB;\n\t  t['lambdastroke'] = 0x019B;\n\t  t['lamed'] = 0x05DC;\n\t  t['lameddagesh'] = 0xFB3C;\n\t  t['lameddageshhebrew'] = 0xFB3C;\n\t  t['lamedhebrew'] = 0x05DC;\n\t  t['lamfinalarabic'] = 0xFEDE;\n\t  t['lamhahinitialarabic'] = 0xFCCA;\n\t  t['laminitialarabic'] = 0xFEDF;\n\t  t['lamjeeminitialarabic'] = 0xFCC9;\n\t  t['lamkhahinitialarabic'] = 0xFCCB;\n\t  t['lamlamhehisolatedarabic'] = 0xFDF2;\n\t  t['lammedialarabic'] = 0xFEE0;\n\t  t['lammeemhahinitialarabic'] = 0xFD88;\n\t  t['lammeeminitialarabic'] = 0xFCCC;\n\t  t['largecircle'] = 0x25EF;\n\t  t['lbar'] = 0x019A;\n\t  t['lbelt'] = 0x026C;\n\t  t['lbopomofo'] = 0x310C;\n\t  t['lcaron'] = 0x013E;\n\t  t['lcedilla'] = 0x013C;\n\t  t['lcircle'] = 0x24DB;\n\t  t['lcircumflexbelow'] = 0x1E3D;\n\t  t['lcommaaccent'] = 0x013C;\n\t  t['ldot'] = 0x0140;\n\t  t['ldotaccent'] = 0x0140;\n\t  t['ldotbelow'] = 0x1E37;\n\t  t['ldotbelowmacron'] = 0x1E39;\n\t  t['leftangleabovecmb'] = 0x031A;\n\t  t['lefttackbelowcmb'] = 0x0318;\n\t  t['less'] = 0x003C;\n\t  t['lessequal'] = 0x2264;\n\t  t['lessequalorgreater'] = 0x22DA;\n\t  t['lessmonospace'] = 0xFF1C;\n\t  t['lessorequivalent'] = 0x2272;\n\t  t['lessorgreater'] = 0x2276;\n\t  t['lessoverequal'] = 0x2266;\n\t  t['lesssmall'] = 0xFE64;\n\t  t['lezh'] = 0x026E;\n\t  t['lfblock'] = 0x258C;\n\t  t['lhookretroflex'] = 0x026D;\n\t  t['lira'] = 0x20A4;\n\t  t['liwnarmenian'] = 0x056C;\n\t  t['lj'] = 0x01C9;\n\t  t['ljecyrillic'] = 0x0459;\n\t  t['ll'] = 0xF6C0;\n\t  t['lladeva'] = 0x0933;\n\t  t['llagujarati'] = 0x0AB3;\n\t  t['llinebelow'] = 0x1E3B;\n\t  t['llladeva'] = 0x0934;\n\t  t['llvocalicbengali'] = 0x09E1;\n\t  t['llvocalicdeva'] = 0x0961;\n\t  t['llvocalicvowelsignbengali'] = 0x09E3;\n\t  t['llvocalicvowelsigndeva'] = 0x0963;\n\t  t['lmiddletilde'] = 0x026B;\n\t  t['lmonospace'] = 0xFF4C;\n\t  t['lmsquare'] = 0x33D0;\n\t  t['lochulathai'] = 0x0E2C;\n\t  t['logicaland'] = 0x2227;\n\t  t['logicalnot'] = 0x00AC;\n\t  t['logicalnotreversed'] = 0x2310;\n\t  t['logicalor'] = 0x2228;\n\t  t['lolingthai'] = 0x0E25;\n\t  t['longs'] = 0x017F;\n\t  t['lowlinecenterline'] = 0xFE4E;\n\t  t['lowlinecmb'] = 0x0332;\n\t  t['lowlinedashed'] = 0xFE4D;\n\t  t['lozenge'] = 0x25CA;\n\t  t['lparen'] = 0x24A7;\n\t  t['lslash'] = 0x0142;\n\t  t['lsquare'] = 0x2113;\n\t  t['lsuperior'] = 0xF6EE;\n\t  t['ltshade'] = 0x2591;\n\t  t['luthai'] = 0x0E26;\n\t  t['lvocalicbengali'] = 0x098C;\n\t  t['lvocalicdeva'] = 0x090C;\n\t  t['lvocalicvowelsignbengali'] = 0x09E2;\n\t  t['lvocalicvowelsigndeva'] = 0x0962;\n\t  t['lxsquare'] = 0x33D3;\n\t  t['m'] = 0x006D;\n\t  t['mabengali'] = 0x09AE;\n\t  t['macron'] = 0x00AF;\n\t  t['macronbelowcmb'] = 0x0331;\n\t  t['macroncmb'] = 0x0304;\n\t  t['macronlowmod'] = 0x02CD;\n\t  t['macronmonospace'] = 0xFFE3;\n\t  t['macute'] = 0x1E3F;\n\t  t['madeva'] = 0x092E;\n\t  t['magujarati'] = 0x0AAE;\n\t  t['magurmukhi'] = 0x0A2E;\n\t  t['mahapakhhebrew'] = 0x05A4;\n\t  t['mahapakhlefthebrew'] = 0x05A4;\n\t  t['mahiragana'] = 0x307E;\n\t  t['maichattawalowleftthai'] = 0xF895;\n\t  t['maichattawalowrightthai'] = 0xF894;\n\t  t['maichattawathai'] = 0x0E4B;\n\t  t['maichattawaupperleftthai'] = 0xF893;\n\t  t['maieklowleftthai'] = 0xF88C;\n\t  t['maieklowrightthai'] = 0xF88B;\n\t  t['maiekthai'] = 0x0E48;\n\t  t['maiekupperleftthai'] = 0xF88A;\n\t  t['maihanakatleftthai'] = 0xF884;\n\t  t['maihanakatthai'] = 0x0E31;\n\t  t['maitaikhuleftthai'] = 0xF889;\n\t  t['maitaikhuthai'] = 0x0E47;\n\t  t['maitholowleftthai'] = 0xF88F;\n\t  t['maitholowrightthai'] = 0xF88E;\n\t  t['maithothai'] = 0x0E49;\n\t  t['maithoupperleftthai'] = 0xF88D;\n\t  t['maitrilowleftthai'] = 0xF892;\n\t  t['maitrilowrightthai'] = 0xF891;\n\t  t['maitrithai'] = 0x0E4A;\n\t  t['maitriupperleftthai'] = 0xF890;\n\t  t['maiyamokthai'] = 0x0E46;\n\t  t['makatakana'] = 0x30DE;\n\t  t['makatakanahalfwidth'] = 0xFF8F;\n\t  t['male'] = 0x2642;\n\t  t['mansyonsquare'] = 0x3347;\n\t  t['maqafhebrew'] = 0x05BE;\n\t  t['mars'] = 0x2642;\n\t  t['masoracirclehebrew'] = 0x05AF;\n\t  t['masquare'] = 0x3383;\n\t  t['mbopomofo'] = 0x3107;\n\t  t['mbsquare'] = 0x33D4;\n\t  t['mcircle'] = 0x24DC;\n\t  t['mcubedsquare'] = 0x33A5;\n\t  t['mdotaccent'] = 0x1E41;\n\t  t['mdotbelow'] = 0x1E43;\n\t  t['meemarabic'] = 0x0645;\n\t  t['meemfinalarabic'] = 0xFEE2;\n\t  t['meeminitialarabic'] = 0xFEE3;\n\t  t['meemmedialarabic'] = 0xFEE4;\n\t  t['meemmeeminitialarabic'] = 0xFCD1;\n\t  t['meemmeemisolatedarabic'] = 0xFC48;\n\t  t['meetorusquare'] = 0x334D;\n\t  t['mehiragana'] = 0x3081;\n\t  t['meizierasquare'] = 0x337E;\n\t  t['mekatakana'] = 0x30E1;\n\t  t['mekatakanahalfwidth'] = 0xFF92;\n\t  t['mem'] = 0x05DE;\n\t  t['memdagesh'] = 0xFB3E;\n\t  t['memdageshhebrew'] = 0xFB3E;\n\t  t['memhebrew'] = 0x05DE;\n\t  t['menarmenian'] = 0x0574;\n\t  t['merkhahebrew'] = 0x05A5;\n\t  t['merkhakefulahebrew'] = 0x05A6;\n\t  t['merkhakefulalefthebrew'] = 0x05A6;\n\t  t['merkhalefthebrew'] = 0x05A5;\n\t  t['mhook'] = 0x0271;\n\t  t['mhzsquare'] = 0x3392;\n\t  t['middledotkatakanahalfwidth'] = 0xFF65;\n\t  t['middot'] = 0x00B7;\n\t  t['mieumacirclekorean'] = 0x3272;\n\t  t['mieumaparenkorean'] = 0x3212;\n\t  t['mieumcirclekorean'] = 0x3264;\n\t  t['mieumkorean'] = 0x3141;\n\t  t['mieumpansioskorean'] = 0x3170;\n\t  t['mieumparenkorean'] = 0x3204;\n\t  t['mieumpieupkorean'] = 0x316E;\n\t  t['mieumsioskorean'] = 0x316F;\n\t  t['mihiragana'] = 0x307F;\n\t  t['mikatakana'] = 0x30DF;\n\t  t['mikatakanahalfwidth'] = 0xFF90;\n\t  t['minus'] = 0x2212;\n\t  t['minusbelowcmb'] = 0x0320;\n\t  t['minuscircle'] = 0x2296;\n\t  t['minusmod'] = 0x02D7;\n\t  t['minusplus'] = 0x2213;\n\t  t['minute'] = 0x2032;\n\t  t['miribaarusquare'] = 0x334A;\n\t  t['mirisquare'] = 0x3349;\n\t  t['mlonglegturned'] = 0x0270;\n\t  t['mlsquare'] = 0x3396;\n\t  t['mmcubedsquare'] = 0x33A3;\n\t  t['mmonospace'] = 0xFF4D;\n\t  t['mmsquaredsquare'] = 0x339F;\n\t  t['mohiragana'] = 0x3082;\n\t  t['mohmsquare'] = 0x33C1;\n\t  t['mokatakana'] = 0x30E2;\n\t  t['mokatakanahalfwidth'] = 0xFF93;\n\t  t['molsquare'] = 0x33D6;\n\t  t['momathai'] = 0x0E21;\n\t  t['moverssquare'] = 0x33A7;\n\t  t['moverssquaredsquare'] = 0x33A8;\n\t  t['mparen'] = 0x24A8;\n\t  t['mpasquare'] = 0x33AB;\n\t  t['mssquare'] = 0x33B3;\n\t  t['msuperior'] = 0xF6EF;\n\t  t['mturned'] = 0x026F;\n\t  t['mu'] = 0x00B5;\n\t  t['mu1'] = 0x00B5;\n\t  t['muasquare'] = 0x3382;\n\t  t['muchgreater'] = 0x226B;\n\t  t['muchless'] = 0x226A;\n\t  t['mufsquare'] = 0x338C;\n\t  t['mugreek'] = 0x03BC;\n\t  t['mugsquare'] = 0x338D;\n\t  t['muhiragana'] = 0x3080;\n\t  t['mukatakana'] = 0x30E0;\n\t  t['mukatakanahalfwidth'] = 0xFF91;\n\t  t['mulsquare'] = 0x3395;\n\t  t['multiply'] = 0x00D7;\n\t  t['mumsquare'] = 0x339B;\n\t  t['munahhebrew'] = 0x05A3;\n\t  t['munahlefthebrew'] = 0x05A3;\n\t  t['musicalnote'] = 0x266A;\n\t  t['musicalnotedbl'] = 0x266B;\n\t  t['musicflatsign'] = 0x266D;\n\t  t['musicsharpsign'] = 0x266F;\n\t  t['mussquare'] = 0x33B2;\n\t  t['muvsquare'] = 0x33B6;\n\t  t['muwsquare'] = 0x33BC;\n\t  t['mvmegasquare'] = 0x33B9;\n\t  t['mvsquare'] = 0x33B7;\n\t  t['mwmegasquare'] = 0x33BF;\n\t  t['mwsquare'] = 0x33BD;\n\t  t['n'] = 0x006E;\n\t  t['nabengali'] = 0x09A8;\n\t  t['nabla'] = 0x2207;\n\t  t['nacute'] = 0x0144;\n\t  t['nadeva'] = 0x0928;\n\t  t['nagujarati'] = 0x0AA8;\n\t  t['nagurmukhi'] = 0x0A28;\n\t  t['nahiragana'] = 0x306A;\n\t  t['nakatakana'] = 0x30CA;\n\t  t['nakatakanahalfwidth'] = 0xFF85;\n\t  t['napostrophe'] = 0x0149;\n\t  t['nasquare'] = 0x3381;\n\t  t['nbopomofo'] = 0x310B;\n\t  t['nbspace'] = 0x00A0;\n\t  t['ncaron'] = 0x0148;\n\t  t['ncedilla'] = 0x0146;\n\t  t['ncircle'] = 0x24DD;\n\t  t['ncircumflexbelow'] = 0x1E4B;\n\t  t['ncommaaccent'] = 0x0146;\n\t  t['ndotaccent'] = 0x1E45;\n\t  t['ndotbelow'] = 0x1E47;\n\t  t['nehiragana'] = 0x306D;\n\t  t['nekatakana'] = 0x30CD;\n\t  t['nekatakanahalfwidth'] = 0xFF88;\n\t  t['newsheqelsign'] = 0x20AA;\n\t  t['nfsquare'] = 0x338B;\n\t  t['ngabengali'] = 0x0999;\n\t  t['ngadeva'] = 0x0919;\n\t  t['ngagujarati'] = 0x0A99;\n\t  t['ngagurmukhi'] = 0x0A19;\n\t  t['ngonguthai'] = 0x0E07;\n\t  t['nhiragana'] = 0x3093;\n\t  t['nhookleft'] = 0x0272;\n\t  t['nhookretroflex'] = 0x0273;\n\t  t['nieunacirclekorean'] = 0x326F;\n\t  t['nieunaparenkorean'] = 0x320F;\n\t  t['nieuncieuckorean'] = 0x3135;\n\t  t['nieuncirclekorean'] = 0x3261;\n\t  t['nieunhieuhkorean'] = 0x3136;\n\t  t['nieunkorean'] = 0x3134;\n\t  t['nieunpansioskorean'] = 0x3168;\n\t  t['nieunparenkorean'] = 0x3201;\n\t  t['nieunsioskorean'] = 0x3167;\n\t  t['nieuntikeutkorean'] = 0x3166;\n\t  t['nihiragana'] = 0x306B;\n\t  t['nikatakana'] = 0x30CB;\n\t  t['nikatakanahalfwidth'] = 0xFF86;\n\t  t['nikhahitleftthai'] = 0xF899;\n\t  t['nikhahitthai'] = 0x0E4D;\n\t  t['nine'] = 0x0039;\n\t  t['ninearabic'] = 0x0669;\n\t  t['ninebengali'] = 0x09EF;\n\t  t['ninecircle'] = 0x2468;\n\t  t['ninecircleinversesansserif'] = 0x2792;\n\t  t['ninedeva'] = 0x096F;\n\t  t['ninegujarati'] = 0x0AEF;\n\t  t['ninegurmukhi'] = 0x0A6F;\n\t  t['ninehackarabic'] = 0x0669;\n\t  t['ninehangzhou'] = 0x3029;\n\t  t['nineideographicparen'] = 0x3228;\n\t  t['nineinferior'] = 0x2089;\n\t  t['ninemonospace'] = 0xFF19;\n\t  t['nineoldstyle'] = 0xF739;\n\t  t['nineparen'] = 0x247C;\n\t  t['nineperiod'] = 0x2490;\n\t  t['ninepersian'] = 0x06F9;\n\t  t['nineroman'] = 0x2178;\n\t  t['ninesuperior'] = 0x2079;\n\t  t['nineteencircle'] = 0x2472;\n\t  t['nineteenparen'] = 0x2486;\n\t  t['nineteenperiod'] = 0x249A;\n\t  t['ninethai'] = 0x0E59;\n\t  t['nj'] = 0x01CC;\n\t  t['njecyrillic'] = 0x045A;\n\t  t['nkatakana'] = 0x30F3;\n\t  t['nkatakanahalfwidth'] = 0xFF9D;\n\t  t['nlegrightlong'] = 0x019E;\n\t  t['nlinebelow'] = 0x1E49;\n\t  t['nmonospace'] = 0xFF4E;\n\t  t['nmsquare'] = 0x339A;\n\t  t['nnabengali'] = 0x09A3;\n\t  t['nnadeva'] = 0x0923;\n\t  t['nnagujarati'] = 0x0AA3;\n\t  t['nnagurmukhi'] = 0x0A23;\n\t  t['nnnadeva'] = 0x0929;\n\t  t['nohiragana'] = 0x306E;\n\t  t['nokatakana'] = 0x30CE;\n\t  t['nokatakanahalfwidth'] = 0xFF89;\n\t  t['nonbreakingspace'] = 0x00A0;\n\t  t['nonenthai'] = 0x0E13;\n\t  t['nonuthai'] = 0x0E19;\n\t  t['noonarabic'] = 0x0646;\n\t  t['noonfinalarabic'] = 0xFEE6;\n\t  t['noonghunnaarabic'] = 0x06BA;\n\t  t['noonghunnafinalarabic'] = 0xFB9F;\n\t  t['nooninitialarabic'] = 0xFEE7;\n\t  t['noonjeeminitialarabic'] = 0xFCD2;\n\t  t['noonjeemisolatedarabic'] = 0xFC4B;\n\t  t['noonmedialarabic'] = 0xFEE8;\n\t  t['noonmeeminitialarabic'] = 0xFCD5;\n\t  t['noonmeemisolatedarabic'] = 0xFC4E;\n\t  t['noonnoonfinalarabic'] = 0xFC8D;\n\t  t['notcontains'] = 0x220C;\n\t  t['notelement'] = 0x2209;\n\t  t['notelementof'] = 0x2209;\n\t  t['notequal'] = 0x2260;\n\t  t['notgreater'] = 0x226F;\n\t  t['notgreaternorequal'] = 0x2271;\n\t  t['notgreaternorless'] = 0x2279;\n\t  t['notidentical'] = 0x2262;\n\t  t['notless'] = 0x226E;\n\t  t['notlessnorequal'] = 0x2270;\n\t  t['notparallel'] = 0x2226;\n\t  t['notprecedes'] = 0x2280;\n\t  t['notsubset'] = 0x2284;\n\t  t['notsucceeds'] = 0x2281;\n\t  t['notsuperset'] = 0x2285;\n\t  t['nowarmenian'] = 0x0576;\n\t  t['nparen'] = 0x24A9;\n\t  t['nssquare'] = 0x33B1;\n\t  t['nsuperior'] = 0x207F;\n\t  t['ntilde'] = 0x00F1;\n\t  t['nu'] = 0x03BD;\n\t  t['nuhiragana'] = 0x306C;\n\t  t['nukatakana'] = 0x30CC;\n\t  t['nukatakanahalfwidth'] = 0xFF87;\n\t  t['nuktabengali'] = 0x09BC;\n\t  t['nuktadeva'] = 0x093C;\n\t  t['nuktagujarati'] = 0x0ABC;\n\t  t['nuktagurmukhi'] = 0x0A3C;\n\t  t['numbersign'] = 0x0023;\n\t  t['numbersignmonospace'] = 0xFF03;\n\t  t['numbersignsmall'] = 0xFE5F;\n\t  t['numeralsigngreek'] = 0x0374;\n\t  t['numeralsignlowergreek'] = 0x0375;\n\t  t['numero'] = 0x2116;\n\t  t['nun'] = 0x05E0;\n\t  t['nundagesh'] = 0xFB40;\n\t  t['nundageshhebrew'] = 0xFB40;\n\t  t['nunhebrew'] = 0x05E0;\n\t  t['nvsquare'] = 0x33B5;\n\t  t['nwsquare'] = 0x33BB;\n\t  t['nyabengali'] = 0x099E;\n\t  t['nyadeva'] = 0x091E;\n\t  t['nyagujarati'] = 0x0A9E;\n\t  t['nyagurmukhi'] = 0x0A1E;\n\t  t['o'] = 0x006F;\n\t  t['oacute'] = 0x00F3;\n\t  t['oangthai'] = 0x0E2D;\n\t  t['obarred'] = 0x0275;\n\t  t['obarredcyrillic'] = 0x04E9;\n\t  t['obarreddieresiscyrillic'] = 0x04EB;\n\t  t['obengali'] = 0x0993;\n\t  t['obopomofo'] = 0x311B;\n\t  t['obreve'] = 0x014F;\n\t  t['ocandradeva'] = 0x0911;\n\t  t['ocandragujarati'] = 0x0A91;\n\t  t['ocandravowelsigndeva'] = 0x0949;\n\t  t['ocandravowelsigngujarati'] = 0x0AC9;\n\t  t['ocaron'] = 0x01D2;\n\t  t['ocircle'] = 0x24DE;\n\t  t['ocircumflex'] = 0x00F4;\n\t  t['ocircumflexacute'] = 0x1ED1;\n\t  t['ocircumflexdotbelow'] = 0x1ED9;\n\t  t['ocircumflexgrave'] = 0x1ED3;\n\t  t['ocircumflexhookabove'] = 0x1ED5;\n\t  t['ocircumflextilde'] = 0x1ED7;\n\t  t['ocyrillic'] = 0x043E;\n\t  t['odblacute'] = 0x0151;\n\t  t['odblgrave'] = 0x020D;\n\t  t['odeva'] = 0x0913;\n\t  t['odieresis'] = 0x00F6;\n\t  t['odieresiscyrillic'] = 0x04E7;\n\t  t['odotbelow'] = 0x1ECD;\n\t  t['oe'] = 0x0153;\n\t  t['oekorean'] = 0x315A;\n\t  t['ogonek'] = 0x02DB;\n\t  t['ogonekcmb'] = 0x0328;\n\t  t['ograve'] = 0x00F2;\n\t  t['ogujarati'] = 0x0A93;\n\t  t['oharmenian'] = 0x0585;\n\t  t['ohiragana'] = 0x304A;\n\t  t['ohookabove'] = 0x1ECF;\n\t  t['ohorn'] = 0x01A1;\n\t  t['ohornacute'] = 0x1EDB;\n\t  t['ohorndotbelow'] = 0x1EE3;\n\t  t['ohorngrave'] = 0x1EDD;\n\t  t['ohornhookabove'] = 0x1EDF;\n\t  t['ohorntilde'] = 0x1EE1;\n\t  t['ohungarumlaut'] = 0x0151;\n\t  t['oi'] = 0x01A3;\n\t  t['oinvertedbreve'] = 0x020F;\n\t  t['okatakana'] = 0x30AA;\n\t  t['okatakanahalfwidth'] = 0xFF75;\n\t  t['okorean'] = 0x3157;\n\t  t['olehebrew'] = 0x05AB;\n\t  t['omacron'] = 0x014D;\n\t  t['omacronacute'] = 0x1E53;\n\t  t['omacrongrave'] = 0x1E51;\n\t  t['omdeva'] = 0x0950;\n\t  t['omega'] = 0x03C9;\n\t  t['omega1'] = 0x03D6;\n\t  t['omegacyrillic'] = 0x0461;\n\t  t['omegalatinclosed'] = 0x0277;\n\t  t['omegaroundcyrillic'] = 0x047B;\n\t  t['omegatitlocyrillic'] = 0x047D;\n\t  t['omegatonos'] = 0x03CE;\n\t  t['omgujarati'] = 0x0AD0;\n\t  t['omicron'] = 0x03BF;\n\t  t['omicrontonos'] = 0x03CC;\n\t  t['omonospace'] = 0xFF4F;\n\t  t['one'] = 0x0031;\n\t  t['onearabic'] = 0x0661;\n\t  t['onebengali'] = 0x09E7;\n\t  t['onecircle'] = 0x2460;\n\t  t['onecircleinversesansserif'] = 0x278A;\n\t  t['onedeva'] = 0x0967;\n\t  t['onedotenleader'] = 0x2024;\n\t  t['oneeighth'] = 0x215B;\n\t  t['onefitted'] = 0xF6DC;\n\t  t['onegujarati'] = 0x0AE7;\n\t  t['onegurmukhi'] = 0x0A67;\n\t  t['onehackarabic'] = 0x0661;\n\t  t['onehalf'] = 0x00BD;\n\t  t['onehangzhou'] = 0x3021;\n\t  t['oneideographicparen'] = 0x3220;\n\t  t['oneinferior'] = 0x2081;\n\t  t['onemonospace'] = 0xFF11;\n\t  t['onenumeratorbengali'] = 0x09F4;\n\t  t['oneoldstyle'] = 0xF731;\n\t  t['oneparen'] = 0x2474;\n\t  t['oneperiod'] = 0x2488;\n\t  t['onepersian'] = 0x06F1;\n\t  t['onequarter'] = 0x00BC;\n\t  t['oneroman'] = 0x2170;\n\t  t['onesuperior'] = 0x00B9;\n\t  t['onethai'] = 0x0E51;\n\t  t['onethird'] = 0x2153;\n\t  t['oogonek'] = 0x01EB;\n\t  t['oogonekmacron'] = 0x01ED;\n\t  t['oogurmukhi'] = 0x0A13;\n\t  t['oomatragurmukhi'] = 0x0A4B;\n\t  t['oopen'] = 0x0254;\n\t  t['oparen'] = 0x24AA;\n\t  t['openbullet'] = 0x25E6;\n\t  t['option'] = 0x2325;\n\t  t['ordfeminine'] = 0x00AA;\n\t  t['ordmasculine'] = 0x00BA;\n\t  t['orthogonal'] = 0x221F;\n\t  t['oshortdeva'] = 0x0912;\n\t  t['oshortvowelsigndeva'] = 0x094A;\n\t  t['oslash'] = 0x00F8;\n\t  t['oslashacute'] = 0x01FF;\n\t  t['osmallhiragana'] = 0x3049;\n\t  t['osmallkatakana'] = 0x30A9;\n\t  t['osmallkatakanahalfwidth'] = 0xFF6B;\n\t  t['ostrokeacute'] = 0x01FF;\n\t  t['osuperior'] = 0xF6F0;\n\t  t['otcyrillic'] = 0x047F;\n\t  t['otilde'] = 0x00F5;\n\t  t['otildeacute'] = 0x1E4D;\n\t  t['otildedieresis'] = 0x1E4F;\n\t  t['oubopomofo'] = 0x3121;\n\t  t['overline'] = 0x203E;\n\t  t['overlinecenterline'] = 0xFE4A;\n\t  t['overlinecmb'] = 0x0305;\n\t  t['overlinedashed'] = 0xFE49;\n\t  t['overlinedblwavy'] = 0xFE4C;\n\t  t['overlinewavy'] = 0xFE4B;\n\t  t['overscore'] = 0x00AF;\n\t  t['ovowelsignbengali'] = 0x09CB;\n\t  t['ovowelsigndeva'] = 0x094B;\n\t  t['ovowelsigngujarati'] = 0x0ACB;\n\t  t['p'] = 0x0070;\n\t  t['paampssquare'] = 0x3380;\n\t  t['paasentosquare'] = 0x332B;\n\t  t['pabengali'] = 0x09AA;\n\t  t['pacute'] = 0x1E55;\n\t  t['padeva'] = 0x092A;\n\t  t['pagedown'] = 0x21DF;\n\t  t['pageup'] = 0x21DE;\n\t  t['pagujarati'] = 0x0AAA;\n\t  t['pagurmukhi'] = 0x0A2A;\n\t  t['pahiragana'] = 0x3071;\n\t  t['paiyannoithai'] = 0x0E2F;\n\t  t['pakatakana'] = 0x30D1;\n\t  t['palatalizationcyrilliccmb'] = 0x0484;\n\t  t['palochkacyrillic'] = 0x04C0;\n\t  t['pansioskorean'] = 0x317F;\n\t  t['paragraph'] = 0x00B6;\n\t  t['parallel'] = 0x2225;\n\t  t['parenleft'] = 0x0028;\n\t  t['parenleftaltonearabic'] = 0xFD3E;\n\t  t['parenleftbt'] = 0xF8ED;\n\t  t['parenleftex'] = 0xF8EC;\n\t  t['parenleftinferior'] = 0x208D;\n\t  t['parenleftmonospace'] = 0xFF08;\n\t  t['parenleftsmall'] = 0xFE59;\n\t  t['parenleftsuperior'] = 0x207D;\n\t  t['parenlefttp'] = 0xF8EB;\n\t  t['parenleftvertical'] = 0xFE35;\n\t  t['parenright'] = 0x0029;\n\t  t['parenrightaltonearabic'] = 0xFD3F;\n\t  t['parenrightbt'] = 0xF8F8;\n\t  t['parenrightex'] = 0xF8F7;\n\t  t['parenrightinferior'] = 0x208E;\n\t  t['parenrightmonospace'] = 0xFF09;\n\t  t['parenrightsmall'] = 0xFE5A;\n\t  t['parenrightsuperior'] = 0x207E;\n\t  t['parenrighttp'] = 0xF8F6;\n\t  t['parenrightvertical'] = 0xFE36;\n\t  t['partialdiff'] = 0x2202;\n\t  t['paseqhebrew'] = 0x05C0;\n\t  t['pashtahebrew'] = 0x0599;\n\t  t['pasquare'] = 0x33A9;\n\t  t['patah'] = 0x05B7;\n\t  t['patah11'] = 0x05B7;\n\t  t['patah1d'] = 0x05B7;\n\t  t['patah2a'] = 0x05B7;\n\t  t['patahhebrew'] = 0x05B7;\n\t  t['patahnarrowhebrew'] = 0x05B7;\n\t  t['patahquarterhebrew'] = 0x05B7;\n\t  t['patahwidehebrew'] = 0x05B7;\n\t  t['pazerhebrew'] = 0x05A1;\n\t  t['pbopomofo'] = 0x3106;\n\t  t['pcircle'] = 0x24DF;\n\t  t['pdotaccent'] = 0x1E57;\n\t  t['pe'] = 0x05E4;\n\t  t['pecyrillic'] = 0x043F;\n\t  t['pedagesh'] = 0xFB44;\n\t  t['pedageshhebrew'] = 0xFB44;\n\t  t['peezisquare'] = 0x333B;\n\t  t['pefinaldageshhebrew'] = 0xFB43;\n\t  t['peharabic'] = 0x067E;\n\t  t['peharmenian'] = 0x057A;\n\t  t['pehebrew'] = 0x05E4;\n\t  t['pehfinalarabic'] = 0xFB57;\n\t  t['pehinitialarabic'] = 0xFB58;\n\t  t['pehiragana'] = 0x307A;\n\t  t['pehmedialarabic'] = 0xFB59;\n\t  t['pekatakana'] = 0x30DA;\n\t  t['pemiddlehookcyrillic'] = 0x04A7;\n\t  t['perafehebrew'] = 0xFB4E;\n\t  t['percent'] = 0x0025;\n\t  t['percentarabic'] = 0x066A;\n\t  t['percentmonospace'] = 0xFF05;\n\t  t['percentsmall'] = 0xFE6A;\n\t  t['period'] = 0x002E;\n\t  t['periodarmenian'] = 0x0589;\n\t  t['periodcentered'] = 0x00B7;\n\t  t['periodhalfwidth'] = 0xFF61;\n\t  t['periodinferior'] = 0xF6E7;\n\t  t['periodmonospace'] = 0xFF0E;\n\t  t['periodsmall'] = 0xFE52;\n\t  t['periodsuperior'] = 0xF6E8;\n\t  t['perispomenigreekcmb'] = 0x0342;\n\t  t['perpendicular'] = 0x22A5;\n\t  t['perthousand'] = 0x2030;\n\t  t['peseta'] = 0x20A7;\n\t  t['pfsquare'] = 0x338A;\n\t  t['phabengali'] = 0x09AB;\n\t  t['phadeva'] = 0x092B;\n\t  t['phagujarati'] = 0x0AAB;\n\t  t['phagurmukhi'] = 0x0A2B;\n\t  t['phi'] = 0x03C6;\n\t  t['phi1'] = 0x03D5;\n\t  t['phieuphacirclekorean'] = 0x327A;\n\t  t['phieuphaparenkorean'] = 0x321A;\n\t  t['phieuphcirclekorean'] = 0x326C;\n\t  t['phieuphkorean'] = 0x314D;\n\t  t['phieuphparenkorean'] = 0x320C;\n\t  t['philatin'] = 0x0278;\n\t  t['phinthuthai'] = 0x0E3A;\n\t  t['phisymbolgreek'] = 0x03D5;\n\t  t['phook'] = 0x01A5;\n\t  t['phophanthai'] = 0x0E1E;\n\t  t['phophungthai'] = 0x0E1C;\n\t  t['phosamphaothai'] = 0x0E20;\n\t  t['pi'] = 0x03C0;\n\t  t['pieupacirclekorean'] = 0x3273;\n\t  t['pieupaparenkorean'] = 0x3213;\n\t  t['pieupcieuckorean'] = 0x3176;\n\t  t['pieupcirclekorean'] = 0x3265;\n\t  t['pieupkiyeokkorean'] = 0x3172;\n\t  t['pieupkorean'] = 0x3142;\n\t  t['pieupparenkorean'] = 0x3205;\n\t  t['pieupsioskiyeokkorean'] = 0x3174;\n\t  t['pieupsioskorean'] = 0x3144;\n\t  t['pieupsiostikeutkorean'] = 0x3175;\n\t  t['pieupthieuthkorean'] = 0x3177;\n\t  t['pieuptikeutkorean'] = 0x3173;\n\t  t['pihiragana'] = 0x3074;\n\t  t['pikatakana'] = 0x30D4;\n\t  t['pisymbolgreek'] = 0x03D6;\n\t  t['piwrarmenian'] = 0x0583;\n\t  t['plus'] = 0x002B;\n\t  t['plusbelowcmb'] = 0x031F;\n\t  t['pluscircle'] = 0x2295;\n\t  t['plusminus'] = 0x00B1;\n\t  t['plusmod'] = 0x02D6;\n\t  t['plusmonospace'] = 0xFF0B;\n\t  t['plussmall'] = 0xFE62;\n\t  t['plussuperior'] = 0x207A;\n\t  t['pmonospace'] = 0xFF50;\n\t  t['pmsquare'] = 0x33D8;\n\t  t['pohiragana'] = 0x307D;\n\t  t['pointingindexdownwhite'] = 0x261F;\n\t  t['pointingindexleftwhite'] = 0x261C;\n\t  t['pointingindexrightwhite'] = 0x261E;\n\t  t['pointingindexupwhite'] = 0x261D;\n\t  t['pokatakana'] = 0x30DD;\n\t  t['poplathai'] = 0x0E1B;\n\t  t['postalmark'] = 0x3012;\n\t  t['postalmarkface'] = 0x3020;\n\t  t['pparen'] = 0x24AB;\n\t  t['precedes'] = 0x227A;\n\t  t['prescription'] = 0x211E;\n\t  t['primemod'] = 0x02B9;\n\t  t['primereversed'] = 0x2035;\n\t  t['product'] = 0x220F;\n\t  t['projective'] = 0x2305;\n\t  t['prolongedkana'] = 0x30FC;\n\t  t['propellor'] = 0x2318;\n\t  t['propersubset'] = 0x2282;\n\t  t['propersuperset'] = 0x2283;\n\t  t['proportion'] = 0x2237;\n\t  t['proportional'] = 0x221D;\n\t  t['psi'] = 0x03C8;\n\t  t['psicyrillic'] = 0x0471;\n\t  t['psilipneumatacyrilliccmb'] = 0x0486;\n\t  t['pssquare'] = 0x33B0;\n\t  t['puhiragana'] = 0x3077;\n\t  t['pukatakana'] = 0x30D7;\n\t  t['pvsquare'] = 0x33B4;\n\t  t['pwsquare'] = 0x33BA;\n\t  t['q'] = 0x0071;\n\t  t['qadeva'] = 0x0958;\n\t  t['qadmahebrew'] = 0x05A8;\n\t  t['qafarabic'] = 0x0642;\n\t  t['qaffinalarabic'] = 0xFED6;\n\t  t['qafinitialarabic'] = 0xFED7;\n\t  t['qafmedialarabic'] = 0xFED8;\n\t  t['qamats'] = 0x05B8;\n\t  t['qamats10'] = 0x05B8;\n\t  t['qamats1a'] = 0x05B8;\n\t  t['qamats1c'] = 0x05B8;\n\t  t['qamats27'] = 0x05B8;\n\t  t['qamats29'] = 0x05B8;\n\t  t['qamats33'] = 0x05B8;\n\t  t['qamatsde'] = 0x05B8;\n\t  t['qamatshebrew'] = 0x05B8;\n\t  t['qamatsnarrowhebrew'] = 0x05B8;\n\t  t['qamatsqatanhebrew'] = 0x05B8;\n\t  t['qamatsqatannarrowhebrew'] = 0x05B8;\n\t  t['qamatsqatanquarterhebrew'] = 0x05B8;\n\t  t['qamatsqatanwidehebrew'] = 0x05B8;\n\t  t['qamatsquarterhebrew'] = 0x05B8;\n\t  t['qamatswidehebrew'] = 0x05B8;\n\t  t['qarneyparahebrew'] = 0x059F;\n\t  t['qbopomofo'] = 0x3111;\n\t  t['qcircle'] = 0x24E0;\n\t  t['qhook'] = 0x02A0;\n\t  t['qmonospace'] = 0xFF51;\n\t  t['qof'] = 0x05E7;\n\t  t['qofdagesh'] = 0xFB47;\n\t  t['qofdageshhebrew'] = 0xFB47;\n\t  t['qofhebrew'] = 0x05E7;\n\t  t['qparen'] = 0x24AC;\n\t  t['quarternote'] = 0x2669;\n\t  t['qubuts'] = 0x05BB;\n\t  t['qubuts18'] = 0x05BB;\n\t  t['qubuts25'] = 0x05BB;\n\t  t['qubuts31'] = 0x05BB;\n\t  t['qubutshebrew'] = 0x05BB;\n\t  t['qubutsnarrowhebrew'] = 0x05BB;\n\t  t['qubutsquarterhebrew'] = 0x05BB;\n\t  t['qubutswidehebrew'] = 0x05BB;\n\t  t['question'] = 0x003F;\n\t  t['questionarabic'] = 0x061F;\n\t  t['questionarmenian'] = 0x055E;\n\t  t['questiondown'] = 0x00BF;\n\t  t['questiondownsmall'] = 0xF7BF;\n\t  t['questiongreek'] = 0x037E;\n\t  t['questionmonospace'] = 0xFF1F;\n\t  t['questionsmall'] = 0xF73F;\n\t  t['quotedbl'] = 0x0022;\n\t  t['quotedblbase'] = 0x201E;\n\t  t['quotedblleft'] = 0x201C;\n\t  t['quotedblmonospace'] = 0xFF02;\n\t  t['quotedblprime'] = 0x301E;\n\t  t['quotedblprimereversed'] = 0x301D;\n\t  t['quotedblright'] = 0x201D;\n\t  t['quoteleft'] = 0x2018;\n\t  t['quoteleftreversed'] = 0x201B;\n\t  t['quotereversed'] = 0x201B;\n\t  t['quoteright'] = 0x2019;\n\t  t['quoterightn'] = 0x0149;\n\t  t['quotesinglbase'] = 0x201A;\n\t  t['quotesingle'] = 0x0027;\n\t  t['quotesinglemonospace'] = 0xFF07;\n\t  t['r'] = 0x0072;\n\t  t['raarmenian'] = 0x057C;\n\t  t['rabengali'] = 0x09B0;\n\t  t['racute'] = 0x0155;\n\t  t['radeva'] = 0x0930;\n\t  t['radical'] = 0x221A;\n\t  t['radicalex'] = 0xF8E5;\n\t  t['radoverssquare'] = 0x33AE;\n\t  t['radoverssquaredsquare'] = 0x33AF;\n\t  t['radsquare'] = 0x33AD;\n\t  t['rafe'] = 0x05BF;\n\t  t['rafehebrew'] = 0x05BF;\n\t  t['ragujarati'] = 0x0AB0;\n\t  t['ragurmukhi'] = 0x0A30;\n\t  t['rahiragana'] = 0x3089;\n\t  t['rakatakana'] = 0x30E9;\n\t  t['rakatakanahalfwidth'] = 0xFF97;\n\t  t['ralowerdiagonalbengali'] = 0x09F1;\n\t  t['ramiddlediagonalbengali'] = 0x09F0;\n\t  t['ramshorn'] = 0x0264;\n\t  t['ratio'] = 0x2236;\n\t  t['rbopomofo'] = 0x3116;\n\t  t['rcaron'] = 0x0159;\n\t  t['rcedilla'] = 0x0157;\n\t  t['rcircle'] = 0x24E1;\n\t  t['rcommaaccent'] = 0x0157;\n\t  t['rdblgrave'] = 0x0211;\n\t  t['rdotaccent'] = 0x1E59;\n\t  t['rdotbelow'] = 0x1E5B;\n\t  t['rdotbelowmacron'] = 0x1E5D;\n\t  t['referencemark'] = 0x203B;\n\t  t['reflexsubset'] = 0x2286;\n\t  t['reflexsuperset'] = 0x2287;\n\t  t['registered'] = 0x00AE;\n\t  t['registersans'] = 0xF8E8;\n\t  t['registerserif'] = 0xF6DA;\n\t  t['reharabic'] = 0x0631;\n\t  t['reharmenian'] = 0x0580;\n\t  t['rehfinalarabic'] = 0xFEAE;\n\t  t['rehiragana'] = 0x308C;\n\t  t['rekatakana'] = 0x30EC;\n\t  t['rekatakanahalfwidth'] = 0xFF9A;\n\t  t['resh'] = 0x05E8;\n\t  t['reshdageshhebrew'] = 0xFB48;\n\t  t['reshhebrew'] = 0x05E8;\n\t  t['reversedtilde'] = 0x223D;\n\t  t['reviahebrew'] = 0x0597;\n\t  t['reviamugrashhebrew'] = 0x0597;\n\t  t['revlogicalnot'] = 0x2310;\n\t  t['rfishhook'] = 0x027E;\n\t  t['rfishhookreversed'] = 0x027F;\n\t  t['rhabengali'] = 0x09DD;\n\t  t['rhadeva'] = 0x095D;\n\t  t['rho'] = 0x03C1;\n\t  t['rhook'] = 0x027D;\n\t  t['rhookturned'] = 0x027B;\n\t  t['rhookturnedsuperior'] = 0x02B5;\n\t  t['rhosymbolgreek'] = 0x03F1;\n\t  t['rhotichookmod'] = 0x02DE;\n\t  t['rieulacirclekorean'] = 0x3271;\n\t  t['rieulaparenkorean'] = 0x3211;\n\t  t['rieulcirclekorean'] = 0x3263;\n\t  t['rieulhieuhkorean'] = 0x3140;\n\t  t['rieulkiyeokkorean'] = 0x313A;\n\t  t['rieulkiyeoksioskorean'] = 0x3169;\n\t  t['rieulkorean'] = 0x3139;\n\t  t['rieulmieumkorean'] = 0x313B;\n\t  t['rieulpansioskorean'] = 0x316C;\n\t  t['rieulparenkorean'] = 0x3203;\n\t  t['rieulphieuphkorean'] = 0x313F;\n\t  t['rieulpieupkorean'] = 0x313C;\n\t  t['rieulpieupsioskorean'] = 0x316B;\n\t  t['rieulsioskorean'] = 0x313D;\n\t  t['rieulthieuthkorean'] = 0x313E;\n\t  t['rieultikeutkorean'] = 0x316A;\n\t  t['rieulyeorinhieuhkorean'] = 0x316D;\n\t  t['rightangle'] = 0x221F;\n\t  t['righttackbelowcmb'] = 0x0319;\n\t  t['righttriangle'] = 0x22BF;\n\t  t['rihiragana'] = 0x308A;\n\t  t['rikatakana'] = 0x30EA;\n\t  t['rikatakanahalfwidth'] = 0xFF98;\n\t  t['ring'] = 0x02DA;\n\t  t['ringbelowcmb'] = 0x0325;\n\t  t['ringcmb'] = 0x030A;\n\t  t['ringhalfleft'] = 0x02BF;\n\t  t['ringhalfleftarmenian'] = 0x0559;\n\t  t['ringhalfleftbelowcmb'] = 0x031C;\n\t  t['ringhalfleftcentered'] = 0x02D3;\n\t  t['ringhalfright'] = 0x02BE;\n\t  t['ringhalfrightbelowcmb'] = 0x0339;\n\t  t['ringhalfrightcentered'] = 0x02D2;\n\t  t['rinvertedbreve'] = 0x0213;\n\t  t['rittorusquare'] = 0x3351;\n\t  t['rlinebelow'] = 0x1E5F;\n\t  t['rlongleg'] = 0x027C;\n\t  t['rlonglegturned'] = 0x027A;\n\t  t['rmonospace'] = 0xFF52;\n\t  t['rohiragana'] = 0x308D;\n\t  t['rokatakana'] = 0x30ED;\n\t  t['rokatakanahalfwidth'] = 0xFF9B;\n\t  t['roruathai'] = 0x0E23;\n\t  t['rparen'] = 0x24AD;\n\t  t['rrabengali'] = 0x09DC;\n\t  t['rradeva'] = 0x0931;\n\t  t['rragurmukhi'] = 0x0A5C;\n\t  t['rreharabic'] = 0x0691;\n\t  t['rrehfinalarabic'] = 0xFB8D;\n\t  t['rrvocalicbengali'] = 0x09E0;\n\t  t['rrvocalicdeva'] = 0x0960;\n\t  t['rrvocalicgujarati'] = 0x0AE0;\n\t  t['rrvocalicvowelsignbengali'] = 0x09C4;\n\t  t['rrvocalicvowelsigndeva'] = 0x0944;\n\t  t['rrvocalicvowelsigngujarati'] = 0x0AC4;\n\t  t['rsuperior'] = 0xF6F1;\n\t  t['rtblock'] = 0x2590;\n\t  t['rturned'] = 0x0279;\n\t  t['rturnedsuperior'] = 0x02B4;\n\t  t['ruhiragana'] = 0x308B;\n\t  t['rukatakana'] = 0x30EB;\n\t  t['rukatakanahalfwidth'] = 0xFF99;\n\t  t['rupeemarkbengali'] = 0x09F2;\n\t  t['rupeesignbengali'] = 0x09F3;\n\t  t['rupiah'] = 0xF6DD;\n\t  t['ruthai'] = 0x0E24;\n\t  t['rvocalicbengali'] = 0x098B;\n\t  t['rvocalicdeva'] = 0x090B;\n\t  t['rvocalicgujarati'] = 0x0A8B;\n\t  t['rvocalicvowelsignbengali'] = 0x09C3;\n\t  t['rvocalicvowelsigndeva'] = 0x0943;\n\t  t['rvocalicvowelsigngujarati'] = 0x0AC3;\n\t  t['s'] = 0x0073;\n\t  t['sabengali'] = 0x09B8;\n\t  t['sacute'] = 0x015B;\n\t  t['sacutedotaccent'] = 0x1E65;\n\t  t['sadarabic'] = 0x0635;\n\t  t['sadeva'] = 0x0938;\n\t  t['sadfinalarabic'] = 0xFEBA;\n\t  t['sadinitialarabic'] = 0xFEBB;\n\t  t['sadmedialarabic'] = 0xFEBC;\n\t  t['sagujarati'] = 0x0AB8;\n\t  t['sagurmukhi'] = 0x0A38;\n\t  t['sahiragana'] = 0x3055;\n\t  t['sakatakana'] = 0x30B5;\n\t  t['sakatakanahalfwidth'] = 0xFF7B;\n\t  t['sallallahoualayhewasallamarabic'] = 0xFDFA;\n\t  t['samekh'] = 0x05E1;\n\t  t['samekhdagesh'] = 0xFB41;\n\t  t['samekhdageshhebrew'] = 0xFB41;\n\t  t['samekhhebrew'] = 0x05E1;\n\t  t['saraaathai'] = 0x0E32;\n\t  t['saraaethai'] = 0x0E41;\n\t  t['saraaimaimalaithai'] = 0x0E44;\n\t  t['saraaimaimuanthai'] = 0x0E43;\n\t  t['saraamthai'] = 0x0E33;\n\t  t['saraathai'] = 0x0E30;\n\t  t['saraethai'] = 0x0E40;\n\t  t['saraiileftthai'] = 0xF886;\n\t  t['saraiithai'] = 0x0E35;\n\t  t['saraileftthai'] = 0xF885;\n\t  t['saraithai'] = 0x0E34;\n\t  t['saraothai'] = 0x0E42;\n\t  t['saraueeleftthai'] = 0xF888;\n\t  t['saraueethai'] = 0x0E37;\n\t  t['saraueleftthai'] = 0xF887;\n\t  t['sarauethai'] = 0x0E36;\n\t  t['sarauthai'] = 0x0E38;\n\t  t['sarauuthai'] = 0x0E39;\n\t  t['sbopomofo'] = 0x3119;\n\t  t['scaron'] = 0x0161;\n\t  t['scarondotaccent'] = 0x1E67;\n\t  t['scedilla'] = 0x015F;\n\t  t['schwa'] = 0x0259;\n\t  t['schwacyrillic'] = 0x04D9;\n\t  t['schwadieresiscyrillic'] = 0x04DB;\n\t  t['schwahook'] = 0x025A;\n\t  t['scircle'] = 0x24E2;\n\t  t['scircumflex'] = 0x015D;\n\t  t['scommaaccent'] = 0x0219;\n\t  t['sdotaccent'] = 0x1E61;\n\t  t['sdotbelow'] = 0x1E63;\n\t  t['sdotbelowdotaccent'] = 0x1E69;\n\t  t['seagullbelowcmb'] = 0x033C;\n\t  t['second'] = 0x2033;\n\t  t['secondtonechinese'] = 0x02CA;\n\t  t['section'] = 0x00A7;\n\t  t['seenarabic'] = 0x0633;\n\t  t['seenfinalarabic'] = 0xFEB2;\n\t  t['seeninitialarabic'] = 0xFEB3;\n\t  t['seenmedialarabic'] = 0xFEB4;\n\t  t['segol'] = 0x05B6;\n\t  t['segol13'] = 0x05B6;\n\t  t['segol1f'] = 0x05B6;\n\t  t['segol2c'] = 0x05B6;\n\t  t['segolhebrew'] = 0x05B6;\n\t  t['segolnarrowhebrew'] = 0x05B6;\n\t  t['segolquarterhebrew'] = 0x05B6;\n\t  t['segoltahebrew'] = 0x0592;\n\t  t['segolwidehebrew'] = 0x05B6;\n\t  t['seharmenian'] = 0x057D;\n\t  t['sehiragana'] = 0x305B;\n\t  t['sekatakana'] = 0x30BB;\n\t  t['sekatakanahalfwidth'] = 0xFF7E;\n\t  t['semicolon'] = 0x003B;\n\t  t['semicolonarabic'] = 0x061B;\n\t  t['semicolonmonospace'] = 0xFF1B;\n\t  t['semicolonsmall'] = 0xFE54;\n\t  t['semivoicedmarkkana'] = 0x309C;\n\t  t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\n\t  t['sentisquare'] = 0x3322;\n\t  t['sentosquare'] = 0x3323;\n\t  t['seven'] = 0x0037;\n\t  t['sevenarabic'] = 0x0667;\n\t  t['sevenbengali'] = 0x09ED;\n\t  t['sevencircle'] = 0x2466;\n\t  t['sevencircleinversesansserif'] = 0x2790;\n\t  t['sevendeva'] = 0x096D;\n\t  t['seveneighths'] = 0x215E;\n\t  t['sevengujarati'] = 0x0AED;\n\t  t['sevengurmukhi'] = 0x0A6D;\n\t  t['sevenhackarabic'] = 0x0667;\n\t  t['sevenhangzhou'] = 0x3027;\n\t  t['sevenideographicparen'] = 0x3226;\n\t  t['seveninferior'] = 0x2087;\n\t  t['sevenmonospace'] = 0xFF17;\n\t  t['sevenoldstyle'] = 0xF737;\n\t  t['sevenparen'] = 0x247A;\n\t  t['sevenperiod'] = 0x248E;\n\t  t['sevenpersian'] = 0x06F7;\n\t  t['sevenroman'] = 0x2176;\n\t  t['sevensuperior'] = 0x2077;\n\t  t['seventeencircle'] = 0x2470;\n\t  t['seventeenparen'] = 0x2484;\n\t  t['seventeenperiod'] = 0x2498;\n\t  t['seventhai'] = 0x0E57;\n\t  t['sfthyphen'] = 0x00AD;\n\t  t['shaarmenian'] = 0x0577;\n\t  t['shabengali'] = 0x09B6;\n\t  t['shacyrillic'] = 0x0448;\n\t  t['shaddaarabic'] = 0x0651;\n\t  t['shaddadammaarabic'] = 0xFC61;\n\t  t['shaddadammatanarabic'] = 0xFC5E;\n\t  t['shaddafathaarabic'] = 0xFC60;\n\t  t['shaddakasraarabic'] = 0xFC62;\n\t  t['shaddakasratanarabic'] = 0xFC5F;\n\t  t['shade'] = 0x2592;\n\t  t['shadedark'] = 0x2593;\n\t  t['shadelight'] = 0x2591;\n\t  t['shademedium'] = 0x2592;\n\t  t['shadeva'] = 0x0936;\n\t  t['shagujarati'] = 0x0AB6;\n\t  t['shagurmukhi'] = 0x0A36;\n\t  t['shalshelethebrew'] = 0x0593;\n\t  t['shbopomofo'] = 0x3115;\n\t  t['shchacyrillic'] = 0x0449;\n\t  t['sheenarabic'] = 0x0634;\n\t  t['sheenfinalarabic'] = 0xFEB6;\n\t  t['sheeninitialarabic'] = 0xFEB7;\n\t  t['sheenmedialarabic'] = 0xFEB8;\n\t  t['sheicoptic'] = 0x03E3;\n\t  t['sheqel'] = 0x20AA;\n\t  t['sheqelhebrew'] = 0x20AA;\n\t  t['sheva'] = 0x05B0;\n\t  t['sheva115'] = 0x05B0;\n\t  t['sheva15'] = 0x05B0;\n\t  t['sheva22'] = 0x05B0;\n\t  t['sheva2e'] = 0x05B0;\n\t  t['shevahebrew'] = 0x05B0;\n\t  t['shevanarrowhebrew'] = 0x05B0;\n\t  t['shevaquarterhebrew'] = 0x05B0;\n\t  t['shevawidehebrew'] = 0x05B0;\n\t  t['shhacyrillic'] = 0x04BB;\n\t  t['shimacoptic'] = 0x03ED;\n\t  t['shin'] = 0x05E9;\n\t  t['shindagesh'] = 0xFB49;\n\t  t['shindageshhebrew'] = 0xFB49;\n\t  t['shindageshshindot'] = 0xFB2C;\n\t  t['shindageshshindothebrew'] = 0xFB2C;\n\t  t['shindageshsindot'] = 0xFB2D;\n\t  t['shindageshsindothebrew'] = 0xFB2D;\n\t  t['shindothebrew'] = 0x05C1;\n\t  t['shinhebrew'] = 0x05E9;\n\t  t['shinshindot'] = 0xFB2A;\n\t  t['shinshindothebrew'] = 0xFB2A;\n\t  t['shinsindot'] = 0xFB2B;\n\t  t['shinsindothebrew'] = 0xFB2B;\n\t  t['shook'] = 0x0282;\n\t  t['sigma'] = 0x03C3;\n\t  t['sigma1'] = 0x03C2;\n\t  t['sigmafinal'] = 0x03C2;\n\t  t['sigmalunatesymbolgreek'] = 0x03F2;\n\t  t['sihiragana'] = 0x3057;\n\t  t['sikatakana'] = 0x30B7;\n\t  t['sikatakanahalfwidth'] = 0xFF7C;\n\t  t['siluqhebrew'] = 0x05BD;\n\t  t['siluqlefthebrew'] = 0x05BD;\n\t  t['similar'] = 0x223C;\n\t  t['sindothebrew'] = 0x05C2;\n\t  t['siosacirclekorean'] = 0x3274;\n\t  t['siosaparenkorean'] = 0x3214;\n\t  t['sioscieuckorean'] = 0x317E;\n\t  t['sioscirclekorean'] = 0x3266;\n\t  t['sioskiyeokkorean'] = 0x317A;\n\t  t['sioskorean'] = 0x3145;\n\t  t['siosnieunkorean'] = 0x317B;\n\t  t['siosparenkorean'] = 0x3206;\n\t  t['siospieupkorean'] = 0x317D;\n\t  t['siostikeutkorean'] = 0x317C;\n\t  t['six'] = 0x0036;\n\t  t['sixarabic'] = 0x0666;\n\t  t['sixbengali'] = 0x09EC;\n\t  t['sixcircle'] = 0x2465;\n\t  t['sixcircleinversesansserif'] = 0x278F;\n\t  t['sixdeva'] = 0x096C;\n\t  t['sixgujarati'] = 0x0AEC;\n\t  t['sixgurmukhi'] = 0x0A6C;\n\t  t['sixhackarabic'] = 0x0666;\n\t  t['sixhangzhou'] = 0x3026;\n\t  t['sixideographicparen'] = 0x3225;\n\t  t['sixinferior'] = 0x2086;\n\t  t['sixmonospace'] = 0xFF16;\n\t  t['sixoldstyle'] = 0xF736;\n\t  t['sixparen'] = 0x2479;\n\t  t['sixperiod'] = 0x248D;\n\t  t['sixpersian'] = 0x06F6;\n\t  t['sixroman'] = 0x2175;\n\t  t['sixsuperior'] = 0x2076;\n\t  t['sixteencircle'] = 0x246F;\n\t  t['sixteencurrencydenominatorbengali'] = 0x09F9;\n\t  t['sixteenparen'] = 0x2483;\n\t  t['sixteenperiod'] = 0x2497;\n\t  t['sixthai'] = 0x0E56;\n\t  t['slash'] = 0x002F;\n\t  t['slashmonospace'] = 0xFF0F;\n\t  t['slong'] = 0x017F;\n\t  t['slongdotaccent'] = 0x1E9B;\n\t  t['smileface'] = 0x263A;\n\t  t['smonospace'] = 0xFF53;\n\t  t['sofpasuqhebrew'] = 0x05C3;\n\t  t['softhyphen'] = 0x00AD;\n\t  t['softsigncyrillic'] = 0x044C;\n\t  t['sohiragana'] = 0x305D;\n\t  t['sokatakana'] = 0x30BD;\n\t  t['sokatakanahalfwidth'] = 0xFF7F;\n\t  t['soliduslongoverlaycmb'] = 0x0338;\n\t  t['solidusshortoverlaycmb'] = 0x0337;\n\t  t['sorusithai'] = 0x0E29;\n\t  t['sosalathai'] = 0x0E28;\n\t  t['sosothai'] = 0x0E0B;\n\t  t['sosuathai'] = 0x0E2A;\n\t  t['space'] = 0x0020;\n\t  t['spacehackarabic'] = 0x0020;\n\t  t['spade'] = 0x2660;\n\t  t['spadesuitblack'] = 0x2660;\n\t  t['spadesuitwhite'] = 0x2664;\n\t  t['sparen'] = 0x24AE;\n\t  t['squarebelowcmb'] = 0x033B;\n\t  t['squarecc'] = 0x33C4;\n\t  t['squarecm'] = 0x339D;\n\t  t['squarediagonalcrosshatchfill'] = 0x25A9;\n\t  t['squarehorizontalfill'] = 0x25A4;\n\t  t['squarekg'] = 0x338F;\n\t  t['squarekm'] = 0x339E;\n\t  t['squarekmcapital'] = 0x33CE;\n\t  t['squareln'] = 0x33D1;\n\t  t['squarelog'] = 0x33D2;\n\t  t['squaremg'] = 0x338E;\n\t  t['squaremil'] = 0x33D5;\n\t  t['squaremm'] = 0x339C;\n\t  t['squaremsquared'] = 0x33A1;\n\t  t['squareorthogonalcrosshatchfill'] = 0x25A6;\n\t  t['squareupperlefttolowerrightfill'] = 0x25A7;\n\t  t['squareupperrighttolowerleftfill'] = 0x25A8;\n\t  t['squareverticalfill'] = 0x25A5;\n\t  t['squarewhitewithsmallblack'] = 0x25A3;\n\t  t['srsquare'] = 0x33DB;\n\t  t['ssabengali'] = 0x09B7;\n\t  t['ssadeva'] = 0x0937;\n\t  t['ssagujarati'] = 0x0AB7;\n\t  t['ssangcieuckorean'] = 0x3149;\n\t  t['ssanghieuhkorean'] = 0x3185;\n\t  t['ssangieungkorean'] = 0x3180;\n\t  t['ssangkiyeokkorean'] = 0x3132;\n\t  t['ssangnieunkorean'] = 0x3165;\n\t  t['ssangpieupkorean'] = 0x3143;\n\t  t['ssangsioskorean'] = 0x3146;\n\t  t['ssangtikeutkorean'] = 0x3138;\n\t  t['ssuperior'] = 0xF6F2;\n\t  t['sterling'] = 0x00A3;\n\t  t['sterlingmonospace'] = 0xFFE1;\n\t  t['strokelongoverlaycmb'] = 0x0336;\n\t  t['strokeshortoverlaycmb'] = 0x0335;\n\t  t['subset'] = 0x2282;\n\t  t['subsetnotequal'] = 0x228A;\n\t  t['subsetorequal'] = 0x2286;\n\t  t['succeeds'] = 0x227B;\n\t  t['suchthat'] = 0x220B;\n\t  t['suhiragana'] = 0x3059;\n\t  t['sukatakana'] = 0x30B9;\n\t  t['sukatakanahalfwidth'] = 0xFF7D;\n\t  t['sukunarabic'] = 0x0652;\n\t  t['summation'] = 0x2211;\n\t  t['sun'] = 0x263C;\n\t  t['superset'] = 0x2283;\n\t  t['supersetnotequal'] = 0x228B;\n\t  t['supersetorequal'] = 0x2287;\n\t  t['svsquare'] = 0x33DC;\n\t  t['syouwaerasquare'] = 0x337C;\n\t  t['t'] = 0x0074;\n\t  t['tabengali'] = 0x09A4;\n\t  t['tackdown'] = 0x22A4;\n\t  t['tackleft'] = 0x22A3;\n\t  t['tadeva'] = 0x0924;\n\t  t['tagujarati'] = 0x0AA4;\n\t  t['tagurmukhi'] = 0x0A24;\n\t  t['taharabic'] = 0x0637;\n\t  t['tahfinalarabic'] = 0xFEC2;\n\t  t['tahinitialarabic'] = 0xFEC3;\n\t  t['tahiragana'] = 0x305F;\n\t  t['tahmedialarabic'] = 0xFEC4;\n\t  t['taisyouerasquare'] = 0x337D;\n\t  t['takatakana'] = 0x30BF;\n\t  t['takatakanahalfwidth'] = 0xFF80;\n\t  t['tatweelarabic'] = 0x0640;\n\t  t['tau'] = 0x03C4;\n\t  t['tav'] = 0x05EA;\n\t  t['tavdages'] = 0xFB4A;\n\t  t['tavdagesh'] = 0xFB4A;\n\t  t['tavdageshhebrew'] = 0xFB4A;\n\t  t['tavhebrew'] = 0x05EA;\n\t  t['tbar'] = 0x0167;\n\t  t['tbopomofo'] = 0x310A;\n\t  t['tcaron'] = 0x0165;\n\t  t['tccurl'] = 0x02A8;\n\t  t['tcedilla'] = 0x0163;\n\t  t['tcheharabic'] = 0x0686;\n\t  t['tchehfinalarabic'] = 0xFB7B;\n\t  t['tchehinitialarabic'] = 0xFB7C;\n\t  t['tchehmedialarabic'] = 0xFB7D;\n\t  t['tcircle'] = 0x24E3;\n\t  t['tcircumflexbelow'] = 0x1E71;\n\t  t['tcommaaccent'] = 0x0163;\n\t  t['tdieresis'] = 0x1E97;\n\t  t['tdotaccent'] = 0x1E6B;\n\t  t['tdotbelow'] = 0x1E6D;\n\t  t['tecyrillic'] = 0x0442;\n\t  t['tedescendercyrillic'] = 0x04AD;\n\t  t['teharabic'] = 0x062A;\n\t  t['tehfinalarabic'] = 0xFE96;\n\t  t['tehhahinitialarabic'] = 0xFCA2;\n\t  t['tehhahisolatedarabic'] = 0xFC0C;\n\t  t['tehinitialarabic'] = 0xFE97;\n\t  t['tehiragana'] = 0x3066;\n\t  t['tehjeeminitialarabic'] = 0xFCA1;\n\t  t['tehjeemisolatedarabic'] = 0xFC0B;\n\t  t['tehmarbutaarabic'] = 0x0629;\n\t  t['tehmarbutafinalarabic'] = 0xFE94;\n\t  t['tehmedialarabic'] = 0xFE98;\n\t  t['tehmeeminitialarabic'] = 0xFCA4;\n\t  t['tehmeemisolatedarabic'] = 0xFC0E;\n\t  t['tehnoonfinalarabic'] = 0xFC73;\n\t  t['tekatakana'] = 0x30C6;\n\t  t['tekatakanahalfwidth'] = 0xFF83;\n\t  t['telephone'] = 0x2121;\n\t  t['telephoneblack'] = 0x260E;\n\t  t['telishagedolahebrew'] = 0x05A0;\n\t  t['telishaqetanahebrew'] = 0x05A9;\n\t  t['tencircle'] = 0x2469;\n\t  t['tenideographicparen'] = 0x3229;\n\t  t['tenparen'] = 0x247D;\n\t  t['tenperiod'] = 0x2491;\n\t  t['tenroman'] = 0x2179;\n\t  t['tesh'] = 0x02A7;\n\t  t['tet'] = 0x05D8;\n\t  t['tetdagesh'] = 0xFB38;\n\t  t['tetdageshhebrew'] = 0xFB38;\n\t  t['tethebrew'] = 0x05D8;\n\t  t['tetsecyrillic'] = 0x04B5;\n\t  t['tevirhebrew'] = 0x059B;\n\t  t['tevirlefthebrew'] = 0x059B;\n\t  t['thabengali'] = 0x09A5;\n\t  t['thadeva'] = 0x0925;\n\t  t['thagujarati'] = 0x0AA5;\n\t  t['thagurmukhi'] = 0x0A25;\n\t  t['thalarabic'] = 0x0630;\n\t  t['thalfinalarabic'] = 0xFEAC;\n\t  t['thanthakhatlowleftthai'] = 0xF898;\n\t  t['thanthakhatlowrightthai'] = 0xF897;\n\t  t['thanthakhatthai'] = 0x0E4C;\n\t  t['thanthakhatupperleftthai'] = 0xF896;\n\t  t['theharabic'] = 0x062B;\n\t  t['thehfinalarabic'] = 0xFE9A;\n\t  t['thehinitialarabic'] = 0xFE9B;\n\t  t['thehmedialarabic'] = 0xFE9C;\n\t  t['thereexists'] = 0x2203;\n\t  t['therefore'] = 0x2234;\n\t  t['theta'] = 0x03B8;\n\t  t['theta1'] = 0x03D1;\n\t  t['thetasymbolgreek'] = 0x03D1;\n\t  t['thieuthacirclekorean'] = 0x3279;\n\t  t['thieuthaparenkorean'] = 0x3219;\n\t  t['thieuthcirclekorean'] = 0x326B;\n\t  t['thieuthkorean'] = 0x314C;\n\t  t['thieuthparenkorean'] = 0x320B;\n\t  t['thirteencircle'] = 0x246C;\n\t  t['thirteenparen'] = 0x2480;\n\t  t['thirteenperiod'] = 0x2494;\n\t  t['thonangmonthothai'] = 0x0E11;\n\t  t['thook'] = 0x01AD;\n\t  t['thophuthaothai'] = 0x0E12;\n\t  t['thorn'] = 0x00FE;\n\t  t['thothahanthai'] = 0x0E17;\n\t  t['thothanthai'] = 0x0E10;\n\t  t['thothongthai'] = 0x0E18;\n\t  t['thothungthai'] = 0x0E16;\n\t  t['thousandcyrillic'] = 0x0482;\n\t  t['thousandsseparatorarabic'] = 0x066C;\n\t  t['thousandsseparatorpersian'] = 0x066C;\n\t  t['three'] = 0x0033;\n\t  t['threearabic'] = 0x0663;\n\t  t['threebengali'] = 0x09E9;\n\t  t['threecircle'] = 0x2462;\n\t  t['threecircleinversesansserif'] = 0x278C;\n\t  t['threedeva'] = 0x0969;\n\t  t['threeeighths'] = 0x215C;\n\t  t['threegujarati'] = 0x0AE9;\n\t  t['threegurmukhi'] = 0x0A69;\n\t  t['threehackarabic'] = 0x0663;\n\t  t['threehangzhou'] = 0x3023;\n\t  t['threeideographicparen'] = 0x3222;\n\t  t['threeinferior'] = 0x2083;\n\t  t['threemonospace'] = 0xFF13;\n\t  t['threenumeratorbengali'] = 0x09F6;\n\t  t['threeoldstyle'] = 0xF733;\n\t  t['threeparen'] = 0x2476;\n\t  t['threeperiod'] = 0x248A;\n\t  t['threepersian'] = 0x06F3;\n\t  t['threequarters'] = 0x00BE;\n\t  t['threequartersemdash'] = 0xF6DE;\n\t  t['threeroman'] = 0x2172;\n\t  t['threesuperior'] = 0x00B3;\n\t  t['threethai'] = 0x0E53;\n\t  t['thzsquare'] = 0x3394;\n\t  t['tihiragana'] = 0x3061;\n\t  t['tikatakana'] = 0x30C1;\n\t  t['tikatakanahalfwidth'] = 0xFF81;\n\t  t['tikeutacirclekorean'] = 0x3270;\n\t  t['tikeutaparenkorean'] = 0x3210;\n\t  t['tikeutcirclekorean'] = 0x3262;\n\t  t['tikeutkorean'] = 0x3137;\n\t  t['tikeutparenkorean'] = 0x3202;\n\t  t['tilde'] = 0x02DC;\n\t  t['tildebelowcmb'] = 0x0330;\n\t  t['tildecmb'] = 0x0303;\n\t  t['tildecomb'] = 0x0303;\n\t  t['tildedoublecmb'] = 0x0360;\n\t  t['tildeoperator'] = 0x223C;\n\t  t['tildeoverlaycmb'] = 0x0334;\n\t  t['tildeverticalcmb'] = 0x033E;\n\t  t['timescircle'] = 0x2297;\n\t  t['tipehahebrew'] = 0x0596;\n\t  t['tipehalefthebrew'] = 0x0596;\n\t  t['tippigurmukhi'] = 0x0A70;\n\t  t['titlocyrilliccmb'] = 0x0483;\n\t  t['tiwnarmenian'] = 0x057F;\n\t  t['tlinebelow'] = 0x1E6F;\n\t  t['tmonospace'] = 0xFF54;\n\t  t['toarmenian'] = 0x0569;\n\t  t['tohiragana'] = 0x3068;\n\t  t['tokatakana'] = 0x30C8;\n\t  t['tokatakanahalfwidth'] = 0xFF84;\n\t  t['tonebarextrahighmod'] = 0x02E5;\n\t  t['tonebarextralowmod'] = 0x02E9;\n\t  t['tonebarhighmod'] = 0x02E6;\n\t  t['tonebarlowmod'] = 0x02E8;\n\t  t['tonebarmidmod'] = 0x02E7;\n\t  t['tonefive'] = 0x01BD;\n\t  t['tonesix'] = 0x0185;\n\t  t['tonetwo'] = 0x01A8;\n\t  t['tonos'] = 0x0384;\n\t  t['tonsquare'] = 0x3327;\n\t  t['topatakthai'] = 0x0E0F;\n\t  t['tortoiseshellbracketleft'] = 0x3014;\n\t  t['tortoiseshellbracketleftsmall'] = 0xFE5D;\n\t  t['tortoiseshellbracketleftvertical'] = 0xFE39;\n\t  t['tortoiseshellbracketright'] = 0x3015;\n\t  t['tortoiseshellbracketrightsmall'] = 0xFE5E;\n\t  t['tortoiseshellbracketrightvertical'] = 0xFE3A;\n\t  t['totaothai'] = 0x0E15;\n\t  t['tpalatalhook'] = 0x01AB;\n\t  t['tparen'] = 0x24AF;\n\t  t['trademark'] = 0x2122;\n\t  t['trademarksans'] = 0xF8EA;\n\t  t['trademarkserif'] = 0xF6DB;\n\t  t['tretroflexhook'] = 0x0288;\n\t  t['triagdn'] = 0x25BC;\n\t  t['triaglf'] = 0x25C4;\n\t  t['triagrt'] = 0x25BA;\n\t  t['triagup'] = 0x25B2;\n\t  t['ts'] = 0x02A6;\n\t  t['tsadi'] = 0x05E6;\n\t  t['tsadidagesh'] = 0xFB46;\n\t  t['tsadidageshhebrew'] = 0xFB46;\n\t  t['tsadihebrew'] = 0x05E6;\n\t  t['tsecyrillic'] = 0x0446;\n\t  t['tsere'] = 0x05B5;\n\t  t['tsere12'] = 0x05B5;\n\t  t['tsere1e'] = 0x05B5;\n\t  t['tsere2b'] = 0x05B5;\n\t  t['tserehebrew'] = 0x05B5;\n\t  t['tserenarrowhebrew'] = 0x05B5;\n\t  t['tserequarterhebrew'] = 0x05B5;\n\t  t['tserewidehebrew'] = 0x05B5;\n\t  t['tshecyrillic'] = 0x045B;\n\t  t['tsuperior'] = 0xF6F3;\n\t  t['ttabengali'] = 0x099F;\n\t  t['ttadeva'] = 0x091F;\n\t  t['ttagujarati'] = 0x0A9F;\n\t  t['ttagurmukhi'] = 0x0A1F;\n\t  t['tteharabic'] = 0x0679;\n\t  t['ttehfinalarabic'] = 0xFB67;\n\t  t['ttehinitialarabic'] = 0xFB68;\n\t  t['ttehmedialarabic'] = 0xFB69;\n\t  t['tthabengali'] = 0x09A0;\n\t  t['tthadeva'] = 0x0920;\n\t  t['tthagujarati'] = 0x0AA0;\n\t  t['tthagurmukhi'] = 0x0A20;\n\t  t['tturned'] = 0x0287;\n\t  t['tuhiragana'] = 0x3064;\n\t  t['tukatakana'] = 0x30C4;\n\t  t['tukatakanahalfwidth'] = 0xFF82;\n\t  t['tusmallhiragana'] = 0x3063;\n\t  t['tusmallkatakana'] = 0x30C3;\n\t  t['tusmallkatakanahalfwidth'] = 0xFF6F;\n\t  t['twelvecircle'] = 0x246B;\n\t  t['twelveparen'] = 0x247F;\n\t  t['twelveperiod'] = 0x2493;\n\t  t['twelveroman'] = 0x217B;\n\t  t['twentycircle'] = 0x2473;\n\t  t['twentyhangzhou'] = 0x5344;\n\t  t['twentyparen'] = 0x2487;\n\t  t['twentyperiod'] = 0x249B;\n\t  t['two'] = 0x0032;\n\t  t['twoarabic'] = 0x0662;\n\t  t['twobengali'] = 0x09E8;\n\t  t['twocircle'] = 0x2461;\n\t  t['twocircleinversesansserif'] = 0x278B;\n\t  t['twodeva'] = 0x0968;\n\t  t['twodotenleader'] = 0x2025;\n\t  t['twodotleader'] = 0x2025;\n\t  t['twodotleadervertical'] = 0xFE30;\n\t  t['twogujarati'] = 0x0AE8;\n\t  t['twogurmukhi'] = 0x0A68;\n\t  t['twohackarabic'] = 0x0662;\n\t  t['twohangzhou'] = 0x3022;\n\t  t['twoideographicparen'] = 0x3221;\n\t  t['twoinferior'] = 0x2082;\n\t  t['twomonospace'] = 0xFF12;\n\t  t['twonumeratorbengali'] = 0x09F5;\n\t  t['twooldstyle'] = 0xF732;\n\t  t['twoparen'] = 0x2475;\n\t  t['twoperiod'] = 0x2489;\n\t  t['twopersian'] = 0x06F2;\n\t  t['tworoman'] = 0x2171;\n\t  t['twostroke'] = 0x01BB;\n\t  t['twosuperior'] = 0x00B2;\n\t  t['twothai'] = 0x0E52;\n\t  t['twothirds'] = 0x2154;\n\t  t['u'] = 0x0075;\n\t  t['uacute'] = 0x00FA;\n\t  t['ubar'] = 0x0289;\n\t  t['ubengali'] = 0x0989;\n\t  t['ubopomofo'] = 0x3128;\n\t  t['ubreve'] = 0x016D;\n\t  t['ucaron'] = 0x01D4;\n\t  t['ucircle'] = 0x24E4;\n\t  t['ucircumflex'] = 0x00FB;\n\t  t['ucircumflexbelow'] = 0x1E77;\n\t  t['ucyrillic'] = 0x0443;\n\t  t['udattadeva'] = 0x0951;\n\t  t['udblacute'] = 0x0171;\n\t  t['udblgrave'] = 0x0215;\n\t  t['udeva'] = 0x0909;\n\t  t['udieresis'] = 0x00FC;\n\t  t['udieresisacute'] = 0x01D8;\n\t  t['udieresisbelow'] = 0x1E73;\n\t  t['udieresiscaron'] = 0x01DA;\n\t  t['udieresiscyrillic'] = 0x04F1;\n\t  t['udieresisgrave'] = 0x01DC;\n\t  t['udieresismacron'] = 0x01D6;\n\t  t['udotbelow'] = 0x1EE5;\n\t  t['ugrave'] = 0x00F9;\n\t  t['ugujarati'] = 0x0A89;\n\t  t['ugurmukhi'] = 0x0A09;\n\t  t['uhiragana'] = 0x3046;\n\t  t['uhookabove'] = 0x1EE7;\n\t  t['uhorn'] = 0x01B0;\n\t  t['uhornacute'] = 0x1EE9;\n\t  t['uhorndotbelow'] = 0x1EF1;\n\t  t['uhorngrave'] = 0x1EEB;\n\t  t['uhornhookabove'] = 0x1EED;\n\t  t['uhorntilde'] = 0x1EEF;\n\t  t['uhungarumlaut'] = 0x0171;\n\t  t['uhungarumlautcyrillic'] = 0x04F3;\n\t  t['uinvertedbreve'] = 0x0217;\n\t  t['ukatakana'] = 0x30A6;\n\t  t['ukatakanahalfwidth'] = 0xFF73;\n\t  t['ukcyrillic'] = 0x0479;\n\t  t['ukorean'] = 0x315C;\n\t  t['umacron'] = 0x016B;\n\t  t['umacroncyrillic'] = 0x04EF;\n\t  t['umacrondieresis'] = 0x1E7B;\n\t  t['umatragurmukhi'] = 0x0A41;\n\t  t['umonospace'] = 0xFF55;\n\t  t['underscore'] = 0x005F;\n\t  t['underscoredbl'] = 0x2017;\n\t  t['underscoremonospace'] = 0xFF3F;\n\t  t['underscorevertical'] = 0xFE33;\n\t  t['underscorewavy'] = 0xFE4F;\n\t  t['union'] = 0x222A;\n\t  t['universal'] = 0x2200;\n\t  t['uogonek'] = 0x0173;\n\t  t['uparen'] = 0x24B0;\n\t  t['upblock'] = 0x2580;\n\t  t['upperdothebrew'] = 0x05C4;\n\t  t['upsilon'] = 0x03C5;\n\t  t['upsilondieresis'] = 0x03CB;\n\t  t['upsilondieresistonos'] = 0x03B0;\n\t  t['upsilonlatin'] = 0x028A;\n\t  t['upsilontonos'] = 0x03CD;\n\t  t['uptackbelowcmb'] = 0x031D;\n\t  t['uptackmod'] = 0x02D4;\n\t  t['uragurmukhi'] = 0x0A73;\n\t  t['uring'] = 0x016F;\n\t  t['ushortcyrillic'] = 0x045E;\n\t  t['usmallhiragana'] = 0x3045;\n\t  t['usmallkatakana'] = 0x30A5;\n\t  t['usmallkatakanahalfwidth'] = 0xFF69;\n\t  t['ustraightcyrillic'] = 0x04AF;\n\t  t['ustraightstrokecyrillic'] = 0x04B1;\n\t  t['utilde'] = 0x0169;\n\t  t['utildeacute'] = 0x1E79;\n\t  t['utildebelow'] = 0x1E75;\n\t  t['uubengali'] = 0x098A;\n\t  t['uudeva'] = 0x090A;\n\t  t['uugujarati'] = 0x0A8A;\n\t  t['uugurmukhi'] = 0x0A0A;\n\t  t['uumatragurmukhi'] = 0x0A42;\n\t  t['uuvowelsignbengali'] = 0x09C2;\n\t  t['uuvowelsigndeva'] = 0x0942;\n\t  t['uuvowelsigngujarati'] = 0x0AC2;\n\t  t['uvowelsignbengali'] = 0x09C1;\n\t  t['uvowelsigndeva'] = 0x0941;\n\t  t['uvowelsigngujarati'] = 0x0AC1;\n\t  t['v'] = 0x0076;\n\t  t['vadeva'] = 0x0935;\n\t  t['vagujarati'] = 0x0AB5;\n\t  t['vagurmukhi'] = 0x0A35;\n\t  t['vakatakana'] = 0x30F7;\n\t  t['vav'] = 0x05D5;\n\t  t['vavdagesh'] = 0xFB35;\n\t  t['vavdagesh65'] = 0xFB35;\n\t  t['vavdageshhebrew'] = 0xFB35;\n\t  t['vavhebrew'] = 0x05D5;\n\t  t['vavholam'] = 0xFB4B;\n\t  t['vavholamhebrew'] = 0xFB4B;\n\t  t['vavvavhebrew'] = 0x05F0;\n\t  t['vavyodhebrew'] = 0x05F1;\n\t  t['vcircle'] = 0x24E5;\n\t  t['vdotbelow'] = 0x1E7F;\n\t  t['vecyrillic'] = 0x0432;\n\t  t['veharabic'] = 0x06A4;\n\t  t['vehfinalarabic'] = 0xFB6B;\n\t  t['vehinitialarabic'] = 0xFB6C;\n\t  t['vehmedialarabic'] = 0xFB6D;\n\t  t['vekatakana'] = 0x30F9;\n\t  t['venus'] = 0x2640;\n\t  t['verticalbar'] = 0x007C;\n\t  t['verticallineabovecmb'] = 0x030D;\n\t  t['verticallinebelowcmb'] = 0x0329;\n\t  t['verticallinelowmod'] = 0x02CC;\n\t  t['verticallinemod'] = 0x02C8;\n\t  t['vewarmenian'] = 0x057E;\n\t  t['vhook'] = 0x028B;\n\t  t['vikatakana'] = 0x30F8;\n\t  t['viramabengali'] = 0x09CD;\n\t  t['viramadeva'] = 0x094D;\n\t  t['viramagujarati'] = 0x0ACD;\n\t  t['visargabengali'] = 0x0983;\n\t  t['visargadeva'] = 0x0903;\n\t  t['visargagujarati'] = 0x0A83;\n\t  t['vmonospace'] = 0xFF56;\n\t  t['voarmenian'] = 0x0578;\n\t  t['voicediterationhiragana'] = 0x309E;\n\t  t['voicediterationkatakana'] = 0x30FE;\n\t  t['voicedmarkkana'] = 0x309B;\n\t  t['voicedmarkkanahalfwidth'] = 0xFF9E;\n\t  t['vokatakana'] = 0x30FA;\n\t  t['vparen'] = 0x24B1;\n\t  t['vtilde'] = 0x1E7D;\n\t  t['vturned'] = 0x028C;\n\t  t['vuhiragana'] = 0x3094;\n\t  t['vukatakana'] = 0x30F4;\n\t  t['w'] = 0x0077;\n\t  t['wacute'] = 0x1E83;\n\t  t['waekorean'] = 0x3159;\n\t  t['wahiragana'] = 0x308F;\n\t  t['wakatakana'] = 0x30EF;\n\t  t['wakatakanahalfwidth'] = 0xFF9C;\n\t  t['wakorean'] = 0x3158;\n\t  t['wasmallhiragana'] = 0x308E;\n\t  t['wasmallkatakana'] = 0x30EE;\n\t  t['wattosquare'] = 0x3357;\n\t  t['wavedash'] = 0x301C;\n\t  t['wavyunderscorevertical'] = 0xFE34;\n\t  t['wawarabic'] = 0x0648;\n\t  t['wawfinalarabic'] = 0xFEEE;\n\t  t['wawhamzaabovearabic'] = 0x0624;\n\t  t['wawhamzaabovefinalarabic'] = 0xFE86;\n\t  t['wbsquare'] = 0x33DD;\n\t  t['wcircle'] = 0x24E6;\n\t  t['wcircumflex'] = 0x0175;\n\t  t['wdieresis'] = 0x1E85;\n\t  t['wdotaccent'] = 0x1E87;\n\t  t['wdotbelow'] = 0x1E89;\n\t  t['wehiragana'] = 0x3091;\n\t  t['weierstrass'] = 0x2118;\n\t  t['wekatakana'] = 0x30F1;\n\t  t['wekorean'] = 0x315E;\n\t  t['weokorean'] = 0x315D;\n\t  t['wgrave'] = 0x1E81;\n\t  t['whitebullet'] = 0x25E6;\n\t  t['whitecircle'] = 0x25CB;\n\t  t['whitecircleinverse'] = 0x25D9;\n\t  t['whitecornerbracketleft'] = 0x300E;\n\t  t['whitecornerbracketleftvertical'] = 0xFE43;\n\t  t['whitecornerbracketright'] = 0x300F;\n\t  t['whitecornerbracketrightvertical'] = 0xFE44;\n\t  t['whitediamond'] = 0x25C7;\n\t  t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\n\t  t['whitedownpointingsmalltriangle'] = 0x25BF;\n\t  t['whitedownpointingtriangle'] = 0x25BD;\n\t  t['whiteleftpointingsmalltriangle'] = 0x25C3;\n\t  t['whiteleftpointingtriangle'] = 0x25C1;\n\t  t['whitelenticularbracketleft'] = 0x3016;\n\t  t['whitelenticularbracketright'] = 0x3017;\n\t  t['whiterightpointingsmalltriangle'] = 0x25B9;\n\t  t['whiterightpointingtriangle'] = 0x25B7;\n\t  t['whitesmallsquare'] = 0x25AB;\n\t  t['whitesmilingface'] = 0x263A;\n\t  t['whitesquare'] = 0x25A1;\n\t  t['whitestar'] = 0x2606;\n\t  t['whitetelephone'] = 0x260F;\n\t  t['whitetortoiseshellbracketleft'] = 0x3018;\n\t  t['whitetortoiseshellbracketright'] = 0x3019;\n\t  t['whiteuppointingsmalltriangle'] = 0x25B5;\n\t  t['whiteuppointingtriangle'] = 0x25B3;\n\t  t['wihiragana'] = 0x3090;\n\t  t['wikatakana'] = 0x30F0;\n\t  t['wikorean'] = 0x315F;\n\t  t['wmonospace'] = 0xFF57;\n\t  t['wohiragana'] = 0x3092;\n\t  t['wokatakana'] = 0x30F2;\n\t  t['wokatakanahalfwidth'] = 0xFF66;\n\t  t['won'] = 0x20A9;\n\t  t['wonmonospace'] = 0xFFE6;\n\t  t['wowaenthai'] = 0x0E27;\n\t  t['wparen'] = 0x24B2;\n\t  t['wring'] = 0x1E98;\n\t  t['wsuperior'] = 0x02B7;\n\t  t['wturned'] = 0x028D;\n\t  t['wynn'] = 0x01BF;\n\t  t['x'] = 0x0078;\n\t  t['xabovecmb'] = 0x033D;\n\t  t['xbopomofo'] = 0x3112;\n\t  t['xcircle'] = 0x24E7;\n\t  t['xdieresis'] = 0x1E8D;\n\t  t['xdotaccent'] = 0x1E8B;\n\t  t['xeharmenian'] = 0x056D;\n\t  t['xi'] = 0x03BE;\n\t  t['xmonospace'] = 0xFF58;\n\t  t['xparen'] = 0x24B3;\n\t  t['xsuperior'] = 0x02E3;\n\t  t['y'] = 0x0079;\n\t  t['yaadosquare'] = 0x334E;\n\t  t['yabengali'] = 0x09AF;\n\t  t['yacute'] = 0x00FD;\n\t  t['yadeva'] = 0x092F;\n\t  t['yaekorean'] = 0x3152;\n\t  t['yagujarati'] = 0x0AAF;\n\t  t['yagurmukhi'] = 0x0A2F;\n\t  t['yahiragana'] = 0x3084;\n\t  t['yakatakana'] = 0x30E4;\n\t  t['yakatakanahalfwidth'] = 0xFF94;\n\t  t['yakorean'] = 0x3151;\n\t  t['yamakkanthai'] = 0x0E4E;\n\t  t['yasmallhiragana'] = 0x3083;\n\t  t['yasmallkatakana'] = 0x30E3;\n\t  t['yasmallkatakanahalfwidth'] = 0xFF6C;\n\t  t['yatcyrillic'] = 0x0463;\n\t  t['ycircle'] = 0x24E8;\n\t  t['ycircumflex'] = 0x0177;\n\t  t['ydieresis'] = 0x00FF;\n\t  t['ydotaccent'] = 0x1E8F;\n\t  t['ydotbelow'] = 0x1EF5;\n\t  t['yeharabic'] = 0x064A;\n\t  t['yehbarreearabic'] = 0x06D2;\n\t  t['yehbarreefinalarabic'] = 0xFBAF;\n\t  t['yehfinalarabic'] = 0xFEF2;\n\t  t['yehhamzaabovearabic'] = 0x0626;\n\t  t['yehhamzaabovefinalarabic'] = 0xFE8A;\n\t  t['yehhamzaaboveinitialarabic'] = 0xFE8B;\n\t  t['yehhamzaabovemedialarabic'] = 0xFE8C;\n\t  t['yehinitialarabic'] = 0xFEF3;\n\t  t['yehmedialarabic'] = 0xFEF4;\n\t  t['yehmeeminitialarabic'] = 0xFCDD;\n\t  t['yehmeemisolatedarabic'] = 0xFC58;\n\t  t['yehnoonfinalarabic'] = 0xFC94;\n\t  t['yehthreedotsbelowarabic'] = 0x06D1;\n\t  t['yekorean'] = 0x3156;\n\t  t['yen'] = 0x00A5;\n\t  t['yenmonospace'] = 0xFFE5;\n\t  t['yeokorean'] = 0x3155;\n\t  t['yeorinhieuhkorean'] = 0x3186;\n\t  t['yerahbenyomohebrew'] = 0x05AA;\n\t  t['yerahbenyomolefthebrew'] = 0x05AA;\n\t  t['yericyrillic'] = 0x044B;\n\t  t['yerudieresiscyrillic'] = 0x04F9;\n\t  t['yesieungkorean'] = 0x3181;\n\t  t['yesieungpansioskorean'] = 0x3183;\n\t  t['yesieungsioskorean'] = 0x3182;\n\t  t['yetivhebrew'] = 0x059A;\n\t  t['ygrave'] = 0x1EF3;\n\t  t['yhook'] = 0x01B4;\n\t  t['yhookabove'] = 0x1EF7;\n\t  t['yiarmenian'] = 0x0575;\n\t  t['yicyrillic'] = 0x0457;\n\t  t['yikorean'] = 0x3162;\n\t  t['yinyang'] = 0x262F;\n\t  t['yiwnarmenian'] = 0x0582;\n\t  t['ymonospace'] = 0xFF59;\n\t  t['yod'] = 0x05D9;\n\t  t['yoddagesh'] = 0xFB39;\n\t  t['yoddageshhebrew'] = 0xFB39;\n\t  t['yodhebrew'] = 0x05D9;\n\t  t['yodyodhebrew'] = 0x05F2;\n\t  t['yodyodpatahhebrew'] = 0xFB1F;\n\t  t['yohiragana'] = 0x3088;\n\t  t['yoikorean'] = 0x3189;\n\t  t['yokatakana'] = 0x30E8;\n\t  t['yokatakanahalfwidth'] = 0xFF96;\n\t  t['yokorean'] = 0x315B;\n\t  t['yosmallhiragana'] = 0x3087;\n\t  t['yosmallkatakana'] = 0x30E7;\n\t  t['yosmallkatakanahalfwidth'] = 0xFF6E;\n\t  t['yotgreek'] = 0x03F3;\n\t  t['yoyaekorean'] = 0x3188;\n\t  t['yoyakorean'] = 0x3187;\n\t  t['yoyakthai'] = 0x0E22;\n\t  t['yoyingthai'] = 0x0E0D;\n\t  t['yparen'] = 0x24B4;\n\t  t['ypogegrammeni'] = 0x037A;\n\t  t['ypogegrammenigreekcmb'] = 0x0345;\n\t  t['yr'] = 0x01A6;\n\t  t['yring'] = 0x1E99;\n\t  t['ysuperior'] = 0x02B8;\n\t  t['ytilde'] = 0x1EF9;\n\t  t['yturned'] = 0x028E;\n\t  t['yuhiragana'] = 0x3086;\n\t  t['yuikorean'] = 0x318C;\n\t  t['yukatakana'] = 0x30E6;\n\t  t['yukatakanahalfwidth'] = 0xFF95;\n\t  t['yukorean'] = 0x3160;\n\t  t['yusbigcyrillic'] = 0x046B;\n\t  t['yusbigiotifiedcyrillic'] = 0x046D;\n\t  t['yuslittlecyrillic'] = 0x0467;\n\t  t['yuslittleiotifiedcyrillic'] = 0x0469;\n\t  t['yusmallhiragana'] = 0x3085;\n\t  t['yusmallkatakana'] = 0x30E5;\n\t  t['yusmallkatakanahalfwidth'] = 0xFF6D;\n\t  t['yuyekorean'] = 0x318B;\n\t  t['yuyeokorean'] = 0x318A;\n\t  t['yyabengali'] = 0x09DF;\n\t  t['yyadeva'] = 0x095F;\n\t  t['z'] = 0x007A;\n\t  t['zaarmenian'] = 0x0566;\n\t  t['zacute'] = 0x017A;\n\t  t['zadeva'] = 0x095B;\n\t  t['zagurmukhi'] = 0x0A5B;\n\t  t['zaharabic'] = 0x0638;\n\t  t['zahfinalarabic'] = 0xFEC6;\n\t  t['zahinitialarabic'] = 0xFEC7;\n\t  t['zahiragana'] = 0x3056;\n\t  t['zahmedialarabic'] = 0xFEC8;\n\t  t['zainarabic'] = 0x0632;\n\t  t['zainfinalarabic'] = 0xFEB0;\n\t  t['zakatakana'] = 0x30B6;\n\t  t['zaqefgadolhebrew'] = 0x0595;\n\t  t['zaqefqatanhebrew'] = 0x0594;\n\t  t['zarqahebrew'] = 0x0598;\n\t  t['zayin'] = 0x05D6;\n\t  t['zayindagesh'] = 0xFB36;\n\t  t['zayindageshhebrew'] = 0xFB36;\n\t  t['zayinhebrew'] = 0x05D6;\n\t  t['zbopomofo'] = 0x3117;\n\t  t['zcaron'] = 0x017E;\n\t  t['zcircle'] = 0x24E9;\n\t  t['zcircumflex'] = 0x1E91;\n\t  t['zcurl'] = 0x0291;\n\t  t['zdot'] = 0x017C;\n\t  t['zdotaccent'] = 0x017C;\n\t  t['zdotbelow'] = 0x1E93;\n\t  t['zecyrillic'] = 0x0437;\n\t  t['zedescendercyrillic'] = 0x0499;\n\t  t['zedieresiscyrillic'] = 0x04DF;\n\t  t['zehiragana'] = 0x305C;\n\t  t['zekatakana'] = 0x30BC;\n\t  t['zero'] = 0x0030;\n\t  t['zeroarabic'] = 0x0660;\n\t  t['zerobengali'] = 0x09E6;\n\t  t['zerodeva'] = 0x0966;\n\t  t['zerogujarati'] = 0x0AE6;\n\t  t['zerogurmukhi'] = 0x0A66;\n\t  t['zerohackarabic'] = 0x0660;\n\t  t['zeroinferior'] = 0x2080;\n\t  t['zeromonospace'] = 0xFF10;\n\t  t['zerooldstyle'] = 0xF730;\n\t  t['zeropersian'] = 0x06F0;\n\t  t['zerosuperior'] = 0x2070;\n\t  t['zerothai'] = 0x0E50;\n\t  t['zerowidthjoiner'] = 0xFEFF;\n\t  t['zerowidthnonjoiner'] = 0x200C;\n\t  t['zerowidthspace'] = 0x200B;\n\t  t['zeta'] = 0x03B6;\n\t  t['zhbopomofo'] = 0x3113;\n\t  t['zhearmenian'] = 0x056A;\n\t  t['zhebrevecyrillic'] = 0x04C2;\n\t  t['zhecyrillic'] = 0x0436;\n\t  t['zhedescendercyrillic'] = 0x0497;\n\t  t['zhedieresiscyrillic'] = 0x04DD;\n\t  t['zihiragana'] = 0x3058;\n\t  t['zikatakana'] = 0x30B8;\n\t  t['zinorhebrew'] = 0x05AE;\n\t  t['zlinebelow'] = 0x1E95;\n\t  t['zmonospace'] = 0xFF5A;\n\t  t['zohiragana'] = 0x305E;\n\t  t['zokatakana'] = 0x30BE;\n\t  t['zparen'] = 0x24B5;\n\t  t['zretroflexhook'] = 0x0290;\n\t  t['zstroke'] = 0x01B6;\n\t  t['zuhiragana'] = 0x305A;\n\t  t['zukatakana'] = 0x30BA;\n\t  t['.notdef'] = 0x0000;\n\t  t['angbracketleftbig'] = 0x2329;\n\t  t['angbracketleftBig'] = 0x2329;\n\t  t['angbracketleftbigg'] = 0x2329;\n\t  t['angbracketleftBigg'] = 0x2329;\n\t  t['angbracketrightBig'] = 0x232A;\n\t  t['angbracketrightbig'] = 0x232A;\n\t  t['angbracketrightBigg'] = 0x232A;\n\t  t['angbracketrightbigg'] = 0x232A;\n\t  t['arrowhookleft'] = 0x21AA;\n\t  t['arrowhookright'] = 0x21A9;\n\t  t['arrowlefttophalf'] = 0x21BC;\n\t  t['arrowleftbothalf'] = 0x21BD;\n\t  t['arrownortheast'] = 0x2197;\n\t  t['arrownorthwest'] = 0x2196;\n\t  t['arrowrighttophalf'] = 0x21C0;\n\t  t['arrowrightbothalf'] = 0x21C1;\n\t  t['arrowsoutheast'] = 0x2198;\n\t  t['arrowsouthwest'] = 0x2199;\n\t  t['backslashbig'] = 0x2216;\n\t  t['backslashBig'] = 0x2216;\n\t  t['backslashBigg'] = 0x2216;\n\t  t['backslashbigg'] = 0x2216;\n\t  t['bardbl'] = 0x2016;\n\t  t['bracehtipdownleft'] = 0xFE37;\n\t  t['bracehtipdownright'] = 0xFE37;\n\t  t['bracehtipupleft'] = 0xFE38;\n\t  t['bracehtipupright'] = 0xFE38;\n\t  t['braceleftBig'] = 0x007B;\n\t  t['braceleftbig'] = 0x007B;\n\t  t['braceleftbigg'] = 0x007B;\n\t  t['braceleftBigg'] = 0x007B;\n\t  t['bracerightBig'] = 0x007D;\n\t  t['bracerightbig'] = 0x007D;\n\t  t['bracerightbigg'] = 0x007D;\n\t  t['bracerightBigg'] = 0x007D;\n\t  t['bracketleftbig'] = 0x005B;\n\t  t['bracketleftBig'] = 0x005B;\n\t  t['bracketleftbigg'] = 0x005B;\n\t  t['bracketleftBigg'] = 0x005B;\n\t  t['bracketrightBig'] = 0x005D;\n\t  t['bracketrightbig'] = 0x005D;\n\t  t['bracketrightbigg'] = 0x005D;\n\t  t['bracketrightBigg'] = 0x005D;\n\t  t['ceilingleftbig'] = 0x2308;\n\t  t['ceilingleftBig'] = 0x2308;\n\t  t['ceilingleftBigg'] = 0x2308;\n\t  t['ceilingleftbigg'] = 0x2308;\n\t  t['ceilingrightbig'] = 0x2309;\n\t  t['ceilingrightBig'] = 0x2309;\n\t  t['ceilingrightbigg'] = 0x2309;\n\t  t['ceilingrightBigg'] = 0x2309;\n\t  t['circledotdisplay'] = 0x2299;\n\t  t['circledottext'] = 0x2299;\n\t  t['circlemultiplydisplay'] = 0x2297;\n\t  t['circlemultiplytext'] = 0x2297;\n\t  t['circleplusdisplay'] = 0x2295;\n\t  t['circleplustext'] = 0x2295;\n\t  t['contintegraldisplay'] = 0x222E;\n\t  t['contintegraltext'] = 0x222E;\n\t  t['coproductdisplay'] = 0x2210;\n\t  t['coproducttext'] = 0x2210;\n\t  t['floorleftBig'] = 0x230A;\n\t  t['floorleftbig'] = 0x230A;\n\t  t['floorleftbigg'] = 0x230A;\n\t  t['floorleftBigg'] = 0x230A;\n\t  t['floorrightbig'] = 0x230B;\n\t  t['floorrightBig'] = 0x230B;\n\t  t['floorrightBigg'] = 0x230B;\n\t  t['floorrightbigg'] = 0x230B;\n\t  t['hatwide'] = 0x0302;\n\t  t['hatwider'] = 0x0302;\n\t  t['hatwidest'] = 0x0302;\n\t  t['intercal'] = 0x1D40;\n\t  t['integraldisplay'] = 0x222B;\n\t  t['integraltext'] = 0x222B;\n\t  t['intersectiondisplay'] = 0x22C2;\n\t  t['intersectiontext'] = 0x22C2;\n\t  t['logicalanddisplay'] = 0x2227;\n\t  t['logicalandtext'] = 0x2227;\n\t  t['logicalordisplay'] = 0x2228;\n\t  t['logicalortext'] = 0x2228;\n\t  t['parenleftBig'] = 0x0028;\n\t  t['parenleftbig'] = 0x0028;\n\t  t['parenleftBigg'] = 0x0028;\n\t  t['parenleftbigg'] = 0x0028;\n\t  t['parenrightBig'] = 0x0029;\n\t  t['parenrightbig'] = 0x0029;\n\t  t['parenrightBigg'] = 0x0029;\n\t  t['parenrightbigg'] = 0x0029;\n\t  t['prime'] = 0x2032;\n\t  t['productdisplay'] = 0x220F;\n\t  t['producttext'] = 0x220F;\n\t  t['radicalbig'] = 0x221A;\n\t  t['radicalBig'] = 0x221A;\n\t  t['radicalBigg'] = 0x221A;\n\t  t['radicalbigg'] = 0x221A;\n\t  t['radicalbt'] = 0x221A;\n\t  t['radicaltp'] = 0x221A;\n\t  t['radicalvertex'] = 0x221A;\n\t  t['slashbig'] = 0x002F;\n\t  t['slashBig'] = 0x002F;\n\t  t['slashBigg'] = 0x002F;\n\t  t['slashbigg'] = 0x002F;\n\t  t['summationdisplay'] = 0x2211;\n\t  t['summationtext'] = 0x2211;\n\t  t['tildewide'] = 0x02DC;\n\t  t['tildewider'] = 0x02DC;\n\t  t['tildewidest'] = 0x02DC;\n\t  t['uniondisplay'] = 0x22C3;\n\t  t['unionmultidisplay'] = 0x228E;\n\t  t['unionmultitext'] = 0x228E;\n\t  t['unionsqdisplay'] = 0x2294;\n\t  t['unionsqtext'] = 0x2294;\n\t  t['uniontext'] = 0x22C3;\n\t  t['vextenddouble'] = 0x2225;\n\t  t['vextendsingle'] = 0x2223;\n\t});\n\tvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n\t  t['space'] = 0x0020;\n\t  t['a1'] = 0x2701;\n\t  t['a2'] = 0x2702;\n\t  t['a202'] = 0x2703;\n\t  t['a3'] = 0x2704;\n\t  t['a4'] = 0x260E;\n\t  t['a5'] = 0x2706;\n\t  t['a119'] = 0x2707;\n\t  t['a118'] = 0x2708;\n\t  t['a117'] = 0x2709;\n\t  t['a11'] = 0x261B;\n\t  t['a12'] = 0x261E;\n\t  t['a13'] = 0x270C;\n\t  t['a14'] = 0x270D;\n\t  t['a15'] = 0x270E;\n\t  t['a16'] = 0x270F;\n\t  t['a105'] = 0x2710;\n\t  t['a17'] = 0x2711;\n\t  t['a18'] = 0x2712;\n\t  t['a19'] = 0x2713;\n\t  t['a20'] = 0x2714;\n\t  t['a21'] = 0x2715;\n\t  t['a22'] = 0x2716;\n\t  t['a23'] = 0x2717;\n\t  t['a24'] = 0x2718;\n\t  t['a25'] = 0x2719;\n\t  t['a26'] = 0x271A;\n\t  t['a27'] = 0x271B;\n\t  t['a28'] = 0x271C;\n\t  t['a6'] = 0x271D;\n\t  t['a7'] = 0x271E;\n\t  t['a8'] = 0x271F;\n\t  t['a9'] = 0x2720;\n\t  t['a10'] = 0x2721;\n\t  t['a29'] = 0x2722;\n\t  t['a30'] = 0x2723;\n\t  t['a31'] = 0x2724;\n\t  t['a32'] = 0x2725;\n\t  t['a33'] = 0x2726;\n\t  t['a34'] = 0x2727;\n\t  t['a35'] = 0x2605;\n\t  t['a36'] = 0x2729;\n\t  t['a37'] = 0x272A;\n\t  t['a38'] = 0x272B;\n\t  t['a39'] = 0x272C;\n\t  t['a40'] = 0x272D;\n\t  t['a41'] = 0x272E;\n\t  t['a42'] = 0x272F;\n\t  t['a43'] = 0x2730;\n\t  t['a44'] = 0x2731;\n\t  t['a45'] = 0x2732;\n\t  t['a46'] = 0x2733;\n\t  t['a47'] = 0x2734;\n\t  t['a48'] = 0x2735;\n\t  t['a49'] = 0x2736;\n\t  t['a50'] = 0x2737;\n\t  t['a51'] = 0x2738;\n\t  t['a52'] = 0x2739;\n\t  t['a53'] = 0x273A;\n\t  t['a54'] = 0x273B;\n\t  t['a55'] = 0x273C;\n\t  t['a56'] = 0x273D;\n\t  t['a57'] = 0x273E;\n\t  t['a58'] = 0x273F;\n\t  t['a59'] = 0x2740;\n\t  t['a60'] = 0x2741;\n\t  t['a61'] = 0x2742;\n\t  t['a62'] = 0x2743;\n\t  t['a63'] = 0x2744;\n\t  t['a64'] = 0x2745;\n\t  t['a65'] = 0x2746;\n\t  t['a66'] = 0x2747;\n\t  t['a67'] = 0x2748;\n\t  t['a68'] = 0x2749;\n\t  t['a69'] = 0x274A;\n\t  t['a70'] = 0x274B;\n\t  t['a71'] = 0x25CF;\n\t  t['a72'] = 0x274D;\n\t  t['a73'] = 0x25A0;\n\t  t['a74'] = 0x274F;\n\t  t['a203'] = 0x2750;\n\t  t['a75'] = 0x2751;\n\t  t['a204'] = 0x2752;\n\t  t['a76'] = 0x25B2;\n\t  t['a77'] = 0x25BC;\n\t  t['a78'] = 0x25C6;\n\t  t['a79'] = 0x2756;\n\t  t['a81'] = 0x25D7;\n\t  t['a82'] = 0x2758;\n\t  t['a83'] = 0x2759;\n\t  t['a84'] = 0x275A;\n\t  t['a97'] = 0x275B;\n\t  t['a98'] = 0x275C;\n\t  t['a99'] = 0x275D;\n\t  t['a100'] = 0x275E;\n\t  t['a101'] = 0x2761;\n\t  t['a102'] = 0x2762;\n\t  t['a103'] = 0x2763;\n\t  t['a104'] = 0x2764;\n\t  t['a106'] = 0x2765;\n\t  t['a107'] = 0x2766;\n\t  t['a108'] = 0x2767;\n\t  t['a112'] = 0x2663;\n\t  t['a111'] = 0x2666;\n\t  t['a110'] = 0x2665;\n\t  t['a109'] = 0x2660;\n\t  t['a120'] = 0x2460;\n\t  t['a121'] = 0x2461;\n\t  t['a122'] = 0x2462;\n\t  t['a123'] = 0x2463;\n\t  t['a124'] = 0x2464;\n\t  t['a125'] = 0x2465;\n\t  t['a126'] = 0x2466;\n\t  t['a127'] = 0x2467;\n\t  t['a128'] = 0x2468;\n\t  t['a129'] = 0x2469;\n\t  t['a130'] = 0x2776;\n\t  t['a131'] = 0x2777;\n\t  t['a132'] = 0x2778;\n\t  t['a133'] = 0x2779;\n\t  t['a134'] = 0x277A;\n\t  t['a135'] = 0x277B;\n\t  t['a136'] = 0x277C;\n\t  t['a137'] = 0x277D;\n\t  t['a138'] = 0x277E;\n\t  t['a139'] = 0x277F;\n\t  t['a140'] = 0x2780;\n\t  t['a141'] = 0x2781;\n\t  t['a142'] = 0x2782;\n\t  t['a143'] = 0x2783;\n\t  t['a144'] = 0x2784;\n\t  t['a145'] = 0x2785;\n\t  t['a146'] = 0x2786;\n\t  t['a147'] = 0x2787;\n\t  t['a148'] = 0x2788;\n\t  t['a149'] = 0x2789;\n\t  t['a150'] = 0x278A;\n\t  t['a151'] = 0x278B;\n\t  t['a152'] = 0x278C;\n\t  t['a153'] = 0x278D;\n\t  t['a154'] = 0x278E;\n\t  t['a155'] = 0x278F;\n\t  t['a156'] = 0x2790;\n\t  t['a157'] = 0x2791;\n\t  t['a158'] = 0x2792;\n\t  t['a159'] = 0x2793;\n\t  t['a160'] = 0x2794;\n\t  t['a161'] = 0x2192;\n\t  t['a163'] = 0x2194;\n\t  t['a164'] = 0x2195;\n\t  t['a196'] = 0x2798;\n\t  t['a165'] = 0x2799;\n\t  t['a192'] = 0x279A;\n\t  t['a166'] = 0x279B;\n\t  t['a167'] = 0x279C;\n\t  t['a168'] = 0x279D;\n\t  t['a169'] = 0x279E;\n\t  t['a170'] = 0x279F;\n\t  t['a171'] = 0x27A0;\n\t  t['a172'] = 0x27A1;\n\t  t['a173'] = 0x27A2;\n\t  t['a162'] = 0x27A3;\n\t  t['a174'] = 0x27A4;\n\t  t['a175'] = 0x27A5;\n\t  t['a176'] = 0x27A6;\n\t  t['a177'] = 0x27A7;\n\t  t['a178'] = 0x27A8;\n\t  t['a179'] = 0x27A9;\n\t  t['a193'] = 0x27AA;\n\t  t['a180'] = 0x27AB;\n\t  t['a199'] = 0x27AC;\n\t  t['a181'] = 0x27AD;\n\t  t['a200'] = 0x27AE;\n\t  t['a182'] = 0x27AF;\n\t  t['a201'] = 0x27B1;\n\t  t['a183'] = 0x27B2;\n\t  t['a184'] = 0x27B3;\n\t  t['a197'] = 0x27B4;\n\t  t['a185'] = 0x27B5;\n\t  t['a194'] = 0x27B6;\n\t  t['a198'] = 0x27B7;\n\t  t['a186'] = 0x27B8;\n\t  t['a195'] = 0x27B9;\n\t  t['a187'] = 0x27BA;\n\t  t['a188'] = 0x27BB;\n\t  t['a189'] = 0x27BC;\n\t  t['a190'] = 0x27BD;\n\t  t['a191'] = 0x27BE;\n\t  t['a89'] = 0x2768;\n\t  t['a90'] = 0x2769;\n\t  t['a93'] = 0x276A;\n\t  t['a94'] = 0x276B;\n\t  t['a91'] = 0x276C;\n\t  t['a92'] = 0x276D;\n\t  t['a205'] = 0x276E;\n\t  t['a85'] = 0x276F;\n\t  t['a206'] = 0x2770;\n\t  t['a86'] = 0x2771;\n\t  t['a87'] = 0x2772;\n\t  t['a88'] = 0x2773;\n\t  t['a95'] = 0x2774;\n\t  t['a96'] = 0x2775;\n\t  t['.notdef'] = 0x0000;\n\t});\n\texports.getGlyphsUnicode = getGlyphsUnicode;\n\texports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;\n\t\n\t/***/ }),\n\t/* 48 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tmodule.exports = !__w_pdfjs_require__(11) && !__w_pdfjs_require__(12)(function () {\n\t  return Object.defineProperty(__w_pdfjs_require__(35)('div'), 'a', {\n\t    get: function get() {\n\t      return 7;\n\t    }\n\t  }).a != 7;\n\t});\n\t\n\t/***/ }),\n\t/* 49 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar global = __w_pdfjs_require__(1);\n\tvar hide = __w_pdfjs_require__(8);\n\tvar uid = __w_pdfjs_require__(17);\n\tvar TYPED = uid('typed_array');\n\tvar VIEW = uid('view');\n\tvar ABV = !!(global.ArrayBuffer && global.DataView);\n\tvar CONSTR = ABV;\n\tvar i = 0;\n\tvar l = 9;\n\tvar Typed;\n\tvar TypedArrayConstructors = 'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'.split(',');\n\twhile (i < l) {\n\t  if (Typed = global[TypedArrayConstructors[i++]]) {\n\t    hide(Typed.prototype, TYPED, true);\n\t    hide(Typed.prototype, VIEW, true);\n\t  } else CONSTR = false;\n\t}\n\tmodule.exports = {\n\t  ABV: ABV,\n\t  CONSTR: CONSTR,\n\t  TYPED: TYPED,\n\t  VIEW: VIEW\n\t};\n\t\n\t/***/ }),\n\t/* 50 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar toInteger = __w_pdfjs_require__(18);\n\tvar toLength = __w_pdfjs_require__(14);\n\tmodule.exports = function (it) {\n\t  if (it === undefined) return 0;\n\t  var number = toInteger(it);\n\t  var length = toLength(number);\n\t  if (number !== length) throw RangeError('Wrong length!');\n\t  return length;\n\t};\n\t\n\t/***/ }),\n\t/* 51 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar $keys = __w_pdfjs_require__(52);\n\tvar hiddenKeys = __w_pdfjs_require__(40).concat('length', 'prototype');\n\texports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n\t  return $keys(O, hiddenKeys);\n\t};\n\t\n\t/***/ }),\n\t/* 52 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar has = __w_pdfjs_require__(10);\n\tvar toIObject = __w_pdfjs_require__(30);\n\tvar arrayIndexOf = __w_pdfjs_require__(53)(false);\n\tvar IE_PROTO = __w_pdfjs_require__(39)('IE_PROTO');\n\tmodule.exports = function (object, names) {\n\t  var O = toIObject(object);\n\t  var i = 0;\n\t  var result = [];\n\t  var key;\n\t  for (key in O) {\n\t    if (key != IE_PROTO) has(O, key) && result.push(key);\n\t  }while (names.length > i) {\n\t    if (has(O, key = names[i++])) {\n\t      ~arrayIndexOf(result, key) || result.push(key);\n\t    }\n\t  }return result;\n\t};\n\t\n\t/***/ }),\n\t/* 53 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar toIObject = __w_pdfjs_require__(30);\n\tvar toLength = __w_pdfjs_require__(14);\n\tvar toAbsoluteIndex = __w_pdfjs_require__(31);\n\tmodule.exports = function (IS_INCLUDES) {\n\t  return function ($this, el, fromIndex) {\n\t    var O = toIObject($this);\n\t    var length = toLength(O.length);\n\t    var index = toAbsoluteIndex(fromIndex, length);\n\t    var value;\n\t    if (IS_INCLUDES && el != el) while (length > index) {\n\t      value = O[index++];\n\t      if (value != value) return true;\n\t    } else for (; length > index; index++) {\n\t      if (IS_INCLUDES || index in O) {\n\t        if (O[index] === el) return IS_INCLUDES || index || 0;\n\t      }\n\t    }return !IS_INCLUDES && -1;\n\t  };\n\t};\n\t\n\t/***/ }),\n\t/* 54 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar global = __w_pdfjs_require__(1);\n\tvar SHARED = '__core-js_shared__';\n\tvar store = global[SHARED] || (global[SHARED] = {});\n\tmodule.exports = function (key) {\n\t  return store[key] || (store[key] = {});\n\t};\n\t\n\t/***/ }),\n\t/* 55 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar toObject = __w_pdfjs_require__(19);\n\tvar toAbsoluteIndex = __w_pdfjs_require__(31);\n\tvar toLength = __w_pdfjs_require__(14);\n\tmodule.exports = function fill(value) {\n\t  var O = toObject(this);\n\t  var length = toLength(O.length);\n\t  var aLen = arguments.length;\n\t  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n\t  var end = aLen > 2 ? arguments[2] : undefined;\n\t  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n\t  while (endPos > index) {\n\t    O[index++] = value;\n\t  }return O;\n\t};\n\t\n\t/***/ }),\n\t/* 56 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar Iterators = __w_pdfjs_require__(20);\n\tvar ITERATOR = __w_pdfjs_require__(4)('iterator');\n\tvar ArrayProto = Array.prototype;\n\tmodule.exports = function (it) {\n\t  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n\t};\n\t\n\t/***/ }),\n\t/* 57 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar anObject = __w_pdfjs_require__(9);\n\tvar dPs = __w_pdfjs_require__(90);\n\tvar enumBugKeys = __w_pdfjs_require__(40);\n\tvar IE_PROTO = __w_pdfjs_require__(39)('IE_PROTO');\n\tvar Empty = function Empty() {};\n\tvar PROTOTYPE = 'prototype';\n\tvar _createDict = function createDict() {\n\t  var iframe = __w_pdfjs_require__(35)('iframe');\n\t  var i = enumBugKeys.length;\n\t  var lt = '<';\n\t  var gt = '>';\n\t  var iframeDocument;\n\t  iframe.style.display = 'none';\n\t  __w_pdfjs_require__(58).appendChild(iframe);\n\t  iframe.src = 'javascript:';\n\t  iframeDocument = iframe.contentWindow.document;\n\t  iframeDocument.open();\n\t  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n\t  iframeDocument.close();\n\t  _createDict = iframeDocument.F;\n\t  while (i--) {\n\t    delete _createDict[PROTOTYPE][enumBugKeys[i]];\n\t  }return _createDict();\n\t};\n\tmodule.exports = Object.create || function create(O, Properties) {\n\t  var result;\n\t  if (O !== null) {\n\t    Empty[PROTOTYPE] = anObject(O);\n\t    result = new Empty();\n\t    Empty[PROTOTYPE] = null;\n\t    result[IE_PROTO] = O;\n\t  } else result = _createDict();\n\t  return Properties === undefined ? result : dPs(result, Properties);\n\t};\n\t\n\t/***/ }),\n\t/* 58 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar document = __w_pdfjs_require__(1).document;\n\tmodule.exports = document && document.documentElement;\n\t\n\t/***/ }),\n\t/* 59 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar has = __w_pdfjs_require__(10);\n\tvar toObject = __w_pdfjs_require__(19);\n\tvar IE_PROTO = __w_pdfjs_require__(39)('IE_PROTO');\n\tvar ObjectProto = Object.prototype;\n\tmodule.exports = Object.getPrototypeOf || function (O) {\n\t  O = toObject(O);\n\t  if (has(O, IE_PROTO)) return O[IE_PROTO];\n\t  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n\t    return O.constructor.prototype;\n\t  }\n\t  return O instanceof Object ? ObjectProto : null;\n\t};\n\t\n\t/***/ }),\n\t/* 60 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar classof = __w_pdfjs_require__(32);\n\tvar ITERATOR = __w_pdfjs_require__(4)('iterator');\n\tvar Iterators = __w_pdfjs_require__(20);\n\tmodule.exports = __w_pdfjs_require__(7).getIteratorMethod = function (it) {\n\t  if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];\n\t};\n\t\n\t/***/ }),\n\t/* 61 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar addToUnscopables = __w_pdfjs_require__(94);\n\tvar step = __w_pdfjs_require__(95);\n\tvar Iterators = __w_pdfjs_require__(20);\n\tvar toIObject = __w_pdfjs_require__(30);\n\tmodule.exports = __w_pdfjs_require__(62)(Array, 'Array', function (iterated, kind) {\n\t  this._t = toIObject(iterated);\n\t  this._i = 0;\n\t  this._k = kind;\n\t}, function () {\n\t  var O = this._t;\n\t  var kind = this._k;\n\t  var index = this._i++;\n\t  if (!O || index >= O.length) {\n\t    this._t = undefined;\n\t    return step(1);\n\t  }\n\t  if (kind == 'keys') return step(0, index);\n\t  if (kind == 'values') return step(0, O[index]);\n\t  return step(0, [index, O[index]]);\n\t}, 'values');\n\tIterators.Arguments = Iterators.Array;\n\taddToUnscopables('keys');\n\taddToUnscopables('values');\n\taddToUnscopables('entries');\n\t\n\t/***/ }),\n\t/* 62 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar LIBRARY = __w_pdfjs_require__(28);\n\tvar $export = __w_pdfjs_require__(6);\n\tvar redefine = __w_pdfjs_require__(16);\n\tvar hide = __w_pdfjs_require__(8);\n\tvar has = __w_pdfjs_require__(10);\n\tvar Iterators = __w_pdfjs_require__(20);\n\tvar $iterCreate = __w_pdfjs_require__(96);\n\tvar setToStringTag = __w_pdfjs_require__(25);\n\tvar getPrototypeOf = __w_pdfjs_require__(59);\n\tvar ITERATOR = __w_pdfjs_require__(4)('iterator');\n\tvar BUGGY = !([].keys && 'next' in [].keys());\n\tvar FF_ITERATOR = '@@iterator';\n\tvar KEYS = 'keys';\n\tvar VALUES = 'values';\n\tvar returnThis = function returnThis() {\n\t  return this;\n\t};\n\tmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n\t  $iterCreate(Constructor, NAME, next);\n\t  var getMethod = function getMethod(kind) {\n\t    if (!BUGGY && kind in proto) return proto[kind];\n\t    switch (kind) {\n\t      case KEYS:\n\t        return function keys() {\n\t          return new Constructor(this, kind);\n\t        };\n\t      case VALUES:\n\t        return function values() {\n\t          return new Constructor(this, kind);\n\t        };\n\t    }\n\t    return function entries() {\n\t      return new Constructor(this, kind);\n\t    };\n\t  };\n\t  var TAG = NAME + ' Iterator';\n\t  var DEF_VALUES = DEFAULT == VALUES;\n\t  var VALUES_BUG = false;\n\t  var proto = Base.prototype;\n\t  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n\t  var $default = $native || getMethod(DEFAULT);\n\t  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n\t  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n\t  var methods, key, IteratorPrototype;\n\t  if ($anyNative) {\n\t    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n\t    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n\t      setToStringTag(IteratorPrototype, TAG, true);\n\t      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);\n\t    }\n\t  }\n\t  if (DEF_VALUES && $native && $native.name !== VALUES) {\n\t    VALUES_BUG = true;\n\t    $default = function values() {\n\t      return $native.call(this);\n\t    };\n\t  }\n\t  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n\t    hide(proto, ITERATOR, $default);\n\t  }\n\t  Iterators[NAME] = $default;\n\t  Iterators[TAG] = returnThis;\n\t  if (DEFAULT) {\n\t    methods = {\n\t      values: DEF_VALUES ? $default : getMethod(VALUES),\n\t      keys: IS_SET ? $default : getMethod(KEYS),\n\t      entries: $entries\n\t    };\n\t    if (FORCED) for (key in methods) {\n\t      if (!(key in proto)) redefine(proto, key, methods[key]);\n\t    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n\t  }\n\t  return methods;\n\t};\n\t\n\t/***/ }),\n\t/* 63 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar global = __w_pdfjs_require__(1);\n\tvar dP = __w_pdfjs_require__(15);\n\tvar DESCRIPTORS = __w_pdfjs_require__(11);\n\tvar SPECIES = __w_pdfjs_require__(4)('species');\n\tmodule.exports = function (KEY) {\n\t  var C = global[KEY];\n\t  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n\t    configurable: true,\n\t    get: function get() {\n\t      return this;\n\t    }\n\t  });\n\t};\n\t\n\t/***/ }),\n\t/* 64 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar pIE = __w_pdfjs_require__(65);\n\tvar createDesc = __w_pdfjs_require__(29);\n\tvar toIObject = __w_pdfjs_require__(30);\n\tvar toPrimitive = __w_pdfjs_require__(36);\n\tvar has = __w_pdfjs_require__(10);\n\tvar IE8_DOM_DEFINE = __w_pdfjs_require__(48);\n\tvar gOPD = Object.getOwnPropertyDescriptor;\n\texports.f = __w_pdfjs_require__(11) ? gOPD : function getOwnPropertyDescriptor(O, P) {\n\t  O = toIObject(O);\n\t  P = toPrimitive(P, true);\n\t  if (IE8_DOM_DEFINE) try {\n\t    return gOPD(O, P);\n\t  } catch (e) {}\n\t  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n\t};\n\t\n\t/***/ }),\n\t/* 65 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\texports.f = {}.propertyIsEnumerable;\n\t\n\t/***/ }),\n\t/* 66 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar classof = __w_pdfjs_require__(32);\n\tvar test = {};\n\ttest[__w_pdfjs_require__(4)('toStringTag')] = 'z';\n\tif (test + '' != '[object z]') {\n\t  __w_pdfjs_require__(16)(Object.prototype, 'toString', function toString() {\n\t    return '[object ' + classof(this) + ']';\n\t  }, true);\n\t}\n\t\n\t/***/ }),\n\t/* 67 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar $iterators = __w_pdfjs_require__(61);\n\tvar getKeys = __w_pdfjs_require__(41);\n\tvar redefine = __w_pdfjs_require__(16);\n\tvar global = __w_pdfjs_require__(1);\n\tvar hide = __w_pdfjs_require__(8);\n\tvar Iterators = __w_pdfjs_require__(20);\n\tvar wks = __w_pdfjs_require__(4);\n\tvar ITERATOR = wks('iterator');\n\tvar TO_STRING_TAG = wks('toStringTag');\n\tvar ArrayValues = Iterators.Array;\n\tvar DOMIterables = {\n\t  CSSRuleList: true,\n\t  CSSStyleDeclaration: false,\n\t  CSSValueList: false,\n\t  ClientRectList: false,\n\t  DOMRectList: false,\n\t  DOMStringList: false,\n\t  DOMTokenList: true,\n\t  DataTransferItemList: false,\n\t  FileList: false,\n\t  HTMLAllCollection: false,\n\t  HTMLCollection: false,\n\t  HTMLFormElement: false,\n\t  HTMLSelectElement: false,\n\t  MediaList: true,\n\t  MimeTypeArray: false,\n\t  NamedNodeMap: false,\n\t  NodeList: true,\n\t  PaintRequestList: false,\n\t  Plugin: false,\n\t  PluginArray: false,\n\t  SVGLengthList: false,\n\t  SVGNumberList: false,\n\t  SVGPathSegList: false,\n\t  SVGPointList: false,\n\t  SVGStringList: false,\n\t  SVGTransformList: false,\n\t  SourceBufferList: false,\n\t  StyleSheetList: true,\n\t  TextTrackCueList: false,\n\t  TextTrackList: false,\n\t  TouchList: false\n\t};\n\tfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n\t  var NAME = collections[i];\n\t  var explicit = DOMIterables[NAME];\n\t  var Collection = global[NAME];\n\t  var proto = Collection && Collection.prototype;\n\t  var key;\n\t  if (proto) {\n\t    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n\t    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n\t    Iterators[NAME] = ArrayValues;\n\t    if (explicit) for (key in $iterators) {\n\t      if (!proto[key]) redefine(proto, key, $iterators[key], true);\n\t    }\n\t  }\n\t}\n\t\n\t/***/ }),\n\t/* 68 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar ctx = __w_pdfjs_require__(13);\n\tvar invoke = __w_pdfjs_require__(108);\n\tvar html = __w_pdfjs_require__(58);\n\tvar cel = __w_pdfjs_require__(35);\n\tvar global = __w_pdfjs_require__(1);\n\tvar process = global.process;\n\tvar setTask = global.setImmediate;\n\tvar clearTask = global.clearImmediate;\n\tvar MessageChannel = global.MessageChannel;\n\tvar Dispatch = global.Dispatch;\n\tvar counter = 0;\n\tvar queue = {};\n\tvar ONREADYSTATECHANGE = 'onreadystatechange';\n\tvar defer, channel, port;\n\tvar run = function run() {\n\t  var id = +this;\n\t  if (queue.hasOwnProperty(id)) {\n\t    var fn = queue[id];\n\t    delete queue[id];\n\t    fn();\n\t  }\n\t};\n\tvar listener = function listener(event) {\n\t  run.call(event.data);\n\t};\n\tif (!setTask || !clearTask) {\n\t  setTask = function setImmediate(fn) {\n\t    var args = [];\n\t    var i = 1;\n\t    while (arguments.length > i) {\n\t      args.push(arguments[i++]);\n\t    }queue[++counter] = function () {\n\t      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n\t    };\n\t    defer(counter);\n\t    return counter;\n\t  };\n\t  clearTask = function clearImmediate(id) {\n\t    delete queue[id];\n\t  };\n\t  if (__w_pdfjs_require__(24)(process) == 'process') {\n\t    defer = function defer(id) {\n\t      process.nextTick(ctx(run, id, 1));\n\t    };\n\t  } else if (Dispatch && Dispatch.now) {\n\t    defer = function defer(id) {\n\t      Dispatch.now(ctx(run, id, 1));\n\t    };\n\t  } else if (MessageChannel) {\n\t    channel = new MessageChannel();\n\t    port = channel.port2;\n\t    channel.port1.onmessage = listener;\n\t    defer = ctx(port.postMessage, port, 1);\n\t  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n\t    defer = function defer(id) {\n\t      global.postMessage(id + '', '*');\n\t    };\n\t    global.addEventListener('message', listener, false);\n\t  } else if (ONREADYSTATECHANGE in cel('script')) {\n\t    defer = function defer(id) {\n\t      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n\t        html.removeChild(this);\n\t        run.call(id);\n\t      };\n\t    };\n\t  } else {\n\t    defer = function defer(id) {\n\t      setTimeout(ctx(run, id, 1), 0);\n\t    };\n\t  }\n\t}\n\tmodule.exports = {\n\t  set: setTask,\n\t  clear: clearTask\n\t};\n\t\n\t/***/ }),\n\t/* 69 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tmodule.exports = function (exec) {\n\t  try {\n\t    return {\n\t      e: false,\n\t      v: exec()\n\t    };\n\t  } catch (e) {\n\t    return {\n\t      e: true,\n\t      v: e\n\t    };\n\t  }\n\t};\n\t\n\t/***/ }),\n\t/* 70 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar anObject = __w_pdfjs_require__(9);\n\tvar isObject = __w_pdfjs_require__(3);\n\tvar newPromiseCapability = __w_pdfjs_require__(45);\n\tmodule.exports = function (C, x) {\n\t  anObject(C);\n\t  if (isObject(x) && x.constructor === C) return x;\n\t  var promiseCapability = newPromiseCapability.f(C);\n\t  var resolve = promiseCapability.resolve;\n\t  resolve(x);\n\t  return promiseCapability.promise;\n\t};\n\t\n\t/***/ }),\n\t/* 71 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar isObject = __w_pdfjs_require__(3);\n\tmodule.exports = function (it, TYPE) {\n\t  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n\t  return it;\n\t};\n\t\n\t/***/ }),\n\t/* 72 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.ChunkedStreamManager = exports.ChunkedStream = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar ChunkedStream = function ChunkedStreamClosure() {\n\t  function ChunkedStream(length, chunkSize, manager) {\n\t    this.bytes = new Uint8Array(length);\n\t    this.start = 0;\n\t    this.pos = 0;\n\t    this.end = length;\n\t    this.chunkSize = chunkSize;\n\t    this.loadedChunks = [];\n\t    this.numChunksLoaded = 0;\n\t    this.numChunks = Math.ceil(length / chunkSize);\n\t    this.manager = manager;\n\t    this.progressiveDataLength = 0;\n\t    this.lastSuccessfulEnsureByteChunk = -1;\n\t  }\n\t  ChunkedStream.prototype = {\n\t    getMissingChunks: function ChunkedStream_getMissingChunks() {\n\t      var chunks = [];\n\t      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n\t        if (!this.loadedChunks[chunk]) {\n\t          chunks.push(chunk);\n\t        }\n\t      }\n\t      return chunks;\n\t    },\n\t    getBaseStreams: function ChunkedStream_getBaseStreams() {\n\t      return [this];\n\t    },\n\t    allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n\t      return this.numChunksLoaded === this.numChunks;\n\t    },\n\t    onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n\t      var end = begin + chunk.byteLength;\n\t      if (begin % this.chunkSize !== 0) {\n\t        throw new Error('Bad begin offset: ' + begin);\n\t      }\n\t      var length = this.bytes.length;\n\t      if (end % this.chunkSize !== 0 && end !== length) {\n\t        throw new Error('Bad end offset: ' + end);\n\t      }\n\t      this.bytes.set(new Uint8Array(chunk), begin);\n\t      var chunkSize = this.chunkSize;\n\t      var beginChunk = Math.floor(begin / chunkSize);\n\t      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n\t      var curChunk;\n\t      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n\t        if (!this.loadedChunks[curChunk]) {\n\t          this.loadedChunks[curChunk] = true;\n\t          ++this.numChunksLoaded;\n\t        }\n\t      }\n\t    },\n\t    onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\n\t      var position = this.progressiveDataLength;\n\t      var beginChunk = Math.floor(position / this.chunkSize);\n\t      this.bytes.set(new Uint8Array(data), position);\n\t      position += data.byteLength;\n\t      this.progressiveDataLength = position;\n\t      var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n\t      var curChunk;\n\t      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n\t        if (!this.loadedChunks[curChunk]) {\n\t          this.loadedChunks[curChunk] = true;\n\t          ++this.numChunksLoaded;\n\t        }\n\t      }\n\t    },\n\t    ensureByte: function ChunkedStream_ensureByte(pos) {\n\t      var chunk = Math.floor(pos / this.chunkSize);\n\t      if (chunk === this.lastSuccessfulEnsureByteChunk) {\n\t        return;\n\t      }\n\t      if (!this.loadedChunks[chunk]) {\n\t        throw new _util.MissingDataException(pos, pos + 1);\n\t      }\n\t      this.lastSuccessfulEnsureByteChunk = chunk;\n\t    },\n\t    ensureRange: function ChunkedStream_ensureRange(begin, end) {\n\t      if (begin >= end) {\n\t        return;\n\t      }\n\t      if (end <= this.progressiveDataLength) {\n\t        return;\n\t      }\n\t      var chunkSize = this.chunkSize;\n\t      var beginChunk = Math.floor(begin / chunkSize);\n\t      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n\t      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n\t        if (!this.loadedChunks[chunk]) {\n\t          throw new _util.MissingDataException(begin, end);\n\t        }\n\t      }\n\t    },\n\t    nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n\t      var chunk,\n\t          numChunks = this.numChunks;\n\t      for (var i = 0; i < numChunks; ++i) {\n\t        chunk = (beginChunk + i) % numChunks;\n\t        if (!this.loadedChunks[chunk]) {\n\t          return chunk;\n\t        }\n\t      }\n\t      return null;\n\t    },\n\t    hasChunk: function ChunkedStream_hasChunk(chunk) {\n\t      return !!this.loadedChunks[chunk];\n\t    },\n\t    get length() {\n\t      return this.end - this.start;\n\t    },\n\t    get isEmpty() {\n\t      return this.length === 0;\n\t    },\n\t    getByte: function ChunkedStream_getByte() {\n\t      var pos = this.pos;\n\t      if (pos >= this.end) {\n\t        return -1;\n\t      }\n\t      this.ensureByte(pos);\n\t      return this.bytes[this.pos++];\n\t    },\n\t    getUint16: function ChunkedStream_getUint16() {\n\t      var b0 = this.getByte();\n\t      var b1 = this.getByte();\n\t      if (b0 === -1 || b1 === -1) {\n\t        return -1;\n\t      }\n\t      return (b0 << 8) + b1;\n\t    },\n\t    getInt32: function ChunkedStream_getInt32() {\n\t      var b0 = this.getByte();\n\t      var b1 = this.getByte();\n\t      var b2 = this.getByte();\n\t      var b3 = this.getByte();\n\t      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n\t    },\n\t    getBytes: function ChunkedStream_getBytes(length) {\n\t      var bytes = this.bytes;\n\t      var pos = this.pos;\n\t      var strEnd = this.end;\n\t      if (!length) {\n\t        this.ensureRange(pos, strEnd);\n\t        return bytes.subarray(pos, strEnd);\n\t      }\n\t      var end = pos + length;\n\t      if (end > strEnd) {\n\t        end = strEnd;\n\t      }\n\t      this.ensureRange(pos, end);\n\t      this.pos = end;\n\t      return bytes.subarray(pos, end);\n\t    },\n\t    peekByte: function ChunkedStream_peekByte() {\n\t      var peekedByte = this.getByte();\n\t      this.pos--;\n\t      return peekedByte;\n\t    },\n\t    peekBytes: function ChunkedStream_peekBytes(length) {\n\t      var bytes = this.getBytes(length);\n\t      this.pos -= bytes.length;\n\t      return bytes;\n\t    },\n\t    getByteRange: function ChunkedStream_getBytes(begin, end) {\n\t      this.ensureRange(begin, end);\n\t      return this.bytes.subarray(begin, end);\n\t    },\n\t    skip: function ChunkedStream_skip(n) {\n\t      if (!n) {\n\t        n = 1;\n\t      }\n\t      this.pos += n;\n\t    },\n\t    reset: function ChunkedStream_reset() {\n\t      this.pos = this.start;\n\t    },\n\t    moveStart: function ChunkedStream_moveStart() {\n\t      this.start = this.pos;\n\t    },\n\t    makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n\t      this.ensureRange(start, start + length);\n\t      function ChunkedStreamSubstream() {}\n\t      ChunkedStreamSubstream.prototype = Object.create(this);\n\t      ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n\t        var chunkSize = this.chunkSize;\n\t        var beginChunk = Math.floor(this.start / chunkSize);\n\t        var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n\t        var missingChunks = [];\n\t        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n\t          if (!this.loadedChunks[chunk]) {\n\t            missingChunks.push(chunk);\n\t          }\n\t        }\n\t        return missingChunks;\n\t      };\n\t      var subStream = new ChunkedStreamSubstream();\n\t      subStream.pos = subStream.start = start;\n\t      subStream.end = start + length || this.end;\n\t      subStream.dict = dict;\n\t      return subStream;\n\t    }\n\t  };\n\t  return ChunkedStream;\n\t}();\n\tvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\n\t  function ChunkedStreamManager(pdfNetworkStream, args) {\n\t    var chunkSize = args.rangeChunkSize;\n\t    var length = args.length;\n\t    this.stream = new ChunkedStream(length, chunkSize, this);\n\t    this.length = length;\n\t    this.chunkSize = chunkSize;\n\t    this.pdfNetworkStream = pdfNetworkStream;\n\t    this.url = args.url;\n\t    this.disableAutoFetch = args.disableAutoFetch;\n\t    this.msgHandler = args.msgHandler;\n\t    this.currRequestId = 0;\n\t    this.chunksNeededByRequest = Object.create(null);\n\t    this.requestsByChunk = Object.create(null);\n\t    this.promisesByRequest = Object.create(null);\n\t    this.progressiveDataLength = 0;\n\t    this.aborted = false;\n\t    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n\t  }\n\t  ChunkedStreamManager.prototype = {\n\t    onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n\t      return this._loadedStreamCapability.promise;\n\t    },\n\t    sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\n\t      var _this = this;\n\t\n\t      var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n\t      if (!rangeReader.isStreamingSupported) {\n\t        rangeReader.onProgress = this.onProgress.bind(this);\n\t      }\n\t      var chunks = [],\n\t          loaded = 0;\n\t      var manager = this;\n\t      var promise = new Promise(function (resolve, reject) {\n\t        var readChunk = function readChunk(chunk) {\n\t          try {\n\t            if (!chunk.done) {\n\t              var data = chunk.value;\n\t              chunks.push(data);\n\t              loaded += (0, _util.arrayByteLength)(data);\n\t              if (rangeReader.isStreamingSupported) {\n\t                manager.onProgress({ loaded: loaded });\n\t              }\n\t              rangeReader.read().then(readChunk, reject);\n\t              return;\n\t            }\n\t            var chunkData = (0, _util.arraysToBytes)(chunks);\n\t            chunks = null;\n\t            resolve(chunkData);\n\t          } catch (e) {\n\t            reject(e);\n\t          }\n\t        };\n\t        rangeReader.read().then(readChunk, reject);\n\t      });\n\t      promise.then(function (data) {\n\t        if (_this.aborted) {\n\t          return;\n\t        }\n\t        _this.onReceiveData({\n\t          chunk: data,\n\t          begin: begin\n\t        });\n\t      });\n\t    },\n\t    requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n\t      var missingChunks = this.stream.getMissingChunks();\n\t      this._requestChunks(missingChunks);\n\t      return this._loadedStreamCapability.promise;\n\t    },\n\t    _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\n\t      var requestId = this.currRequestId++;\n\t      var i, ii;\n\t      var chunksNeeded = Object.create(null);\n\t      this.chunksNeededByRequest[requestId] = chunksNeeded;\n\t      for (i = 0, ii = chunks.length; i < ii; i++) {\n\t        if (!this.stream.hasChunk(chunks[i])) {\n\t          chunksNeeded[chunks[i]] = true;\n\t        }\n\t      }\n\t      if ((0, _util.isEmptyObj)(chunksNeeded)) {\n\t        return Promise.resolve();\n\t      }\n\t      var capability = (0, _util.createPromiseCapability)();\n\t      this.promisesByRequest[requestId] = capability;\n\t      var chunksToRequest = [];\n\t      for (var chunk in chunksNeeded) {\n\t        chunk = chunk | 0;\n\t        if (!(chunk in this.requestsByChunk)) {\n\t          this.requestsByChunk[chunk] = [];\n\t          chunksToRequest.push(chunk);\n\t        }\n\t        this.requestsByChunk[chunk].push(requestId);\n\t      }\n\t      if (!chunksToRequest.length) {\n\t        return capability.promise;\n\t      }\n\t      var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n\t      for (i = 0; i < groupedChunksToRequest.length; ++i) {\n\t        var groupedChunk = groupedChunksToRequest[i];\n\t        var begin = groupedChunk.beginChunk * this.chunkSize;\n\t        var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n\t        this.sendRequest(begin, end);\n\t      }\n\t      return capability.promise;\n\t    },\n\t    getStream: function ChunkedStreamManager_getStream() {\n\t      return this.stream;\n\t    },\n\t    requestRange: function ChunkedStreamManager_requestRange(begin, end) {\n\t      end = Math.min(end, this.length);\n\t      var beginChunk = this.getBeginChunk(begin);\n\t      var endChunk = this.getEndChunk(end);\n\t      var chunks = [];\n\t      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n\t        chunks.push(chunk);\n\t      }\n\t      return this._requestChunks(chunks);\n\t    },\n\t    requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\n\t      ranges = ranges || [];\n\t      var chunksToRequest = [];\n\t      for (var i = 0; i < ranges.length; i++) {\n\t        var beginChunk = this.getBeginChunk(ranges[i].begin);\n\t        var endChunk = this.getEndChunk(ranges[i].end);\n\t        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n\t          if (chunksToRequest.indexOf(chunk) < 0) {\n\t            chunksToRequest.push(chunk);\n\t          }\n\t        }\n\t      }\n\t      chunksToRequest.sort(function (a, b) {\n\t        return a - b;\n\t      });\n\t      return this._requestChunks(chunksToRequest);\n\t    },\n\t    groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n\t      var groupedChunks = [];\n\t      var beginChunk = -1;\n\t      var prevChunk = -1;\n\t      for (var i = 0; i < chunks.length; ++i) {\n\t        var chunk = chunks[i];\n\t        if (beginChunk < 0) {\n\t          beginChunk = chunk;\n\t        }\n\t        if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n\t          groupedChunks.push({\n\t            beginChunk: beginChunk,\n\t            endChunk: prevChunk + 1\n\t          });\n\t          beginChunk = chunk;\n\t        }\n\t        if (i + 1 === chunks.length) {\n\t          groupedChunks.push({\n\t            beginChunk: beginChunk,\n\t            endChunk: chunk + 1\n\t          });\n\t        }\n\t        prevChunk = chunk;\n\t      }\n\t      return groupedChunks;\n\t    },\n\t    onProgress: function ChunkedStreamManager_onProgress(args) {\n\t      var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\n\t      this.msgHandler.send('DocProgress', {\n\t        loaded: bytesLoaded,\n\t        total: this.length\n\t      });\n\t    },\n\t    onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n\t      var chunk = args.chunk;\n\t      var isProgressive = args.begin === undefined;\n\t      var begin = isProgressive ? this.progressiveDataLength : args.begin;\n\t      var end = begin + chunk.byteLength;\n\t      var beginChunk = Math.floor(begin / this.chunkSize);\n\t      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n\t      if (isProgressive) {\n\t        this.stream.onReceiveProgressiveData(chunk);\n\t        this.progressiveDataLength = end;\n\t      } else {\n\t        this.stream.onReceiveData(begin, chunk);\n\t      }\n\t      if (this.stream.allChunksLoaded()) {\n\t        this._loadedStreamCapability.resolve(this.stream);\n\t      }\n\t      var loadedRequests = [];\n\t      var i, requestId;\n\t      for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n\t        var requestIds = this.requestsByChunk[chunk] || [];\n\t        delete this.requestsByChunk[chunk];\n\t        for (i = 0; i < requestIds.length; ++i) {\n\t          requestId = requestIds[i];\n\t          var chunksNeeded = this.chunksNeededByRequest[requestId];\n\t          if (chunk in chunksNeeded) {\n\t            delete chunksNeeded[chunk];\n\t          }\n\t          if (!(0, _util.isEmptyObj)(chunksNeeded)) {\n\t            continue;\n\t          }\n\t          loadedRequests.push(requestId);\n\t        }\n\t      }\n\t      if (!this.disableAutoFetch && (0, _util.isEmptyObj)(this.requestsByChunk)) {\n\t        var nextEmptyChunk;\n\t        if (this.stream.numChunksLoaded === 1) {\n\t          var lastChunk = this.stream.numChunks - 1;\n\t          if (!this.stream.hasChunk(lastChunk)) {\n\t            nextEmptyChunk = lastChunk;\n\t          }\n\t        } else {\n\t          nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n\t        }\n\t        if (Number.isInteger(nextEmptyChunk)) {\n\t          this._requestChunks([nextEmptyChunk]);\n\t        }\n\t      }\n\t      for (i = 0; i < loadedRequests.length; ++i) {\n\t        requestId = loadedRequests[i];\n\t        var capability = this.promisesByRequest[requestId];\n\t        delete this.promisesByRequest[requestId];\n\t        capability.resolve();\n\t      }\n\t      this.msgHandler.send('DocProgress', {\n\t        loaded: this.stream.numChunksLoaded * this.chunkSize,\n\t        total: this.length\n\t      });\n\t    },\n\t    onError: function ChunkedStreamManager_onError(err) {\n\t      this._loadedStreamCapability.reject(err);\n\t    },\n\t    getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n\t      var chunk = Math.floor(begin / this.chunkSize);\n\t      return chunk;\n\t    },\n\t    getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n\t      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n\t      return chunk;\n\t    },\n\t    abort: function ChunkedStreamManager_abort() {\n\t      this.aborted = true;\n\t      if (this.pdfNetworkStream) {\n\t        this.pdfNetworkStream.cancelAllRequests('abort');\n\t      }\n\t      for (var requestId in this.promisesByRequest) {\n\t        var capability = this.promisesByRequest[requestId];\n\t        capability.reject(new Error('Request was aborted'));\n\t      }\n\t    }\n\t  };\n\t  return ChunkedStreamManager;\n\t}();\n\texports.ChunkedStream = ChunkedStream;\n\texports.ChunkedStreamManager = ChunkedStreamManager;\n\t\n\t/***/ }),\n\t/* 73 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.FileSpec = exports.XRef = exports.ObjectLoader = exports.Catalog = undefined;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _primitives = __w_pdfjs_require__(2);\n\t\n\tvar _parser = __w_pdfjs_require__(34);\n\t\n\tvar _chunked_stream = __w_pdfjs_require__(72);\n\t\n\tvar _crypto = __w_pdfjs_require__(76);\n\t\n\tvar _colorspace = __w_pdfjs_require__(26);\n\t\n\tvar Catalog = function CatalogClosure() {\n\t  function Catalog(pdfManager, xref, pageFactory) {\n\t    this.pdfManager = pdfManager;\n\t    this.xref = xref;\n\t    this.catDict = xref.getCatalogObj();\n\t    if (!(0, _primitives.isDict)(this.catDict)) {\n\t      throw new _util.FormatError('catalog object is not a dictionary');\n\t    }\n\t    this.fontCache = new _primitives.RefSetCache();\n\t    this.builtInCMapCache = Object.create(null);\n\t    this.pageKidsCountCache = new _primitives.RefSetCache();\n\t    this.pageFactory = pageFactory;\n\t    this.pagePromises = [];\n\t  }\n\t  Catalog.prototype = {\n\t    get metadata() {\n\t      var streamRef = this.catDict.getRaw('Metadata');\n\t      if (!(0, _primitives.isRef)(streamRef)) {\n\t        return (0, _util.shadow)(this, 'metadata', null);\n\t      }\n\t      var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\n\t      var stream = this.xref.fetch(streamRef, !encryptMetadata);\n\t      var metadata;\n\t      if (stream && (0, _primitives.isDict)(stream.dict)) {\n\t        var type = stream.dict.get('Type');\n\t        var subtype = stream.dict.get('Subtype');\n\t        if ((0, _primitives.isName)(type, 'Metadata') && (0, _primitives.isName)(subtype, 'XML')) {\n\t          try {\n\t            metadata = (0, _util.stringToUTF8String)((0, _util.bytesToString)(stream.getBytes()));\n\t          } catch (e) {\n\t            if (e instanceof _util.MissingDataException) {\n\t              throw e;\n\t            }\n\t            (0, _util.info)('Skipping invalid metadata.');\n\t          }\n\t        }\n\t      }\n\t      return (0, _util.shadow)(this, 'metadata', metadata);\n\t    },\n\t    get toplevelPagesDict() {\n\t      var pagesObj = this.catDict.get('Pages');\n\t      if (!(0, _primitives.isDict)(pagesObj)) {\n\t        throw new _util.FormatError('invalid top-level pages dictionary');\n\t      }\n\t      return (0, _util.shadow)(this, 'toplevelPagesDict', pagesObj);\n\t    },\n\t    get documentOutline() {\n\t      var obj = null;\n\t      try {\n\t        obj = this.readDocumentOutline();\n\t      } catch (ex) {\n\t        if (ex instanceof _util.MissingDataException) {\n\t          throw ex;\n\t        }\n\t        (0, _util.warn)('Unable to read document outline');\n\t      }\n\t      return (0, _util.shadow)(this, 'documentOutline', obj);\n\t    },\n\t    readDocumentOutline: function Catalog_readDocumentOutline() {\n\t      var obj = this.catDict.get('Outlines');\n\t      if (!(0, _primitives.isDict)(obj)) {\n\t        return null;\n\t      }\n\t      obj = obj.getRaw('First');\n\t      if (!(0, _primitives.isRef)(obj)) {\n\t        return null;\n\t      }\n\t      var root = { items: [] };\n\t      var queue = [{\n\t        obj: obj,\n\t        parent: root\n\t      }];\n\t      var processed = new _primitives.RefSet();\n\t      processed.put(obj);\n\t      var xref = this.xref,\n\t          blackColor = new Uint8Array(3);\n\t      while (queue.length > 0) {\n\t        var i = queue.shift();\n\t        var outlineDict = xref.fetchIfRef(i.obj);\n\t        if (outlineDict === null) {\n\t          continue;\n\t        }\n\t        if (!outlineDict.has('Title')) {\n\t          throw new _util.FormatError('Invalid outline item');\n\t        }\n\t        var data = {\n\t          url: null,\n\t          dest: null\n\t        };\n\t        Catalog.parseDestDictionary({\n\t          destDict: outlineDict,\n\t          resultObj: data,\n\t          docBaseUrl: this.pdfManager.docBaseUrl\n\t        });\n\t        var title = outlineDict.get('Title');\n\t        var flags = outlineDict.get('F') || 0;\n\t        var color = outlineDict.getArray('C'),\n\t            rgbColor = blackColor;\n\t        if (Array.isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n\t          rgbColor = _colorspace.ColorSpace.singletons.rgb.getRgb(color, 0);\n\t        }\n\t        var outlineItem = {\n\t          dest: data.dest,\n\t          url: data.url,\n\t          unsafeUrl: data.unsafeUrl,\n\t          newWindow: data.newWindow,\n\t          title: (0, _util.stringToPDFString)(title),\n\t          color: rgbColor,\n\t          count: outlineDict.get('Count'),\n\t          bold: !!(flags & 2),\n\t          italic: !!(flags & 1),\n\t          items: []\n\t        };\n\t        i.parent.items.push(outlineItem);\n\t        obj = outlineDict.getRaw('First');\n\t        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n\t          queue.push({\n\t            obj: obj,\n\t            parent: outlineItem\n\t          });\n\t          processed.put(obj);\n\t        }\n\t        obj = outlineDict.getRaw('Next');\n\t        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n\t          queue.push({\n\t            obj: obj,\n\t            parent: i.parent\n\t          });\n\t          processed.put(obj);\n\t        }\n\t      }\n\t      return root.items.length > 0 ? root.items : null;\n\t    },\n\t    get numPages() {\n\t      var obj = this.toplevelPagesDict.get('Count');\n\t      if (!Number.isInteger(obj)) {\n\t        throw new _util.FormatError('page count in top level pages object is not an integer');\n\t      }\n\t      return (0, _util.shadow)(this, 'numPages', obj);\n\t    },\n\t    get destinations() {\n\t      function fetchDestination(dest) {\n\t        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n\t      }\n\t      var xref = this.xref;\n\t      var dests = {},\n\t          nameTreeRef,\n\t          nameDictionaryRef;\n\t      var obj = this.catDict.get('Names');\n\t      if (obj && obj.has('Dests')) {\n\t        nameTreeRef = obj.getRaw('Dests');\n\t      } else if (this.catDict.has('Dests')) {\n\t        nameDictionaryRef = this.catDict.get('Dests');\n\t      }\n\t      if (nameDictionaryRef) {\n\t        obj = nameDictionaryRef;\n\t        obj.forEach(function catalogForEach(key, value) {\n\t          if (!value) {\n\t            return;\n\t          }\n\t          dests[key] = fetchDestination(value);\n\t        });\n\t      }\n\t      if (nameTreeRef) {\n\t        var nameTree = new NameTree(nameTreeRef, xref);\n\t        var names = nameTree.getAll();\n\t        for (var name in names) {\n\t          dests[name] = fetchDestination(names[name]);\n\t        }\n\t      }\n\t      return (0, _util.shadow)(this, 'destinations', dests);\n\t    },\n\t    getDestination: function Catalog_getDestination(destinationId) {\n\t      function fetchDestination(dest) {\n\t        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n\t      }\n\t      var xref = this.xref;\n\t      var dest = null,\n\t          nameTreeRef,\n\t          nameDictionaryRef;\n\t      var obj = this.catDict.get('Names');\n\t      if (obj && obj.has('Dests')) {\n\t        nameTreeRef = obj.getRaw('Dests');\n\t      } else if (this.catDict.has('Dests')) {\n\t        nameDictionaryRef = this.catDict.get('Dests');\n\t      }\n\t      if (nameDictionaryRef) {\n\t        var value = nameDictionaryRef.get(destinationId);\n\t        if (value) {\n\t          dest = fetchDestination(value);\n\t        }\n\t      }\n\t      if (nameTreeRef) {\n\t        var nameTree = new NameTree(nameTreeRef, xref);\n\t        dest = fetchDestination(nameTree.get(destinationId));\n\t      }\n\t      return dest;\n\t    },\n\t    get pageLabels() {\n\t      var obj = null;\n\t      try {\n\t        obj = this.readPageLabels();\n\t      } catch (ex) {\n\t        if (ex instanceof _util.MissingDataException) {\n\t          throw ex;\n\t        }\n\t        (0, _util.warn)('Unable to read page labels.');\n\t      }\n\t      return (0, _util.shadow)(this, 'pageLabels', obj);\n\t    },\n\t    readPageLabels: function Catalog_readPageLabels() {\n\t      var obj = this.catDict.getRaw('PageLabels');\n\t      if (!obj) {\n\t        return null;\n\t      }\n\t      var pageLabels = new Array(this.numPages);\n\t      var style = null;\n\t      var prefix = '';\n\t      var numberTree = new NumberTree(obj, this.xref);\n\t      var nums = numberTree.getAll();\n\t      var currentLabel = '',\n\t          currentIndex = 1;\n\t      for (var i = 0, ii = this.numPages; i < ii; i++) {\n\t        if (i in nums) {\n\t          var labelDict = nums[i];\n\t          if (!(0, _primitives.isDict)(labelDict)) {\n\t            throw new _util.FormatError('The PageLabel is not a dictionary.');\n\t          }\n\t          var type = labelDict.get('Type');\n\t          if (type && !(0, _primitives.isName)(type, 'PageLabel')) {\n\t            throw new _util.FormatError('Invalid type in PageLabel dictionary.');\n\t          }\n\t          var s = labelDict.get('S');\n\t          if (s && !(0, _primitives.isName)(s)) {\n\t            throw new _util.FormatError('Invalid style in PageLabel dictionary.');\n\t          }\n\t          style = s ? s.name : null;\n\t          var p = labelDict.get('P');\n\t          if (p && !(0, _util.isString)(p)) {\n\t            throw new _util.FormatError('Invalid prefix in PageLabel dictionary.');\n\t          }\n\t          prefix = p ? (0, _util.stringToPDFString)(p) : '';\n\t          var st = labelDict.get('St');\n\t          if (st && !(Number.isInteger(st) && st >= 1)) {\n\t            throw new _util.FormatError('Invalid start in PageLabel dictionary.');\n\t          }\n\t          currentIndex = st || 1;\n\t        }\n\t        switch (style) {\n\t          case 'D':\n\t            currentLabel = currentIndex;\n\t            break;\n\t          case 'R':\n\t          case 'r':\n\t            currentLabel = _util.Util.toRoman(currentIndex, style === 'r');\n\t            break;\n\t          case 'A':\n\t          case 'a':\n\t            var LIMIT = 26;\n\t            var A_UPPER_CASE = 0x41,\n\t                A_LOWER_CASE = 0x61;\n\t            var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\n\t            var letterIndex = currentIndex - 1;\n\t            var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n\t            var charBuf = [];\n\t            for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n\t              charBuf.push(character);\n\t            }\n\t            currentLabel = charBuf.join('');\n\t            break;\n\t          default:\n\t            if (style) {\n\t              throw new _util.FormatError('Invalid style \"' + style + '\" in PageLabel dictionary.');\n\t            }\n\t        }\n\t        pageLabels[i] = prefix + currentLabel;\n\t        currentLabel = '';\n\t        currentIndex++;\n\t      }\n\t      return pageLabels;\n\t    },\n\t    get pageMode() {\n\t      var obj = this.catDict.get('PageMode');\n\t      var pageMode = 'UseNone';\n\t      if ((0, _primitives.isName)(obj)) {\n\t        switch (obj.name) {\n\t          case 'UseNone':\n\t          case 'UseOutlines':\n\t          case 'UseThumbs':\n\t          case 'FullScreen':\n\t          case 'UseOC':\n\t          case 'UseAttachments':\n\t            pageMode = obj.name;\n\t        }\n\t      }\n\t      return (0, _util.shadow)(this, 'pageMode', pageMode);\n\t    },\n\t    get attachments() {\n\t      var xref = this.xref;\n\t      var attachments = null,\n\t          nameTreeRef;\n\t      var obj = this.catDict.get('Names');\n\t      if (obj) {\n\t        nameTreeRef = obj.getRaw('EmbeddedFiles');\n\t      }\n\t      if (nameTreeRef) {\n\t        var nameTree = new NameTree(nameTreeRef, xref);\n\t        var names = nameTree.getAll();\n\t        for (var name in names) {\n\t          var fs = new FileSpec(names[name], xref);\n\t          if (!attachments) {\n\t            attachments = Object.create(null);\n\t          }\n\t          attachments[(0, _util.stringToPDFString)(name)] = fs.serializable;\n\t        }\n\t      }\n\t      return (0, _util.shadow)(this, 'attachments', attachments);\n\t    },\n\t    get javaScript() {\n\t      var xref = this.xref;\n\t      var obj = this.catDict.get('Names');\n\t      var javaScript = [];\n\t      function appendIfJavaScriptDict(jsDict) {\n\t        var type = jsDict.get('S');\n\t        if (!(0, _primitives.isName)(type, 'JavaScript')) {\n\t          return;\n\t        }\n\t        var js = jsDict.get('JS');\n\t        if ((0, _primitives.isStream)(js)) {\n\t          js = (0, _util.bytesToString)(js.getBytes());\n\t        } else if (!(0, _util.isString)(js)) {\n\t          return;\n\t        }\n\t        javaScript.push((0, _util.stringToPDFString)(js));\n\t      }\n\t      if (obj && obj.has('JavaScript')) {\n\t        var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n\t        var names = nameTree.getAll();\n\t        for (var name in names) {\n\t          var jsDict = names[name];\n\t          if ((0, _primitives.isDict)(jsDict)) {\n\t            appendIfJavaScriptDict(jsDict);\n\t          }\n\t        }\n\t      }\n\t      var openactionDict = this.catDict.get('OpenAction');\n\t      if ((0, _primitives.isDict)(openactionDict, 'Action')) {\n\t        var actionType = openactionDict.get('S');\n\t        if ((0, _primitives.isName)(actionType, 'Named')) {\n\t          var action = openactionDict.get('N');\n\t          if ((0, _primitives.isName)(action, 'Print')) {\n\t            javaScript.push('print({});');\n\t          }\n\t        } else {\n\t          appendIfJavaScriptDict(openactionDict);\n\t        }\n\t      }\n\t      return (0, _util.shadow)(this, 'javaScript', javaScript);\n\t    },\n\t    cleanup: function Catalog_cleanup() {\n\t      var _this = this;\n\t\n\t      this.pageKidsCountCache.clear();\n\t      var promises = [];\n\t      this.fontCache.forEach(function (promise) {\n\t        promises.push(promise);\n\t      });\n\t      return Promise.all(promises).then(function (translatedFonts) {\n\t        for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n\t          var font = translatedFonts[i].dict;\n\t          delete font.translated;\n\t        }\n\t        _this.fontCache.clear();\n\t        _this.builtInCMapCache = Object.create(null);\n\t      });\n\t    },\n\t    getPage: function Catalog_getPage(pageIndex) {\n\t      var _this2 = this;\n\t\n\t      if (!(pageIndex in this.pagePromises)) {\n\t        this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (_ref) {\n\t          var _ref2 = _slicedToArray(_ref, 2),\n\t              dict = _ref2[0],\n\t              ref = _ref2[1];\n\t\n\t          return _this2.pageFactory.createPage(pageIndex, dict, ref, _this2.fontCache, _this2.builtInCMapCache);\n\t        });\n\t      }\n\t      return this.pagePromises[pageIndex];\n\t    },\n\t    getPageDict: function Catalog_getPageDict(pageIndex) {\n\t      var capability = (0, _util.createPromiseCapability)();\n\t      var nodesToVisit = [this.catDict.getRaw('Pages')];\n\t      var count,\n\t          currentPageIndex = 0;\n\t      var xref = this.xref,\n\t          pageKidsCountCache = this.pageKidsCountCache;\n\t      function next() {\n\t        while (nodesToVisit.length) {\n\t          var currentNode = nodesToVisit.pop();\n\t          if ((0, _primitives.isRef)(currentNode)) {\n\t            count = pageKidsCountCache.get(currentNode);\n\t            if (count > 0 && currentPageIndex + count < pageIndex) {\n\t              currentPageIndex += count;\n\t              continue;\n\t            }\n\t            xref.fetchAsync(currentNode).then(function (obj) {\n\t              if ((0, _primitives.isDict)(obj, 'Page') || (0, _primitives.isDict)(obj) && !obj.has('Kids')) {\n\t                if (pageIndex === currentPageIndex) {\n\t                  if (currentNode && !pageKidsCountCache.has(currentNode)) {\n\t                    pageKidsCountCache.put(currentNode, 1);\n\t                  }\n\t                  capability.resolve([obj, currentNode]);\n\t                } else {\n\t                  currentPageIndex++;\n\t                  next();\n\t                }\n\t                return;\n\t              }\n\t              nodesToVisit.push(obj);\n\t              next();\n\t            }, capability.reject);\n\t            return;\n\t          }\n\t          if (!(0, _primitives.isDict)(currentNode)) {\n\t            capability.reject(new _util.FormatError('page dictionary kid reference points to wrong type of object'));\n\t            return;\n\t          }\n\t          count = currentNode.get('Count');\n\t          var objId = currentNode.objId;\n\t          if (objId && !pageKidsCountCache.has(objId)) {\n\t            pageKidsCountCache.put(objId, count);\n\t          }\n\t          if (currentPageIndex + count <= pageIndex) {\n\t            currentPageIndex += count;\n\t            continue;\n\t          }\n\t          var kids = currentNode.get('Kids');\n\t          if (!Array.isArray(kids)) {\n\t            capability.reject(new _util.FormatError('page dictionary kids object is not an array'));\n\t            return;\n\t          }\n\t          for (var last = kids.length - 1; last >= 0; last--) {\n\t            nodesToVisit.push(kids[last]);\n\t          }\n\t        }\n\t        capability.reject(new Error('Page index ' + pageIndex + ' not found.'));\n\t      }\n\t      next();\n\t      return capability.promise;\n\t    },\n\t    getPageIndex: function Catalog_getPageIndex(pageRef) {\n\t      var xref = this.xref;\n\t      function pagesBeforeRef(kidRef) {\n\t        var total = 0;\n\t        var parentRef;\n\t        return xref.fetchAsync(kidRef).then(function (node) {\n\t          if ((0, _primitives.isRefsEqual)(kidRef, pageRef) && !(0, _primitives.isDict)(node, 'Page') && !((0, _primitives.isDict)(node) && !node.has('Type') && node.has('Contents'))) {\n\t            throw new _util.FormatError('The reference does not point to a /Page Dict.');\n\t          }\n\t          if (!node) {\n\t            return null;\n\t          }\n\t          if (!(0, _primitives.isDict)(node)) {\n\t            throw new _util.FormatError('node must be a Dict.');\n\t          }\n\t          parentRef = node.getRaw('Parent');\n\t          return node.getAsync('Parent');\n\t        }).then(function (parent) {\n\t          if (!parent) {\n\t            return null;\n\t          }\n\t          if (!(0, _primitives.isDict)(parent)) {\n\t            throw new _util.FormatError('parent must be a Dict.');\n\t          }\n\t          return parent.getAsync('Kids');\n\t        }).then(function (kids) {\n\t          if (!kids) {\n\t            return null;\n\t          }\n\t          var kidPromises = [];\n\t          var found = false;\n\t          for (var i = 0; i < kids.length; i++) {\n\t            var kid = kids[i];\n\t            if (!(0, _primitives.isRef)(kid)) {\n\t              throw new _util.FormatError('kid must be a Ref.');\n\t            }\n\t            if (kid.num === kidRef.num) {\n\t              found = true;\n\t              break;\n\t            }\n\t            kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n\t              if (kid.has('Count')) {\n\t                var count = kid.get('Count');\n\t                total += count;\n\t              } else {\n\t                total++;\n\t              }\n\t            }));\n\t          }\n\t          if (!found) {\n\t            throw new _util.FormatError('kid ref not found in parents kids');\n\t          }\n\t          return Promise.all(kidPromises).then(function () {\n\t            return [total, parentRef];\n\t          });\n\t        });\n\t      }\n\t      var total = 0;\n\t      function next(ref) {\n\t        return pagesBeforeRef(ref).then(function (args) {\n\t          if (!args) {\n\t            return total;\n\t          }\n\t          var count = args[0];\n\t          var parentRef = args[1];\n\t          total += count;\n\t          return next(parentRef);\n\t        });\n\t      }\n\t      return next(pageRef);\n\t    }\n\t  };\n\t  Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\n\t    function addDefaultProtocolToUrl(url) {\n\t      if (url.indexOf('www.') === 0) {\n\t        return 'http://' + url;\n\t      }\n\t      return url;\n\t    }\n\t    function tryConvertUrlEncoding(url) {\n\t      try {\n\t        return (0, _util.stringToUTF8String)(url);\n\t      } catch (e) {\n\t        return url;\n\t      }\n\t    }\n\t    var destDict = params.destDict;\n\t    if (!(0, _primitives.isDict)(destDict)) {\n\t      (0, _util.warn)('parseDestDictionary: \"destDict\" must be a dictionary.');\n\t      return;\n\t    }\n\t    var resultObj = params.resultObj;\n\t    if ((typeof resultObj === 'undefined' ? 'undefined' : _typeof(resultObj)) !== 'object') {\n\t      (0, _util.warn)('parseDestDictionary: \"resultObj\" must be an object.');\n\t      return;\n\t    }\n\t    var docBaseUrl = params.docBaseUrl || null;\n\t    var action = destDict.get('A'),\n\t        url,\n\t        dest;\n\t    if (!(0, _primitives.isDict)(action) && destDict.has('Dest')) {\n\t      action = destDict.get('Dest');\n\t    }\n\t    if ((0, _primitives.isDict)(action)) {\n\t      var actionType = action.get('S');\n\t      if (!(0, _primitives.isName)(actionType)) {\n\t        (0, _util.warn)('parseDestDictionary: Invalid type in Action dictionary.');\n\t        return;\n\t      }\n\t      var actionName = actionType.name;\n\t      switch (actionName) {\n\t        case 'URI':\n\t          url = action.get('URI');\n\t          if ((0, _primitives.isName)(url)) {\n\t            url = '/' + url.name;\n\t          } else if ((0, _util.isString)(url)) {\n\t            url = addDefaultProtocolToUrl(url);\n\t          }\n\t          break;\n\t        case 'GoTo':\n\t          dest = action.get('D');\n\t          break;\n\t        case 'Launch':\n\t        case 'GoToR':\n\t          var urlDict = action.get('F');\n\t          if ((0, _primitives.isDict)(urlDict)) {\n\t            url = urlDict.get('F') || null;\n\t          } else if ((0, _util.isString)(urlDict)) {\n\t            url = urlDict;\n\t          }\n\t          var remoteDest = action.get('D');\n\t          if (remoteDest) {\n\t            if ((0, _primitives.isName)(remoteDest)) {\n\t              remoteDest = remoteDest.name;\n\t            }\n\t            if ((0, _util.isString)(url)) {\n\t              var baseUrl = url.split('#')[0];\n\t              if ((0, _util.isString)(remoteDest)) {\n\t                url = baseUrl + '#' + remoteDest;\n\t              } else if (Array.isArray(remoteDest)) {\n\t                url = baseUrl + '#' + JSON.stringify(remoteDest);\n\t              }\n\t            }\n\t          }\n\t          var newWindow = action.get('NewWindow');\n\t          if ((0, _util.isBool)(newWindow)) {\n\t            resultObj.newWindow = newWindow;\n\t          }\n\t          break;\n\t        case 'Named':\n\t          var namedAction = action.get('N');\n\t          if ((0, _primitives.isName)(namedAction)) {\n\t            resultObj.action = namedAction.name;\n\t          }\n\t          break;\n\t        case 'JavaScript':\n\t          var jsAction = action.get('JS'),\n\t              js;\n\t          if ((0, _primitives.isStream)(jsAction)) {\n\t            js = (0, _util.bytesToString)(jsAction.getBytes());\n\t          } else if ((0, _util.isString)(jsAction)) {\n\t            js = jsAction;\n\t          }\n\t          if (js) {\n\t            var URL_OPEN_METHODS = ['app.launchURL', 'window.open'];\n\t            var regex = new RegExp('^\\\\s*(' + URL_OPEN_METHODS.join('|').split('.').join('\\\\.') + ')\\\\((?:\\'|\\\")([^\\'\\\"]*)(?:\\'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))', 'i');\n\t            var jsUrl = regex.exec((0, _util.stringToPDFString)(js));\n\t            if (jsUrl && jsUrl[2]) {\n\t              url = jsUrl[2];\n\t              if (jsUrl[3] === 'true' && jsUrl[1] === 'app.launchURL') {\n\t                resultObj.newWindow = true;\n\t              }\n\t              break;\n\t            }\n\t          }\n\t        default:\n\t          (0, _util.warn)('parseDestDictionary: Unsupported Action type \"' + actionName + '\".');\n\t          break;\n\t      }\n\t    } else if (destDict.has('Dest')) {\n\t      dest = destDict.get('Dest');\n\t    }\n\t    if ((0, _util.isString)(url)) {\n\t      url = tryConvertUrlEncoding(url);\n\t      var absoluteUrl = (0, _util.createValidAbsoluteUrl)(url, docBaseUrl);\n\t      if (absoluteUrl) {\n\t        resultObj.url = absoluteUrl.href;\n\t      }\n\t      resultObj.unsafeUrl = url;\n\t    }\n\t    if (dest) {\n\t      if ((0, _primitives.isName)(dest)) {\n\t        dest = dest.name;\n\t      }\n\t      if ((0, _util.isString)(dest) || Array.isArray(dest)) {\n\t        resultObj.dest = dest;\n\t      }\n\t    }\n\t  };\n\t  return Catalog;\n\t}();\n\tvar XRef = function XRefClosure() {\n\t  function XRef(stream, pdfManager) {\n\t    this.stream = stream;\n\t    this.pdfManager = pdfManager;\n\t    this.entries = [];\n\t    this.xrefstms = Object.create(null);\n\t    this.cache = [];\n\t    this.stats = {\n\t      streamTypes: [],\n\t      fontTypes: []\n\t    };\n\t  }\n\t  XRef.prototype = {\n\t    setStartXRef: function XRef_setStartXRef(startXRef) {\n\t      this.startXRefQueue = [startXRef];\n\t    },\n\t    parse: function XRef_parse(recoveryMode) {\n\t      var trailerDict;\n\t      if (!recoveryMode) {\n\t        trailerDict = this.readXRef();\n\t      } else {\n\t        (0, _util.warn)('Indexing all PDF objects');\n\t        trailerDict = this.indexObjects();\n\t      }\n\t      trailerDict.assignXref(this);\n\t      this.trailer = trailerDict;\n\t      var encrypt = trailerDict.get('Encrypt');\n\t      if ((0, _primitives.isDict)(encrypt)) {\n\t        var ids = trailerDict.get('ID');\n\t        var fileId = ids && ids.length ? ids[0] : '';\n\t        encrypt.suppressEncryption = true;\n\t        this.encrypt = new _crypto.CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n\t      }\n\t      if (!(this.root = trailerDict.get('Root'))) {\n\t        throw new _util.FormatError('Invalid root reference');\n\t      }\n\t    },\n\t    processXRefTable: function XRef_processXRefTable(parser) {\n\t      if (!('tableState' in this)) {\n\t        this.tableState = {\n\t          entryNum: 0,\n\t          streamPos: parser.lexer.stream.pos,\n\t          parserBuf1: parser.buf1,\n\t          parserBuf2: parser.buf2\n\t        };\n\t      }\n\t      var obj = this.readXRefTable(parser);\n\t      if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n\t        throw new _util.FormatError('Invalid XRef table: could not find trailer dictionary');\n\t      }\n\t      var dict = parser.getObj();\n\t      if (!(0, _primitives.isDict)(dict) && dict.dict) {\n\t        dict = dict.dict;\n\t      }\n\t      if (!(0, _primitives.isDict)(dict)) {\n\t        throw new _util.FormatError('Invalid XRef table: could not parse trailer dictionary');\n\t      }\n\t      delete this.tableState;\n\t      return dict;\n\t    },\n\t    readXRefTable: function XRef_readXRefTable(parser) {\n\t      var stream = parser.lexer.stream;\n\t      var tableState = this.tableState;\n\t      stream.pos = tableState.streamPos;\n\t      parser.buf1 = tableState.parserBuf1;\n\t      parser.buf2 = tableState.parserBuf2;\n\t      var obj;\n\t      while (true) {\n\t        if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n\t          if ((0, _primitives.isCmd)(obj = parser.getObj(), 'trailer')) {\n\t            break;\n\t          }\n\t          tableState.firstEntryNum = obj;\n\t          tableState.entryCount = parser.getObj();\n\t        }\n\t        var first = tableState.firstEntryNum;\n\t        var count = tableState.entryCount;\n\t        if (!Number.isInteger(first) || !Number.isInteger(count)) {\n\t          throw new _util.FormatError('Invalid XRef table: wrong types in subsection header');\n\t        }\n\t        for (var i = tableState.entryNum; i < count; i++) {\n\t          tableState.streamPos = stream.pos;\n\t          tableState.entryNum = i;\n\t          tableState.parserBuf1 = parser.buf1;\n\t          tableState.parserBuf2 = parser.buf2;\n\t          var entry = {};\n\t          entry.offset = parser.getObj();\n\t          entry.gen = parser.getObj();\n\t          var type = parser.getObj();\n\t          if ((0, _primitives.isCmd)(type, 'f')) {\n\t            entry.free = true;\n\t          } else if ((0, _primitives.isCmd)(type, 'n')) {\n\t            entry.uncompressed = true;\n\t          }\n\t          if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n\t            throw new _util.FormatError('Invalid entry in XRef subsection: ' + first + ', ' + count);\n\t          }\n\t          if (i === 0 && entry.free && first === 1) {\n\t            first = 0;\n\t          }\n\t          if (!this.entries[i + first]) {\n\t            this.entries[i + first] = entry;\n\t          }\n\t        }\n\t        tableState.entryNum = 0;\n\t        tableState.streamPos = stream.pos;\n\t        tableState.parserBuf1 = parser.buf1;\n\t        tableState.parserBuf2 = parser.buf2;\n\t        delete tableState.firstEntryNum;\n\t        delete tableState.entryCount;\n\t      }\n\t      if (this.entries[0] && !this.entries[0].free) {\n\t        throw new _util.FormatError('Invalid XRef table: unexpected first object');\n\t      }\n\t      return obj;\n\t    },\n\t    processXRefStream: function XRef_processXRefStream(stream) {\n\t      if (!('streamState' in this)) {\n\t        var streamParameters = stream.dict;\n\t        var byteWidths = streamParameters.get('W');\n\t        var range = streamParameters.get('Index');\n\t        if (!range) {\n\t          range = [0, streamParameters.get('Size')];\n\t        }\n\t        this.streamState = {\n\t          entryRanges: range,\n\t          byteWidths: byteWidths,\n\t          entryNum: 0,\n\t          streamPos: stream.pos\n\t        };\n\t      }\n\t      this.readXRefStream(stream);\n\t      delete this.streamState;\n\t      return stream.dict;\n\t    },\n\t    readXRefStream: function XRef_readXRefStream(stream) {\n\t      var i, j;\n\t      var streamState = this.streamState;\n\t      stream.pos = streamState.streamPos;\n\t      var byteWidths = streamState.byteWidths;\n\t      var typeFieldWidth = byteWidths[0];\n\t      var offsetFieldWidth = byteWidths[1];\n\t      var generationFieldWidth = byteWidths[2];\n\t      var entryRanges = streamState.entryRanges;\n\t      while (entryRanges.length > 0) {\n\t        var first = entryRanges[0];\n\t        var n = entryRanges[1];\n\t        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n\t          throw new _util.FormatError('Invalid XRef range fields: ' + first + ', ' + n);\n\t        }\n\t        if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n\t          throw new _util.FormatError('Invalid XRef entry fields length: ' + first + ', ' + n);\n\t        }\n\t        for (i = streamState.entryNum; i < n; ++i) {\n\t          streamState.entryNum = i;\n\t          streamState.streamPos = stream.pos;\n\t          var type = 0,\n\t              offset = 0,\n\t              generation = 0;\n\t          for (j = 0; j < typeFieldWidth; ++j) {\n\t            type = type << 8 | stream.getByte();\n\t          }\n\t          if (typeFieldWidth === 0) {\n\t            type = 1;\n\t          }\n\t          for (j = 0; j < offsetFieldWidth; ++j) {\n\t            offset = offset << 8 | stream.getByte();\n\t          }\n\t          for (j = 0; j < generationFieldWidth; ++j) {\n\t            generation = generation << 8 | stream.getByte();\n\t          }\n\t          var entry = {};\n\t          entry.offset = offset;\n\t          entry.gen = generation;\n\t          switch (type) {\n\t            case 0:\n\t              entry.free = true;\n\t              break;\n\t            case 1:\n\t              entry.uncompressed = true;\n\t              break;\n\t            case 2:\n\t              break;\n\t            default:\n\t              throw new _util.FormatError('Invalid XRef entry type: ' + type);\n\t          }\n\t          if (!this.entries[first + i]) {\n\t            this.entries[first + i] = entry;\n\t          }\n\t        }\n\t        streamState.entryNum = 0;\n\t        streamState.streamPos = stream.pos;\n\t        entryRanges.splice(0, 2);\n\t      }\n\t    },\n\t    indexObjects: function XRef_indexObjects() {\n\t      var TAB = 0x9,\n\t          LF = 0xA,\n\t          CR = 0xD,\n\t          SPACE = 0x20;\n\t      var PERCENT = 0x25,\n\t          LT = 0x3C;\n\t      function readToken(data, offset) {\n\t        var token = '',\n\t            ch = data[offset];\n\t        while (ch !== LF && ch !== CR && ch !== LT) {\n\t          if (++offset >= data.length) {\n\t            break;\n\t          }\n\t          token += String.fromCharCode(ch);\n\t          ch = data[offset];\n\t        }\n\t        return token;\n\t      }\n\t      function skipUntil(data, offset, what) {\n\t        var length = what.length,\n\t            dataLength = data.length;\n\t        var skipped = 0;\n\t        while (offset < dataLength) {\n\t          var i = 0;\n\t          while (i < length && data[offset + i] === what[i]) {\n\t            ++i;\n\t          }\n\t          if (i >= length) {\n\t            break;\n\t          }\n\t          offset++;\n\t          skipped++;\n\t        }\n\t        return skipped;\n\t      }\n\t      var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n\t      var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n\t      var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n\t      var endobjBytes = new Uint8Array([101, 110, 100, 111, 98, 106]);\n\t      var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n\t      this.entries.length = 0;\n\t      var stream = this.stream;\n\t      stream.pos = 0;\n\t      var buffer = stream.getBytes();\n\t      var position = stream.start,\n\t          length = buffer.length;\n\t      var trailers = [],\n\t          xrefStms = [];\n\t      while (position < length) {\n\t        var ch = buffer[position];\n\t        if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n\t          ++position;\n\t          continue;\n\t        }\n\t        if (ch === PERCENT) {\n\t          do {\n\t            ++position;\n\t            if (position >= length) {\n\t              break;\n\t            }\n\t            ch = buffer[position];\n\t          } while (ch !== LF && ch !== CR);\n\t          continue;\n\t        }\n\t        var token = readToken(buffer, position);\n\t        var m;\n\t        if (token.indexOf('xref') === 0 && (token.length === 4 || /\\s/.test(token[4]))) {\n\t          position += skipUntil(buffer, position, trailerBytes);\n\t          trailers.push(position);\n\t          position += skipUntil(buffer, position, startxrefBytes);\n\t        } else if (m = objRegExp.exec(token)) {\n\t          if (typeof this.entries[m[1]] === 'undefined') {\n\t            this.entries[m[1]] = {\n\t              offset: position - stream.start,\n\t              gen: m[2] | 0,\n\t              uncompressed: true\n\t            };\n\t          }\n\t          var contentLength = skipUntil(buffer, position, endobjBytes) + 7;\n\t          var content = buffer.subarray(position, position + contentLength);\n\t          var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n\t          if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n\t            xrefStms.push(position - stream.start);\n\t            this.xrefstms[position - stream.start] = 1;\n\t          }\n\t          position += contentLength;\n\t        } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\s/.test(token[7]))) {\n\t          trailers.push(position);\n\t          position += skipUntil(buffer, position, startxrefBytes);\n\t        } else {\n\t          position += token.length + 1;\n\t        }\n\t      }\n\t      var i, ii;\n\t      for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n\t        this.startXRefQueue.push(xrefStms[i]);\n\t        this.readXRef(true);\n\t      }\n\t      var dict;\n\t      for (i = 0, ii = trailers.length; i < ii; ++i) {\n\t        stream.pos = trailers[i];\n\t        var parser = new _parser.Parser(new _parser.Lexer(stream), true, this, true);\n\t        var obj = parser.getObj();\n\t        if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n\t          continue;\n\t        }\n\t        dict = parser.getObj();\n\t        if (!(0, _primitives.isDict)(dict)) {\n\t          continue;\n\t        }\n\t        if (dict.has('ID')) {\n\t          return dict;\n\t        }\n\t      }\n\t      if (dict) {\n\t        return dict;\n\t      }\n\t      throw new _util.InvalidPDFException('Invalid PDF structure');\n\t    },\n\t    readXRef: function XRef_readXRef(recoveryMode) {\n\t      var stream = this.stream;\n\t      var startXRefParsedCache = Object.create(null);\n\t      try {\n\t        while (this.startXRefQueue.length) {\n\t          var startXRef = this.startXRefQueue[0];\n\t          if (startXRefParsedCache[startXRef]) {\n\t            (0, _util.warn)('readXRef - skipping XRef table since it was already parsed.');\n\t            this.startXRefQueue.shift();\n\t            continue;\n\t          }\n\t          startXRefParsedCache[startXRef] = true;\n\t          stream.pos = startXRef + stream.start;\n\t          var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n\t          var obj = parser.getObj();\n\t          var dict;\n\t          if ((0, _primitives.isCmd)(obj, 'xref')) {\n\t            dict = this.processXRefTable(parser);\n\t            if (!this.topDict) {\n\t              this.topDict = dict;\n\t            }\n\t            obj = dict.get('XRefStm');\n\t            if (Number.isInteger(obj)) {\n\t              var pos = obj;\n\t              if (!(pos in this.xrefstms)) {\n\t                this.xrefstms[pos] = 1;\n\t                this.startXRefQueue.push(pos);\n\t              }\n\t            }\n\t          } else if (Number.isInteger(obj)) {\n\t            if (!Number.isInteger(parser.getObj()) || !(0, _primitives.isCmd)(parser.getObj(), 'obj') || !(0, _primitives.isStream)(obj = parser.getObj())) {\n\t              throw new _util.FormatError('Invalid XRef stream');\n\t            }\n\t            dict = this.processXRefStream(obj);\n\t            if (!this.topDict) {\n\t              this.topDict = dict;\n\t            }\n\t            if (!dict) {\n\t              throw new _util.FormatError('Failed to read XRef stream');\n\t            }\n\t          } else {\n\t            throw new _util.FormatError('Invalid XRef stream header');\n\t          }\n\t          obj = dict.get('Prev');\n\t          if (Number.isInteger(obj)) {\n\t            this.startXRefQueue.push(obj);\n\t          } else if ((0, _primitives.isRef)(obj)) {\n\t            this.startXRefQueue.push(obj.num);\n\t          }\n\t          this.startXRefQueue.shift();\n\t        }\n\t        return this.topDict;\n\t      } catch (e) {\n\t        if (e instanceof _util.MissingDataException) {\n\t          throw e;\n\t        }\n\t        (0, _util.info)('(while reading XRef): ' + e);\n\t      }\n\t      if (recoveryMode) {\n\t        return;\n\t      }\n\t      throw new _util.XRefParseException();\n\t    },\n\t    getEntry: function XRef_getEntry(i) {\n\t      var xrefEntry = this.entries[i];\n\t      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n\t        return xrefEntry;\n\t      }\n\t      return null;\n\t    },\n\t    fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n\t      if (!(0, _primitives.isRef)(obj)) {\n\t        return obj;\n\t      }\n\t      return this.fetch(obj, suppressEncryption);\n\t    },\n\t    fetch: function XRef_fetch(ref, suppressEncryption) {\n\t      if (!(0, _primitives.isRef)(ref)) {\n\t        throw new Error('ref object is not a reference');\n\t      }\n\t      var num = ref.num;\n\t      if (num in this.cache) {\n\t        var cacheEntry = this.cache[num];\n\t        if (cacheEntry instanceof _primitives.Dict && !cacheEntry.objId) {\n\t          cacheEntry.objId = ref.toString();\n\t        }\n\t        return cacheEntry;\n\t      }\n\t      var xrefEntry = this.getEntry(num);\n\t      if (xrefEntry === null) {\n\t        return this.cache[num] = null;\n\t      }\n\t      if (xrefEntry.uncompressed) {\n\t        xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n\t      } else {\n\t        xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n\t      }\n\t      if ((0, _primitives.isDict)(xrefEntry)) {\n\t        xrefEntry.objId = ref.toString();\n\t      } else if ((0, _primitives.isStream)(xrefEntry)) {\n\t        xrefEntry.dict.objId = ref.toString();\n\t      }\n\t      return xrefEntry;\n\t    },\n\t    fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\n\t      var gen = ref.gen;\n\t      var num = ref.num;\n\t      if (xrefEntry.gen !== gen) {\n\t        throw new _util.FormatError('inconsistent generation in XRef');\n\t      }\n\t      var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n\t      var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n\t      var obj1 = parser.getObj();\n\t      var obj2 = parser.getObj();\n\t      var obj3 = parser.getObj();\n\t      if (!Number.isInteger(obj1)) {\n\t        obj1 = parseInt(obj1, 10);\n\t      }\n\t      if (!Number.isInteger(obj2)) {\n\t        obj2 = parseInt(obj2, 10);\n\t      }\n\t      if (obj1 !== num || obj2 !== gen || !(0, _primitives.isCmd)(obj3)) {\n\t        throw new _util.FormatError('bad XRef entry');\n\t      }\n\t      if (obj3.cmd !== 'obj') {\n\t        if (obj3.cmd.indexOf('obj') === 0) {\n\t          num = parseInt(obj3.cmd.substring(3), 10);\n\t          if (!Number.isNaN(num)) {\n\t            return num;\n\t          }\n\t        }\n\t        throw new _util.FormatError('bad XRef entry');\n\t      }\n\t      if (this.encrypt && !suppressEncryption) {\n\t        xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n\t      } else {\n\t        xrefEntry = parser.getObj();\n\t      }\n\t      if (!(0, _primitives.isStream)(xrefEntry)) {\n\t        this.cache[num] = xrefEntry;\n\t      }\n\t      return xrefEntry;\n\t    },\n\t    fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\n\t      var tableOffset = xrefEntry.offset;\n\t      var stream = this.fetch(new _primitives.Ref(tableOffset, 0));\n\t      if (!(0, _primitives.isStream)(stream)) {\n\t        throw new _util.FormatError('bad ObjStm stream');\n\t      }\n\t      var first = stream.dict.get('First');\n\t      var n = stream.dict.get('N');\n\t      if (!Number.isInteger(first) || !Number.isInteger(n)) {\n\t        throw new _util.FormatError('invalid first and n parameters for ObjStm stream');\n\t      }\n\t      var parser = new _parser.Parser(new _parser.Lexer(stream), false, this);\n\t      parser.allowStreams = true;\n\t      var i,\n\t          entries = [],\n\t          num,\n\t          nums = [];\n\t      for (i = 0; i < n; ++i) {\n\t        num = parser.getObj();\n\t        if (!Number.isInteger(num)) {\n\t          throw new _util.FormatError('invalid object number in the ObjStm stream: ' + num);\n\t        }\n\t        nums.push(num);\n\t        var offset = parser.getObj();\n\t        if (!Number.isInteger(offset)) {\n\t          throw new _util.FormatError('invalid object offset in the ObjStm stream: ' + offset);\n\t        }\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        entries.push(parser.getObj());\n\t        if ((0, _primitives.isCmd)(parser.buf1, 'endobj')) {\n\t          parser.shift();\n\t        }\n\t        num = nums[i];\n\t        var entry = this.entries[num];\n\t        if (entry && entry.offset === tableOffset && entry.gen === i) {\n\t          this.cache[num] = entries[i];\n\t        }\n\t      }\n\t      xrefEntry = entries[xrefEntry.gen];\n\t      if (xrefEntry === undefined) {\n\t        throw new _util.FormatError('bad XRef entry for compressed object');\n\t      }\n\t      return xrefEntry;\n\t    },\n\t    fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\n\t      if (!(0, _primitives.isRef)(obj)) {\n\t        return Promise.resolve(obj);\n\t      }\n\t      return this.fetchAsync(obj, suppressEncryption);\n\t    },\n\t    fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n\t      var streamManager = this.stream.manager;\n\t      var xref = this;\n\t      return new Promise(function tryFetch(resolve, reject) {\n\t        try {\n\t          resolve(xref.fetch(ref, suppressEncryption));\n\t        } catch (e) {\n\t          if (e instanceof _util.MissingDataException) {\n\t            streamManager.requestRange(e.begin, e.end).then(function () {\n\t              tryFetch(resolve, reject);\n\t            }, reject);\n\t            return;\n\t          }\n\t          reject(e);\n\t        }\n\t      });\n\t    },\n\t    getCatalogObj: function XRef_getCatalogObj() {\n\t      return this.root;\n\t    }\n\t  };\n\t  return XRef;\n\t}();\n\tvar NameOrNumberTree = function NameOrNumberTreeClosure() {\n\t  function NameOrNumberTree(root, xref) {\n\t    throw new Error('Cannot initialize NameOrNumberTree.');\n\t  }\n\t  NameOrNumberTree.prototype = {\n\t    getAll: function NameOrNumberTree_getAll() {\n\t      var dict = Object.create(null);\n\t      if (!this.root) {\n\t        return dict;\n\t      }\n\t      var xref = this.xref;\n\t      var processed = new _primitives.RefSet();\n\t      processed.put(this.root);\n\t      var queue = [this.root];\n\t      while (queue.length > 0) {\n\t        var i, n;\n\t        var obj = xref.fetchIfRef(queue.shift());\n\t        if (!(0, _primitives.isDict)(obj)) {\n\t          continue;\n\t        }\n\t        if (obj.has('Kids')) {\n\t          var kids = obj.get('Kids');\n\t          for (i = 0, n = kids.length; i < n; i++) {\n\t            var kid = kids[i];\n\t            if (processed.has(kid)) {\n\t              throw new _util.FormatError('Duplicate entry in \"' + this._type + '\" tree.');\n\t            }\n\t            queue.push(kid);\n\t            processed.put(kid);\n\t          }\n\t          continue;\n\t        }\n\t        var entries = obj.get(this._type);\n\t        if (Array.isArray(entries)) {\n\t          for (i = 0, n = entries.length; i < n; i += 2) {\n\t            dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\n\t          }\n\t        }\n\t      }\n\t      return dict;\n\t    },\n\t    get: function NameOrNumberTree_get(key) {\n\t      if (!this.root) {\n\t        return null;\n\t      }\n\t      var xref = this.xref;\n\t      var kidsOrEntries = xref.fetchIfRef(this.root);\n\t      var loopCount = 0;\n\t      var MAX_LEVELS = 10;\n\t      var l, r, m;\n\t      while (kidsOrEntries.has('Kids')) {\n\t        if (++loopCount > MAX_LEVELS) {\n\t          (0, _util.warn)('Search depth limit reached for \"' + this._type + '\" tree.');\n\t          return null;\n\t        }\n\t        var kids = kidsOrEntries.get('Kids');\n\t        if (!Array.isArray(kids)) {\n\t          return null;\n\t        }\n\t        l = 0;\n\t        r = kids.length - 1;\n\t        while (l <= r) {\n\t          m = l + r >> 1;\n\t          var kid = xref.fetchIfRef(kids[m]);\n\t          var limits = kid.get('Limits');\n\t          if (key < xref.fetchIfRef(limits[0])) {\n\t            r = m - 1;\n\t          } else if (key > xref.fetchIfRef(limits[1])) {\n\t            l = m + 1;\n\t          } else {\n\t            kidsOrEntries = xref.fetchIfRef(kids[m]);\n\t            break;\n\t          }\n\t        }\n\t        if (l > r) {\n\t          return null;\n\t        }\n\t      }\n\t      var entries = kidsOrEntries.get(this._type);\n\t      if (Array.isArray(entries)) {\n\t        l = 0;\n\t        r = entries.length - 2;\n\t        while (l <= r) {\n\t          m = l + r & ~1;\n\t          var currentKey = xref.fetchIfRef(entries[m]);\n\t          if (key < currentKey) {\n\t            r = m - 2;\n\t          } else if (key > currentKey) {\n\t            l = m + 2;\n\t          } else {\n\t            return xref.fetchIfRef(entries[m + 1]);\n\t          }\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t  };\n\t  return NameOrNumberTree;\n\t}();\n\tvar NameTree = function NameTreeClosure() {\n\t  function NameTree(root, xref) {\n\t    this.root = root;\n\t    this.xref = xref;\n\t    this._type = 'Names';\n\t  }\n\t  _util.Util.inherit(NameTree, NameOrNumberTree, {});\n\t  return NameTree;\n\t}();\n\tvar NumberTree = function NumberTreeClosure() {\n\t  function NumberTree(root, xref) {\n\t    this.root = root;\n\t    this.xref = xref;\n\t    this._type = 'Nums';\n\t  }\n\t  _util.Util.inherit(NumberTree, NameOrNumberTree, {});\n\t  return NumberTree;\n\t}();\n\tvar FileSpec = function FileSpecClosure() {\n\t  function FileSpec(root, xref) {\n\t    if (!root || !(0, _primitives.isDict)(root)) {\n\t      return;\n\t    }\n\t    this.xref = xref;\n\t    this.root = root;\n\t    if (root.has('FS')) {\n\t      this.fs = root.get('FS');\n\t    }\n\t    this.description = root.has('Desc') ? (0, _util.stringToPDFString)(root.get('Desc')) : '';\n\t    if (root.has('RF')) {\n\t      (0, _util.warn)('Related file specifications are not supported');\n\t    }\n\t    this.contentAvailable = true;\n\t    if (!root.has('EF')) {\n\t      this.contentAvailable = false;\n\t      (0, _util.warn)('Non-embedded file specifications are not supported');\n\t    }\n\t  }\n\t  function pickPlatformItem(dict) {\n\t    if (dict.has('UF')) {\n\t      return dict.get('UF');\n\t    } else if (dict.has('F')) {\n\t      return dict.get('F');\n\t    } else if (dict.has('Unix')) {\n\t      return dict.get('Unix');\n\t    } else if (dict.has('Mac')) {\n\t      return dict.get('Mac');\n\t    } else if (dict.has('DOS')) {\n\t      return dict.get('DOS');\n\t    }\n\t    return null;\n\t  }\n\t  FileSpec.prototype = {\n\t    get filename() {\n\t      if (!this._filename && this.root) {\n\t        var filename = pickPlatformItem(this.root) || 'unnamed';\n\t        this._filename = (0, _util.stringToPDFString)(filename).replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\//g, '/').replace(/\\\\/g, '/');\n\t      }\n\t      return this._filename;\n\t    },\n\t    get content() {\n\t      if (!this.contentAvailable) {\n\t        return null;\n\t      }\n\t      if (!this.contentRef && this.root) {\n\t        this.contentRef = pickPlatformItem(this.root.get('EF'));\n\t      }\n\t      var content = null;\n\t      if (this.contentRef) {\n\t        var xref = this.xref;\n\t        var fileObj = xref.fetchIfRef(this.contentRef);\n\t        if (fileObj && (0, _primitives.isStream)(fileObj)) {\n\t          content = fileObj.getBytes();\n\t        } else {\n\t          (0, _util.warn)('Embedded file specification points to non-existing/invalid ' + 'content');\n\t        }\n\t      } else {\n\t        (0, _util.warn)('Embedded file specification does not have a content');\n\t      }\n\t      return content;\n\t    },\n\t    get serializable() {\n\t      return {\n\t        filename: this.filename,\n\t        content: this.content\n\t      };\n\t    }\n\t  };\n\t  return FileSpec;\n\t}();\n\tvar ObjectLoader = function () {\n\t  function mayHaveChildren(value) {\n\t    return (0, _primitives.isRef)(value) || (0, _primitives.isDict)(value) || Array.isArray(value) || (0, _primitives.isStream)(value);\n\t  }\n\t  function addChildren(node, nodesToVisit) {\n\t    if ((0, _primitives.isDict)(node) || (0, _primitives.isStream)(node)) {\n\t      var dict = (0, _primitives.isDict)(node) ? node : node.dict;\n\t      var dictKeys = dict.getKeys();\n\t      for (var i = 0, ii = dictKeys.length; i < ii; i++) {\n\t        var rawValue = dict.getRaw(dictKeys[i]);\n\t        if (mayHaveChildren(rawValue)) {\n\t          nodesToVisit.push(rawValue);\n\t        }\n\t      }\n\t    } else if (Array.isArray(node)) {\n\t      for (var _i = 0, _ii = node.length; _i < _ii; _i++) {\n\t        var value = node[_i];\n\t        if (mayHaveChildren(value)) {\n\t          nodesToVisit.push(value);\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function ObjectLoader(dict, keys, xref) {\n\t    this.dict = dict;\n\t    this.keys = keys;\n\t    this.xref = xref;\n\t    this.refSet = null;\n\t    this.capability = null;\n\t  }\n\t  ObjectLoader.prototype = {\n\t    load: function load() {\n\t      this.capability = (0, _util.createPromiseCapability)();\n\t      if (!(this.xref.stream instanceof _chunked_stream.ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\n\t        this.capability.resolve();\n\t        return this.capability.promise;\n\t      }\n\t      var keys = this.keys,\n\t          dict = this.dict;\n\t\n\t      this.refSet = new _primitives.RefSet();\n\t      var nodesToVisit = [];\n\t      for (var i = 0, ii = keys.length; i < ii; i++) {\n\t        var rawValue = dict.getRaw(keys[i]);\n\t        if (rawValue !== undefined) {\n\t          nodesToVisit.push(rawValue);\n\t        }\n\t      }\n\t      this._walk(nodesToVisit);\n\t      return this.capability.promise;\n\t    },\n\t    _walk: function _walk(nodesToVisit) {\n\t      var _this3 = this;\n\t\n\t      var nodesToRevisit = [];\n\t      var pendingRequests = [];\n\t      while (nodesToVisit.length) {\n\t        var currentNode = nodesToVisit.pop();\n\t        if ((0, _primitives.isRef)(currentNode)) {\n\t          if (this.refSet.has(currentNode)) {\n\t            continue;\n\t          }\n\t          try {\n\t            this.refSet.put(currentNode);\n\t            currentNode = this.xref.fetch(currentNode);\n\t          } catch (ex) {\n\t            if (!(ex instanceof _util.MissingDataException)) {\n\t              throw ex;\n\t            }\n\t            nodesToRevisit.push(currentNode);\n\t            pendingRequests.push({\n\t              begin: ex.begin,\n\t              end: ex.end\n\t            });\n\t          }\n\t        }\n\t        if (currentNode && currentNode.getBaseStreams) {\n\t          var baseStreams = currentNode.getBaseStreams();\n\t          var foundMissingData = false;\n\t          for (var i = 0, ii = baseStreams.length; i < ii; i++) {\n\t            var stream = baseStreams[i];\n\t            if (stream.getMissingChunks && stream.getMissingChunks().length) {\n\t              foundMissingData = true;\n\t              pendingRequests.push({\n\t                begin: stream.start,\n\t                end: stream.end\n\t              });\n\t            }\n\t          }\n\t          if (foundMissingData) {\n\t            nodesToRevisit.push(currentNode);\n\t          }\n\t        }\n\t        addChildren(currentNode, nodesToVisit);\n\t      }\n\t      if (pendingRequests.length) {\n\t        this.xref.stream.manager.requestRanges(pendingRequests).then(function () {\n\t          for (var _i2 = 0, _ii2 = nodesToRevisit.length; _i2 < _ii2; _i2++) {\n\t            var node = nodesToRevisit[_i2];\n\t            if ((0, _primitives.isRef)(node)) {\n\t              _this3.refSet.remove(node);\n\t            }\n\t          }\n\t          _this3._walk(nodesToRevisit);\n\t        }, this.capability.reject);\n\t        return;\n\t      }\n\t      this.refSet = null;\n\t      this.capability.resolve();\n\t    }\n\t  };\n\t  return ObjectLoader;\n\t}();\n\texports.Catalog = Catalog;\n\texports.ObjectLoader = ObjectLoader;\n\texports.XRef = XRef;\n\texports.FileSpec = FileSpec;\n\t\n\t/***/ }),\n\t/* 74 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.JpxImage = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _arithmetic_decoder = __w_pdfjs_require__(75);\n\t\n\tvar JpxError = function JpxErrorClosure() {\n\t  function JpxError(msg) {\n\t    this.message = 'JPX error: ' + msg;\n\t  }\n\t  JpxError.prototype = new Error();\n\t  JpxError.prototype.name = 'JpxError';\n\t  JpxError.constructor = JpxError;\n\t  return JpxError;\n\t}();\n\tvar JpxImage = function JpxImageClosure() {\n\t  var SubbandsGainLog2 = {\n\t    'LL': 0,\n\t    'LH': 1,\n\t    'HL': 1,\n\t    'HH': 2\n\t  };\n\t  function JpxImage() {\n\t    this.failOnCorruptedImage = false;\n\t  }\n\t  JpxImage.prototype = {\n\t    parse: function JpxImage_parse(data) {\n\t      var head = (0, _util.readUint16)(data, 0);\n\t      if (head === 0xFF4F) {\n\t        this.parseCodestream(data, 0, data.length);\n\t        return;\n\t      }\n\t      var position = 0,\n\t          length = data.length;\n\t      while (position < length) {\n\t        var headerSize = 8;\n\t        var lbox = (0, _util.readUint32)(data, position);\n\t        var tbox = (0, _util.readUint32)(data, position + 4);\n\t        position += headerSize;\n\t        if (lbox === 1) {\n\t          lbox = (0, _util.readUint32)(data, position) * 4294967296 + (0, _util.readUint32)(data, position + 4);\n\t          position += 8;\n\t          headerSize += 8;\n\t        }\n\t        if (lbox === 0) {\n\t          lbox = length - position + headerSize;\n\t        }\n\t        if (lbox < headerSize) {\n\t          throw new JpxError('Invalid box field size');\n\t        }\n\t        var dataLength = lbox - headerSize;\n\t        var jumpDataLength = true;\n\t        switch (tbox) {\n\t          case 0x6A703268:\n\t            jumpDataLength = false;\n\t            break;\n\t          case 0x636F6C72:\n\t            var method = data[position];\n\t            if (method === 1) {\n\t              var colorspace = (0, _util.readUint32)(data, position + 3);\n\t              switch (colorspace) {\n\t                case 16:\n\t                case 17:\n\t                case 18:\n\t                  break;\n\t                default:\n\t                  (0, _util.warn)('Unknown colorspace ' + colorspace);\n\t                  break;\n\t              }\n\t            } else if (method === 2) {\n\t              (0, _util.info)('ICC profile not supported');\n\t            }\n\t            break;\n\t          case 0x6A703263:\n\t            this.parseCodestream(data, position, position + dataLength);\n\t            break;\n\t          case 0x6A502020:\n\t            if ((0, _util.readUint32)(data, position) !== 0x0d0a870a) {\n\t              (0, _util.warn)('Invalid JP2 signature');\n\t            }\n\t            break;\n\t          case 0x6A501A1A:\n\t          case 0x66747970:\n\t          case 0x72726571:\n\t          case 0x72657320:\n\t          case 0x69686472:\n\t            break;\n\t          default:\n\t            var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\n\t            (0, _util.warn)('Unsupported header type ' + tbox + ' (' + headerType + ')');\n\t            break;\n\t        }\n\t        if (jumpDataLength) {\n\t          position += dataLength;\n\t        }\n\t      }\n\t    },\n\t    parseImageProperties: function JpxImage_parseImageProperties(stream) {\n\t      var newByte = stream.getByte();\n\t      while (newByte >= 0) {\n\t        var oldByte = newByte;\n\t        newByte = stream.getByte();\n\t        var code = oldByte << 8 | newByte;\n\t        if (code === 0xFF51) {\n\t          stream.skip(4);\n\t          var Xsiz = stream.getInt32() >>> 0;\n\t          var Ysiz = stream.getInt32() >>> 0;\n\t          var XOsiz = stream.getInt32() >>> 0;\n\t          var YOsiz = stream.getInt32() >>> 0;\n\t          stream.skip(16);\n\t          var Csiz = stream.getUint16();\n\t          this.width = Xsiz - XOsiz;\n\t          this.height = Ysiz - YOsiz;\n\t          this.componentsCount = Csiz;\n\t          this.bitsPerComponent = 8;\n\t          return;\n\t        }\n\t      }\n\t      throw new JpxError('No size marker found in JPX stream');\n\t    },\n\t    parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n\t      var context = {};\n\t      var doNotRecover = false;\n\t      try {\n\t        var position = start;\n\t        while (position + 1 < end) {\n\t          var code = (0, _util.readUint16)(data, position);\n\t          position += 2;\n\t          var length = 0,\n\t              j,\n\t              sqcd,\n\t              spqcds,\n\t              spqcdSize,\n\t              scalarExpounded,\n\t              tile;\n\t          switch (code) {\n\t            case 0xFF4F:\n\t              context.mainHeader = true;\n\t              break;\n\t            case 0xFFD9:\n\t              break;\n\t            case 0xFF51:\n\t              length = (0, _util.readUint16)(data, position);\n\t              var siz = {};\n\t              siz.Xsiz = (0, _util.readUint32)(data, position + 4);\n\t              siz.Ysiz = (0, _util.readUint32)(data, position + 8);\n\t              siz.XOsiz = (0, _util.readUint32)(data, position + 12);\n\t              siz.YOsiz = (0, _util.readUint32)(data, position + 16);\n\t              siz.XTsiz = (0, _util.readUint32)(data, position + 20);\n\t              siz.YTsiz = (0, _util.readUint32)(data, position + 24);\n\t              siz.XTOsiz = (0, _util.readUint32)(data, position + 28);\n\t              siz.YTOsiz = (0, _util.readUint32)(data, position + 32);\n\t              var componentsCount = (0, _util.readUint16)(data, position + 36);\n\t              siz.Csiz = componentsCount;\n\t              var components = [];\n\t              j = position + 38;\n\t              for (var i = 0; i < componentsCount; i++) {\n\t                var component = {\n\t                  precision: (data[j] & 0x7F) + 1,\n\t                  isSigned: !!(data[j] & 0x80),\n\t                  XRsiz: data[j + 1],\n\t                  YRsiz: data[j + 1]\n\t                };\n\t                calculateComponentDimensions(component, siz);\n\t                components.push(component);\n\t              }\n\t              context.SIZ = siz;\n\t              context.components = components;\n\t              calculateTileGrids(context, components);\n\t              context.QCC = [];\n\t              context.COC = [];\n\t              break;\n\t            case 0xFF5C:\n\t              length = (0, _util.readUint16)(data, position);\n\t              var qcd = {};\n\t              j = position + 2;\n\t              sqcd = data[j++];\n\t              switch (sqcd & 0x1F) {\n\t                case 0:\n\t                  spqcdSize = 8;\n\t                  scalarExpounded = true;\n\t                  break;\n\t                case 1:\n\t                  spqcdSize = 16;\n\t                  scalarExpounded = false;\n\t                  break;\n\t                case 2:\n\t                  spqcdSize = 16;\n\t                  scalarExpounded = true;\n\t                  break;\n\t                default:\n\t                  throw new Error('Invalid SQcd value ' + sqcd);\n\t              }\n\t              qcd.noQuantization = spqcdSize === 8;\n\t              qcd.scalarExpounded = scalarExpounded;\n\t              qcd.guardBits = sqcd >> 5;\n\t              spqcds = [];\n\t              while (j < length + position) {\n\t                var spqcd = {};\n\t                if (spqcdSize === 8) {\n\t                  spqcd.epsilon = data[j++] >> 3;\n\t                  spqcd.mu = 0;\n\t                } else {\n\t                  spqcd.epsilon = data[j] >> 3;\n\t                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n\t                  j += 2;\n\t                }\n\t                spqcds.push(spqcd);\n\t              }\n\t              qcd.SPqcds = spqcds;\n\t              if (context.mainHeader) {\n\t                context.QCD = qcd;\n\t              } else {\n\t                context.currentTile.QCD = qcd;\n\t                context.currentTile.QCC = [];\n\t              }\n\t              break;\n\t            case 0xFF5D:\n\t              length = (0, _util.readUint16)(data, position);\n\t              var qcc = {};\n\t              j = position + 2;\n\t              var cqcc;\n\t              if (context.SIZ.Csiz < 257) {\n\t                cqcc = data[j++];\n\t              } else {\n\t                cqcc = (0, _util.readUint16)(data, j);\n\t                j += 2;\n\t              }\n\t              sqcd = data[j++];\n\t              switch (sqcd & 0x1F) {\n\t                case 0:\n\t                  spqcdSize = 8;\n\t                  scalarExpounded = true;\n\t                  break;\n\t                case 1:\n\t                  spqcdSize = 16;\n\t                  scalarExpounded = false;\n\t                  break;\n\t                case 2:\n\t                  spqcdSize = 16;\n\t                  scalarExpounded = true;\n\t                  break;\n\t                default:\n\t                  throw new Error('Invalid SQcd value ' + sqcd);\n\t              }\n\t              qcc.noQuantization = spqcdSize === 8;\n\t              qcc.scalarExpounded = scalarExpounded;\n\t              qcc.guardBits = sqcd >> 5;\n\t              spqcds = [];\n\t              while (j < length + position) {\n\t                spqcd = {};\n\t                if (spqcdSize === 8) {\n\t                  spqcd.epsilon = data[j++] >> 3;\n\t                  spqcd.mu = 0;\n\t                } else {\n\t                  spqcd.epsilon = data[j] >> 3;\n\t                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n\t                  j += 2;\n\t                }\n\t                spqcds.push(spqcd);\n\t              }\n\t              qcc.SPqcds = spqcds;\n\t              if (context.mainHeader) {\n\t                context.QCC[cqcc] = qcc;\n\t              } else {\n\t                context.currentTile.QCC[cqcc] = qcc;\n\t              }\n\t              break;\n\t            case 0xFF52:\n\t              length = (0, _util.readUint16)(data, position);\n\t              var cod = {};\n\t              j = position + 2;\n\t              var scod = data[j++];\n\t              cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n\t              cod.sopMarkerUsed = !!(scod & 2);\n\t              cod.ephMarkerUsed = !!(scod & 4);\n\t              cod.progressionOrder = data[j++];\n\t              cod.layersCount = (0, _util.readUint16)(data, j);\n\t              j += 2;\n\t              cod.multipleComponentTransform = data[j++];\n\t              cod.decompositionLevelsCount = data[j++];\n\t              cod.xcb = (data[j++] & 0xF) + 2;\n\t              cod.ycb = (data[j++] & 0xF) + 2;\n\t              var blockStyle = data[j++];\n\t              cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n\t              cod.resetContextProbabilities = !!(blockStyle & 2);\n\t              cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n\t              cod.verticalyStripe = !!(blockStyle & 8);\n\t              cod.predictableTermination = !!(blockStyle & 16);\n\t              cod.segmentationSymbolUsed = !!(blockStyle & 32);\n\t              cod.reversibleTransformation = data[j++];\n\t              if (cod.entropyCoderWithCustomPrecincts) {\n\t                var precinctsSizes = [];\n\t                while (j < length + position) {\n\t                  var precinctsSize = data[j++];\n\t                  precinctsSizes.push({\n\t                    PPx: precinctsSize & 0xF,\n\t                    PPy: precinctsSize >> 4\n\t                  });\n\t                }\n\t                cod.precinctsSizes = precinctsSizes;\n\t              }\n\t              var unsupported = [];\n\t              if (cod.selectiveArithmeticCodingBypass) {\n\t                unsupported.push('selectiveArithmeticCodingBypass');\n\t              }\n\t              if (cod.resetContextProbabilities) {\n\t                unsupported.push('resetContextProbabilities');\n\t              }\n\t              if (cod.terminationOnEachCodingPass) {\n\t                unsupported.push('terminationOnEachCodingPass');\n\t              }\n\t              if (cod.verticalyStripe) {\n\t                unsupported.push('verticalyStripe');\n\t              }\n\t              if (cod.predictableTermination) {\n\t                unsupported.push('predictableTermination');\n\t              }\n\t              if (unsupported.length > 0) {\n\t                doNotRecover = true;\n\t                throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\n\t              }\n\t              if (context.mainHeader) {\n\t                context.COD = cod;\n\t              } else {\n\t                context.currentTile.COD = cod;\n\t                context.currentTile.COC = [];\n\t              }\n\t              break;\n\t            case 0xFF90:\n\t              length = (0, _util.readUint16)(data, position);\n\t              tile = {};\n\t              tile.index = (0, _util.readUint16)(data, position + 2);\n\t              tile.length = (0, _util.readUint32)(data, position + 4);\n\t              tile.dataEnd = tile.length + position - 2;\n\t              tile.partIndex = data[position + 8];\n\t              tile.partsCount = data[position + 9];\n\t              context.mainHeader = false;\n\t              if (tile.partIndex === 0) {\n\t                tile.COD = context.COD;\n\t                tile.COC = context.COC.slice(0);\n\t                tile.QCD = context.QCD;\n\t                tile.QCC = context.QCC.slice(0);\n\t              }\n\t              context.currentTile = tile;\n\t              break;\n\t            case 0xFF93:\n\t              tile = context.currentTile;\n\t              if (tile.partIndex === 0) {\n\t                initializeTile(context, tile.index);\n\t                buildPackets(context);\n\t              }\n\t              length = tile.dataEnd - position;\n\t              parseTilePackets(context, data, position, length);\n\t              break;\n\t            case 0xFF55:\n\t            case 0xFF57:\n\t            case 0xFF58:\n\t            case 0xFF64:\n\t              length = (0, _util.readUint16)(data, position);\n\t              break;\n\t            case 0xFF53:\n\t              throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\n\t            default:\n\t              throw new Error('Unknown codestream code: ' + code.toString(16));\n\t          }\n\t          position += length;\n\t        }\n\t      } catch (e) {\n\t        if (doNotRecover || this.failOnCorruptedImage) {\n\t          throw new JpxError(e.message);\n\t        } else {\n\t          (0, _util.warn)('JPX: Trying to recover from: ' + e.message);\n\t        }\n\t      }\n\t      this.tiles = transformComponents(context);\n\t      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n\t      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n\t      this.componentsCount = context.SIZ.Csiz;\n\t    }\n\t  };\n\t  function calculateComponentDimensions(component, siz) {\n\t    component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n\t    component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n\t    component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n\t    component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n\t    component.width = component.x1 - component.x0;\n\t    component.height = component.y1 - component.y0;\n\t  }\n\t  function calculateTileGrids(context, components) {\n\t    var siz = context.SIZ;\n\t    var tile,\n\t        tiles = [];\n\t    var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n\t    var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n\t    for (var q = 0; q < numYtiles; q++) {\n\t      for (var p = 0; p < numXtiles; p++) {\n\t        tile = {};\n\t        tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n\t        tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n\t        tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n\t        tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n\t        tile.width = tile.tx1 - tile.tx0;\n\t        tile.height = tile.ty1 - tile.ty0;\n\t        tile.components = [];\n\t        tiles.push(tile);\n\t      }\n\t    }\n\t    context.tiles = tiles;\n\t    var componentsCount = siz.Csiz;\n\t    for (var i = 0, ii = componentsCount; i < ii; i++) {\n\t      var component = components[i];\n\t      for (var j = 0, jj = tiles.length; j < jj; j++) {\n\t        var tileComponent = {};\n\t        tile = tiles[j];\n\t        tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n\t        tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n\t        tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n\t        tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n\t        tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n\t        tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n\t        tile.components[i] = tileComponent;\n\t      }\n\t    }\n\t  }\n\t  function getBlocksDimensions(context, component, r) {\n\t    var codOrCoc = component.codingStyleParameters;\n\t    var result = {};\n\t    if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n\t      result.PPx = 15;\n\t      result.PPy = 15;\n\t    } else {\n\t      result.PPx = codOrCoc.precinctsSizes[r].PPx;\n\t      result.PPy = codOrCoc.precinctsSizes[r].PPy;\n\t    }\n\t    result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n\t    result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n\t    return result;\n\t  }\n\t  function buildPrecincts(context, resolution, dimensions) {\n\t    var precinctWidth = 1 << dimensions.PPx;\n\t    var precinctHeight = 1 << dimensions.PPy;\n\t    var isZeroRes = resolution.resLevel === 0;\n\t    var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n\t    var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n\t    var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n\t    var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n\t    var numprecincts = numprecinctswide * numprecinctshigh;\n\t    resolution.precinctParameters = {\n\t      precinctWidth: precinctWidth,\n\t      precinctHeight: precinctHeight,\n\t      numprecinctswide: numprecinctswide,\n\t      numprecinctshigh: numprecinctshigh,\n\t      numprecincts: numprecincts,\n\t      precinctWidthInSubband: precinctWidthInSubband,\n\t      precinctHeightInSubband: precinctHeightInSubband\n\t    };\n\t  }\n\t  function buildCodeblocks(context, subband, dimensions) {\n\t    var xcb_ = dimensions.xcb_;\n\t    var ycb_ = dimensions.ycb_;\n\t    var codeblockWidth = 1 << xcb_;\n\t    var codeblockHeight = 1 << ycb_;\n\t    var cbx0 = subband.tbx0 >> xcb_;\n\t    var cby0 = subband.tby0 >> ycb_;\n\t    var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n\t    var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n\t    var precinctParameters = subband.resolution.precinctParameters;\n\t    var codeblocks = [];\n\t    var precincts = [];\n\t    var i, j, codeblock, precinctNumber;\n\t    for (j = cby0; j < cby1; j++) {\n\t      for (i = cbx0; i < cbx1; i++) {\n\t        codeblock = {\n\t          cbx: i,\n\t          cby: j,\n\t          tbx0: codeblockWidth * i,\n\t          tby0: codeblockHeight * j,\n\t          tbx1: codeblockWidth * (i + 1),\n\t          tby1: codeblockHeight * (j + 1)\n\t        };\n\t        codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n\t        codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n\t        codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n\t        codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n\t        var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n\t        var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n\t        precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n\t        codeblock.precinctNumber = precinctNumber;\n\t        codeblock.subbandType = subband.type;\n\t        codeblock.Lblock = 3;\n\t        if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n\t          continue;\n\t        }\n\t        codeblocks.push(codeblock);\n\t        var precinct = precincts[precinctNumber];\n\t        if (precinct !== undefined) {\n\t          if (i < precinct.cbxMin) {\n\t            precinct.cbxMin = i;\n\t          } else if (i > precinct.cbxMax) {\n\t            precinct.cbxMax = i;\n\t          }\n\t          if (j < precinct.cbyMin) {\n\t            precinct.cbxMin = j;\n\t          } else if (j > precinct.cbyMax) {\n\t            precinct.cbyMax = j;\n\t          }\n\t        } else {\n\t          precincts[precinctNumber] = precinct = {\n\t            cbxMin: i,\n\t            cbyMin: j,\n\t            cbxMax: i,\n\t            cbyMax: j\n\t          };\n\t        }\n\t        codeblock.precinct = precinct;\n\t      }\n\t    }\n\t    subband.codeblockParameters = {\n\t      codeblockWidth: xcb_,\n\t      codeblockHeight: ycb_,\n\t      numcodeblockwide: cbx1 - cbx0 + 1,\n\t      numcodeblockhigh: cby1 - cby0 + 1\n\t    };\n\t    subband.codeblocks = codeblocks;\n\t    subband.precincts = precincts;\n\t  }\n\t  function createPacket(resolution, precinctNumber, layerNumber) {\n\t    var precinctCodeblocks = [];\n\t    var subbands = resolution.subbands;\n\t    for (var i = 0, ii = subbands.length; i < ii; i++) {\n\t      var subband = subbands[i];\n\t      var codeblocks = subband.codeblocks;\n\t      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n\t        var codeblock = codeblocks[j];\n\t        if (codeblock.precinctNumber !== precinctNumber) {\n\t          continue;\n\t        }\n\t        precinctCodeblocks.push(codeblock);\n\t      }\n\t    }\n\t    return {\n\t      layerNumber: layerNumber,\n\t      codeblocks: precinctCodeblocks\n\t    };\n\t  }\n\t  function LayerResolutionComponentPositionIterator(context) {\n\t    var siz = context.SIZ;\n\t    var tileIndex = context.currentTile.index;\n\t    var tile = context.tiles[tileIndex];\n\t    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n\t    var componentsCount = siz.Csiz;\n\t    var maxDecompositionLevelsCount = 0;\n\t    for (var q = 0; q < componentsCount; q++) {\n\t      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n\t    }\n\t    var l = 0,\n\t        r = 0,\n\t        i = 0,\n\t        k = 0;\n\t    this.nextPacket = function JpxImage_nextPacket() {\n\t      for (; l < layersCount; l++) {\n\t        for (; r <= maxDecompositionLevelsCount; r++) {\n\t          for (; i < componentsCount; i++) {\n\t            var component = tile.components[i];\n\t            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n\t              continue;\n\t            }\n\t            var resolution = component.resolutions[r];\n\t            var numprecincts = resolution.precinctParameters.numprecincts;\n\t            for (; k < numprecincts;) {\n\t              var packet = createPacket(resolution, k, l);\n\t              k++;\n\t              return packet;\n\t            }\n\t            k = 0;\n\t          }\n\t          i = 0;\n\t        }\n\t        r = 0;\n\t      }\n\t      throw new JpxError('Out of packets');\n\t    };\n\t  }\n\t  function ResolutionLayerComponentPositionIterator(context) {\n\t    var siz = context.SIZ;\n\t    var tileIndex = context.currentTile.index;\n\t    var tile = context.tiles[tileIndex];\n\t    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n\t    var componentsCount = siz.Csiz;\n\t    var maxDecompositionLevelsCount = 0;\n\t    for (var q = 0; q < componentsCount; q++) {\n\t      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n\t    }\n\t    var r = 0,\n\t        l = 0,\n\t        i = 0,\n\t        k = 0;\n\t    this.nextPacket = function JpxImage_nextPacket() {\n\t      for (; r <= maxDecompositionLevelsCount; r++) {\n\t        for (; l < layersCount; l++) {\n\t          for (; i < componentsCount; i++) {\n\t            var component = tile.components[i];\n\t            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n\t              continue;\n\t            }\n\t            var resolution = component.resolutions[r];\n\t            var numprecincts = resolution.precinctParameters.numprecincts;\n\t            for (; k < numprecincts;) {\n\t              var packet = createPacket(resolution, k, l);\n\t              k++;\n\t              return packet;\n\t            }\n\t            k = 0;\n\t          }\n\t          i = 0;\n\t        }\n\t        l = 0;\n\t      }\n\t      throw new JpxError('Out of packets');\n\t    };\n\t  }\n\t  function ResolutionPositionComponentLayerIterator(context) {\n\t    var siz = context.SIZ;\n\t    var tileIndex = context.currentTile.index;\n\t    var tile = context.tiles[tileIndex];\n\t    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n\t    var componentsCount = siz.Csiz;\n\t    var l, r, c, p;\n\t    var maxDecompositionLevelsCount = 0;\n\t    for (c = 0; c < componentsCount; c++) {\n\t      var component = tile.components[c];\n\t      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n\t    }\n\t    var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n\t    for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n\t      var maxNumPrecincts = 0;\n\t      for (c = 0; c < componentsCount; ++c) {\n\t        var resolutions = tile.components[c].resolutions;\n\t        if (r < resolutions.length) {\n\t          maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n\t        }\n\t      }\n\t      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n\t    }\n\t    l = 0;\n\t    r = 0;\n\t    c = 0;\n\t    p = 0;\n\t    this.nextPacket = function JpxImage_nextPacket() {\n\t      for (; r <= maxDecompositionLevelsCount; r++) {\n\t        for (; p < maxNumPrecinctsInLevel[r]; p++) {\n\t          for (; c < componentsCount; c++) {\n\t            var component = tile.components[c];\n\t            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n\t              continue;\n\t            }\n\t            var resolution = component.resolutions[r];\n\t            var numprecincts = resolution.precinctParameters.numprecincts;\n\t            if (p >= numprecincts) {\n\t              continue;\n\t            }\n\t            for (; l < layersCount;) {\n\t              var packet = createPacket(resolution, p, l);\n\t              l++;\n\t              return packet;\n\t            }\n\t            l = 0;\n\t          }\n\t          c = 0;\n\t        }\n\t        p = 0;\n\t      }\n\t      throw new JpxError('Out of packets');\n\t    };\n\t  }\n\t  function PositionComponentResolutionLayerIterator(context) {\n\t    var siz = context.SIZ;\n\t    var tileIndex = context.currentTile.index;\n\t    var tile = context.tiles[tileIndex];\n\t    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n\t    var componentsCount = siz.Csiz;\n\t    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n\t    var precinctsIterationSizes = precinctsSizes;\n\t    var l = 0,\n\t        r = 0,\n\t        c = 0,\n\t        px = 0,\n\t        py = 0;\n\t    this.nextPacket = function JpxImage_nextPacket() {\n\t      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n\t        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n\t          for (; c < componentsCount; c++) {\n\t            var component = tile.components[c];\n\t            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n\t            for (; r <= decompositionLevelsCount; r++) {\n\t              var resolution = component.resolutions[r];\n\t              var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n\t              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n\t              if (k === null) {\n\t                continue;\n\t              }\n\t              for (; l < layersCount;) {\n\t                var packet = createPacket(resolution, k, l);\n\t                l++;\n\t                return packet;\n\t              }\n\t              l = 0;\n\t            }\n\t            r = 0;\n\t          }\n\t          c = 0;\n\t        }\n\t        px = 0;\n\t      }\n\t      throw new JpxError('Out of packets');\n\t    };\n\t  }\n\t  function ComponentPositionResolutionLayerIterator(context) {\n\t    var siz = context.SIZ;\n\t    var tileIndex = context.currentTile.index;\n\t    var tile = context.tiles[tileIndex];\n\t    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n\t    var componentsCount = siz.Csiz;\n\t    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n\t    var l = 0,\n\t        r = 0,\n\t        c = 0,\n\t        px = 0,\n\t        py = 0;\n\t    this.nextPacket = function JpxImage_nextPacket() {\n\t      for (; c < componentsCount; ++c) {\n\t        var component = tile.components[c];\n\t        var precinctsIterationSizes = precinctsSizes.components[c];\n\t        var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n\t        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n\t          for (; px < precinctsIterationSizes.maxNumWide; px++) {\n\t            for (; r <= decompositionLevelsCount; r++) {\n\t              var resolution = component.resolutions[r];\n\t              var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n\t              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n\t              if (k === null) {\n\t                continue;\n\t              }\n\t              for (; l < layersCount;) {\n\t                var packet = createPacket(resolution, k, l);\n\t                l++;\n\t                return packet;\n\t              }\n\t              l = 0;\n\t            }\n\t            r = 0;\n\t          }\n\t          px = 0;\n\t        }\n\t        py = 0;\n\t      }\n\t      throw new JpxError('Out of packets');\n\t    };\n\t  }\n\t  function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n\t    var posX = pxIndex * precinctIterationSizes.minWidth;\n\t    var posY = pyIndex * precinctIterationSizes.minHeight;\n\t    if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n\t      return null;\n\t    }\n\t    var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n\t    return posX / sizeInImageScale.height + startPrecinctRowIndex;\n\t  }\n\t  function getPrecinctSizesInImageScale(tile) {\n\t    var componentsCount = tile.components.length;\n\t    var minWidth = Number.MAX_VALUE;\n\t    var minHeight = Number.MAX_VALUE;\n\t    var maxNumWide = 0;\n\t    var maxNumHigh = 0;\n\t    var sizePerComponent = new Array(componentsCount);\n\t    for (var c = 0; c < componentsCount; c++) {\n\t      var component = tile.components[c];\n\t      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n\t      var sizePerResolution = new Array(decompositionLevelsCount + 1);\n\t      var minWidthCurrentComponent = Number.MAX_VALUE;\n\t      var minHeightCurrentComponent = Number.MAX_VALUE;\n\t      var maxNumWideCurrentComponent = 0;\n\t      var maxNumHighCurrentComponent = 0;\n\t      var scale = 1;\n\t      for (var r = decompositionLevelsCount; r >= 0; --r) {\n\t        var resolution = component.resolutions[r];\n\t        var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n\t        var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n\t        minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n\t        minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n\t        maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n\t        maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n\t        sizePerResolution[r] = {\n\t          width: widthCurrentResolution,\n\t          height: heightCurrentResolution\n\t        };\n\t        scale <<= 1;\n\t      }\n\t      minWidth = Math.min(minWidth, minWidthCurrentComponent);\n\t      minHeight = Math.min(minHeight, minHeightCurrentComponent);\n\t      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n\t      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n\t      sizePerComponent[c] = {\n\t        resolutions: sizePerResolution,\n\t        minWidth: minWidthCurrentComponent,\n\t        minHeight: minHeightCurrentComponent,\n\t        maxNumWide: maxNumWideCurrentComponent,\n\t        maxNumHigh: maxNumHighCurrentComponent\n\t      };\n\t    }\n\t    return {\n\t      components: sizePerComponent,\n\t      minWidth: minWidth,\n\t      minHeight: minHeight,\n\t      maxNumWide: maxNumWide,\n\t      maxNumHigh: maxNumHigh\n\t    };\n\t  }\n\t  function buildPackets(context) {\n\t    var siz = context.SIZ;\n\t    var tileIndex = context.currentTile.index;\n\t    var tile = context.tiles[tileIndex];\n\t    var componentsCount = siz.Csiz;\n\t    for (var c = 0; c < componentsCount; c++) {\n\t      var component = tile.components[c];\n\t      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n\t      var resolutions = [];\n\t      var subbands = [];\n\t      for (var r = 0; r <= decompositionLevelsCount; r++) {\n\t        var blocksDimensions = getBlocksDimensions(context, component, r);\n\t        var resolution = {};\n\t        var scale = 1 << decompositionLevelsCount - r;\n\t        resolution.trx0 = Math.ceil(component.tcx0 / scale);\n\t        resolution.try0 = Math.ceil(component.tcy0 / scale);\n\t        resolution.trx1 = Math.ceil(component.tcx1 / scale);\n\t        resolution.try1 = Math.ceil(component.tcy1 / scale);\n\t        resolution.resLevel = r;\n\t        buildPrecincts(context, resolution, blocksDimensions);\n\t        resolutions.push(resolution);\n\t        var subband;\n\t        if (r === 0) {\n\t          subband = {};\n\t          subband.type = 'LL';\n\t          subband.tbx0 = Math.ceil(component.tcx0 / scale);\n\t          subband.tby0 = Math.ceil(component.tcy0 / scale);\n\t          subband.tbx1 = Math.ceil(component.tcx1 / scale);\n\t          subband.tby1 = Math.ceil(component.tcy1 / scale);\n\t          subband.resolution = resolution;\n\t          buildCodeblocks(context, subband, blocksDimensions);\n\t          subbands.push(subband);\n\t          resolution.subbands = [subband];\n\t        } else {\n\t          var bscale = 1 << decompositionLevelsCount - r + 1;\n\t          var resolutionSubbands = [];\n\t          subband = {};\n\t          subband.type = 'HL';\n\t          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n\t          subband.tby0 = Math.ceil(component.tcy0 / bscale);\n\t          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n\t          subband.tby1 = Math.ceil(component.tcy1 / bscale);\n\t          subband.resolution = resolution;\n\t          buildCodeblocks(context, subband, blocksDimensions);\n\t          subbands.push(subband);\n\t          resolutionSubbands.push(subband);\n\t          subband = {};\n\t          subband.type = 'LH';\n\t          subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n\t          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n\t          subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n\t          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n\t          subband.resolution = resolution;\n\t          buildCodeblocks(context, subband, blocksDimensions);\n\t          subbands.push(subband);\n\t          resolutionSubbands.push(subband);\n\t          subband = {};\n\t          subband.type = 'HH';\n\t          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n\t          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n\t          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n\t          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n\t          subband.resolution = resolution;\n\t          buildCodeblocks(context, subband, blocksDimensions);\n\t          subbands.push(subband);\n\t          resolutionSubbands.push(subband);\n\t          resolution.subbands = resolutionSubbands;\n\t        }\n\t      }\n\t      component.resolutions = resolutions;\n\t      component.subbands = subbands;\n\t    }\n\t    var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n\t    switch (progressionOrder) {\n\t      case 0:\n\t        tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n\t        break;\n\t      case 1:\n\t        tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n\t        break;\n\t      case 2:\n\t        tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n\t        break;\n\t      case 3:\n\t        tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n\t        break;\n\t      case 4:\n\t        tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n\t        break;\n\t      default:\n\t        throw new JpxError('Unsupported progression order ' + progressionOrder);\n\t    }\n\t  }\n\t  function parseTilePackets(context, data, offset, dataLength) {\n\t    var position = 0;\n\t    var buffer,\n\t        bufferSize = 0,\n\t        skipNextBit = false;\n\t    function readBits(count) {\n\t      while (bufferSize < count) {\n\t        var b = data[offset + position];\n\t        position++;\n\t        if (skipNextBit) {\n\t          buffer = buffer << 7 | b;\n\t          bufferSize += 7;\n\t          skipNextBit = false;\n\t        } else {\n\t          buffer = buffer << 8 | b;\n\t          bufferSize += 8;\n\t        }\n\t        if (b === 0xFF) {\n\t          skipNextBit = true;\n\t        }\n\t      }\n\t      bufferSize -= count;\n\t      return buffer >>> bufferSize & (1 << count) - 1;\n\t    }\n\t    function skipMarkerIfEqual(value) {\n\t      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\n\t        skipBytes(1);\n\t        return true;\n\t      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\n\t        skipBytes(2);\n\t        return true;\n\t      }\n\t      return false;\n\t    }\n\t    function skipBytes(count) {\n\t      position += count;\n\t    }\n\t    function alignToByte() {\n\t      bufferSize = 0;\n\t      if (skipNextBit) {\n\t        position++;\n\t        skipNextBit = false;\n\t      }\n\t    }\n\t    function readCodingpasses() {\n\t      if (readBits(1) === 0) {\n\t        return 1;\n\t      }\n\t      if (readBits(1) === 0) {\n\t        return 2;\n\t      }\n\t      var value = readBits(2);\n\t      if (value < 3) {\n\t        return value + 3;\n\t      }\n\t      value = readBits(5);\n\t      if (value < 31) {\n\t        return value + 6;\n\t      }\n\t      value = readBits(7);\n\t      return value + 37;\n\t    }\n\t    var tileIndex = context.currentTile.index;\n\t    var tile = context.tiles[tileIndex];\n\t    var sopMarkerUsed = context.COD.sopMarkerUsed;\n\t    var ephMarkerUsed = context.COD.ephMarkerUsed;\n\t    var packetsIterator = tile.packetsIterator;\n\t    while (position < dataLength) {\n\t      alignToByte();\n\t      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n\t        skipBytes(4);\n\t      }\n\t      var packet = packetsIterator.nextPacket();\n\t      if (!readBits(1)) {\n\t        continue;\n\t      }\n\t      var layerNumber = packet.layerNumber;\n\t      var queue = [],\n\t          codeblock;\n\t      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n\t        codeblock = packet.codeblocks[i];\n\t        var precinct = codeblock.precinct;\n\t        var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n\t        var codeblockRow = codeblock.cby - precinct.cbyMin;\n\t        var codeblockIncluded = false;\n\t        var firstTimeInclusion = false;\n\t        var valueReady;\n\t        if (codeblock['included'] !== undefined) {\n\t          codeblockIncluded = !!readBits(1);\n\t        } else {\n\t          precinct = codeblock.precinct;\n\t          var inclusionTree, zeroBitPlanesTree;\n\t          if (precinct['inclusionTree'] !== undefined) {\n\t            inclusionTree = precinct.inclusionTree;\n\t          } else {\n\t            var width = precinct.cbxMax - precinct.cbxMin + 1;\n\t            var height = precinct.cbyMax - precinct.cbyMin + 1;\n\t            inclusionTree = new InclusionTree(width, height, layerNumber);\n\t            zeroBitPlanesTree = new TagTree(width, height);\n\t            precinct.inclusionTree = inclusionTree;\n\t            precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n\t          }\n\t          if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n\t            while (true) {\n\t              if (readBits(1)) {\n\t                valueReady = !inclusionTree.nextLevel();\n\t                if (valueReady) {\n\t                  codeblock.included = true;\n\t                  codeblockIncluded = firstTimeInclusion = true;\n\t                  break;\n\t                }\n\t              } else {\n\t                inclusionTree.incrementValue(layerNumber);\n\t                break;\n\t              }\n\t            }\n\t          }\n\t        }\n\t        if (!codeblockIncluded) {\n\t          continue;\n\t        }\n\t        if (firstTimeInclusion) {\n\t          zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n\t          zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n\t          while (true) {\n\t            if (readBits(1)) {\n\t              valueReady = !zeroBitPlanesTree.nextLevel();\n\t              if (valueReady) {\n\t                break;\n\t              }\n\t            } else {\n\t              zeroBitPlanesTree.incrementValue();\n\t            }\n\t          }\n\t          codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n\t        }\n\t        var codingpasses = readCodingpasses();\n\t        while (readBits(1)) {\n\t          codeblock.Lblock++;\n\t        }\n\t        var codingpassesLog2 = (0, _util.log2)(codingpasses);\n\t        var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n\t        var codedDataLength = readBits(bits);\n\t        queue.push({\n\t          codeblock: codeblock,\n\t          codingpasses: codingpasses,\n\t          dataLength: codedDataLength\n\t        });\n\t      }\n\t      alignToByte();\n\t      if (ephMarkerUsed) {\n\t        skipMarkerIfEqual(0x92);\n\t      }\n\t      while (queue.length > 0) {\n\t        var packetItem = queue.shift();\n\t        codeblock = packetItem.codeblock;\n\t        if (codeblock['data'] === undefined) {\n\t          codeblock.data = [];\n\t        }\n\t        codeblock.data.push({\n\t          data: data,\n\t          start: offset + position,\n\t          end: offset + position + packetItem.dataLength,\n\t          codingpasses: packetItem.codingpasses\n\t        });\n\t        position += packetItem.dataLength;\n\t      }\n\t    }\n\t    return position;\n\t  }\n\t  function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n\t    var x0 = subband.tbx0;\n\t    var y0 = subband.tby0;\n\t    var width = subband.tbx1 - subband.tbx0;\n\t    var codeblocks = subband.codeblocks;\n\t    var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n\t    var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n\t    for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n\t      var codeblock = codeblocks[i];\n\t      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n\t      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n\t      if (blockWidth === 0 || blockHeight === 0) {\n\t        continue;\n\t      }\n\t      if (codeblock['data'] === undefined) {\n\t        continue;\n\t      }\n\t      var bitModel, currentCodingpassType;\n\t      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n\t      currentCodingpassType = 2;\n\t      var data = codeblock.data,\n\t          totalLength = 0,\n\t          codingpasses = 0;\n\t      var j, jj, dataItem;\n\t      for (j = 0, jj = data.length; j < jj; j++) {\n\t        dataItem = data[j];\n\t        totalLength += dataItem.end - dataItem.start;\n\t        codingpasses += dataItem.codingpasses;\n\t      }\n\t      var encodedData = new Uint8Array(totalLength);\n\t      var position = 0;\n\t      for (j = 0, jj = data.length; j < jj; j++) {\n\t        dataItem = data[j];\n\t        var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n\t        encodedData.set(chunk, position);\n\t        position += chunk.length;\n\t      }\n\t      var decoder = new _arithmetic_decoder.ArithmeticDecoder(encodedData, 0, totalLength);\n\t      bitModel.setDecoder(decoder);\n\t      for (j = 0; j < codingpasses; j++) {\n\t        switch (currentCodingpassType) {\n\t          case 0:\n\t            bitModel.runSignificancePropagationPass();\n\t            break;\n\t          case 1:\n\t            bitModel.runMagnitudeRefinementPass();\n\t            break;\n\t          case 2:\n\t            bitModel.runCleanupPass();\n\t            if (segmentationSymbolUsed) {\n\t              bitModel.checkSegmentationSymbol();\n\t            }\n\t            break;\n\t        }\n\t        currentCodingpassType = (currentCodingpassType + 1) % 3;\n\t      }\n\t      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n\t      var sign = bitModel.coefficentsSign;\n\t      var magnitude = bitModel.coefficentsMagnitude;\n\t      var bitsDecoded = bitModel.bitsDecoded;\n\t      var magnitudeCorrection = reversible ? 0 : 0.5;\n\t      var k, n, nb;\n\t      position = 0;\n\t      var interleave = subband.type !== 'LL';\n\t      for (j = 0; j < blockHeight; j++) {\n\t        var row = offset / width | 0;\n\t        var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n\t        for (k = 0; k < blockWidth; k++) {\n\t          n = magnitude[position];\n\t          if (n !== 0) {\n\t            n = (n + magnitudeCorrection) * delta;\n\t            if (sign[position] !== 0) {\n\t              n = -n;\n\t            }\n\t            nb = bitsDecoded[position];\n\t            var pos = interleave ? levelOffset + (offset << 1) : offset;\n\t            if (reversible && nb >= mb) {\n\t              coefficients[pos] = n;\n\t            } else {\n\t              coefficients[pos] = n * (1 << mb - nb);\n\t            }\n\t          }\n\t          offset++;\n\t          position++;\n\t        }\n\t        offset += width - blockWidth;\n\t      }\n\t    }\n\t  }\n\t  function transformTile(context, tile, c) {\n\t    var component = tile.components[c];\n\t    var codingStyleParameters = component.codingStyleParameters;\n\t    var quantizationParameters = component.quantizationParameters;\n\t    var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n\t    var spqcds = quantizationParameters.SPqcds;\n\t    var scalarExpounded = quantizationParameters.scalarExpounded;\n\t    var guardBits = quantizationParameters.guardBits;\n\t    var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n\t    var precision = context.components[c].precision;\n\t    var reversible = codingStyleParameters.reversibleTransformation;\n\t    var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n\t    var subbandCoefficients = [];\n\t    var b = 0;\n\t    for (var i = 0; i <= decompositionLevelsCount; i++) {\n\t      var resolution = component.resolutions[i];\n\t      var width = resolution.trx1 - resolution.trx0;\n\t      var height = resolution.try1 - resolution.try0;\n\t      var coefficients = new Float32Array(width * height);\n\t      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n\t        var mu, epsilon;\n\t        if (!scalarExpounded) {\n\t          mu = spqcds[0].mu;\n\t          epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n\t        } else {\n\t          mu = spqcds[b].mu;\n\t          epsilon = spqcds[b].epsilon;\n\t          b++;\n\t        }\n\t        var subband = resolution.subbands[j];\n\t        var gainLog2 = SubbandsGainLog2[subband.type];\n\t        var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n\t        var mb = guardBits + epsilon - 1;\n\t        copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n\t      }\n\t      subbandCoefficients.push({\n\t        width: width,\n\t        height: height,\n\t        items: coefficients\n\t      });\n\t    }\n\t    var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n\t    return {\n\t      left: component.tcx0,\n\t      top: component.tcy0,\n\t      width: result.width,\n\t      height: result.height,\n\t      items: result.items\n\t    };\n\t  }\n\t  function transformComponents(context) {\n\t    var siz = context.SIZ;\n\t    var components = context.components;\n\t    var componentsCount = siz.Csiz;\n\t    var resultImages = [];\n\t    for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n\t      var tile = context.tiles[i];\n\t      var transformedTiles = [];\n\t      var c;\n\t      for (c = 0; c < componentsCount; c++) {\n\t        transformedTiles[c] = transformTile(context, tile, c);\n\t      }\n\t      var tile0 = transformedTiles[0];\n\t      var out = new Uint8ClampedArray(tile0.items.length * componentsCount);\n\t      var result = {\n\t        left: tile0.left,\n\t        top: tile0.top,\n\t        width: tile0.width,\n\t        height: tile0.height,\n\t        items: out\n\t      };\n\t      var shift, offset;\n\t      var pos = 0,\n\t          j,\n\t          jj,\n\t          y0,\n\t          y1,\n\t          y2;\n\t      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n\t        var fourComponents = componentsCount === 4;\n\t        var y0items = transformedTiles[0].items;\n\t        var y1items = transformedTiles[1].items;\n\t        var y2items = transformedTiles[2].items;\n\t        var y3items = fourComponents ? transformedTiles[3].items : null;\n\t        shift = components[0].precision - 8;\n\t        offset = (128 << shift) + 0.5;\n\t        var component0 = tile.components[0];\n\t        var alpha01 = componentsCount - 3;\n\t        jj = y0items.length;\n\t        if (!component0.codingStyleParameters.reversibleTransformation) {\n\t          for (j = 0; j < jj; j++, pos += alpha01) {\n\t            y0 = y0items[j] + offset;\n\t            y1 = y1items[j];\n\t            y2 = y2items[j];\n\t            out[pos++] = y0 + 1.402 * y2 >> shift;\n\t            out[pos++] = y0 - 0.34413 * y1 - 0.71414 * y2 >> shift;\n\t            out[pos++] = y0 + 1.772 * y1 >> shift;\n\t          }\n\t        } else {\n\t          for (j = 0; j < jj; j++, pos += alpha01) {\n\t            y0 = y0items[j] + offset;\n\t            y1 = y1items[j];\n\t            y2 = y2items[j];\n\t            var g = y0 - (y2 + y1 >> 2);\n\t            out[pos++] = g + y2 >> shift;\n\t            out[pos++] = g >> shift;\n\t            out[pos++] = g + y1 >> shift;\n\t          }\n\t        }\n\t        if (fourComponents) {\n\t          for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n\t            out[pos] = y3items[j] + offset >> shift;\n\t          }\n\t        }\n\t      } else {\n\t        for (c = 0; c < componentsCount; c++) {\n\t          var items = transformedTiles[c].items;\n\t          shift = components[c].precision - 8;\n\t          offset = (128 << shift) + 0.5;\n\t          for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n\t            out[pos] = items[j] + offset >> shift;\n\t            pos += componentsCount;\n\t          }\n\t        }\n\t      }\n\t      resultImages.push(result);\n\t    }\n\t    return resultImages;\n\t  }\n\t  function initializeTile(context, tileIndex) {\n\t    var siz = context.SIZ;\n\t    var componentsCount = siz.Csiz;\n\t    var tile = context.tiles[tileIndex];\n\t    for (var c = 0; c < componentsCount; c++) {\n\t      var component = tile.components[c];\n\t      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n\t      component.quantizationParameters = qcdOrQcc;\n\t      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n\t      component.codingStyleParameters = codOrCoc;\n\t    }\n\t    tile.codingStyleDefaultParameters = context.currentTile.COD;\n\t  }\n\t  var TagTree = function TagTreeClosure() {\n\t    function TagTree(width, height) {\n\t      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n\t      this.levels = [];\n\t      for (var i = 0; i < levelsLength; i++) {\n\t        var level = {\n\t          width: width,\n\t          height: height,\n\t          items: []\n\t        };\n\t        this.levels.push(level);\n\t        width = Math.ceil(width / 2);\n\t        height = Math.ceil(height / 2);\n\t      }\n\t    }\n\t    TagTree.prototype = {\n\t      reset: function TagTree_reset(i, j) {\n\t        var currentLevel = 0,\n\t            value = 0,\n\t            level;\n\t        while (currentLevel < this.levels.length) {\n\t          level = this.levels[currentLevel];\n\t          var index = i + j * level.width;\n\t          if (level.items[index] !== undefined) {\n\t            value = level.items[index];\n\t            break;\n\t          }\n\t          level.index = index;\n\t          i >>= 1;\n\t          j >>= 1;\n\t          currentLevel++;\n\t        }\n\t        currentLevel--;\n\t        level = this.levels[currentLevel];\n\t        level.items[level.index] = value;\n\t        this.currentLevel = currentLevel;\n\t        delete this.value;\n\t      },\n\t      incrementValue: function TagTree_incrementValue() {\n\t        var level = this.levels[this.currentLevel];\n\t        level.items[level.index]++;\n\t      },\n\t      nextLevel: function TagTree_nextLevel() {\n\t        var currentLevel = this.currentLevel;\n\t        var level = this.levels[currentLevel];\n\t        var value = level.items[level.index];\n\t        currentLevel--;\n\t        if (currentLevel < 0) {\n\t          this.value = value;\n\t          return false;\n\t        }\n\t        this.currentLevel = currentLevel;\n\t        level = this.levels[currentLevel];\n\t        level.items[level.index] = value;\n\t        return true;\n\t      }\n\t    };\n\t    return TagTree;\n\t  }();\n\t  var InclusionTree = function InclusionTreeClosure() {\n\t    function InclusionTree(width, height, defaultValue) {\n\t      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n\t      this.levels = [];\n\t      for (var i = 0; i < levelsLength; i++) {\n\t        var items = new Uint8Array(width * height);\n\t        for (var j = 0, jj = items.length; j < jj; j++) {\n\t          items[j] = defaultValue;\n\t        }\n\t        var level = {\n\t          width: width,\n\t          height: height,\n\t          items: items\n\t        };\n\t        this.levels.push(level);\n\t        width = Math.ceil(width / 2);\n\t        height = Math.ceil(height / 2);\n\t      }\n\t    }\n\t    InclusionTree.prototype = {\n\t      reset: function InclusionTree_reset(i, j, stopValue) {\n\t        var currentLevel = 0;\n\t        while (currentLevel < this.levels.length) {\n\t          var level = this.levels[currentLevel];\n\t          var index = i + j * level.width;\n\t          level.index = index;\n\t          var value = level.items[index];\n\t          if (value === 0xFF) {\n\t            break;\n\t          }\n\t          if (value > stopValue) {\n\t            this.currentLevel = currentLevel;\n\t            this.propagateValues();\n\t            return false;\n\t          }\n\t          i >>= 1;\n\t          j >>= 1;\n\t          currentLevel++;\n\t        }\n\t        this.currentLevel = currentLevel - 1;\n\t        return true;\n\t      },\n\t      incrementValue: function InclusionTree_incrementValue(stopValue) {\n\t        var level = this.levels[this.currentLevel];\n\t        level.items[level.index] = stopValue + 1;\n\t        this.propagateValues();\n\t      },\n\t      propagateValues: function InclusionTree_propagateValues() {\n\t        var levelIndex = this.currentLevel;\n\t        var level = this.levels[levelIndex];\n\t        var currentValue = level.items[level.index];\n\t        while (--levelIndex >= 0) {\n\t          level = this.levels[levelIndex];\n\t          level.items[level.index] = currentValue;\n\t        }\n\t      },\n\t      nextLevel: function InclusionTree_nextLevel() {\n\t        var currentLevel = this.currentLevel;\n\t        var level = this.levels[currentLevel];\n\t        var value = level.items[level.index];\n\t        level.items[level.index] = 0xFF;\n\t        currentLevel--;\n\t        if (currentLevel < 0) {\n\t          return false;\n\t        }\n\t        this.currentLevel = currentLevel;\n\t        level = this.levels[currentLevel];\n\t        level.items[level.index] = value;\n\t        return true;\n\t      }\n\t    };\n\t    return InclusionTree;\n\t  }();\n\t  var BitModel = function BitModelClosure() {\n\t    var UNIFORM_CONTEXT = 17;\n\t    var RUNLENGTH_CONTEXT = 18;\n\t    var LLAndLHContextsLabel = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]);\n\t    var HLContextLabel = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]);\n\t    var HHContextLabel = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);\n\t    function BitModel(width, height, subband, zeroBitPlanes, mb) {\n\t      this.width = width;\n\t      this.height = height;\n\t      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\n\t      var coefficientCount = width * height;\n\t      this.neighborsSignificance = new Uint8Array(coefficientCount);\n\t      this.coefficentsSign = new Uint8Array(coefficientCount);\n\t      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\n\t      this.processingFlags = new Uint8Array(coefficientCount);\n\t      var bitsDecoded = new Uint8Array(coefficientCount);\n\t      if (zeroBitPlanes !== 0) {\n\t        for (var i = 0; i < coefficientCount; i++) {\n\t          bitsDecoded[i] = zeroBitPlanes;\n\t        }\n\t      }\n\t      this.bitsDecoded = bitsDecoded;\n\t      this.reset();\n\t    }\n\t    BitModel.prototype = {\n\t      setDecoder: function BitModel_setDecoder(decoder) {\n\t        this.decoder = decoder;\n\t      },\n\t      reset: function BitModel_reset() {\n\t        this.contexts = new Int8Array(19);\n\t        this.contexts[0] = 4 << 1 | 0;\n\t        this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n\t        this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n\t      },\n\t      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n\t        var neighborsSignificance = this.neighborsSignificance;\n\t        var width = this.width,\n\t            height = this.height;\n\t        var left = column > 0;\n\t        var right = column + 1 < width;\n\t        var i;\n\t        if (row > 0) {\n\t          i = index - width;\n\t          if (left) {\n\t            neighborsSignificance[i - 1] += 0x10;\n\t          }\n\t          if (right) {\n\t            neighborsSignificance[i + 1] += 0x10;\n\t          }\n\t          neighborsSignificance[i] += 0x04;\n\t        }\n\t        if (row + 1 < height) {\n\t          i = index + width;\n\t          if (left) {\n\t            neighborsSignificance[i - 1] += 0x10;\n\t          }\n\t          if (right) {\n\t            neighborsSignificance[i + 1] += 0x10;\n\t          }\n\t          neighborsSignificance[i] += 0x04;\n\t        }\n\t        if (left) {\n\t          neighborsSignificance[index - 1] += 0x01;\n\t        }\n\t        if (right) {\n\t          neighborsSignificance[index + 1] += 0x01;\n\t        }\n\t        neighborsSignificance[index] |= 0x80;\n\t      },\n\t      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n\t        var decoder = this.decoder;\n\t        var width = this.width,\n\t            height = this.height;\n\t        var coefficentsMagnitude = this.coefficentsMagnitude;\n\t        var coefficentsSign = this.coefficentsSign;\n\t        var neighborsSignificance = this.neighborsSignificance;\n\t        var processingFlags = this.processingFlags;\n\t        var contexts = this.contexts;\n\t        var labels = this.contextLabelTable;\n\t        var bitsDecoded = this.bitsDecoded;\n\t        var processedInverseMask = ~1;\n\t        var processedMask = 1;\n\t        var firstMagnitudeBitMask = 2;\n\t        for (var i0 = 0; i0 < height; i0 += 4) {\n\t          for (var j = 0; j < width; j++) {\n\t            var index = i0 * width + j;\n\t            for (var i1 = 0; i1 < 4; i1++, index += width) {\n\t              var i = i0 + i1;\n\t              if (i >= height) {\n\t                break;\n\t              }\n\t              processingFlags[index] &= processedInverseMask;\n\t              if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n\t                continue;\n\t              }\n\t              var contextLabel = labels[neighborsSignificance[index]];\n\t              var decision = decoder.readBit(contexts, contextLabel);\n\t              if (decision) {\n\t                var sign = this.decodeSignBit(i, j, index);\n\t                coefficentsSign[index] = sign;\n\t                coefficentsMagnitude[index] = 1;\n\t                this.setNeighborsSignificance(i, j, index);\n\t                processingFlags[index] |= firstMagnitudeBitMask;\n\t              }\n\t              bitsDecoded[index]++;\n\t              processingFlags[index] |= processedMask;\n\t            }\n\t          }\n\t        }\n\t      },\n\t      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n\t        var width = this.width,\n\t            height = this.height;\n\t        var coefficentsMagnitude = this.coefficentsMagnitude;\n\t        var coefficentsSign = this.coefficentsSign;\n\t        var contribution, sign0, sign1, significance1;\n\t        var contextLabel, decoded;\n\t        significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n\t        if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n\t          sign1 = coefficentsSign[index + 1];\n\t          if (significance1) {\n\t            sign0 = coefficentsSign[index - 1];\n\t            contribution = 1 - sign1 - sign0;\n\t          } else {\n\t            contribution = 1 - sign1 - sign1;\n\t          }\n\t        } else if (significance1) {\n\t          sign0 = coefficentsSign[index - 1];\n\t          contribution = 1 - sign0 - sign0;\n\t        } else {\n\t          contribution = 0;\n\t        }\n\t        var horizontalContribution = 3 * contribution;\n\t        significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n\t        if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n\t          sign1 = coefficentsSign[index + width];\n\t          if (significance1) {\n\t            sign0 = coefficentsSign[index - width];\n\t            contribution = 1 - sign1 - sign0 + horizontalContribution;\n\t          } else {\n\t            contribution = 1 - sign1 - sign1 + horizontalContribution;\n\t          }\n\t        } else if (significance1) {\n\t          sign0 = coefficentsSign[index - width];\n\t          contribution = 1 - sign0 - sign0 + horizontalContribution;\n\t        } else {\n\t          contribution = horizontalContribution;\n\t        }\n\t        if (contribution >= 0) {\n\t          contextLabel = 9 + contribution;\n\t          decoded = this.decoder.readBit(this.contexts, contextLabel);\n\t        } else {\n\t          contextLabel = 9 - contribution;\n\t          decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n\t        }\n\t        return decoded;\n\t      },\n\t      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n\t        var decoder = this.decoder;\n\t        var width = this.width,\n\t            height = this.height;\n\t        var coefficentsMagnitude = this.coefficentsMagnitude;\n\t        var neighborsSignificance = this.neighborsSignificance;\n\t        var contexts = this.contexts;\n\t        var bitsDecoded = this.bitsDecoded;\n\t        var processingFlags = this.processingFlags;\n\t        var processedMask = 1;\n\t        var firstMagnitudeBitMask = 2;\n\t        var length = width * height;\n\t        var width4 = width * 4;\n\t        for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n\t          indexNext = Math.min(length, index0 + width4);\n\t          for (var j = 0; j < width; j++) {\n\t            for (var index = index0 + j; index < indexNext; index += width) {\n\t              if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n\t                continue;\n\t              }\n\t              var contextLabel = 16;\n\t              if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n\t                processingFlags[index] ^= firstMagnitudeBitMask;\n\t                var significance = neighborsSignificance[index] & 127;\n\t                contextLabel = significance === 0 ? 15 : 14;\n\t              }\n\t              var bit = decoder.readBit(contexts, contextLabel);\n\t              coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n\t              bitsDecoded[index]++;\n\t              processingFlags[index] |= processedMask;\n\t            }\n\t          }\n\t        }\n\t      },\n\t      runCleanupPass: function BitModel_runCleanupPass() {\n\t        var decoder = this.decoder;\n\t        var width = this.width,\n\t            height = this.height;\n\t        var neighborsSignificance = this.neighborsSignificance;\n\t        var coefficentsMagnitude = this.coefficentsMagnitude;\n\t        var coefficentsSign = this.coefficentsSign;\n\t        var contexts = this.contexts;\n\t        var labels = this.contextLabelTable;\n\t        var bitsDecoded = this.bitsDecoded;\n\t        var processingFlags = this.processingFlags;\n\t        var processedMask = 1;\n\t        var firstMagnitudeBitMask = 2;\n\t        var oneRowDown = width;\n\t        var twoRowsDown = width * 2;\n\t        var threeRowsDown = width * 3;\n\t        var iNext;\n\t        for (var i0 = 0; i0 < height; i0 = iNext) {\n\t          iNext = Math.min(i0 + 4, height);\n\t          var indexBase = i0 * width;\n\t          var checkAllEmpty = i0 + 3 < height;\n\t          for (var j = 0; j < width; j++) {\n\t            var index0 = indexBase + j;\n\t            var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n\t            var i1 = 0,\n\t                index = index0;\n\t            var i = i0,\n\t                sign;\n\t            if (allEmpty) {\n\t              var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n\t              if (!hasSignificantCoefficent) {\n\t                bitsDecoded[index0]++;\n\t                bitsDecoded[index0 + oneRowDown]++;\n\t                bitsDecoded[index0 + twoRowsDown]++;\n\t                bitsDecoded[index0 + threeRowsDown]++;\n\t                continue;\n\t              }\n\t              i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n\t              if (i1 !== 0) {\n\t                i = i0 + i1;\n\t                index += i1 * width;\n\t              }\n\t              sign = this.decodeSignBit(i, j, index);\n\t              coefficentsSign[index] = sign;\n\t              coefficentsMagnitude[index] = 1;\n\t              this.setNeighborsSignificance(i, j, index);\n\t              processingFlags[index] |= firstMagnitudeBitMask;\n\t              index = index0;\n\t              for (var i2 = i0; i2 <= i; i2++, index += width) {\n\t                bitsDecoded[index]++;\n\t              }\n\t              i1++;\n\t            }\n\t            for (i = i0 + i1; i < iNext; i++, index += width) {\n\t              if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n\t                continue;\n\t              }\n\t              var contextLabel = labels[neighborsSignificance[index]];\n\t              var decision = decoder.readBit(contexts, contextLabel);\n\t              if (decision === 1) {\n\t                sign = this.decodeSignBit(i, j, index);\n\t                coefficentsSign[index] = sign;\n\t                coefficentsMagnitude[index] = 1;\n\t                this.setNeighborsSignificance(i, j, index);\n\t                processingFlags[index] |= firstMagnitudeBitMask;\n\t              }\n\t              bitsDecoded[index]++;\n\t            }\n\t          }\n\t        }\n\t      },\n\t      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n\t        var decoder = this.decoder;\n\t        var contexts = this.contexts;\n\t        var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n\t        if (symbol !== 0xA) {\n\t          throw new JpxError('Invalid segmentation symbol');\n\t        }\n\t      }\n\t    };\n\t    return BitModel;\n\t  }();\n\t  var Transform = function TransformClosure() {\n\t    function Transform() {}\n\t    Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n\t      var ll = subbands[0];\n\t      for (var i = 1, ii = subbands.length; i < ii; i++) {\n\t        ll = this.iterate(ll, subbands[i], u0, v0);\n\t      }\n\t      return ll;\n\t    };\n\t    Transform.prototype.extend = function extend(buffer, offset, size) {\n\t      var i1 = offset - 1,\n\t          j1 = offset + 1;\n\t      var i2 = offset + size - 2,\n\t          j2 = offset + size;\n\t      buffer[i1--] = buffer[j1++];\n\t      buffer[j2++] = buffer[i2--];\n\t      buffer[i1--] = buffer[j1++];\n\t      buffer[j2++] = buffer[i2--];\n\t      buffer[i1--] = buffer[j1++];\n\t      buffer[j2++] = buffer[i2--];\n\t      buffer[i1] = buffer[j1];\n\t      buffer[j2] = buffer[i2];\n\t    };\n\t    Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n\t      var llWidth = ll.width,\n\t          llHeight = ll.height,\n\t          llItems = ll.items;\n\t      var width = hl_lh_hh.width;\n\t      var height = hl_lh_hh.height;\n\t      var items = hl_lh_hh.items;\n\t      var i, j, k, l, u, v;\n\t      for (k = 0, i = 0; i < llHeight; i++) {\n\t        l = i * 2 * width;\n\t        for (j = 0; j < llWidth; j++, k++, l += 2) {\n\t          items[l] = llItems[k];\n\t        }\n\t      }\n\t      llItems = ll.items = null;\n\t      var bufferPadding = 4;\n\t      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n\t      if (width === 1) {\n\t        if ((u0 & 1) !== 0) {\n\t          for (v = 0, k = 0; v < height; v++, k += width) {\n\t            items[k] *= 0.5;\n\t          }\n\t        }\n\t      } else {\n\t        for (v = 0, k = 0; v < height; v++, k += width) {\n\t          rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n\t          this.extend(rowBuffer, bufferPadding, width);\n\t          this.filter(rowBuffer, bufferPadding, width);\n\t          items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n\t        }\n\t      }\n\t      var numBuffers = 16;\n\t      var colBuffers = [];\n\t      for (i = 0; i < numBuffers; i++) {\n\t        colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n\t      }\n\t      var b,\n\t          currentBuffer = 0;\n\t      ll = bufferPadding + height;\n\t      if (height === 1) {\n\t        if ((v0 & 1) !== 0) {\n\t          for (u = 0; u < width; u++) {\n\t            items[u] *= 0.5;\n\t          }\n\t        }\n\t      } else {\n\t        for (u = 0; u < width; u++) {\n\t          if (currentBuffer === 0) {\n\t            numBuffers = Math.min(width - u, numBuffers);\n\t            for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n\t              for (b = 0; b < numBuffers; b++) {\n\t                colBuffers[b][l] = items[k + b];\n\t              }\n\t            }\n\t            currentBuffer = numBuffers;\n\t          }\n\t          currentBuffer--;\n\t          var buffer = colBuffers[currentBuffer];\n\t          this.extend(buffer, bufferPadding, height);\n\t          this.filter(buffer, bufferPadding, height);\n\t          if (currentBuffer === 0) {\n\t            k = u - numBuffers + 1;\n\t            for (l = bufferPadding; l < ll; k += width, l++) {\n\t              for (b = 0; b < numBuffers; b++) {\n\t                items[k + b] = colBuffers[b][l];\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t      return {\n\t        width: width,\n\t        height: height,\n\t        items: items\n\t      };\n\t    };\n\t    return Transform;\n\t  }();\n\t  var IrreversibleTransform = function IrreversibleTransformClosure() {\n\t    function IrreversibleTransform() {\n\t      Transform.call(this);\n\t    }\n\t    IrreversibleTransform.prototype = Object.create(Transform.prototype);\n\t    IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n\t      var len = length >> 1;\n\t      offset = offset | 0;\n\t      var j, n, current, next;\n\t      var alpha = -1.586134342059924;\n\t      var beta = -0.052980118572961;\n\t      var gamma = 0.882911075530934;\n\t      var delta = 0.443506852043971;\n\t      var K = 1.230174104914001;\n\t      var K_ = 1 / K;\n\t      j = offset - 3;\n\t      for (n = len + 4; n--; j += 2) {\n\t        x[j] *= K_;\n\t      }\n\t      j = offset - 2;\n\t      current = delta * x[j - 1];\n\t      for (n = len + 3; n--; j += 2) {\n\t        next = delta * x[j + 1];\n\t        x[j] = K * x[j] - current - next;\n\t        if (n--) {\n\t          j += 2;\n\t          current = delta * x[j + 1];\n\t          x[j] = K * x[j] - current - next;\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t      j = offset - 1;\n\t      current = gamma * x[j - 1];\n\t      for (n = len + 2; n--; j += 2) {\n\t        next = gamma * x[j + 1];\n\t        x[j] -= current + next;\n\t        if (n--) {\n\t          j += 2;\n\t          current = gamma * x[j + 1];\n\t          x[j] -= current + next;\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t      j = offset;\n\t      current = beta * x[j - 1];\n\t      for (n = len + 1; n--; j += 2) {\n\t        next = beta * x[j + 1];\n\t        x[j] -= current + next;\n\t        if (n--) {\n\t          j += 2;\n\t          current = beta * x[j + 1];\n\t          x[j] -= current + next;\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t      if (len !== 0) {\n\t        j = offset + 1;\n\t        current = alpha * x[j - 1];\n\t        for (n = len; n--; j += 2) {\n\t          next = alpha * x[j + 1];\n\t          x[j] -= current + next;\n\t          if (n--) {\n\t            j += 2;\n\t            current = alpha * x[j + 1];\n\t            x[j] -= current + next;\n\t          } else {\n\t            break;\n\t          }\n\t        }\n\t      }\n\t    };\n\t    return IrreversibleTransform;\n\t  }();\n\t  var ReversibleTransform = function ReversibleTransformClosure() {\n\t    function ReversibleTransform() {\n\t      Transform.call(this);\n\t    }\n\t    ReversibleTransform.prototype = Object.create(Transform.prototype);\n\t    ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n\t      var len = length >> 1;\n\t      offset = offset | 0;\n\t      var j, n;\n\t      for (j = offset, n = len + 1; n--; j += 2) {\n\t        x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n\t      }\n\t      for (j = offset + 1, n = len; n--; j += 2) {\n\t        x[j] += x[j - 1] + x[j + 1] >> 1;\n\t      }\n\t    };\n\t    return ReversibleTransform;\n\t  }();\n\t  return JpxImage;\n\t}();\n\texports.JpxImage = JpxImage;\n\t\n\t/***/ }),\n\t/* 75 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\n\t  var QeTable = [{\n\t    qe: 0x5601,\n\t    nmps: 1,\n\t    nlps: 1,\n\t    switchFlag: 1\n\t  }, {\n\t    qe: 0x3401,\n\t    nmps: 2,\n\t    nlps: 6,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x1801,\n\t    nmps: 3,\n\t    nlps: 9,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0AC1,\n\t    nmps: 4,\n\t    nlps: 12,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0521,\n\t    nmps: 5,\n\t    nlps: 29,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0221,\n\t    nmps: 38,\n\t    nlps: 33,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x5601,\n\t    nmps: 7,\n\t    nlps: 6,\n\t    switchFlag: 1\n\t  }, {\n\t    qe: 0x5401,\n\t    nmps: 8,\n\t    nlps: 14,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x4801,\n\t    nmps: 9,\n\t    nlps: 14,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x3801,\n\t    nmps: 10,\n\t    nlps: 14,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x3001,\n\t    nmps: 11,\n\t    nlps: 17,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x2401,\n\t    nmps: 12,\n\t    nlps: 18,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x1C01,\n\t    nmps: 13,\n\t    nlps: 20,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x1601,\n\t    nmps: 29,\n\t    nlps: 21,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x5601,\n\t    nmps: 15,\n\t    nlps: 14,\n\t    switchFlag: 1\n\t  }, {\n\t    qe: 0x5401,\n\t    nmps: 16,\n\t    nlps: 14,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x5101,\n\t    nmps: 17,\n\t    nlps: 15,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x4801,\n\t    nmps: 18,\n\t    nlps: 16,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x3801,\n\t    nmps: 19,\n\t    nlps: 17,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x3401,\n\t    nmps: 20,\n\t    nlps: 18,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x3001,\n\t    nmps: 21,\n\t    nlps: 19,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x2801,\n\t    nmps: 22,\n\t    nlps: 19,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x2401,\n\t    nmps: 23,\n\t    nlps: 20,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x2201,\n\t    nmps: 24,\n\t    nlps: 21,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x1C01,\n\t    nmps: 25,\n\t    nlps: 22,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x1801,\n\t    nmps: 26,\n\t    nlps: 23,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x1601,\n\t    nmps: 27,\n\t    nlps: 24,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x1401,\n\t    nmps: 28,\n\t    nlps: 25,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x1201,\n\t    nmps: 29,\n\t    nlps: 26,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x1101,\n\t    nmps: 30,\n\t    nlps: 27,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0AC1,\n\t    nmps: 31,\n\t    nlps: 28,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x09C1,\n\t    nmps: 32,\n\t    nlps: 29,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x08A1,\n\t    nmps: 33,\n\t    nlps: 30,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0521,\n\t    nmps: 34,\n\t    nlps: 31,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0441,\n\t    nmps: 35,\n\t    nlps: 32,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x02A1,\n\t    nmps: 36,\n\t    nlps: 33,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0221,\n\t    nmps: 37,\n\t    nlps: 34,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0141,\n\t    nmps: 38,\n\t    nlps: 35,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0111,\n\t    nmps: 39,\n\t    nlps: 36,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0085,\n\t    nmps: 40,\n\t    nlps: 37,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0049,\n\t    nmps: 41,\n\t    nlps: 38,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0025,\n\t    nmps: 42,\n\t    nlps: 39,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0015,\n\t    nmps: 43,\n\t    nlps: 40,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0009,\n\t    nmps: 44,\n\t    nlps: 41,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0005,\n\t    nmps: 45,\n\t    nlps: 42,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0001,\n\t    nmps: 45,\n\t    nlps: 43,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x5601,\n\t    nmps: 46,\n\t    nlps: 46,\n\t    switchFlag: 0\n\t  }];\n\t  function ArithmeticDecoder(data, start, end) {\n\t    this.data = data;\n\t    this.bp = start;\n\t    this.dataEnd = end;\n\t    this.chigh = data[start];\n\t    this.clow = 0;\n\t    this.byteIn();\n\t    this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\n\t    this.clow = this.clow << 7 & 0xFFFF;\n\t    this.ct -= 7;\n\t    this.a = 0x8000;\n\t  }\n\t  ArithmeticDecoder.prototype = {\n\t    byteIn: function ArithmeticDecoder_byteIn() {\n\t      var data = this.data;\n\t      var bp = this.bp;\n\t      if (data[bp] === 0xFF) {\n\t        var b1 = data[bp + 1];\n\t        if (b1 > 0x8F) {\n\t          this.clow += 0xFF00;\n\t          this.ct = 8;\n\t        } else {\n\t          bp++;\n\t          this.clow += data[bp] << 9;\n\t          this.ct = 7;\n\t          this.bp = bp;\n\t        }\n\t      } else {\n\t        bp++;\n\t        this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\n\t        this.ct = 8;\n\t        this.bp = bp;\n\t      }\n\t      if (this.clow > 0xFFFF) {\n\t        this.chigh += this.clow >> 16;\n\t        this.clow &= 0xFFFF;\n\t      }\n\t    },\n\t    readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n\t      var cx_index = contexts[pos] >> 1,\n\t          cx_mps = contexts[pos] & 1;\n\t      var qeTableIcx = QeTable[cx_index];\n\t      var qeIcx = qeTableIcx.qe;\n\t      var d;\n\t      var a = this.a - qeIcx;\n\t      if (this.chigh < qeIcx) {\n\t        if (a < qeIcx) {\n\t          a = qeIcx;\n\t          d = cx_mps;\n\t          cx_index = qeTableIcx.nmps;\n\t        } else {\n\t          a = qeIcx;\n\t          d = 1 ^ cx_mps;\n\t          if (qeTableIcx.switchFlag === 1) {\n\t            cx_mps = d;\n\t          }\n\t          cx_index = qeTableIcx.nlps;\n\t        }\n\t      } else {\n\t        this.chigh -= qeIcx;\n\t        if ((a & 0x8000) !== 0) {\n\t          this.a = a;\n\t          return cx_mps;\n\t        }\n\t        if (a < qeIcx) {\n\t          d = 1 ^ cx_mps;\n\t          if (qeTableIcx.switchFlag === 1) {\n\t            cx_mps = d;\n\t          }\n\t          cx_index = qeTableIcx.nlps;\n\t        } else {\n\t          d = cx_mps;\n\t          cx_index = qeTableIcx.nmps;\n\t        }\n\t      }\n\t      do {\n\t        if (this.ct === 0) {\n\t          this.byteIn();\n\t        }\n\t        a <<= 1;\n\t        this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\n\t        this.clow = this.clow << 1 & 0xFFFF;\n\t        this.ct--;\n\t      } while ((a & 0x8000) === 0);\n\t      this.a = a;\n\t      contexts[pos] = cx_index << 1 | cx_mps;\n\t      return d;\n\t    }\n\t  };\n\t  return ArithmeticDecoder;\n\t}();\n\texports.ArithmeticDecoder = ArithmeticDecoder;\n\t\n\t/***/ }),\n\t/* 76 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.calculateSHA512 = exports.calculateSHA384 = exports.calculateSHA256 = exports.calculateMD5 = exports.PDF20 = exports.PDF17 = exports.CipherTransformFactory = exports.ARCFourCipher = exports.AES256Cipher = exports.AES128Cipher = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _primitives = __w_pdfjs_require__(2);\n\t\n\tvar _stream = __w_pdfjs_require__(5);\n\t\n\tvar ARCFourCipher = function ARCFourCipherClosure() {\n\t  function ARCFourCipher(key) {\n\t    this.a = 0;\n\t    this.b = 0;\n\t    var s = new Uint8Array(256);\n\t    var i,\n\t        j = 0,\n\t        tmp,\n\t        keyLength = key.length;\n\t    for (i = 0; i < 256; ++i) {\n\t      s[i] = i;\n\t    }\n\t    for (i = 0; i < 256; ++i) {\n\t      tmp = s[i];\n\t      j = j + tmp + key[i % keyLength] & 0xFF;\n\t      s[i] = s[j];\n\t      s[j] = tmp;\n\t    }\n\t    this.s = s;\n\t  }\n\t  ARCFourCipher.prototype = {\n\t    encryptBlock: function ARCFourCipher_encryptBlock(data) {\n\t      var i,\n\t          n = data.length,\n\t          tmp,\n\t          tmp2;\n\t      var a = this.a,\n\t          b = this.b,\n\t          s = this.s;\n\t      var output = new Uint8Array(n);\n\t      for (i = 0; i < n; ++i) {\n\t        a = a + 1 & 0xFF;\n\t        tmp = s[a];\n\t        b = b + tmp & 0xFF;\n\t        tmp2 = s[b];\n\t        s[a] = tmp2;\n\t        s[b] = tmp;\n\t        output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\n\t      }\n\t      this.a = a;\n\t      this.b = b;\n\t      return output;\n\t    }\n\t  };\n\t  ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n\t  return ARCFourCipher;\n\t}();\n\tvar calculateMD5 = function calculateMD5Closure() {\n\t  var r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n\t  var k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n\t  function hash(data, offset, length) {\n\t    var h0 = 1732584193,\n\t        h1 = -271733879,\n\t        h2 = -1732584194,\n\t        h3 = 271733878;\n\t    var paddedLength = length + 72 & ~63;\n\t    var padded = new Uint8Array(paddedLength);\n\t    var i, j, n;\n\t    for (i = 0; i < length; ++i) {\n\t      padded[i] = data[offset++];\n\t    }\n\t    padded[i++] = 0x80;\n\t    n = paddedLength - 8;\n\t    while (i < n) {\n\t      padded[i++] = 0;\n\t    }\n\t    padded[i++] = length << 3 & 0xFF;\n\t    padded[i++] = length >> 5 & 0xFF;\n\t    padded[i++] = length >> 13 & 0xFF;\n\t    padded[i++] = length >> 21 & 0xFF;\n\t    padded[i++] = length >>> 29 & 0xFF;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    var w = new Int32Array(16);\n\t    for (i = 0; i < paddedLength;) {\n\t      for (j = 0; j < 16; ++j, i += 4) {\n\t        w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n\t      }\n\t      var a = h0,\n\t          b = h1,\n\t          c = h2,\n\t          d = h3,\n\t          f,\n\t          g;\n\t      for (j = 0; j < 64; ++j) {\n\t        if (j < 16) {\n\t          f = b & c | ~b & d;\n\t          g = j;\n\t        } else if (j < 32) {\n\t          f = d & b | ~d & c;\n\t          g = 5 * j + 1 & 15;\n\t        } else if (j < 48) {\n\t          f = b ^ c ^ d;\n\t          g = 3 * j + 5 & 15;\n\t        } else {\n\t          f = c ^ (b | ~d);\n\t          g = 7 * j & 15;\n\t        }\n\t        var tmp = d,\n\t            rotateArg = a + f + k[j] + w[g] | 0,\n\t            rotate = r[j];\n\t        d = c;\n\t        c = b;\n\t        b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n\t        a = tmp;\n\t      }\n\t      h0 = h0 + a | 0;\n\t      h1 = h1 + b | 0;\n\t      h2 = h2 + c | 0;\n\t      h3 = h3 + d | 0;\n\t    }\n\t    return new Uint8Array([h0 & 0xFF, h0 >> 8 & 0xFF, h0 >> 16 & 0xFF, h0 >>> 24 & 0xFF, h1 & 0xFF, h1 >> 8 & 0xFF, h1 >> 16 & 0xFF, h1 >>> 24 & 0xFF, h2 & 0xFF, h2 >> 8 & 0xFF, h2 >> 16 & 0xFF, h2 >>> 24 & 0xFF, h3 & 0xFF, h3 >> 8 & 0xFF, h3 >> 16 & 0xFF, h3 >>> 24 & 0xFF]);\n\t  }\n\t  return hash;\n\t}();\n\tvar Word64 = function Word64Closure() {\n\t  function Word64(highInteger, lowInteger) {\n\t    this.high = highInteger | 0;\n\t    this.low = lowInteger | 0;\n\t  }\n\t  Word64.prototype = {\n\t    and: function Word64_and(word) {\n\t      this.high &= word.high;\n\t      this.low &= word.low;\n\t    },\n\t    xor: function Word64_xor(word) {\n\t      this.high ^= word.high;\n\t      this.low ^= word.low;\n\t    },\n\t    or: function Word64_or(word) {\n\t      this.high |= word.high;\n\t      this.low |= word.low;\n\t    },\n\t    shiftRight: function Word64_shiftRight(places) {\n\t      if (places >= 32) {\n\t        this.low = this.high >>> places - 32 | 0;\n\t        this.high = 0;\n\t      } else {\n\t        this.low = this.low >>> places | this.high << 32 - places;\n\t        this.high = this.high >>> places | 0;\n\t      }\n\t    },\n\t    shiftLeft: function Word64_shiftLeft(places) {\n\t      if (places >= 32) {\n\t        this.high = this.low << places - 32;\n\t        this.low = 0;\n\t      } else {\n\t        this.high = this.high << places | this.low >>> 32 - places;\n\t        this.low = this.low << places;\n\t      }\n\t    },\n\t    rotateRight: function Word64_rotateRight(places) {\n\t      var low, high;\n\t      if (places & 32) {\n\t        high = this.low;\n\t        low = this.high;\n\t      } else {\n\t        low = this.low;\n\t        high = this.high;\n\t      }\n\t      places &= 31;\n\t      this.low = low >>> places | high << 32 - places;\n\t      this.high = high >>> places | low << 32 - places;\n\t    },\n\t    not: function Word64_not() {\n\t      this.high = ~this.high;\n\t      this.low = ~this.low;\n\t    },\n\t    add: function Word64_add(word) {\n\t      var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n\t      var highAdd = (this.high >>> 0) + (word.high >>> 0);\n\t      if (lowAdd > 0xFFFFFFFF) {\n\t        highAdd += 1;\n\t      }\n\t      this.low = lowAdd | 0;\n\t      this.high = highAdd | 0;\n\t    },\n\t    copyTo: function Word64_copyTo(bytes, offset) {\n\t      bytes[offset] = this.high >>> 24 & 0xFF;\n\t      bytes[offset + 1] = this.high >> 16 & 0xFF;\n\t      bytes[offset + 2] = this.high >> 8 & 0xFF;\n\t      bytes[offset + 3] = this.high & 0xFF;\n\t      bytes[offset + 4] = this.low >>> 24 & 0xFF;\n\t      bytes[offset + 5] = this.low >> 16 & 0xFF;\n\t      bytes[offset + 6] = this.low >> 8 & 0xFF;\n\t      bytes[offset + 7] = this.low & 0xFF;\n\t    },\n\t    assign: function Word64_assign(word) {\n\t      this.high = word.high;\n\t      this.low = word.low;\n\t    }\n\t  };\n\t  return Word64;\n\t}();\n\tvar calculateSHA256 = function calculateSHA256Closure() {\n\t  function rotr(x, n) {\n\t    return x >>> n | x << 32 - n;\n\t  }\n\t  function ch(x, y, z) {\n\t    return x & y ^ ~x & z;\n\t  }\n\t  function maj(x, y, z) {\n\t    return x & y ^ x & z ^ y & z;\n\t  }\n\t  function sigma(x) {\n\t    return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n\t  }\n\t  function sigmaPrime(x) {\n\t    return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n\t  }\n\t  function littleSigma(x) {\n\t    return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n\t  }\n\t  function littleSigmaPrime(x) {\n\t    return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n\t  }\n\t  var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n\t  function hash(data, offset, length) {\n\t    var h0 = 0x6a09e667,\n\t        h1 = 0xbb67ae85,\n\t        h2 = 0x3c6ef372,\n\t        h3 = 0xa54ff53a,\n\t        h4 = 0x510e527f,\n\t        h5 = 0x9b05688c,\n\t        h6 = 0x1f83d9ab,\n\t        h7 = 0x5be0cd19;\n\t    var paddedLength = Math.ceil((length + 9) / 64) * 64;\n\t    var padded = new Uint8Array(paddedLength);\n\t    var i, j, n;\n\t    for (i = 0; i < length; ++i) {\n\t      padded[i] = data[offset++];\n\t    }\n\t    padded[i++] = 0x80;\n\t    n = paddedLength - 8;\n\t    while (i < n) {\n\t      padded[i++] = 0;\n\t    }\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = length >>> 29 & 0xFF;\n\t    padded[i++] = length >> 21 & 0xFF;\n\t    padded[i++] = length >> 13 & 0xFF;\n\t    padded[i++] = length >> 5 & 0xFF;\n\t    padded[i++] = length << 3 & 0xFF;\n\t    var w = new Uint32Array(64);\n\t    for (i = 0; i < paddedLength;) {\n\t      for (j = 0; j < 16; ++j) {\n\t        w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n\t        i += 4;\n\t      }\n\t      for (j = 16; j < 64; ++j) {\n\t        w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n\t      }\n\t      var a = h0,\n\t          b = h1,\n\t          c = h2,\n\t          d = h3,\n\t          e = h4,\n\t          f = h5,\n\t          g = h6,\n\t          h = h7,\n\t          t1,\n\t          t2;\n\t      for (j = 0; j < 64; ++j) {\n\t        t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n\t        t2 = sigma(a) + maj(a, b, c);\n\t        h = g;\n\t        g = f;\n\t        f = e;\n\t        e = d + t1 | 0;\n\t        d = c;\n\t        c = b;\n\t        b = a;\n\t        a = t1 + t2 | 0;\n\t      }\n\t      h0 = h0 + a | 0;\n\t      h1 = h1 + b | 0;\n\t      h2 = h2 + c | 0;\n\t      h3 = h3 + d | 0;\n\t      h4 = h4 + e | 0;\n\t      h5 = h5 + f | 0;\n\t      h6 = h6 + g | 0;\n\t      h7 = h7 + h | 0;\n\t    }\n\t    return new Uint8Array([h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF, h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF]);\n\t  }\n\t  return hash;\n\t}();\n\tvar calculateSHA512 = function calculateSHA512Closure() {\n\t  function ch(result, x, y, z, tmp) {\n\t    result.assign(x);\n\t    result.and(y);\n\t    tmp.assign(x);\n\t    tmp.not();\n\t    tmp.and(z);\n\t    result.xor(tmp);\n\t  }\n\t  function maj(result, x, y, z, tmp) {\n\t    result.assign(x);\n\t    result.and(y);\n\t    tmp.assign(x);\n\t    tmp.and(z);\n\t    result.xor(tmp);\n\t    tmp.assign(y);\n\t    tmp.and(z);\n\t    result.xor(tmp);\n\t  }\n\t  function sigma(result, x, tmp) {\n\t    result.assign(x);\n\t    result.rotateRight(28);\n\t    tmp.assign(x);\n\t    tmp.rotateRight(34);\n\t    result.xor(tmp);\n\t    tmp.assign(x);\n\t    tmp.rotateRight(39);\n\t    result.xor(tmp);\n\t  }\n\t  function sigmaPrime(result, x, tmp) {\n\t    result.assign(x);\n\t    result.rotateRight(14);\n\t    tmp.assign(x);\n\t    tmp.rotateRight(18);\n\t    result.xor(tmp);\n\t    tmp.assign(x);\n\t    tmp.rotateRight(41);\n\t    result.xor(tmp);\n\t  }\n\t  function littleSigma(result, x, tmp) {\n\t    result.assign(x);\n\t    result.rotateRight(1);\n\t    tmp.assign(x);\n\t    tmp.rotateRight(8);\n\t    result.xor(tmp);\n\t    tmp.assign(x);\n\t    tmp.shiftRight(7);\n\t    result.xor(tmp);\n\t  }\n\t  function littleSigmaPrime(result, x, tmp) {\n\t    result.assign(x);\n\t    result.rotateRight(19);\n\t    tmp.assign(x);\n\t    tmp.rotateRight(61);\n\t    result.xor(tmp);\n\t    tmp.assign(x);\n\t    tmp.shiftRight(6);\n\t    result.xor(tmp);\n\t  }\n\t  var k = [new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd), new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc), new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019), new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118), new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe), new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2), new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1), new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694), new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3), new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65), new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483), new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5), new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210), new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4), new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725), new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70), new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926), new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df), new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8), new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b), new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001), new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30), new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910), new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8), new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53), new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8), new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb), new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3), new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60), new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec), new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9), new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b), new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207), new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178), new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6), new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b), new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493), new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c), new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a), new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817)];\n\t  function hash(data, offset, length, mode384) {\n\t    mode384 = !!mode384;\n\t    var h0, h1, h2, h3, h4, h5, h6, h7;\n\t    if (!mode384) {\n\t      h0 = new Word64(0x6a09e667, 0xf3bcc908);\n\t      h1 = new Word64(0xbb67ae85, 0x84caa73b);\n\t      h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n\t      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n\t      h4 = new Word64(0x510e527f, 0xade682d1);\n\t      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n\t      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n\t      h7 = new Word64(0x5be0cd19, 0x137e2179);\n\t    } else {\n\t      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n\t      h1 = new Word64(0x629a292a, 0x367cd507);\n\t      h2 = new Word64(0x9159015a, 0x3070dd17);\n\t      h3 = new Word64(0x152fecd8, 0xf70e5939);\n\t      h4 = new Word64(0x67332667, 0xffc00b31);\n\t      h5 = new Word64(0x8eb44a87, 0x68581511);\n\t      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n\t      h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n\t    }\n\t    var paddedLength = Math.ceil((length + 17) / 128) * 128;\n\t    var padded = new Uint8Array(paddedLength);\n\t    var i, j, n;\n\t    for (i = 0; i < length; ++i) {\n\t      padded[i] = data[offset++];\n\t    }\n\t    padded[i++] = 0x80;\n\t    n = paddedLength - 16;\n\t    while (i < n) {\n\t      padded[i++] = 0;\n\t    }\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = length >>> 29 & 0xFF;\n\t    padded[i++] = length >> 21 & 0xFF;\n\t    padded[i++] = length >> 13 & 0xFF;\n\t    padded[i++] = length >> 5 & 0xFF;\n\t    padded[i++] = length << 3 & 0xFF;\n\t    var w = new Array(80);\n\t    for (i = 0; i < 80; i++) {\n\t      w[i] = new Word64(0, 0);\n\t    }\n\t    var a = new Word64(0, 0),\n\t        b = new Word64(0, 0),\n\t        c = new Word64(0, 0);\n\t    var d = new Word64(0, 0),\n\t        e = new Word64(0, 0),\n\t        f = new Word64(0, 0);\n\t    var g = new Word64(0, 0),\n\t        h = new Word64(0, 0);\n\t    var t1 = new Word64(0, 0),\n\t        t2 = new Word64(0, 0);\n\t    var tmp1 = new Word64(0, 0),\n\t        tmp2 = new Word64(0, 0),\n\t        tmp3;\n\t    for (i = 0; i < paddedLength;) {\n\t      for (j = 0; j < 16; ++j) {\n\t        w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n\t        w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n\t        i += 8;\n\t      }\n\t      for (j = 16; j < 80; ++j) {\n\t        tmp3 = w[j];\n\t        littleSigmaPrime(tmp3, w[j - 2], tmp2);\n\t        tmp3.add(w[j - 7]);\n\t        littleSigma(tmp1, w[j - 15], tmp2);\n\t        tmp3.add(tmp1);\n\t        tmp3.add(w[j - 16]);\n\t      }\n\t      a.assign(h0);\n\t      b.assign(h1);\n\t      c.assign(h2);\n\t      d.assign(h3);\n\t      e.assign(h4);\n\t      f.assign(h5);\n\t      g.assign(h6);\n\t      h.assign(h7);\n\t      for (j = 0; j < 80; ++j) {\n\t        t1.assign(h);\n\t        sigmaPrime(tmp1, e, tmp2);\n\t        t1.add(tmp1);\n\t        ch(tmp1, e, f, g, tmp2);\n\t        t1.add(tmp1);\n\t        t1.add(k[j]);\n\t        t1.add(w[j]);\n\t        sigma(t2, a, tmp2);\n\t        maj(tmp1, a, b, c, tmp2);\n\t        t2.add(tmp1);\n\t        tmp3 = h;\n\t        h = g;\n\t        g = f;\n\t        f = e;\n\t        d.add(t1);\n\t        e = d;\n\t        d = c;\n\t        c = b;\n\t        b = a;\n\t        tmp3.assign(t1);\n\t        tmp3.add(t2);\n\t        a = tmp3;\n\t      }\n\t      h0.add(a);\n\t      h1.add(b);\n\t      h2.add(c);\n\t      h3.add(d);\n\t      h4.add(e);\n\t      h5.add(f);\n\t      h6.add(g);\n\t      h7.add(h);\n\t    }\n\t    var result;\n\t    if (!mode384) {\n\t      result = new Uint8Array(64);\n\t      h0.copyTo(result, 0);\n\t      h1.copyTo(result, 8);\n\t      h2.copyTo(result, 16);\n\t      h3.copyTo(result, 24);\n\t      h4.copyTo(result, 32);\n\t      h5.copyTo(result, 40);\n\t      h6.copyTo(result, 48);\n\t      h7.copyTo(result, 56);\n\t    } else {\n\t      result = new Uint8Array(48);\n\t      h0.copyTo(result, 0);\n\t      h1.copyTo(result, 8);\n\t      h2.copyTo(result, 16);\n\t      h3.copyTo(result, 24);\n\t      h4.copyTo(result, 32);\n\t      h5.copyTo(result, 40);\n\t    }\n\t    return result;\n\t  }\n\t  return hash;\n\t}();\n\tvar calculateSHA384 = function calculateSHA384Closure() {\n\t  function hash(data, offset, length) {\n\t    return calculateSHA512(data, offset, length, true);\n\t  }\n\t  return hash;\n\t}();\n\tvar NullCipher = function NullCipherClosure() {\n\t  function NullCipher() {}\n\t  NullCipher.prototype = {\n\t    decryptBlock: function NullCipher_decryptBlock(data) {\n\t      return data;\n\t    }\n\t  };\n\t  return NullCipher;\n\t}();\n\tvar AES128Cipher = function AES128CipherClosure() {\n\t  var rcon = new Uint8Array([0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d]);\n\t  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n\t  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n\t  var mixCol = new Uint8Array(256);\n\t  for (var i = 0; i < 256; i++) {\n\t    if (i < 128) {\n\t      mixCol[i] = i << 1;\n\t    } else {\n\t      mixCol[i] = i << 1 ^ 0x1b;\n\t    }\n\t  }\n\t  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n\t  function expandKey128(cipherKey) {\n\t    var b = 176,\n\t        result = new Uint8Array(b);\n\t    result.set(cipherKey);\n\t    for (var j = 16, i = 1; j < b; ++i) {\n\t      var t1 = result[j - 3],\n\t          t2 = result[j - 2],\n\t          t3 = result[j - 1],\n\t          t4 = result[j - 4];\n\t      t1 = s[t1];\n\t      t2 = s[t2];\n\t      t3 = s[t3];\n\t      t4 = s[t4];\n\t      t1 = t1 ^ rcon[i];\n\t      for (var n = 0; n < 4; ++n) {\n\t        result[j] = t1 ^= result[j - 16];\n\t        j++;\n\t        result[j] = t2 ^= result[j - 16];\n\t        j++;\n\t        result[j] = t3 ^= result[j - 16];\n\t        j++;\n\t        result[j] = t4 ^= result[j - 16];\n\t        j++;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t  function decrypt128(input, key) {\n\t    var state = new Uint8Array(16);\n\t    state.set(input);\n\t    var i, j, k;\n\t    var t, u, v;\n\t    for (j = 0, k = 160; j < 16; ++j, ++k) {\n\t      state[j] ^= key[k];\n\t    }\n\t    for (i = 9; i >= 1; --i) {\n\t      t = state[13];\n\t      state[13] = state[9];\n\t      state[9] = state[5];\n\t      state[5] = state[1];\n\t      state[1] = t;\n\t      t = state[14];\n\t      u = state[10];\n\t      state[14] = state[6];\n\t      state[10] = state[2];\n\t      state[6] = t;\n\t      state[2] = u;\n\t      t = state[15];\n\t      u = state[11];\n\t      v = state[7];\n\t      state[15] = state[3];\n\t      state[11] = t;\n\t      state[7] = u;\n\t      state[3] = v;\n\t      for (j = 0; j < 16; ++j) {\n\t        state[j] = inv_s[state[j]];\n\t      }\n\t      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n\t        state[j] ^= key[k];\n\t      }\n\t      for (j = 0; j < 16; j += 4) {\n\t        var s0 = mix[state[j]],\n\t            s1 = mix[state[j + 1]],\n\t            s2 = mix[state[j + 2]],\n\t            s3 = mix[state[j + 3]];\n\t        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n\t        state[j] = t >>> 24 & 0xFF;\n\t        state[j + 1] = t >> 16 & 0xFF;\n\t        state[j + 2] = t >> 8 & 0xFF;\n\t        state[j + 3] = t & 0xFF;\n\t      }\n\t    }\n\t    t = state[13];\n\t    state[13] = state[9];\n\t    state[9] = state[5];\n\t    state[5] = state[1];\n\t    state[1] = t;\n\t    t = state[14];\n\t    u = state[10];\n\t    state[14] = state[6];\n\t    state[10] = state[2];\n\t    state[6] = t;\n\t    state[2] = u;\n\t    t = state[15];\n\t    u = state[11];\n\t    v = state[7];\n\t    state[15] = state[3];\n\t    state[11] = t;\n\t    state[7] = u;\n\t    state[3] = v;\n\t    for (j = 0; j < 16; ++j) {\n\t      state[j] = inv_s[state[j]];\n\t      state[j] ^= key[j];\n\t    }\n\t    return state;\n\t  }\n\t  function encrypt128(input, key) {\n\t    var t, u, v, k;\n\t    var state = new Uint8Array(16);\n\t    state.set(input);\n\t    for (j = 0; j < 16; ++j) {\n\t      state[j] ^= key[j];\n\t    }\n\t    for (i = 1; i < 10; i++) {\n\t      for (j = 0; j < 16; ++j) {\n\t        state[j] = s[state[j]];\n\t      }\n\t      v = state[1];\n\t      state[1] = state[5];\n\t      state[5] = state[9];\n\t      state[9] = state[13];\n\t      state[13] = v;\n\t      v = state[2];\n\t      u = state[6];\n\t      state[2] = state[10];\n\t      state[6] = state[14];\n\t      state[10] = v;\n\t      state[14] = u;\n\t      v = state[3];\n\t      u = state[7];\n\t      t = state[11];\n\t      state[3] = state[15];\n\t      state[7] = v;\n\t      state[11] = u;\n\t      state[15] = t;\n\t      for (var j = 0; j < 16; j += 4) {\n\t        var s0 = state[j + 0],\n\t            s1 = state[j + 1];\n\t        var s2 = state[j + 2],\n\t            s3 = state[j + 3];\n\t        t = s0 ^ s1 ^ s2 ^ s3;\n\t        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n\t        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n\t        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n\t        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n\t      }\n\t      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n\t        state[j] ^= key[k];\n\t      }\n\t    }\n\t    for (j = 0; j < 16; ++j) {\n\t      state[j] = s[state[j]];\n\t    }\n\t    v = state[1];\n\t    state[1] = state[5];\n\t    state[5] = state[9];\n\t    state[9] = state[13];\n\t    state[13] = v;\n\t    v = state[2];\n\t    u = state[6];\n\t    state[2] = state[10];\n\t    state[6] = state[14];\n\t    state[10] = v;\n\t    state[14] = u;\n\t    v = state[3];\n\t    u = state[7];\n\t    t = state[11];\n\t    state[3] = state[15];\n\t    state[7] = v;\n\t    state[11] = u;\n\t    state[15] = t;\n\t    for (j = 0, k = 160; j < 16; ++j, ++k) {\n\t      state[j] ^= key[k];\n\t    }\n\t    return state;\n\t  }\n\t  function AES128Cipher(key) {\n\t    this.key = expandKey128(key);\n\t    this.buffer = new Uint8Array(16);\n\t    this.bufferPosition = 0;\n\t  }\n\t  function decryptBlock2(data, finalize) {\n\t    var i,\n\t        j,\n\t        ii,\n\t        sourceLength = data.length,\n\t        buffer = this.buffer,\n\t        bufferLength = this.bufferPosition,\n\t        result = [],\n\t        iv = this.iv;\n\t    for (i = 0; i < sourceLength; ++i) {\n\t      buffer[bufferLength] = data[i];\n\t      ++bufferLength;\n\t      if (bufferLength < 16) {\n\t        continue;\n\t      }\n\t      var plain = decrypt128(buffer, this.key);\n\t      for (j = 0; j < 16; ++j) {\n\t        plain[j] ^= iv[j];\n\t      }\n\t      iv = buffer;\n\t      result.push(plain);\n\t      buffer = new Uint8Array(16);\n\t      bufferLength = 0;\n\t    }\n\t    this.buffer = buffer;\n\t    this.bufferLength = bufferLength;\n\t    this.iv = iv;\n\t    if (result.length === 0) {\n\t      return new Uint8Array([]);\n\t    }\n\t    var outputLength = 16 * result.length;\n\t    if (finalize) {\n\t      var lastBlock = result[result.length - 1];\n\t      var psLen = lastBlock[15];\n\t      if (psLen <= 16) {\n\t        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n\t          if (lastBlock[i] !== psLen) {\n\t            psLen = 0;\n\t            break;\n\t          }\n\t        }\n\t        outputLength -= psLen;\n\t        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n\t      }\n\t    }\n\t    var output = new Uint8Array(outputLength);\n\t    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n\t      output.set(result[i], j);\n\t    }\n\t    return output;\n\t  }\n\t  AES128Cipher.prototype = {\n\t    decryptBlock: function AES128Cipher_decryptBlock(data, finalize) {\n\t      var i,\n\t          sourceLength = data.length;\n\t      var buffer = this.buffer,\n\t          bufferLength = this.bufferPosition;\n\t      for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n\t        buffer[bufferLength] = data[i];\n\t      }\n\t      if (bufferLength < 16) {\n\t        this.bufferLength = bufferLength;\n\t        return new Uint8Array([]);\n\t      }\n\t      this.iv = buffer;\n\t      this.buffer = new Uint8Array(16);\n\t      this.bufferLength = 0;\n\t      this.decryptBlock = decryptBlock2;\n\t      return this.decryptBlock(data.subarray(16), finalize);\n\t    },\n\t    encrypt: function AES128Cipher_encrypt(data, iv) {\n\t      var i,\n\t          j,\n\t          ii,\n\t          sourceLength = data.length,\n\t          buffer = this.buffer,\n\t          bufferLength = this.bufferPosition,\n\t          result = [];\n\t      if (!iv) {\n\t        iv = new Uint8Array(16);\n\t      }\n\t      for (i = 0; i < sourceLength; ++i) {\n\t        buffer[bufferLength] = data[i];\n\t        ++bufferLength;\n\t        if (bufferLength < 16) {\n\t          continue;\n\t        }\n\t        for (j = 0; j < 16; ++j) {\n\t          buffer[j] ^= iv[j];\n\t        }\n\t        var cipher = encrypt128(buffer, this.key);\n\t        iv = cipher;\n\t        result.push(cipher);\n\t        buffer = new Uint8Array(16);\n\t        bufferLength = 0;\n\t      }\n\t      this.buffer = buffer;\n\t      this.bufferLength = bufferLength;\n\t      this.iv = iv;\n\t      if (result.length === 0) {\n\t        return new Uint8Array([]);\n\t      }\n\t      var outputLength = 16 * result.length;\n\t      var output = new Uint8Array(outputLength);\n\t      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n\t        output.set(result[i], j);\n\t      }\n\t      return output;\n\t    }\n\t  };\n\t  return AES128Cipher;\n\t}();\n\tvar AES256Cipher = function AES256CipherClosure() {\n\t  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n\t  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n\t  var mixCol = new Uint8Array(256);\n\t  for (var i = 0; i < 256; i++) {\n\t    if (i < 128) {\n\t      mixCol[i] = i << 1;\n\t    } else {\n\t      mixCol[i] = i << 1 ^ 0x1b;\n\t    }\n\t  }\n\t  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n\t  function expandKey256(cipherKey) {\n\t    var b = 240,\n\t        result = new Uint8Array(b);\n\t    var r = 1;\n\t    result.set(cipherKey);\n\t    for (var j = 32, i = 1; j < b; ++i) {\n\t      if (j % 32 === 16) {\n\t        t1 = s[t1];\n\t        t2 = s[t2];\n\t        t3 = s[t3];\n\t        t4 = s[t4];\n\t      } else if (j % 32 === 0) {\n\t        var t1 = result[j - 3],\n\t            t2 = result[j - 2],\n\t            t3 = result[j - 1],\n\t            t4 = result[j - 4];\n\t        t1 = s[t1];\n\t        t2 = s[t2];\n\t        t3 = s[t3];\n\t        t4 = s[t4];\n\t        t1 = t1 ^ r;\n\t        if ((r <<= 1) >= 256) {\n\t          r = (r ^ 0x1b) & 0xFF;\n\t        }\n\t      }\n\t      for (var n = 0; n < 4; ++n) {\n\t        result[j] = t1 ^= result[j - 32];\n\t        j++;\n\t        result[j] = t2 ^= result[j - 32];\n\t        j++;\n\t        result[j] = t3 ^= result[j - 32];\n\t        j++;\n\t        result[j] = t4 ^= result[j - 32];\n\t        j++;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t  function decrypt256(input, key) {\n\t    var state = new Uint8Array(16);\n\t    state.set(input);\n\t    var i, j, k;\n\t    var t, u, v;\n\t    for (j = 0, k = 224; j < 16; ++j, ++k) {\n\t      state[j] ^= key[k];\n\t    }\n\t    for (i = 13; i >= 1; --i) {\n\t      t = state[13];\n\t      state[13] = state[9];\n\t      state[9] = state[5];\n\t      state[5] = state[1];\n\t      state[1] = t;\n\t      t = state[14];\n\t      u = state[10];\n\t      state[14] = state[6];\n\t      state[10] = state[2];\n\t      state[6] = t;\n\t      state[2] = u;\n\t      t = state[15];\n\t      u = state[11];\n\t      v = state[7];\n\t      state[15] = state[3];\n\t      state[11] = t;\n\t      state[7] = u;\n\t      state[3] = v;\n\t      for (j = 0; j < 16; ++j) {\n\t        state[j] = inv_s[state[j]];\n\t      }\n\t      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n\t        state[j] ^= key[k];\n\t      }\n\t      for (j = 0; j < 16; j += 4) {\n\t        var s0 = mix[state[j]],\n\t            s1 = mix[state[j + 1]],\n\t            s2 = mix[state[j + 2]],\n\t            s3 = mix[state[j + 3]];\n\t        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n\t        state[j] = t >>> 24 & 0xFF;\n\t        state[j + 1] = t >> 16 & 0xFF;\n\t        state[j + 2] = t >> 8 & 0xFF;\n\t        state[j + 3] = t & 0xFF;\n\t      }\n\t    }\n\t    t = state[13];\n\t    state[13] = state[9];\n\t    state[9] = state[5];\n\t    state[5] = state[1];\n\t    state[1] = t;\n\t    t = state[14];\n\t    u = state[10];\n\t    state[14] = state[6];\n\t    state[10] = state[2];\n\t    state[6] = t;\n\t    state[2] = u;\n\t    t = state[15];\n\t    u = state[11];\n\t    v = state[7];\n\t    state[15] = state[3];\n\t    state[11] = t;\n\t    state[7] = u;\n\t    state[3] = v;\n\t    for (j = 0; j < 16; ++j) {\n\t      state[j] = inv_s[state[j]];\n\t      state[j] ^= key[j];\n\t    }\n\t    return state;\n\t  }\n\t  function encrypt256(input, key) {\n\t    var t, u, v, k;\n\t    var state = new Uint8Array(16);\n\t    state.set(input);\n\t    for (j = 0; j < 16; ++j) {\n\t      state[j] ^= key[j];\n\t    }\n\t    for (i = 1; i < 14; i++) {\n\t      for (j = 0; j < 16; ++j) {\n\t        state[j] = s[state[j]];\n\t      }\n\t      v = state[1];\n\t      state[1] = state[5];\n\t      state[5] = state[9];\n\t      state[9] = state[13];\n\t      state[13] = v;\n\t      v = state[2];\n\t      u = state[6];\n\t      state[2] = state[10];\n\t      state[6] = state[14];\n\t      state[10] = v;\n\t      state[14] = u;\n\t      v = state[3];\n\t      u = state[7];\n\t      t = state[11];\n\t      state[3] = state[15];\n\t      state[7] = v;\n\t      state[11] = u;\n\t      state[15] = t;\n\t      for (var j = 0; j < 16; j += 4) {\n\t        var s0 = state[j + 0],\n\t            s1 = state[j + 1];\n\t        var s2 = state[j + 2],\n\t            s3 = state[j + 3];\n\t        t = s0 ^ s1 ^ s2 ^ s3;\n\t        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n\t        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n\t        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n\t        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n\t      }\n\t      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n\t        state[j] ^= key[k];\n\t      }\n\t    }\n\t    for (j = 0; j < 16; ++j) {\n\t      state[j] = s[state[j]];\n\t    }\n\t    v = state[1];\n\t    state[1] = state[5];\n\t    state[5] = state[9];\n\t    state[9] = state[13];\n\t    state[13] = v;\n\t    v = state[2];\n\t    u = state[6];\n\t    state[2] = state[10];\n\t    state[6] = state[14];\n\t    state[10] = v;\n\t    state[14] = u;\n\t    v = state[3];\n\t    u = state[7];\n\t    t = state[11];\n\t    state[3] = state[15];\n\t    state[7] = v;\n\t    state[11] = u;\n\t    state[15] = t;\n\t    for (j = 0, k = 224; j < 16; ++j, ++k) {\n\t      state[j] ^= key[k];\n\t    }\n\t    return state;\n\t  }\n\t  function AES256Cipher(key) {\n\t    this.key = expandKey256(key);\n\t    this.buffer = new Uint8Array(16);\n\t    this.bufferPosition = 0;\n\t  }\n\t  function decryptBlock2(data, finalize) {\n\t    var i,\n\t        j,\n\t        ii,\n\t        sourceLength = data.length,\n\t        buffer = this.buffer,\n\t        bufferLength = this.bufferPosition,\n\t        result = [],\n\t        iv = this.iv;\n\t    for (i = 0; i < sourceLength; ++i) {\n\t      buffer[bufferLength] = data[i];\n\t      ++bufferLength;\n\t      if (bufferLength < 16) {\n\t        continue;\n\t      }\n\t      var plain = decrypt256(buffer, this.key);\n\t      for (j = 0; j < 16; ++j) {\n\t        plain[j] ^= iv[j];\n\t      }\n\t      iv = buffer;\n\t      result.push(plain);\n\t      buffer = new Uint8Array(16);\n\t      bufferLength = 0;\n\t    }\n\t    this.buffer = buffer;\n\t    this.bufferLength = bufferLength;\n\t    this.iv = iv;\n\t    if (result.length === 0) {\n\t      return new Uint8Array([]);\n\t    }\n\t    var outputLength = 16 * result.length;\n\t    if (finalize) {\n\t      var lastBlock = result[result.length - 1];\n\t      var psLen = lastBlock[15];\n\t      if (psLen <= 16) {\n\t        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n\t          if (lastBlock[i] !== psLen) {\n\t            psLen = 0;\n\t            break;\n\t          }\n\t        }\n\t        outputLength -= psLen;\n\t        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n\t      }\n\t    }\n\t    var output = new Uint8Array(outputLength);\n\t    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n\t      output.set(result[i], j);\n\t    }\n\t    return output;\n\t  }\n\t  AES256Cipher.prototype = {\n\t    decryptBlock: function AES256Cipher_decryptBlock(data, finalize, iv) {\n\t      var i,\n\t          sourceLength = data.length;\n\t      var buffer = this.buffer,\n\t          bufferLength = this.bufferPosition;\n\t      if (iv) {\n\t        this.iv = iv;\n\t      } else {\n\t        for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n\t          buffer[bufferLength] = data[i];\n\t        }\n\t        if (bufferLength < 16) {\n\t          this.bufferLength = bufferLength;\n\t          return new Uint8Array([]);\n\t        }\n\t        this.iv = buffer;\n\t        data = data.subarray(16);\n\t      }\n\t      this.buffer = new Uint8Array(16);\n\t      this.bufferLength = 0;\n\t      this.decryptBlock = decryptBlock2;\n\t      return this.decryptBlock(data, finalize);\n\t    },\n\t    encrypt: function AES256Cipher_encrypt(data, iv) {\n\t      var i,\n\t          j,\n\t          ii,\n\t          sourceLength = data.length,\n\t          buffer = this.buffer,\n\t          bufferLength = this.bufferPosition,\n\t          result = [];\n\t      if (!iv) {\n\t        iv = new Uint8Array(16);\n\t      }\n\t      for (i = 0; i < sourceLength; ++i) {\n\t        buffer[bufferLength] = data[i];\n\t        ++bufferLength;\n\t        if (bufferLength < 16) {\n\t          continue;\n\t        }\n\t        for (j = 0; j < 16; ++j) {\n\t          buffer[j] ^= iv[j];\n\t        }\n\t        var cipher = encrypt256(buffer, this.key);\n\t        this.iv = cipher;\n\t        result.push(cipher);\n\t        buffer = new Uint8Array(16);\n\t        bufferLength = 0;\n\t      }\n\t      this.buffer = buffer;\n\t      this.bufferLength = bufferLength;\n\t      this.iv = iv;\n\t      if (result.length === 0) {\n\t        return new Uint8Array([]);\n\t      }\n\t      var outputLength = 16 * result.length;\n\t      var output = new Uint8Array(outputLength);\n\t      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n\t        output.set(result[i], j);\n\t      }\n\t      return output;\n\t    }\n\t  };\n\t  return AES256Cipher;\n\t}();\n\tvar PDF17 = function PDF17Closure() {\n\t  function compareByteArrays(array1, array2) {\n\t    if (array1.length !== array2.length) {\n\t      return false;\n\t    }\n\t    for (var i = 0; i < array1.length; i++) {\n\t      if (array1[i] !== array2[i]) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t  function PDF17() {}\n\t  PDF17.prototype = {\n\t    checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n\t      var hashData = new Uint8Array(password.length + 56);\n\t      hashData.set(password, 0);\n\t      hashData.set(ownerValidationSalt, password.length);\n\t      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n\t      var result = calculateSHA256(hashData, 0, hashData.length);\n\t      return compareByteArrays(result, ownerPassword);\n\t    },\n\t    checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n\t      var hashData = new Uint8Array(password.length + 8);\n\t      hashData.set(password, 0);\n\t      hashData.set(userValidationSalt, password.length);\n\t      var result = calculateSHA256(hashData, 0, hashData.length);\n\t      return compareByteArrays(result, userPassword);\n\t    },\n\t    getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n\t      var hashData = new Uint8Array(password.length + 56);\n\t      hashData.set(password, 0);\n\t      hashData.set(ownerKeySalt, password.length);\n\t      hashData.set(userBytes, password.length + ownerKeySalt.length);\n\t      var key = calculateSHA256(hashData, 0, hashData.length);\n\t      var cipher = new AES256Cipher(key);\n\t      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n\t    },\n\t    getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n\t      var hashData = new Uint8Array(password.length + 8);\n\t      hashData.set(password, 0);\n\t      hashData.set(userKeySalt, password.length);\n\t      var key = calculateSHA256(hashData, 0, hashData.length);\n\t      var cipher = new AES256Cipher(key);\n\t      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n\t    }\n\t  };\n\t  return PDF17;\n\t}();\n\tvar PDF20 = function PDF20Closure() {\n\t  function concatArrays(array1, array2) {\n\t    var t = new Uint8Array(array1.length + array2.length);\n\t    t.set(array1, 0);\n\t    t.set(array2, array1.length);\n\t    return t;\n\t  }\n\t  function calculatePDF20Hash(password, input, userBytes) {\n\t    var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n\t    var e = [0];\n\t    var i = 0;\n\t    while (i < 64 || e[e.length - 1] > i - 32) {\n\t      var arrayLength = password.length + k.length + userBytes.length;\n\t      var k1 = new Uint8Array(arrayLength * 64);\n\t      var array = concatArrays(password, k);\n\t      array = concatArrays(array, userBytes);\n\t      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n\t        k1.set(array, pos);\n\t      }\n\t      var cipher = new AES128Cipher(k.subarray(0, 16));\n\t      e = cipher.encrypt(k1, k.subarray(16, 32));\n\t      var remainder = 0;\n\t      for (var z = 0; z < 16; z++) {\n\t        remainder *= 256 % 3;\n\t        remainder %= 3;\n\t        remainder += (e[z] >>> 0) % 3;\n\t        remainder %= 3;\n\t      }\n\t      if (remainder === 0) {\n\t        k = calculateSHA256(e, 0, e.length);\n\t      } else if (remainder === 1) {\n\t        k = calculateSHA384(e, 0, e.length);\n\t      } else if (remainder === 2) {\n\t        k = calculateSHA512(e, 0, e.length);\n\t      }\n\t      i++;\n\t    }\n\t    return k.subarray(0, 32);\n\t  }\n\t  function PDF20() {}\n\t  function compareByteArrays(array1, array2) {\n\t    if (array1.length !== array2.length) {\n\t      return false;\n\t    }\n\t    for (var i = 0; i < array1.length; i++) {\n\t      if (array1[i] !== array2[i]) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t  PDF20.prototype = {\n\t    hash: function PDF20_hash(password, concatBytes, userBytes) {\n\t      return calculatePDF20Hash(password, concatBytes, userBytes);\n\t    },\n\t    checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n\t      var hashData = new Uint8Array(password.length + 56);\n\t      hashData.set(password, 0);\n\t      hashData.set(ownerValidationSalt, password.length);\n\t      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n\t      var result = calculatePDF20Hash(password, hashData, userBytes);\n\t      return compareByteArrays(result, ownerPassword);\n\t    },\n\t    checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n\t      var hashData = new Uint8Array(password.length + 8);\n\t      hashData.set(password, 0);\n\t      hashData.set(userValidationSalt, password.length);\n\t      var result = calculatePDF20Hash(password, hashData, []);\n\t      return compareByteArrays(result, userPassword);\n\t    },\n\t    getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n\t      var hashData = new Uint8Array(password.length + 56);\n\t      hashData.set(password, 0);\n\t      hashData.set(ownerKeySalt, password.length);\n\t      hashData.set(userBytes, password.length + ownerKeySalt.length);\n\t      var key = calculatePDF20Hash(password, hashData, userBytes);\n\t      var cipher = new AES256Cipher(key);\n\t      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n\t    },\n\t    getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n\t      var hashData = new Uint8Array(password.length + 8);\n\t      hashData.set(password, 0);\n\t      hashData.set(userKeySalt, password.length);\n\t      var key = calculatePDF20Hash(password, hashData, []);\n\t      var cipher = new AES256Cipher(key);\n\t      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n\t    }\n\t  };\n\t  return PDF20;\n\t}();\n\tvar CipherTransform = function CipherTransformClosure() {\n\t  function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n\t    this.StringCipherConstructor = stringCipherConstructor;\n\t    this.StreamCipherConstructor = streamCipherConstructor;\n\t  }\n\t  CipherTransform.prototype = {\n\t    createStream: function CipherTransform_createStream(stream, length) {\n\t      var cipher = new this.StreamCipherConstructor();\n\t      return new _stream.DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n\t        return cipher.decryptBlock(data, finalize);\n\t      });\n\t    },\n\t    decryptString: function CipherTransform_decryptString(s) {\n\t      var cipher = new this.StringCipherConstructor();\n\t      var data = (0, _util.stringToBytes)(s);\n\t      data = cipher.decryptBlock(data, true);\n\t      return (0, _util.bytesToString)(data);\n\t    }\n\t  };\n\t  return CipherTransform;\n\t}();\n\tvar CipherTransformFactory = function CipherTransformFactoryClosure() {\n\t  var defaultPasswordBytes = new Uint8Array([0x28, 0xBF, 0x4E, 0x5E, 0x4E, 0x75, 0x8A, 0x41, 0x64, 0x00, 0x4E, 0x56, 0xFF, 0xFA, 0x01, 0x08, 0x2E, 0x2E, 0x00, 0xB6, 0xD0, 0x68, 0x3E, 0x80, 0x2F, 0x0C, 0xA9, 0xFE, 0x64, 0x53, 0x69, 0x7A]);\n\t  function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n\t    if (password) {\n\t      var passwordLength = Math.min(127, password.length);\n\t      password = password.subarray(0, passwordLength);\n\t    } else {\n\t      password = [];\n\t    }\n\t    var pdfAlgorithm;\n\t    if (revision === 6) {\n\t      pdfAlgorithm = new PDF20();\n\t    } else {\n\t      pdfAlgorithm = new PDF17();\n\t    }\n\t    if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n\t      return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n\t    } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n\t      return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n\t    }\n\t    return null;\n\t  }\n\t  function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n\t    var hashDataSize = 40 + ownerPassword.length + fileId.length;\n\t    var hashData = new Uint8Array(hashDataSize),\n\t        i = 0,\n\t        j,\n\t        n;\n\t    if (password) {\n\t      n = Math.min(32, password.length);\n\t      for (; i < n; ++i) {\n\t        hashData[i] = password[i];\n\t      }\n\t    }\n\t    j = 0;\n\t    while (i < 32) {\n\t      hashData[i++] = defaultPasswordBytes[j++];\n\t    }\n\t    for (j = 0, n = ownerPassword.length; j < n; ++j) {\n\t      hashData[i++] = ownerPassword[j];\n\t    }\n\t    hashData[i++] = flags & 0xFF;\n\t    hashData[i++] = flags >> 8 & 0xFF;\n\t    hashData[i++] = flags >> 16 & 0xFF;\n\t    hashData[i++] = flags >>> 24 & 0xFF;\n\t    for (j = 0, n = fileId.length; j < n; ++j) {\n\t      hashData[i++] = fileId[j];\n\t    }\n\t    if (revision >= 4 && !encryptMetadata) {\n\t      hashData[i++] = 0xFF;\n\t      hashData[i++] = 0xFF;\n\t      hashData[i++] = 0xFF;\n\t      hashData[i++] = 0xFF;\n\t    }\n\t    var hash = calculateMD5(hashData, 0, i);\n\t    var keyLengthInBytes = keyLength >> 3;\n\t    if (revision >= 3) {\n\t      for (j = 0; j < 50; ++j) {\n\t        hash = calculateMD5(hash, 0, keyLengthInBytes);\n\t      }\n\t    }\n\t    var encryptionKey = hash.subarray(0, keyLengthInBytes);\n\t    var cipher, checkData;\n\t    if (revision >= 3) {\n\t      for (i = 0; i < 32; ++i) {\n\t        hashData[i] = defaultPasswordBytes[i];\n\t      }\n\t      for (j = 0, n = fileId.length; j < n; ++j) {\n\t        hashData[i++] = fileId[j];\n\t      }\n\t      cipher = new ARCFourCipher(encryptionKey);\n\t      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n\t      n = encryptionKey.length;\n\t      var derivedKey = new Uint8Array(n),\n\t          k;\n\t      for (j = 1; j <= 19; ++j) {\n\t        for (k = 0; k < n; ++k) {\n\t          derivedKey[k] = encryptionKey[k] ^ j;\n\t        }\n\t        cipher = new ARCFourCipher(derivedKey);\n\t        checkData = cipher.encryptBlock(checkData);\n\t      }\n\t      for (j = 0, n = checkData.length; j < n; ++j) {\n\t        if (userPassword[j] !== checkData[j]) {\n\t          return null;\n\t        }\n\t      }\n\t    } else {\n\t      cipher = new ARCFourCipher(encryptionKey);\n\t      checkData = cipher.encryptBlock(defaultPasswordBytes);\n\t      for (j = 0, n = checkData.length; j < n; ++j) {\n\t        if (userPassword[j] !== checkData[j]) {\n\t          return null;\n\t        }\n\t      }\n\t    }\n\t    return encryptionKey;\n\t  }\n\t  function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n\t    var hashData = new Uint8Array(32),\n\t        i = 0,\n\t        j,\n\t        n;\n\t    n = Math.min(32, password.length);\n\t    for (; i < n; ++i) {\n\t      hashData[i] = password[i];\n\t    }\n\t    j = 0;\n\t    while (i < 32) {\n\t      hashData[i++] = defaultPasswordBytes[j++];\n\t    }\n\t    var hash = calculateMD5(hashData, 0, i);\n\t    var keyLengthInBytes = keyLength >> 3;\n\t    if (revision >= 3) {\n\t      for (j = 0; j < 50; ++j) {\n\t        hash = calculateMD5(hash, 0, hash.length);\n\t      }\n\t    }\n\t    var cipher, userPassword;\n\t    if (revision >= 3) {\n\t      userPassword = ownerPassword;\n\t      var derivedKey = new Uint8Array(keyLengthInBytes),\n\t          k;\n\t      for (j = 19; j >= 0; j--) {\n\t        for (k = 0; k < keyLengthInBytes; ++k) {\n\t          derivedKey[k] = hash[k] ^ j;\n\t        }\n\t        cipher = new ARCFourCipher(derivedKey);\n\t        userPassword = cipher.encryptBlock(userPassword);\n\t      }\n\t    } else {\n\t      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n\t      userPassword = cipher.encryptBlock(ownerPassword);\n\t    }\n\t    return userPassword;\n\t  }\n\t  var identityName = _primitives.Name.get('Identity');\n\t  function CipherTransformFactory(dict, fileId, password) {\n\t    var filter = dict.get('Filter');\n\t    if (!(0, _primitives.isName)(filter, 'Standard')) {\n\t      throw new _util.FormatError('unknown encryption method');\n\t    }\n\t    this.dict = dict;\n\t    var algorithm = dict.get('V');\n\t    if (!Number.isInteger(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n\t      throw new _util.FormatError('unsupported encryption algorithm');\n\t    }\n\t    this.algorithm = algorithm;\n\t    var keyLength = dict.get('Length');\n\t    if (!keyLength) {\n\t      if (algorithm <= 3) {\n\t        keyLength = 40;\n\t      } else {\n\t        var cfDict = dict.get('CF');\n\t        var streamCryptoName = dict.get('StmF');\n\t        if ((0, _primitives.isDict)(cfDict) && (0, _primitives.isName)(streamCryptoName)) {\n\t          cfDict.suppressEncryption = true;\n\t          var handlerDict = cfDict.get(streamCryptoName.name);\n\t          keyLength = handlerDict && handlerDict.get('Length') || 128;\n\t          if (keyLength < 40) {\n\t            keyLength <<= 3;\n\t          }\n\t        }\n\t      }\n\t    }\n\t    if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n\t      throw new _util.FormatError('invalid key length');\n\t    }\n\t    var ownerPassword = (0, _util.stringToBytes)(dict.get('O')).subarray(0, 32);\n\t    var userPassword = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 32);\n\t    var flags = dict.get('P');\n\t    var revision = dict.get('R');\n\t    var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\n\t    this.encryptMetadata = encryptMetadata;\n\t    var fileIdBytes = (0, _util.stringToBytes)(fileId);\n\t    var passwordBytes;\n\t    if (password) {\n\t      if (revision === 6) {\n\t        try {\n\t          password = (0, _util.utf8StringToString)(password);\n\t        } catch (ex) {\n\t          (0, _util.warn)('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\n\t        }\n\t      }\n\t      passwordBytes = (0, _util.stringToBytes)(password);\n\t    }\n\t    var encryptionKey;\n\t    if (algorithm !== 5) {\n\t      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n\t    } else {\n\t      var ownerValidationSalt = (0, _util.stringToBytes)(dict.get('O')).subarray(32, 40);\n\t      var ownerKeySalt = (0, _util.stringToBytes)(dict.get('O')).subarray(40, 48);\n\t      var uBytes = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 48);\n\t      var userValidationSalt = (0, _util.stringToBytes)(dict.get('U')).subarray(32, 40);\n\t      var userKeySalt = (0, _util.stringToBytes)(dict.get('U')).subarray(40, 48);\n\t      var ownerEncryption = (0, _util.stringToBytes)(dict.get('OE'));\n\t      var userEncryption = (0, _util.stringToBytes)(dict.get('UE'));\n\t      var perms = (0, _util.stringToBytes)(dict.get('Perms'));\n\t      encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n\t    }\n\t    if (!encryptionKey && !password) {\n\t      throw new _util.PasswordException('No password given', _util.PasswordResponses.NEED_PASSWORD);\n\t    } else if (!encryptionKey && password) {\n\t      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n\t      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n\t    }\n\t    if (!encryptionKey) {\n\t      throw new _util.PasswordException('Incorrect Password', _util.PasswordResponses.INCORRECT_PASSWORD);\n\t    }\n\t    this.encryptionKey = encryptionKey;\n\t    if (algorithm >= 4) {\n\t      var cf = dict.get('CF');\n\t      if ((0, _primitives.isDict)(cf)) {\n\t        cf.suppressEncryption = true;\n\t      }\n\t      this.cf = cf;\n\t      this.stmf = dict.get('StmF') || identityName;\n\t      this.strf = dict.get('StrF') || identityName;\n\t      this.eff = dict.get('EFF') || this.stmf;\n\t    }\n\t  }\n\t  function buildObjectKey(num, gen, encryptionKey, isAes) {\n\t    var key = new Uint8Array(encryptionKey.length + 9),\n\t        i,\n\t        n;\n\t    for (i = 0, n = encryptionKey.length; i < n; ++i) {\n\t      key[i] = encryptionKey[i];\n\t    }\n\t    key[i++] = num & 0xFF;\n\t    key[i++] = num >> 8 & 0xFF;\n\t    key[i++] = num >> 16 & 0xFF;\n\t    key[i++] = gen & 0xFF;\n\t    key[i++] = gen >> 8 & 0xFF;\n\t    if (isAes) {\n\t      key[i++] = 0x73;\n\t      key[i++] = 0x41;\n\t      key[i++] = 0x6C;\n\t      key[i++] = 0x54;\n\t    }\n\t    var hash = calculateMD5(key, 0, i);\n\t    return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n\t  }\n\t  function buildCipherConstructor(cf, name, num, gen, key) {\n\t    if (!(0, _primitives.isName)(name)) {\n\t      throw new _util.FormatError('Invalid crypt filter name.');\n\t    }\n\t    var cryptFilter = cf.get(name.name);\n\t    var cfm;\n\t    if (cryptFilter !== null && cryptFilter !== undefined) {\n\t      cfm = cryptFilter.get('CFM');\n\t    }\n\t    if (!cfm || cfm.name === 'None') {\n\t      return function cipherTransformFactoryBuildCipherConstructorNone() {\n\t        return new NullCipher();\n\t      };\n\t    }\n\t    if (cfm.name === 'V2') {\n\t      return function cipherTransformFactoryBuildCipherConstructorV2() {\n\t        return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n\t      };\n\t    }\n\t    if (cfm.name === 'AESV2') {\n\t      return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n\t        return new AES128Cipher(buildObjectKey(num, gen, key, true));\n\t      };\n\t    }\n\t    if (cfm.name === 'AESV3') {\n\t      return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n\t        return new AES256Cipher(key);\n\t      };\n\t    }\n\t    throw new _util.FormatError('Unknown crypto method');\n\t  }\n\t  CipherTransformFactory.prototype = {\n\t    createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n\t      if (this.algorithm === 4 || this.algorithm === 5) {\n\t        return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n\t      }\n\t      var key = buildObjectKey(num, gen, this.encryptionKey, false);\n\t      var cipherConstructor = function buildCipherCipherConstructor() {\n\t        return new ARCFourCipher(key);\n\t      };\n\t      return new CipherTransform(cipherConstructor, cipherConstructor);\n\t    }\n\t  };\n\t  return CipherTransformFactory;\n\t}();\n\texports.AES128Cipher = AES128Cipher;\n\texports.AES256Cipher = AES256Cipher;\n\texports.ARCFourCipher = ARCFourCipher;\n\texports.CipherTransformFactory = CipherTransformFactory;\n\texports.PDF17 = PDF17;\n\texports.PDF20 = PDF20;\n\texports.calculateMD5 = calculateMD5;\n\texports.calculateSHA256 = calculateSHA256;\n\texports.calculateSHA384 = calculateSHA384;\n\texports.calculateSHA512 = calculateSHA512;\n\t\n\t/***/ }),\n\t/* 77 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.PartialEvaluator = exports.OperatorList = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _cmap = __w_pdfjs_require__(133);\n\t\n\tvar _stream = __w_pdfjs_require__(5);\n\t\n\tvar _primitives = __w_pdfjs_require__(2);\n\t\n\tvar _fonts = __w_pdfjs_require__(134);\n\t\n\tvar _encodings = __w_pdfjs_require__(27);\n\t\n\tvar _unicode = __w_pdfjs_require__(80);\n\t\n\tvar _standard_fonts = __w_pdfjs_require__(79);\n\t\n\tvar _pattern = __w_pdfjs_require__(138);\n\t\n\tvar _parser = __w_pdfjs_require__(34);\n\t\n\tvar _bidi = __w_pdfjs_require__(139);\n\t\n\tvar _colorspace = __w_pdfjs_require__(26);\n\t\n\tvar _glyphlist = __w_pdfjs_require__(47);\n\t\n\tvar _metrics = __w_pdfjs_require__(140);\n\t\n\tvar _function = __w_pdfjs_require__(81);\n\t\n\tvar _murmurhash = __w_pdfjs_require__(142);\n\t\n\tvar _image = __w_pdfjs_require__(143);\n\t\n\tvar PartialEvaluator = function PartialEvaluatorClosure() {\n\t  var DefaultPartialEvaluatorOptions = {\n\t    forceDataSchema: false,\n\t    maxImageSize: -1,\n\t    disableFontFace: false,\n\t    nativeImageDecoderSupport: _util.NativeImageDecoding.DECODE,\n\t    ignoreErrors: false,\n\t    isEvalSupported: true\n\t  };\n\t  function NativeImageDecoder(_ref) {\n\t    var xref = _ref.xref,\n\t        resources = _ref.resources,\n\t        handler = _ref.handler,\n\t        _ref$forceDataSchema = _ref.forceDataSchema,\n\t        forceDataSchema = _ref$forceDataSchema === undefined ? false : _ref$forceDataSchema,\n\t        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\t\n\t    this.xref = xref;\n\t    this.resources = resources;\n\t    this.handler = handler;\n\t    this.forceDataSchema = forceDataSchema;\n\t    this.pdfFunctionFactory = pdfFunctionFactory;\n\t  }\n\t  NativeImageDecoder.prototype = {\n\t    canDecode: function canDecode(image) {\n\t      return image instanceof _stream.JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources, this.pdfFunctionFactory);\n\t    },\n\t    decode: function decode(image) {\n\t      var dict = image.dict;\n\t      var colorSpace = dict.get('ColorSpace', 'CS');\n\t      colorSpace = _colorspace.ColorSpace.parse(colorSpace, this.xref, this.resources, this.pdfFunctionFactory);\n\t      var numComps = colorSpace.numComps;\n\t      var decodePromise = this.handler.sendWithPromise('JpegDecode', [image.getIR(this.forceDataSchema), numComps]);\n\t      return decodePromise.then(function (message) {\n\t        var data = message.data;\n\t        return new _stream.Stream(data, 0, data.length, image.dict);\n\t      });\n\t    }\n\t  };\n\t  NativeImageDecoder.isSupported = function (image, xref, res, pdfFunctionFactory) {\n\t    var dict = image.dict;\n\t    if (dict.has('DecodeParms') || dict.has('DP')) {\n\t      return false;\n\t    }\n\t    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n\t    return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n\t  };\n\t  NativeImageDecoder.isDecodable = function (image, xref, res, pdfFunctionFactory) {\n\t    var dict = image.dict;\n\t    if (dict.has('DecodeParms') || dict.has('DP')) {\n\t      return false;\n\t    }\n\t    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n\t    return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n\t  };\n\t  function PartialEvaluator(_ref2) {\n\t    var _this = this;\n\t\n\t    var pdfManager = _ref2.pdfManager,\n\t        xref = _ref2.xref,\n\t        handler = _ref2.handler,\n\t        pageIndex = _ref2.pageIndex,\n\t        idFactory = _ref2.idFactory,\n\t        fontCache = _ref2.fontCache,\n\t        builtInCMapCache = _ref2.builtInCMapCache,\n\t        _ref2$options = _ref2.options,\n\t        options = _ref2$options === undefined ? null : _ref2$options,\n\t        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\t\n\t    this.pdfManager = pdfManager;\n\t    this.xref = xref;\n\t    this.handler = handler;\n\t    this.pageIndex = pageIndex;\n\t    this.idFactory = idFactory;\n\t    this.fontCache = fontCache;\n\t    this.builtInCMapCache = builtInCMapCache;\n\t    this.options = options || DefaultPartialEvaluatorOptions;\n\t    this.pdfFunctionFactory = pdfFunctionFactory;\n\t    this.fetchBuiltInCMap = function (name) {\n\t      var cachedCMap = _this.builtInCMapCache[name];\n\t      if (cachedCMap) {\n\t        return Promise.resolve(cachedCMap);\n\t      }\n\t      return _this.handler.sendWithPromise('FetchBuiltInCMap', { name: name }).then(function (data) {\n\t        if (data.compressionType !== _util.CMapCompressionType.NONE) {\n\t          _this.builtInCMapCache[name] = data;\n\t        }\n\t        return data;\n\t      });\n\t    };\n\t  }\n\t  var TIME_SLOT_DURATION_MS = 20;\n\t  var CHECK_TIME_EVERY = 100;\n\t  function TimeSlotManager() {\n\t    this.reset();\n\t  }\n\t  TimeSlotManager.prototype = {\n\t    check: function TimeSlotManager_check() {\n\t      if (++this.checked < CHECK_TIME_EVERY) {\n\t        return false;\n\t      }\n\t      this.checked = 0;\n\t      return this.endTime <= Date.now();\n\t    },\n\t    reset: function TimeSlotManager_reset() {\n\t      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n\t      this.checked = 0;\n\t    }\n\t  };\n\t  function normalizeBlendMode(value) {\n\t    if (!(0, _primitives.isName)(value)) {\n\t      return 'source-over';\n\t    }\n\t    switch (value.name) {\n\t      case 'Normal':\n\t      case 'Compatible':\n\t        return 'source-over';\n\t      case 'Multiply':\n\t        return 'multiply';\n\t      case 'Screen':\n\t        return 'screen';\n\t      case 'Overlay':\n\t        return 'overlay';\n\t      case 'Darken':\n\t        return 'darken';\n\t      case 'Lighten':\n\t        return 'lighten';\n\t      case 'ColorDodge':\n\t        return 'color-dodge';\n\t      case 'ColorBurn':\n\t        return 'color-burn';\n\t      case 'HardLight':\n\t        return 'hard-light';\n\t      case 'SoftLight':\n\t        return 'soft-light';\n\t      case 'Difference':\n\t        return 'difference';\n\t      case 'Exclusion':\n\t        return 'exclusion';\n\t      case 'Hue':\n\t        return 'hue';\n\t      case 'Saturation':\n\t        return 'saturation';\n\t      case 'Color':\n\t        return 'color';\n\t      case 'Luminosity':\n\t        return 'luminosity';\n\t    }\n\t    (0, _util.warn)('Unsupported blend mode: ' + value.name);\n\t    return 'source-over';\n\t  }\n\t  var deferred = Promise.resolve();\n\t  var TILING_PATTERN = 1,\n\t      SHADING_PATTERN = 2;\n\t  PartialEvaluator.prototype = {\n\t    clone: function clone() {\n\t      var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultPartialEvaluatorOptions;\n\t\n\t      var newEvaluator = Object.create(this);\n\t      newEvaluator.options = newOptions;\n\t      return newEvaluator;\n\t    },\n\t\n\t    hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n\t      if (!(0, _primitives.isDict)(resources)) {\n\t        return false;\n\t      }\n\t      var processed = Object.create(null);\n\t      if (resources.objId) {\n\t        processed[resources.objId] = true;\n\t      }\n\t      var nodes = [resources],\n\t          xref = this.xref;\n\t      while (nodes.length) {\n\t        var key, i, ii;\n\t        var node = nodes.shift();\n\t        var graphicStates = node.get('ExtGState');\n\t        if ((0, _primitives.isDict)(graphicStates)) {\n\t          var graphicStatesKeys = graphicStates.getKeys();\n\t          for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\n\t            key = graphicStatesKeys[i];\n\t            var graphicState = graphicStates.get(key);\n\t            var bm = graphicState.get('BM');\n\t            if ((0, _primitives.isName)(bm) && bm.name !== 'Normal') {\n\t              return true;\n\t            }\n\t          }\n\t        }\n\t        var xObjects = node.get('XObject');\n\t        if (!(0, _primitives.isDict)(xObjects)) {\n\t          continue;\n\t        }\n\t        var xObjectsKeys = xObjects.getKeys();\n\t        for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\n\t          key = xObjectsKeys[i];\n\t          var xObject = xObjects.getRaw(key);\n\t          if ((0, _primitives.isRef)(xObject)) {\n\t            if (processed[xObject.toString()]) {\n\t              continue;\n\t            }\n\t            xObject = xref.fetch(xObject);\n\t          }\n\t          if (!(0, _primitives.isStream)(xObject)) {\n\t            continue;\n\t          }\n\t          if (xObject.dict.objId) {\n\t            if (processed[xObject.dict.objId]) {\n\t              continue;\n\t            }\n\t            processed[xObject.dict.objId] = true;\n\t          }\n\t          var xResources = xObject.dict.get('Resources');\n\t          if ((0, _primitives.isDict)(xResources) && (!xResources.objId || !processed[xResources.objId])) {\n\t            nodes.push(xResources);\n\t            if (xResources.objId) {\n\t              processed[xResources.objId] = true;\n\t            }\n\t          }\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t    buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\n\t      var dict = xobj.dict;\n\t      var matrix = dict.getArray('Matrix');\n\t      var bbox = dict.getArray('BBox');\n\t      var group = dict.get('Group');\n\t      if (group) {\n\t        var groupOptions = {\n\t          matrix: matrix,\n\t          bbox: bbox,\n\t          smask: smask,\n\t          isolated: false,\n\t          knockout: false\n\t        };\n\t        var groupSubtype = group.get('S');\n\t        var colorSpace = null;\n\t        if ((0, _primitives.isName)(groupSubtype, 'Transparency')) {\n\t          groupOptions.isolated = group.get('I') || false;\n\t          groupOptions.knockout = group.get('K') || false;\n\t          if (group.has('CS')) {\n\t            colorSpace = _colorspace.ColorSpace.parse(group.get('CS'), this.xref, resources, this.pdfFunctionFactory);\n\t          }\n\t        }\n\t        if (smask && smask.backdrop) {\n\t          colorSpace = colorSpace || _colorspace.ColorSpace.singletons.rgb;\n\t          smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n\t        }\n\t        operatorList.addOp(_util.OPS.beginGroup, [groupOptions]);\n\t      }\n\t      operatorList.addOp(_util.OPS.paintFormXObjectBegin, [matrix, bbox]);\n\t      return this.getOperatorList({\n\t        stream: xobj,\n\t        task: task,\n\t        resources: dict.get('Resources') || resources,\n\t        operatorList: operatorList,\n\t        initialState: initialState\n\t      }).then(function () {\n\t        operatorList.addOp(_util.OPS.paintFormXObjectEnd, []);\n\t        if (group) {\n\t          operatorList.addOp(_util.OPS.endGroup, [groupOptions]);\n\t        }\n\t      });\n\t    },\n\t    buildPaintImageXObject: function PartialEvaluator_buildPaintImageXObject(resources, image, inline, operatorList, cacheKey, imageCache) {\n\t      var _this2 = this;\n\t\n\t      var dict = image.dict;\n\t      var w = dict.get('Width', 'W');\n\t      var h = dict.get('Height', 'H');\n\t      if (!(w && (0, _util.isNum)(w)) || !(h && (0, _util.isNum)(h))) {\n\t        (0, _util.warn)('Image dimensions are missing, or not numbers.');\n\t        return;\n\t      }\n\t      var maxImageSize = this.options.maxImageSize;\n\t      if (maxImageSize !== -1 && w * h > maxImageSize) {\n\t        (0, _util.warn)('Image exceeded maximum allowed size and was removed.');\n\t        return;\n\t      }\n\t      var imageMask = dict.get('ImageMask', 'IM') || false;\n\t      var imgData, args;\n\t      if (imageMask) {\n\t        var width = dict.get('Width', 'W');\n\t        var height = dict.get('Height', 'H');\n\t        var bitStrideLength = width + 7 >> 3;\n\t        var imgArray = image.getBytes(bitStrideLength * height);\n\t        var decode = dict.getArray('Decode', 'D');\n\t        imgData = _image.PDFImage.createMask({\n\t          imgArray: imgArray,\n\t          width: width,\n\t          height: height,\n\t          imageIsFromDecodeStream: image instanceof _stream.DecodeStream,\n\t          inverseDecode: !!decode && decode[0] > 0\n\t        });\n\t        imgData.cached = true;\n\t        args = [imgData];\n\t        operatorList.addOp(_util.OPS.paintImageMaskXObject, args);\n\t        if (cacheKey) {\n\t          imageCache[cacheKey] = {\n\t            fn: _util.OPS.paintImageMaskXObject,\n\t            args: args\n\t          };\n\t        }\n\t        return;\n\t      }\n\t      var softMask = dict.get('SMask', 'SM') || false;\n\t      var mask = dict.get('Mask') || false;\n\t      var SMALL_IMAGE_DIMENSIONS = 200;\n\t      if (inline && !softMask && !mask && !(image instanceof _stream.JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\n\t        var imageObj = new _image.PDFImage({\n\t          xref: this.xref,\n\t          res: resources,\n\t          image: image,\n\t          pdfFunctionFactory: this.pdfFunctionFactory\n\t        });\n\t        imgData = imageObj.createImageData(true);\n\t        operatorList.addOp(_util.OPS.paintInlineImageXObject, [imgData]);\n\t        return;\n\t      }\n\t      var nativeImageDecoderSupport = this.options.nativeImageDecoderSupport;\n\t      var objId = 'img_' + this.idFactory.createObjId();\n\t      operatorList.addDependency(objId);\n\t      args = [objId, w, h];\n\t      if (nativeImageDecoderSupport !== _util.NativeImageDecoding.NONE && !softMask && !mask && image instanceof _stream.JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources, this.pdfFunctionFactory)) {\n\t        operatorList.addOp(_util.OPS.paintJpegXObject, args);\n\t        this.handler.send('obj', [objId, this.pageIndex, 'JpegStream', image.getIR(this.options.forceDataSchema)]);\n\t        if (cacheKey) {\n\t          imageCache[cacheKey] = {\n\t            fn: _util.OPS.paintJpegXObject,\n\t            args: args\n\t          };\n\t        }\n\t        return;\n\t      }\n\t      var nativeImageDecoder = null;\n\t      if (nativeImageDecoderSupport === _util.NativeImageDecoding.DECODE && (image instanceof _stream.JpegStream || mask instanceof _stream.JpegStream || softMask instanceof _stream.JpegStream)) {\n\t        nativeImageDecoder = new NativeImageDecoder({\n\t          xref: this.xref,\n\t          resources: resources,\n\t          handler: this.handler,\n\t          forceDataSchema: this.options.forceDataSchema,\n\t          pdfFunctionFactory: this.pdfFunctionFactory\n\t        });\n\t      }\n\t      _image.PDFImage.buildImage({\n\t        handler: this.handler,\n\t        xref: this.xref,\n\t        res: resources,\n\t        image: image,\n\t        nativeDecoder: nativeImageDecoder,\n\t        pdfFunctionFactory: this.pdfFunctionFactory\n\t      }).then(function (imageObj) {\n\t        var imgData = imageObj.createImageData(false);\n\t        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', imgData], [imgData.data.buffer]);\n\t      }).catch(function (reason) {\n\t        (0, _util.warn)('Unable to decode image: ' + reason);\n\t        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', null]);\n\t      });\n\t      operatorList.addOp(_util.OPS.paintImageXObject, args);\n\t      if (cacheKey) {\n\t        imageCache[cacheKey] = {\n\t          fn: _util.OPS.paintImageXObject,\n\t          args: args\n\t        };\n\t      }\n\t    },\n\t    handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\n\t      var smaskContent = smask.get('G');\n\t      var smaskOptions = {\n\t        subtype: smask.get('S').name,\n\t        backdrop: smask.get('BC')\n\t      };\n\t      var transferObj = smask.get('TR');\n\t      if ((0, _function.isPDFFunction)(transferObj)) {\n\t        var transferFn = this.pdfFunctionFactory.create(transferObj);\n\t        var transferMap = new Uint8Array(256);\n\t        var tmp = new Float32Array(1);\n\t        for (var i = 0; i < 256; i++) {\n\t          tmp[0] = i / 255;\n\t          transferFn(tmp, 0, tmp, 0);\n\t          transferMap[i] = tmp[0] * 255 | 0;\n\t        }\n\t        smaskOptions.transferMap = transferMap;\n\t      }\n\t      return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\n\t    },\n\t    handleTilingType: function handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n\t      var _this3 = this;\n\t\n\t      var tilingOpList = new OperatorList();\n\t      var resourcesArray = [patternDict.get('Resources'), resources];\n\t      var patternResources = _primitives.Dict.merge(this.xref, resourcesArray);\n\t      return this.getOperatorList({\n\t        stream: pattern,\n\t        task: task,\n\t        resources: patternResources,\n\t        operatorList: tilingOpList\n\t      }).then(function () {\n\t        return (0, _pattern.getTilingPatternIR)({\n\t          fnArray: tilingOpList.fnArray,\n\t          argsArray: tilingOpList.argsArray\n\t        }, patternDict, args);\n\t      }).then(function (tilingPatternIR) {\n\t        operatorList.addDependencies(tilingOpList.dependencies);\n\t        operatorList.addOp(fn, tilingPatternIR);\n\t      }, function (reason) {\n\t        if (_this3.options.ignoreErrors) {\n\t          _this3.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n\t          (0, _util.warn)('handleTilingType - ignoring pattern: \"' + reason + '\".');\n\t          return;\n\t        }\n\t        throw reason;\n\t      });\n\t    },\n\t\n\t    handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n\t      var _this4 = this;\n\t\n\t      var fontName;\n\t      if (fontArgs) {\n\t        fontArgs = fontArgs.slice();\n\t        fontName = fontArgs[0].name;\n\t      }\n\t      return this.loadFont(fontName, fontRef, resources).then(function (translated) {\n\t        if (!translated.font.isType3Font) {\n\t          return translated;\n\t        }\n\t        return translated.loadType3Data(_this4, resources, operatorList, task).then(function () {\n\t          return translated;\n\t        }).catch(function (reason) {\n\t          _this4.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n\t          return new TranslatedFont('g_font_error', new _fonts.ErrorFont('Type3 font load error: ' + reason), translated.font);\n\t        });\n\t      }).then(function (translated) {\n\t        state.font = translated.font;\n\t        translated.send(_this4.handler);\n\t        return translated.loadedName;\n\t      });\n\t    },\n\t    handleText: function PartialEvaluator_handleText(chars, state) {\n\t      var _this5 = this;\n\t\n\t      var font = state.font;\n\t      var glyphs = font.charsToGlyphs(chars);\n\t      var isAddToPathSet = !!(state.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n\t      if (font.data && (isAddToPathSet || this.options.disableFontFace)) {\n\t        var buildPath = function buildPath(fontChar) {\n\t          if (!font.renderer.hasBuiltPath(fontChar)) {\n\t            var path = font.renderer.getPathJs(fontChar);\n\t            _this5.handler.send('commonobj', [font.loadedName + '_path_' + fontChar, 'FontPath', path]);\n\t          }\n\t        };\n\t        for (var i = 0, ii = glyphs.length; i < ii; i++) {\n\t          var glyph = glyphs[i];\n\t          buildPath(glyph.fontChar);\n\t          var accent = glyph.accent;\n\t          if (accent && accent.fontChar) {\n\t            buildPath(accent.fontChar);\n\t          }\n\t        }\n\t      }\n\t      return glyphs;\n\t    },\n\t    setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, stateManager) {\n\t      var _this6 = this;\n\t\n\t      var gStateObj = [];\n\t      var gStateKeys = gState.getKeys();\n\t      var promise = Promise.resolve();\n\t\n\t      var _loop = function _loop() {\n\t        var key = gStateKeys[i];\n\t        var value = gState.get(key);\n\t        switch (key) {\n\t          case 'Type':\n\t            break;\n\t          case 'LW':\n\t          case 'LC':\n\t          case 'LJ':\n\t          case 'ML':\n\t          case 'D':\n\t          case 'RI':\n\t          case 'FL':\n\t          case 'CA':\n\t          case 'ca':\n\t            gStateObj.push([key, value]);\n\t            break;\n\t          case 'Font':\n\t            promise = promise.then(function () {\n\t              return _this6.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n\t                operatorList.addDependency(loadedName);\n\t                gStateObj.push([key, [loadedName, value[1]]]);\n\t              });\n\t            });\n\t            break;\n\t          case 'BM':\n\t            gStateObj.push([key, normalizeBlendMode(value)]);\n\t            break;\n\t          case 'SMask':\n\t            if ((0, _primitives.isName)(value, 'None')) {\n\t              gStateObj.push([key, false]);\n\t              break;\n\t            }\n\t            if ((0, _primitives.isDict)(value)) {\n\t              promise = promise.then(function () {\n\t                return _this6.handleSMask(value, resources, operatorList, task, stateManager);\n\t              });\n\t              gStateObj.push([key, true]);\n\t            } else {\n\t              (0, _util.warn)('Unsupported SMask type');\n\t            }\n\t            break;\n\t          case 'OP':\n\t          case 'op':\n\t          case 'OPM':\n\t          case 'BG':\n\t          case 'BG2':\n\t          case 'UCR':\n\t          case 'UCR2':\n\t          case 'TR':\n\t          case 'TR2':\n\t          case 'HT':\n\t          case 'SM':\n\t          case 'SA':\n\t          case 'AIS':\n\t          case 'TK':\n\t            (0, _util.info)('graphic state operator ' + key);\n\t            break;\n\t          default:\n\t            (0, _util.info)('Unknown graphic state operator ' + key);\n\t            break;\n\t        }\n\t      };\n\t\n\t      for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\n\t        _loop();\n\t      }\n\t      return promise.then(function () {\n\t        if (gStateObj.length > 0) {\n\t          operatorList.addOp(_util.OPS.setGState, [gStateObj]);\n\t        }\n\t      });\n\t    },\n\t    loadFont: function PartialEvaluator_loadFont(fontName, font, resources) {\n\t      var _this7 = this;\n\t\n\t      function errorFont() {\n\t        return Promise.resolve(new TranslatedFont('g_font_error', new _fonts.ErrorFont('Font ' + fontName + ' is not available'), font));\n\t      }\n\t      var fontRef,\n\t          xref = this.xref;\n\t      if (font) {\n\t        if (!(0, _primitives.isRef)(font)) {\n\t          throw new Error('The \"font\" object should be a reference.');\n\t        }\n\t        fontRef = font;\n\t      } else {\n\t        var fontRes = resources.get('Font');\n\t        if (fontRes) {\n\t          fontRef = fontRes.getRaw(fontName);\n\t        } else {\n\t          (0, _util.warn)('fontRes not available');\n\t          return errorFont();\n\t        }\n\t      }\n\t      if (!fontRef) {\n\t        (0, _util.warn)('fontRef not available');\n\t        return errorFont();\n\t      }\n\t      if (this.fontCache.has(fontRef)) {\n\t        return this.fontCache.get(fontRef);\n\t      }\n\t      font = xref.fetchIfRef(fontRef);\n\t      if (!(0, _primitives.isDict)(font)) {\n\t        return errorFont();\n\t      }\n\t      if (font.translated) {\n\t        return font.translated;\n\t      }\n\t      var fontCapability = (0, _util.createPromiseCapability)();\n\t      var preEvaluatedFont = this.preEvaluateFont(font);\n\t      var descriptor = preEvaluatedFont.descriptor;\n\t      var fontRefIsRef = (0, _primitives.isRef)(fontRef),\n\t          fontID;\n\t      if (fontRefIsRef) {\n\t        fontID = fontRef.toString();\n\t      }\n\t      if ((0, _primitives.isDict)(descriptor)) {\n\t        if (!descriptor.fontAliases) {\n\t          descriptor.fontAliases = Object.create(null);\n\t        }\n\t        var fontAliases = descriptor.fontAliases;\n\t        var hash = preEvaluatedFont.hash;\n\t        if (fontAliases[hash]) {\n\t          var aliasFontRef = fontAliases[hash].aliasRef;\n\t          if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n\t            this.fontCache.putAlias(fontRef, aliasFontRef);\n\t            return this.fontCache.get(fontRef);\n\t          }\n\t        } else {\n\t          fontAliases[hash] = { fontID: _fonts.Font.getFontID() };\n\t        }\n\t        if (fontRefIsRef) {\n\t          fontAliases[hash].aliasRef = fontRef;\n\t        }\n\t        fontID = fontAliases[hash].fontID;\n\t      }\n\t      if (fontRefIsRef) {\n\t        this.fontCache.put(fontRef, fontCapability.promise);\n\t      } else {\n\t        if (!fontID) {\n\t          fontID = this.idFactory.createObjId();\n\t        }\n\t        this.fontCache.put('id_' + fontID, fontCapability.promise);\n\t      }\n\t      (0, _util.assert)(fontID, 'The \"fontID\" must be defined.');\n\t      font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\n\t      font.translated = fontCapability.promise;\n\t      var translatedPromise;\n\t      try {\n\t        translatedPromise = this.translateFont(preEvaluatedFont);\n\t      } catch (e) {\n\t        translatedPromise = Promise.reject(e);\n\t      }\n\t      translatedPromise.then(function (translatedFont) {\n\t        if (translatedFont.fontType !== undefined) {\n\t          var xrefFontStats = xref.stats.fontTypes;\n\t          xrefFontStats[translatedFont.fontType] = true;\n\t        }\n\t        fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\n\t      }).catch(function (reason) {\n\t        _this7.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n\t        try {\n\t          var descriptor = preEvaluatedFont.descriptor;\n\t          var fontFile3 = descriptor && descriptor.get('FontFile3');\n\t          var subtype = fontFile3 && fontFile3.get('Subtype');\n\t          var fontType = (0, _fonts.getFontType)(preEvaluatedFont.type, subtype && subtype.name);\n\t          var xrefFontStats = xref.stats.fontTypes;\n\t          xrefFontStats[fontType] = true;\n\t        } catch (ex) {}\n\t        fontCapability.resolve(new TranslatedFont(font.loadedName, new _fonts.ErrorFont(reason instanceof Error ? reason.message : reason), font));\n\t      });\n\t      return fontCapability.promise;\n\t    },\n\t    buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n\t      var lastIndex = operatorList.length - 1;\n\t      if (!args) {\n\t        args = [];\n\t      }\n\t      if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== _util.OPS.constructPath) {\n\t        operatorList.addOp(_util.OPS.constructPath, [[fn], args]);\n\t      } else {\n\t        var opArgs = operatorList.argsArray[lastIndex];\n\t        opArgs[0].push(fn);\n\t        Array.prototype.push.apply(opArgs[1], args);\n\t      }\n\t    },\n\t    handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task) {\n\t      var patternName = args[args.length - 1];\n\t      var pattern;\n\t      if ((0, _primitives.isName)(patternName) && (pattern = patterns.get(patternName.name))) {\n\t        var dict = (0, _primitives.isStream)(pattern) ? pattern.dict : pattern;\n\t        var typeNum = dict.get('PatternType');\n\t        if (typeNum === TILING_PATTERN) {\n\t          var color = cs.base ? cs.base.getRgb(args, 0) : null;\n\t          return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\n\t        } else if (typeNum === SHADING_PATTERN) {\n\t          var shading = dict.get('Shading');\n\t          var matrix = dict.getArray('Matrix');\n\t          pattern = _pattern.Pattern.parseShading(shading, matrix, this.xref, resources, this.handler, this.pdfFunctionFactory);\n\t          operatorList.addOp(fn, pattern.getIR());\n\t          return Promise.resolve();\n\t        }\n\t        return Promise.reject(new Error('Unknown PatternType: ' + typeNum));\n\t      }\n\t      operatorList.addOp(fn, args);\n\t      return Promise.resolve();\n\t    },\n\t    getOperatorList: function getOperatorList(_ref3) {\n\t      var _this8 = this;\n\t\n\t      var stream = _ref3.stream,\n\t          task = _ref3.task,\n\t          resources = _ref3.resources,\n\t          operatorList = _ref3.operatorList,\n\t          _ref3$initialState = _ref3.initialState,\n\t          initialState = _ref3$initialState === undefined ? null : _ref3$initialState;\n\t\n\t      resources = resources || _primitives.Dict.empty;\n\t      initialState = initialState || new EvalState();\n\t      if (!operatorList) {\n\t        throw new Error('getOperatorList: missing \"operatorList\" parameter');\n\t      }\n\t      var self = this;\n\t      var xref = this.xref;\n\t      var imageCache = Object.create(null);\n\t      var xobjs = resources.get('XObject') || _primitives.Dict.empty;\n\t      var patterns = resources.get('Pattern') || _primitives.Dict.empty;\n\t      var stateManager = new StateManager(initialState);\n\t      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n\t      var timeSlotManager = new TimeSlotManager();\n\t      function closePendingRestoreOPS(argument) {\n\t        for (var i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n\t          operatorList.addOp(_util.OPS.restore, []);\n\t        }\n\t      }\n\t      return new Promise(function promiseBody(resolve, reject) {\n\t        var next = function next(promise) {\n\t          promise.then(function () {\n\t            try {\n\t              promiseBody(resolve, reject);\n\t            } catch (ex) {\n\t              reject(ex);\n\t            }\n\t          }, reject);\n\t        };\n\t        task.ensureNotTerminated();\n\t        timeSlotManager.reset();\n\t        var stop,\n\t            operation = {},\n\t            i,\n\t            ii,\n\t            cs;\n\t        while (!(stop = timeSlotManager.check())) {\n\t          operation.args = null;\n\t          if (!preprocessor.read(operation)) {\n\t            break;\n\t          }\n\t          var args = operation.args;\n\t          var fn = operation.fn;\n\t          switch (fn | 0) {\n\t            case _util.OPS.paintXObject:\n\t              var name = args[0].name;\n\t              if (name && imageCache[name] !== undefined) {\n\t                operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n\t                args = null;\n\t                continue;\n\t              }\n\t              next(new Promise(function (resolveXObject, rejectXObject) {\n\t                if (!name) {\n\t                  throw new _util.FormatError('XObject must be referred to by name.');\n\t                }\n\t                var xobj = xobjs.get(name);\n\t                if (!xobj) {\n\t                  operatorList.addOp(fn, args);\n\t                  resolveXObject();\n\t                  return;\n\t                }\n\t                if (!(0, _primitives.isStream)(xobj)) {\n\t                  throw new _util.FormatError('XObject should be a stream');\n\t                }\n\t                var type = xobj.dict.get('Subtype');\n\t                if (!(0, _primitives.isName)(type)) {\n\t                  throw new _util.FormatError('XObject should have a Name subtype');\n\t                }\n\t                if (type.name === 'Form') {\n\t                  stateManager.save();\n\t                  self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\n\t                    stateManager.restore();\n\t                    resolveXObject();\n\t                  }, rejectXObject);\n\t                  return;\n\t                } else if (type.name === 'Image') {\n\t                  self.buildPaintImageXObject(resources, xobj, false, operatorList, name, imageCache);\n\t                } else if (type.name === 'PS') {\n\t                  (0, _util.info)('Ignored XObject subtype PS');\n\t                } else {\n\t                  throw new _util.FormatError('Unhandled XObject subtype ' + type.name);\n\t                }\n\t                resolveXObject();\n\t              }).catch(function (reason) {\n\t                if (self.options.ignoreErrors) {\n\t                  self.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n\t                  (0, _util.warn)('getOperatorList - ignoring XObject: \"' + reason + '\".');\n\t                  return;\n\t                }\n\t                throw reason;\n\t              }));\n\t              return;\n\t            case _util.OPS.setFont:\n\t              var fontSize = args[1];\n\t              next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n\t                operatorList.addDependency(loadedName);\n\t                operatorList.addOp(_util.OPS.setFont, [loadedName, fontSize]);\n\t              }));\n\t              return;\n\t            case _util.OPS.endInlineImage:\n\t              var cacheKey = args[0].cacheKey;\n\t              if (cacheKey) {\n\t                var cacheEntry = imageCache[cacheKey];\n\t                if (cacheEntry !== undefined) {\n\t                  operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n\t                  args = null;\n\t                  continue;\n\t                }\n\t              }\n\t              self.buildPaintImageXObject(resources, args[0], true, operatorList, cacheKey, imageCache);\n\t              args = null;\n\t              continue;\n\t            case _util.OPS.showText:\n\t              args[0] = self.handleText(args[0], stateManager.state);\n\t              break;\n\t            case _util.OPS.showSpacedText:\n\t              var arr = args[0];\n\t              var combinedGlyphs = [];\n\t              var arrLength = arr.length;\n\t              var state = stateManager.state;\n\t              for (i = 0; i < arrLength; ++i) {\n\t                var arrItem = arr[i];\n\t                if ((0, _util.isString)(arrItem)) {\n\t                  Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n\t                } else if ((0, _util.isNum)(arrItem)) {\n\t                  combinedGlyphs.push(arrItem);\n\t                }\n\t              }\n\t              args[0] = combinedGlyphs;\n\t              fn = _util.OPS.showText;\n\t              break;\n\t            case _util.OPS.nextLineShowText:\n\t              operatorList.addOp(_util.OPS.nextLine);\n\t              args[0] = self.handleText(args[0], stateManager.state);\n\t              fn = _util.OPS.showText;\n\t              break;\n\t            case _util.OPS.nextLineSetSpacingShowText:\n\t              operatorList.addOp(_util.OPS.nextLine);\n\t              operatorList.addOp(_util.OPS.setWordSpacing, [args.shift()]);\n\t              operatorList.addOp(_util.OPS.setCharSpacing, [args.shift()]);\n\t              args[0] = self.handleText(args[0], stateManager.state);\n\t              fn = _util.OPS.showText;\n\t              break;\n\t            case _util.OPS.setTextRenderingMode:\n\t              stateManager.state.textRenderingMode = args[0];\n\t              break;\n\t            case _util.OPS.setFillColorSpace:\n\t              stateManager.state.fillColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n\t              continue;\n\t            case _util.OPS.setStrokeColorSpace:\n\t              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n\t              continue;\n\t            case _util.OPS.setFillColor:\n\t              cs = stateManager.state.fillColorSpace;\n\t              args = cs.getRgb(args, 0);\n\t              fn = _util.OPS.setFillRGBColor;\n\t              break;\n\t            case _util.OPS.setStrokeColor:\n\t              cs = stateManager.state.strokeColorSpace;\n\t              args = cs.getRgb(args, 0);\n\t              fn = _util.OPS.setStrokeRGBColor;\n\t              break;\n\t            case _util.OPS.setFillGray:\n\t              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n\t              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n\t              fn = _util.OPS.setFillRGBColor;\n\t              break;\n\t            case _util.OPS.setStrokeGray:\n\t              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n\t              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n\t              fn = _util.OPS.setStrokeRGBColor;\n\t              break;\n\t            case _util.OPS.setFillCMYKColor:\n\t              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n\t              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n\t              fn = _util.OPS.setFillRGBColor;\n\t              break;\n\t            case _util.OPS.setStrokeCMYKColor:\n\t              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n\t              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n\t              fn = _util.OPS.setStrokeRGBColor;\n\t              break;\n\t            case _util.OPS.setFillRGBColor:\n\t              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.rgb;\n\t              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n\t              break;\n\t            case _util.OPS.setStrokeRGBColor:\n\t              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.rgb;\n\t              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n\t              break;\n\t            case _util.OPS.setFillColorN:\n\t              cs = stateManager.state.fillColorSpace;\n\t              if (cs.name === 'Pattern') {\n\t                next(self.handleColorN(operatorList, _util.OPS.setFillColorN, args, cs, patterns, resources, task));\n\t                return;\n\t              }\n\t              args = cs.getRgb(args, 0);\n\t              fn = _util.OPS.setFillRGBColor;\n\t              break;\n\t            case _util.OPS.setStrokeColorN:\n\t              cs = stateManager.state.strokeColorSpace;\n\t              if (cs.name === 'Pattern') {\n\t                next(self.handleColorN(operatorList, _util.OPS.setStrokeColorN, args, cs, patterns, resources, task));\n\t                return;\n\t              }\n\t              args = cs.getRgb(args, 0);\n\t              fn = _util.OPS.setStrokeRGBColor;\n\t              break;\n\t            case _util.OPS.shadingFill:\n\t              var shadingRes = resources.get('Shading');\n\t              if (!shadingRes) {\n\t                throw new _util.FormatError('No shading resource found');\n\t              }\n\t              var shading = shadingRes.get(args[0].name);\n\t              if (!shading) {\n\t                throw new _util.FormatError('No shading object found');\n\t              }\n\t              var shadingFill = _pattern.Pattern.parseShading(shading, null, xref, resources, self.handler, self.pdfFunctionFactory);\n\t              var patternIR = shadingFill.getIR();\n\t              args = [patternIR];\n\t              fn = _util.OPS.shadingFill;\n\t              break;\n\t            case _util.OPS.setGState:\n\t              var dictName = args[0];\n\t              var extGState = resources.get('ExtGState');\n\t              if (!(0, _primitives.isDict)(extGState) || !extGState.has(dictName.name)) {\n\t                break;\n\t              }\n\t              var gState = extGState.get(dictName.name);\n\t              next(self.setGState(resources, gState, operatorList, task, stateManager));\n\t              return;\n\t            case _util.OPS.moveTo:\n\t            case _util.OPS.lineTo:\n\t            case _util.OPS.curveTo:\n\t            case _util.OPS.curveTo2:\n\t            case _util.OPS.curveTo3:\n\t            case _util.OPS.closePath:\n\t              self.buildPath(operatorList, fn, args);\n\t              continue;\n\t            case _util.OPS.rectangle:\n\t              self.buildPath(operatorList, fn, args);\n\t              continue;\n\t            case _util.OPS.markPoint:\n\t            case _util.OPS.markPointProps:\n\t            case _util.OPS.beginMarkedContent:\n\t            case _util.OPS.beginMarkedContentProps:\n\t            case _util.OPS.endMarkedContent:\n\t            case _util.OPS.beginCompat:\n\t            case _util.OPS.endCompat:\n\t              continue;\n\t            default:\n\t              if (args !== null) {\n\t                for (i = 0, ii = args.length; i < ii; i++) {\n\t                  if (args[i] instanceof _primitives.Dict) {\n\t                    break;\n\t                  }\n\t                }\n\t                if (i < ii) {\n\t                  (0, _util.warn)('getOperatorList - ignoring operator: ' + fn);\n\t                  continue;\n\t                }\n\t              }\n\t          }\n\t          operatorList.addOp(fn, args);\n\t        }\n\t        if (stop) {\n\t          next(deferred);\n\t          return;\n\t        }\n\t        closePendingRestoreOPS();\n\t        resolve();\n\t      }).catch(function (reason) {\n\t        if (_this8.options.ignoreErrors) {\n\t          _this8.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n\t          (0, _util.warn)('getOperatorList - ignoring errors during task: ' + task.name);\n\t          closePendingRestoreOPS();\n\t          return;\n\t        }\n\t        throw reason;\n\t      });\n\t    },\n\t    getTextContent: function getTextContent(_ref4) {\n\t      var _this9 = this;\n\t\n\t      var stream = _ref4.stream,\n\t          task = _ref4.task,\n\t          resources = _ref4.resources,\n\t          _ref4$stateManager = _ref4.stateManager,\n\t          stateManager = _ref4$stateManager === undefined ? null : _ref4$stateManager,\n\t          _ref4$normalizeWhites = _ref4.normalizeWhitespace,\n\t          normalizeWhitespace = _ref4$normalizeWhites === undefined ? false : _ref4$normalizeWhites,\n\t          _ref4$combineTextItem = _ref4.combineTextItems,\n\t          combineTextItems = _ref4$combineTextItem === undefined ? false : _ref4$combineTextItem,\n\t          sink = _ref4.sink,\n\t          _ref4$seenStyles = _ref4.seenStyles,\n\t          seenStyles = _ref4$seenStyles === undefined ? Object.create(null) : _ref4$seenStyles;\n\t\n\t      resources = resources || _primitives.Dict.empty;\n\t      stateManager = stateManager || new StateManager(new TextState());\n\t      var WhitespaceRegexp = /\\s/g;\n\t      var textContent = {\n\t        items: [],\n\t        styles: Object.create(null)\n\t      };\n\t      var textContentItem = {\n\t        initialized: false,\n\t        str: [],\n\t        width: 0,\n\t        height: 0,\n\t        vertical: false,\n\t        lastAdvanceWidth: 0,\n\t        lastAdvanceHeight: 0,\n\t        textAdvanceScale: 0,\n\t        spaceWidth: 0,\n\t        fakeSpaceMin: Infinity,\n\t        fakeMultiSpaceMin: Infinity,\n\t        fakeMultiSpaceMax: -0,\n\t        textRunBreakAllowed: false,\n\t        transform: null,\n\t        fontName: null\n\t      };\n\t      var SPACE_FACTOR = 0.3;\n\t      var MULTI_SPACE_FACTOR = 1.5;\n\t      var MULTI_SPACE_FACTOR_MAX = 4;\n\t      var self = this;\n\t      var xref = this.xref;\n\t      var xobjs = null;\n\t      var skipEmptyXObjs = Object.create(null);\n\t      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n\t      var textState;\n\t      function ensureTextContentItem() {\n\t        if (textContentItem.initialized) {\n\t          return textContentItem;\n\t        }\n\t        var font = textState.font;\n\t        if (!(font.loadedName in seenStyles)) {\n\t          seenStyles[font.loadedName] = true;\n\t          textContent.styles[font.loadedName] = {\n\t            fontFamily: font.fallbackName,\n\t            ascent: font.ascent,\n\t            descent: font.descent,\n\t            vertical: font.vertical\n\t          };\n\t        }\n\t        textContentItem.fontName = font.loadedName;\n\t        var tsm = [textState.fontSize * textState.textHScale, 0, 0, textState.fontSize, 0, textState.textRise];\n\t        if (font.isType3Font && textState.fontMatrix !== _util.FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\n\t          var glyphHeight = font.bbox[3] - font.bbox[1];\n\t          if (glyphHeight > 0) {\n\t            glyphHeight = glyphHeight * textState.fontMatrix[3];\n\t            tsm[3] *= glyphHeight;\n\t          }\n\t        }\n\t        var trm = _util.Util.transform(textState.ctm, _util.Util.transform(textState.textMatrix, tsm));\n\t        textContentItem.transform = trm;\n\t        if (!font.vertical) {\n\t          textContentItem.width = 0;\n\t          textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n\t          textContentItem.vertical = false;\n\t        } else {\n\t          textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n\t          textContentItem.height = 0;\n\t          textContentItem.vertical = true;\n\t        }\n\t        var a = textState.textLineMatrix[0];\n\t        var b = textState.textLineMatrix[1];\n\t        var scaleLineX = Math.sqrt(a * a + b * b);\n\t        a = textState.ctm[0];\n\t        b = textState.ctm[1];\n\t        var scaleCtmX = Math.sqrt(a * a + b * b);\n\t        textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n\t        textContentItem.lastAdvanceWidth = 0;\n\t        textContentItem.lastAdvanceHeight = 0;\n\t        var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n\t        if (spaceWidth) {\n\t          textContentItem.spaceWidth = spaceWidth;\n\t          textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n\t          textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n\t          textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n\t          textContentItem.textRunBreakAllowed = !font.isMonospace;\n\t        } else {\n\t          textContentItem.spaceWidth = 0;\n\t          textContentItem.fakeSpaceMin = Infinity;\n\t          textContentItem.fakeMultiSpaceMin = Infinity;\n\t          textContentItem.fakeMultiSpaceMax = 0;\n\t          textContentItem.textRunBreakAllowed = false;\n\t        }\n\t        textContentItem.initialized = true;\n\t        return textContentItem;\n\t      }\n\t      function replaceWhitespace(str) {\n\t        var i = 0,\n\t            ii = str.length,\n\t            code;\n\t        while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\n\t          i++;\n\t        }\n\t        return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\n\t      }\n\t      function runBidiTransform(textChunk) {\n\t        var str = textChunk.str.join('');\n\t        var bidiResult = (0, _bidi.bidi)(str, -1, textChunk.vertical);\n\t        return {\n\t          str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n\t          dir: bidiResult.dir,\n\t          width: textChunk.width,\n\t          height: textChunk.height,\n\t          transform: textChunk.transform,\n\t          fontName: textChunk.fontName\n\t        };\n\t      }\n\t      function handleSetFont(fontName, fontRef) {\n\t        return self.loadFont(fontName, fontRef, resources).then(function (translated) {\n\t          textState.font = translated.font;\n\t          textState.fontMatrix = translated.font.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n\t        });\n\t      }\n\t      function buildTextContentItem(chars) {\n\t        var font = textState.font;\n\t        var textChunk = ensureTextContentItem();\n\t        var width = 0;\n\t        var height = 0;\n\t        var glyphs = font.charsToGlyphs(chars);\n\t        for (var i = 0; i < glyphs.length; i++) {\n\t          var glyph = glyphs[i];\n\t          var glyphWidth = null;\n\t          if (font.vertical && glyph.vmetric) {\n\t            glyphWidth = glyph.vmetric[0];\n\t          } else {\n\t            glyphWidth = glyph.width;\n\t          }\n\t          var glyphUnicode = glyph.unicode;\n\t          var NormalizedUnicodes = (0, _unicode.getNormalizedUnicodes)();\n\t          if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n\t            glyphUnicode = NormalizedUnicodes[glyphUnicode];\n\t          }\n\t          glyphUnicode = (0, _unicode.reverseIfRtl)(glyphUnicode);\n\t          var charSpacing = textState.charSpacing;\n\t          if (glyph.isSpace) {\n\t            var wordSpacing = textState.wordSpacing;\n\t            charSpacing += wordSpacing;\n\t            if (wordSpacing > 0) {\n\t              addFakeSpaces(wordSpacing, textChunk.str);\n\t            }\n\t          }\n\t          var tx = 0;\n\t          var ty = 0;\n\t          if (!font.vertical) {\n\t            var w0 = glyphWidth * textState.fontMatrix[0];\n\t            tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n\t            width += tx;\n\t          } else {\n\t            var w1 = glyphWidth * textState.fontMatrix[0];\n\t            ty = w1 * textState.fontSize + charSpacing;\n\t            height += ty;\n\t          }\n\t          textState.translateTextMatrix(tx, ty);\n\t          textChunk.str.push(glyphUnicode);\n\t        }\n\t        if (!font.vertical) {\n\t          textChunk.lastAdvanceWidth = width;\n\t          textChunk.width += width;\n\t        } else {\n\t          textChunk.lastAdvanceHeight = height;\n\t          textChunk.height += Math.abs(height);\n\t        }\n\t        return textChunk;\n\t      }\n\t      function addFakeSpaces(width, strBuf) {\n\t        if (width < textContentItem.fakeSpaceMin) {\n\t          return;\n\t        }\n\t        if (width < textContentItem.fakeMultiSpaceMin) {\n\t          strBuf.push(' ');\n\t          return;\n\t        }\n\t        var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n\t        while (fakeSpaces-- > 0) {\n\t          strBuf.push(' ');\n\t        }\n\t      }\n\t      function flushTextContentItem() {\n\t        if (!textContentItem.initialized) {\n\t          return;\n\t        }\n\t        textContentItem.width *= textContentItem.textAdvanceScale;\n\t        textContentItem.height *= textContentItem.textAdvanceScale;\n\t        textContent.items.push(runBidiTransform(textContentItem));\n\t        textContentItem.initialized = false;\n\t        textContentItem.str.length = 0;\n\t      }\n\t      function enqueueChunk() {\n\t        var length = textContent.items.length;\n\t        if (length > 0) {\n\t          sink.enqueue(textContent, length);\n\t          textContent.items = [];\n\t          textContent.styles = Object.create(null);\n\t        }\n\t      }\n\t      var timeSlotManager = new TimeSlotManager();\n\t      return new Promise(function promiseBody(resolve, reject) {\n\t        var next = function next(promise) {\n\t          enqueueChunk();\n\t          Promise.all([promise, sink.ready]).then(function () {\n\t            try {\n\t              promiseBody(resolve, reject);\n\t            } catch (ex) {\n\t              reject(ex);\n\t            }\n\t          }, reject);\n\t        };\n\t        task.ensureNotTerminated();\n\t        timeSlotManager.reset();\n\t        var stop,\n\t            operation = {},\n\t            args = [];\n\t        while (!(stop = timeSlotManager.check())) {\n\t          args.length = 0;\n\t          operation.args = args;\n\t          if (!preprocessor.read(operation)) {\n\t            break;\n\t          }\n\t          textState = stateManager.state;\n\t          var fn = operation.fn;\n\t          args = operation.args;\n\t          var advance, diff;\n\t          switch (fn | 0) {\n\t            case _util.OPS.setFont:\n\t              var fontNameArg = args[0].name,\n\t                  fontSizeArg = args[1];\n\t              if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n\t                break;\n\t              }\n\t              flushTextContentItem();\n\t              textState.fontName = fontNameArg;\n\t              textState.fontSize = fontSizeArg;\n\t              next(handleSetFont(fontNameArg, null));\n\t              return;\n\t            case _util.OPS.setTextRise:\n\t              flushTextContentItem();\n\t              textState.textRise = args[0];\n\t              break;\n\t            case _util.OPS.setHScale:\n\t              flushTextContentItem();\n\t              textState.textHScale = args[0] / 100;\n\t              break;\n\t            case _util.OPS.setLeading:\n\t              flushTextContentItem();\n\t              textState.leading = args[0];\n\t              break;\n\t            case _util.OPS.moveText:\n\t              var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n\t              advance = args[0] - args[1];\n\t              if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n\t                textState.translateTextLineMatrix(args[0], args[1]);\n\t                textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n\t                textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n\t                diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n\t                addFakeSpaces(diff, textContentItem.str);\n\t                break;\n\t              }\n\t              flushTextContentItem();\n\t              textState.translateTextLineMatrix(args[0], args[1]);\n\t              textState.textMatrix = textState.textLineMatrix.slice();\n\t              break;\n\t            case _util.OPS.setLeadingMoveText:\n\t              flushTextContentItem();\n\t              textState.leading = -args[1];\n\t              textState.translateTextLineMatrix(args[0], args[1]);\n\t              textState.textMatrix = textState.textLineMatrix.slice();\n\t              break;\n\t            case _util.OPS.nextLine:\n\t              flushTextContentItem();\n\t              textState.carriageReturn();\n\t              break;\n\t            case _util.OPS.setTextMatrix:\n\t              advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t              if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n\t                textState.translateTextLineMatrix(advance.width, advance.height);\n\t                textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n\t                textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n\t                diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n\t                addFakeSpaces(diff, textContentItem.str);\n\t                break;\n\t              }\n\t              flushTextContentItem();\n\t              textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t              textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t              break;\n\t            case _util.OPS.setCharSpacing:\n\t              textState.charSpacing = args[0];\n\t              break;\n\t            case _util.OPS.setWordSpacing:\n\t              textState.wordSpacing = args[0];\n\t              break;\n\t            case _util.OPS.beginText:\n\t              flushTextContentItem();\n\t              textState.textMatrix = _util.IDENTITY_MATRIX.slice();\n\t              textState.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n\t              break;\n\t            case _util.OPS.showSpacedText:\n\t              var items = args[0];\n\t              var offset;\n\t              for (var j = 0, jj = items.length; j < jj; j++) {\n\t                if (typeof items[j] === 'string') {\n\t                  buildTextContentItem(items[j]);\n\t                } else if ((0, _util.isNum)(items[j])) {\n\t                  ensureTextContentItem();\n\t                  advance = items[j] * textState.fontSize / 1000;\n\t                  var breakTextRun = false;\n\t                  if (textState.font.vertical) {\n\t                    offset = advance;\n\t                    textState.translateTextMatrix(0, offset);\n\t                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n\t                    if (!breakTextRun) {\n\t                      textContentItem.height += offset;\n\t                    }\n\t                  } else {\n\t                    advance = -advance;\n\t                    offset = advance * textState.textHScale;\n\t                    textState.translateTextMatrix(offset, 0);\n\t                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n\t                    if (!breakTextRun) {\n\t                      textContentItem.width += offset;\n\t                    }\n\t                  }\n\t                  if (breakTextRun) {\n\t                    flushTextContentItem();\n\t                  } else if (advance > 0) {\n\t                    addFakeSpaces(advance, textContentItem.str);\n\t                  }\n\t                }\n\t              }\n\t              break;\n\t            case _util.OPS.showText:\n\t              buildTextContentItem(args[0]);\n\t              break;\n\t            case _util.OPS.nextLineShowText:\n\t              flushTextContentItem();\n\t              textState.carriageReturn();\n\t              buildTextContentItem(args[0]);\n\t              break;\n\t            case _util.OPS.nextLineSetSpacingShowText:\n\t              flushTextContentItem();\n\t              textState.wordSpacing = args[0];\n\t              textState.charSpacing = args[1];\n\t              textState.carriageReturn();\n\t              buildTextContentItem(args[2]);\n\t              break;\n\t            case _util.OPS.paintXObject:\n\t              flushTextContentItem();\n\t              if (!xobjs) {\n\t                xobjs = resources.get('XObject') || _primitives.Dict.empty;\n\t              }\n\t              var name = args[0].name;\n\t              if (name && skipEmptyXObjs[name] !== undefined) {\n\t                break;\n\t              }\n\t              next(new Promise(function (resolveXObject, rejectXObject) {\n\t                if (!name) {\n\t                  throw new _util.FormatError('XObject must be referred to by name.');\n\t                }\n\t                var xobj = xobjs.get(name);\n\t                if (!xobj) {\n\t                  resolveXObject();\n\t                  return;\n\t                }\n\t                if (!(0, _primitives.isStream)(xobj)) {\n\t                  throw new _util.FormatError('XObject should be a stream');\n\t                }\n\t                var type = xobj.dict.get('Subtype');\n\t                if (!(0, _primitives.isName)(type)) {\n\t                  throw new _util.FormatError('XObject should have a Name subtype');\n\t                }\n\t                if (type.name !== 'Form') {\n\t                  skipEmptyXObjs[name] = true;\n\t                  resolveXObject();\n\t                  return;\n\t                }\n\t                var currentState = stateManager.state.clone();\n\t                var xObjStateManager = new StateManager(currentState);\n\t                var matrix = xobj.dict.getArray('Matrix');\n\t                if (Array.isArray(matrix) && matrix.length === 6) {\n\t                  xObjStateManager.transform(matrix);\n\t                }\n\t                enqueueChunk();\n\t                var sinkWrapper = {\n\t                  enqueueInvoked: false,\n\t                  enqueue: function enqueue(chunk, size) {\n\t                    this.enqueueInvoked = true;\n\t                    sink.enqueue(chunk, size);\n\t                  },\n\t\n\t                  get desiredSize() {\n\t                    return sink.desiredSize;\n\t                  },\n\t                  get ready() {\n\t                    return sink.ready;\n\t                  }\n\t                };\n\t                self.getTextContent({\n\t                  stream: xobj,\n\t                  task: task,\n\t                  resources: xobj.dict.get('Resources') || resources,\n\t                  stateManager: xObjStateManager,\n\t                  normalizeWhitespace: normalizeWhitespace,\n\t                  combineTextItems: combineTextItems,\n\t                  sink: sinkWrapper,\n\t                  seenStyles: seenStyles\n\t                }).then(function () {\n\t                  if (!sinkWrapper.enqueueInvoked) {\n\t                    skipEmptyXObjs[name] = true;\n\t                  }\n\t                  resolveXObject();\n\t                }, rejectXObject);\n\t              }).catch(function (reason) {\n\t                if (reason instanceof _util.AbortException) {\n\t                  return;\n\t                }\n\t                if (self.options.ignoreErrors) {\n\t                  (0, _util.warn)('getTextContent - ignoring XObject: \"' + reason + '\".');\n\t                  return;\n\t                }\n\t                throw reason;\n\t              }));\n\t              return;\n\t            case _util.OPS.setGState:\n\t              flushTextContentItem();\n\t              var dictName = args[0];\n\t              var extGState = resources.get('ExtGState');\n\t              if (!(0, _primitives.isDict)(extGState) || !(0, _primitives.isName)(dictName)) {\n\t                break;\n\t              }\n\t              var gState = extGState.get(dictName.name);\n\t              if (!(0, _primitives.isDict)(gState)) {\n\t                break;\n\t              }\n\t              var gStateFont = gState.get('Font');\n\t              if (gStateFont) {\n\t                textState.fontName = null;\n\t                textState.fontSize = gStateFont[1];\n\t                next(handleSetFont(null, gStateFont[0]));\n\t                return;\n\t              }\n\t              break;\n\t          }\n\t          if (textContent.items.length >= sink.desiredSize) {\n\t            stop = true;\n\t            break;\n\t          }\n\t        }\n\t        if (stop) {\n\t          next(deferred);\n\t          return;\n\t        }\n\t        flushTextContentItem();\n\t        enqueueChunk();\n\t        resolve();\n\t      }).catch(function (reason) {\n\t        if (reason instanceof _util.AbortException) {\n\t          return;\n\t        }\n\t        if (_this9.options.ignoreErrors) {\n\t          (0, _util.warn)('getTextContent - ignoring errors during task: ' + task.name);\n\t          flushTextContentItem();\n\t          enqueueChunk();\n\t          return;\n\t        }\n\t        throw reason;\n\t      });\n\t    },\n\t\n\t    extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, properties) {\n\t      var _this10 = this;\n\t\n\t      var xref = this.xref;\n\t      var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n\t      var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n\t      if (properties.composite) {\n\t        var cidSystemInfo = dict.get('CIDSystemInfo');\n\t        if ((0, _primitives.isDict)(cidSystemInfo)) {\n\t          properties.cidSystemInfo = {\n\t            registry: cidSystemInfo.get('Registry'),\n\t            ordering: cidSystemInfo.get('Ordering'),\n\t            supplement: cidSystemInfo.get('Supplement')\n\t          };\n\t        }\n\t        var cidToGidMap = dict.get('CIDToGIDMap');\n\t        if ((0, _primitives.isStream)(cidToGidMap)) {\n\t          properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n\t        }\n\t      }\n\t      var differences = [];\n\t      var baseEncodingName = null;\n\t      var encoding;\n\t      if (dict.has('Encoding')) {\n\t        encoding = dict.get('Encoding');\n\t        if ((0, _primitives.isDict)(encoding)) {\n\t          baseEncodingName = encoding.get('BaseEncoding');\n\t          baseEncodingName = (0, _primitives.isName)(baseEncodingName) ? baseEncodingName.name : null;\n\t          if (encoding.has('Differences')) {\n\t            var diffEncoding = encoding.get('Differences');\n\t            var index = 0;\n\t            for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n\t              var data = xref.fetchIfRef(diffEncoding[j]);\n\t              if ((0, _util.isNum)(data)) {\n\t                index = data;\n\t              } else if ((0, _primitives.isName)(data)) {\n\t                differences[index++] = data.name;\n\t              } else {\n\t                throw new _util.FormatError('Invalid entry in \\'Differences\\' array: ' + data);\n\t              }\n\t            }\n\t          }\n\t        } else if ((0, _primitives.isName)(encoding)) {\n\t          baseEncodingName = encoding.name;\n\t        } else {\n\t          throw new _util.FormatError('Encoding is not a Name nor a Dict');\n\t        }\n\t        if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\n\t          baseEncodingName = null;\n\t        }\n\t      }\n\t      if (baseEncodingName) {\n\t        properties.defaultEncoding = (0, _encodings.getEncoding)(baseEncodingName).slice();\n\t      } else {\n\t        var isSymbolicFont = !!(properties.flags & _fonts.FontFlags.Symbolic);\n\t        var isNonsymbolicFont = !!(properties.flags & _fonts.FontFlags.Nonsymbolic);\n\t        encoding = _encodings.StandardEncoding;\n\t        if (properties.type === 'TrueType' && !isNonsymbolicFont) {\n\t          encoding = _encodings.WinAnsiEncoding;\n\t        }\n\t        if (isSymbolicFont) {\n\t          encoding = _encodings.MacRomanEncoding;\n\t          if (!properties.file) {\n\t            if (/Symbol/i.test(properties.name)) {\n\t              encoding = _encodings.SymbolSetEncoding;\n\t            } else if (/Dingbats/i.test(properties.name)) {\n\t              encoding = _encodings.ZapfDingbatsEncoding;\n\t            }\n\t          }\n\t        }\n\t        properties.defaultEncoding = encoding;\n\t      }\n\t      properties.differences = differences;\n\t      properties.baseEncodingName = baseEncodingName;\n\t      properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n\t      properties.dict = dict;\n\t      return toUnicodePromise.then(function (toUnicode) {\n\t        properties.toUnicode = toUnicode;\n\t        return _this10.buildToUnicode(properties);\n\t      }).then(function (toUnicode) {\n\t        properties.toUnicode = toUnicode;\n\t        return properties;\n\t      });\n\t    },\n\t    buildToUnicode: function PartialEvaluator_buildToUnicode(properties) {\n\t      properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n\t      if (properties.hasIncludedToUnicodeMap) {\n\t        return Promise.resolve(properties.toUnicode);\n\t      }\n\t      var toUnicode, charcode, glyphName;\n\t      if (!properties.composite) {\n\t        toUnicode = [];\n\t        var encoding = properties.defaultEncoding.slice();\n\t        var baseEncodingName = properties.baseEncodingName;\n\t        var differences = properties.differences;\n\t        for (charcode in differences) {\n\t          glyphName = differences[charcode];\n\t          if (glyphName === '.notdef') {\n\t            continue;\n\t          }\n\t          encoding[charcode] = glyphName;\n\t        }\n\t        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n\t        for (charcode in encoding) {\n\t          glyphName = encoding[charcode];\n\t          if (glyphName === '') {\n\t            continue;\n\t          } else if (glyphsUnicodeMap[glyphName] === undefined) {\n\t            var code = 0;\n\t            switch (glyphName[0]) {\n\t              case 'G':\n\t                if (glyphName.length === 3) {\n\t                  code = parseInt(glyphName.substr(1), 16);\n\t                }\n\t                break;\n\t              case 'g':\n\t                if (glyphName.length === 5) {\n\t                  code = parseInt(glyphName.substr(1), 16);\n\t                }\n\t                break;\n\t              case 'C':\n\t              case 'c':\n\t                if (glyphName.length >= 3) {\n\t                  code = +glyphName.substr(1);\n\t                }\n\t                break;\n\t              default:\n\t                var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n\t                if (unicode !== -1) {\n\t                  code = unicode;\n\t                }\n\t            }\n\t            if (code) {\n\t              if (baseEncodingName && code === +charcode) {\n\t                var baseEncoding = (0, _encodings.getEncoding)(baseEncodingName);\n\t                if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n\t                  toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n\t                  continue;\n\t                }\n\t              }\n\t              toUnicode[charcode] = String.fromCharCode(code);\n\t            }\n\t            continue;\n\t          }\n\t          toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n\t        }\n\t        return Promise.resolve(new _fonts.ToUnicodeMap(toUnicode));\n\t      }\n\t      if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof _cmap.IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\n\t        var registry = properties.cidSystemInfo.registry;\n\t        var ordering = properties.cidSystemInfo.ordering;\n\t        var ucs2CMapName = _primitives.Name.get(registry + '-' + ordering + '-UCS2');\n\t        return _cmap.CMapFactory.create({\n\t          encoding: ucs2CMapName,\n\t          fetchBuiltInCMap: this.fetchBuiltInCMap,\n\t          useCMap: null\n\t        }).then(function (ucs2CMap) {\n\t          var cMap = properties.cMap;\n\t          toUnicode = [];\n\t          cMap.forEach(function (charcode, cid) {\n\t            if (cid > 0xffff) {\n\t              throw new _util.FormatError('Max size of CID is 65,535');\n\t            }\n\t            var ucs2 = ucs2CMap.lookup(cid);\n\t            if (ucs2) {\n\t              toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n\t            }\n\t          });\n\t          return new _fonts.ToUnicodeMap(toUnicode);\n\t        });\n\t      }\n\t      return Promise.resolve(new _fonts.IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n\t    },\n\t    readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n\t      var cmapObj = toUnicode;\n\t      if ((0, _primitives.isName)(cmapObj)) {\n\t        return _cmap.CMapFactory.create({\n\t          encoding: cmapObj,\n\t          fetchBuiltInCMap: this.fetchBuiltInCMap,\n\t          useCMap: null\n\t        }).then(function (cmap) {\n\t          if (cmap instanceof _cmap.IdentityCMap) {\n\t            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n\t          }\n\t          return new _fonts.ToUnicodeMap(cmap.getMap());\n\t        });\n\t      } else if ((0, _primitives.isStream)(cmapObj)) {\n\t        return _cmap.CMapFactory.create({\n\t          encoding: cmapObj,\n\t          fetchBuiltInCMap: this.fetchBuiltInCMap,\n\t          useCMap: null\n\t        }).then(function (cmap) {\n\t          if (cmap instanceof _cmap.IdentityCMap) {\n\t            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n\t          }\n\t          var map = new Array(cmap.length);\n\t          cmap.forEach(function (charCode, token) {\n\t            var str = [];\n\t            for (var k = 0; k < token.length; k += 2) {\n\t              var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n\t              if ((w1 & 0xF800) !== 0xD800) {\n\t                str.push(w1);\n\t                continue;\n\t              }\n\t              k += 2;\n\t              var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n\t              str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n\t            }\n\t            map[charCode] = String.fromCharCode.apply(String, str);\n\t          });\n\t          return new _fonts.ToUnicodeMap(map);\n\t        });\n\t      }\n\t      return Promise.resolve(null);\n\t    },\n\t    readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n\t      var glyphsData = cidToGidStream.getBytes();\n\t      var result = [];\n\t      for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n\t        var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n\t        if (glyphID === 0) {\n\t          continue;\n\t        }\n\t        var code = j >> 1;\n\t        result[code] = glyphID;\n\t      }\n\t      return result;\n\t    },\n\t    extractWidths: function PartialEvaluator_extractWidths(dict, descriptor, properties) {\n\t      var xref = this.xref;\n\t      var glyphsWidths = [];\n\t      var defaultWidth = 0;\n\t      var glyphsVMetrics = [];\n\t      var defaultVMetrics;\n\t      var i, ii, j, jj, start, code, widths;\n\t      if (properties.composite) {\n\t        defaultWidth = dict.has('DW') ? dict.get('DW') : 1000;\n\t        widths = dict.get('W');\n\t        if (widths) {\n\t          for (i = 0, ii = widths.length; i < ii; i++) {\n\t            start = xref.fetchIfRef(widths[i++]);\n\t            code = xref.fetchIfRef(widths[i]);\n\t            if (Array.isArray(code)) {\n\t              for (j = 0, jj = code.length; j < jj; j++) {\n\t                glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n\t              }\n\t            } else {\n\t              var width = xref.fetchIfRef(widths[++i]);\n\t              for (j = start; j <= code; j++) {\n\t                glyphsWidths[j] = width;\n\t              }\n\t            }\n\t          }\n\t        }\n\t        if (properties.vertical) {\n\t          var vmetrics = dict.getArray('DW2') || [880, -1000];\n\t          defaultVMetrics = [vmetrics[1], defaultWidth * 0.5, vmetrics[0]];\n\t          vmetrics = dict.get('W2');\n\t          if (vmetrics) {\n\t            for (i = 0, ii = vmetrics.length; i < ii; i++) {\n\t              start = xref.fetchIfRef(vmetrics[i++]);\n\t              code = xref.fetchIfRef(vmetrics[i]);\n\t              if (Array.isArray(code)) {\n\t                for (j = 0, jj = code.length; j < jj; j++) {\n\t                  glyphsVMetrics[start++] = [xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j])];\n\t                }\n\t              } else {\n\t                var vmetric = [xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i])];\n\t                for (j = start; j <= code; j++) {\n\t                  glyphsVMetrics[j] = vmetric;\n\t                }\n\t              }\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        var firstChar = properties.firstChar;\n\t        widths = dict.get('Widths');\n\t        if (widths) {\n\t          j = firstChar;\n\t          for (i = 0, ii = widths.length; i < ii; i++) {\n\t            glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n\t          }\n\t          defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\n\t        } else {\n\t          var baseFontName = dict.get('BaseFont');\n\t          if ((0, _primitives.isName)(baseFontName)) {\n\t            var metrics = this.getBaseFontMetrics(baseFontName.name);\n\t            glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n\t            defaultWidth = metrics.defaultWidth;\n\t          }\n\t        }\n\t      }\n\t      var isMonospace = true;\n\t      var firstWidth = defaultWidth;\n\t      for (var glyph in glyphsWidths) {\n\t        var glyphWidth = glyphsWidths[glyph];\n\t        if (!glyphWidth) {\n\t          continue;\n\t        }\n\t        if (!firstWidth) {\n\t          firstWidth = glyphWidth;\n\t          continue;\n\t        }\n\t        if (firstWidth !== glyphWidth) {\n\t          isMonospace = false;\n\t          break;\n\t        }\n\t      }\n\t      if (isMonospace) {\n\t        properties.flags |= _fonts.FontFlags.FixedPitch;\n\t      }\n\t      properties.defaultWidth = defaultWidth;\n\t      properties.widths = glyphsWidths;\n\t      properties.defaultVMetrics = defaultVMetrics;\n\t      properties.vmetrics = glyphsVMetrics;\n\t    },\n\t    isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n\t      var fontNameWoStyle = baseFontName.split('-')[0];\n\t      return fontNameWoStyle in (0, _standard_fonts.getSerifFonts)() || fontNameWoStyle.search(/serif/gi) !== -1;\n\t    },\n\t    getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n\t      var defaultWidth = 0;\n\t      var widths = [];\n\t      var monospace = false;\n\t      var stdFontMap = (0, _standard_fonts.getStdFontMap)();\n\t      var lookupName = stdFontMap[name] || name;\n\t      var Metrics = (0, _metrics.getMetrics)();\n\t      if (!(lookupName in Metrics)) {\n\t        if (this.isSerifFont(name)) {\n\t          lookupName = 'Times-Roman';\n\t        } else {\n\t          lookupName = 'Helvetica';\n\t        }\n\t      }\n\t      var glyphWidths = Metrics[lookupName];\n\t      if ((0, _util.isNum)(glyphWidths)) {\n\t        defaultWidth = glyphWidths;\n\t        monospace = true;\n\t      } else {\n\t        widths = glyphWidths();\n\t      }\n\t      return {\n\t        defaultWidth: defaultWidth,\n\t        monospace: monospace,\n\t        widths: widths\n\t      };\n\t    },\n\t    buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\n\t      var widths = Object.create(null);\n\t      var differences = properties.differences;\n\t      var encoding = properties.defaultEncoding;\n\t      for (var charCode = 0; charCode < 256; charCode++) {\n\t        if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n\t          widths[charCode] = widthsByGlyphName[differences[charCode]];\n\t          continue;\n\t        }\n\t        if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n\t          widths[charCode] = widthsByGlyphName[encoding[charCode]];\n\t          continue;\n\t        }\n\t      }\n\t      return widths;\n\t    },\n\t    preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict) {\n\t      var baseDict = dict;\n\t      var type = dict.get('Subtype');\n\t      if (!(0, _primitives.isName)(type)) {\n\t        throw new _util.FormatError('invalid font Subtype');\n\t      }\n\t      var composite = false;\n\t      var uint8array;\n\t      if (type.name === 'Type0') {\n\t        var df = dict.get('DescendantFonts');\n\t        if (!df) {\n\t          throw new _util.FormatError('Descendant fonts are not specified');\n\t        }\n\t        dict = Array.isArray(df) ? this.xref.fetchIfRef(df[0]) : df;\n\t        type = dict.get('Subtype');\n\t        if (!(0, _primitives.isName)(type)) {\n\t          throw new _util.FormatError('invalid font Subtype');\n\t        }\n\t        composite = true;\n\t      }\n\t      var descriptor = dict.get('FontDescriptor');\n\t      if (descriptor) {\n\t        var hash = new _murmurhash.MurmurHash3_64();\n\t        var encoding = baseDict.getRaw('Encoding');\n\t        if ((0, _primitives.isName)(encoding)) {\n\t          hash.update(encoding.name);\n\t        } else if ((0, _primitives.isRef)(encoding)) {\n\t          hash.update(encoding.toString());\n\t        } else if ((0, _primitives.isDict)(encoding)) {\n\t          var keys = encoding.getKeys();\n\t          for (var i = 0, ii = keys.length; i < ii; i++) {\n\t            var entry = encoding.getRaw(keys[i]);\n\t            if ((0, _primitives.isName)(entry)) {\n\t              hash.update(entry.name);\n\t            } else if ((0, _primitives.isRef)(entry)) {\n\t              hash.update(entry.toString());\n\t            } else if (Array.isArray(entry)) {\n\t              var diffLength = entry.length,\n\t                  diffBuf = new Array(diffLength);\n\t              for (var j = 0; j < diffLength; j++) {\n\t                var diffEntry = entry[j];\n\t                if ((0, _primitives.isName)(diffEntry)) {\n\t                  diffBuf[j] = diffEntry.name;\n\t                } else if ((0, _util.isNum)(diffEntry) || (0, _primitives.isRef)(diffEntry)) {\n\t                  diffBuf[j] = diffEntry.toString();\n\t                }\n\t              }\n\t              hash.update(diffBuf.join());\n\t            }\n\t          }\n\t        }\n\t        var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n\t        if ((0, _primitives.isStream)(toUnicode)) {\n\t          var stream = toUnicode.str || toUnicode;\n\t          uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n\t          hash.update(uint8array);\n\t        } else if ((0, _primitives.isName)(toUnicode)) {\n\t          hash.update(toUnicode.name);\n\t        }\n\t        var widths = dict.get('Widths') || baseDict.get('Widths');\n\t        if (widths) {\n\t          uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n\t          hash.update(uint8array);\n\t        }\n\t      }\n\t      return {\n\t        descriptor: descriptor,\n\t        dict: dict,\n\t        baseDict: baseDict,\n\t        composite: composite,\n\t        type: type.name,\n\t        hash: hash ? hash.hexdigest() : ''\n\t      };\n\t    },\n\t    translateFont: function PartialEvaluator_translateFont(preEvaluatedFont) {\n\t      var _this11 = this;\n\t\n\t      var baseDict = preEvaluatedFont.baseDict;\n\t      var dict = preEvaluatedFont.dict;\n\t      var composite = preEvaluatedFont.composite;\n\t      var descriptor = preEvaluatedFont.descriptor;\n\t      var type = preEvaluatedFont.type;\n\t      var maxCharIndex = composite ? 0xFFFF : 0xFF;\n\t      var properties;\n\t      if (!descriptor) {\n\t        if (type === 'Type3') {\n\t          descriptor = new _primitives.Dict(null);\n\t          descriptor.set('FontName', _primitives.Name.get(type));\n\t          descriptor.set('FontBBox', dict.getArray('FontBBox'));\n\t        } else {\n\t          var baseFontName = dict.get('BaseFont');\n\t          if (!(0, _primitives.isName)(baseFontName)) {\n\t            throw new _util.FormatError('Base font is not specified');\n\t          }\n\t          baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n\t          var metrics = this.getBaseFontMetrics(baseFontName);\n\t          var fontNameWoStyle = baseFontName.split('-')[0];\n\t          var flags = (this.isSerifFont(fontNameWoStyle) ? _fonts.FontFlags.Serif : 0) | (metrics.monospace ? _fonts.FontFlags.FixedPitch : 0) | ((0, _standard_fonts.getSymbolsFonts)()[fontNameWoStyle] ? _fonts.FontFlags.Symbolic : _fonts.FontFlags.Nonsymbolic);\n\t          properties = {\n\t            type: type,\n\t            name: baseFontName,\n\t            widths: metrics.widths,\n\t            defaultWidth: metrics.defaultWidth,\n\t            flags: flags,\n\t            firstChar: 0,\n\t            lastChar: maxCharIndex\n\t          };\n\t          return this.extractDataStructures(dict, dict, properties).then(function (properties) {\n\t            properties.widths = _this11.buildCharCodeToWidth(metrics.widths, properties);\n\t            return new _fonts.Font(baseFontName, null, properties);\n\t          });\n\t        }\n\t      }\n\t      var firstChar = dict.get('FirstChar') || 0;\n\t      var lastChar = dict.get('LastChar') || maxCharIndex;\n\t      var fontName = descriptor.get('FontName');\n\t      var baseFont = dict.get('BaseFont');\n\t      if ((0, _util.isString)(fontName)) {\n\t        fontName = _primitives.Name.get(fontName);\n\t      }\n\t      if ((0, _util.isString)(baseFont)) {\n\t        baseFont = _primitives.Name.get(baseFont);\n\t      }\n\t      if (type !== 'Type3') {\n\t        var fontNameStr = fontName && fontName.name;\n\t        var baseFontStr = baseFont && baseFont.name;\n\t        if (fontNameStr !== baseFontStr) {\n\t          (0, _util.info)('The FontDescriptor\\'s FontName is \"' + fontNameStr + '\" but should be the same as the Font\\'s BaseFont \"' + baseFontStr + '\"');\n\t          if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\n\t            fontName = baseFont;\n\t          }\n\t        }\n\t      }\n\t      fontName = fontName || baseFont;\n\t      if (!(0, _primitives.isName)(fontName)) {\n\t        throw new _util.FormatError('invalid font name');\n\t      }\n\t      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n\t      if (fontFile) {\n\t        if (fontFile.dict) {\n\t          var subtype = fontFile.dict.get('Subtype');\n\t          if (subtype) {\n\t            subtype = subtype.name;\n\t          }\n\t          var length1 = fontFile.dict.get('Length1');\n\t          var length2 = fontFile.dict.get('Length2');\n\t          var length3 = fontFile.dict.get('Length3');\n\t        }\n\t      }\n\t      properties = {\n\t        type: type,\n\t        name: fontName.name,\n\t        subtype: subtype,\n\t        file: fontFile,\n\t        length1: length1,\n\t        length2: length2,\n\t        length3: length3,\n\t        loadedName: baseDict.loadedName,\n\t        composite: composite,\n\t        wideChars: composite,\n\t        fixedPitch: false,\n\t        fontMatrix: dict.getArray('FontMatrix') || _util.FONT_IDENTITY_MATRIX,\n\t        firstChar: firstChar || 0,\n\t        lastChar: lastChar || maxCharIndex,\n\t        bbox: descriptor.getArray('FontBBox'),\n\t        ascent: descriptor.get('Ascent'),\n\t        descent: descriptor.get('Descent'),\n\t        xHeight: descriptor.get('XHeight'),\n\t        capHeight: descriptor.get('CapHeight'),\n\t        flags: descriptor.get('Flags'),\n\t        italicAngle: descriptor.get('ItalicAngle'),\n\t        isType3Font: false\n\t      };\n\t      var cMapPromise;\n\t      if (composite) {\n\t        var cidEncoding = baseDict.get('Encoding');\n\t        if ((0, _primitives.isName)(cidEncoding)) {\n\t          properties.cidEncoding = cidEncoding.name;\n\t        }\n\t        cMapPromise = _cmap.CMapFactory.create({\n\t          encoding: cidEncoding,\n\t          fetchBuiltInCMap: this.fetchBuiltInCMap,\n\t          useCMap: null\n\t        }).then(function (cMap) {\n\t          properties.cMap = cMap;\n\t          properties.vertical = properties.cMap.vertical;\n\t        });\n\t      } else {\n\t        cMapPromise = Promise.resolve(undefined);\n\t      }\n\t      return cMapPromise.then(function () {\n\t        return _this11.extractDataStructures(dict, baseDict, properties);\n\t      }).then(function (properties) {\n\t        _this11.extractWidths(dict, descriptor, properties);\n\t        if (type === 'Type3') {\n\t          properties.isType3Font = true;\n\t        }\n\t        return new _fonts.Font(fontName.name, fontFile, properties);\n\t      });\n\t    }\n\t  };\n\t  return PartialEvaluator;\n\t}();\n\tvar TranslatedFont = function TranslatedFontClosure() {\n\t  function TranslatedFont(loadedName, font, dict) {\n\t    this.loadedName = loadedName;\n\t    this.font = font;\n\t    this.dict = dict;\n\t    this.type3Loaded = null;\n\t    this.sent = false;\n\t  }\n\t  TranslatedFont.prototype = {\n\t    send: function send(handler) {\n\t      if (this.sent) {\n\t        return;\n\t      }\n\t      var fontData = this.font.exportData();\n\t      handler.send('commonobj', [this.loadedName, 'Font', fontData]);\n\t      this.sent = true;\n\t    },\n\t    loadType3Data: function loadType3Data(evaluator, resources, parentOperatorList, task) {\n\t      if (!this.font.isType3Font) {\n\t        throw new Error('Must be a Type3 font.');\n\t      }\n\t      if (this.type3Loaded) {\n\t        return this.type3Loaded;\n\t      }\n\t      var type3Options = Object.create(evaluator.options);\n\t      type3Options.ignoreErrors = false;\n\t      var type3Evaluator = evaluator.clone(type3Options);\n\t      var translatedFont = this.font;\n\t      var loadCharProcsPromise = Promise.resolve();\n\t      var charProcs = this.dict.get('CharProcs');\n\t      var fontResources = this.dict.get('Resources') || resources;\n\t      var charProcKeys = charProcs.getKeys();\n\t      var charProcOperatorList = Object.create(null);\n\t\n\t      var _loop2 = function _loop2() {\n\t        var key = charProcKeys[i];\n\t        loadCharProcsPromise = loadCharProcsPromise.then(function () {\n\t          var glyphStream = charProcs.get(key);\n\t          var operatorList = new OperatorList();\n\t          return type3Evaluator.getOperatorList({\n\t            stream: glyphStream,\n\t            task: task,\n\t            resources: fontResources,\n\t            operatorList: operatorList\n\t          }).then(function () {\n\t            charProcOperatorList[key] = operatorList.getIR();\n\t            parentOperatorList.addDependencies(operatorList.dependencies);\n\t          }).catch(function (reason) {\n\t            (0, _util.warn)('Type3 font resource \"' + key + '\" is not available.');\n\t            var operatorList = new OperatorList();\n\t            charProcOperatorList[key] = operatorList.getIR();\n\t          });\n\t        });\n\t      };\n\t\n\t      for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n\t        _loop2();\n\t      }\n\t      this.type3Loaded = loadCharProcsPromise.then(function () {\n\t        translatedFont.charProcOperatorList = charProcOperatorList;\n\t      });\n\t      return this.type3Loaded;\n\t    }\n\t  };\n\t  return TranslatedFont;\n\t}();\n\tvar OperatorList = function OperatorListClosure() {\n\t  var CHUNK_SIZE = 1000;\n\t  var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n\t  function getTransfers(queue) {\n\t    var transfers = [];\n\t    var fnArray = queue.fnArray,\n\t        argsArray = queue.argsArray;\n\t    for (var i = 0, ii = queue.length; i < ii; i++) {\n\t      switch (fnArray[i]) {\n\t        case _util.OPS.paintInlineImageXObject:\n\t        case _util.OPS.paintInlineImageXObjectGroup:\n\t        case _util.OPS.paintImageMaskXObject:\n\t          var arg = argsArray[i][0];\n\t          if (!arg.cached) {\n\t            transfers.push(arg.data.buffer);\n\t          }\n\t          break;\n\t      }\n\t    }\n\t    return transfers;\n\t  }\n\t  function OperatorList(intent, messageHandler, pageIndex) {\n\t    this.messageHandler = messageHandler;\n\t    this.fnArray = [];\n\t    this.argsArray = [];\n\t    this.dependencies = Object.create(null);\n\t    this._totalLength = 0;\n\t    this.pageIndex = pageIndex;\n\t    this.intent = intent;\n\t  }\n\t  OperatorList.prototype = {\n\t    get length() {\n\t      return this.argsArray.length;\n\t    },\n\t    get totalLength() {\n\t      return this._totalLength + this.length;\n\t    },\n\t    addOp: function addOp(fn, args) {\n\t      this.fnArray.push(fn);\n\t      this.argsArray.push(args);\n\t      if (this.messageHandler) {\n\t        if (this.fnArray.length >= CHUNK_SIZE) {\n\t          this.flush();\n\t        } else if (this.fnArray.length >= CHUNK_SIZE_ABOUT && (fn === _util.OPS.restore || fn === _util.OPS.endText)) {\n\t          this.flush();\n\t        }\n\t      }\n\t    },\n\t    addDependency: function addDependency(dependency) {\n\t      if (dependency in this.dependencies) {\n\t        return;\n\t      }\n\t      this.dependencies[dependency] = true;\n\t      this.addOp(_util.OPS.dependency, [dependency]);\n\t    },\n\t    addDependencies: function addDependencies(dependencies) {\n\t      for (var key in dependencies) {\n\t        this.addDependency(key);\n\t      }\n\t    },\n\t    addOpList: function addOpList(opList) {\n\t      _util.Util.extendObj(this.dependencies, opList.dependencies);\n\t      for (var i = 0, ii = opList.length; i < ii; i++) {\n\t        this.addOp(opList.fnArray[i], opList.argsArray[i]);\n\t      }\n\t    },\n\t    getIR: function getIR() {\n\t      return {\n\t        fnArray: this.fnArray,\n\t        argsArray: this.argsArray,\n\t        length: this.length\n\t      };\n\t    },\n\t    flush: function flush(lastChunk) {\n\t      if (this.intent !== 'oplist') {\n\t        new QueueOptimizer().optimize(this);\n\t      }\n\t      var transfers = getTransfers(this);\n\t      var length = this.length;\n\t      this._totalLength += length;\n\t      this.messageHandler.send('RenderPageChunk', {\n\t        operatorList: {\n\t          fnArray: this.fnArray,\n\t          argsArray: this.argsArray,\n\t          lastChunk: lastChunk,\n\t          length: length\n\t        },\n\t        pageIndex: this.pageIndex,\n\t        intent: this.intent\n\t      }, transfers);\n\t      this.dependencies = Object.create(null);\n\t      this.fnArray.length = 0;\n\t      this.argsArray.length = 0;\n\t    }\n\t  };\n\t  return OperatorList;\n\t}();\n\tvar StateManager = function StateManagerClosure() {\n\t  function StateManager(initialState) {\n\t    this.state = initialState;\n\t    this.stateStack = [];\n\t  }\n\t  StateManager.prototype = {\n\t    save: function save() {\n\t      var old = this.state;\n\t      this.stateStack.push(this.state);\n\t      this.state = old.clone();\n\t    },\n\t    restore: function restore() {\n\t      var prev = this.stateStack.pop();\n\t      if (prev) {\n\t        this.state = prev;\n\t      }\n\t    },\n\t    transform: function transform(args) {\n\t      this.state.ctm = _util.Util.transform(this.state.ctm, args);\n\t    }\n\t  };\n\t  return StateManager;\n\t}();\n\tvar TextState = function TextStateClosure() {\n\t  function TextState() {\n\t    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n\t    this.fontName = null;\n\t    this.fontSize = 0;\n\t    this.font = null;\n\t    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n\t    this.textMatrix = _util.IDENTITY_MATRIX.slice();\n\t    this.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n\t    this.charSpacing = 0;\n\t    this.wordSpacing = 0;\n\t    this.leading = 0;\n\t    this.textHScale = 1;\n\t    this.textRise = 0;\n\t  }\n\t  TextState.prototype = {\n\t    setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n\t      var m = this.textMatrix;\n\t      m[0] = a;\n\t      m[1] = b;\n\t      m[2] = c;\n\t      m[3] = d;\n\t      m[4] = e;\n\t      m[5] = f;\n\t    },\n\t    setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n\t      var m = this.textLineMatrix;\n\t      m[0] = a;\n\t      m[1] = b;\n\t      m[2] = c;\n\t      m[3] = d;\n\t      m[4] = e;\n\t      m[5] = f;\n\t    },\n\t    translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n\t      var m = this.textMatrix;\n\t      m[4] = m[0] * x + m[2] * y + m[4];\n\t      m[5] = m[1] * x + m[3] * y + m[5];\n\t    },\n\t    translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n\t      var m = this.textLineMatrix;\n\t      m[4] = m[0] * x + m[2] * y + m[4];\n\t      m[5] = m[1] * x + m[3] * y + m[5];\n\t    },\n\t    calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n\t      var font = this.font;\n\t      if (!font) {\n\t        return null;\n\t      }\n\t      var m = this.textLineMatrix;\n\t      if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n\t        return null;\n\t      }\n\t      var txDiff = e - m[4],\n\t          tyDiff = f - m[5];\n\t      if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n\t        return null;\n\t      }\n\t      var tx,\n\t          ty,\n\t          denominator = a * d - b * c;\n\t      if (font.vertical) {\n\t        tx = -tyDiff * c / denominator;\n\t        ty = tyDiff * a / denominator;\n\t      } else {\n\t        tx = txDiff * d / denominator;\n\t        ty = -txDiff * b / denominator;\n\t      }\n\t      return {\n\t        width: tx,\n\t        height: ty,\n\t        value: font.vertical ? ty : tx\n\t      };\n\t    },\n\t    calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n\t      var tsm = [this.fontSize * this.textHScale, 0, 0, this.fontSize, 0, this.textRise];\n\t      return _util.Util.transform(ctm, _util.Util.transform(this.textMatrix, tsm));\n\t    },\n\t    carriageReturn: function TextState_carriageReturn() {\n\t      this.translateTextLineMatrix(0, -this.leading);\n\t      this.textMatrix = this.textLineMatrix.slice();\n\t    },\n\t    clone: function TextState_clone() {\n\t      var clone = Object.create(this);\n\t      clone.textMatrix = this.textMatrix.slice();\n\t      clone.textLineMatrix = this.textLineMatrix.slice();\n\t      clone.fontMatrix = this.fontMatrix.slice();\n\t      return clone;\n\t    }\n\t  };\n\t  return TextState;\n\t}();\n\tvar EvalState = function EvalStateClosure() {\n\t  function EvalState() {\n\t    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n\t    this.font = null;\n\t    this.textRenderingMode = _util.TextRenderingMode.FILL;\n\t    this.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n\t    this.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n\t  }\n\t  EvalState.prototype = {\n\t    clone: function CanvasExtraState_clone() {\n\t      return Object.create(this);\n\t    }\n\t  };\n\t  return EvalState;\n\t}();\n\tvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\n\t  var getOPMap = (0, _util.getLookupTableFactory)(function (t) {\n\t    t['w'] = {\n\t      id: _util.OPS.setLineWidth,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['J'] = {\n\t      id: _util.OPS.setLineCap,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['j'] = {\n\t      id: _util.OPS.setLineJoin,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['M'] = {\n\t      id: _util.OPS.setMiterLimit,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['d'] = {\n\t      id: _util.OPS.setDash,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t    };\n\t    t['ri'] = {\n\t      id: _util.OPS.setRenderingIntent,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['i'] = {\n\t      id: _util.OPS.setFlatness,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['gs'] = {\n\t      id: _util.OPS.setGState,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['q'] = {\n\t      id: _util.OPS.save,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['Q'] = {\n\t      id: _util.OPS.restore,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['cm'] = {\n\t      id: _util.OPS.transform,\n\t      numArgs: 6,\n\t      variableArgs: false\n\t    };\n\t    t['m'] = {\n\t      id: _util.OPS.moveTo,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t    };\n\t    t['l'] = {\n\t      id: _util.OPS.lineTo,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t    };\n\t    t['c'] = {\n\t      id: _util.OPS.curveTo,\n\t      numArgs: 6,\n\t      variableArgs: false\n\t    };\n\t    t['v'] = {\n\t      id: _util.OPS.curveTo2,\n\t      numArgs: 4,\n\t      variableArgs: false\n\t    };\n\t    t['y'] = {\n\t      id: _util.OPS.curveTo3,\n\t      numArgs: 4,\n\t      variableArgs: false\n\t    };\n\t    t['h'] = {\n\t      id: _util.OPS.closePath,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['re'] = {\n\t      id: _util.OPS.rectangle,\n\t      numArgs: 4,\n\t      variableArgs: false\n\t    };\n\t    t['S'] = {\n\t      id: _util.OPS.stroke,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['s'] = {\n\t      id: _util.OPS.closeStroke,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['f'] = {\n\t      id: _util.OPS.fill,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['F'] = {\n\t      id: _util.OPS.fill,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['f*'] = {\n\t      id: _util.OPS.eoFill,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['B'] = {\n\t      id: _util.OPS.fillStroke,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['B*'] = {\n\t      id: _util.OPS.eoFillStroke,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['b'] = {\n\t      id: _util.OPS.closeFillStroke,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['b*'] = {\n\t      id: _util.OPS.closeEOFillStroke,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['n'] = {\n\t      id: _util.OPS.endPath,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['W'] = {\n\t      id: _util.OPS.clip,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['W*'] = {\n\t      id: _util.OPS.eoClip,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['BT'] = {\n\t      id: _util.OPS.beginText,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['ET'] = {\n\t      id: _util.OPS.endText,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['Tc'] = {\n\t      id: _util.OPS.setCharSpacing,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['Tw'] = {\n\t      id: _util.OPS.setWordSpacing,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['Tz'] = {\n\t      id: _util.OPS.setHScale,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['TL'] = {\n\t      id: _util.OPS.setLeading,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['Tf'] = {\n\t      id: _util.OPS.setFont,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t    };\n\t    t['Tr'] = {\n\t      id: _util.OPS.setTextRenderingMode,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['Ts'] = {\n\t      id: _util.OPS.setTextRise,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['Td'] = {\n\t      id: _util.OPS.moveText,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t    };\n\t    t['TD'] = {\n\t      id: _util.OPS.setLeadingMoveText,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t    };\n\t    t['Tm'] = {\n\t      id: _util.OPS.setTextMatrix,\n\t      numArgs: 6,\n\t      variableArgs: false\n\t    };\n\t    t['T*'] = {\n\t      id: _util.OPS.nextLine,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['Tj'] = {\n\t      id: _util.OPS.showText,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['TJ'] = {\n\t      id: _util.OPS.showSpacedText,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['\\''] = {\n\t      id: _util.OPS.nextLineShowText,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['\"'] = {\n\t      id: _util.OPS.nextLineSetSpacingShowText,\n\t      numArgs: 3,\n\t      variableArgs: false\n\t    };\n\t    t['d0'] = {\n\t      id: _util.OPS.setCharWidth,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t    };\n\t    t['d1'] = {\n\t      id: _util.OPS.setCharWidthAndBounds,\n\t      numArgs: 6,\n\t      variableArgs: false\n\t    };\n\t    t['CS'] = {\n\t      id: _util.OPS.setStrokeColorSpace,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['cs'] = {\n\t      id: _util.OPS.setFillColorSpace,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['SC'] = {\n\t      id: _util.OPS.setStrokeColor,\n\t      numArgs: 4,\n\t      variableArgs: true\n\t    };\n\t    t['SCN'] = {\n\t      id: _util.OPS.setStrokeColorN,\n\t      numArgs: 33,\n\t      variableArgs: true\n\t    };\n\t    t['sc'] = {\n\t      id: _util.OPS.setFillColor,\n\t      numArgs: 4,\n\t      variableArgs: true\n\t    };\n\t    t['scn'] = {\n\t      id: _util.OPS.setFillColorN,\n\t      numArgs: 33,\n\t      variableArgs: true\n\t    };\n\t    t['G'] = {\n\t      id: _util.OPS.setStrokeGray,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['g'] = {\n\t      id: _util.OPS.setFillGray,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['RG'] = {\n\t      id: _util.OPS.setStrokeRGBColor,\n\t      numArgs: 3,\n\t      variableArgs: false\n\t    };\n\t    t['rg'] = {\n\t      id: _util.OPS.setFillRGBColor,\n\t      numArgs: 3,\n\t      variableArgs: false\n\t    };\n\t    t['K'] = {\n\t      id: _util.OPS.setStrokeCMYKColor,\n\t      numArgs: 4,\n\t      variableArgs: false\n\t    };\n\t    t['k'] = {\n\t      id: _util.OPS.setFillCMYKColor,\n\t      numArgs: 4,\n\t      variableArgs: false\n\t    };\n\t    t['sh'] = {\n\t      id: _util.OPS.shadingFill,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['BI'] = {\n\t      id: _util.OPS.beginInlineImage,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['ID'] = {\n\t      id: _util.OPS.beginImageData,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['EI'] = {\n\t      id: _util.OPS.endInlineImage,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['Do'] = {\n\t      id: _util.OPS.paintXObject,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['MP'] = {\n\t      id: _util.OPS.markPoint,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['DP'] = {\n\t      id: _util.OPS.markPointProps,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t    };\n\t    t['BMC'] = {\n\t      id: _util.OPS.beginMarkedContent,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['BDC'] = {\n\t      id: _util.OPS.beginMarkedContentProps,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t    };\n\t    t['EMC'] = {\n\t      id: _util.OPS.endMarkedContent,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['BX'] = {\n\t      id: _util.OPS.beginCompat,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['EX'] = {\n\t      id: _util.OPS.endCompat,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['BM'] = null;\n\t    t['BD'] = null;\n\t    t['true'] = null;\n\t    t['fa'] = null;\n\t    t['fal'] = null;\n\t    t['fals'] = null;\n\t    t['false'] = null;\n\t    t['nu'] = null;\n\t    t['nul'] = null;\n\t    t['null'] = null;\n\t  });\n\t  function EvaluatorPreprocessor(stream, xref, stateManager) {\n\t    this.opMap = getOPMap();\n\t    this.parser = new _parser.Parser(new _parser.Lexer(stream, this.opMap), false, xref);\n\t    this.stateManager = stateManager;\n\t    this.nonProcessedArgs = [];\n\t  }\n\t  EvaluatorPreprocessor.prototype = {\n\t    get savedStatesDepth() {\n\t      return this.stateManager.stateStack.length;\n\t    },\n\t    read: function EvaluatorPreprocessor_read(operation) {\n\t      var args = operation.args;\n\t      while (true) {\n\t        var obj = this.parser.getObj();\n\t        if ((0, _primitives.isCmd)(obj)) {\n\t          var cmd = obj.cmd;\n\t          var opSpec = this.opMap[cmd];\n\t          if (!opSpec) {\n\t            (0, _util.warn)('Unknown command \"' + cmd + '\"');\n\t            continue;\n\t          }\n\t          var fn = opSpec.id;\n\t          var numArgs = opSpec.numArgs;\n\t          var argsLength = args !== null ? args.length : 0;\n\t          if (!opSpec.variableArgs) {\n\t            if (argsLength !== numArgs) {\n\t              var nonProcessedArgs = this.nonProcessedArgs;\n\t              while (argsLength > numArgs) {\n\t                nonProcessedArgs.push(args.shift());\n\t                argsLength--;\n\t              }\n\t              while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n\t                if (args === null) {\n\t                  args = [];\n\t                }\n\t                args.unshift(nonProcessedArgs.pop());\n\t                argsLength++;\n\t              }\n\t            }\n\t            if (argsLength < numArgs) {\n\t              (0, _util.warn)('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\n\t              if (args !== null) {\n\t                args.length = 0;\n\t              }\n\t              continue;\n\t            }\n\t          } else if (argsLength > numArgs) {\n\t            (0, _util.info)('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\n\t          }\n\t          this.preprocessCommand(fn, args);\n\t          operation.fn = fn;\n\t          operation.args = args;\n\t          return true;\n\t        }\n\t        if ((0, _primitives.isEOF)(obj)) {\n\t          return false;\n\t        }\n\t        if (obj !== null) {\n\t          if (args === null) {\n\t            args = [];\n\t          }\n\t          args.push(obj);\n\t          if (args.length > 33) {\n\t            throw new _util.FormatError('Too many arguments');\n\t          }\n\t        }\n\t      }\n\t    },\n\t    preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n\t      switch (fn | 0) {\n\t        case _util.OPS.save:\n\t          this.stateManager.save();\n\t          break;\n\t        case _util.OPS.restore:\n\t          this.stateManager.restore();\n\t          break;\n\t        case _util.OPS.transform:\n\t          this.stateManager.transform(args);\n\t          break;\n\t      }\n\t    }\n\t  };\n\t  return EvaluatorPreprocessor;\n\t}();\n\tvar QueueOptimizer = function QueueOptimizerClosure() {\n\t  function addState(parentState, pattern, fn) {\n\t    var state = parentState;\n\t    for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n\t      var item = pattern[i];\n\t      state = state[item] || (state[item] = []);\n\t    }\n\t    state[pattern[pattern.length - 1]] = fn;\n\t  }\n\t  function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n\t    var iFirstPIMXO = iFirstSave + 2;\n\t    for (var i = 0; i < count; i++) {\n\t      var arg = argsArray[iFirstPIMXO + 4 * i];\n\t      var imageMask = arg.length === 1 && arg[0];\n\t      if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n\t        fnArray[iFirstPIMXO + 4 * i] = _util.OPS.paintSolidColorImageMask;\n\t        continue;\n\t      }\n\t      break;\n\t    }\n\t    return count - i;\n\t  }\n\t  var InitialState = [];\n\t  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintInlineImageXObject, _util.OPS.restore], function foundInlineImageGroup(context) {\n\t    var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n\t    var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n\t    var MAX_WIDTH = 1000;\n\t    var IMAGE_PADDING = 1;\n\t    var fnArray = context.fnArray,\n\t        argsArray = context.argsArray;\n\t    var curr = context.iCurr;\n\t    var iFirstSave = curr - 3;\n\t    var iFirstTransform = curr - 2;\n\t    var iFirstPIIXO = curr - 1;\n\t    var i = iFirstSave + 4;\n\t    var ii = fnArray.length;\n\t    while (i + 3 < ii) {\n\t      if (fnArray[i] !== _util.OPS.save || fnArray[i + 1] !== _util.OPS.transform || fnArray[i + 2] !== _util.OPS.paintInlineImageXObject || fnArray[i + 3] !== _util.OPS.restore) {\n\t        break;\n\t      }\n\t      i += 4;\n\t    }\n\t    var count = Math.min((i - iFirstSave) / 4, MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n\t    if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n\t      return i;\n\t    }\n\t    var maxX = 0;\n\t    var map = [],\n\t        maxLineHeight = 0;\n\t    var currentX = IMAGE_PADDING,\n\t        currentY = IMAGE_PADDING;\n\t    var q;\n\t    for (q = 0; q < count; q++) {\n\t      var transform = argsArray[iFirstTransform + (q << 2)];\n\t      var img = argsArray[iFirstPIIXO + (q << 2)][0];\n\t      if (currentX + img.width > MAX_WIDTH) {\n\t        maxX = Math.max(maxX, currentX);\n\t        currentY += maxLineHeight + 2 * IMAGE_PADDING;\n\t        currentX = 0;\n\t        maxLineHeight = 0;\n\t      }\n\t      map.push({\n\t        transform: transform,\n\t        x: currentX,\n\t        y: currentY,\n\t        w: img.width,\n\t        h: img.height\n\t      });\n\t      currentX += img.width + 2 * IMAGE_PADDING;\n\t      maxLineHeight = Math.max(maxLineHeight, img.height);\n\t    }\n\t    var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n\t    var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n\t    var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n\t    var imgRowSize = imgWidth << 2;\n\t    for (q = 0; q < count; q++) {\n\t      var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n\t      var rowSize = map[q].w << 2;\n\t      var dataOffset = 0;\n\t      var offset = map[q].x + map[q].y * imgWidth << 2;\n\t      imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n\t      for (var k = 0, kk = map[q].h; k < kk; k++) {\n\t        imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n\t        dataOffset += rowSize;\n\t        offset += imgRowSize;\n\t      }\n\t      imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n\t      while (offset >= 0) {\n\t        data[offset - 4] = data[offset];\n\t        data[offset - 3] = data[offset + 1];\n\t        data[offset - 2] = data[offset + 2];\n\t        data[offset - 1] = data[offset + 3];\n\t        data[offset + rowSize] = data[offset + rowSize - 4];\n\t        data[offset + rowSize + 1] = data[offset + rowSize - 3];\n\t        data[offset + rowSize + 2] = data[offset + rowSize - 2];\n\t        data[offset + rowSize + 3] = data[offset + rowSize - 1];\n\t        offset -= imgRowSize;\n\t      }\n\t    }\n\t    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintInlineImageXObjectGroup);\n\t    argsArray.splice(iFirstSave, count * 4, [{\n\t      width: imgWidth,\n\t      height: imgHeight,\n\t      kind: _util.ImageKind.RGBA_32BPP,\n\t      data: imgData\n\t    }, map]);\n\t    return iFirstSave + 1;\n\t  });\n\t  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageMaskXObject, _util.OPS.restore], function foundImageMaskGroup(context) {\n\t    var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n\t    var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n\t    var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n\t    var fnArray = context.fnArray,\n\t        argsArray = context.argsArray;\n\t    var curr = context.iCurr;\n\t    var iFirstSave = curr - 3;\n\t    var iFirstTransform = curr - 2;\n\t    var iFirstPIMXO = curr - 1;\n\t    var i = iFirstSave + 4;\n\t    var ii = fnArray.length;\n\t    while (i + 3 < ii) {\n\t      if (fnArray[i] !== _util.OPS.save || fnArray[i + 1] !== _util.OPS.transform || fnArray[i + 2] !== _util.OPS.paintImageMaskXObject || fnArray[i + 3] !== _util.OPS.restore) {\n\t        break;\n\t      }\n\t      i += 4;\n\t    }\n\t    var count = (i - iFirstSave) / 4;\n\t    count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n\t    if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n\t      return i;\n\t    }\n\t    var q;\n\t    var isSameImage = false;\n\t    var iTransform, transformArgs;\n\t    var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n\t    if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\n\t      isSameImage = true;\n\t      var firstTransformArg0 = argsArray[iFirstTransform][0];\n\t      var firstTransformArg3 = argsArray[iFirstTransform][3];\n\t      iTransform = iFirstTransform + 4;\n\t      var iPIMXO = iFirstPIMXO + 4;\n\t      for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n\t        transformArgs = argsArray[iTransform];\n\t        if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\n\t          if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n\t            isSameImage = false;\n\t          } else {\n\t            count = q;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    if (isSameImage) {\n\t      count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n\t      var positions = new Float32Array(count * 2);\n\t      iTransform = iFirstTransform;\n\t      for (q = 0; q < count; q++, iTransform += 4) {\n\t        transformArgs = argsArray[iTransform];\n\t        positions[q << 1] = transformArgs[4];\n\t        positions[(q << 1) + 1] = transformArgs[5];\n\t      }\n\t      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectRepeat);\n\t      argsArray.splice(iFirstSave, count * 4, [firstPIMXOArg0, firstTransformArg0, firstTransformArg3, positions]);\n\t    } else {\n\t      count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n\t      var images = [];\n\t      for (q = 0; q < count; q++) {\n\t        transformArgs = argsArray[iFirstTransform + (q << 2)];\n\t        var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n\t        images.push({\n\t          data: maskParams.data,\n\t          width: maskParams.width,\n\t          height: maskParams.height,\n\t          transform: transformArgs\n\t        });\n\t      }\n\t      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectGroup);\n\t      argsArray.splice(iFirstSave, count * 4, [images]);\n\t    }\n\t    return iFirstSave + 1;\n\t  });\n\t  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageXObject, _util.OPS.restore], function (context) {\n\t    var MIN_IMAGES_IN_BLOCK = 3;\n\t    var MAX_IMAGES_IN_BLOCK = 1000;\n\t    var fnArray = context.fnArray,\n\t        argsArray = context.argsArray;\n\t    var curr = context.iCurr;\n\t    var iFirstSave = curr - 3;\n\t    var iFirstTransform = curr - 2;\n\t    var iFirstPIXO = curr - 1;\n\t    var iFirstRestore = curr;\n\t    if (argsArray[iFirstTransform][1] !== 0 || argsArray[iFirstTransform][2] !== 0) {\n\t      return iFirstRestore + 1;\n\t    }\n\t    var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n\t    var firstTransformArg0 = argsArray[iFirstTransform][0];\n\t    var firstTransformArg3 = argsArray[iFirstTransform][3];\n\t    var i = iFirstSave + 4;\n\t    var ii = fnArray.length;\n\t    while (i + 3 < ii) {\n\t      if (fnArray[i] !== _util.OPS.save || fnArray[i + 1] !== _util.OPS.transform || fnArray[i + 2] !== _util.OPS.paintImageXObject || fnArray[i + 3] !== _util.OPS.restore) {\n\t        break;\n\t      }\n\t      if (argsArray[i + 1][0] !== firstTransformArg0 || argsArray[i + 1][1] !== 0 || argsArray[i + 1][2] !== 0 || argsArray[i + 1][3] !== firstTransformArg3) {\n\t        break;\n\t      }\n\t      if (argsArray[i + 2][0] !== firstPIXOArg0) {\n\t        break;\n\t      }\n\t      i += 4;\n\t    }\n\t    var count = Math.min((i - iFirstSave) / 4, MAX_IMAGES_IN_BLOCK);\n\t    if (count < MIN_IMAGES_IN_BLOCK) {\n\t      return i;\n\t    }\n\t    var positions = new Float32Array(count * 2);\n\t    var iTransform = iFirstTransform;\n\t    for (var q = 0; q < count; q++, iTransform += 4) {\n\t      var transformArgs = argsArray[iTransform];\n\t      positions[q << 1] = transformArgs[4];\n\t      positions[(q << 1) + 1] = transformArgs[5];\n\t    }\n\t    var args = [firstPIXOArg0, firstTransformArg0, firstTransformArg3, positions];\n\t    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageXObjectRepeat);\n\t    argsArray.splice(iFirstSave, count * 4, args);\n\t    return iFirstSave + 1;\n\t  });\n\t  addState(InitialState, [_util.OPS.beginText, _util.OPS.setFont, _util.OPS.setTextMatrix, _util.OPS.showText, _util.OPS.endText], function (context) {\n\t    var MIN_CHARS_IN_BLOCK = 3;\n\t    var MAX_CHARS_IN_BLOCK = 1000;\n\t    var fnArray = context.fnArray,\n\t        argsArray = context.argsArray;\n\t    var curr = context.iCurr;\n\t    var iFirstBeginText = curr - 4;\n\t    var iFirstSetFont = curr - 3;\n\t    var iFirstSetTextMatrix = curr - 2;\n\t    var iFirstShowText = curr - 1;\n\t    var iFirstEndText = curr;\n\t    var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n\t    var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n\t    var i = iFirstBeginText + 5;\n\t    var ii = fnArray.length;\n\t    while (i + 4 < ii) {\n\t      if (fnArray[i] !== _util.OPS.beginText || fnArray[i + 1] !== _util.OPS.setFont || fnArray[i + 2] !== _util.OPS.setTextMatrix || fnArray[i + 3] !== _util.OPS.showText || fnArray[i + 4] !== _util.OPS.endText) {\n\t        break;\n\t      }\n\t      if (argsArray[i + 1][0] !== firstSetFontArg0 || argsArray[i + 1][1] !== firstSetFontArg1) {\n\t        break;\n\t      }\n\t      i += 5;\n\t    }\n\t    var count = Math.min((i - iFirstBeginText) / 5, MAX_CHARS_IN_BLOCK);\n\t    if (count < MIN_CHARS_IN_BLOCK) {\n\t      return i;\n\t    }\n\t    var iFirst = iFirstBeginText;\n\t    if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n\t      count++;\n\t      iFirst -= 5;\n\t    }\n\t    var iEndText = iFirst + 4;\n\t    for (var q = 1; q < count; q++) {\n\t      fnArray.splice(iEndText, 3);\n\t      argsArray.splice(iEndText, 3);\n\t      iEndText += 2;\n\t    }\n\t    return iEndText + 1;\n\t  });\n\t  function QueueOptimizer() {}\n\t  QueueOptimizer.prototype = {\n\t    optimize: function QueueOptimizer_optimize(queue) {\n\t      var fnArray = queue.fnArray,\n\t          argsArray = queue.argsArray;\n\t      var context = {\n\t        iCurr: 0,\n\t        fnArray: fnArray,\n\t        argsArray: argsArray\n\t      };\n\t      var state;\n\t      var i = 0,\n\t          ii = fnArray.length;\n\t      while (i < ii) {\n\t        state = (state || InitialState)[fnArray[i]];\n\t        if (typeof state === 'function') {\n\t          context.iCurr = i;\n\t          i = state(context);\n\t          state = undefined;\n\t          ii = context.fnArray.length;\n\t        } else {\n\t          i++;\n\t        }\n\t      }\n\t    }\n\t  };\n\t  return QueueOptimizer;\n\t}();\n\texports.OperatorList = OperatorList;\n\texports.PartialEvaluator = PartialEvaluator;\n\t\n\t/***/ }),\n\t/* 78 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.CFFCompiler = exports.CFFPrivateDict = exports.CFFTopDict = exports.CFFCharset = exports.CFFIndex = exports.CFFStrings = exports.CFFHeader = exports.CFF = exports.CFFParser = exports.CFFStandardStrings = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _charsets = __w_pdfjs_require__(135);\n\t\n\tvar _encodings = __w_pdfjs_require__(27);\n\t\n\tvar MAX_SUBR_NESTING = 10;\n\tvar CFFStandardStrings = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000', '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\n\tvar CFFParser = function CFFParserClosure() {\n\t  var CharstringValidationData = [null, {\n\t    id: 'hstem',\n\t    min: 2,\n\t    stackClearing: true,\n\t    stem: true\n\t  }, null, {\n\t    id: 'vstem',\n\t    min: 2,\n\t    stackClearing: true,\n\t    stem: true\n\t  }, {\n\t    id: 'vmoveto',\n\t    min: 1,\n\t    stackClearing: true\n\t  }, {\n\t    id: 'rlineto',\n\t    min: 2,\n\t    resetStack: true\n\t  }, {\n\t    id: 'hlineto',\n\t    min: 1,\n\t    resetStack: true\n\t  }, {\n\t    id: 'vlineto',\n\t    min: 1,\n\t    resetStack: true\n\t  }, {\n\t    id: 'rrcurveto',\n\t    min: 6,\n\t    resetStack: true\n\t  }, null, {\n\t    id: 'callsubr',\n\t    min: 1,\n\t    undefStack: true\n\t  }, {\n\t    id: 'return',\n\t    min: 0,\n\t    undefStack: true\n\t  }, null, null, {\n\t    id: 'endchar',\n\t    min: 0,\n\t    stackClearing: true\n\t  }, null, null, null, {\n\t    id: 'hstemhm',\n\t    min: 2,\n\t    stackClearing: true,\n\t    stem: true\n\t  }, {\n\t    id: 'hintmask',\n\t    min: 0,\n\t    stackClearing: true\n\t  }, {\n\t    id: 'cntrmask',\n\t    min: 0,\n\t    stackClearing: true\n\t  }, {\n\t    id: 'rmoveto',\n\t    min: 2,\n\t    stackClearing: true\n\t  }, {\n\t    id: 'hmoveto',\n\t    min: 1,\n\t    stackClearing: true\n\t  }, {\n\t    id: 'vstemhm',\n\t    min: 2,\n\t    stackClearing: true,\n\t    stem: true\n\t  }, {\n\t    id: 'rcurveline',\n\t    min: 8,\n\t    resetStack: true\n\t  }, {\n\t    id: 'rlinecurve',\n\t    min: 8,\n\t    resetStack: true\n\t  }, {\n\t    id: 'vvcurveto',\n\t    min: 4,\n\t    resetStack: true\n\t  }, {\n\t    id: 'hhcurveto',\n\t    min: 4,\n\t    resetStack: true\n\t  }, null, {\n\t    id: 'callgsubr',\n\t    min: 1,\n\t    undefStack: true\n\t  }, {\n\t    id: 'vhcurveto',\n\t    min: 4,\n\t    resetStack: true\n\t  }, {\n\t    id: 'hvcurveto',\n\t    min: 4,\n\t    resetStack: true\n\t  }];\n\t  var CharstringValidationData12 = [null, null, null, {\n\t    id: 'and',\n\t    min: 2,\n\t    stackDelta: -1\n\t  }, {\n\t    id: 'or',\n\t    min: 2,\n\t    stackDelta: -1\n\t  }, {\n\t    id: 'not',\n\t    min: 1,\n\t    stackDelta: 0\n\t  }, null, null, null, {\n\t    id: 'abs',\n\t    min: 1,\n\t    stackDelta: 0\n\t  }, {\n\t    id: 'add',\n\t    min: 2,\n\t    stackDelta: -1,\n\t    stackFn: function stack_div(stack, index) {\n\t      stack[index - 2] = stack[index - 2] + stack[index - 1];\n\t    }\n\t  }, {\n\t    id: 'sub',\n\t    min: 2,\n\t    stackDelta: -1,\n\t    stackFn: function stack_div(stack, index) {\n\t      stack[index - 2] = stack[index - 2] - stack[index - 1];\n\t    }\n\t  }, {\n\t    id: 'div',\n\t    min: 2,\n\t    stackDelta: -1,\n\t    stackFn: function stack_div(stack, index) {\n\t      stack[index - 2] = stack[index - 2] / stack[index - 1];\n\t    }\n\t  }, null, {\n\t    id: 'neg',\n\t    min: 1,\n\t    stackDelta: 0,\n\t    stackFn: function stack_div(stack, index) {\n\t      stack[index - 1] = -stack[index - 1];\n\t    }\n\t  }, {\n\t    id: 'eq',\n\t    min: 2,\n\t    stackDelta: -1\n\t  }, null, null, {\n\t    id: 'drop',\n\t    min: 1,\n\t    stackDelta: -1\n\t  }, null, {\n\t    id: 'put',\n\t    min: 2,\n\t    stackDelta: -2\n\t  }, {\n\t    id: 'get',\n\t    min: 1,\n\t    stackDelta: 0\n\t  }, {\n\t    id: 'ifelse',\n\t    min: 4,\n\t    stackDelta: -3\n\t  }, {\n\t    id: 'random',\n\t    min: 0,\n\t    stackDelta: 1\n\t  }, {\n\t    id: 'mul',\n\t    min: 2,\n\t    stackDelta: -1,\n\t    stackFn: function stack_div(stack, index) {\n\t      stack[index - 2] = stack[index - 2] * stack[index - 1];\n\t    }\n\t  }, null, {\n\t    id: 'sqrt',\n\t    min: 1,\n\t    stackDelta: 0\n\t  }, {\n\t    id: 'dup',\n\t    min: 1,\n\t    stackDelta: 1\n\t  }, {\n\t    id: 'exch',\n\t    min: 2,\n\t    stackDelta: 0\n\t  }, {\n\t    id: 'index',\n\t    min: 2,\n\t    stackDelta: 0\n\t  }, {\n\t    id: 'roll',\n\t    min: 3,\n\t    stackDelta: -2\n\t  }, null, null, null, {\n\t    id: 'hflex',\n\t    min: 7,\n\t    resetStack: true\n\t  }, {\n\t    id: 'flex',\n\t    min: 13,\n\t    resetStack: true\n\t  }, {\n\t    id: 'hflex1',\n\t    min: 9,\n\t    resetStack: true\n\t  }, {\n\t    id: 'flex1',\n\t    min: 11,\n\t    resetStack: true\n\t  }];\n\t  function CFFParser(file, properties, seacAnalysisEnabled) {\n\t    this.bytes = file.getBytes();\n\t    this.properties = properties;\n\t    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n\t  }\n\t  CFFParser.prototype = {\n\t    parse: function CFFParser_parse() {\n\t      var properties = this.properties;\n\t      var cff = new CFF();\n\t      this.cff = cff;\n\t      var header = this.parseHeader();\n\t      var nameIndex = this.parseIndex(header.endPos);\n\t      var topDictIndex = this.parseIndex(nameIndex.endPos);\n\t      var stringIndex = this.parseIndex(topDictIndex.endPos);\n\t      var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n\t      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n\t      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n\t      cff.header = header.obj;\n\t      cff.names = this.parseNameIndex(nameIndex.obj);\n\t      cff.strings = this.parseStringIndex(stringIndex.obj);\n\t      cff.topDict = topDict;\n\t      cff.globalSubrIndex = globalSubrIndex.obj;\n\t      this.parsePrivateDict(cff.topDict);\n\t      cff.isCIDFont = topDict.hasName('ROS');\n\t      var charStringOffset = topDict.getByName('CharStrings');\n\t      var charStringIndex = this.parseIndex(charStringOffset).obj;\n\t      var fontMatrix = topDict.getByName('FontMatrix');\n\t      if (fontMatrix) {\n\t        properties.fontMatrix = fontMatrix;\n\t      }\n\t      var fontBBox = topDict.getByName('FontBBox');\n\t      if (fontBBox) {\n\t        properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n\t        properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n\t        properties.ascentScaled = true;\n\t      }\n\t      var charset, encoding;\n\t      if (cff.isCIDFont) {\n\t        var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n\t        for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n\t          var dictRaw = fdArrayIndex.get(i);\n\t          var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n\t          this.parsePrivateDict(fontDict);\n\t          cff.fdArray.push(fontDict);\n\t        }\n\t        encoding = null;\n\t        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\n\t        cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\n\t      } else {\n\t        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\n\t        encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\n\t      }\n\t      cff.charset = charset;\n\t      cff.encoding = encoding;\n\t      var charStringsAndSeacs = this.parseCharStrings({\n\t        charStrings: charStringIndex,\n\t        localSubrIndex: topDict.privateDict.subrsIndex,\n\t        globalSubrIndex: globalSubrIndex.obj,\n\t        fdSelect: cff.fdSelect,\n\t        fdArray: cff.fdArray,\n\t        privateDict: topDict.privateDict\n\t      });\n\t      cff.charStrings = charStringsAndSeacs.charStrings;\n\t      cff.seacs = charStringsAndSeacs.seacs;\n\t      cff.widths = charStringsAndSeacs.widths;\n\t      return cff;\n\t    },\n\t    parseHeader: function CFFParser_parseHeader() {\n\t      var bytes = this.bytes;\n\t      var bytesLength = bytes.length;\n\t      var offset = 0;\n\t      while (offset < bytesLength && bytes[offset] !== 1) {\n\t        ++offset;\n\t      }\n\t      if (offset >= bytesLength) {\n\t        throw new _util.FormatError('Invalid CFF header');\n\t      }\n\t      if (offset !== 0) {\n\t        (0, _util.info)('cff data is shifted');\n\t        bytes = bytes.subarray(offset);\n\t        this.bytes = bytes;\n\t      }\n\t      var major = bytes[0];\n\t      var minor = bytes[1];\n\t      var hdrSize = bytes[2];\n\t      var offSize = bytes[3];\n\t      var header = new CFFHeader(major, minor, hdrSize, offSize);\n\t      return {\n\t        obj: header,\n\t        endPos: hdrSize\n\t      };\n\t    },\n\t    parseDict: function CFFParser_parseDict(dict) {\n\t      var pos = 0;\n\t      function parseOperand() {\n\t        var value = dict[pos++];\n\t        if (value === 30) {\n\t          return parseFloatOperand();\n\t        } else if (value === 28) {\n\t          value = dict[pos++];\n\t          value = (value << 24 | dict[pos++] << 16) >> 16;\n\t          return value;\n\t        } else if (value === 29) {\n\t          value = dict[pos++];\n\t          value = value << 8 | dict[pos++];\n\t          value = value << 8 | dict[pos++];\n\t          value = value << 8 | dict[pos++];\n\t          return value;\n\t        } else if (value >= 32 && value <= 246) {\n\t          return value - 139;\n\t        } else if (value >= 247 && value <= 250) {\n\t          return (value - 247) * 256 + dict[pos++] + 108;\n\t        } else if (value >= 251 && value <= 254) {\n\t          return -((value - 251) * 256) - dict[pos++] - 108;\n\t        }\n\t        (0, _util.warn)('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n\t        return NaN;\n\t      }\n\t      function parseFloatOperand() {\n\t        var str = '';\n\t        var eof = 15;\n\t        var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n\t        var length = dict.length;\n\t        while (pos < length) {\n\t          var b = dict[pos++];\n\t          var b1 = b >> 4;\n\t          var b2 = b & 15;\n\t          if (b1 === eof) {\n\t            break;\n\t          }\n\t          str += lookup[b1];\n\t          if (b2 === eof) {\n\t            break;\n\t          }\n\t          str += lookup[b2];\n\t        }\n\t        return parseFloat(str);\n\t      }\n\t      var operands = [];\n\t      var entries = [];\n\t      pos = 0;\n\t      var end = dict.length;\n\t      while (pos < end) {\n\t        var b = dict[pos];\n\t        if (b <= 21) {\n\t          if (b === 12) {\n\t            b = b << 8 | dict[++pos];\n\t          }\n\t          entries.push([b, operands]);\n\t          operands = [];\n\t          ++pos;\n\t        } else {\n\t          operands.push(parseOperand());\n\t        }\n\t      }\n\t      return entries;\n\t    },\n\t    parseIndex: function CFFParser_parseIndex(pos) {\n\t      var cffIndex = new CFFIndex();\n\t      var bytes = this.bytes;\n\t      var count = bytes[pos++] << 8 | bytes[pos++];\n\t      var offsets = [];\n\t      var end = pos;\n\t      var i, ii;\n\t      if (count !== 0) {\n\t        var offsetSize = bytes[pos++];\n\t        var startPos = pos + (count + 1) * offsetSize - 1;\n\t        for (i = 0, ii = count + 1; i < ii; ++i) {\n\t          var offset = 0;\n\t          for (var j = 0; j < offsetSize; ++j) {\n\t            offset <<= 8;\n\t            offset += bytes[pos++];\n\t          }\n\t          offsets.push(startPos + offset);\n\t        }\n\t        end = offsets[count];\n\t      }\n\t      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n\t        var offsetStart = offsets[i];\n\t        var offsetEnd = offsets[i + 1];\n\t        cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n\t      }\n\t      return {\n\t        obj: cffIndex,\n\t        endPos: end\n\t      };\n\t    },\n\t    parseNameIndex: function CFFParser_parseNameIndex(index) {\n\t      var names = [];\n\t      for (var i = 0, ii = index.count; i < ii; ++i) {\n\t        var name = index.get(i);\n\t        names.push((0, _util.bytesToString)(name));\n\t      }\n\t      return names;\n\t    },\n\t    parseStringIndex: function CFFParser_parseStringIndex(index) {\n\t      var strings = new CFFStrings();\n\t      for (var i = 0, ii = index.count; i < ii; ++i) {\n\t        var data = index.get(i);\n\t        strings.add((0, _util.bytesToString)(data));\n\t      }\n\t      return strings;\n\t    },\n\t    createDict: function CFFParser_createDict(Type, dict, strings) {\n\t      var cffDict = new Type(strings);\n\t      for (var i = 0, ii = dict.length; i < ii; ++i) {\n\t        var pair = dict[i];\n\t        var key = pair[0];\n\t        var value = pair[1];\n\t        cffDict.setByKey(key, value);\n\t      }\n\t      return cffDict;\n\t    },\n\t    parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n\t      if (!data || state.callDepth > MAX_SUBR_NESTING) {\n\t        return false;\n\t      }\n\t      var stackSize = state.stackSize;\n\t      var stack = state.stack;\n\t      var length = data.length;\n\t      for (var j = 0; j < length;) {\n\t        var value = data[j++];\n\t        var validationCommand = null;\n\t        if (value === 12) {\n\t          var q = data[j++];\n\t          if (q === 0) {\n\t            data[j - 2] = 139;\n\t            data[j - 1] = 22;\n\t            stackSize = 0;\n\t          } else {\n\t            validationCommand = CharstringValidationData12[q];\n\t          }\n\t        } else if (value === 28) {\n\t          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n\t          j += 2;\n\t          stackSize++;\n\t        } else if (value === 14) {\n\t          if (stackSize >= 4) {\n\t            stackSize -= 4;\n\t            if (this.seacAnalysisEnabled) {\n\t              state.seac = stack.slice(stackSize, stackSize + 4);\n\t              return false;\n\t            }\n\t          }\n\t          validationCommand = CharstringValidationData[value];\n\t        } else if (value >= 32 && value <= 246) {\n\t          stack[stackSize] = value - 139;\n\t          stackSize++;\n\t        } else if (value >= 247 && value <= 254) {\n\t          stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n\t          j++;\n\t          stackSize++;\n\t        } else if (value === 255) {\n\t          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n\t          j += 4;\n\t          stackSize++;\n\t        } else if (value === 19 || value === 20) {\n\t          state.hints += stackSize >> 1;\n\t          j += state.hints + 7 >> 3;\n\t          stackSize %= 2;\n\t          validationCommand = CharstringValidationData[value];\n\t        } else if (value === 10 || value === 29) {\n\t          var subrsIndex;\n\t          if (value === 10) {\n\t            subrsIndex = localSubrIndex;\n\t          } else {\n\t            subrsIndex = globalSubrIndex;\n\t          }\n\t          if (!subrsIndex) {\n\t            validationCommand = CharstringValidationData[value];\n\t            (0, _util.warn)('Missing subrsIndex for ' + validationCommand.id);\n\t            return false;\n\t          }\n\t          var bias = 32768;\n\t          if (subrsIndex.count < 1240) {\n\t            bias = 107;\n\t          } else if (subrsIndex.count < 33900) {\n\t            bias = 1131;\n\t          }\n\t          var subrNumber = stack[--stackSize] + bias;\n\t          if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\n\t            validationCommand = CharstringValidationData[value];\n\t            (0, _util.warn)('Out of bounds subrIndex for ' + validationCommand.id);\n\t            return false;\n\t          }\n\t          state.stackSize = stackSize;\n\t          state.callDepth++;\n\t          var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n\t          if (!valid) {\n\t            return false;\n\t          }\n\t          state.callDepth--;\n\t          stackSize = state.stackSize;\n\t          continue;\n\t        } else if (value === 11) {\n\t          state.stackSize = stackSize;\n\t          return true;\n\t        } else {\n\t          validationCommand = CharstringValidationData[value];\n\t        }\n\t        if (validationCommand) {\n\t          if (validationCommand.stem) {\n\t            state.hints += stackSize >> 1;\n\t          }\n\t          if ('min' in validationCommand) {\n\t            if (!state.undefStack && stackSize < validationCommand.min) {\n\t              (0, _util.warn)('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\n\t              return false;\n\t            }\n\t          }\n\t          if (state.firstStackClearing && validationCommand.stackClearing) {\n\t            state.firstStackClearing = false;\n\t            stackSize -= validationCommand.min;\n\t            if (stackSize >= 2 && validationCommand.stem) {\n\t              stackSize %= 2;\n\t            } else if (stackSize > 1) {\n\t              (0, _util.warn)('Found too many parameters for stack-clearing command');\n\t            }\n\t            if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n\t              state.width = stack[stackSize - 1];\n\t            }\n\t          }\n\t          if ('stackDelta' in validationCommand) {\n\t            if ('stackFn' in validationCommand) {\n\t              validationCommand.stackFn(stack, stackSize);\n\t            }\n\t            stackSize += validationCommand.stackDelta;\n\t          } else if (validationCommand.stackClearing) {\n\t            stackSize = 0;\n\t          } else if (validationCommand.resetStack) {\n\t            stackSize = 0;\n\t            state.undefStack = false;\n\t          } else if (validationCommand.undefStack) {\n\t            stackSize = 0;\n\t            state.undefStack = true;\n\t            state.firstStackClearing = false;\n\t          }\n\t        }\n\t      }\n\t      state.stackSize = stackSize;\n\t      return true;\n\t    },\n\t    parseCharStrings: function parseCharStrings(_ref) {\n\t      var charStrings = _ref.charStrings,\n\t          localSubrIndex = _ref.localSubrIndex,\n\t          globalSubrIndex = _ref.globalSubrIndex,\n\t          fdSelect = _ref.fdSelect,\n\t          fdArray = _ref.fdArray,\n\t          privateDict = _ref.privateDict;\n\t\n\t      var seacs = [];\n\t      var widths = [];\n\t      var count = charStrings.count;\n\t      for (var i = 0; i < count; i++) {\n\t        var charstring = charStrings.get(i);\n\t        var state = {\n\t          callDepth: 0,\n\t          stackSize: 0,\n\t          stack: [],\n\t          undefStack: true,\n\t          hints: 0,\n\t          firstStackClearing: true,\n\t          seac: null,\n\t          width: null\n\t        };\n\t        var valid = true;\n\t        var localSubrToUse = null;\n\t        var privateDictToUse = privateDict;\n\t        if (fdSelect && fdArray.length) {\n\t          var fdIndex = fdSelect.getFDIndex(i);\n\t          if (fdIndex === -1) {\n\t            (0, _util.warn)('Glyph index is not in fd select.');\n\t            valid = false;\n\t          }\n\t          if (fdIndex >= fdArray.length) {\n\t            (0, _util.warn)('Invalid fd index for glyph index.');\n\t            valid = false;\n\t          }\n\t          if (valid) {\n\t            privateDictToUse = fdArray[fdIndex].privateDict;\n\t            localSubrToUse = privateDictToUse.subrsIndex;\n\t          }\n\t        } else if (localSubrIndex) {\n\t          localSubrToUse = localSubrIndex;\n\t        }\n\t        if (valid) {\n\t          valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n\t        }\n\t        if (state.width !== null) {\n\t          var nominalWidth = privateDictToUse.getByName('nominalWidthX');\n\t          widths[i] = nominalWidth + state.width;\n\t        } else {\n\t          var defaultWidth = privateDictToUse.getByName('defaultWidthX');\n\t          widths[i] = defaultWidth;\n\t        }\n\t        if (state.seac !== null) {\n\t          seacs[i] = state.seac;\n\t        }\n\t        if (!valid) {\n\t          charStrings.set(i, new Uint8Array([14]));\n\t        }\n\t      }\n\t      return {\n\t        charStrings: charStrings,\n\t        seacs: seacs,\n\t        widths: widths\n\t      };\n\t    },\n\t\n\t    emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\n\t      var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n\t      parentDict.setByKey(18, [0, 0]);\n\t      parentDict.privateDict = privateDict;\n\t    },\n\t    parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n\t      if (!parentDict.hasName('Private')) {\n\t        this.emptyPrivateDictionary(parentDict);\n\t        return;\n\t      }\n\t      var privateOffset = parentDict.getByName('Private');\n\t      if (!Array.isArray(privateOffset) || privateOffset.length !== 2) {\n\t        parentDict.removeByName('Private');\n\t        return;\n\t      }\n\t      var size = privateOffset[0];\n\t      var offset = privateOffset[1];\n\t      if (size === 0 || offset >= this.bytes.length) {\n\t        this.emptyPrivateDictionary(parentDict);\n\t        return;\n\t      }\n\t      var privateDictEnd = offset + size;\n\t      var dictData = this.bytes.subarray(offset, privateDictEnd);\n\t      var dict = this.parseDict(dictData);\n\t      var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n\t      parentDict.privateDict = privateDict;\n\t      if (!privateDict.getByName('Subrs')) {\n\t        return;\n\t      }\n\t      var subrsOffset = privateDict.getByName('Subrs');\n\t      var relativeOffset = offset + subrsOffset;\n\t      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n\t        this.emptyPrivateDictionary(parentDict);\n\t        return;\n\t      }\n\t      var subrsIndex = this.parseIndex(relativeOffset);\n\t      privateDict.subrsIndex = subrsIndex.obj;\n\t    },\n\t    parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n\t      if (pos === 0) {\n\t        return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, _charsets.ISOAdobeCharset);\n\t      } else if (pos === 1) {\n\t        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, _charsets.ExpertCharset);\n\t      } else if (pos === 2) {\n\t        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, _charsets.ExpertSubsetCharset);\n\t      }\n\t      var bytes = this.bytes;\n\t      var start = pos;\n\t      var format = bytes[pos++];\n\t      var charset = ['.notdef'];\n\t      var id, count, i;\n\t      length -= 1;\n\t      switch (format) {\n\t        case 0:\n\t          for (i = 0; i < length; i++) {\n\t            id = bytes[pos++] << 8 | bytes[pos++];\n\t            charset.push(cid ? id : strings.get(id));\n\t          }\n\t          break;\n\t        case 1:\n\t          while (charset.length <= length) {\n\t            id = bytes[pos++] << 8 | bytes[pos++];\n\t            count = bytes[pos++];\n\t            for (i = 0; i <= count; i++) {\n\t              charset.push(cid ? id++ : strings.get(id++));\n\t            }\n\t          }\n\t          break;\n\t        case 2:\n\t          while (charset.length <= length) {\n\t            id = bytes[pos++] << 8 | bytes[pos++];\n\t            count = bytes[pos++] << 8 | bytes[pos++];\n\t            for (i = 0; i <= count; i++) {\n\t              charset.push(cid ? id++ : strings.get(id++));\n\t            }\n\t          }\n\t          break;\n\t        default:\n\t          throw new _util.FormatError('Unknown charset format');\n\t      }\n\t      var end = pos;\n\t      var raw = bytes.subarray(start, end);\n\t      return new CFFCharset(false, format, charset, raw);\n\t    },\n\t    parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\n\t      var encoding = Object.create(null);\n\t      var bytes = this.bytes;\n\t      var predefined = false;\n\t      var format, i, ii;\n\t      var raw = null;\n\t      function readSupplement() {\n\t        var supplementsCount = bytes[pos++];\n\t        for (i = 0; i < supplementsCount; i++) {\n\t          var code = bytes[pos++];\n\t          var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n\t          encoding[code] = charset.indexOf(strings.get(sid));\n\t        }\n\t      }\n\t      if (pos === 0 || pos === 1) {\n\t        predefined = true;\n\t        format = pos;\n\t        var baseEncoding = pos ? _encodings.ExpertEncoding : _encodings.StandardEncoding;\n\t        for (i = 0, ii = charset.length; i < ii; i++) {\n\t          var index = baseEncoding.indexOf(charset[i]);\n\t          if (index !== -1) {\n\t            encoding[index] = i;\n\t          }\n\t        }\n\t      } else {\n\t        var dataStart = pos;\n\t        format = bytes[pos++];\n\t        switch (format & 0x7f) {\n\t          case 0:\n\t            var glyphsCount = bytes[pos++];\n\t            for (i = 1; i <= glyphsCount; i++) {\n\t              encoding[bytes[pos++]] = i;\n\t            }\n\t            break;\n\t          case 1:\n\t            var rangesCount = bytes[pos++];\n\t            var gid = 1;\n\t            for (i = 0; i < rangesCount; i++) {\n\t              var start = bytes[pos++];\n\t              var left = bytes[pos++];\n\t              for (var j = start; j <= start + left; j++) {\n\t                encoding[j] = gid++;\n\t              }\n\t            }\n\t            break;\n\t          default:\n\t            throw new _util.FormatError('Unknown encoding format: ' + format + ' in CFF');\n\t        }\n\t        var dataEnd = pos;\n\t        if (format & 0x80) {\n\t          bytes[dataStart] &= 0x7f;\n\t          readSupplement();\n\t        }\n\t        raw = bytes.subarray(dataStart, dataEnd);\n\t      }\n\t      format = format & 0x7f;\n\t      return new CFFEncoding(predefined, format, encoding, raw);\n\t    },\n\t    parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n\t      var start = pos;\n\t      var bytes = this.bytes;\n\t      var format = bytes[pos++];\n\t      var fdSelect = [],\n\t          rawBytes;\n\t      var i,\n\t          invalidFirstGID = false;\n\t      switch (format) {\n\t        case 0:\n\t          for (i = 0; i < length; ++i) {\n\t            var id = bytes[pos++];\n\t            fdSelect.push(id);\n\t          }\n\t          rawBytes = bytes.subarray(start, pos);\n\t          break;\n\t        case 3:\n\t          var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n\t          for (i = 0; i < rangesCount; ++i) {\n\t            var first = bytes[pos++] << 8 | bytes[pos++];\n\t            if (i === 0 && first !== 0) {\n\t              (0, _util.warn)('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\n\t              invalidFirstGID = true;\n\t              first = 0;\n\t            }\n\t            var fdIndex = bytes[pos++];\n\t            var next = bytes[pos] << 8 | bytes[pos + 1];\n\t            for (var j = first; j < next; ++j) {\n\t              fdSelect.push(fdIndex);\n\t            }\n\t          }\n\t          pos += 2;\n\t          rawBytes = bytes.subarray(start, pos);\n\t          if (invalidFirstGID) {\n\t            rawBytes[3] = rawBytes[4] = 0;\n\t          }\n\t          break;\n\t        default:\n\t          throw new _util.FormatError('parseFDSelect: Unknown format \"' + format + '\".');\n\t      }\n\t      if (fdSelect.length !== length) {\n\t        throw new _util.FormatError('parseFDSelect: Invalid font data.');\n\t      }\n\t      return new CFFFDSelect(fdSelect, rawBytes);\n\t    }\n\t  };\n\t  return CFFParser;\n\t}();\n\tvar CFF = function CFFClosure() {\n\t  function CFF() {\n\t    this.header = null;\n\t    this.names = [];\n\t    this.topDict = null;\n\t    this.strings = new CFFStrings();\n\t    this.globalSubrIndex = null;\n\t    this.encoding = null;\n\t    this.charset = null;\n\t    this.charStrings = null;\n\t    this.fdArray = [];\n\t    this.fdSelect = null;\n\t    this.isCIDFont = false;\n\t  }\n\t  return CFF;\n\t}();\n\tvar CFFHeader = function CFFHeaderClosure() {\n\t  function CFFHeader(major, minor, hdrSize, offSize) {\n\t    this.major = major;\n\t    this.minor = minor;\n\t    this.hdrSize = hdrSize;\n\t    this.offSize = offSize;\n\t  }\n\t  return CFFHeader;\n\t}();\n\tvar CFFStrings = function CFFStringsClosure() {\n\t  function CFFStrings() {\n\t    this.strings = [];\n\t  }\n\t  CFFStrings.prototype = {\n\t    get: function CFFStrings_get(index) {\n\t      if (index >= 0 && index <= 390) {\n\t        return CFFStandardStrings[index];\n\t      }\n\t      if (index - 391 <= this.strings.length) {\n\t        return this.strings[index - 391];\n\t      }\n\t      return CFFStandardStrings[0];\n\t    },\n\t    add: function CFFStrings_add(value) {\n\t      this.strings.push(value);\n\t    },\n\t    get count() {\n\t      return this.strings.length;\n\t    }\n\t  };\n\t  return CFFStrings;\n\t}();\n\tvar CFFIndex = function CFFIndexClosure() {\n\t  function CFFIndex() {\n\t    this.objects = [];\n\t    this.length = 0;\n\t  }\n\t  CFFIndex.prototype = {\n\t    add: function CFFIndex_add(data) {\n\t      this.length += data.length;\n\t      this.objects.push(data);\n\t    },\n\t    set: function CFFIndex_set(index, data) {\n\t      this.length += data.length - this.objects[index].length;\n\t      this.objects[index] = data;\n\t    },\n\t    get: function CFFIndex_get(index) {\n\t      return this.objects[index];\n\t    },\n\t    get count() {\n\t      return this.objects.length;\n\t    }\n\t  };\n\t  return CFFIndex;\n\t}();\n\tvar CFFDict = function CFFDictClosure() {\n\t  function CFFDict(tables, strings) {\n\t    this.keyToNameMap = tables.keyToNameMap;\n\t    this.nameToKeyMap = tables.nameToKeyMap;\n\t    this.defaults = tables.defaults;\n\t    this.types = tables.types;\n\t    this.opcodes = tables.opcodes;\n\t    this.order = tables.order;\n\t    this.strings = strings;\n\t    this.values = Object.create(null);\n\t  }\n\t  CFFDict.prototype = {\n\t    setByKey: function CFFDict_setByKey(key, value) {\n\t      if (!(key in this.keyToNameMap)) {\n\t        return false;\n\t      }\n\t      var valueLength = value.length;\n\t      if (valueLength === 0) {\n\t        return true;\n\t      }\n\t      for (var i = 0; i < valueLength; i++) {\n\t        if (isNaN(value[i])) {\n\t          (0, _util.warn)('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n\t          return true;\n\t        }\n\t      }\n\t      var type = this.types[key];\n\t      if (type === 'num' || type === 'sid' || type === 'offset') {\n\t        value = value[0];\n\t      }\n\t      this.values[key] = value;\n\t      return true;\n\t    },\n\t    setByName: function CFFDict_setByName(name, value) {\n\t      if (!(name in this.nameToKeyMap)) {\n\t        throw new _util.FormatError('Invalid dictionary name \"' + name + '\"');\n\t      }\n\t      this.values[this.nameToKeyMap[name]] = value;\n\t    },\n\t    hasName: function CFFDict_hasName(name) {\n\t      return this.nameToKeyMap[name] in this.values;\n\t    },\n\t    getByName: function CFFDict_getByName(name) {\n\t      if (!(name in this.nameToKeyMap)) {\n\t        throw new _util.FormatError('Invalid dictionary name ' + name + '\"');\n\t      }\n\t      var key = this.nameToKeyMap[name];\n\t      if (!(key in this.values)) {\n\t        return this.defaults[key];\n\t      }\n\t      return this.values[key];\n\t    },\n\t    removeByName: function CFFDict_removeByName(name) {\n\t      delete this.values[this.nameToKeyMap[name]];\n\t    }\n\t  };\n\t  CFFDict.createTables = function CFFDict_createTables(layout) {\n\t    var tables = {\n\t      keyToNameMap: {},\n\t      nameToKeyMap: {},\n\t      defaults: {},\n\t      types: {},\n\t      opcodes: {},\n\t      order: []\n\t    };\n\t    for (var i = 0, ii = layout.length; i < ii; ++i) {\n\t      var entry = layout[i];\n\t      var key = Array.isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n\t      tables.keyToNameMap[key] = entry[1];\n\t      tables.nameToKeyMap[entry[1]] = key;\n\t      tables.types[key] = entry[2];\n\t      tables.defaults[key] = entry[3];\n\t      tables.opcodes[key] = Array.isArray(entry[0]) ? entry[0] : [entry[0]];\n\t      tables.order.push(key);\n\t    }\n\t    return tables;\n\t  };\n\t  return CFFDict;\n\t}();\n\tvar CFFTopDict = function CFFTopDictClosure() {\n\t  var layout = [[[12, 30], 'ROS', ['sid', 'sid', 'num'], null], [[12, 20], 'SyntheticBase', 'num', null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'num', 0], [[12, 2], 'ItalicAngle', 'num', 0], [[12, 3], 'UnderlinePosition', 'num', -100], [[12, 4], 'UnderlineThickness', 'num', 50], [[12, 5], 'PaintType', 'num', 0], [[12, 6], 'CharstringType', 'num', 2], [[12, 7], 'FontMatrix', ['num', 'num', 'num', 'num', 'num', 'num'], [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'num', null], [5, 'FontBBox', ['num', 'num', 'num', 'num'], [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'num', 0], [14, 'XUID', 'array', null], [15, 'charset', 'offset', 0], [16, 'Encoding', 'offset', 0], [17, 'CharStrings', 'offset', 0], [18, 'Private', ['offset', 'offset'], null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], [[12, 31], 'CIDFontVersion', 'num', 0], [[12, 32], 'CIDFontRevision', 'num', 0], [[12, 33], 'CIDFontType', 'num', 0], [[12, 34], 'CIDCount', 'num', 8720], [[12, 35], 'UIDBase', 'num', null], [[12, 37], 'FDSelect', 'offset', null], [[12, 36], 'FDArray', 'offset', null], [[12, 38], 'FontName', 'sid', null]];\n\t  var tables = null;\n\t  function CFFTopDict(strings) {\n\t    if (tables === null) {\n\t      tables = CFFDict.createTables(layout);\n\t    }\n\t    CFFDict.call(this, tables, strings);\n\t    this.privateDict = null;\n\t  }\n\t  CFFTopDict.prototype = Object.create(CFFDict.prototype);\n\t  return CFFTopDict;\n\t}();\n\tvar CFFPrivateDict = function CFFPrivateDictClosure() {\n\t  var layout = [[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'num', 0.039625], [[12, 10], 'BlueShift', 'num', 7], [[12, 11], 'BlueFuzz', 'num', 1], [10, 'StdHW', 'num', null], [11, 'StdVW', 'num', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'num', 0], [[12, 17], 'LanguageGroup', 'num', 0], [[12, 18], 'ExpansionFactor', 'num', 0.06], [[12, 19], 'initialRandomSeed', 'num', 0], [20, 'defaultWidthX', 'num', 0], [21, 'nominalWidthX', 'num', 0], [19, 'Subrs', 'offset', null]];\n\t  var tables = null;\n\t  function CFFPrivateDict(strings) {\n\t    if (tables === null) {\n\t      tables = CFFDict.createTables(layout);\n\t    }\n\t    CFFDict.call(this, tables, strings);\n\t    this.subrsIndex = null;\n\t  }\n\t  CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n\t  return CFFPrivateDict;\n\t}();\n\tvar CFFCharsetPredefinedTypes = {\n\t  ISO_ADOBE: 0,\n\t  EXPERT: 1,\n\t  EXPERT_SUBSET: 2\n\t};\n\tvar CFFCharset = function CFFCharsetClosure() {\n\t  function CFFCharset(predefined, format, charset, raw) {\n\t    this.predefined = predefined;\n\t    this.format = format;\n\t    this.charset = charset;\n\t    this.raw = raw;\n\t  }\n\t  return CFFCharset;\n\t}();\n\tvar CFFEncoding = function CFFEncodingClosure() {\n\t  function CFFEncoding(predefined, format, encoding, raw) {\n\t    this.predefined = predefined;\n\t    this.format = format;\n\t    this.encoding = encoding;\n\t    this.raw = raw;\n\t  }\n\t  return CFFEncoding;\n\t}();\n\tvar CFFFDSelect = function CFFFDSelectClosure() {\n\t  function CFFFDSelect(fdSelect, raw) {\n\t    this.fdSelect = fdSelect;\n\t    this.raw = raw;\n\t  }\n\t  CFFFDSelect.prototype = {\n\t    getFDIndex: function CFFFDSelect_get(glyphIndex) {\n\t      if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n\t        return -1;\n\t      }\n\t      return this.fdSelect[glyphIndex];\n\t    }\n\t  };\n\t  return CFFFDSelect;\n\t}();\n\tvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\n\t  function CFFOffsetTracker() {\n\t    this.offsets = Object.create(null);\n\t  }\n\t  CFFOffsetTracker.prototype = {\n\t    isTracking: function CFFOffsetTracker_isTracking(key) {\n\t      return key in this.offsets;\n\t    },\n\t    track: function CFFOffsetTracker_track(key, location) {\n\t      if (key in this.offsets) {\n\t        throw new _util.FormatError('Already tracking location of ' + key);\n\t      }\n\t      this.offsets[key] = location;\n\t    },\n\t    offset: function CFFOffsetTracker_offset(value) {\n\t      for (var key in this.offsets) {\n\t        this.offsets[key] += value;\n\t      }\n\t    },\n\t    setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\n\t      if (!(key in this.offsets)) {\n\t        throw new _util.FormatError('Not tracking location of ' + key);\n\t      }\n\t      var data = output.data;\n\t      var dataOffset = this.offsets[key];\n\t      var size = 5;\n\t      for (var i = 0, ii = values.length; i < ii; ++i) {\n\t        var offset0 = i * size + dataOffset;\n\t        var offset1 = offset0 + 1;\n\t        var offset2 = offset0 + 2;\n\t        var offset3 = offset0 + 3;\n\t        var offset4 = offset0 + 4;\n\t        if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n\t          throw new _util.FormatError('writing to an offset that is not empty');\n\t        }\n\t        var value = values[i];\n\t        data[offset0] = 0x1d;\n\t        data[offset1] = value >> 24 & 0xFF;\n\t        data[offset2] = value >> 16 & 0xFF;\n\t        data[offset3] = value >> 8 & 0xFF;\n\t        data[offset4] = value & 0xFF;\n\t      }\n\t    }\n\t  };\n\t  return CFFOffsetTracker;\n\t}();\n\tvar CFFCompiler = function CFFCompilerClosure() {\n\t  function CFFCompiler(cff) {\n\t    this.cff = cff;\n\t  }\n\t  CFFCompiler.prototype = {\n\t    compile: function CFFCompiler_compile() {\n\t      var cff = this.cff;\n\t      var output = {\n\t        data: [],\n\t        length: 0,\n\t        add: function CFFCompiler_add(data) {\n\t          this.data = this.data.concat(data);\n\t          this.length = this.data.length;\n\t        }\n\t      };\n\t      var header = this.compileHeader(cff.header);\n\t      output.add(header);\n\t      var nameIndex = this.compileNameIndex(cff.names);\n\t      output.add(nameIndex);\n\t      if (cff.isCIDFont) {\n\t        if (cff.topDict.hasName('FontMatrix')) {\n\t          var base = cff.topDict.getByName('FontMatrix');\n\t          cff.topDict.removeByName('FontMatrix');\n\t          for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n\t            var subDict = cff.fdArray[i];\n\t            var matrix = base.slice(0);\n\t            if (subDict.hasName('FontMatrix')) {\n\t              matrix = _util.Util.transform(matrix, subDict.getByName('FontMatrix'));\n\t            }\n\t            subDict.setByName('FontMatrix', matrix);\n\t          }\n\t        }\n\t      }\n\t      var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n\t      output.add(compiled.output);\n\t      var topDictTracker = compiled.trackers[0];\n\t      var stringIndex = this.compileStringIndex(cff.strings.strings);\n\t      output.add(stringIndex);\n\t      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n\t      output.add(globalSubrIndex);\n\t      if (cff.encoding && cff.topDict.hasName('Encoding')) {\n\t        if (cff.encoding.predefined) {\n\t          topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\n\t        } else {\n\t          var encoding = this.compileEncoding(cff.encoding);\n\t          topDictTracker.setEntryLocation('Encoding', [output.length], output);\n\t          output.add(encoding);\n\t        }\n\t      }\n\t      if (cff.charset && cff.topDict.hasName('charset')) {\n\t        if (cff.charset.predefined) {\n\t          topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\n\t        } else {\n\t          var charset = this.compileCharset(cff.charset);\n\t          topDictTracker.setEntryLocation('charset', [output.length], output);\n\t          output.add(charset);\n\t        }\n\t      }\n\t      var charStrings = this.compileCharStrings(cff.charStrings);\n\t      topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n\t      output.add(charStrings);\n\t      if (cff.isCIDFont) {\n\t        topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n\t        var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n\t        output.add(fdSelect);\n\t        compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n\t        topDictTracker.setEntryLocation('FDArray', [output.length], output);\n\t        output.add(compiled.output);\n\t        var fontDictTrackers = compiled.trackers;\n\t        this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n\t      }\n\t      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n\t      output.add([0]);\n\t      return output.data;\n\t    },\n\t    encodeNumber: function CFFCompiler_encodeNumber(value) {\n\t      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\n\t        return this.encodeInteger(value);\n\t      }\n\t      return this.encodeFloat(value);\n\t    },\n\t    encodeFloat: function CFFCompiler_encodeFloat(num) {\n\t      var value = num.toString();\n\t      var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n\t      if (m) {\n\t        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n\t        value = (Math.round(num * epsilon) / epsilon).toString();\n\t      }\n\t      var nibbles = '';\n\t      var i, ii;\n\t      for (i = 0, ii = value.length; i < ii; ++i) {\n\t        var a = value[i];\n\t        if (a === 'e') {\n\t          nibbles += value[++i] === '-' ? 'c' : 'b';\n\t        } else if (a === '.') {\n\t          nibbles += 'a';\n\t        } else if (a === '-') {\n\t          nibbles += 'e';\n\t        } else {\n\t          nibbles += a;\n\t        }\n\t      }\n\t      nibbles += nibbles.length & 1 ? 'f' : 'ff';\n\t      var out = [30];\n\t      for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n\t        out.push(parseInt(nibbles.substr(i, 2), 16));\n\t      }\n\t      return out;\n\t    },\n\t    encodeInteger: function CFFCompiler_encodeInteger(value) {\n\t      var code;\n\t      if (value >= -107 && value <= 107) {\n\t        code = [value + 139];\n\t      } else if (value >= 108 && value <= 1131) {\n\t        value = value - 108;\n\t        code = [(value >> 8) + 247, value & 0xFF];\n\t      } else if (value >= -1131 && value <= -108) {\n\t        value = -value - 108;\n\t        code = [(value >> 8) + 251, value & 0xFF];\n\t      } else if (value >= -32768 && value <= 32767) {\n\t        code = [0x1c, value >> 8 & 0xFF, value & 0xFF];\n\t      } else {\n\t        code = [0x1d, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF];\n\t      }\n\t      return code;\n\t    },\n\t    compileHeader: function CFFCompiler_compileHeader(header) {\n\t      return [header.major, header.minor, header.hdrSize, header.offSize];\n\t    },\n\t    compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n\t      var nameIndex = new CFFIndex();\n\t      for (var i = 0, ii = names.length; i < ii; ++i) {\n\t        var name = names[i];\n\t        var length = Math.min(name.length, 127);\n\t        var sanitizedName = new Array(length);\n\t        for (var j = 0; j < length; j++) {\n\t          var char = name[j];\n\t          if (char < '!' || char > '~' || char === '[' || char === ']' || char === '(' || char === ')' || char === '{' || char === '}' || char === '<' || char === '>' || char === '/' || char === '%') {\n\t            char = '_';\n\t          }\n\t          sanitizedName[j] = char;\n\t        }\n\t        sanitizedName = sanitizedName.join('');\n\t        if (sanitizedName === '') {\n\t          sanitizedName = 'Bad_Font_Name';\n\t        }\n\t        nameIndex.add((0, _util.stringToBytes)(sanitizedName));\n\t      }\n\t      return this.compileIndex(nameIndex);\n\t    },\n\t    compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\n\t      var fontDictTrackers = [];\n\t      var fdArrayIndex = new CFFIndex();\n\t      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n\t        var fontDict = dicts[i];\n\t        if (removeCidKeys) {\n\t          fontDict.removeByName('CIDFontVersion');\n\t          fontDict.removeByName('CIDFontRevision');\n\t          fontDict.removeByName('CIDFontType');\n\t          fontDict.removeByName('CIDCount');\n\t          fontDict.removeByName('UIDBase');\n\t        }\n\t        var fontDictTracker = new CFFOffsetTracker();\n\t        var fontDictData = this.compileDict(fontDict, fontDictTracker);\n\t        fontDictTrackers.push(fontDictTracker);\n\t        fdArrayIndex.add(fontDictData);\n\t        fontDictTracker.offset(length);\n\t      }\n\t      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n\t      return {\n\t        trackers: fontDictTrackers,\n\t        output: fdArrayIndex\n\t      };\n\t    },\n\t    compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\n\t      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n\t        var fontDict = dicts[i];\n\t        var privateDict = fontDict.privateDict;\n\t        if (!privateDict || !fontDict.hasName('Private')) {\n\t          throw new _util.FormatError('There must be a private dictionary.');\n\t        }\n\t        var privateDictTracker = new CFFOffsetTracker();\n\t        var privateDictData = this.compileDict(privateDict, privateDictTracker);\n\t        var outputLength = output.length;\n\t        privateDictTracker.offset(outputLength);\n\t        if (!privateDictData.length) {\n\t          outputLength = 0;\n\t        }\n\t        trackers[i].setEntryLocation('Private', [privateDictData.length, outputLength], output);\n\t        output.add(privateDictData);\n\t        if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n\t          var subrs = this.compileIndex(privateDict.subrsIndex);\n\t          privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\n\t          output.add(subrs);\n\t        }\n\t      }\n\t    },\n\t    compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n\t      var out = [];\n\t      var order = dict.order;\n\t      for (var i = 0; i < order.length; ++i) {\n\t        var key = order[i];\n\t        if (!(key in dict.values)) {\n\t          continue;\n\t        }\n\t        var values = dict.values[key];\n\t        var types = dict.types[key];\n\t        if (!Array.isArray(types)) {\n\t          types = [types];\n\t        }\n\t        if (!Array.isArray(values)) {\n\t          values = [values];\n\t        }\n\t        if (values.length === 0) {\n\t          continue;\n\t        }\n\t        for (var j = 0, jj = types.length; j < jj; ++j) {\n\t          var type = types[j];\n\t          var value = values[j];\n\t          switch (type) {\n\t            case 'num':\n\t            case 'sid':\n\t              out = out.concat(this.encodeNumber(value));\n\t              break;\n\t            case 'offset':\n\t              var name = dict.keyToNameMap[key];\n\t              if (!offsetTracker.isTracking(name)) {\n\t                offsetTracker.track(name, out.length);\n\t              }\n\t              out = out.concat([0x1d, 0, 0, 0, 0]);\n\t              break;\n\t            case 'array':\n\t            case 'delta':\n\t              out = out.concat(this.encodeNumber(value));\n\t              for (var k = 1, kk = values.length; k < kk; ++k) {\n\t                out = out.concat(this.encodeNumber(values[k]));\n\t              }\n\t              break;\n\t            default:\n\t              throw new _util.FormatError('Unknown data type of ' + type);\n\t          }\n\t        }\n\t        out = out.concat(dict.opcodes[key]);\n\t      }\n\t      return out;\n\t    },\n\t    compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n\t      var stringIndex = new CFFIndex();\n\t      for (var i = 0, ii = strings.length; i < ii; ++i) {\n\t        stringIndex.add((0, _util.stringToBytes)(strings[i]));\n\t      }\n\t      return this.compileIndex(stringIndex);\n\t    },\n\t    compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n\t      var globalSubrIndex = this.cff.globalSubrIndex;\n\t      this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n\t    },\n\t    compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n\t      return this.compileIndex(charStrings);\n\t    },\n\t    compileCharset: function CFFCompiler_compileCharset(charset) {\n\t      return this.compileTypedArray(charset.raw);\n\t    },\n\t    compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n\t      return this.compileTypedArray(encoding.raw);\n\t    },\n\t    compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n\t      return this.compileTypedArray(fdSelect);\n\t    },\n\t    compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n\t      var out = [];\n\t      for (var i = 0, ii = data.length; i < ii; ++i) {\n\t        out[i] = data[i];\n\t      }\n\t      return out;\n\t    },\n\t    compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n\t      trackers = trackers || [];\n\t      var objects = index.objects;\n\t      var count = objects.length;\n\t      if (count === 0) {\n\t        return [0, 0, 0];\n\t      }\n\t      var data = [count >> 8 & 0xFF, count & 0xff];\n\t      var lastOffset = 1,\n\t          i;\n\t      for (i = 0; i < count; ++i) {\n\t        lastOffset += objects[i].length;\n\t      }\n\t      var offsetSize;\n\t      if (lastOffset < 0x100) {\n\t        offsetSize = 1;\n\t      } else if (lastOffset < 0x10000) {\n\t        offsetSize = 2;\n\t      } else if (lastOffset < 0x1000000) {\n\t        offsetSize = 3;\n\t      } else {\n\t        offsetSize = 4;\n\t      }\n\t      data.push(offsetSize);\n\t      var relativeOffset = 1;\n\t      for (i = 0; i < count + 1; i++) {\n\t        if (offsetSize === 1) {\n\t          data.push(relativeOffset & 0xFF);\n\t        } else if (offsetSize === 2) {\n\t          data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n\t        } else if (offsetSize === 3) {\n\t          data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n\t        } else {\n\t          data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n\t        }\n\t        if (objects[i]) {\n\t          relativeOffset += objects[i].length;\n\t        }\n\t      }\n\t      for (i = 0; i < count; i++) {\n\t        if (trackers[i]) {\n\t          trackers[i].offset(data.length);\n\t        }\n\t        for (var j = 0, jj = objects[i].length; j < jj; j++) {\n\t          data.push(objects[i][j]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t  };\n\t  return CFFCompiler;\n\t}();\n\texports.CFFStandardStrings = CFFStandardStrings;\n\texports.CFFParser = CFFParser;\n\texports.CFF = CFF;\n\texports.CFFHeader = CFFHeader;\n\texports.CFFStrings = CFFStrings;\n\texports.CFFIndex = CFFIndex;\n\texports.CFFCharset = CFFCharset;\n\texports.CFFTopDict = CFFTopDict;\n\texports.CFFPrivateDict = CFFPrivateDict;\n\texports.CFFCompiler = CFFCompiler;\n\t\n\t/***/ }),\n\t/* 79 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.getSupplementalGlyphMapForArialBlack = exports.getGlyphMapForStandardFonts = exports.getSymbolsFonts = exports.getSerifFonts = exports.getNonStdFontMap = exports.getStdFontMap = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar getStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n\t  t['ArialNarrow'] = 'Helvetica';\n\t  t['ArialNarrow-Bold'] = 'Helvetica-Bold';\n\t  t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\n\t  t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\n\t  t['ArialBlack'] = 'Helvetica';\n\t  t['ArialBlack-Bold'] = 'Helvetica-Bold';\n\t  t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\n\t  t['ArialBlack-Italic'] = 'Helvetica-Oblique';\n\t  t['Arial-Black'] = 'Helvetica';\n\t  t['Arial-Black-Bold'] = 'Helvetica-Bold';\n\t  t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\n\t  t['Arial-Black-Italic'] = 'Helvetica-Oblique';\n\t  t['Arial'] = 'Helvetica';\n\t  t['Arial-Bold'] = 'Helvetica-Bold';\n\t  t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\n\t  t['Arial-Italic'] = 'Helvetica-Oblique';\n\t  t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\n\t  t['Arial-BoldMT'] = 'Helvetica-Bold';\n\t  t['Arial-ItalicMT'] = 'Helvetica-Oblique';\n\t  t['ArialMT'] = 'Helvetica';\n\t  t['Courier-Bold'] = 'Courier-Bold';\n\t  t['Courier-BoldItalic'] = 'Courier-BoldOblique';\n\t  t['Courier-Italic'] = 'Courier-Oblique';\n\t  t['CourierNew'] = 'Courier';\n\t  t['CourierNew-Bold'] = 'Courier-Bold';\n\t  t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\n\t  t['CourierNew-Italic'] = 'Courier-Oblique';\n\t  t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\n\t  t['CourierNewPS-BoldMT'] = 'Courier-Bold';\n\t  t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\n\t  t['CourierNewPSMT'] = 'Courier';\n\t  t['Helvetica'] = 'Helvetica';\n\t  t['Helvetica-Bold'] = 'Helvetica-Bold';\n\t  t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\n\t  t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\n\t  t['Helvetica-Italic'] = 'Helvetica-Oblique';\n\t  t['Helvetica-Oblique'] = 'Helvetica-Oblique';\n\t  t['SegoeUISymbol'] = 'Helvetica';\n\t  t['Symbol-Bold'] = 'Symbol';\n\t  t['Symbol-BoldItalic'] = 'Symbol';\n\t  t['Symbol-Italic'] = 'Symbol';\n\t  t['TimesNewRoman'] = 'Times-Roman';\n\t  t['TimesNewRoman-Bold'] = 'Times-Bold';\n\t  t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\n\t  t['TimesNewRoman-Italic'] = 'Times-Italic';\n\t  t['TimesNewRomanPS'] = 'Times-Roman';\n\t  t['TimesNewRomanPS-Bold'] = 'Times-Bold';\n\t  t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\n\t  t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\n\t  t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\n\t  t['TimesNewRomanPS-Italic'] = 'Times-Italic';\n\t  t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\n\t  t['TimesNewRomanPSMT'] = 'Times-Roman';\n\t  t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\n\t  t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\n\t  t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\n\t});\n\tvar getNonStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n\t  t['CenturyGothic'] = 'Helvetica';\n\t  t['CenturyGothic-Bold'] = 'Helvetica-Bold';\n\t  t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\n\t  t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\n\t  t['ComicSansMS'] = 'Comic Sans MS';\n\t  t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\n\t  t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\n\t  t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\n\t  t['LucidaConsole'] = 'Courier';\n\t  t['LucidaConsole-Bold'] = 'Courier-Bold';\n\t  t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\n\t  t['LucidaConsole-Italic'] = 'Courier-Oblique';\n\t  t['MS-Gothic'] = 'MS Gothic';\n\t  t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\n\t  t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\n\t  t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\n\t  t['MS-Mincho'] = 'MS Mincho';\n\t  t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\n\t  t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\n\t  t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\n\t  t['MS-PGothic'] = 'MS PGothic';\n\t  t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\n\t  t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\n\t  t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\n\t  t['MS-PMincho'] = 'MS PMincho';\n\t  t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\n\t  t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\n\t  t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\n\t  t['NuptialScript'] = 'Times-Italic';\n\t  t['Wingdings'] = 'ZapfDingbats';\n\t});\n\tvar getSerifFonts = (0, _util.getLookupTableFactory)(function (t) {\n\t  t['Adobe Jenson'] = true;\n\t  t['Adobe Text'] = true;\n\t  t['Albertus'] = true;\n\t  t['Aldus'] = true;\n\t  t['Alexandria'] = true;\n\t  t['Algerian'] = true;\n\t  t['American Typewriter'] = true;\n\t  t['Antiqua'] = true;\n\t  t['Apex'] = true;\n\t  t['Arno'] = true;\n\t  t['Aster'] = true;\n\t  t['Aurora'] = true;\n\t  t['Baskerville'] = true;\n\t  t['Bell'] = true;\n\t  t['Bembo'] = true;\n\t  t['Bembo Schoolbook'] = true;\n\t  t['Benguiat'] = true;\n\t  t['Berkeley Old Style'] = true;\n\t  t['Bernhard Modern'] = true;\n\t  t['Berthold City'] = true;\n\t  t['Bodoni'] = true;\n\t  t['Bauer Bodoni'] = true;\n\t  t['Book Antiqua'] = true;\n\t  t['Bookman'] = true;\n\t  t['Bordeaux Roman'] = true;\n\t  t['Californian FB'] = true;\n\t  t['Calisto'] = true;\n\t  t['Calvert'] = true;\n\t  t['Capitals'] = true;\n\t  t['Cambria'] = true;\n\t  t['Cartier'] = true;\n\t  t['Caslon'] = true;\n\t  t['Catull'] = true;\n\t  t['Centaur'] = true;\n\t  t['Century Old Style'] = true;\n\t  t['Century Schoolbook'] = true;\n\t  t['Chaparral'] = true;\n\t  t['Charis SIL'] = true;\n\t  t['Cheltenham'] = true;\n\t  t['Cholla Slab'] = true;\n\t  t['Clarendon'] = true;\n\t  t['Clearface'] = true;\n\t  t['Cochin'] = true;\n\t  t['Colonna'] = true;\n\t  t['Computer Modern'] = true;\n\t  t['Concrete Roman'] = true;\n\t  t['Constantia'] = true;\n\t  t['Cooper Black'] = true;\n\t  t['Corona'] = true;\n\t  t['Ecotype'] = true;\n\t  t['Egyptienne'] = true;\n\t  t['Elephant'] = true;\n\t  t['Excelsior'] = true;\n\t  t['Fairfield'] = true;\n\t  t['FF Scala'] = true;\n\t  t['Folkard'] = true;\n\t  t['Footlight'] = true;\n\t  t['FreeSerif'] = true;\n\t  t['Friz Quadrata'] = true;\n\t  t['Garamond'] = true;\n\t  t['Gentium'] = true;\n\t  t['Georgia'] = true;\n\t  t['Gloucester'] = true;\n\t  t['Goudy Old Style'] = true;\n\t  t['Goudy Schoolbook'] = true;\n\t  t['Goudy Pro Font'] = true;\n\t  t['Granjon'] = true;\n\t  t['Guardian Egyptian'] = true;\n\t  t['Heather'] = true;\n\t  t['Hercules'] = true;\n\t  t['High Tower Text'] = true;\n\t  t['Hiroshige'] = true;\n\t  t['Hoefler Text'] = true;\n\t  t['Humana Serif'] = true;\n\t  t['Imprint'] = true;\n\t  t['Ionic No. 5'] = true;\n\t  t['Janson'] = true;\n\t  t['Joanna'] = true;\n\t  t['Korinna'] = true;\n\t  t['Lexicon'] = true;\n\t  t['Liberation Serif'] = true;\n\t  t['Linux Libertine'] = true;\n\t  t['Literaturnaya'] = true;\n\t  t['Lucida'] = true;\n\t  t['Lucida Bright'] = true;\n\t  t['Melior'] = true;\n\t  t['Memphis'] = true;\n\t  t['Miller'] = true;\n\t  t['Minion'] = true;\n\t  t['Modern'] = true;\n\t  t['Mona Lisa'] = true;\n\t  t['Mrs Eaves'] = true;\n\t  t['MS Serif'] = true;\n\t  t['Museo Slab'] = true;\n\t  t['New York'] = true;\n\t  t['Nimbus Roman'] = true;\n\t  t['NPS Rawlinson Roadway'] = true;\n\t  t['NuptialScript'] = true;\n\t  t['Palatino'] = true;\n\t  t['Perpetua'] = true;\n\t  t['Plantin'] = true;\n\t  t['Plantin Schoolbook'] = true;\n\t  t['Playbill'] = true;\n\t  t['Poor Richard'] = true;\n\t  t['Rawlinson Roadway'] = true;\n\t  t['Renault'] = true;\n\t  t['Requiem'] = true;\n\t  t['Rockwell'] = true;\n\t  t['Roman'] = true;\n\t  t['Rotis Serif'] = true;\n\t  t['Sabon'] = true;\n\t  t['Scala'] = true;\n\t  t['Seagull'] = true;\n\t  t['Sistina'] = true;\n\t  t['Souvenir'] = true;\n\t  t['STIX'] = true;\n\t  t['Stone Informal'] = true;\n\t  t['Stone Serif'] = true;\n\t  t['Sylfaen'] = true;\n\t  t['Times'] = true;\n\t  t['Trajan'] = true;\n\t  t['Trinité'] = true;\n\t  t['Trump Mediaeval'] = true;\n\t  t['Utopia'] = true;\n\t  t['Vale Type'] = true;\n\t  t['Bitstream Vera'] = true;\n\t  t['Vera Serif'] = true;\n\t  t['Versailles'] = true;\n\t  t['Wanted'] = true;\n\t  t['Weiss'] = true;\n\t  t['Wide Latin'] = true;\n\t  t['Windsor'] = true;\n\t  t['XITS'] = true;\n\t});\n\tvar getSymbolsFonts = (0, _util.getLookupTableFactory)(function (t) {\n\t  t['Dingbats'] = true;\n\t  t['Symbol'] = true;\n\t  t['ZapfDingbats'] = true;\n\t});\n\tvar getGlyphMapForStandardFonts = (0, _util.getLookupTableFactory)(function (t) {\n\t  t[2] = 10;\n\t  t[3] = 32;\n\t  t[4] = 33;\n\t  t[5] = 34;\n\t  t[6] = 35;\n\t  t[7] = 36;\n\t  t[8] = 37;\n\t  t[9] = 38;\n\t  t[10] = 39;\n\t  t[11] = 40;\n\t  t[12] = 41;\n\t  t[13] = 42;\n\t  t[14] = 43;\n\t  t[15] = 44;\n\t  t[16] = 45;\n\t  t[17] = 46;\n\t  t[18] = 47;\n\t  t[19] = 48;\n\t  t[20] = 49;\n\t  t[21] = 50;\n\t  t[22] = 51;\n\t  t[23] = 52;\n\t  t[24] = 53;\n\t  t[25] = 54;\n\t  t[26] = 55;\n\t  t[27] = 56;\n\t  t[28] = 57;\n\t  t[29] = 58;\n\t  t[30] = 894;\n\t  t[31] = 60;\n\t  t[32] = 61;\n\t  t[33] = 62;\n\t  t[34] = 63;\n\t  t[35] = 64;\n\t  t[36] = 65;\n\t  t[37] = 66;\n\t  t[38] = 67;\n\t  t[39] = 68;\n\t  t[40] = 69;\n\t  t[41] = 70;\n\t  t[42] = 71;\n\t  t[43] = 72;\n\t  t[44] = 73;\n\t  t[45] = 74;\n\t  t[46] = 75;\n\t  t[47] = 76;\n\t  t[48] = 77;\n\t  t[49] = 78;\n\t  t[50] = 79;\n\t  t[51] = 80;\n\t  t[52] = 81;\n\t  t[53] = 82;\n\t  t[54] = 83;\n\t  t[55] = 84;\n\t  t[56] = 85;\n\t  t[57] = 86;\n\t  t[58] = 87;\n\t  t[59] = 88;\n\t  t[60] = 89;\n\t  t[61] = 90;\n\t  t[62] = 91;\n\t  t[63] = 92;\n\t  t[64] = 93;\n\t  t[65] = 94;\n\t  t[66] = 95;\n\t  t[67] = 96;\n\t  t[68] = 97;\n\t  t[69] = 98;\n\t  t[70] = 99;\n\t  t[71] = 100;\n\t  t[72] = 101;\n\t  t[73] = 102;\n\t  t[74] = 103;\n\t  t[75] = 104;\n\t  t[76] = 105;\n\t  t[77] = 106;\n\t  t[78] = 107;\n\t  t[79] = 108;\n\t  t[80] = 109;\n\t  t[81] = 110;\n\t  t[82] = 111;\n\t  t[83] = 112;\n\t  t[84] = 113;\n\t  t[85] = 114;\n\t  t[86] = 115;\n\t  t[87] = 116;\n\t  t[88] = 117;\n\t  t[89] = 118;\n\t  t[90] = 119;\n\t  t[91] = 120;\n\t  t[92] = 121;\n\t  t[93] = 122;\n\t  t[94] = 123;\n\t  t[95] = 124;\n\t  t[96] = 125;\n\t  t[97] = 126;\n\t  t[98] = 196;\n\t  t[99] = 197;\n\t  t[100] = 199;\n\t  t[101] = 201;\n\t  t[102] = 209;\n\t  t[103] = 214;\n\t  t[104] = 220;\n\t  t[105] = 225;\n\t  t[106] = 224;\n\t  t[107] = 226;\n\t  t[108] = 228;\n\t  t[109] = 227;\n\t  t[110] = 229;\n\t  t[111] = 231;\n\t  t[112] = 233;\n\t  t[113] = 232;\n\t  t[114] = 234;\n\t  t[115] = 235;\n\t  t[116] = 237;\n\t  t[117] = 236;\n\t  t[118] = 238;\n\t  t[119] = 239;\n\t  t[120] = 241;\n\t  t[121] = 243;\n\t  t[122] = 242;\n\t  t[123] = 244;\n\t  t[124] = 246;\n\t  t[125] = 245;\n\t  t[126] = 250;\n\t  t[127] = 249;\n\t  t[128] = 251;\n\t  t[129] = 252;\n\t  t[130] = 8224;\n\t  t[131] = 176;\n\t  t[132] = 162;\n\t  t[133] = 163;\n\t  t[134] = 167;\n\t  t[135] = 8226;\n\t  t[136] = 182;\n\t  t[137] = 223;\n\t  t[138] = 174;\n\t  t[139] = 169;\n\t  t[140] = 8482;\n\t  t[141] = 180;\n\t  t[142] = 168;\n\t  t[143] = 8800;\n\t  t[144] = 198;\n\t  t[145] = 216;\n\t  t[146] = 8734;\n\t  t[147] = 177;\n\t  t[148] = 8804;\n\t  t[149] = 8805;\n\t  t[150] = 165;\n\t  t[151] = 181;\n\t  t[152] = 8706;\n\t  t[153] = 8721;\n\t  t[154] = 8719;\n\t  t[156] = 8747;\n\t  t[157] = 170;\n\t  t[158] = 186;\n\t  t[159] = 8486;\n\t  t[160] = 230;\n\t  t[161] = 248;\n\t  t[162] = 191;\n\t  t[163] = 161;\n\t  t[164] = 172;\n\t  t[165] = 8730;\n\t  t[166] = 402;\n\t  t[167] = 8776;\n\t  t[168] = 8710;\n\t  t[169] = 171;\n\t  t[170] = 187;\n\t  t[171] = 8230;\n\t  t[210] = 218;\n\t  t[223] = 711;\n\t  t[224] = 321;\n\t  t[225] = 322;\n\t  t[227] = 353;\n\t  t[229] = 382;\n\t  t[234] = 253;\n\t  t[252] = 263;\n\t  t[253] = 268;\n\t  t[254] = 269;\n\t  t[258] = 258;\n\t  t[260] = 260;\n\t  t[261] = 261;\n\t  t[265] = 280;\n\t  t[266] = 281;\n\t  t[268] = 283;\n\t  t[269] = 313;\n\t  t[275] = 323;\n\t  t[276] = 324;\n\t  t[278] = 328;\n\t  t[284] = 345;\n\t  t[285] = 346;\n\t  t[286] = 347;\n\t  t[292] = 367;\n\t  t[295] = 377;\n\t  t[296] = 378;\n\t  t[298] = 380;\n\t  t[305] = 963;\n\t  t[306] = 964;\n\t  t[307] = 966;\n\t  t[308] = 8215;\n\t  t[309] = 8252;\n\t  t[310] = 8319;\n\t  t[311] = 8359;\n\t  t[312] = 8592;\n\t  t[313] = 8593;\n\t  t[337] = 9552;\n\t  t[493] = 1039;\n\t  t[494] = 1040;\n\t  t[705] = 1524;\n\t  t[706] = 8362;\n\t  t[710] = 64288;\n\t  t[711] = 64298;\n\t  t[759] = 1617;\n\t  t[761] = 1776;\n\t  t[763] = 1778;\n\t  t[775] = 1652;\n\t  t[777] = 1764;\n\t  t[778] = 1780;\n\t  t[779] = 1781;\n\t  t[780] = 1782;\n\t  t[782] = 771;\n\t  t[783] = 64726;\n\t  t[786] = 8363;\n\t  t[788] = 8532;\n\t  t[790] = 768;\n\t  t[791] = 769;\n\t  t[792] = 768;\n\t  t[795] = 803;\n\t  t[797] = 64336;\n\t  t[798] = 64337;\n\t  t[799] = 64342;\n\t  t[800] = 64343;\n\t  t[801] = 64344;\n\t  t[802] = 64345;\n\t  t[803] = 64362;\n\t  t[804] = 64363;\n\t  t[805] = 64364;\n\t  t[2424] = 7821;\n\t  t[2425] = 7822;\n\t  t[2426] = 7823;\n\t  t[2427] = 7824;\n\t  t[2428] = 7825;\n\t  t[2429] = 7826;\n\t  t[2430] = 7827;\n\t  t[2433] = 7682;\n\t  t[2678] = 8045;\n\t  t[2679] = 8046;\n\t  t[2830] = 1552;\n\t  t[2838] = 686;\n\t  t[2840] = 751;\n\t  t[2842] = 753;\n\t  t[2843] = 754;\n\t  t[2844] = 755;\n\t  t[2846] = 757;\n\t  t[2856] = 767;\n\t  t[2857] = 848;\n\t  t[2858] = 849;\n\t  t[2862] = 853;\n\t  t[2863] = 854;\n\t  t[2864] = 855;\n\t  t[2865] = 861;\n\t  t[2866] = 862;\n\t  t[2906] = 7460;\n\t  t[2908] = 7462;\n\t  t[2909] = 7463;\n\t  t[2910] = 7464;\n\t  t[2912] = 7466;\n\t  t[2913] = 7467;\n\t  t[2914] = 7468;\n\t  t[2916] = 7470;\n\t  t[2917] = 7471;\n\t  t[2918] = 7472;\n\t  t[2920] = 7474;\n\t  t[2921] = 7475;\n\t  t[2922] = 7476;\n\t  t[2924] = 7478;\n\t  t[2925] = 7479;\n\t  t[2926] = 7480;\n\t  t[2928] = 7482;\n\t  t[2929] = 7483;\n\t  t[2930] = 7484;\n\t  t[2932] = 7486;\n\t  t[2933] = 7487;\n\t  t[2934] = 7488;\n\t  t[2936] = 7490;\n\t  t[2937] = 7491;\n\t  t[2938] = 7492;\n\t  t[2940] = 7494;\n\t  t[2941] = 7495;\n\t  t[2942] = 7496;\n\t  t[2944] = 7498;\n\t  t[2946] = 7500;\n\t  t[2948] = 7502;\n\t  t[2950] = 7504;\n\t  t[2951] = 7505;\n\t  t[2952] = 7506;\n\t  t[2954] = 7508;\n\t  t[2955] = 7509;\n\t  t[2956] = 7510;\n\t  t[2958] = 7512;\n\t  t[2959] = 7513;\n\t  t[2960] = 7514;\n\t  t[2962] = 7516;\n\t  t[2963] = 7517;\n\t  t[2964] = 7518;\n\t  t[2966] = 7520;\n\t  t[2967] = 7521;\n\t  t[2968] = 7522;\n\t  t[2970] = 7524;\n\t  t[2971] = 7525;\n\t  t[2972] = 7526;\n\t  t[2974] = 7528;\n\t  t[2975] = 7529;\n\t  t[2976] = 7530;\n\t  t[2978] = 1537;\n\t  t[2979] = 1538;\n\t  t[2980] = 1539;\n\t  t[2982] = 1549;\n\t  t[2983] = 1551;\n\t  t[2984] = 1552;\n\t  t[2986] = 1554;\n\t  t[2987] = 1555;\n\t  t[2988] = 1556;\n\t  t[2990] = 1623;\n\t  t[2991] = 1624;\n\t  t[2995] = 1775;\n\t  t[2999] = 1791;\n\t  t[3002] = 64290;\n\t  t[3003] = 64291;\n\t  t[3004] = 64292;\n\t  t[3006] = 64294;\n\t  t[3007] = 64295;\n\t  t[3008] = 64296;\n\t  t[3011] = 1900;\n\t  t[3014] = 8223;\n\t  t[3015] = 8244;\n\t  t[3017] = 7532;\n\t  t[3018] = 7533;\n\t  t[3019] = 7534;\n\t  t[3075] = 7590;\n\t  t[3076] = 7591;\n\t  t[3079] = 7594;\n\t  t[3080] = 7595;\n\t  t[3083] = 7598;\n\t  t[3084] = 7599;\n\t  t[3087] = 7602;\n\t  t[3088] = 7603;\n\t  t[3091] = 7606;\n\t  t[3092] = 7607;\n\t  t[3095] = 7610;\n\t  t[3096] = 7611;\n\t  t[3099] = 7614;\n\t  t[3100] = 7615;\n\t  t[3103] = 7618;\n\t  t[3104] = 7619;\n\t  t[3107] = 8337;\n\t  t[3108] = 8338;\n\t  t[3116] = 1884;\n\t  t[3119] = 1885;\n\t  t[3120] = 1885;\n\t  t[3123] = 1886;\n\t  t[3124] = 1886;\n\t  t[3127] = 1887;\n\t  t[3128] = 1887;\n\t  t[3131] = 1888;\n\t  t[3132] = 1888;\n\t  t[3135] = 1889;\n\t  t[3136] = 1889;\n\t  t[3139] = 1890;\n\t  t[3140] = 1890;\n\t  t[3143] = 1891;\n\t  t[3144] = 1891;\n\t  t[3147] = 1892;\n\t  t[3148] = 1892;\n\t  t[3153] = 580;\n\t  t[3154] = 581;\n\t  t[3157] = 584;\n\t  t[3158] = 585;\n\t  t[3161] = 588;\n\t  t[3162] = 589;\n\t  t[3165] = 891;\n\t  t[3166] = 892;\n\t  t[3169] = 1274;\n\t  t[3170] = 1275;\n\t  t[3173] = 1278;\n\t  t[3174] = 1279;\n\t  t[3181] = 7622;\n\t  t[3182] = 7623;\n\t  t[3282] = 11799;\n\t  t[3316] = 578;\n\t  t[3379] = 42785;\n\t  t[3393] = 1159;\n\t  t[3416] = 8377;\n\t});\n\tvar getSupplementalGlyphMapForArialBlack = (0, _util.getLookupTableFactory)(function (t) {\n\t  t[227] = 322;\n\t  t[264] = 261;\n\t  t[291] = 346;\n\t});\n\texports.getStdFontMap = getStdFontMap;\n\texports.getNonStdFontMap = getNonStdFontMap;\n\texports.getSerifFonts = getSerifFonts;\n\texports.getSymbolsFonts = getSymbolsFonts;\n\texports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\n\texports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\n\t\n\t/***/ }),\n\t/* 80 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar getLookupTableFactory = __w_pdfjs_require__(0).getLookupTableFactory;\n\tvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\n\t  t[63721] = 0x00A9;\n\t  t[63193] = 0x00A9;\n\t  t[63720] = 0x00AE;\n\t  t[63194] = 0x00AE;\n\t  t[63722] = 0x2122;\n\t  t[63195] = 0x2122;\n\t  t[63729] = 0x23A7;\n\t  t[63730] = 0x23A8;\n\t  t[63731] = 0x23A9;\n\t  t[63740] = 0x23AB;\n\t  t[63741] = 0x23AC;\n\t  t[63742] = 0x23AD;\n\t  t[63726] = 0x23A1;\n\t  t[63727] = 0x23A2;\n\t  t[63728] = 0x23A3;\n\t  t[63737] = 0x23A4;\n\t  t[63738] = 0x23A5;\n\t  t[63739] = 0x23A6;\n\t  t[63723] = 0x239B;\n\t  t[63724] = 0x239C;\n\t  t[63725] = 0x239D;\n\t  t[63734] = 0x239E;\n\t  t[63735] = 0x239F;\n\t  t[63736] = 0x23A0;\n\t});\n\tfunction mapSpecialUnicodeValues(code) {\n\t  if (code >= 0xFFF0 && code <= 0xFFFF) {\n\t    return 0;\n\t  } else if (code >= 0xF600 && code <= 0xF8FF) {\n\t    return getSpecialPUASymbols()[code] || code;\n\t  } else if (code === 0x00AD) {\n\t    return 0x002D;\n\t  }\n\t  return code;\n\t}\n\tfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\n\t  var unicode = glyphsUnicodeMap[name];\n\t  if (unicode !== undefined) {\n\t    return unicode;\n\t  }\n\t  if (!name) {\n\t    return -1;\n\t  }\n\t  if (name[0] === 'u') {\n\t    var nameLen = name.length,\n\t        hexStr;\n\t    if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\n\t      hexStr = name.substr(3);\n\t    } else if (nameLen >= 5 && nameLen <= 7) {\n\t      hexStr = name.substr(1);\n\t    } else {\n\t      return -1;\n\t    }\n\t    if (hexStr === hexStr.toUpperCase()) {\n\t      unicode = parseInt(hexStr, 16);\n\t      if (unicode >= 0) {\n\t        return unicode;\n\t      }\n\t    }\n\t  }\n\t  return -1;\n\t}\n\tvar UnicodeRanges = [{\n\t  'begin': 0x0000,\n\t  'end': 0x007F\n\t}, {\n\t  'begin': 0x0080,\n\t  'end': 0x00FF\n\t}, {\n\t  'begin': 0x0100,\n\t  'end': 0x017F\n\t}, {\n\t  'begin': 0x0180,\n\t  'end': 0x024F\n\t}, {\n\t  'begin': 0x0250,\n\t  'end': 0x02AF\n\t}, {\n\t  'begin': 0x02B0,\n\t  'end': 0x02FF\n\t}, {\n\t  'begin': 0x0300,\n\t  'end': 0x036F\n\t}, {\n\t  'begin': 0x0370,\n\t  'end': 0x03FF\n\t}, {\n\t  'begin': 0x2C80,\n\t  'end': 0x2CFF\n\t}, {\n\t  'begin': 0x0400,\n\t  'end': 0x04FF\n\t}, {\n\t  'begin': 0x0530,\n\t  'end': 0x058F\n\t}, {\n\t  'begin': 0x0590,\n\t  'end': 0x05FF\n\t}, {\n\t  'begin': 0xA500,\n\t  'end': 0xA63F\n\t}, {\n\t  'begin': 0x0600,\n\t  'end': 0x06FF\n\t}, {\n\t  'begin': 0x07C0,\n\t  'end': 0x07FF\n\t}, {\n\t  'begin': 0x0900,\n\t  'end': 0x097F\n\t}, {\n\t  'begin': 0x0980,\n\t  'end': 0x09FF\n\t}, {\n\t  'begin': 0x0A00,\n\t  'end': 0x0A7F\n\t}, {\n\t  'begin': 0x0A80,\n\t  'end': 0x0AFF\n\t}, {\n\t  'begin': 0x0B00,\n\t  'end': 0x0B7F\n\t}, {\n\t  'begin': 0x0B80,\n\t  'end': 0x0BFF\n\t}, {\n\t  'begin': 0x0C00,\n\t  'end': 0x0C7F\n\t}, {\n\t  'begin': 0x0C80,\n\t  'end': 0x0CFF\n\t}, {\n\t  'begin': 0x0D00,\n\t  'end': 0x0D7F\n\t}, {\n\t  'begin': 0x0E00,\n\t  'end': 0x0E7F\n\t}, {\n\t  'begin': 0x0E80,\n\t  'end': 0x0EFF\n\t}, {\n\t  'begin': 0x10A0,\n\t  'end': 0x10FF\n\t}, {\n\t  'begin': 0x1B00,\n\t  'end': 0x1B7F\n\t}, {\n\t  'begin': 0x1100,\n\t  'end': 0x11FF\n\t}, {\n\t  'begin': 0x1E00,\n\t  'end': 0x1EFF\n\t}, {\n\t  'begin': 0x1F00,\n\t  'end': 0x1FFF\n\t}, {\n\t  'begin': 0x2000,\n\t  'end': 0x206F\n\t}, {\n\t  'begin': 0x2070,\n\t  'end': 0x209F\n\t}, {\n\t  'begin': 0x20A0,\n\t  'end': 0x20CF\n\t}, {\n\t  'begin': 0x20D0,\n\t  'end': 0x20FF\n\t}, {\n\t  'begin': 0x2100,\n\t  'end': 0x214F\n\t}, {\n\t  'begin': 0x2150,\n\t  'end': 0x218F\n\t}, {\n\t  'begin': 0x2190,\n\t  'end': 0x21FF\n\t}, {\n\t  'begin': 0x2200,\n\t  'end': 0x22FF\n\t}, {\n\t  'begin': 0x2300,\n\t  'end': 0x23FF\n\t}, {\n\t  'begin': 0x2400,\n\t  'end': 0x243F\n\t}, {\n\t  'begin': 0x2440,\n\t  'end': 0x245F\n\t}, {\n\t  'begin': 0x2460,\n\t  'end': 0x24FF\n\t}, {\n\t  'begin': 0x2500,\n\t  'end': 0x257F\n\t}, {\n\t  'begin': 0x2580,\n\t  'end': 0x259F\n\t}, {\n\t  'begin': 0x25A0,\n\t  'end': 0x25FF\n\t}, {\n\t  'begin': 0x2600,\n\t  'end': 0x26FF\n\t}, {\n\t  'begin': 0x2700,\n\t  'end': 0x27BF\n\t}, {\n\t  'begin': 0x3000,\n\t  'end': 0x303F\n\t}, {\n\t  'begin': 0x3040,\n\t  'end': 0x309F\n\t}, {\n\t  'begin': 0x30A0,\n\t  'end': 0x30FF\n\t}, {\n\t  'begin': 0x3100,\n\t  'end': 0x312F\n\t}, {\n\t  'begin': 0x3130,\n\t  'end': 0x318F\n\t}, {\n\t  'begin': 0xA840,\n\t  'end': 0xA87F\n\t}, {\n\t  'begin': 0x3200,\n\t  'end': 0x32FF\n\t}, {\n\t  'begin': 0x3300,\n\t  'end': 0x33FF\n\t}, {\n\t  'begin': 0xAC00,\n\t  'end': 0xD7AF\n\t}, {\n\t  'begin': 0xD800,\n\t  'end': 0xDFFF\n\t}, {\n\t  'begin': 0x10900,\n\t  'end': 0x1091F\n\t}, {\n\t  'begin': 0x4E00,\n\t  'end': 0x9FFF\n\t}, {\n\t  'begin': 0xE000,\n\t  'end': 0xF8FF\n\t}, {\n\t  'begin': 0x31C0,\n\t  'end': 0x31EF\n\t}, {\n\t  'begin': 0xFB00,\n\t  'end': 0xFB4F\n\t}, {\n\t  'begin': 0xFB50,\n\t  'end': 0xFDFF\n\t}, {\n\t  'begin': 0xFE20,\n\t  'end': 0xFE2F\n\t}, {\n\t  'begin': 0xFE10,\n\t  'end': 0xFE1F\n\t}, {\n\t  'begin': 0xFE50,\n\t  'end': 0xFE6F\n\t}, {\n\t  'begin': 0xFE70,\n\t  'end': 0xFEFF\n\t}, {\n\t  'begin': 0xFF00,\n\t  'end': 0xFFEF\n\t}, {\n\t  'begin': 0xFFF0,\n\t  'end': 0xFFFF\n\t}, {\n\t  'begin': 0x0F00,\n\t  'end': 0x0FFF\n\t}, {\n\t  'begin': 0x0700,\n\t  'end': 0x074F\n\t}, {\n\t  'begin': 0x0780,\n\t  'end': 0x07BF\n\t}, {\n\t  'begin': 0x0D80,\n\t  'end': 0x0DFF\n\t}, {\n\t  'begin': 0x1000,\n\t  'end': 0x109F\n\t}, {\n\t  'begin': 0x1200,\n\t  'end': 0x137F\n\t}, {\n\t  'begin': 0x13A0,\n\t  'end': 0x13FF\n\t}, {\n\t  'begin': 0x1400,\n\t  'end': 0x167F\n\t}, {\n\t  'begin': 0x1680,\n\t  'end': 0x169F\n\t}, {\n\t  'begin': 0x16A0,\n\t  'end': 0x16FF\n\t}, {\n\t  'begin': 0x1780,\n\t  'end': 0x17FF\n\t}, {\n\t  'begin': 0x1800,\n\t  'end': 0x18AF\n\t}, {\n\t  'begin': 0x2800,\n\t  'end': 0x28FF\n\t}, {\n\t  'begin': 0xA000,\n\t  'end': 0xA48F\n\t}, {\n\t  'begin': 0x1700,\n\t  'end': 0x171F\n\t}, {\n\t  'begin': 0x10300,\n\t  'end': 0x1032F\n\t}, {\n\t  'begin': 0x10330,\n\t  'end': 0x1034F\n\t}, {\n\t  'begin': 0x10400,\n\t  'end': 0x1044F\n\t}, {\n\t  'begin': 0x1D000,\n\t  'end': 0x1D0FF\n\t}, {\n\t  'begin': 0x1D400,\n\t  'end': 0x1D7FF\n\t}, {\n\t  'begin': 0xFF000,\n\t  'end': 0xFFFFD\n\t}, {\n\t  'begin': 0xFE00,\n\t  'end': 0xFE0F\n\t}, {\n\t  'begin': 0xE0000,\n\t  'end': 0xE007F\n\t}, {\n\t  'begin': 0x1900,\n\t  'end': 0x194F\n\t}, {\n\t  'begin': 0x1950,\n\t  'end': 0x197F\n\t}, {\n\t  'begin': 0x1980,\n\t  'end': 0x19DF\n\t}, {\n\t  'begin': 0x1A00,\n\t  'end': 0x1A1F\n\t}, {\n\t  'begin': 0x2C00,\n\t  'end': 0x2C5F\n\t}, {\n\t  'begin': 0x2D30,\n\t  'end': 0x2D7F\n\t}, {\n\t  'begin': 0x4DC0,\n\t  'end': 0x4DFF\n\t}, {\n\t  'begin': 0xA800,\n\t  'end': 0xA82F\n\t}, {\n\t  'begin': 0x10000,\n\t  'end': 0x1007F\n\t}, {\n\t  'begin': 0x10140,\n\t  'end': 0x1018F\n\t}, {\n\t  'begin': 0x10380,\n\t  'end': 0x1039F\n\t}, {\n\t  'begin': 0x103A0,\n\t  'end': 0x103DF\n\t}, {\n\t  'begin': 0x10450,\n\t  'end': 0x1047F\n\t}, {\n\t  'begin': 0x10480,\n\t  'end': 0x104AF\n\t}, {\n\t  'begin': 0x10800,\n\t  'end': 0x1083F\n\t}, {\n\t  'begin': 0x10A00,\n\t  'end': 0x10A5F\n\t}, {\n\t  'begin': 0x1D300,\n\t  'end': 0x1D35F\n\t}, {\n\t  'begin': 0x12000,\n\t  'end': 0x123FF\n\t}, {\n\t  'begin': 0x1D360,\n\t  'end': 0x1D37F\n\t}, {\n\t  'begin': 0x1B80,\n\t  'end': 0x1BBF\n\t}, {\n\t  'begin': 0x1C00,\n\t  'end': 0x1C4F\n\t}, {\n\t  'begin': 0x1C50,\n\t  'end': 0x1C7F\n\t}, {\n\t  'begin': 0xA880,\n\t  'end': 0xA8DF\n\t}, {\n\t  'begin': 0xA900,\n\t  'end': 0xA92F\n\t}, {\n\t  'begin': 0xA930,\n\t  'end': 0xA95F\n\t}, {\n\t  'begin': 0xAA00,\n\t  'end': 0xAA5F\n\t}, {\n\t  'begin': 0x10190,\n\t  'end': 0x101CF\n\t}, {\n\t  'begin': 0x101D0,\n\t  'end': 0x101FF\n\t}, {\n\t  'begin': 0x102A0,\n\t  'end': 0x102DF\n\t}, {\n\t  'begin': 0x1F030,\n\t  'end': 0x1F09F\n\t}];\n\tfunction getUnicodeRangeFor(value) {\n\t  for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n\t    var range = UnicodeRanges[i];\n\t    if (value >= range.begin && value < range.end) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\tfunction isRTLRangeFor(value) {\n\t  var range = UnicodeRanges[13];\n\t  if (value >= range.begin && value < range.end) {\n\t    return true;\n\t  }\n\t  range = UnicodeRanges[11];\n\t  if (value >= range.begin && value < range.end) {\n\t    return true;\n\t  }\n\t  return false;\n\t}\n\tvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\n\t  t['\\xA8'] = ' \\u0308';\n\t  t['\\xAF'] = ' \\u0304';\n\t  t['\\xB4'] = ' \\u0301';\n\t  t['\\xB5'] = '\\u03BC';\n\t  t['\\xB8'] = ' \\u0327';\n\t  t['\\u0132'] = 'IJ';\n\t  t['\\u0133'] = 'ij';\n\t  t['\\u013F'] = 'L\\xB7';\n\t  t['\\u0140'] = 'l\\xB7';\n\t  t['\\u0149'] = '\\u02BCn';\n\t  t['\\u017F'] = 's';\n\t  t['\\u01C4'] = 'D\\u017D';\n\t  t['\\u01C5'] = 'D\\u017E';\n\t  t['\\u01C6'] = 'd\\u017E';\n\t  t['\\u01C7'] = 'LJ';\n\t  t['\\u01C8'] = 'Lj';\n\t  t['\\u01C9'] = 'lj';\n\t  t['\\u01CA'] = 'NJ';\n\t  t['\\u01CB'] = 'Nj';\n\t  t['\\u01CC'] = 'nj';\n\t  t['\\u01F1'] = 'DZ';\n\t  t['\\u01F2'] = 'Dz';\n\t  t['\\u01F3'] = 'dz';\n\t  t['\\u02D8'] = ' \\u0306';\n\t  t['\\u02D9'] = ' \\u0307';\n\t  t['\\u02DA'] = ' \\u030A';\n\t  t['\\u02DB'] = ' \\u0328';\n\t  t['\\u02DC'] = ' \\u0303';\n\t  t['\\u02DD'] = ' \\u030B';\n\t  t['\\u037A'] = ' \\u0345';\n\t  t['\\u0384'] = ' \\u0301';\n\t  t['\\u03D0'] = '\\u03B2';\n\t  t['\\u03D1'] = '\\u03B8';\n\t  t['\\u03D2'] = '\\u03A5';\n\t  t['\\u03D5'] = '\\u03C6';\n\t  t['\\u03D6'] = '\\u03C0';\n\t  t['\\u03F0'] = '\\u03BA';\n\t  t['\\u03F1'] = '\\u03C1';\n\t  t['\\u03F2'] = '\\u03C2';\n\t  t['\\u03F4'] = '\\u0398';\n\t  t['\\u03F5'] = '\\u03B5';\n\t  t['\\u03F9'] = '\\u03A3';\n\t  t['\\u0587'] = '\\u0565\\u0582';\n\t  t['\\u0675'] = '\\u0627\\u0674';\n\t  t['\\u0676'] = '\\u0648\\u0674';\n\t  t['\\u0677'] = '\\u06C7\\u0674';\n\t  t['\\u0678'] = '\\u064A\\u0674';\n\t  t['\\u0E33'] = '\\u0E4D\\u0E32';\n\t  t['\\u0EB3'] = '\\u0ECD\\u0EB2';\n\t  t['\\u0EDC'] = '\\u0EAB\\u0E99';\n\t  t['\\u0EDD'] = '\\u0EAB\\u0EA1';\n\t  t['\\u0F77'] = '\\u0FB2\\u0F81';\n\t  t['\\u0F79'] = '\\u0FB3\\u0F81';\n\t  t['\\u1E9A'] = 'a\\u02BE';\n\t  t['\\u1FBD'] = ' \\u0313';\n\t  t['\\u1FBF'] = ' \\u0313';\n\t  t['\\u1FC0'] = ' \\u0342';\n\t  t['\\u1FFE'] = ' \\u0314';\n\t  t['\\u2002'] = ' ';\n\t  t['\\u2003'] = ' ';\n\t  t['\\u2004'] = ' ';\n\t  t['\\u2005'] = ' ';\n\t  t['\\u2006'] = ' ';\n\t  t['\\u2008'] = ' ';\n\t  t['\\u2009'] = ' ';\n\t  t['\\u200A'] = ' ';\n\t  t['\\u2017'] = ' \\u0333';\n\t  t['\\u2024'] = '.';\n\t  t['\\u2025'] = '..';\n\t  t['\\u2026'] = '...';\n\t  t['\\u2033'] = '\\u2032\\u2032';\n\t  t['\\u2034'] = '\\u2032\\u2032\\u2032';\n\t  t['\\u2036'] = '\\u2035\\u2035';\n\t  t['\\u2037'] = '\\u2035\\u2035\\u2035';\n\t  t['\\u203C'] = '!!';\n\t  t['\\u203E'] = ' \\u0305';\n\t  t['\\u2047'] = '??';\n\t  t['\\u2048'] = '?!';\n\t  t['\\u2049'] = '!?';\n\t  t['\\u2057'] = '\\u2032\\u2032\\u2032\\u2032';\n\t  t['\\u205F'] = ' ';\n\t  t['\\u20A8'] = 'Rs';\n\t  t['\\u2100'] = 'a/c';\n\t  t['\\u2101'] = 'a/s';\n\t  t['\\u2103'] = '\\xB0C';\n\t  t['\\u2105'] = 'c/o';\n\t  t['\\u2106'] = 'c/u';\n\t  t['\\u2107'] = '\\u0190';\n\t  t['\\u2109'] = '\\xB0F';\n\t  t['\\u2116'] = 'No';\n\t  t['\\u2121'] = 'TEL';\n\t  t['\\u2135'] = '\\u05D0';\n\t  t['\\u2136'] = '\\u05D1';\n\t  t['\\u2137'] = '\\u05D2';\n\t  t['\\u2138'] = '\\u05D3';\n\t  t['\\u213B'] = 'FAX';\n\t  t['\\u2160'] = 'I';\n\t  t['\\u2161'] = 'II';\n\t  t['\\u2162'] = 'III';\n\t  t['\\u2163'] = 'IV';\n\t  t['\\u2164'] = 'V';\n\t  t['\\u2165'] = 'VI';\n\t  t['\\u2166'] = 'VII';\n\t  t['\\u2167'] = 'VIII';\n\t  t['\\u2168'] = 'IX';\n\t  t['\\u2169'] = 'X';\n\t  t['\\u216A'] = 'XI';\n\t  t['\\u216B'] = 'XII';\n\t  t['\\u216C'] = 'L';\n\t  t['\\u216D'] = 'C';\n\t  t['\\u216E'] = 'D';\n\t  t['\\u216F'] = 'M';\n\t  t['\\u2170'] = 'i';\n\t  t['\\u2171'] = 'ii';\n\t  t['\\u2172'] = 'iii';\n\t  t['\\u2173'] = 'iv';\n\t  t['\\u2174'] = 'v';\n\t  t['\\u2175'] = 'vi';\n\t  t['\\u2176'] = 'vii';\n\t  t['\\u2177'] = 'viii';\n\t  t['\\u2178'] = 'ix';\n\t  t['\\u2179'] = 'x';\n\t  t['\\u217A'] = 'xi';\n\t  t['\\u217B'] = 'xii';\n\t  t['\\u217C'] = 'l';\n\t  t['\\u217D'] = 'c';\n\t  t['\\u217E'] = 'd';\n\t  t['\\u217F'] = 'm';\n\t  t['\\u222C'] = '\\u222B\\u222B';\n\t  t['\\u222D'] = '\\u222B\\u222B\\u222B';\n\t  t['\\u222F'] = '\\u222E\\u222E';\n\t  t['\\u2230'] = '\\u222E\\u222E\\u222E';\n\t  t['\\u2474'] = '(1)';\n\t  t['\\u2475'] = '(2)';\n\t  t['\\u2476'] = '(3)';\n\t  t['\\u2477'] = '(4)';\n\t  t['\\u2478'] = '(5)';\n\t  t['\\u2479'] = '(6)';\n\t  t['\\u247A'] = '(7)';\n\t  t['\\u247B'] = '(8)';\n\t  t['\\u247C'] = '(9)';\n\t  t['\\u247D'] = '(10)';\n\t  t['\\u247E'] = '(11)';\n\t  t['\\u247F'] = '(12)';\n\t  t['\\u2480'] = '(13)';\n\t  t['\\u2481'] = '(14)';\n\t  t['\\u2482'] = '(15)';\n\t  t['\\u2483'] = '(16)';\n\t  t['\\u2484'] = '(17)';\n\t  t['\\u2485'] = '(18)';\n\t  t['\\u2486'] = '(19)';\n\t  t['\\u2487'] = '(20)';\n\t  t['\\u2488'] = '1.';\n\t  t['\\u2489'] = '2.';\n\t  t['\\u248A'] = '3.';\n\t  t['\\u248B'] = '4.';\n\t  t['\\u248C'] = '5.';\n\t  t['\\u248D'] = '6.';\n\t  t['\\u248E'] = '7.';\n\t  t['\\u248F'] = '8.';\n\t  t['\\u2490'] = '9.';\n\t  t['\\u2491'] = '10.';\n\t  t['\\u2492'] = '11.';\n\t  t['\\u2493'] = '12.';\n\t  t['\\u2494'] = '13.';\n\t  t['\\u2495'] = '14.';\n\t  t['\\u2496'] = '15.';\n\t  t['\\u2497'] = '16.';\n\t  t['\\u2498'] = '17.';\n\t  t['\\u2499'] = '18.';\n\t  t['\\u249A'] = '19.';\n\t  t['\\u249B'] = '20.';\n\t  t['\\u249C'] = '(a)';\n\t  t['\\u249D'] = '(b)';\n\t  t['\\u249E'] = '(c)';\n\t  t['\\u249F'] = '(d)';\n\t  t['\\u24A0'] = '(e)';\n\t  t['\\u24A1'] = '(f)';\n\t  t['\\u24A2'] = '(g)';\n\t  t['\\u24A3'] = '(h)';\n\t  t['\\u24A4'] = '(i)';\n\t  t['\\u24A5'] = '(j)';\n\t  t['\\u24A6'] = '(k)';\n\t  t['\\u24A7'] = '(l)';\n\t  t['\\u24A8'] = '(m)';\n\t  t['\\u24A9'] = '(n)';\n\t  t['\\u24AA'] = '(o)';\n\t  t['\\u24AB'] = '(p)';\n\t  t['\\u24AC'] = '(q)';\n\t  t['\\u24AD'] = '(r)';\n\t  t['\\u24AE'] = '(s)';\n\t  t['\\u24AF'] = '(t)';\n\t  t['\\u24B0'] = '(u)';\n\t  t['\\u24B1'] = '(v)';\n\t  t['\\u24B2'] = '(w)';\n\t  t['\\u24B3'] = '(x)';\n\t  t['\\u24B4'] = '(y)';\n\t  t['\\u24B5'] = '(z)';\n\t  t['\\u2A0C'] = '\\u222B\\u222B\\u222B\\u222B';\n\t  t['\\u2A74'] = '::=';\n\t  t['\\u2A75'] = '==';\n\t  t['\\u2A76'] = '===';\n\t  t['\\u2E9F'] = '\\u6BCD';\n\t  t['\\u2EF3'] = '\\u9F9F';\n\t  t['\\u2F00'] = '\\u4E00';\n\t  t['\\u2F01'] = '\\u4E28';\n\t  t['\\u2F02'] = '\\u4E36';\n\t  t['\\u2F03'] = '\\u4E3F';\n\t  t['\\u2F04'] = '\\u4E59';\n\t  t['\\u2F05'] = '\\u4E85';\n\t  t['\\u2F06'] = '\\u4E8C';\n\t  t['\\u2F07'] = '\\u4EA0';\n\t  t['\\u2F08'] = '\\u4EBA';\n\t  t['\\u2F09'] = '\\u513F';\n\t  t['\\u2F0A'] = '\\u5165';\n\t  t['\\u2F0B'] = '\\u516B';\n\t  t['\\u2F0C'] = '\\u5182';\n\t  t['\\u2F0D'] = '\\u5196';\n\t  t['\\u2F0E'] = '\\u51AB';\n\t  t['\\u2F0F'] = '\\u51E0';\n\t  t['\\u2F10'] = '\\u51F5';\n\t  t['\\u2F11'] = '\\u5200';\n\t  t['\\u2F12'] = '\\u529B';\n\t  t['\\u2F13'] = '\\u52F9';\n\t  t['\\u2F14'] = '\\u5315';\n\t  t['\\u2F15'] = '\\u531A';\n\t  t['\\u2F16'] = '\\u5338';\n\t  t['\\u2F17'] = '\\u5341';\n\t  t['\\u2F18'] = '\\u535C';\n\t  t['\\u2F19'] = '\\u5369';\n\t  t['\\u2F1A'] = '\\u5382';\n\t  t['\\u2F1B'] = '\\u53B6';\n\t  t['\\u2F1C'] = '\\u53C8';\n\t  t['\\u2F1D'] = '\\u53E3';\n\t  t['\\u2F1E'] = '\\u56D7';\n\t  t['\\u2F1F'] = '\\u571F';\n\t  t['\\u2F20'] = '\\u58EB';\n\t  t['\\u2F21'] = '\\u5902';\n\t  t['\\u2F22'] = '\\u590A';\n\t  t['\\u2F23'] = '\\u5915';\n\t  t['\\u2F24'] = '\\u5927';\n\t  t['\\u2F25'] = '\\u5973';\n\t  t['\\u2F26'] = '\\u5B50';\n\t  t['\\u2F27'] = '\\u5B80';\n\t  t['\\u2F28'] = '\\u5BF8';\n\t  t['\\u2F29'] = '\\u5C0F';\n\t  t['\\u2F2A'] = '\\u5C22';\n\t  t['\\u2F2B'] = '\\u5C38';\n\t  t['\\u2F2C'] = '\\u5C6E';\n\t  t['\\u2F2D'] = '\\u5C71';\n\t  t['\\u2F2E'] = '\\u5DDB';\n\t  t['\\u2F2F'] = '\\u5DE5';\n\t  t['\\u2F30'] = '\\u5DF1';\n\t  t['\\u2F31'] = '\\u5DFE';\n\t  t['\\u2F32'] = '\\u5E72';\n\t  t['\\u2F33'] = '\\u5E7A';\n\t  t['\\u2F34'] = '\\u5E7F';\n\t  t['\\u2F35'] = '\\u5EF4';\n\t  t['\\u2F36'] = '\\u5EFE';\n\t  t['\\u2F37'] = '\\u5F0B';\n\t  t['\\u2F38'] = '\\u5F13';\n\t  t['\\u2F39'] = '\\u5F50';\n\t  t['\\u2F3A'] = '\\u5F61';\n\t  t['\\u2F3B'] = '\\u5F73';\n\t  t['\\u2F3C'] = '\\u5FC3';\n\t  t['\\u2F3D'] = '\\u6208';\n\t  t['\\u2F3E'] = '\\u6236';\n\t  t['\\u2F3F'] = '\\u624B';\n\t  t['\\u2F40'] = '\\u652F';\n\t  t['\\u2F41'] = '\\u6534';\n\t  t['\\u2F42'] = '\\u6587';\n\t  t['\\u2F43'] = '\\u6597';\n\t  t['\\u2F44'] = '\\u65A4';\n\t  t['\\u2F45'] = '\\u65B9';\n\t  t['\\u2F46'] = '\\u65E0';\n\t  t['\\u2F47'] = '\\u65E5';\n\t  t['\\u2F48'] = '\\u66F0';\n\t  t['\\u2F49'] = '\\u6708';\n\t  t['\\u2F4A'] = '\\u6728';\n\t  t['\\u2F4B'] = '\\u6B20';\n\t  t['\\u2F4C'] = '\\u6B62';\n\t  t['\\u2F4D'] = '\\u6B79';\n\t  t['\\u2F4E'] = '\\u6BB3';\n\t  t['\\u2F4F'] = '\\u6BCB';\n\t  t['\\u2F50'] = '\\u6BD4';\n\t  t['\\u2F51'] = '\\u6BDB';\n\t  t['\\u2F52'] = '\\u6C0F';\n\t  t['\\u2F53'] = '\\u6C14';\n\t  t['\\u2F54'] = '\\u6C34';\n\t  t['\\u2F55'] = '\\u706B';\n\t  t['\\u2F56'] = '\\u722A';\n\t  t['\\u2F57'] = '\\u7236';\n\t  t['\\u2F58'] = '\\u723B';\n\t  t['\\u2F59'] = '\\u723F';\n\t  t['\\u2F5A'] = '\\u7247';\n\t  t['\\u2F5B'] = '\\u7259';\n\t  t['\\u2F5C'] = '\\u725B';\n\t  t['\\u2F5D'] = '\\u72AC';\n\t  t['\\u2F5E'] = '\\u7384';\n\t  t['\\u2F5F'] = '\\u7389';\n\t  t['\\u2F60'] = '\\u74DC';\n\t  t['\\u2F61'] = '\\u74E6';\n\t  t['\\u2F62'] = '\\u7518';\n\t  t['\\u2F63'] = '\\u751F';\n\t  t['\\u2F64'] = '\\u7528';\n\t  t['\\u2F65'] = '\\u7530';\n\t  t['\\u2F66'] = '\\u758B';\n\t  t['\\u2F67'] = '\\u7592';\n\t  t['\\u2F68'] = '\\u7676';\n\t  t['\\u2F69'] = '\\u767D';\n\t  t['\\u2F6A'] = '\\u76AE';\n\t  t['\\u2F6B'] = '\\u76BF';\n\t  t['\\u2F6C'] = '\\u76EE';\n\t  t['\\u2F6D'] = '\\u77DB';\n\t  t['\\u2F6E'] = '\\u77E2';\n\t  t['\\u2F6F'] = '\\u77F3';\n\t  t['\\u2F70'] = '\\u793A';\n\t  t['\\u2F71'] = '\\u79B8';\n\t  t['\\u2F72'] = '\\u79BE';\n\t  t['\\u2F73'] = '\\u7A74';\n\t  t['\\u2F74'] = '\\u7ACB';\n\t  t['\\u2F75'] = '\\u7AF9';\n\t  t['\\u2F76'] = '\\u7C73';\n\t  t['\\u2F77'] = '\\u7CF8';\n\t  t['\\u2F78'] = '\\u7F36';\n\t  t['\\u2F79'] = '\\u7F51';\n\t  t['\\u2F7A'] = '\\u7F8A';\n\t  t['\\u2F7B'] = '\\u7FBD';\n\t  t['\\u2F7C'] = '\\u8001';\n\t  t['\\u2F7D'] = '\\u800C';\n\t  t['\\u2F7E'] = '\\u8012';\n\t  t['\\u2F7F'] = '\\u8033';\n\t  t['\\u2F80'] = '\\u807F';\n\t  t['\\u2F81'] = '\\u8089';\n\t  t['\\u2F82'] = '\\u81E3';\n\t  t['\\u2F83'] = '\\u81EA';\n\t  t['\\u2F84'] = '\\u81F3';\n\t  t['\\u2F85'] = '\\u81FC';\n\t  t['\\u2F86'] = '\\u820C';\n\t  t['\\u2F87'] = '\\u821B';\n\t  t['\\u2F88'] = '\\u821F';\n\t  t['\\u2F89'] = '\\u826E';\n\t  t['\\u2F8A'] = '\\u8272';\n\t  t['\\u2F8B'] = '\\u8278';\n\t  t['\\u2F8C'] = '\\u864D';\n\t  t['\\u2F8D'] = '\\u866B';\n\t  t['\\u2F8E'] = '\\u8840';\n\t  t['\\u2F8F'] = '\\u884C';\n\t  t['\\u2F90'] = '\\u8863';\n\t  t['\\u2F91'] = '\\u897E';\n\t  t['\\u2F92'] = '\\u898B';\n\t  t['\\u2F93'] = '\\u89D2';\n\t  t['\\u2F94'] = '\\u8A00';\n\t  t['\\u2F95'] = '\\u8C37';\n\t  t['\\u2F96'] = '\\u8C46';\n\t  t['\\u2F97'] = '\\u8C55';\n\t  t['\\u2F98'] = '\\u8C78';\n\t  t['\\u2F99'] = '\\u8C9D';\n\t  t['\\u2F9A'] = '\\u8D64';\n\t  t['\\u2F9B'] = '\\u8D70';\n\t  t['\\u2F9C'] = '\\u8DB3';\n\t  t['\\u2F9D'] = '\\u8EAB';\n\t  t['\\u2F9E'] = '\\u8ECA';\n\t  t['\\u2F9F'] = '\\u8F9B';\n\t  t['\\u2FA0'] = '\\u8FB0';\n\t  t['\\u2FA1'] = '\\u8FB5';\n\t  t['\\u2FA2'] = '\\u9091';\n\t  t['\\u2FA3'] = '\\u9149';\n\t  t['\\u2FA4'] = '\\u91C6';\n\t  t['\\u2FA5'] = '\\u91CC';\n\t  t['\\u2FA6'] = '\\u91D1';\n\t  t['\\u2FA7'] = '\\u9577';\n\t  t['\\u2FA8'] = '\\u9580';\n\t  t['\\u2FA9'] = '\\u961C';\n\t  t['\\u2FAA'] = '\\u96B6';\n\t  t['\\u2FAB'] = '\\u96B9';\n\t  t['\\u2FAC'] = '\\u96E8';\n\t  t['\\u2FAD'] = '\\u9751';\n\t  t['\\u2FAE'] = '\\u975E';\n\t  t['\\u2FAF'] = '\\u9762';\n\t  t['\\u2FB0'] = '\\u9769';\n\t  t['\\u2FB1'] = '\\u97CB';\n\t  t['\\u2FB2'] = '\\u97ED';\n\t  t['\\u2FB3'] = '\\u97F3';\n\t  t['\\u2FB4'] = '\\u9801';\n\t  t['\\u2FB5'] = '\\u98A8';\n\t  t['\\u2FB6'] = '\\u98DB';\n\t  t['\\u2FB7'] = '\\u98DF';\n\t  t['\\u2FB8'] = '\\u9996';\n\t  t['\\u2FB9'] = '\\u9999';\n\t  t['\\u2FBA'] = '\\u99AC';\n\t  t['\\u2FBB'] = '\\u9AA8';\n\t  t['\\u2FBC'] = '\\u9AD8';\n\t  t['\\u2FBD'] = '\\u9ADF';\n\t  t['\\u2FBE'] = '\\u9B25';\n\t  t['\\u2FBF'] = '\\u9B2F';\n\t  t['\\u2FC0'] = '\\u9B32';\n\t  t['\\u2FC1'] = '\\u9B3C';\n\t  t['\\u2FC2'] = '\\u9B5A';\n\t  t['\\u2FC3'] = '\\u9CE5';\n\t  t['\\u2FC4'] = '\\u9E75';\n\t  t['\\u2FC5'] = '\\u9E7F';\n\t  t['\\u2FC6'] = '\\u9EA5';\n\t  t['\\u2FC7'] = '\\u9EBB';\n\t  t['\\u2FC8'] = '\\u9EC3';\n\t  t['\\u2FC9'] = '\\u9ECD';\n\t  t['\\u2FCA'] = '\\u9ED1';\n\t  t['\\u2FCB'] = '\\u9EF9';\n\t  t['\\u2FCC'] = '\\u9EFD';\n\t  t['\\u2FCD'] = '\\u9F0E';\n\t  t['\\u2FCE'] = '\\u9F13';\n\t  t['\\u2FCF'] = '\\u9F20';\n\t  t['\\u2FD0'] = '\\u9F3B';\n\t  t['\\u2FD1'] = '\\u9F4A';\n\t  t['\\u2FD2'] = '\\u9F52';\n\t  t['\\u2FD3'] = '\\u9F8D';\n\t  t['\\u2FD4'] = '\\u9F9C';\n\t  t['\\u2FD5'] = '\\u9FA0';\n\t  t['\\u3036'] = '\\u3012';\n\t  t['\\u3038'] = '\\u5341';\n\t  t['\\u3039'] = '\\u5344';\n\t  t['\\u303A'] = '\\u5345';\n\t  t['\\u309B'] = ' \\u3099';\n\t  t['\\u309C'] = ' \\u309A';\n\t  t['\\u3131'] = '\\u1100';\n\t  t['\\u3132'] = '\\u1101';\n\t  t['\\u3133'] = '\\u11AA';\n\t  t['\\u3134'] = '\\u1102';\n\t  t['\\u3135'] = '\\u11AC';\n\t  t['\\u3136'] = '\\u11AD';\n\t  t['\\u3137'] = '\\u1103';\n\t  t['\\u3138'] = '\\u1104';\n\t  t['\\u3139'] = '\\u1105';\n\t  t['\\u313A'] = '\\u11B0';\n\t  t['\\u313B'] = '\\u11B1';\n\t  t['\\u313C'] = '\\u11B2';\n\t  t['\\u313D'] = '\\u11B3';\n\t  t['\\u313E'] = '\\u11B4';\n\t  t['\\u313F'] = '\\u11B5';\n\t  t['\\u3140'] = '\\u111A';\n\t  t['\\u3141'] = '\\u1106';\n\t  t['\\u3142'] = '\\u1107';\n\t  t['\\u3143'] = '\\u1108';\n\t  t['\\u3144'] = '\\u1121';\n\t  t['\\u3145'] = '\\u1109';\n\t  t['\\u3146'] = '\\u110A';\n\t  t['\\u3147'] = '\\u110B';\n\t  t['\\u3148'] = '\\u110C';\n\t  t['\\u3149'] = '\\u110D';\n\t  t['\\u314A'] = '\\u110E';\n\t  t['\\u314B'] = '\\u110F';\n\t  t['\\u314C'] = '\\u1110';\n\t  t['\\u314D'] = '\\u1111';\n\t  t['\\u314E'] = '\\u1112';\n\t  t['\\u314F'] = '\\u1161';\n\t  t['\\u3150'] = '\\u1162';\n\t  t['\\u3151'] = '\\u1163';\n\t  t['\\u3152'] = '\\u1164';\n\t  t['\\u3153'] = '\\u1165';\n\t  t['\\u3154'] = '\\u1166';\n\t  t['\\u3155'] = '\\u1167';\n\t  t['\\u3156'] = '\\u1168';\n\t  t['\\u3157'] = '\\u1169';\n\t  t['\\u3158'] = '\\u116A';\n\t  t['\\u3159'] = '\\u116B';\n\t  t['\\u315A'] = '\\u116C';\n\t  t['\\u315B'] = '\\u116D';\n\t  t['\\u315C'] = '\\u116E';\n\t  t['\\u315D'] = '\\u116F';\n\t  t['\\u315E'] = '\\u1170';\n\t  t['\\u315F'] = '\\u1171';\n\t  t['\\u3160'] = '\\u1172';\n\t  t['\\u3161'] = '\\u1173';\n\t  t['\\u3162'] = '\\u1174';\n\t  t['\\u3163'] = '\\u1175';\n\t  t['\\u3164'] = '\\u1160';\n\t  t['\\u3165'] = '\\u1114';\n\t  t['\\u3166'] = '\\u1115';\n\t  t['\\u3167'] = '\\u11C7';\n\t  t['\\u3168'] = '\\u11C8';\n\t  t['\\u3169'] = '\\u11CC';\n\t  t['\\u316A'] = '\\u11CE';\n\t  t['\\u316B'] = '\\u11D3';\n\t  t['\\u316C'] = '\\u11D7';\n\t  t['\\u316D'] = '\\u11D9';\n\t  t['\\u316E'] = '\\u111C';\n\t  t['\\u316F'] = '\\u11DD';\n\t  t['\\u3170'] = '\\u11DF';\n\t  t['\\u3171'] = '\\u111D';\n\t  t['\\u3172'] = '\\u111E';\n\t  t['\\u3173'] = '\\u1120';\n\t  t['\\u3174'] = '\\u1122';\n\t  t['\\u3175'] = '\\u1123';\n\t  t['\\u3176'] = '\\u1127';\n\t  t['\\u3177'] = '\\u1129';\n\t  t['\\u3178'] = '\\u112B';\n\t  t['\\u3179'] = '\\u112C';\n\t  t['\\u317A'] = '\\u112D';\n\t  t['\\u317B'] = '\\u112E';\n\t  t['\\u317C'] = '\\u112F';\n\t  t['\\u317D'] = '\\u1132';\n\t  t['\\u317E'] = '\\u1136';\n\t  t['\\u317F'] = '\\u1140';\n\t  t['\\u3180'] = '\\u1147';\n\t  t['\\u3181'] = '\\u114C';\n\t  t['\\u3182'] = '\\u11F1';\n\t  t['\\u3183'] = '\\u11F2';\n\t  t['\\u3184'] = '\\u1157';\n\t  t['\\u3185'] = '\\u1158';\n\t  t['\\u3186'] = '\\u1159';\n\t  t['\\u3187'] = '\\u1184';\n\t  t['\\u3188'] = '\\u1185';\n\t  t['\\u3189'] = '\\u1188';\n\t  t['\\u318A'] = '\\u1191';\n\t  t['\\u318B'] = '\\u1192';\n\t  t['\\u318C'] = '\\u1194';\n\t  t['\\u318D'] = '\\u119E';\n\t  t['\\u318E'] = '\\u11A1';\n\t  t['\\u3200'] = '(\\u1100)';\n\t  t['\\u3201'] = '(\\u1102)';\n\t  t['\\u3202'] = '(\\u1103)';\n\t  t['\\u3203'] = '(\\u1105)';\n\t  t['\\u3204'] = '(\\u1106)';\n\t  t['\\u3205'] = '(\\u1107)';\n\t  t['\\u3206'] = '(\\u1109)';\n\t  t['\\u3207'] = '(\\u110B)';\n\t  t['\\u3208'] = '(\\u110C)';\n\t  t['\\u3209'] = '(\\u110E)';\n\t  t['\\u320A'] = '(\\u110F)';\n\t  t['\\u320B'] = '(\\u1110)';\n\t  t['\\u320C'] = '(\\u1111)';\n\t  t['\\u320D'] = '(\\u1112)';\n\t  t['\\u320E'] = '(\\u1100\\u1161)';\n\t  t['\\u320F'] = '(\\u1102\\u1161)';\n\t  t['\\u3210'] = '(\\u1103\\u1161)';\n\t  t['\\u3211'] = '(\\u1105\\u1161)';\n\t  t['\\u3212'] = '(\\u1106\\u1161)';\n\t  t['\\u3213'] = '(\\u1107\\u1161)';\n\t  t['\\u3214'] = '(\\u1109\\u1161)';\n\t  t['\\u3215'] = '(\\u110B\\u1161)';\n\t  t['\\u3216'] = '(\\u110C\\u1161)';\n\t  t['\\u3217'] = '(\\u110E\\u1161)';\n\t  t['\\u3218'] = '(\\u110F\\u1161)';\n\t  t['\\u3219'] = '(\\u1110\\u1161)';\n\t  t['\\u321A'] = '(\\u1111\\u1161)';\n\t  t['\\u321B'] = '(\\u1112\\u1161)';\n\t  t['\\u321C'] = '(\\u110C\\u116E)';\n\t  t['\\u321D'] = '(\\u110B\\u1169\\u110C\\u1165\\u11AB)';\n\t  t['\\u321E'] = '(\\u110B\\u1169\\u1112\\u116E)';\n\t  t['\\u3220'] = '(\\u4E00)';\n\t  t['\\u3221'] = '(\\u4E8C)';\n\t  t['\\u3222'] = '(\\u4E09)';\n\t  t['\\u3223'] = '(\\u56DB)';\n\t  t['\\u3224'] = '(\\u4E94)';\n\t  t['\\u3225'] = '(\\u516D)';\n\t  t['\\u3226'] = '(\\u4E03)';\n\t  t['\\u3227'] = '(\\u516B)';\n\t  t['\\u3228'] = '(\\u4E5D)';\n\t  t['\\u3229'] = '(\\u5341)';\n\t  t['\\u322A'] = '(\\u6708)';\n\t  t['\\u322B'] = '(\\u706B)';\n\t  t['\\u322C'] = '(\\u6C34)';\n\t  t['\\u322D'] = '(\\u6728)';\n\t  t['\\u322E'] = '(\\u91D1)';\n\t  t['\\u322F'] = '(\\u571F)';\n\t  t['\\u3230'] = '(\\u65E5)';\n\t  t['\\u3231'] = '(\\u682A)';\n\t  t['\\u3232'] = '(\\u6709)';\n\t  t['\\u3233'] = '(\\u793E)';\n\t  t['\\u3234'] = '(\\u540D)';\n\t  t['\\u3235'] = '(\\u7279)';\n\t  t['\\u3236'] = '(\\u8CA1)';\n\t  t['\\u3237'] = '(\\u795D)';\n\t  t['\\u3238'] = '(\\u52B4)';\n\t  t['\\u3239'] = '(\\u4EE3)';\n\t  t['\\u323A'] = '(\\u547C)';\n\t  t['\\u323B'] = '(\\u5B66)';\n\t  t['\\u323C'] = '(\\u76E3)';\n\t  t['\\u323D'] = '(\\u4F01)';\n\t  t['\\u323E'] = '(\\u8CC7)';\n\t  t['\\u323F'] = '(\\u5354)';\n\t  t['\\u3240'] = '(\\u796D)';\n\t  t['\\u3241'] = '(\\u4F11)';\n\t  t['\\u3242'] = '(\\u81EA)';\n\t  t['\\u3243'] = '(\\u81F3)';\n\t  t['\\u32C0'] = '1\\u6708';\n\t  t['\\u32C1'] = '2\\u6708';\n\t  t['\\u32C2'] = '3\\u6708';\n\t  t['\\u32C3'] = '4\\u6708';\n\t  t['\\u32C4'] = '5\\u6708';\n\t  t['\\u32C5'] = '6\\u6708';\n\t  t['\\u32C6'] = '7\\u6708';\n\t  t['\\u32C7'] = '8\\u6708';\n\t  t['\\u32C8'] = '9\\u6708';\n\t  t['\\u32C9'] = '10\\u6708';\n\t  t['\\u32CA'] = '11\\u6708';\n\t  t['\\u32CB'] = '12\\u6708';\n\t  t['\\u3358'] = '0\\u70B9';\n\t  t['\\u3359'] = '1\\u70B9';\n\t  t['\\u335A'] = '2\\u70B9';\n\t  t['\\u335B'] = '3\\u70B9';\n\t  t['\\u335C'] = '4\\u70B9';\n\t  t['\\u335D'] = '5\\u70B9';\n\t  t['\\u335E'] = '6\\u70B9';\n\t  t['\\u335F'] = '7\\u70B9';\n\t  t['\\u3360'] = '8\\u70B9';\n\t  t['\\u3361'] = '9\\u70B9';\n\t  t['\\u3362'] = '10\\u70B9';\n\t  t['\\u3363'] = '11\\u70B9';\n\t  t['\\u3364'] = '12\\u70B9';\n\t  t['\\u3365'] = '13\\u70B9';\n\t  t['\\u3366'] = '14\\u70B9';\n\t  t['\\u3367'] = '15\\u70B9';\n\t  t['\\u3368'] = '16\\u70B9';\n\t  t['\\u3369'] = '17\\u70B9';\n\t  t['\\u336A'] = '18\\u70B9';\n\t  t['\\u336B'] = '19\\u70B9';\n\t  t['\\u336C'] = '20\\u70B9';\n\t  t['\\u336D'] = '21\\u70B9';\n\t  t['\\u336E'] = '22\\u70B9';\n\t  t['\\u336F'] = '23\\u70B9';\n\t  t['\\u3370'] = '24\\u70B9';\n\t  t['\\u33E0'] = '1\\u65E5';\n\t  t['\\u33E1'] = '2\\u65E5';\n\t  t['\\u33E2'] = '3\\u65E5';\n\t  t['\\u33E3'] = '4\\u65E5';\n\t  t['\\u33E4'] = '5\\u65E5';\n\t  t['\\u33E5'] = '6\\u65E5';\n\t  t['\\u33E6'] = '7\\u65E5';\n\t  t['\\u33E7'] = '8\\u65E5';\n\t  t['\\u33E8'] = '9\\u65E5';\n\t  t['\\u33E9'] = '10\\u65E5';\n\t  t['\\u33EA'] = '11\\u65E5';\n\t  t['\\u33EB'] = '12\\u65E5';\n\t  t['\\u33EC'] = '13\\u65E5';\n\t  t['\\u33ED'] = '14\\u65E5';\n\t  t['\\u33EE'] = '15\\u65E5';\n\t  t['\\u33EF'] = '16\\u65E5';\n\t  t['\\u33F0'] = '17\\u65E5';\n\t  t['\\u33F1'] = '18\\u65E5';\n\t  t['\\u33F2'] = '19\\u65E5';\n\t  t['\\u33F3'] = '20\\u65E5';\n\t  t['\\u33F4'] = '21\\u65E5';\n\t  t['\\u33F5'] = '22\\u65E5';\n\t  t['\\u33F6'] = '23\\u65E5';\n\t  t['\\u33F7'] = '24\\u65E5';\n\t  t['\\u33F8'] = '25\\u65E5';\n\t  t['\\u33F9'] = '26\\u65E5';\n\t  t['\\u33FA'] = '27\\u65E5';\n\t  t['\\u33FB'] = '28\\u65E5';\n\t  t['\\u33FC'] = '29\\u65E5';\n\t  t['\\u33FD'] = '30\\u65E5';\n\t  t['\\u33FE'] = '31\\u65E5';\n\t  t['\\uFB00'] = 'ff';\n\t  t['\\uFB01'] = 'fi';\n\t  t['\\uFB02'] = 'fl';\n\t  t['\\uFB03'] = 'ffi';\n\t  t['\\uFB04'] = 'ffl';\n\t  t['\\uFB05'] = '\\u017Ft';\n\t  t['\\uFB06'] = 'st';\n\t  t['\\uFB13'] = '\\u0574\\u0576';\n\t  t['\\uFB14'] = '\\u0574\\u0565';\n\t  t['\\uFB15'] = '\\u0574\\u056B';\n\t  t['\\uFB16'] = '\\u057E\\u0576';\n\t  t['\\uFB17'] = '\\u0574\\u056D';\n\t  t['\\uFB4F'] = '\\u05D0\\u05DC';\n\t  t['\\uFB50'] = '\\u0671';\n\t  t['\\uFB51'] = '\\u0671';\n\t  t['\\uFB52'] = '\\u067B';\n\t  t['\\uFB53'] = '\\u067B';\n\t  t['\\uFB54'] = '\\u067B';\n\t  t['\\uFB55'] = '\\u067B';\n\t  t['\\uFB56'] = '\\u067E';\n\t  t['\\uFB57'] = '\\u067E';\n\t  t['\\uFB58'] = '\\u067E';\n\t  t['\\uFB59'] = '\\u067E';\n\t  t['\\uFB5A'] = '\\u0680';\n\t  t['\\uFB5B'] = '\\u0680';\n\t  t['\\uFB5C'] = '\\u0680';\n\t  t['\\uFB5D'] = '\\u0680';\n\t  t['\\uFB5E'] = '\\u067A';\n\t  t['\\uFB5F'] = '\\u067A';\n\t  t['\\uFB60'] = '\\u067A';\n\t  t['\\uFB61'] = '\\u067A';\n\t  t['\\uFB62'] = '\\u067F';\n\t  t['\\uFB63'] = '\\u067F';\n\t  t['\\uFB64'] = '\\u067F';\n\t  t['\\uFB65'] = '\\u067F';\n\t  t['\\uFB66'] = '\\u0679';\n\t  t['\\uFB67'] = '\\u0679';\n\t  t['\\uFB68'] = '\\u0679';\n\t  t['\\uFB69'] = '\\u0679';\n\t  t['\\uFB6A'] = '\\u06A4';\n\t  t['\\uFB6B'] = '\\u06A4';\n\t  t['\\uFB6C'] = '\\u06A4';\n\t  t['\\uFB6D'] = '\\u06A4';\n\t  t['\\uFB6E'] = '\\u06A6';\n\t  t['\\uFB6F'] = '\\u06A6';\n\t  t['\\uFB70'] = '\\u06A6';\n\t  t['\\uFB71'] = '\\u06A6';\n\t  t['\\uFB72'] = '\\u0684';\n\t  t['\\uFB73'] = '\\u0684';\n\t  t['\\uFB74'] = '\\u0684';\n\t  t['\\uFB75'] = '\\u0684';\n\t  t['\\uFB76'] = '\\u0683';\n\t  t['\\uFB77'] = '\\u0683';\n\t  t['\\uFB78'] = '\\u0683';\n\t  t['\\uFB79'] = '\\u0683';\n\t  t['\\uFB7A'] = '\\u0686';\n\t  t['\\uFB7B'] = '\\u0686';\n\t  t['\\uFB7C'] = '\\u0686';\n\t  t['\\uFB7D'] = '\\u0686';\n\t  t['\\uFB7E'] = '\\u0687';\n\t  t['\\uFB7F'] = '\\u0687';\n\t  t['\\uFB80'] = '\\u0687';\n\t  t['\\uFB81'] = '\\u0687';\n\t  t['\\uFB82'] = '\\u068D';\n\t  t['\\uFB83'] = '\\u068D';\n\t  t['\\uFB84'] = '\\u068C';\n\t  t['\\uFB85'] = '\\u068C';\n\t  t['\\uFB86'] = '\\u068E';\n\t  t['\\uFB87'] = '\\u068E';\n\t  t['\\uFB88'] = '\\u0688';\n\t  t['\\uFB89'] = '\\u0688';\n\t  t['\\uFB8A'] = '\\u0698';\n\t  t['\\uFB8B'] = '\\u0698';\n\t  t['\\uFB8C'] = '\\u0691';\n\t  t['\\uFB8D'] = '\\u0691';\n\t  t['\\uFB8E'] = '\\u06A9';\n\t  t['\\uFB8F'] = '\\u06A9';\n\t  t['\\uFB90'] = '\\u06A9';\n\t  t['\\uFB91'] = '\\u06A9';\n\t  t['\\uFB92'] = '\\u06AF';\n\t  t['\\uFB93'] = '\\u06AF';\n\t  t['\\uFB94'] = '\\u06AF';\n\t  t['\\uFB95'] = '\\u06AF';\n\t  t['\\uFB96'] = '\\u06B3';\n\t  t['\\uFB97'] = '\\u06B3';\n\t  t['\\uFB98'] = '\\u06B3';\n\t  t['\\uFB99'] = '\\u06B3';\n\t  t['\\uFB9A'] = '\\u06B1';\n\t  t['\\uFB9B'] = '\\u06B1';\n\t  t['\\uFB9C'] = '\\u06B1';\n\t  t['\\uFB9D'] = '\\u06B1';\n\t  t['\\uFB9E'] = '\\u06BA';\n\t  t['\\uFB9F'] = '\\u06BA';\n\t  t['\\uFBA0'] = '\\u06BB';\n\t  t['\\uFBA1'] = '\\u06BB';\n\t  t['\\uFBA2'] = '\\u06BB';\n\t  t['\\uFBA3'] = '\\u06BB';\n\t  t['\\uFBA4'] = '\\u06C0';\n\t  t['\\uFBA5'] = '\\u06C0';\n\t  t['\\uFBA6'] = '\\u06C1';\n\t  t['\\uFBA7'] = '\\u06C1';\n\t  t['\\uFBA8'] = '\\u06C1';\n\t  t['\\uFBA9'] = '\\u06C1';\n\t  t['\\uFBAA'] = '\\u06BE';\n\t  t['\\uFBAB'] = '\\u06BE';\n\t  t['\\uFBAC'] = '\\u06BE';\n\t  t['\\uFBAD'] = '\\u06BE';\n\t  t['\\uFBAE'] = '\\u06D2';\n\t  t['\\uFBAF'] = '\\u06D2';\n\t  t['\\uFBB0'] = '\\u06D3';\n\t  t['\\uFBB1'] = '\\u06D3';\n\t  t['\\uFBD3'] = '\\u06AD';\n\t  t['\\uFBD4'] = '\\u06AD';\n\t  t['\\uFBD5'] = '\\u06AD';\n\t  t['\\uFBD6'] = '\\u06AD';\n\t  t['\\uFBD7'] = '\\u06C7';\n\t  t['\\uFBD8'] = '\\u06C7';\n\t  t['\\uFBD9'] = '\\u06C6';\n\t  t['\\uFBDA'] = '\\u06C6';\n\t  t['\\uFBDB'] = '\\u06C8';\n\t  t['\\uFBDC'] = '\\u06C8';\n\t  t['\\uFBDD'] = '\\u0677';\n\t  t['\\uFBDE'] = '\\u06CB';\n\t  t['\\uFBDF'] = '\\u06CB';\n\t  t['\\uFBE0'] = '\\u06C5';\n\t  t['\\uFBE1'] = '\\u06C5';\n\t  t['\\uFBE2'] = '\\u06C9';\n\t  t['\\uFBE3'] = '\\u06C9';\n\t  t['\\uFBE4'] = '\\u06D0';\n\t  t['\\uFBE5'] = '\\u06D0';\n\t  t['\\uFBE6'] = '\\u06D0';\n\t  t['\\uFBE7'] = '\\u06D0';\n\t  t['\\uFBE8'] = '\\u0649';\n\t  t['\\uFBE9'] = '\\u0649';\n\t  t['\\uFBEA'] = '\\u0626\\u0627';\n\t  t['\\uFBEB'] = '\\u0626\\u0627';\n\t  t['\\uFBEC'] = '\\u0626\\u06D5';\n\t  t['\\uFBED'] = '\\u0626\\u06D5';\n\t  t['\\uFBEE'] = '\\u0626\\u0648';\n\t  t['\\uFBEF'] = '\\u0626\\u0648';\n\t  t['\\uFBF0'] = '\\u0626\\u06C7';\n\t  t['\\uFBF1'] = '\\u0626\\u06C7';\n\t  t['\\uFBF2'] = '\\u0626\\u06C6';\n\t  t['\\uFBF3'] = '\\u0626\\u06C6';\n\t  t['\\uFBF4'] = '\\u0626\\u06C8';\n\t  t['\\uFBF5'] = '\\u0626\\u06C8';\n\t  t['\\uFBF6'] = '\\u0626\\u06D0';\n\t  t['\\uFBF7'] = '\\u0626\\u06D0';\n\t  t['\\uFBF8'] = '\\u0626\\u06D0';\n\t  t['\\uFBF9'] = '\\u0626\\u0649';\n\t  t['\\uFBFA'] = '\\u0626\\u0649';\n\t  t['\\uFBFB'] = '\\u0626\\u0649';\n\t  t['\\uFBFC'] = '\\u06CC';\n\t  t['\\uFBFD'] = '\\u06CC';\n\t  t['\\uFBFE'] = '\\u06CC';\n\t  t['\\uFBFF'] = '\\u06CC';\n\t  t['\\uFC00'] = '\\u0626\\u062C';\n\t  t['\\uFC01'] = '\\u0626\\u062D';\n\t  t['\\uFC02'] = '\\u0626\\u0645';\n\t  t['\\uFC03'] = '\\u0626\\u0649';\n\t  t['\\uFC04'] = '\\u0626\\u064A';\n\t  t['\\uFC05'] = '\\u0628\\u062C';\n\t  t['\\uFC06'] = '\\u0628\\u062D';\n\t  t['\\uFC07'] = '\\u0628\\u062E';\n\t  t['\\uFC08'] = '\\u0628\\u0645';\n\t  t['\\uFC09'] = '\\u0628\\u0649';\n\t  t['\\uFC0A'] = '\\u0628\\u064A';\n\t  t['\\uFC0B'] = '\\u062A\\u062C';\n\t  t['\\uFC0C'] = '\\u062A\\u062D';\n\t  t['\\uFC0D'] = '\\u062A\\u062E';\n\t  t['\\uFC0E'] = '\\u062A\\u0645';\n\t  t['\\uFC0F'] = '\\u062A\\u0649';\n\t  t['\\uFC10'] = '\\u062A\\u064A';\n\t  t['\\uFC11'] = '\\u062B\\u062C';\n\t  t['\\uFC12'] = '\\u062B\\u0645';\n\t  t['\\uFC13'] = '\\u062B\\u0649';\n\t  t['\\uFC14'] = '\\u062B\\u064A';\n\t  t['\\uFC15'] = '\\u062C\\u062D';\n\t  t['\\uFC16'] = '\\u062C\\u0645';\n\t  t['\\uFC17'] = '\\u062D\\u062C';\n\t  t['\\uFC18'] = '\\u062D\\u0645';\n\t  t['\\uFC19'] = '\\u062E\\u062C';\n\t  t['\\uFC1A'] = '\\u062E\\u062D';\n\t  t['\\uFC1B'] = '\\u062E\\u0645';\n\t  t['\\uFC1C'] = '\\u0633\\u062C';\n\t  t['\\uFC1D'] = '\\u0633\\u062D';\n\t  t['\\uFC1E'] = '\\u0633\\u062E';\n\t  t['\\uFC1F'] = '\\u0633\\u0645';\n\t  t['\\uFC20'] = '\\u0635\\u062D';\n\t  t['\\uFC21'] = '\\u0635\\u0645';\n\t  t['\\uFC22'] = '\\u0636\\u062C';\n\t  t['\\uFC23'] = '\\u0636\\u062D';\n\t  t['\\uFC24'] = '\\u0636\\u062E';\n\t  t['\\uFC25'] = '\\u0636\\u0645';\n\t  t['\\uFC26'] = '\\u0637\\u062D';\n\t  t['\\uFC27'] = '\\u0637\\u0645';\n\t  t['\\uFC28'] = '\\u0638\\u0645';\n\t  t['\\uFC29'] = '\\u0639\\u062C';\n\t  t['\\uFC2A'] = '\\u0639\\u0645';\n\t  t['\\uFC2B'] = '\\u063A\\u062C';\n\t  t['\\uFC2C'] = '\\u063A\\u0645';\n\t  t['\\uFC2D'] = '\\u0641\\u062C';\n\t  t['\\uFC2E'] = '\\u0641\\u062D';\n\t  t['\\uFC2F'] = '\\u0641\\u062E';\n\t  t['\\uFC30'] = '\\u0641\\u0645';\n\t  t['\\uFC31'] = '\\u0641\\u0649';\n\t  t['\\uFC32'] = '\\u0641\\u064A';\n\t  t['\\uFC33'] = '\\u0642\\u062D';\n\t  t['\\uFC34'] = '\\u0642\\u0645';\n\t  t['\\uFC35'] = '\\u0642\\u0649';\n\t  t['\\uFC36'] = '\\u0642\\u064A';\n\t  t['\\uFC37'] = '\\u0643\\u0627';\n\t  t['\\uFC38'] = '\\u0643\\u062C';\n\t  t['\\uFC39'] = '\\u0643\\u062D';\n\t  t['\\uFC3A'] = '\\u0643\\u062E';\n\t  t['\\uFC3B'] = '\\u0643\\u0644';\n\t  t['\\uFC3C'] = '\\u0643\\u0645';\n\t  t['\\uFC3D'] = '\\u0643\\u0649';\n\t  t['\\uFC3E'] = '\\u0643\\u064A';\n\t  t['\\uFC3F'] = '\\u0644\\u062C';\n\t  t['\\uFC40'] = '\\u0644\\u062D';\n\t  t['\\uFC41'] = '\\u0644\\u062E';\n\t  t['\\uFC42'] = '\\u0644\\u0645';\n\t  t['\\uFC43'] = '\\u0644\\u0649';\n\t  t['\\uFC44'] = '\\u0644\\u064A';\n\t  t['\\uFC45'] = '\\u0645\\u062C';\n\t  t['\\uFC46'] = '\\u0645\\u062D';\n\t  t['\\uFC47'] = '\\u0645\\u062E';\n\t  t['\\uFC48'] = '\\u0645\\u0645';\n\t  t['\\uFC49'] = '\\u0645\\u0649';\n\t  t['\\uFC4A'] = '\\u0645\\u064A';\n\t  t['\\uFC4B'] = '\\u0646\\u062C';\n\t  t['\\uFC4C'] = '\\u0646\\u062D';\n\t  t['\\uFC4D'] = '\\u0646\\u062E';\n\t  t['\\uFC4E'] = '\\u0646\\u0645';\n\t  t['\\uFC4F'] = '\\u0646\\u0649';\n\t  t['\\uFC50'] = '\\u0646\\u064A';\n\t  t['\\uFC51'] = '\\u0647\\u062C';\n\t  t['\\uFC52'] = '\\u0647\\u0645';\n\t  t['\\uFC53'] = '\\u0647\\u0649';\n\t  t['\\uFC54'] = '\\u0647\\u064A';\n\t  t['\\uFC55'] = '\\u064A\\u062C';\n\t  t['\\uFC56'] = '\\u064A\\u062D';\n\t  t['\\uFC57'] = '\\u064A\\u062E';\n\t  t['\\uFC58'] = '\\u064A\\u0645';\n\t  t['\\uFC59'] = '\\u064A\\u0649';\n\t  t['\\uFC5A'] = '\\u064A\\u064A';\n\t  t['\\uFC5B'] = '\\u0630\\u0670';\n\t  t['\\uFC5C'] = '\\u0631\\u0670';\n\t  t['\\uFC5D'] = '\\u0649\\u0670';\n\t  t['\\uFC5E'] = ' \\u064C\\u0651';\n\t  t['\\uFC5F'] = ' \\u064D\\u0651';\n\t  t['\\uFC60'] = ' \\u064E\\u0651';\n\t  t['\\uFC61'] = ' \\u064F\\u0651';\n\t  t['\\uFC62'] = ' \\u0650\\u0651';\n\t  t['\\uFC63'] = ' \\u0651\\u0670';\n\t  t['\\uFC64'] = '\\u0626\\u0631';\n\t  t['\\uFC65'] = '\\u0626\\u0632';\n\t  t['\\uFC66'] = '\\u0626\\u0645';\n\t  t['\\uFC67'] = '\\u0626\\u0646';\n\t  t['\\uFC68'] = '\\u0626\\u0649';\n\t  t['\\uFC69'] = '\\u0626\\u064A';\n\t  t['\\uFC6A'] = '\\u0628\\u0631';\n\t  t['\\uFC6B'] = '\\u0628\\u0632';\n\t  t['\\uFC6C'] = '\\u0628\\u0645';\n\t  t['\\uFC6D'] = '\\u0628\\u0646';\n\t  t['\\uFC6E'] = '\\u0628\\u0649';\n\t  t['\\uFC6F'] = '\\u0628\\u064A';\n\t  t['\\uFC70'] = '\\u062A\\u0631';\n\t  t['\\uFC71'] = '\\u062A\\u0632';\n\t  t['\\uFC72'] = '\\u062A\\u0645';\n\t  t['\\uFC73'] = '\\u062A\\u0646';\n\t  t['\\uFC74'] = '\\u062A\\u0649';\n\t  t['\\uFC75'] = '\\u062A\\u064A';\n\t  t['\\uFC76'] = '\\u062B\\u0631';\n\t  t['\\uFC77'] = '\\u062B\\u0632';\n\t  t['\\uFC78'] = '\\u062B\\u0645';\n\t  t['\\uFC79'] = '\\u062B\\u0646';\n\t  t['\\uFC7A'] = '\\u062B\\u0649';\n\t  t['\\uFC7B'] = '\\u062B\\u064A';\n\t  t['\\uFC7C'] = '\\u0641\\u0649';\n\t  t['\\uFC7D'] = '\\u0641\\u064A';\n\t  t['\\uFC7E'] = '\\u0642\\u0649';\n\t  t['\\uFC7F'] = '\\u0642\\u064A';\n\t  t['\\uFC80'] = '\\u0643\\u0627';\n\t  t['\\uFC81'] = '\\u0643\\u0644';\n\t  t['\\uFC82'] = '\\u0643\\u0645';\n\t  t['\\uFC83'] = '\\u0643\\u0649';\n\t  t['\\uFC84'] = '\\u0643\\u064A';\n\t  t['\\uFC85'] = '\\u0644\\u0645';\n\t  t['\\uFC86'] = '\\u0644\\u0649';\n\t  t['\\uFC87'] = '\\u0644\\u064A';\n\t  t['\\uFC88'] = '\\u0645\\u0627';\n\t  t['\\uFC89'] = '\\u0645\\u0645';\n\t  t['\\uFC8A'] = '\\u0646\\u0631';\n\t  t['\\uFC8B'] = '\\u0646\\u0632';\n\t  t['\\uFC8C'] = '\\u0646\\u0645';\n\t  t['\\uFC8D'] = '\\u0646\\u0646';\n\t  t['\\uFC8E'] = '\\u0646\\u0649';\n\t  t['\\uFC8F'] = '\\u0646\\u064A';\n\t  t['\\uFC90'] = '\\u0649\\u0670';\n\t  t['\\uFC91'] = '\\u064A\\u0631';\n\t  t['\\uFC92'] = '\\u064A\\u0632';\n\t  t['\\uFC93'] = '\\u064A\\u0645';\n\t  t['\\uFC94'] = '\\u064A\\u0646';\n\t  t['\\uFC95'] = '\\u064A\\u0649';\n\t  t['\\uFC96'] = '\\u064A\\u064A';\n\t  t['\\uFC97'] = '\\u0626\\u062C';\n\t  t['\\uFC98'] = '\\u0626\\u062D';\n\t  t['\\uFC99'] = '\\u0626\\u062E';\n\t  t['\\uFC9A'] = '\\u0626\\u0645';\n\t  t['\\uFC9B'] = '\\u0626\\u0647';\n\t  t['\\uFC9C'] = '\\u0628\\u062C';\n\t  t['\\uFC9D'] = '\\u0628\\u062D';\n\t  t['\\uFC9E'] = '\\u0628\\u062E';\n\t  t['\\uFC9F'] = '\\u0628\\u0645';\n\t  t['\\uFCA0'] = '\\u0628\\u0647';\n\t  t['\\uFCA1'] = '\\u062A\\u062C';\n\t  t['\\uFCA2'] = '\\u062A\\u062D';\n\t  t['\\uFCA3'] = '\\u062A\\u062E';\n\t  t['\\uFCA4'] = '\\u062A\\u0645';\n\t  t['\\uFCA5'] = '\\u062A\\u0647';\n\t  t['\\uFCA6'] = '\\u062B\\u0645';\n\t  t['\\uFCA7'] = '\\u062C\\u062D';\n\t  t['\\uFCA8'] = '\\u062C\\u0645';\n\t  t['\\uFCA9'] = '\\u062D\\u062C';\n\t  t['\\uFCAA'] = '\\u062D\\u0645';\n\t  t['\\uFCAB'] = '\\u062E\\u062C';\n\t  t['\\uFCAC'] = '\\u062E\\u0645';\n\t  t['\\uFCAD'] = '\\u0633\\u062C';\n\t  t['\\uFCAE'] = '\\u0633\\u062D';\n\t  t['\\uFCAF'] = '\\u0633\\u062E';\n\t  t['\\uFCB0'] = '\\u0633\\u0645';\n\t  t['\\uFCB1'] = '\\u0635\\u062D';\n\t  t['\\uFCB2'] = '\\u0635\\u062E';\n\t  t['\\uFCB3'] = '\\u0635\\u0645';\n\t  t['\\uFCB4'] = '\\u0636\\u062C';\n\t  t['\\uFCB5'] = '\\u0636\\u062D';\n\t  t['\\uFCB6'] = '\\u0636\\u062E';\n\t  t['\\uFCB7'] = '\\u0636\\u0645';\n\t  t['\\uFCB8'] = '\\u0637\\u062D';\n\t  t['\\uFCB9'] = '\\u0638\\u0645';\n\t  t['\\uFCBA'] = '\\u0639\\u062C';\n\t  t['\\uFCBB'] = '\\u0639\\u0645';\n\t  t['\\uFCBC'] = '\\u063A\\u062C';\n\t  t['\\uFCBD'] = '\\u063A\\u0645';\n\t  t['\\uFCBE'] = '\\u0641\\u062C';\n\t  t['\\uFCBF'] = '\\u0641\\u062D';\n\t  t['\\uFCC0'] = '\\u0641\\u062E';\n\t  t['\\uFCC1'] = '\\u0641\\u0645';\n\t  t['\\uFCC2'] = '\\u0642\\u062D';\n\t  t['\\uFCC3'] = '\\u0642\\u0645';\n\t  t['\\uFCC4'] = '\\u0643\\u062C';\n\t  t['\\uFCC5'] = '\\u0643\\u062D';\n\t  t['\\uFCC6'] = '\\u0643\\u062E';\n\t  t['\\uFCC7'] = '\\u0643\\u0644';\n\t  t['\\uFCC8'] = '\\u0643\\u0645';\n\t  t['\\uFCC9'] = '\\u0644\\u062C';\n\t  t['\\uFCCA'] = '\\u0644\\u062D';\n\t  t['\\uFCCB'] = '\\u0644\\u062E';\n\t  t['\\uFCCC'] = '\\u0644\\u0645';\n\t  t['\\uFCCD'] = '\\u0644\\u0647';\n\t  t['\\uFCCE'] = '\\u0645\\u062C';\n\t  t['\\uFCCF'] = '\\u0645\\u062D';\n\t  t['\\uFCD0'] = '\\u0645\\u062E';\n\t  t['\\uFCD1'] = '\\u0645\\u0645';\n\t  t['\\uFCD2'] = '\\u0646\\u062C';\n\t  t['\\uFCD3'] = '\\u0646\\u062D';\n\t  t['\\uFCD4'] = '\\u0646\\u062E';\n\t  t['\\uFCD5'] = '\\u0646\\u0645';\n\t  t['\\uFCD6'] = '\\u0646\\u0647';\n\t  t['\\uFCD7'] = '\\u0647\\u062C';\n\t  t['\\uFCD8'] = '\\u0647\\u0645';\n\t  t['\\uFCD9'] = '\\u0647\\u0670';\n\t  t['\\uFCDA'] = '\\u064A\\u062C';\n\t  t['\\uFCDB'] = '\\u064A\\u062D';\n\t  t['\\uFCDC'] = '\\u064A\\u062E';\n\t  t['\\uFCDD'] = '\\u064A\\u0645';\n\t  t['\\uFCDE'] = '\\u064A\\u0647';\n\t  t['\\uFCDF'] = '\\u0626\\u0645';\n\t  t['\\uFCE0'] = '\\u0626\\u0647';\n\t  t['\\uFCE1'] = '\\u0628\\u0645';\n\t  t['\\uFCE2'] = '\\u0628\\u0647';\n\t  t['\\uFCE3'] = '\\u062A\\u0645';\n\t  t['\\uFCE4'] = '\\u062A\\u0647';\n\t  t['\\uFCE5'] = '\\u062B\\u0645';\n\t  t['\\uFCE6'] = '\\u062B\\u0647';\n\t  t['\\uFCE7'] = '\\u0633\\u0645';\n\t  t['\\uFCE8'] = '\\u0633\\u0647';\n\t  t['\\uFCE9'] = '\\u0634\\u0645';\n\t  t['\\uFCEA'] = '\\u0634\\u0647';\n\t  t['\\uFCEB'] = '\\u0643\\u0644';\n\t  t['\\uFCEC'] = '\\u0643\\u0645';\n\t  t['\\uFCED'] = '\\u0644\\u0645';\n\t  t['\\uFCEE'] = '\\u0646\\u0645';\n\t  t['\\uFCEF'] = '\\u0646\\u0647';\n\t  t['\\uFCF0'] = '\\u064A\\u0645';\n\t  t['\\uFCF1'] = '\\u064A\\u0647';\n\t  t['\\uFCF2'] = '\\u0640\\u064E\\u0651';\n\t  t['\\uFCF3'] = '\\u0640\\u064F\\u0651';\n\t  t['\\uFCF4'] = '\\u0640\\u0650\\u0651';\n\t  t['\\uFCF5'] = '\\u0637\\u0649';\n\t  t['\\uFCF6'] = '\\u0637\\u064A';\n\t  t['\\uFCF7'] = '\\u0639\\u0649';\n\t  t['\\uFCF8'] = '\\u0639\\u064A';\n\t  t['\\uFCF9'] = '\\u063A\\u0649';\n\t  t['\\uFCFA'] = '\\u063A\\u064A';\n\t  t['\\uFCFB'] = '\\u0633\\u0649';\n\t  t['\\uFCFC'] = '\\u0633\\u064A';\n\t  t['\\uFCFD'] = '\\u0634\\u0649';\n\t  t['\\uFCFE'] = '\\u0634\\u064A';\n\t  t['\\uFCFF'] = '\\u062D\\u0649';\n\t  t['\\uFD00'] = '\\u062D\\u064A';\n\t  t['\\uFD01'] = '\\u062C\\u0649';\n\t  t['\\uFD02'] = '\\u062C\\u064A';\n\t  t['\\uFD03'] = '\\u062E\\u0649';\n\t  t['\\uFD04'] = '\\u062E\\u064A';\n\t  t['\\uFD05'] = '\\u0635\\u0649';\n\t  t['\\uFD06'] = '\\u0635\\u064A';\n\t  t['\\uFD07'] = '\\u0636\\u0649';\n\t  t['\\uFD08'] = '\\u0636\\u064A';\n\t  t['\\uFD09'] = '\\u0634\\u062C';\n\t  t['\\uFD0A'] = '\\u0634\\u062D';\n\t  t['\\uFD0B'] = '\\u0634\\u062E';\n\t  t['\\uFD0C'] = '\\u0634\\u0645';\n\t  t['\\uFD0D'] = '\\u0634\\u0631';\n\t  t['\\uFD0E'] = '\\u0633\\u0631';\n\t  t['\\uFD0F'] = '\\u0635\\u0631';\n\t  t['\\uFD10'] = '\\u0636\\u0631';\n\t  t['\\uFD11'] = '\\u0637\\u0649';\n\t  t['\\uFD12'] = '\\u0637\\u064A';\n\t  t['\\uFD13'] = '\\u0639\\u0649';\n\t  t['\\uFD14'] = '\\u0639\\u064A';\n\t  t['\\uFD15'] = '\\u063A\\u0649';\n\t  t['\\uFD16'] = '\\u063A\\u064A';\n\t  t['\\uFD17'] = '\\u0633\\u0649';\n\t  t['\\uFD18'] = '\\u0633\\u064A';\n\t  t['\\uFD19'] = '\\u0634\\u0649';\n\t  t['\\uFD1A'] = '\\u0634\\u064A';\n\t  t['\\uFD1B'] = '\\u062D\\u0649';\n\t  t['\\uFD1C'] = '\\u062D\\u064A';\n\t  t['\\uFD1D'] = '\\u062C\\u0649';\n\t  t['\\uFD1E'] = '\\u062C\\u064A';\n\t  t['\\uFD1F'] = '\\u062E\\u0649';\n\t  t['\\uFD20'] = '\\u062E\\u064A';\n\t  t['\\uFD21'] = '\\u0635\\u0649';\n\t  t['\\uFD22'] = '\\u0635\\u064A';\n\t  t['\\uFD23'] = '\\u0636\\u0649';\n\t  t['\\uFD24'] = '\\u0636\\u064A';\n\t  t['\\uFD25'] = '\\u0634\\u062C';\n\t  t['\\uFD26'] = '\\u0634\\u062D';\n\t  t['\\uFD27'] = '\\u0634\\u062E';\n\t  t['\\uFD28'] = '\\u0634\\u0645';\n\t  t['\\uFD29'] = '\\u0634\\u0631';\n\t  t['\\uFD2A'] = '\\u0633\\u0631';\n\t  t['\\uFD2B'] = '\\u0635\\u0631';\n\t  t['\\uFD2C'] = '\\u0636\\u0631';\n\t  t['\\uFD2D'] = '\\u0634\\u062C';\n\t  t['\\uFD2E'] = '\\u0634\\u062D';\n\t  t['\\uFD2F'] = '\\u0634\\u062E';\n\t  t['\\uFD30'] = '\\u0634\\u0645';\n\t  t['\\uFD31'] = '\\u0633\\u0647';\n\t  t['\\uFD32'] = '\\u0634\\u0647';\n\t  t['\\uFD33'] = '\\u0637\\u0645';\n\t  t['\\uFD34'] = '\\u0633\\u062C';\n\t  t['\\uFD35'] = '\\u0633\\u062D';\n\t  t['\\uFD36'] = '\\u0633\\u062E';\n\t  t['\\uFD37'] = '\\u0634\\u062C';\n\t  t['\\uFD38'] = '\\u0634\\u062D';\n\t  t['\\uFD39'] = '\\u0634\\u062E';\n\t  t['\\uFD3A'] = '\\u0637\\u0645';\n\t  t['\\uFD3B'] = '\\u0638\\u0645';\n\t  t['\\uFD3C'] = '\\u0627\\u064B';\n\t  t['\\uFD3D'] = '\\u0627\\u064B';\n\t  t['\\uFD50'] = '\\u062A\\u062C\\u0645';\n\t  t['\\uFD51'] = '\\u062A\\u062D\\u062C';\n\t  t['\\uFD52'] = '\\u062A\\u062D\\u062C';\n\t  t['\\uFD53'] = '\\u062A\\u062D\\u0645';\n\t  t['\\uFD54'] = '\\u062A\\u062E\\u0645';\n\t  t['\\uFD55'] = '\\u062A\\u0645\\u062C';\n\t  t['\\uFD56'] = '\\u062A\\u0645\\u062D';\n\t  t['\\uFD57'] = '\\u062A\\u0645\\u062E';\n\t  t['\\uFD58'] = '\\u062C\\u0645\\u062D';\n\t  t['\\uFD59'] = '\\u062C\\u0645\\u062D';\n\t  t['\\uFD5A'] = '\\u062D\\u0645\\u064A';\n\t  t['\\uFD5B'] = '\\u062D\\u0645\\u0649';\n\t  t['\\uFD5C'] = '\\u0633\\u062D\\u062C';\n\t  t['\\uFD5D'] = '\\u0633\\u062C\\u062D';\n\t  t['\\uFD5E'] = '\\u0633\\u062C\\u0649';\n\t  t['\\uFD5F'] = '\\u0633\\u0645\\u062D';\n\t  t['\\uFD60'] = '\\u0633\\u0645\\u062D';\n\t  t['\\uFD61'] = '\\u0633\\u0645\\u062C';\n\t  t['\\uFD62'] = '\\u0633\\u0645\\u0645';\n\t  t['\\uFD63'] = '\\u0633\\u0645\\u0645';\n\t  t['\\uFD64'] = '\\u0635\\u062D\\u062D';\n\t  t['\\uFD65'] = '\\u0635\\u062D\\u062D';\n\t  t['\\uFD66'] = '\\u0635\\u0645\\u0645';\n\t  t['\\uFD67'] = '\\u0634\\u062D\\u0645';\n\t  t['\\uFD68'] = '\\u0634\\u062D\\u0645';\n\t  t['\\uFD69'] = '\\u0634\\u062C\\u064A';\n\t  t['\\uFD6A'] = '\\u0634\\u0645\\u062E';\n\t  t['\\uFD6B'] = '\\u0634\\u0645\\u062E';\n\t  t['\\uFD6C'] = '\\u0634\\u0645\\u0645';\n\t  t['\\uFD6D'] = '\\u0634\\u0645\\u0645';\n\t  t['\\uFD6E'] = '\\u0636\\u062D\\u0649';\n\t  t['\\uFD6F'] = '\\u0636\\u062E\\u0645';\n\t  t['\\uFD70'] = '\\u0636\\u062E\\u0645';\n\t  t['\\uFD71'] = '\\u0637\\u0645\\u062D';\n\t  t['\\uFD72'] = '\\u0637\\u0645\\u062D';\n\t  t['\\uFD73'] = '\\u0637\\u0645\\u0645';\n\t  t['\\uFD74'] = '\\u0637\\u0645\\u064A';\n\t  t['\\uFD75'] = '\\u0639\\u062C\\u0645';\n\t  t['\\uFD76'] = '\\u0639\\u0645\\u0645';\n\t  t['\\uFD77'] = '\\u0639\\u0645\\u0645';\n\t  t['\\uFD78'] = '\\u0639\\u0645\\u0649';\n\t  t['\\uFD79'] = '\\u063A\\u0645\\u0645';\n\t  t['\\uFD7A'] = '\\u063A\\u0645\\u064A';\n\t  t['\\uFD7B'] = '\\u063A\\u0645\\u0649';\n\t  t['\\uFD7C'] = '\\u0641\\u062E\\u0645';\n\t  t['\\uFD7D'] = '\\u0641\\u062E\\u0645';\n\t  t['\\uFD7E'] = '\\u0642\\u0645\\u062D';\n\t  t['\\uFD7F'] = '\\u0642\\u0645\\u0645';\n\t  t['\\uFD80'] = '\\u0644\\u062D\\u0645';\n\t  t['\\uFD81'] = '\\u0644\\u062D\\u064A';\n\t  t['\\uFD82'] = '\\u0644\\u062D\\u0649';\n\t  t['\\uFD83'] = '\\u0644\\u062C\\u062C';\n\t  t['\\uFD84'] = '\\u0644\\u062C\\u062C';\n\t  t['\\uFD85'] = '\\u0644\\u062E\\u0645';\n\t  t['\\uFD86'] = '\\u0644\\u062E\\u0645';\n\t  t['\\uFD87'] = '\\u0644\\u0645\\u062D';\n\t  t['\\uFD88'] = '\\u0644\\u0645\\u062D';\n\t  t['\\uFD89'] = '\\u0645\\u062D\\u062C';\n\t  t['\\uFD8A'] = '\\u0645\\u062D\\u0645';\n\t  t['\\uFD8B'] = '\\u0645\\u062D\\u064A';\n\t  t['\\uFD8C'] = '\\u0645\\u062C\\u062D';\n\t  t['\\uFD8D'] = '\\u0645\\u062C\\u0645';\n\t  t['\\uFD8E'] = '\\u0645\\u062E\\u062C';\n\t  t['\\uFD8F'] = '\\u0645\\u062E\\u0645';\n\t  t['\\uFD92'] = '\\u0645\\u062C\\u062E';\n\t  t['\\uFD93'] = '\\u0647\\u0645\\u062C';\n\t  t['\\uFD94'] = '\\u0647\\u0645\\u0645';\n\t  t['\\uFD95'] = '\\u0646\\u062D\\u0645';\n\t  t['\\uFD96'] = '\\u0646\\u062D\\u0649';\n\t  t['\\uFD97'] = '\\u0646\\u062C\\u0645';\n\t  t['\\uFD98'] = '\\u0646\\u062C\\u0645';\n\t  t['\\uFD99'] = '\\u0646\\u062C\\u0649';\n\t  t['\\uFD9A'] = '\\u0646\\u0645\\u064A';\n\t  t['\\uFD9B'] = '\\u0646\\u0645\\u0649';\n\t  t['\\uFD9C'] = '\\u064A\\u0645\\u0645';\n\t  t['\\uFD9D'] = '\\u064A\\u0645\\u0645';\n\t  t['\\uFD9E'] = '\\u0628\\u062E\\u064A';\n\t  t['\\uFD9F'] = '\\u062A\\u062C\\u064A';\n\t  t['\\uFDA0'] = '\\u062A\\u062C\\u0649';\n\t  t['\\uFDA1'] = '\\u062A\\u062E\\u064A';\n\t  t['\\uFDA2'] = '\\u062A\\u062E\\u0649';\n\t  t['\\uFDA3'] = '\\u062A\\u0645\\u064A';\n\t  t['\\uFDA4'] = '\\u062A\\u0645\\u0649';\n\t  t['\\uFDA5'] = '\\u062C\\u0645\\u064A';\n\t  t['\\uFDA6'] = '\\u062C\\u062D\\u0649';\n\t  t['\\uFDA7'] = '\\u062C\\u0645\\u0649';\n\t  t['\\uFDA8'] = '\\u0633\\u062E\\u0649';\n\t  t['\\uFDA9'] = '\\u0635\\u062D\\u064A';\n\t  t['\\uFDAA'] = '\\u0634\\u062D\\u064A';\n\t  t['\\uFDAB'] = '\\u0636\\u062D\\u064A';\n\t  t['\\uFDAC'] = '\\u0644\\u062C\\u064A';\n\t  t['\\uFDAD'] = '\\u0644\\u0645\\u064A';\n\t  t['\\uFDAE'] = '\\u064A\\u062D\\u064A';\n\t  t['\\uFDAF'] = '\\u064A\\u062C\\u064A';\n\t  t['\\uFDB0'] = '\\u064A\\u0645\\u064A';\n\t  t['\\uFDB1'] = '\\u0645\\u0645\\u064A';\n\t  t['\\uFDB2'] = '\\u0642\\u0645\\u064A';\n\t  t['\\uFDB3'] = '\\u0646\\u062D\\u064A';\n\t  t['\\uFDB4'] = '\\u0642\\u0645\\u062D';\n\t  t['\\uFDB5'] = '\\u0644\\u062D\\u0645';\n\t  t['\\uFDB6'] = '\\u0639\\u0645\\u064A';\n\t  t['\\uFDB7'] = '\\u0643\\u0645\\u064A';\n\t  t['\\uFDB8'] = '\\u0646\\u062C\\u062D';\n\t  t['\\uFDB9'] = '\\u0645\\u062E\\u064A';\n\t  t['\\uFDBA'] = '\\u0644\\u062C\\u0645';\n\t  t['\\uFDBB'] = '\\u0643\\u0645\\u0645';\n\t  t['\\uFDBC'] = '\\u0644\\u062C\\u0645';\n\t  t['\\uFDBD'] = '\\u0646\\u062C\\u062D';\n\t  t['\\uFDBE'] = '\\u062C\\u062D\\u064A';\n\t  t['\\uFDBF'] = '\\u062D\\u062C\\u064A';\n\t  t['\\uFDC0'] = '\\u0645\\u062C\\u064A';\n\t  t['\\uFDC1'] = '\\u0641\\u0645\\u064A';\n\t  t['\\uFDC2'] = '\\u0628\\u062D\\u064A';\n\t  t['\\uFDC3'] = '\\u0643\\u0645\\u0645';\n\t  t['\\uFDC4'] = '\\u0639\\u062C\\u0645';\n\t  t['\\uFDC5'] = '\\u0635\\u0645\\u0645';\n\t  t['\\uFDC6'] = '\\u0633\\u062E\\u064A';\n\t  t['\\uFDC7'] = '\\u0646\\u062C\\u064A';\n\t  t['\\uFE49'] = '\\u203E';\n\t  t['\\uFE4A'] = '\\u203E';\n\t  t['\\uFE4B'] = '\\u203E';\n\t  t['\\uFE4C'] = '\\u203E';\n\t  t['\\uFE4D'] = '_';\n\t  t['\\uFE4E'] = '_';\n\t  t['\\uFE4F'] = '_';\n\t  t['\\uFE80'] = '\\u0621';\n\t  t['\\uFE81'] = '\\u0622';\n\t  t['\\uFE82'] = '\\u0622';\n\t  t['\\uFE83'] = '\\u0623';\n\t  t['\\uFE84'] = '\\u0623';\n\t  t['\\uFE85'] = '\\u0624';\n\t  t['\\uFE86'] = '\\u0624';\n\t  t['\\uFE87'] = '\\u0625';\n\t  t['\\uFE88'] = '\\u0625';\n\t  t['\\uFE89'] = '\\u0626';\n\t  t['\\uFE8A'] = '\\u0626';\n\t  t['\\uFE8B'] = '\\u0626';\n\t  t['\\uFE8C'] = '\\u0626';\n\t  t['\\uFE8D'] = '\\u0627';\n\t  t['\\uFE8E'] = '\\u0627';\n\t  t['\\uFE8F'] = '\\u0628';\n\t  t['\\uFE90'] = '\\u0628';\n\t  t['\\uFE91'] = '\\u0628';\n\t  t['\\uFE92'] = '\\u0628';\n\t  t['\\uFE93'] = '\\u0629';\n\t  t['\\uFE94'] = '\\u0629';\n\t  t['\\uFE95'] = '\\u062A';\n\t  t['\\uFE96'] = '\\u062A';\n\t  t['\\uFE97'] = '\\u062A';\n\t  t['\\uFE98'] = '\\u062A';\n\t  t['\\uFE99'] = '\\u062B';\n\t  t['\\uFE9A'] = '\\u062B';\n\t  t['\\uFE9B'] = '\\u062B';\n\t  t['\\uFE9C'] = '\\u062B';\n\t  t['\\uFE9D'] = '\\u062C';\n\t  t['\\uFE9E'] = '\\u062C';\n\t  t['\\uFE9F'] = '\\u062C';\n\t  t['\\uFEA0'] = '\\u062C';\n\t  t['\\uFEA1'] = '\\u062D';\n\t  t['\\uFEA2'] = '\\u062D';\n\t  t['\\uFEA3'] = '\\u062D';\n\t  t['\\uFEA4'] = '\\u062D';\n\t  t['\\uFEA5'] = '\\u062E';\n\t  t['\\uFEA6'] = '\\u062E';\n\t  t['\\uFEA7'] = '\\u062E';\n\t  t['\\uFEA8'] = '\\u062E';\n\t  t['\\uFEA9'] = '\\u062F';\n\t  t['\\uFEAA'] = '\\u062F';\n\t  t['\\uFEAB'] = '\\u0630';\n\t  t['\\uFEAC'] = '\\u0630';\n\t  t['\\uFEAD'] = '\\u0631';\n\t  t['\\uFEAE'] = '\\u0631';\n\t  t['\\uFEAF'] = '\\u0632';\n\t  t['\\uFEB0'] = '\\u0632';\n\t  t['\\uFEB1'] = '\\u0633';\n\t  t['\\uFEB2'] = '\\u0633';\n\t  t['\\uFEB3'] = '\\u0633';\n\t  t['\\uFEB4'] = '\\u0633';\n\t  t['\\uFEB5'] = '\\u0634';\n\t  t['\\uFEB6'] = '\\u0634';\n\t  t['\\uFEB7'] = '\\u0634';\n\t  t['\\uFEB8'] = '\\u0634';\n\t  t['\\uFEB9'] = '\\u0635';\n\t  t['\\uFEBA'] = '\\u0635';\n\t  t['\\uFEBB'] = '\\u0635';\n\t  t['\\uFEBC'] = '\\u0635';\n\t  t['\\uFEBD'] = '\\u0636';\n\t  t['\\uFEBE'] = '\\u0636';\n\t  t['\\uFEBF'] = '\\u0636';\n\t  t['\\uFEC0'] = '\\u0636';\n\t  t['\\uFEC1'] = '\\u0637';\n\t  t['\\uFEC2'] = '\\u0637';\n\t  t['\\uFEC3'] = '\\u0637';\n\t  t['\\uFEC4'] = '\\u0637';\n\t  t['\\uFEC5'] = '\\u0638';\n\t  t['\\uFEC6'] = '\\u0638';\n\t  t['\\uFEC7'] = '\\u0638';\n\t  t['\\uFEC8'] = '\\u0638';\n\t  t['\\uFEC9'] = '\\u0639';\n\t  t['\\uFECA'] = '\\u0639';\n\t  t['\\uFECB'] = '\\u0639';\n\t  t['\\uFECC'] = '\\u0639';\n\t  t['\\uFECD'] = '\\u063A';\n\t  t['\\uFECE'] = '\\u063A';\n\t  t['\\uFECF'] = '\\u063A';\n\t  t['\\uFED0'] = '\\u063A';\n\t  t['\\uFED1'] = '\\u0641';\n\t  t['\\uFED2'] = '\\u0641';\n\t  t['\\uFED3'] = '\\u0641';\n\t  t['\\uFED4'] = '\\u0641';\n\t  t['\\uFED5'] = '\\u0642';\n\t  t['\\uFED6'] = '\\u0642';\n\t  t['\\uFED7'] = '\\u0642';\n\t  t['\\uFED8'] = '\\u0642';\n\t  t['\\uFED9'] = '\\u0643';\n\t  t['\\uFEDA'] = '\\u0643';\n\t  t['\\uFEDB'] = '\\u0643';\n\t  t['\\uFEDC'] = '\\u0643';\n\t  t['\\uFEDD'] = '\\u0644';\n\t  t['\\uFEDE'] = '\\u0644';\n\t  t['\\uFEDF'] = '\\u0644';\n\t  t['\\uFEE0'] = '\\u0644';\n\t  t['\\uFEE1'] = '\\u0645';\n\t  t['\\uFEE2'] = '\\u0645';\n\t  t['\\uFEE3'] = '\\u0645';\n\t  t['\\uFEE4'] = '\\u0645';\n\t  t['\\uFEE5'] = '\\u0646';\n\t  t['\\uFEE6'] = '\\u0646';\n\t  t['\\uFEE7'] = '\\u0646';\n\t  t['\\uFEE8'] = '\\u0646';\n\t  t['\\uFEE9'] = '\\u0647';\n\t  t['\\uFEEA'] = '\\u0647';\n\t  t['\\uFEEB'] = '\\u0647';\n\t  t['\\uFEEC'] = '\\u0647';\n\t  t['\\uFEED'] = '\\u0648';\n\t  t['\\uFEEE'] = '\\u0648';\n\t  t['\\uFEEF'] = '\\u0649';\n\t  t['\\uFEF0'] = '\\u0649';\n\t  t['\\uFEF1'] = '\\u064A';\n\t  t['\\uFEF2'] = '\\u064A';\n\t  t['\\uFEF3'] = '\\u064A';\n\t  t['\\uFEF4'] = '\\u064A';\n\t  t['\\uFEF5'] = '\\u0644\\u0622';\n\t  t['\\uFEF6'] = '\\u0644\\u0622';\n\t  t['\\uFEF7'] = '\\u0644\\u0623';\n\t  t['\\uFEF8'] = '\\u0644\\u0623';\n\t  t['\\uFEF9'] = '\\u0644\\u0625';\n\t  t['\\uFEFA'] = '\\u0644\\u0625';\n\t  t['\\uFEFB'] = '\\u0644\\u0627';\n\t  t['\\uFEFC'] = '\\u0644\\u0627';\n\t});\n\tfunction reverseIfRtl(chars) {\n\t  var charsLength = chars.length;\n\t  if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n\t    return chars;\n\t  }\n\t  var s = '';\n\t  for (var ii = charsLength - 1; ii >= 0; ii--) {\n\t    s += chars[ii];\n\t  }\n\t  return s;\n\t}\n\texports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\n\texports.reverseIfRtl = reverseIfRtl;\n\texports.getUnicodeRangeFor = getUnicodeRangeFor;\n\texports.getNormalizedUnicodes = getNormalizedUnicodes;\n\texports.getUnicodeForGlyph = getUnicodeForGlyph;\n\t\n\t/***/ }),\n\t/* 81 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.PostScriptCompiler = exports.PostScriptEvaluator = exports.PDFFunctionFactory = exports.isPDFFunction = undefined;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _primitives = __w_pdfjs_require__(2);\n\t\n\tvar _ps_parser = __w_pdfjs_require__(141);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar IsEvalSupportedCached = {\n\t  get value() {\n\t    return (0, _util.shadow)(this, 'value', (0, _util.isEvalSupported)());\n\t  }\n\t};\n\t\n\tvar PDFFunctionFactory = function () {\n\t  function PDFFunctionFactory(_ref) {\n\t    var xref = _ref.xref,\n\t        _ref$isEvalSupported = _ref.isEvalSupported,\n\t        isEvalSupported = _ref$isEvalSupported === undefined ? true : _ref$isEvalSupported;\n\t\n\t    _classCallCheck(this, PDFFunctionFactory);\n\t\n\t    this.xref = xref;\n\t    this.isEvalSupported = isEvalSupported !== false;\n\t  }\n\t\n\t  _createClass(PDFFunctionFactory, [{\n\t    key: 'create',\n\t    value: function create(fn) {\n\t      return PDFFunction.parse({\n\t        xref: this.xref,\n\t        isEvalSupported: this.isEvalSupported,\n\t        fn: fn\n\t      });\n\t    }\n\t  }, {\n\t    key: 'createFromArray',\n\t    value: function createFromArray(fnObj) {\n\t      return PDFFunction.parseArray({\n\t        xref: this.xref,\n\t        isEvalSupported: this.isEvalSupported,\n\t        fnObj: fnObj\n\t      });\n\t    }\n\t  }, {\n\t    key: 'createFromIR',\n\t    value: function createFromIR(IR) {\n\t      return PDFFunction.fromIR({\n\t        xref: this.xref,\n\t        isEvalSupported: this.isEvalSupported,\n\t        IR: IR\n\t      });\n\t    }\n\t  }, {\n\t    key: 'createIR',\n\t    value: function createIR(fn) {\n\t      return PDFFunction.getIR({\n\t        xref: this.xref,\n\t        isEvalSupported: this.isEvalSupported,\n\t        fn: fn\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return PDFFunctionFactory;\n\t}();\n\t\n\tvar PDFFunction = function PDFFunctionClosure() {\n\t  var CONSTRUCT_SAMPLED = 0;\n\t  var CONSTRUCT_INTERPOLATED = 2;\n\t  var CONSTRUCT_STICHED = 3;\n\t  var CONSTRUCT_POSTSCRIPT = 4;\n\t  return {\n\t    getSampleArray: function getSampleArray(size, outputSize, bps, stream) {\n\t      var i, ii;\n\t      var length = 1;\n\t      for (i = 0, ii = size.length; i < ii; i++) {\n\t        length *= size[i];\n\t      }\n\t      length *= outputSize;\n\t      var array = new Array(length);\n\t      var codeSize = 0;\n\t      var codeBuf = 0;\n\t      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n\t      var strBytes = stream.getBytes((length * bps + 7) / 8);\n\t      var strIdx = 0;\n\t      for (i = 0; i < length; i++) {\n\t        while (codeSize < bps) {\n\t          codeBuf <<= 8;\n\t          codeBuf |= strBytes[strIdx++];\n\t          codeSize += 8;\n\t        }\n\t        codeSize -= bps;\n\t        array[i] = (codeBuf >> codeSize) * sampleMul;\n\t        codeBuf &= (1 << codeSize) - 1;\n\t      }\n\t      return array;\n\t    },\n\t    getIR: function getIR(_ref2) {\n\t      var xref = _ref2.xref,\n\t          isEvalSupported = _ref2.isEvalSupported,\n\t          fn = _ref2.fn;\n\t\n\t      var dict = fn.dict;\n\t      if (!dict) {\n\t        dict = fn;\n\t      }\n\t      var types = [this.constructSampled, null, this.constructInterpolated, this.constructStiched, this.constructPostScript];\n\t      var typeNum = dict.get('FunctionType');\n\t      var typeFn = types[typeNum];\n\t      if (!typeFn) {\n\t        throw new _util.FormatError('Unknown type of function');\n\t      }\n\t      return typeFn.call(this, {\n\t        xref: xref,\n\t        isEvalSupported: isEvalSupported,\n\t        fn: fn,\n\t        dict: dict\n\t      });\n\t    },\n\t    fromIR: function fromIR(_ref3) {\n\t      var xref = _ref3.xref,\n\t          isEvalSupported = _ref3.isEvalSupported,\n\t          IR = _ref3.IR;\n\t\n\t      var type = IR[0];\n\t      switch (type) {\n\t        case CONSTRUCT_SAMPLED:\n\t          return this.constructSampledFromIR({\n\t            xref: xref,\n\t            isEvalSupported: isEvalSupported,\n\t            IR: IR\n\t          });\n\t        case CONSTRUCT_INTERPOLATED:\n\t          return this.constructInterpolatedFromIR({\n\t            xref: xref,\n\t            isEvalSupported: isEvalSupported,\n\t            IR: IR\n\t          });\n\t        case CONSTRUCT_STICHED:\n\t          return this.constructStichedFromIR({\n\t            xref: xref,\n\t            isEvalSupported: isEvalSupported,\n\t            IR: IR\n\t          });\n\t        default:\n\t          return this.constructPostScriptFromIR({\n\t            xref: xref,\n\t            isEvalSupported: isEvalSupported,\n\t            IR: IR\n\t          });\n\t      }\n\t    },\n\t    parse: function parse(_ref4) {\n\t      var xref = _ref4.xref,\n\t          isEvalSupported = _ref4.isEvalSupported,\n\t          fn = _ref4.fn;\n\t\n\t      var IR = this.getIR({\n\t        xref: xref,\n\t        isEvalSupported: isEvalSupported,\n\t        fn: fn\n\t      });\n\t      return this.fromIR({\n\t        xref: xref,\n\t        isEvalSupported: isEvalSupported,\n\t        IR: IR\n\t      });\n\t    },\n\t    parseArray: function parseArray(_ref5) {\n\t      var xref = _ref5.xref,\n\t          isEvalSupported = _ref5.isEvalSupported,\n\t          fnObj = _ref5.fnObj;\n\t\n\t      if (!Array.isArray(fnObj)) {\n\t        return this.parse({\n\t          xref: xref,\n\t          isEvalSupported: isEvalSupported,\n\t          fn: fnObj\n\t        });\n\t      }\n\t      var fnArray = [];\n\t      for (var j = 0, jj = fnObj.length; j < jj; j++) {\n\t        fnArray.push(this.parse({\n\t          xref: xref,\n\t          isEvalSupported: isEvalSupported,\n\t          fn: xref.fetchIfRef(fnObj[j])\n\t        }));\n\t      }\n\t      return function (src, srcOffset, dest, destOffset) {\n\t        for (var i = 0, ii = fnArray.length; i < ii; i++) {\n\t          fnArray[i](src, srcOffset, dest, destOffset + i);\n\t        }\n\t      };\n\t    },\n\t    constructSampled: function constructSampled(_ref6) {\n\t      var xref = _ref6.xref,\n\t          isEvalSupported = _ref6.isEvalSupported,\n\t          fn = _ref6.fn,\n\t          dict = _ref6.dict;\n\t\n\t      function toMultiArray(arr) {\n\t        var inputLength = arr.length;\n\t        var out = [];\n\t        var index = 0;\n\t        for (var i = 0; i < inputLength; i += 2) {\n\t          out[index] = [arr[i], arr[i + 1]];\n\t          ++index;\n\t        }\n\t        return out;\n\t      }\n\t      var domain = dict.getArray('Domain');\n\t      var range = dict.getArray('Range');\n\t      if (!domain || !range) {\n\t        throw new _util.FormatError('No domain or range');\n\t      }\n\t      var inputSize = domain.length / 2;\n\t      var outputSize = range.length / 2;\n\t      domain = toMultiArray(domain);\n\t      range = toMultiArray(range);\n\t      var size = dict.get('Size');\n\t      var bps = dict.get('BitsPerSample');\n\t      var order = dict.get('Order') || 1;\n\t      if (order !== 1) {\n\t        (0, _util.info)('No support for cubic spline interpolation: ' + order);\n\t      }\n\t      var encode = dict.getArray('Encode');\n\t      if (!encode) {\n\t        encode = [];\n\t        for (var i = 0; i < inputSize; ++i) {\n\t          encode.push(0);\n\t          encode.push(size[i] - 1);\n\t        }\n\t      }\n\t      encode = toMultiArray(encode);\n\t      var decode = dict.getArray('Decode');\n\t      if (!decode) {\n\t        decode = range;\n\t      } else {\n\t        decode = toMultiArray(decode);\n\t      }\n\t      var samples = this.getSampleArray(size, outputSize, bps, fn);\n\t      return [CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size, outputSize, Math.pow(2, bps) - 1, range];\n\t    },\n\t    constructSampledFromIR: function constructSampledFromIR(_ref7) {\n\t      var xref = _ref7.xref,\n\t          isEvalSupported = _ref7.isEvalSupported,\n\t          IR = _ref7.IR;\n\t\n\t      function interpolate(x, xmin, xmax, ymin, ymax) {\n\t        return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n\t      }\n\t      return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n\t        var m = IR[1];\n\t        var domain = IR[2];\n\t        var encode = IR[3];\n\t        var decode = IR[4];\n\t        var samples = IR[5];\n\t        var size = IR[6];\n\t        var n = IR[7];\n\t        var range = IR[9];\n\t        var cubeVertices = 1 << m;\n\t        var cubeN = new Float64Array(cubeVertices);\n\t        var cubeVertex = new Uint32Array(cubeVertices);\n\t        var i, j;\n\t        for (j = 0; j < cubeVertices; j++) {\n\t          cubeN[j] = 1;\n\t        }\n\t        var k = n,\n\t            pos = 1;\n\t        for (i = 0; i < m; ++i) {\n\t          var domain_2i = domain[i][0];\n\t          var domain_2i_1 = domain[i][1];\n\t          var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n\t          var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n\t          var size_i = size[i];\n\t          e = Math.min(Math.max(e, 0), size_i - 1);\n\t          var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n\t          var n0 = e0 + 1 - e;\n\t          var n1 = e - e0;\n\t          var offset0 = e0 * k;\n\t          var offset1 = offset0 + k;\n\t          for (j = 0; j < cubeVertices; j++) {\n\t            if (j & pos) {\n\t              cubeN[j] *= n1;\n\t              cubeVertex[j] += offset1;\n\t            } else {\n\t              cubeN[j] *= n0;\n\t              cubeVertex[j] += offset0;\n\t            }\n\t          }\n\t          k *= size_i;\n\t          pos <<= 1;\n\t        }\n\t        for (j = 0; j < n; ++j) {\n\t          var rj = 0;\n\t          for (i = 0; i < cubeVertices; i++) {\n\t            rj += samples[cubeVertex[i] + j] * cubeN[i];\n\t          }\n\t          rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n\t          dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n\t        }\n\t      };\n\t    },\n\t    constructInterpolated: function constructInterpolated(_ref8) {\n\t      var xref = _ref8.xref,\n\t          isEvalSupported = _ref8.isEvalSupported,\n\t          fn = _ref8.fn,\n\t          dict = _ref8.dict;\n\t\n\t      var c0 = dict.getArray('C0') || [0];\n\t      var c1 = dict.getArray('C1') || [1];\n\t      var n = dict.get('N');\n\t      if (!Array.isArray(c0) || !Array.isArray(c1)) {\n\t        throw new _util.FormatError('Illegal dictionary for interpolated function');\n\t      }\n\t      var length = c0.length;\n\t      var diff = [];\n\t      for (var i = 0; i < length; ++i) {\n\t        diff.push(c1[i] - c0[i]);\n\t      }\n\t      return [CONSTRUCT_INTERPOLATED, c0, diff, n];\n\t    },\n\t    constructInterpolatedFromIR: function constructInterpolatedFromIR(_ref9) {\n\t      var xref = _ref9.xref,\n\t          isEvalSupported = _ref9.isEvalSupported,\n\t          IR = _ref9.IR;\n\t\n\t      var c0 = IR[1];\n\t      var diff = IR[2];\n\t      var n = IR[3];\n\t      var length = diff.length;\n\t      return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n\t        var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n\t        for (var j = 0; j < length; ++j) {\n\t          dest[destOffset + j] = c0[j] + x * diff[j];\n\t        }\n\t      };\n\t    },\n\t    constructStiched: function constructStiched(_ref10) {\n\t      var xref = _ref10.xref,\n\t          isEvalSupported = _ref10.isEvalSupported,\n\t          fn = _ref10.fn,\n\t          dict = _ref10.dict;\n\t\n\t      var domain = dict.getArray('Domain');\n\t      if (!domain) {\n\t        throw new _util.FormatError('No domain');\n\t      }\n\t      var inputSize = domain.length / 2;\n\t      if (inputSize !== 1) {\n\t        throw new _util.FormatError('Bad domain for stiched function');\n\t      }\n\t      var fnRefs = dict.get('Functions');\n\t      var fns = [];\n\t      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n\t        fns.push(this.getIR({\n\t          xref: xref,\n\t          isEvalSupported: isEvalSupported,\n\t          fn: xref.fetchIfRef(fnRefs[i])\n\t        }));\n\t      }\n\t      var bounds = dict.getArray('Bounds');\n\t      var encode = dict.getArray('Encode');\n\t      return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\n\t    },\n\t    constructStichedFromIR: function constructStichedFromIR(_ref11) {\n\t      var xref = _ref11.xref,\n\t          isEvalSupported = _ref11.isEvalSupported,\n\t          IR = _ref11.IR;\n\t\n\t      var domain = IR[1];\n\t      var bounds = IR[2];\n\t      var encode = IR[3];\n\t      var fnsIR = IR[4];\n\t      var fns = [];\n\t      var tmpBuf = new Float32Array(1);\n\t      for (var i = 0, ii = fnsIR.length; i < ii; i++) {\n\t        fns.push(this.fromIR({\n\t          xref: xref,\n\t          isEvalSupported: isEvalSupported,\n\t          IR: fnsIR[i]\n\t        }));\n\t      }\n\t      return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n\t        var clip = function constructStichedFromIRClip(v, min, max) {\n\t          if (v > max) {\n\t            v = max;\n\t          } else if (v < min) {\n\t            v = min;\n\t          }\n\t          return v;\n\t        };\n\t        var v = clip(src[srcOffset], domain[0], domain[1]);\n\t        for (var i = 0, ii = bounds.length; i < ii; ++i) {\n\t          if (v < bounds[i]) {\n\t            break;\n\t          }\n\t        }\n\t        var dmin = domain[0];\n\t        if (i > 0) {\n\t          dmin = bounds[i - 1];\n\t        }\n\t        var dmax = domain[1];\n\t        if (i < bounds.length) {\n\t          dmax = bounds[i];\n\t        }\n\t        var rmin = encode[2 * i];\n\t        var rmax = encode[2 * i + 1];\n\t        tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n\t        fns[i](tmpBuf, 0, dest, destOffset);\n\t      };\n\t    },\n\t    constructPostScript: function constructPostScript(_ref12) {\n\t      var xref = _ref12.xref,\n\t          isEvalSupported = _ref12.isEvalSupported,\n\t          fn = _ref12.fn,\n\t          dict = _ref12.dict;\n\t\n\t      var domain = dict.getArray('Domain');\n\t      var range = dict.getArray('Range');\n\t      if (!domain) {\n\t        throw new _util.FormatError('No domain.');\n\t      }\n\t      if (!range) {\n\t        throw new _util.FormatError('No range.');\n\t      }\n\t      var lexer = new _ps_parser.PostScriptLexer(fn);\n\t      var parser = new _ps_parser.PostScriptParser(lexer);\n\t      var code = parser.parse();\n\t      return [CONSTRUCT_POSTSCRIPT, domain, range, code];\n\t    },\n\t    constructPostScriptFromIR: function constructPostScriptFromIR(_ref13) {\n\t      var xref = _ref13.xref,\n\t          isEvalSupported = _ref13.isEvalSupported,\n\t          IR = _ref13.IR;\n\t\n\t      var domain = IR[1];\n\t      var range = IR[2];\n\t      var code = IR[3];\n\t      if (isEvalSupported && IsEvalSupportedCached.value) {\n\t        var compiled = new PostScriptCompiler().compile(code, domain, range);\n\t        if (compiled) {\n\t          return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n\t        }\n\t      }\n\t      (0, _util.info)('Unable to compile PS function');\n\t      var numOutputs = range.length >> 1;\n\t      var numInputs = domain.length >> 1;\n\t      var evaluator = new PostScriptEvaluator(code);\n\t      var cache = Object.create(null);\n\t      var MAX_CACHE_SIZE = 2048 * 4;\n\t      var cache_available = MAX_CACHE_SIZE;\n\t      var tmpBuf = new Float32Array(numInputs);\n\t      return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n\t        var i, value;\n\t        var key = '';\n\t        var input = tmpBuf;\n\t        for (i = 0; i < numInputs; i++) {\n\t          value = src[srcOffset + i];\n\t          input[i] = value;\n\t          key += value + '_';\n\t        }\n\t        var cachedValue = cache[key];\n\t        if (cachedValue !== undefined) {\n\t          dest.set(cachedValue, destOffset);\n\t          return;\n\t        }\n\t        var output = new Float32Array(numOutputs);\n\t        var stack = evaluator.execute(input);\n\t        var stackIndex = stack.length - numOutputs;\n\t        for (i = 0; i < numOutputs; i++) {\n\t          value = stack[stackIndex + i];\n\t          var bound = range[i * 2];\n\t          if (value < bound) {\n\t            value = bound;\n\t          } else {\n\t            bound = range[i * 2 + 1];\n\t            if (value > bound) {\n\t              value = bound;\n\t            }\n\t          }\n\t          output[i] = value;\n\t        }\n\t        if (cache_available > 0) {\n\t          cache_available--;\n\t          cache[key] = output;\n\t        }\n\t        dest.set(output, destOffset);\n\t      };\n\t    }\n\t  };\n\t}();\n\tfunction isPDFFunction(v) {\n\t  var fnDict;\n\t  if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) !== 'object') {\n\t    return false;\n\t  } else if ((0, _primitives.isDict)(v)) {\n\t    fnDict = v;\n\t  } else if ((0, _primitives.isStream)(v)) {\n\t    fnDict = v.dict;\n\t  } else {\n\t    return false;\n\t  }\n\t  return fnDict.has('FunctionType');\n\t}\n\tvar PostScriptStack = function PostScriptStackClosure() {\n\t  var MAX_STACK_SIZE = 100;\n\t  function PostScriptStack(initialStack) {\n\t    this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n\t  }\n\t  PostScriptStack.prototype = {\n\t    push: function PostScriptStack_push(value) {\n\t      if (this.stack.length >= MAX_STACK_SIZE) {\n\t        throw new Error('PostScript function stack overflow.');\n\t      }\n\t      this.stack.push(value);\n\t    },\n\t    pop: function PostScriptStack_pop() {\n\t      if (this.stack.length <= 0) {\n\t        throw new Error('PostScript function stack underflow.');\n\t      }\n\t      return this.stack.pop();\n\t    },\n\t    copy: function PostScriptStack_copy(n) {\n\t      if (this.stack.length + n >= MAX_STACK_SIZE) {\n\t        throw new Error('PostScript function stack overflow.');\n\t      }\n\t      var stack = this.stack;\n\t      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n\t        stack.push(stack[i]);\n\t      }\n\t    },\n\t    index: function PostScriptStack_index(n) {\n\t      this.push(this.stack[this.stack.length - n - 1]);\n\t    },\n\t    roll: function PostScriptStack_roll(n, p) {\n\t      var stack = this.stack;\n\t      var l = stack.length - n;\n\t      var r = stack.length - 1,\n\t          c = l + (p - Math.floor(p / n) * n),\n\t          i,\n\t          j,\n\t          t;\n\t      for (i = l, j = r; i < j; i++, j--) {\n\t        t = stack[i];\n\t        stack[i] = stack[j];\n\t        stack[j] = t;\n\t      }\n\t      for (i = l, j = c - 1; i < j; i++, j--) {\n\t        t = stack[i];\n\t        stack[i] = stack[j];\n\t        stack[j] = t;\n\t      }\n\t      for (i = c, j = r; i < j; i++, j--) {\n\t        t = stack[i];\n\t        stack[i] = stack[j];\n\t        stack[j] = t;\n\t      }\n\t    }\n\t  };\n\t  return PostScriptStack;\n\t}();\n\tvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n\t  function PostScriptEvaluator(operators) {\n\t    this.operators = operators;\n\t  }\n\t  PostScriptEvaluator.prototype = {\n\t    execute: function PostScriptEvaluator_execute(initialStack) {\n\t      var stack = new PostScriptStack(initialStack);\n\t      var counter = 0;\n\t      var operators = this.operators;\n\t      var length = operators.length;\n\t      var operator, a, b;\n\t      while (counter < length) {\n\t        operator = operators[counter++];\n\t        if (typeof operator === 'number') {\n\t          stack.push(operator);\n\t          continue;\n\t        }\n\t        switch (operator) {\n\t          case 'jz':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            if (!a) {\n\t              counter = b;\n\t            }\n\t            break;\n\t          case 'j':\n\t            a = stack.pop();\n\t            counter = a;\n\t            break;\n\t          case 'abs':\n\t            a = stack.pop();\n\t            stack.push(Math.abs(a));\n\t            break;\n\t          case 'add':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a + b);\n\t            break;\n\t          case 'and':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n\t              stack.push(a && b);\n\t            } else {\n\t              stack.push(a & b);\n\t            }\n\t            break;\n\t          case 'atan':\n\t            a = stack.pop();\n\t            stack.push(Math.atan(a));\n\t            break;\n\t          case 'bitshift':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            if (a > 0) {\n\t              stack.push(a << b);\n\t            } else {\n\t              stack.push(a >> b);\n\t            }\n\t            break;\n\t          case 'ceiling':\n\t            a = stack.pop();\n\t            stack.push(Math.ceil(a));\n\t            break;\n\t          case 'copy':\n\t            a = stack.pop();\n\t            stack.copy(a);\n\t            break;\n\t          case 'cos':\n\t            a = stack.pop();\n\t            stack.push(Math.cos(a));\n\t            break;\n\t          case 'cvi':\n\t            a = stack.pop() | 0;\n\t            stack.push(a);\n\t            break;\n\t          case 'cvr':\n\t            break;\n\t          case 'div':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a / b);\n\t            break;\n\t          case 'dup':\n\t            stack.copy(1);\n\t            break;\n\t          case 'eq':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a === b);\n\t            break;\n\t          case 'exch':\n\t            stack.roll(2, 1);\n\t            break;\n\t          case 'exp':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(Math.pow(a, b));\n\t            break;\n\t          case 'false':\n\t            stack.push(false);\n\t            break;\n\t          case 'floor':\n\t            a = stack.pop();\n\t            stack.push(Math.floor(a));\n\t            break;\n\t          case 'ge':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a >= b);\n\t            break;\n\t          case 'gt':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a > b);\n\t            break;\n\t          case 'idiv':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a / b | 0);\n\t            break;\n\t          case 'index':\n\t            a = stack.pop();\n\t            stack.index(a);\n\t            break;\n\t          case 'le':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a <= b);\n\t            break;\n\t          case 'ln':\n\t            a = stack.pop();\n\t            stack.push(Math.log(a));\n\t            break;\n\t          case 'log':\n\t            a = stack.pop();\n\t            stack.push(Math.log(a) / Math.LN10);\n\t            break;\n\t          case 'lt':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a < b);\n\t            break;\n\t          case 'mod':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a % b);\n\t            break;\n\t          case 'mul':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a * b);\n\t            break;\n\t          case 'ne':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a !== b);\n\t            break;\n\t          case 'neg':\n\t            a = stack.pop();\n\t            stack.push(-a);\n\t            break;\n\t          case 'not':\n\t            a = stack.pop();\n\t            if ((0, _util.isBool)(a)) {\n\t              stack.push(!a);\n\t            } else {\n\t              stack.push(~a);\n\t            }\n\t            break;\n\t          case 'or':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n\t              stack.push(a || b);\n\t            } else {\n\t              stack.push(a | b);\n\t            }\n\t            break;\n\t          case 'pop':\n\t            stack.pop();\n\t            break;\n\t          case 'roll':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.roll(a, b);\n\t            break;\n\t          case 'round':\n\t            a = stack.pop();\n\t            stack.push(Math.round(a));\n\t            break;\n\t          case 'sin':\n\t            a = stack.pop();\n\t            stack.push(Math.sin(a));\n\t            break;\n\t          case 'sqrt':\n\t            a = stack.pop();\n\t            stack.push(Math.sqrt(a));\n\t            break;\n\t          case 'sub':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a - b);\n\t            break;\n\t          case 'true':\n\t            stack.push(true);\n\t            break;\n\t          case 'truncate':\n\t            a = stack.pop();\n\t            a = a < 0 ? Math.ceil(a) : Math.floor(a);\n\t            stack.push(a);\n\t            break;\n\t          case 'xor':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n\t              stack.push(a !== b);\n\t            } else {\n\t              stack.push(a ^ b);\n\t            }\n\t            break;\n\t          default:\n\t            throw new _util.FormatError('Unknown operator ' + operator);\n\t        }\n\t      }\n\t      return stack.stack;\n\t    }\n\t  };\n\t  return PostScriptEvaluator;\n\t}();\n\tvar PostScriptCompiler = function PostScriptCompilerClosure() {\n\t  function AstNode(type) {\n\t    this.type = type;\n\t  }\n\t  AstNode.prototype.visit = function (visitor) {\n\t    throw new Error('abstract method');\n\t  };\n\t  function AstArgument(index, min, max) {\n\t    AstNode.call(this, 'args');\n\t    this.index = index;\n\t    this.min = min;\n\t    this.max = max;\n\t  }\n\t  AstArgument.prototype = Object.create(AstNode.prototype);\n\t  AstArgument.prototype.visit = function (visitor) {\n\t    visitor.visitArgument(this);\n\t  };\n\t  function AstLiteral(number) {\n\t    AstNode.call(this, 'literal');\n\t    this.number = number;\n\t    this.min = number;\n\t    this.max = number;\n\t  }\n\t  AstLiteral.prototype = Object.create(AstNode.prototype);\n\t  AstLiteral.prototype.visit = function (visitor) {\n\t    visitor.visitLiteral(this);\n\t  };\n\t  function AstBinaryOperation(op, arg1, arg2, min, max) {\n\t    AstNode.call(this, 'binary');\n\t    this.op = op;\n\t    this.arg1 = arg1;\n\t    this.arg2 = arg2;\n\t    this.min = min;\n\t    this.max = max;\n\t  }\n\t  AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n\t  AstBinaryOperation.prototype.visit = function (visitor) {\n\t    visitor.visitBinaryOperation(this);\n\t  };\n\t  function AstMin(arg, max) {\n\t    AstNode.call(this, 'max');\n\t    this.arg = arg;\n\t    this.min = arg.min;\n\t    this.max = max;\n\t  }\n\t  AstMin.prototype = Object.create(AstNode.prototype);\n\t  AstMin.prototype.visit = function (visitor) {\n\t    visitor.visitMin(this);\n\t  };\n\t  function AstVariable(index, min, max) {\n\t    AstNode.call(this, 'var');\n\t    this.index = index;\n\t    this.min = min;\n\t    this.max = max;\n\t  }\n\t  AstVariable.prototype = Object.create(AstNode.prototype);\n\t  AstVariable.prototype.visit = function (visitor) {\n\t    visitor.visitVariable(this);\n\t  };\n\t  function AstVariableDefinition(variable, arg) {\n\t    AstNode.call(this, 'definition');\n\t    this.variable = variable;\n\t    this.arg = arg;\n\t  }\n\t  AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n\t  AstVariableDefinition.prototype.visit = function (visitor) {\n\t    visitor.visitVariableDefinition(this);\n\t  };\n\t  function ExpressionBuilderVisitor() {\n\t    this.parts = [];\n\t  }\n\t  ExpressionBuilderVisitor.prototype = {\n\t    visitArgument: function visitArgument(arg) {\n\t      this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\n\t    },\n\t    visitVariable: function visitVariable(variable) {\n\t      this.parts.push('v', variable.index);\n\t    },\n\t    visitLiteral: function visitLiteral(literal) {\n\t      this.parts.push(literal.number);\n\t    },\n\t    visitBinaryOperation: function visitBinaryOperation(operation) {\n\t      this.parts.push('(');\n\t      operation.arg1.visit(this);\n\t      this.parts.push(' ', operation.op, ' ');\n\t      operation.arg2.visit(this);\n\t      this.parts.push(')');\n\t    },\n\t    visitVariableDefinition: function visitVariableDefinition(definition) {\n\t      this.parts.push('var ');\n\t      definition.variable.visit(this);\n\t      this.parts.push(' = ');\n\t      definition.arg.visit(this);\n\t      this.parts.push(';');\n\t    },\n\t    visitMin: function visitMin(max) {\n\t      this.parts.push('Math.min(');\n\t      max.arg.visit(this);\n\t      this.parts.push(', ', max.max, ')');\n\t    },\n\t    toString: function toString() {\n\t      return this.parts.join('');\n\t    }\n\t  };\n\t  function buildAddOperation(num1, num2) {\n\t    if (num2.type === 'literal' && num2.number === 0) {\n\t      return num1;\n\t    }\n\t    if (num1.type === 'literal' && num1.number === 0) {\n\t      return num2;\n\t    }\n\t    if (num2.type === 'literal' && num1.type === 'literal') {\n\t      return new AstLiteral(num1.number + num2.number);\n\t    }\n\t    return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\n\t  }\n\t  function buildMulOperation(num1, num2) {\n\t    if (num2.type === 'literal') {\n\t      if (num2.number === 0) {\n\t        return new AstLiteral(0);\n\t      } else if (num2.number === 1) {\n\t        return num1;\n\t      } else if (num1.type === 'literal') {\n\t        return new AstLiteral(num1.number * num2.number);\n\t      }\n\t    }\n\t    if (num1.type === 'literal') {\n\t      if (num1.number === 0) {\n\t        return new AstLiteral(0);\n\t      } else if (num1.number === 1) {\n\t        return num2;\n\t      }\n\t    }\n\t    var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n\t    var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n\t    return new AstBinaryOperation('*', num1, num2, min, max);\n\t  }\n\t  function buildSubOperation(num1, num2) {\n\t    if (num2.type === 'literal') {\n\t      if (num2.number === 0) {\n\t        return num1;\n\t      } else if (num1.type === 'literal') {\n\t        return new AstLiteral(num1.number - num2.number);\n\t      }\n\t    }\n\t    if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n\t      return num2.arg2;\n\t    }\n\t    return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\n\t  }\n\t  function buildMinOperation(num1, max) {\n\t    if (num1.min >= max) {\n\t      return new AstLiteral(max);\n\t    } else if (num1.max <= max) {\n\t      return num1;\n\t    }\n\t    return new AstMin(num1, max);\n\t  }\n\t  function PostScriptCompiler() {}\n\t  PostScriptCompiler.prototype = {\n\t    compile: function PostScriptCompiler_compile(code, domain, range) {\n\t      var stack = [];\n\t      var i, ii;\n\t      var instructions = [];\n\t      var inputSize = domain.length >> 1,\n\t          outputSize = range.length >> 1;\n\t      var lastRegister = 0;\n\t      var n, j;\n\t      var num1, num2, ast1, ast2, tmpVar, item;\n\t      for (i = 0; i < inputSize; i++) {\n\t        stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n\t      }\n\t      for (i = 0, ii = code.length; i < ii; i++) {\n\t        item = code[i];\n\t        if (typeof item === 'number') {\n\t          stack.push(new AstLiteral(item));\n\t          continue;\n\t        }\n\t        switch (item) {\n\t          case 'add':\n\t            if (stack.length < 2) {\n\t              return null;\n\t            }\n\t            num2 = stack.pop();\n\t            num1 = stack.pop();\n\t            stack.push(buildAddOperation(num1, num2));\n\t            break;\n\t          case 'cvr':\n\t            if (stack.length < 1) {\n\t              return null;\n\t            }\n\t            break;\n\t          case 'mul':\n\t            if (stack.length < 2) {\n\t              return null;\n\t            }\n\t            num2 = stack.pop();\n\t            num1 = stack.pop();\n\t            stack.push(buildMulOperation(num1, num2));\n\t            break;\n\t          case 'sub':\n\t            if (stack.length < 2) {\n\t              return null;\n\t            }\n\t            num2 = stack.pop();\n\t            num1 = stack.pop();\n\t            stack.push(buildSubOperation(num1, num2));\n\t            break;\n\t          case 'exch':\n\t            if (stack.length < 2) {\n\t              return null;\n\t            }\n\t            ast1 = stack.pop();\n\t            ast2 = stack.pop();\n\t            stack.push(ast1, ast2);\n\t            break;\n\t          case 'pop':\n\t            if (stack.length < 1) {\n\t              return null;\n\t            }\n\t            stack.pop();\n\t            break;\n\t          case 'index':\n\t            if (stack.length < 1) {\n\t              return null;\n\t            }\n\t            num1 = stack.pop();\n\t            if (num1.type !== 'literal') {\n\t              return null;\n\t            }\n\t            n = num1.number;\n\t            if (n < 0 || !Number.isInteger(n) || stack.length < n) {\n\t              return null;\n\t            }\n\t            ast1 = stack[stack.length - n - 1];\n\t            if (ast1.type === 'literal' || ast1.type === 'var') {\n\t              stack.push(ast1);\n\t              break;\n\t            }\n\t            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n\t            stack[stack.length - n - 1] = tmpVar;\n\t            stack.push(tmpVar);\n\t            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n\t            break;\n\t          case 'dup':\n\t            if (stack.length < 1) {\n\t              return null;\n\t            }\n\t            if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n\t              num1 = stack.pop();\n\t              stack.push(buildMinOperation(num1, code[i + 1]));\n\t              i += 6;\n\t              break;\n\t            }\n\t            ast1 = stack[stack.length - 1];\n\t            if (ast1.type === 'literal' || ast1.type === 'var') {\n\t              stack.push(ast1);\n\t              break;\n\t            }\n\t            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n\t            stack[stack.length - 1] = tmpVar;\n\t            stack.push(tmpVar);\n\t            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n\t            break;\n\t          case 'roll':\n\t            if (stack.length < 2) {\n\t              return null;\n\t            }\n\t            num2 = stack.pop();\n\t            num1 = stack.pop();\n\t            if (num2.type !== 'literal' || num1.type !== 'literal') {\n\t              return null;\n\t            }\n\t            j = num2.number;\n\t            n = num1.number;\n\t            if (n <= 0 || !Number.isInteger(n) || !Number.isInteger(j) || stack.length < n) {\n\t              return null;\n\t            }\n\t            j = (j % n + n) % n;\n\t            if (j === 0) {\n\t              break;\n\t            }\n\t            Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n\t            break;\n\t          default:\n\t            return null;\n\t        }\n\t      }\n\t      if (stack.length !== outputSize) {\n\t        return null;\n\t      }\n\t      var result = [];\n\t      instructions.forEach(function (instruction) {\n\t        var statementBuilder = new ExpressionBuilderVisitor();\n\t        instruction.visit(statementBuilder);\n\t        result.push(statementBuilder.toString());\n\t      });\n\t      stack.forEach(function (expr, i) {\n\t        var statementBuilder = new ExpressionBuilderVisitor();\n\t        expr.visit(statementBuilder);\n\t        var min = range[i * 2],\n\t            max = range[i * 2 + 1];\n\t        var out = [statementBuilder.toString()];\n\t        if (min > expr.min) {\n\t          out.unshift('Math.max(', min, ', ');\n\t          out.push(')');\n\t        }\n\t        if (max < expr.max) {\n\t          out.unshift('Math.min(', max, ', ');\n\t          out.push(')');\n\t        }\n\t        out.unshift('dest[destOffset + ', i, '] = ');\n\t        out.push(';');\n\t        result.push(out.join(''));\n\t      });\n\t      return result.join('\\n');\n\t    }\n\t  };\n\t  return PostScriptCompiler;\n\t}();\n\texports.isPDFFunction = isPDFFunction;\n\texports.PDFFunctionFactory = PDFFunctionFactory;\n\texports.PostScriptEvaluator = PostScriptEvaluator;\n\texports.PostScriptCompiler = PostScriptCompiler;\n\t\n\t/***/ }),\n\t/* 82 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar pdfjsVersion = '1.10.97';\n\tvar pdfjsBuild = '7d0fce73';\n\tvar pdfjsCoreWorker = __w_pdfjs_require__(83);\n\texports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;\n\t\n\t/***/ }),\n\t/* 83 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.WorkerMessageHandler = exports.WorkerTask = undefined;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _pdf_manager = __w_pdfjs_require__(126);\n\t\n\tvar _primitives = __w_pdfjs_require__(2);\n\t\n\tvar WorkerTask = function WorkerTaskClosure() {\n\t  function WorkerTask(name) {\n\t    this.name = name;\n\t    this.terminated = false;\n\t    this._capability = (0, _util.createPromiseCapability)();\n\t  }\n\t  WorkerTask.prototype = {\n\t    get finished() {\n\t      return this._capability.promise;\n\t    },\n\t    finish: function finish() {\n\t      this._capability.resolve();\n\t    },\n\t    terminate: function terminate() {\n\t      this.terminated = true;\n\t    },\n\t    ensureNotTerminated: function ensureNotTerminated() {\n\t      if (this.terminated) {\n\t        throw new Error('Worker task was terminated');\n\t      }\n\t    }\n\t  };\n\t  return WorkerTask;\n\t}();\n\t;\n\tvar PDFWorkerStream = function PDFWorkerStreamClosure() {\n\t  function PDFWorkerStream(msgHandler) {\n\t    this._msgHandler = msgHandler;\n\t    this._contentLength = null;\n\t    this._fullRequestReader = null;\n\t    this._rangeRequestReaders = [];\n\t  }\n\t  PDFWorkerStream.prototype = {\n\t    getFullReader: function getFullReader() {\n\t      (0, _util.assert)(!this._fullRequestReader);\n\t      this._fullRequestReader = new PDFWorkerStreamReader(this._msgHandler);\n\t      return this._fullRequestReader;\n\t    },\n\t    getRangeReader: function getRangeReader(begin, end) {\n\t      var reader = new PDFWorkerStreamRangeReader(begin, end, this._msgHandler);\n\t      this._rangeRequestReaders.push(reader);\n\t      return reader;\n\t    },\n\t    cancelAllRequests: function cancelAllRequests(reason) {\n\t      if (this._fullRequestReader) {\n\t        this._fullRequestReader.cancel(reason);\n\t      }\n\t      var readers = this._rangeRequestReaders.slice(0);\n\t      readers.forEach(function (reader) {\n\t        reader.cancel(reason);\n\t      });\n\t    }\n\t  };\n\t  function PDFWorkerStreamReader(msgHandler) {\n\t    var _this = this;\n\t\n\t    this._msgHandler = msgHandler;\n\t    this._contentLength = null;\n\t    this._isRangeSupported = false;\n\t    this._isStreamingSupported = false;\n\t    var readableStream = this._msgHandler.sendWithStream('GetReader');\n\t    this._reader = readableStream.getReader();\n\t    this._headersReady = this._msgHandler.sendWithPromise('ReaderHeadersReady').then(function (data) {\n\t      _this._isStreamingSupported = data.isStreamingSupported;\n\t      _this._isRangeSupported = data.isRangeSupported;\n\t      _this._contentLength = data.contentLength;\n\t    });\n\t  }\n\t  PDFWorkerStreamReader.prototype = {\n\t    get headersReady() {\n\t      return this._headersReady;\n\t    },\n\t    get contentLength() {\n\t      return this._contentLength;\n\t    },\n\t    get isStreamingSupported() {\n\t      return this._isStreamingSupported;\n\t    },\n\t    get isRangeSupported() {\n\t      return this._isRangeSupported;\n\t    },\n\t    read: function read() {\n\t      return this._reader.read().then(function (_ref) {\n\t        var value = _ref.value,\n\t            done = _ref.done;\n\t\n\t        if (done) {\n\t          return {\n\t            value: undefined,\n\t            done: true\n\t          };\n\t        }\n\t        return {\n\t          value: value.buffer,\n\t          done: false\n\t        };\n\t      });\n\t    },\n\t    cancel: function cancel(reason) {\n\t      this._reader.cancel(reason);\n\t    }\n\t  };\n\t  function PDFWorkerStreamRangeReader(begin, end, msgHandler) {\n\t    this._msgHandler = msgHandler;\n\t    this.onProgress = null;\n\t    var readableStream = this._msgHandler.sendWithStream('GetRangeReader', {\n\t      begin: begin,\n\t      end: end\n\t    });\n\t    this._reader = readableStream.getReader();\n\t  }\n\t  PDFWorkerStreamRangeReader.prototype = {\n\t    get isStreamingSupported() {\n\t      return false;\n\t    },\n\t    read: function read() {\n\t      return this._reader.read().then(function (_ref2) {\n\t        var value = _ref2.value,\n\t            done = _ref2.done;\n\t\n\t        if (done) {\n\t          return {\n\t            value: undefined,\n\t            done: true\n\t          };\n\t        }\n\t        return {\n\t          value: value.buffer,\n\t          done: false\n\t        };\n\t      });\n\t    },\n\t    cancel: function cancel(reason) {\n\t      this._reader.cancel(reason);\n\t    }\n\t  };\n\t  return PDFWorkerStream;\n\t}();\n\tvar WorkerMessageHandler = {\n\t  setup: function setup(handler, port) {\n\t    var testMessageProcessed = false;\n\t    handler.on('test', function wphSetupTest(data) {\n\t      if (testMessageProcessed) {\n\t        return;\n\t      }\n\t      testMessageProcessed = true;\n\t      if (!(data instanceof Uint8Array)) {\n\t        handler.send('test', 'main', false);\n\t        return;\n\t      }\n\t      var supportTransfers = data[0] === 255;\n\t      handler.postMessageTransfers = supportTransfers;\n\t      var xhr = new XMLHttpRequest();\n\t      var responseExists = 'response' in xhr;\n\t      try {\n\t        xhr.responseType;\n\t      } catch (e) {\n\t        responseExists = false;\n\t      }\n\t      if (!responseExists) {\n\t        handler.send('test', false);\n\t        return;\n\t      }\n\t      handler.send('test', {\n\t        supportTypedArray: true,\n\t        supportTransfers: supportTransfers\n\t      });\n\t    });\n\t    handler.on('configure', function wphConfigure(data) {\n\t      (0, _util.setVerbosityLevel)(data.verbosity);\n\t    });\n\t    handler.on('GetDocRequest', function wphSetupDoc(data) {\n\t      return WorkerMessageHandler.createDocumentHandler(data, port);\n\t    });\n\t  },\n\t  createDocumentHandler: function createDocumentHandler(docParams, port) {\n\t    var pdfManager;\n\t    var terminated = false;\n\t    var cancelXHRs = null;\n\t    var WorkerTasks = [];\n\t    var apiVersion = docParams.apiVersion;\n\t    var workerVersion = '1.10.97';\n\t    if (apiVersion !== null && apiVersion !== workerVersion) {\n\t      throw new Error('The API version \"' + apiVersion + '\" does not match ' + ('the Worker version \"' + workerVersion + '\".'));\n\t    }\n\t    var docId = docParams.docId;\n\t    var docBaseUrl = docParams.docBaseUrl;\n\t    var workerHandlerName = docParams.docId + '_worker';\n\t    var handler = new _util.MessageHandler(workerHandlerName, docId, port);\n\t    handler.postMessageTransfers = docParams.postMessageTransfers;\n\t    function ensureNotTerminated() {\n\t      if (terminated) {\n\t        throw new Error('Worker was terminated');\n\t      }\n\t    }\n\t    function startWorkerTask(task) {\n\t      WorkerTasks.push(task);\n\t    }\n\t    function finishWorkerTask(task) {\n\t      task.finish();\n\t      var i = WorkerTasks.indexOf(task);\n\t      WorkerTasks.splice(i, 1);\n\t    }\n\t    function loadDocument(recoveryMode) {\n\t      var loadDocumentCapability = (0, _util.createPromiseCapability)();\n\t      var parseSuccess = function parseSuccess() {\n\t        var numPagesPromise = pdfManager.ensureDoc('numPages');\n\t        var fingerprintPromise = pdfManager.ensureDoc('fingerprint');\n\t        var encryptedPromise = pdfManager.ensureXRef('encrypt');\n\t        Promise.all([numPagesPromise, fingerprintPromise, encryptedPromise]).then(function onDocReady(results) {\n\t          var doc = {\n\t            numPages: results[0],\n\t            fingerprint: results[1],\n\t            encrypted: !!results[2]\n\t          };\n\t          loadDocumentCapability.resolve(doc);\n\t        }, parseFailure);\n\t      };\n\t      var parseFailure = function parseFailure(e) {\n\t        loadDocumentCapability.reject(e);\n\t      };\n\t      pdfManager.ensureDoc('checkHeader', []).then(function () {\n\t        pdfManager.ensureDoc('parseStartXRef', []).then(function () {\n\t          pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\n\t        }, parseFailure);\n\t      }, parseFailure);\n\t      return loadDocumentCapability.promise;\n\t    }\n\t    function getPdfManager(data, evaluatorOptions) {\n\t      var pdfManagerCapability = (0, _util.createPromiseCapability)();\n\t      var pdfManager;\n\t      var source = data.source;\n\t      if (source.data) {\n\t        try {\n\t          pdfManager = new _pdf_manager.LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n\t          pdfManagerCapability.resolve(pdfManager);\n\t        } catch (ex) {\n\t          pdfManagerCapability.reject(ex);\n\t        }\n\t        return pdfManagerCapability.promise;\n\t      }\n\t      var pdfStream,\n\t          cachedChunks = [];\n\t      try {\n\t        pdfStream = new PDFWorkerStream(handler);\n\t      } catch (ex) {\n\t        pdfManagerCapability.reject(ex);\n\t        return pdfManagerCapability.promise;\n\t      }\n\t      var fullRequest = pdfStream.getFullReader();\n\t      fullRequest.headersReady.then(function () {\n\t        if (!fullRequest.isRangeSupported) {\n\t          return;\n\t        }\n\t        var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n\t        pdfManager = new _pdf_manager.NetworkPdfManager(docId, pdfStream, {\n\t          msgHandler: handler,\n\t          url: source.url,\n\t          password: source.password,\n\t          length: fullRequest.contentLength,\n\t          disableAutoFetch: disableAutoFetch,\n\t          rangeChunkSize: source.rangeChunkSize\n\t        }, evaluatorOptions, docBaseUrl);\n\t        for (var i = 0; i < cachedChunks.length; i++) {\n\t          pdfManager.sendProgressiveData(cachedChunks[i]);\n\t        }\n\t        cachedChunks = [];\n\t        pdfManagerCapability.resolve(pdfManager);\n\t        cancelXHRs = null;\n\t      }).catch(function (reason) {\n\t        pdfManagerCapability.reject(reason);\n\t        cancelXHRs = null;\n\t      });\n\t      var loaded = 0;\n\t      var flushChunks = function flushChunks() {\n\t        var pdfFile = (0, _util.arraysToBytes)(cachedChunks);\n\t        if (source.length && pdfFile.length !== source.length) {\n\t          (0, _util.warn)('reported HTTP length is different from actual');\n\t        }\n\t        try {\n\t          pdfManager = new _pdf_manager.LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n\t          pdfManagerCapability.resolve(pdfManager);\n\t        } catch (ex) {\n\t          pdfManagerCapability.reject(ex);\n\t        }\n\t        cachedChunks = [];\n\t      };\n\t      var readPromise = new Promise(function (resolve, reject) {\n\t        var readChunk = function readChunk(chunk) {\n\t          try {\n\t            ensureNotTerminated();\n\t            if (chunk.done) {\n\t              if (!pdfManager) {\n\t                flushChunks();\n\t              }\n\t              cancelXHRs = null;\n\t              return;\n\t            }\n\t            var data = chunk.value;\n\t            loaded += (0, _util.arrayByteLength)(data);\n\t            if (!fullRequest.isStreamingSupported) {\n\t              handler.send('DocProgress', {\n\t                loaded: loaded,\n\t                total: Math.max(loaded, fullRequest.contentLength || 0)\n\t              });\n\t            }\n\t            if (pdfManager) {\n\t              pdfManager.sendProgressiveData(data);\n\t            } else {\n\t              cachedChunks.push(data);\n\t            }\n\t            fullRequest.read().then(readChunk, reject);\n\t          } catch (e) {\n\t            reject(e);\n\t          }\n\t        };\n\t        fullRequest.read().then(readChunk, reject);\n\t      });\n\t      readPromise.catch(function (e) {\n\t        pdfManagerCapability.reject(e);\n\t        cancelXHRs = null;\n\t      });\n\t      cancelXHRs = function cancelXHRs() {\n\t        pdfStream.cancelAllRequests('abort');\n\t      };\n\t      return pdfManagerCapability.promise;\n\t    }\n\t    function setupDoc(data) {\n\t      function onSuccess(doc) {\n\t        ensureNotTerminated();\n\t        handler.send('GetDoc', { pdfInfo: doc });\n\t      }\n\t      function onFailure(e) {\n\t        ensureNotTerminated();\n\t        if (e instanceof _util.PasswordException) {\n\t          var task = new WorkerTask('PasswordException: response ' + e.code);\n\t          startWorkerTask(task);\n\t          handler.sendWithPromise('PasswordRequest', e).then(function (data) {\n\t            finishWorkerTask(task);\n\t            pdfManager.updatePassword(data.password);\n\t            pdfManagerReady();\n\t          }).catch(function (ex) {\n\t            finishWorkerTask(task);\n\t            handler.send('PasswordException', ex);\n\t          }.bind(null, e));\n\t        } else if (e instanceof _util.InvalidPDFException) {\n\t          handler.send('InvalidPDF', e);\n\t        } else if (e instanceof _util.MissingPDFException) {\n\t          handler.send('MissingPDF', e);\n\t        } else if (e instanceof _util.UnexpectedResponseException) {\n\t          handler.send('UnexpectedResponse', e);\n\t        } else {\n\t          handler.send('UnknownError', new _util.UnknownErrorException(e.message, e.toString()));\n\t        }\n\t      }\n\t      function pdfManagerReady() {\n\t        ensureNotTerminated();\n\t        loadDocument(false).then(onSuccess, function loadFailure(ex) {\n\t          ensureNotTerminated();\n\t          if (!(ex instanceof _util.XRefParseException)) {\n\t            onFailure(ex);\n\t            return;\n\t          }\n\t          pdfManager.requestLoadedStream();\n\t          pdfManager.onLoadedStream().then(function () {\n\t            ensureNotTerminated();\n\t            loadDocument(true).then(onSuccess, onFailure);\n\t          });\n\t        }, onFailure);\n\t      }\n\t      ensureNotTerminated();\n\t      var evaluatorOptions = {\n\t        forceDataSchema: data.disableCreateObjectURL,\n\t        maxImageSize: data.maxImageSize === undefined ? -1 : data.maxImageSize,\n\t        disableFontFace: data.disableFontFace,\n\t        nativeImageDecoderSupport: data.nativeImageDecoderSupport,\n\t        ignoreErrors: data.ignoreErrors,\n\t        isEvalSupported: data.isEvalSupported\n\t      };\n\t      getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n\t        if (terminated) {\n\t          newPdfManager.terminate();\n\t          throw new Error('Worker was terminated');\n\t        }\n\t        pdfManager = newPdfManager;\n\t        handler.send('PDFManagerReady', null);\n\t        pdfManager.onLoadedStream().then(function (stream) {\n\t          handler.send('DataLoaded', { length: stream.bytes.byteLength });\n\t        });\n\t      }).then(pdfManagerReady, onFailure);\n\t    }\n\t    handler.on('GetPage', function wphSetupGetPage(data) {\n\t      return pdfManager.getPage(data.pageIndex).then(function (page) {\n\t        var rotatePromise = pdfManager.ensure(page, 'rotate');\n\t        var refPromise = pdfManager.ensure(page, 'ref');\n\t        var userUnitPromise = pdfManager.ensure(page, 'userUnit');\n\t        var viewPromise = pdfManager.ensure(page, 'view');\n\t        return Promise.all([rotatePromise, refPromise, userUnitPromise, viewPromise]).then(function (results) {\n\t          return {\n\t            rotate: results[0],\n\t            ref: results[1],\n\t            userUnit: results[2],\n\t            view: results[3]\n\t          };\n\t        });\n\t      });\n\t    });\n\t    handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n\t      var ref = new _primitives.Ref(data.ref.num, data.ref.gen);\n\t      var catalog = pdfManager.pdfDocument.catalog;\n\t      return catalog.getPageIndex(ref);\n\t    });\n\t    handler.on('GetDestinations', function wphSetupGetDestinations(data) {\n\t      return pdfManager.ensureCatalog('destinations');\n\t    });\n\t    handler.on('GetDestination', function wphSetupGetDestination(data) {\n\t      return pdfManager.ensureCatalog('getDestination', [data.id]);\n\t    });\n\t    handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\n\t      return pdfManager.ensureCatalog('pageLabels');\n\t    });\n\t    handler.on('GetPageMode', function wphSetupGetPageMode(data) {\n\t      return pdfManager.ensureCatalog('pageMode');\n\t    });\n\t    handler.on('GetAttachments', function wphSetupGetAttachments(data) {\n\t      return pdfManager.ensureCatalog('attachments');\n\t    });\n\t    handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\n\t      return pdfManager.ensureCatalog('javaScript');\n\t    });\n\t    handler.on('GetOutline', function wphSetupGetOutline(data) {\n\t      return pdfManager.ensureCatalog('documentOutline');\n\t    });\n\t    handler.on('GetMetadata', function wphSetupGetMetadata(data) {\n\t      return Promise.all([pdfManager.ensureDoc('documentInfo'), pdfManager.ensureCatalog('metadata')]);\n\t    });\n\t    handler.on('GetData', function wphSetupGetData(data) {\n\t      pdfManager.requestLoadedStream();\n\t      return pdfManager.onLoadedStream().then(function (stream) {\n\t        return stream.bytes;\n\t      });\n\t    });\n\t    handler.on('GetStats', function wphSetupGetStats(data) {\n\t      return pdfManager.pdfDocument.xref.stats;\n\t    });\n\t    handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n\t      return pdfManager.getPage(data.pageIndex).then(function (page) {\n\t        return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\n\t      });\n\t    });\n\t    handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n\t      var pageIndex = data.pageIndex;\n\t      pdfManager.getPage(pageIndex).then(function (page) {\n\t        var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\n\t        startWorkerTask(task);\n\t        var pageNum = pageIndex + 1;\n\t        var start = Date.now();\n\t        page.getOperatorList({\n\t          handler: handler,\n\t          task: task,\n\t          intent: data.intent,\n\t          renderInteractiveForms: data.renderInteractiveForms\n\t        }).then(function (operatorList) {\n\t          finishWorkerTask(task);\n\t          (0, _util.info)('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\n\t        }, function (e) {\n\t          finishWorkerTask(task);\n\t          if (task.terminated) {\n\t            return;\n\t          }\n\t          handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n\t          var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\n\t          var wrappedException;\n\t          if (typeof e === 'string') {\n\t            wrappedException = {\n\t              message: e,\n\t              stack: minimumStackMessage\n\t            };\n\t          } else if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') {\n\t            wrappedException = {\n\t              message: e.message || e.toString(),\n\t              stack: e.stack || minimumStackMessage\n\t            };\n\t          } else {\n\t            wrappedException = {\n\t              message: 'Unknown exception type: ' + (typeof e === 'undefined' ? 'undefined' : _typeof(e)),\n\t              stack: minimumStackMessage\n\t            };\n\t          }\n\t          handler.send('PageError', {\n\t            pageNum: pageNum,\n\t            error: wrappedException,\n\t            intent: data.intent\n\t          });\n\t        });\n\t      });\n\t    }, this);\n\t    handler.on('GetTextContent', function wphExtractText(data, sink) {\n\t      var pageIndex = data.pageIndex;\n\t      sink.onPull = function (desiredSize) {};\n\t      sink.onCancel = function (reason) {};\n\t      pdfManager.getPage(pageIndex).then(function (page) {\n\t        var task = new WorkerTask('GetTextContent: page ' + pageIndex);\n\t        startWorkerTask(task);\n\t        var pageNum = pageIndex + 1;\n\t        var start = Date.now();\n\t        page.extractTextContent({\n\t          handler: handler,\n\t          task: task,\n\t          sink: sink,\n\t          normalizeWhitespace: data.normalizeWhitespace,\n\t          combineTextItems: data.combineTextItems\n\t        }).then(function () {\n\t          finishWorkerTask(task);\n\t          (0, _util.info)('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\n\t          sink.close();\n\t        }, function (reason) {\n\t          finishWorkerTask(task);\n\t          if (task.terminated) {\n\t            return;\n\t          }\n\t          sink.error(reason);\n\t          throw reason;\n\t        });\n\t      });\n\t    });\n\t    handler.on('Cleanup', function wphCleanup(data) {\n\t      return pdfManager.cleanup();\n\t    });\n\t    handler.on('Terminate', function wphTerminate(data) {\n\t      terminated = true;\n\t      if (pdfManager) {\n\t        pdfManager.terminate();\n\t        pdfManager = null;\n\t      }\n\t      if (cancelXHRs) {\n\t        cancelXHRs();\n\t      }\n\t      var waitOn = [];\n\t      WorkerTasks.forEach(function (task) {\n\t        waitOn.push(task.finished);\n\t        task.terminate();\n\t      });\n\t      return Promise.all(waitOn).then(function () {\n\t        handler.destroy();\n\t        handler = null;\n\t      });\n\t    });\n\t    handler.on('Ready', function wphReady(data) {\n\t      setupDoc(docParams);\n\t      docParams = null;\n\t    });\n\t    return workerHandlerName;\n\t  },\n\t  initializeFromPort: function initializeFromPort(port) {\n\t    var handler = new _util.MessageHandler('worker', 'main', port);\n\t    WorkerMessageHandler.setup(handler, port);\n\t    handler.send('ready', null);\n\t  }\n\t};\n\tfunction isMessagePort(maybePort) {\n\t  return typeof maybePort.postMessage === 'function' && 'onmessage' in maybePort;\n\t}\n\tif (typeof window === 'undefined' && !(0, _util.isNodeJS)() && typeof self !== 'undefined' && isMessagePort(self)) {\n\t  WorkerMessageHandler.initializeFromPort(self);\n\t}\n\texports.WorkerTask = WorkerTask;\n\texports.WorkerMessageHandler = WorkerMessageHandler;\n\t\n\t/***/ }),\n\t/* 84 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tif (typeof PDFJS === 'undefined' || !PDFJS.compatibilityChecked) {\n\t  var globalScope = __w_pdfjs_require__(85);\n\t  var userAgent = typeof navigator !== 'undefined' && navigator.userAgent || '';\n\t  var isAndroid = /Android/.test(userAgent);\n\t  var isAndroidPre3 = /Android\\s[0-2][^\\d]/.test(userAgent);\n\t  var isAndroidPre5 = /Android\\s[0-4][^\\d]/.test(userAgent);\n\t  var isChrome = userAgent.indexOf('Chrom') >= 0;\n\t  var isChromeWithRangeBug = /Chrome\\/(39|40)\\./.test(userAgent);\n\t  var isIOSChrome = userAgent.indexOf('CriOS') >= 0;\n\t  var isIE = userAgent.indexOf('Trident') >= 0;\n\t  var isIOS = /\\b(iPad|iPhone|iPod)(?=;)/.test(userAgent);\n\t  var isOpera = userAgent.indexOf('Opera') >= 0;\n\t  var isSafari = /Safari\\//.test(userAgent) && !/(Chrome\\/|Android\\s)/.test(userAgent);\n\t  var hasDOM = (typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && (typeof document === 'undefined' ? 'undefined' : _typeof(document)) === 'object';\n\t  if (typeof PDFJS === 'undefined') {\n\t    globalScope.PDFJS = {};\n\t  }\n\t  PDFJS.compatibilityChecked = true;\n\t  (function checkTypedArrayCompatibility() {\n\t    if (typeof Uint8ClampedArray === 'undefined') {\n\t      globalScope.Uint8ClampedArray = __w_pdfjs_require__(86);\n\t    }\n\t    if (typeof Uint8Array !== 'undefined') {\n\t      if (typeof Uint8Array.prototype.subarray === 'undefined') {\n\t        Uint8Array.prototype.subarray = function subarray(start, end) {\n\t          return new Uint8Array(this.slice(start, end));\n\t        };\n\t        Float32Array.prototype.subarray = function subarray(start, end) {\n\t          return new Float32Array(this.slice(start, end));\n\t        };\n\t      }\n\t      if (typeof Float64Array === 'undefined') {\n\t        globalScope.Float64Array = Float32Array;\n\t      }\n\t      return;\n\t    }\n\t    function subarray(start, end) {\n\t      return new TypedArray(this.slice(start, end));\n\t    }\n\t    function setArrayOffset(array, offset) {\n\t      if (arguments.length < 2) {\n\t        offset = 0;\n\t      }\n\t      for (var i = 0, n = array.length; i < n; ++i, ++offset) {\n\t        this[offset] = array[i] & 0xFF;\n\t      }\n\t    }\n\t    function Uint32ArrayView(buffer, length) {\n\t      this.buffer = buffer;\n\t      this.byteLength = buffer.length;\n\t      this.length = length;\n\t      ensureUint32ArrayViewProps(this.length);\n\t    }\n\t    Uint32ArrayView.prototype = Object.create(null);\n\t    var uint32ArrayViewSetters = 0;\n\t    function createUint32ArrayProp(index) {\n\t      return {\n\t        get: function get() {\n\t          var buffer = this.buffer,\n\t              offset = index << 2;\n\t          return (buffer[offset] | buffer[offset + 1] << 8 | buffer[offset + 2] << 16 | buffer[offset + 3] << 24) >>> 0;\n\t        },\n\t        set: function set(value) {\n\t          var buffer = this.buffer,\n\t              offset = index << 2;\n\t          buffer[offset] = value & 255;\n\t          buffer[offset + 1] = value >> 8 & 255;\n\t          buffer[offset + 2] = value >> 16 & 255;\n\t          buffer[offset + 3] = value >>> 24 & 255;\n\t        }\n\t      };\n\t    }\n\t    function ensureUint32ArrayViewProps(length) {\n\t      while (uint32ArrayViewSetters < length) {\n\t        Object.defineProperty(Uint32ArrayView.prototype, uint32ArrayViewSetters, createUint32ArrayProp(uint32ArrayViewSetters));\n\t        uint32ArrayViewSetters++;\n\t      }\n\t    }\n\t    function TypedArray(arg1) {\n\t      var result, i, n;\n\t      if (typeof arg1 === 'number') {\n\t        result = [];\n\t        for (i = 0; i < arg1; ++i) {\n\t          result[i] = 0;\n\t        }\n\t      } else if ('slice' in arg1) {\n\t        result = arg1.slice(0);\n\t      } else {\n\t        result = [];\n\t        for (i = 0, n = arg1.length; i < n; ++i) {\n\t          result[i] = arg1[i];\n\t        }\n\t      }\n\t      result.subarray = subarray;\n\t      result.buffer = result;\n\t      result.byteLength = result.length;\n\t      result.set = setArrayOffset;\n\t      if ((typeof arg1 === 'undefined' ? 'undefined' : _typeof(arg1)) === 'object' && arg1.buffer) {\n\t        result.buffer = arg1.buffer;\n\t      }\n\t      return result;\n\t    }\n\t    globalScope.Uint8Array = TypedArray;\n\t    globalScope.Int8Array = TypedArray;\n\t    globalScope.Int32Array = TypedArray;\n\t    globalScope.Uint16Array = TypedArray;\n\t    globalScope.Float32Array = TypedArray;\n\t    globalScope.Float64Array = TypedArray;\n\t    globalScope.Uint32Array = function () {\n\t      if (arguments.length === 3) {\n\t        if (arguments[1] !== 0) {\n\t          throw new Error('offset !== 0 is not supported');\n\t        }\n\t        return new Uint32ArrayView(arguments[0], arguments[2]);\n\t      }\n\t      return TypedArray.apply(this, arguments);\n\t    };\n\t  })();\n\t  (function canvasPixelArrayBuffer() {\n\t    if (!hasDOM || !window.CanvasPixelArray) {\n\t      return;\n\t    }\n\t    var cpaProto = window.CanvasPixelArray.prototype;\n\t    if ('buffer' in cpaProto) {\n\t      return;\n\t    }\n\t    Object.defineProperty(cpaProto, 'buffer', {\n\t      get: function get() {\n\t        return this;\n\t      },\n\t\n\t      enumerable: false,\n\t      configurable: true\n\t    });\n\t    Object.defineProperty(cpaProto, 'byteLength', {\n\t      get: function get() {\n\t        return this.length;\n\t      },\n\t\n\t      enumerable: false,\n\t      configurable: true\n\t    });\n\t  })();\n\t  (function normalizeURLObject() {\n\t    if (!globalScope.URL) {\n\t      globalScope.URL = globalScope.webkitURL;\n\t    }\n\t  })();\n\t  (function checkObjectDefinePropertyCompatibility() {\n\t    if (typeof Object.defineProperty !== 'undefined') {\n\t      var definePropertyPossible = true;\n\t      try {\n\t        if (hasDOM) {\n\t          Object.defineProperty(new Image(), 'id', { value: 'test' });\n\t        }\n\t        var Test = function Test() {};\n\t        Test.prototype = {\n\t          get id() {}\n\t        };\n\t        Object.defineProperty(new Test(), 'id', {\n\t          value: '',\n\t          configurable: true,\n\t          enumerable: true,\n\t          writable: false\n\t        });\n\t      } catch (e) {\n\t        definePropertyPossible = false;\n\t      }\n\t      if (definePropertyPossible) {\n\t        return;\n\t      }\n\t    }\n\t    Object.defineProperty = function objectDefineProperty(obj, name, def) {\n\t      delete obj[name];\n\t      if ('get' in def) {\n\t        obj.__defineGetter__(name, def['get']);\n\t      }\n\t      if ('set' in def) {\n\t        obj.__defineSetter__(name, def['set']);\n\t      }\n\t      if ('value' in def) {\n\t        obj.__defineSetter__(name, function objectDefinePropertySetter(value) {\n\t          this.__defineGetter__(name, function objectDefinePropertyGetter() {\n\t            return value;\n\t          });\n\t          return value;\n\t        });\n\t        obj[name] = def.value;\n\t      }\n\t    };\n\t  })();\n\t  (function checkXMLHttpRequestResponseCompatibility() {\n\t    if (typeof XMLHttpRequest === 'undefined') {\n\t      return;\n\t    }\n\t    var xhrPrototype = XMLHttpRequest.prototype;\n\t    var xhr = new XMLHttpRequest();\n\t    if (!('overrideMimeType' in xhr)) {\n\t      Object.defineProperty(xhrPrototype, 'overrideMimeType', {\n\t        value: function xmlHttpRequestOverrideMimeType(mimeType) {}\n\t      });\n\t    }\n\t    if ('responseType' in xhr) {\n\t      return;\n\t    }\n\t    Object.defineProperty(xhrPrototype, 'responseType', {\n\t      get: function xmlHttpRequestGetResponseType() {\n\t        return this._responseType || 'text';\n\t      },\n\t      set: function xmlHttpRequestSetResponseType(value) {\n\t        if (value === 'text' || value === 'arraybuffer') {\n\t          this._responseType = value;\n\t          if (value === 'arraybuffer' && typeof this.overrideMimeType === 'function') {\n\t            this.overrideMimeType('text/plain; charset=x-user-defined');\n\t          }\n\t        }\n\t      }\n\t    });\n\t    if (typeof VBArray !== 'undefined') {\n\t      Object.defineProperty(xhrPrototype, 'response', {\n\t        get: function xmlHttpRequestResponseGet() {\n\t          if (this.responseType === 'arraybuffer') {\n\t            return new Uint8Array(new VBArray(this.responseBody).toArray());\n\t          }\n\t          return this.responseText;\n\t        }\n\t      });\n\t      return;\n\t    }\n\t    Object.defineProperty(xhrPrototype, 'response', {\n\t      get: function xmlHttpRequestResponseGet() {\n\t        if (this.responseType !== 'arraybuffer') {\n\t          return this.responseText;\n\t        }\n\t        var text = this.responseText;\n\t        var i,\n\t            n = text.length;\n\t        var result = new Uint8Array(n);\n\t        for (i = 0; i < n; ++i) {\n\t          result[i] = text.charCodeAt(i) & 0xFF;\n\t        }\n\t        return result.buffer;\n\t      }\n\t    });\n\t  })();\n\t  (function checkWindowBtoaCompatibility() {\n\t    if ('btoa' in globalScope) {\n\t      return;\n\t    }\n\t    var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\t    globalScope.btoa = function (chars) {\n\t      var buffer = '';\n\t      var i, n;\n\t      for (i = 0, n = chars.length; i < n; i += 3) {\n\t        var b1 = chars.charCodeAt(i) & 0xFF;\n\t        var b2 = chars.charCodeAt(i + 1) & 0xFF;\n\t        var b3 = chars.charCodeAt(i + 2) & 0xFF;\n\t        var d1 = b1 >> 2,\n\t            d2 = (b1 & 3) << 4 | b2 >> 4;\n\t        var d3 = i + 1 < n ? (b2 & 0xF) << 2 | b3 >> 6 : 64;\n\t        var d4 = i + 2 < n ? b3 & 0x3F : 64;\n\t        buffer += digits.charAt(d1) + digits.charAt(d2) + digits.charAt(d3) + digits.charAt(d4);\n\t      }\n\t      return buffer;\n\t    };\n\t  })();\n\t  (function checkWindowAtobCompatibility() {\n\t    if ('atob' in globalScope) {\n\t      return;\n\t    }\n\t    var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\t    globalScope.atob = function (input) {\n\t      input = input.replace(/=+$/, '');\n\t      if (input.length % 4 === 1) {\n\t        throw new Error('bad atob input');\n\t      }\n\t      for (var bc = 0, bs, buffer, idx = 0, output = ''; buffer = input.charAt(idx++); ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\n\t        buffer = digits.indexOf(buffer);\n\t      }\n\t      return output;\n\t    };\n\t  })();\n\t  (function checkFunctionPrototypeBindCompatibility() {\n\t    if (typeof Function.prototype.bind !== 'undefined') {\n\t      return;\n\t    }\n\t    Function.prototype.bind = function functionPrototypeBind(obj) {\n\t      var fn = this,\n\t          headArgs = Array.prototype.slice.call(arguments, 1);\n\t      var bound = function functionPrototypeBindBound() {\n\t        var args = headArgs.concat(Array.prototype.slice.call(arguments));\n\t        return fn.apply(obj, args);\n\t      };\n\t      return bound;\n\t    };\n\t  })();\n\t  (function checkDatasetProperty() {\n\t    if (!hasDOM) {\n\t      return;\n\t    }\n\t    var div = document.createElement('div');\n\t    if ('dataset' in div) {\n\t      return;\n\t    }\n\t    Object.defineProperty(HTMLElement.prototype, 'dataset', {\n\t      get: function get() {\n\t        if (this._dataset) {\n\t          return this._dataset;\n\t        }\n\t        var dataset = {};\n\t        for (var j = 0, jj = this.attributes.length; j < jj; j++) {\n\t          var attribute = this.attributes[j];\n\t          if (attribute.name.substring(0, 5) !== 'data-') {\n\t            continue;\n\t          }\n\t          var key = attribute.name.substring(5).replace(/\\-([a-z])/g, function (all, ch) {\n\t            return ch.toUpperCase();\n\t          });\n\t          dataset[key] = attribute.value;\n\t        }\n\t        Object.defineProperty(this, '_dataset', {\n\t          value: dataset,\n\t          writable: false,\n\t          enumerable: false\n\t        });\n\t        return dataset;\n\t      },\n\t\n\t      enumerable: true\n\t    });\n\t  })();\n\t  (function checkClassListProperty() {\n\t    function changeList(element, itemName, add, remove) {\n\t      var s = element.className || '';\n\t      var list = s.split(/\\s+/g);\n\t      if (list[0] === '') {\n\t        list.shift();\n\t      }\n\t      var index = list.indexOf(itemName);\n\t      if (index < 0 && add) {\n\t        list.push(itemName);\n\t      }\n\t      if (index >= 0 && remove) {\n\t        list.splice(index, 1);\n\t      }\n\t      element.className = list.join(' ');\n\t      return index >= 0;\n\t    }\n\t    if (!hasDOM) {\n\t      return;\n\t    }\n\t    var div = document.createElement('div');\n\t    if ('classList' in div) {\n\t      return;\n\t    }\n\t    var classListPrototype = {\n\t      add: function add(name) {\n\t        changeList(this.element, name, true, false);\n\t      },\n\t      contains: function contains(name) {\n\t        return changeList(this.element, name, false, false);\n\t      },\n\t      remove: function remove(name) {\n\t        changeList(this.element, name, false, true);\n\t      },\n\t      toggle: function toggle(name) {\n\t        changeList(this.element, name, true, true);\n\t      }\n\t    };\n\t    Object.defineProperty(HTMLElement.prototype, 'classList', {\n\t      get: function get() {\n\t        if (this._classList) {\n\t          return this._classList;\n\t        }\n\t        var classList = Object.create(classListPrototype, {\n\t          element: {\n\t            value: this,\n\t            writable: false,\n\t            enumerable: true\n\t          }\n\t        });\n\t        Object.defineProperty(this, '_classList', {\n\t          value: classList,\n\t          writable: false,\n\t          enumerable: false\n\t        });\n\t        return classList;\n\t      },\n\t\n\t      enumerable: true\n\t    });\n\t  })();\n\t  (function checkWorkerConsoleCompatibility() {\n\t    if (typeof importScripts === 'undefined' || 'console' in globalScope) {\n\t      return;\n\t    }\n\t    var consoleTimer = {};\n\t    var workerConsole = {\n\t      log: function log() {\n\t        var args = Array.prototype.slice.call(arguments);\n\t        globalScope.postMessage({\n\t          targetName: 'main',\n\t          action: 'console_log',\n\t          data: args\n\t        });\n\t      },\n\t      error: function error() {\n\t        var args = Array.prototype.slice.call(arguments);\n\t        globalScope.postMessage({\n\t          targetName: 'main',\n\t          action: 'console_error',\n\t          data: args\n\t        });\n\t      },\n\t      time: function time(name) {\n\t        consoleTimer[name] = Date.now();\n\t      },\n\t      timeEnd: function timeEnd(name) {\n\t        var time = consoleTimer[name];\n\t        if (!time) {\n\t          throw new Error('Unknown timer name ' + name);\n\t        }\n\t        this.log('Timer:', name, Date.now() - time);\n\t      }\n\t    };\n\t    globalScope.console = workerConsole;\n\t  })();\n\t  (function checkConsoleCompatibility() {\n\t    if (!hasDOM) {\n\t      return;\n\t    }\n\t    if (!('console' in window)) {\n\t      window.console = {\n\t        log: function log() {},\n\t        error: function error() {},\n\t        warn: function warn() {}\n\t      };\n\t      return;\n\t    }\n\t    if (!('bind' in console.log)) {\n\t      console.log = function (fn) {\n\t        return function (msg) {\n\t          return fn(msg);\n\t        };\n\t      }(console.log);\n\t      console.error = function (fn) {\n\t        return function (msg) {\n\t          return fn(msg);\n\t        };\n\t      }(console.error);\n\t      console.warn = function (fn) {\n\t        return function (msg) {\n\t          return fn(msg);\n\t        };\n\t      }(console.warn);\n\t      return;\n\t    }\n\t  })();\n\t  (function checkOnClickCompatibility() {\n\t    function ignoreIfTargetDisabled(event) {\n\t      if (isDisabled(event.target)) {\n\t        event.stopPropagation();\n\t      }\n\t    }\n\t    function isDisabled(node) {\n\t      return node.disabled || node.parentNode && isDisabled(node.parentNode);\n\t    }\n\t    if (isOpera) {\n\t      document.addEventListener('click', ignoreIfTargetDisabled, true);\n\t    }\n\t  })();\n\t  (function checkOnBlobSupport() {\n\t    if (isIE || isIOSChrome) {\n\t      PDFJS.disableCreateObjectURL = true;\n\t    }\n\t  })();\n\t  (function checkNavigatorLanguage() {\n\t    if (typeof navigator === 'undefined') {\n\t      return;\n\t    }\n\t    if ('language' in navigator) {\n\t      return;\n\t    }\n\t    PDFJS.locale = navigator.userLanguage || 'en-US';\n\t  })();\n\t  (function checkRangeRequests() {\n\t    if (isSafari || isAndroidPre3 || isChromeWithRangeBug || isIOS) {\n\t      PDFJS.disableRange = true;\n\t      PDFJS.disableStream = true;\n\t    }\n\t  })();\n\t  (function checkHistoryManipulation() {\n\t    if (!hasDOM) {\n\t      return;\n\t    }\n\t    if (!history.pushState || isAndroidPre3) {\n\t      PDFJS.disableHistory = true;\n\t    }\n\t  })();\n\t  (function checkSetPresenceInImageData() {\n\t    if (!hasDOM) {\n\t      return;\n\t    }\n\t    if (window.CanvasPixelArray) {\n\t      if (typeof window.CanvasPixelArray.prototype.set !== 'function') {\n\t        window.CanvasPixelArray.prototype.set = function (arr) {\n\t          for (var i = 0, ii = this.length; i < ii; i++) {\n\t            this[i] = arr[i];\n\t          }\n\t        };\n\t      }\n\t    } else {\n\t      var polyfill = false,\n\t          versionMatch;\n\t      if (isChrome) {\n\t        versionMatch = userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\n\t        polyfill = versionMatch && parseInt(versionMatch[2]) < 21;\n\t      } else if (isAndroid) {\n\t        polyfill = isAndroidPre5;\n\t      } else if (isSafari) {\n\t        versionMatch = userAgent.match(/Version\\/([0-9]+)\\.([0-9]+)\\.([0-9]+) Safari\\//);\n\t        polyfill = versionMatch && parseInt(versionMatch[1]) < 6;\n\t      }\n\t      if (polyfill) {\n\t        var contextPrototype = window.CanvasRenderingContext2D.prototype;\n\t        var createImageData = contextPrototype.createImageData;\n\t        contextPrototype.createImageData = function (w, h) {\n\t          var imageData = createImageData.call(this, w, h);\n\t          imageData.data.set = function (arr) {\n\t            for (var i = 0, ii = this.length; i < ii; i++) {\n\t              this[i] = arr[i];\n\t            }\n\t          };\n\t          return imageData;\n\t        };\n\t        contextPrototype = null;\n\t      }\n\t    }\n\t  })();\n\t  (function checkRequestAnimationFrame() {\n\t    function installFakeAnimationFrameFunctions() {\n\t      window.requestAnimationFrame = function (callback) {\n\t        return window.setTimeout(callback, 20);\n\t      };\n\t      window.cancelAnimationFrame = function (timeoutID) {\n\t        window.clearTimeout(timeoutID);\n\t      };\n\t    }\n\t    if (!hasDOM) {\n\t      return;\n\t    }\n\t    if (isIOS) {\n\t      installFakeAnimationFrameFunctions();\n\t      return;\n\t    }\n\t    if ('requestAnimationFrame' in window) {\n\t      return;\n\t    }\n\t    window.requestAnimationFrame = window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame;\n\t    if (window.requestAnimationFrame) {\n\t      return;\n\t    }\n\t    installFakeAnimationFrameFunctions();\n\t  })();\n\t  (function checkCanvasSizeLimitation() {\n\t    if (isIOS || isAndroid) {\n\t      PDFJS.maxCanvasPixels = 5242880;\n\t    }\n\t  })();\n\t  (function checkFullscreenSupport() {\n\t    if (!hasDOM) {\n\t      return;\n\t    }\n\t    if (isIE && window.parent !== window) {\n\t      PDFJS.disableFullscreen = true;\n\t    }\n\t  })();\n\t  (function checkCurrentScript() {\n\t    if (!hasDOM) {\n\t      return;\n\t    }\n\t    if ('currentScript' in document) {\n\t      return;\n\t    }\n\t    Object.defineProperty(document, 'currentScript', {\n\t      get: function get() {\n\t        var scripts = document.getElementsByTagName('script');\n\t        return scripts[scripts.length - 1];\n\t      },\n\t\n\t      enumerable: true,\n\t      configurable: true\n\t    });\n\t  })();\n\t  (function checkInputTypeNumberAssign() {\n\t    if (!hasDOM) {\n\t      return;\n\t    }\n\t    var el = document.createElement('input');\n\t    try {\n\t      el.type = 'number';\n\t    } catch (ex) {\n\t      var inputProto = el.constructor.prototype;\n\t      var typeProperty = Object.getOwnPropertyDescriptor(inputProto, 'type');\n\t      Object.defineProperty(inputProto, 'type', {\n\t        get: function get() {\n\t          return typeProperty.get.call(this);\n\t        },\n\t        set: function set(value) {\n\t          typeProperty.set.call(this, value === 'number' ? 'text' : value);\n\t        },\n\t\n\t        enumerable: true,\n\t        configurable: true\n\t      });\n\t    }\n\t  })();\n\t  (function checkDocumentReadyState() {\n\t    if (!hasDOM) {\n\t      return;\n\t    }\n\t    if (!document.attachEvent) {\n\t      return;\n\t    }\n\t    var documentProto = document.constructor.prototype;\n\t    var readyStateProto = Object.getOwnPropertyDescriptor(documentProto, 'readyState');\n\t    Object.defineProperty(documentProto, 'readyState', {\n\t      get: function get() {\n\t        var value = readyStateProto.get.call(this);\n\t        return value === 'interactive' ? 'loading' : value;\n\t      },\n\t      set: function set(value) {\n\t        readyStateProto.set.call(this, value);\n\t      },\n\t\n\t      enumerable: true,\n\t      configurable: true\n\t    });\n\t  })();\n\t  (function checkChildNodeRemove() {\n\t    if (!hasDOM) {\n\t      return;\n\t    }\n\t    if (typeof Element.prototype.remove !== 'undefined') {\n\t      return;\n\t    }\n\t    Element.prototype.remove = function () {\n\t      if (this.parentNode) {\n\t        this.parentNode.removeChild(this);\n\t      }\n\t    };\n\t  })();\n\t  (function checkNumberIsNaN() {\n\t    if (Number.isNaN) {\n\t      return;\n\t    }\n\t    Number.isNaN = __w_pdfjs_require__(98);\n\t  })();\n\t  (function checkNumberIsInteger() {\n\t    if (Number.isInteger) {\n\t      return;\n\t    }\n\t    Number.isInteger = __w_pdfjs_require__(100);\n\t  })();\n\t  (function checkPromise() {\n\t    if (globalScope.Promise) {\n\t      return;\n\t    }\n\t    globalScope.Promise = __w_pdfjs_require__(103);\n\t  })();\n\t  (function checkWeakMap() {\n\t    if (globalScope.WeakMap) {\n\t      return;\n\t    }\n\t    globalScope.WeakMap = __w_pdfjs_require__(112);\n\t  })();\n\t  (function checkURLConstructor() {\n\t    var hasWorkingUrl = false;\n\t    try {\n\t      if (typeof URL === 'function' && _typeof(URL.prototype) === 'object' && 'origin' in URL.prototype) {\n\t        var u = new URL('b', 'http://a');\n\t        u.pathname = 'c%20d';\n\t        hasWorkingUrl = u.href === 'http://a/c%20d';\n\t      }\n\t    } catch (e) {}\n\t    if (hasWorkingUrl) {\n\t      return;\n\t    }\n\t    var relative = Object.create(null);\n\t    relative['ftp'] = 21;\n\t    relative['file'] = 0;\n\t    relative['gopher'] = 70;\n\t    relative['http'] = 80;\n\t    relative['https'] = 443;\n\t    relative['ws'] = 80;\n\t    relative['wss'] = 443;\n\t    var relativePathDotMapping = Object.create(null);\n\t    relativePathDotMapping['%2e'] = '.';\n\t    relativePathDotMapping['.%2e'] = '..';\n\t    relativePathDotMapping['%2e.'] = '..';\n\t    relativePathDotMapping['%2e%2e'] = '..';\n\t    function isRelativeScheme(scheme) {\n\t      return relative[scheme] !== undefined;\n\t    }\n\t    function invalid() {\n\t      clear.call(this);\n\t      this._isInvalid = true;\n\t    }\n\t    function IDNAToASCII(h) {\n\t      if (h === '') {\n\t        invalid.call(this);\n\t      }\n\t      return h.toLowerCase();\n\t    }\n\t    function percentEscape(c) {\n\t      var unicode = c.charCodeAt(0);\n\t      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x3F, 0x60].indexOf(unicode) === -1) {\n\t        return c;\n\t      }\n\t      return encodeURIComponent(c);\n\t    }\n\t    function percentEscapeQuery(c) {\n\t      var unicode = c.charCodeAt(0);\n\t      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x60].indexOf(unicode) === -1) {\n\t        return c;\n\t      }\n\t      return encodeURIComponent(c);\n\t    }\n\t    var EOF,\n\t        ALPHA = /[a-zA-Z]/,\n\t        ALPHANUMERIC = /[a-zA-Z0-9\\+\\-\\.]/;\n\t    function parse(input, stateOverride, base) {\n\t      function err(message) {\n\t        errors.push(message);\n\t      }\n\t      var state = stateOverride || 'scheme start',\n\t          cursor = 0,\n\t          buffer = '',\n\t          seenAt = false,\n\t          seenBracket = false,\n\t          errors = [];\n\t      loop: while ((input[cursor - 1] !== EOF || cursor === 0) && !this._isInvalid) {\n\t        var c = input[cursor];\n\t        switch (state) {\n\t          case 'scheme start':\n\t            if (c && ALPHA.test(c)) {\n\t              buffer += c.toLowerCase();\n\t              state = 'scheme';\n\t            } else if (!stateOverride) {\n\t              buffer = '';\n\t              state = 'no scheme';\n\t              continue;\n\t            } else {\n\t              err('Invalid scheme.');\n\t              break loop;\n\t            }\n\t            break;\n\t          case 'scheme':\n\t            if (c && ALPHANUMERIC.test(c)) {\n\t              buffer += c.toLowerCase();\n\t            } else if (c === ':') {\n\t              this._scheme = buffer;\n\t              buffer = '';\n\t              if (stateOverride) {\n\t                break loop;\n\t              }\n\t              if (isRelativeScheme(this._scheme)) {\n\t                this._isRelative = true;\n\t              }\n\t              if (this._scheme === 'file') {\n\t                state = 'relative';\n\t              } else if (this._isRelative && base && base._scheme === this._scheme) {\n\t                state = 'relative or authority';\n\t              } else if (this._isRelative) {\n\t                state = 'authority first slash';\n\t              } else {\n\t                state = 'scheme data';\n\t              }\n\t            } else if (!stateOverride) {\n\t              buffer = '';\n\t              cursor = 0;\n\t              state = 'no scheme';\n\t              continue;\n\t            } else if (c === EOF) {\n\t              break loop;\n\t            } else {\n\t              err('Code point not allowed in scheme: ' + c);\n\t              break loop;\n\t            }\n\t            break;\n\t          case 'scheme data':\n\t            if (c === '?') {\n\t              this._query = '?';\n\t              state = 'query';\n\t            } else if (c === '#') {\n\t              this._fragment = '#';\n\t              state = 'fragment';\n\t            } else {\n\t              if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n\t                this._schemeData += percentEscape(c);\n\t              }\n\t            }\n\t            break;\n\t          case 'no scheme':\n\t            if (!base || !isRelativeScheme(base._scheme)) {\n\t              err('Missing scheme.');\n\t              invalid.call(this);\n\t            } else {\n\t              state = 'relative';\n\t              continue;\n\t            }\n\t            break;\n\t          case 'relative or authority':\n\t            if (c === '/' && input[cursor + 1] === '/') {\n\t              state = 'authority ignore slashes';\n\t            } else {\n\t              err('Expected /, got: ' + c);\n\t              state = 'relative';\n\t              continue;\n\t            }\n\t            break;\n\t          case 'relative':\n\t            this._isRelative = true;\n\t            if (this._scheme !== 'file') {\n\t              this._scheme = base._scheme;\n\t            }\n\t            if (c === EOF) {\n\t              this._host = base._host;\n\t              this._port = base._port;\n\t              this._path = base._path.slice();\n\t              this._query = base._query;\n\t              this._username = base._username;\n\t              this._password = base._password;\n\t              break loop;\n\t            } else if (c === '/' || c === '\\\\') {\n\t              if (c === '\\\\') {\n\t                err('\\\\ is an invalid code point.');\n\t              }\n\t              state = 'relative slash';\n\t            } else if (c === '?') {\n\t              this._host = base._host;\n\t              this._port = base._port;\n\t              this._path = base._path.slice();\n\t              this._query = '?';\n\t              this._username = base._username;\n\t              this._password = base._password;\n\t              state = 'query';\n\t            } else if (c === '#') {\n\t              this._host = base._host;\n\t              this._port = base._port;\n\t              this._path = base._path.slice();\n\t              this._query = base._query;\n\t              this._fragment = '#';\n\t              this._username = base._username;\n\t              this._password = base._password;\n\t              state = 'fragment';\n\t            } else {\n\t              var nextC = input[cursor + 1];\n\t              var nextNextC = input[cursor + 2];\n\t              if (this._scheme !== 'file' || !ALPHA.test(c) || nextC !== ':' && nextC !== '|' || nextNextC !== EOF && nextNextC !== '/' && nextNextC !== '\\\\' && nextNextC !== '?' && nextNextC !== '#') {\n\t                this._host = base._host;\n\t                this._port = base._port;\n\t                this._username = base._username;\n\t                this._password = base._password;\n\t                this._path = base._path.slice();\n\t                this._path.pop();\n\t              }\n\t              state = 'relative path';\n\t              continue;\n\t            }\n\t            break;\n\t          case 'relative slash':\n\t            if (c === '/' || c === '\\\\') {\n\t              if (c === '\\\\') {\n\t                err('\\\\ is an invalid code point.');\n\t              }\n\t              if (this._scheme === 'file') {\n\t                state = 'file host';\n\t              } else {\n\t                state = 'authority ignore slashes';\n\t              }\n\t            } else {\n\t              if (this._scheme !== 'file') {\n\t                this._host = base._host;\n\t                this._port = base._port;\n\t                this._username = base._username;\n\t                this._password = base._password;\n\t              }\n\t              state = 'relative path';\n\t              continue;\n\t            }\n\t            break;\n\t          case 'authority first slash':\n\t            if (c === '/') {\n\t              state = 'authority second slash';\n\t            } else {\n\t              err('Expected \\'/\\', got: ' + c);\n\t              state = 'authority ignore slashes';\n\t              continue;\n\t            }\n\t            break;\n\t          case 'authority second slash':\n\t            state = 'authority ignore slashes';\n\t            if (c !== '/') {\n\t              err('Expected \\'/\\', got: ' + c);\n\t              continue;\n\t            }\n\t            break;\n\t          case 'authority ignore slashes':\n\t            if (c !== '/' && c !== '\\\\') {\n\t              state = 'authority';\n\t              continue;\n\t            } else {\n\t              err('Expected authority, got: ' + c);\n\t            }\n\t            break;\n\t          case 'authority':\n\t            if (c === '@') {\n\t              if (seenAt) {\n\t                err('@ already seen.');\n\t                buffer += '%40';\n\t              }\n\t              seenAt = true;\n\t              for (var i = 0; i < buffer.length; i++) {\n\t                var cp = buffer[i];\n\t                if (cp === '\\t' || cp === '\\n' || cp === '\\r') {\n\t                  err('Invalid whitespace in authority.');\n\t                  continue;\n\t                }\n\t                if (cp === ':' && this._password === null) {\n\t                  this._password = '';\n\t                  continue;\n\t                }\n\t                var tempC = percentEscape(cp);\n\t                if (this._password !== null) {\n\t                  this._password += tempC;\n\t                } else {\n\t                  this._username += tempC;\n\t                }\n\t              }\n\t              buffer = '';\n\t            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n\t              cursor -= buffer.length;\n\t              buffer = '';\n\t              state = 'host';\n\t              continue;\n\t            } else {\n\t              buffer += c;\n\t            }\n\t            break;\n\t          case 'file host':\n\t            if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n\t              if (buffer.length === 2 && ALPHA.test(buffer[0]) && (buffer[1] === ':' || buffer[1] === '|')) {\n\t                state = 'relative path';\n\t              } else if (buffer.length === 0) {\n\t                state = 'relative path start';\n\t              } else {\n\t                this._host = IDNAToASCII.call(this, buffer);\n\t                buffer = '';\n\t                state = 'relative path start';\n\t              }\n\t              continue;\n\t            } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n\t              err('Invalid whitespace in file host.');\n\t            } else {\n\t              buffer += c;\n\t            }\n\t            break;\n\t          case 'host':\n\t          case 'hostname':\n\t            if (c === ':' && !seenBracket) {\n\t              this._host = IDNAToASCII.call(this, buffer);\n\t              buffer = '';\n\t              state = 'port';\n\t              if (stateOverride === 'hostname') {\n\t                break loop;\n\t              }\n\t            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n\t              this._host = IDNAToASCII.call(this, buffer);\n\t              buffer = '';\n\t              state = 'relative path start';\n\t              if (stateOverride) {\n\t                break loop;\n\t              }\n\t              continue;\n\t            } else if (c !== '\\t' && c !== '\\n' && c !== '\\r') {\n\t              if (c === '[') {\n\t                seenBracket = true;\n\t              } else if (c === ']') {\n\t                seenBracket = false;\n\t              }\n\t              buffer += c;\n\t            } else {\n\t              err('Invalid code point in host/hostname: ' + c);\n\t            }\n\t            break;\n\t          case 'port':\n\t            if (/[0-9]/.test(c)) {\n\t              buffer += c;\n\t            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#' || stateOverride) {\n\t              if (buffer !== '') {\n\t                var temp = parseInt(buffer, 10);\n\t                if (temp !== relative[this._scheme]) {\n\t                  this._port = temp + '';\n\t                }\n\t                buffer = '';\n\t              }\n\t              if (stateOverride) {\n\t                break loop;\n\t              }\n\t              state = 'relative path start';\n\t              continue;\n\t            } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n\t              err('Invalid code point in port: ' + c);\n\t            } else {\n\t              invalid.call(this);\n\t            }\n\t            break;\n\t          case 'relative path start':\n\t            if (c === '\\\\') {\n\t              err('\\'\\\\\\' not allowed in path.');\n\t            }\n\t            state = 'relative path';\n\t            if (c !== '/' && c !== '\\\\') {\n\t              continue;\n\t            }\n\t            break;\n\t          case 'relative path':\n\t            if (c === EOF || c === '/' || c === '\\\\' || !stateOverride && (c === '?' || c === '#')) {\n\t              if (c === '\\\\') {\n\t                err('\\\\ not allowed in relative path.');\n\t              }\n\t              var tmp;\n\t              if (tmp = relativePathDotMapping[buffer.toLowerCase()]) {\n\t                buffer = tmp;\n\t              }\n\t              if (buffer === '..') {\n\t                this._path.pop();\n\t                if (c !== '/' && c !== '\\\\') {\n\t                  this._path.push('');\n\t                }\n\t              } else if (buffer === '.' && c !== '/' && c !== '\\\\') {\n\t                this._path.push('');\n\t              } else if (buffer !== '.') {\n\t                if (this._scheme === 'file' && this._path.length === 0 && buffer.length === 2 && ALPHA.test(buffer[0]) && buffer[1] === '|') {\n\t                  buffer = buffer[0] + ':';\n\t                }\n\t                this._path.push(buffer);\n\t              }\n\t              buffer = '';\n\t              if (c === '?') {\n\t                this._query = '?';\n\t                state = 'query';\n\t              } else if (c === '#') {\n\t                this._fragment = '#';\n\t                state = 'fragment';\n\t              }\n\t            } else if (c !== '\\t' && c !== '\\n' && c !== '\\r') {\n\t              buffer += percentEscape(c);\n\t            }\n\t            break;\n\t          case 'query':\n\t            if (!stateOverride && c === '#') {\n\t              this._fragment = '#';\n\t              state = 'fragment';\n\t            } else if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n\t              this._query += percentEscapeQuery(c);\n\t            }\n\t            break;\n\t          case 'fragment':\n\t            if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n\t              this._fragment += c;\n\t            }\n\t            break;\n\t        }\n\t        cursor++;\n\t      }\n\t    }\n\t    function clear() {\n\t      this._scheme = '';\n\t      this._schemeData = '';\n\t      this._username = '';\n\t      this._password = null;\n\t      this._host = '';\n\t      this._port = '';\n\t      this._path = [];\n\t      this._query = '';\n\t      this._fragment = '';\n\t      this._isInvalid = false;\n\t      this._isRelative = false;\n\t    }\n\t    function JURL(url, base) {\n\t      if (base !== undefined && !(base instanceof JURL)) {\n\t        base = new JURL(String(base));\n\t      }\n\t      this._url = url;\n\t      clear.call(this);\n\t      var input = url.replace(/^[ \\t\\r\\n\\f]+|[ \\t\\r\\n\\f]+$/g, '');\n\t      parse.call(this, input, null, base);\n\t    }\n\t    JURL.prototype = {\n\t      toString: function toString() {\n\t        return this.href;\n\t      },\n\t\n\t      get href() {\n\t        if (this._isInvalid) {\n\t          return this._url;\n\t        }\n\t        var authority = '';\n\t        if (this._username !== '' || this._password !== null) {\n\t          authority = this._username + (this._password !== null ? ':' + this._password : '') + '@';\n\t        }\n\t        return this.protocol + (this._isRelative ? '//' + authority + this.host : '') + this.pathname + this._query + this._fragment;\n\t      },\n\t      set href(value) {\n\t        clear.call(this);\n\t        parse.call(this, value);\n\t      },\n\t      get protocol() {\n\t        return this._scheme + ':';\n\t      },\n\t      set protocol(value) {\n\t        if (this._isInvalid) {\n\t          return;\n\t        }\n\t        parse.call(this, value + ':', 'scheme start');\n\t      },\n\t      get host() {\n\t        return this._isInvalid ? '' : this._port ? this._host + ':' + this._port : this._host;\n\t      },\n\t      set host(value) {\n\t        if (this._isInvalid || !this._isRelative) {\n\t          return;\n\t        }\n\t        parse.call(this, value, 'host');\n\t      },\n\t      get hostname() {\n\t        return this._host;\n\t      },\n\t      set hostname(value) {\n\t        if (this._isInvalid || !this._isRelative) {\n\t          return;\n\t        }\n\t        parse.call(this, value, 'hostname');\n\t      },\n\t      get port() {\n\t        return this._port;\n\t      },\n\t      set port(value) {\n\t        if (this._isInvalid || !this._isRelative) {\n\t          return;\n\t        }\n\t        parse.call(this, value, 'port');\n\t      },\n\t      get pathname() {\n\t        return this._isInvalid ? '' : this._isRelative ? '/' + this._path.join('/') : this._schemeData;\n\t      },\n\t      set pathname(value) {\n\t        if (this._isInvalid || !this._isRelative) {\n\t          return;\n\t        }\n\t        this._path = [];\n\t        parse.call(this, value, 'relative path start');\n\t      },\n\t      get search() {\n\t        return this._isInvalid || !this._query || this._query === '?' ? '' : this._query;\n\t      },\n\t      set search(value) {\n\t        if (this._isInvalid || !this._isRelative) {\n\t          return;\n\t        }\n\t        this._query = '?';\n\t        if (value[0] === '?') {\n\t          value = value.slice(1);\n\t        }\n\t        parse.call(this, value, 'query');\n\t      },\n\t      get hash() {\n\t        return this._isInvalid || !this._fragment || this._fragment === '#' ? '' : this._fragment;\n\t      },\n\t      set hash(value) {\n\t        if (this._isInvalid) {\n\t          return;\n\t        }\n\t        this._fragment = '#';\n\t        if (value[0] === '#') {\n\t          value = value.slice(1);\n\t        }\n\t        parse.call(this, value, 'fragment');\n\t      },\n\t      get origin() {\n\t        var host;\n\t        if (this._isInvalid || !this._scheme) {\n\t          return '';\n\t        }\n\t        switch (this._scheme) {\n\t          case 'data':\n\t          case 'file':\n\t          case 'javascript':\n\t          case 'mailto':\n\t            return 'null';\n\t          case 'blob':\n\t            try {\n\t              return new JURL(this._schemeData).origin || 'null';\n\t            } catch (_) {}\n\t            return 'null';\n\t        }\n\t        host = this.host;\n\t        if (!host) {\n\t          return '';\n\t        }\n\t        return this._scheme + '://' + host;\n\t      }\n\t    };\n\t    var OriginalURL = globalScope.URL;\n\t    if (OriginalURL) {\n\t      JURL.createObjectURL = function (blob) {\n\t        return OriginalURL.createObjectURL.apply(OriginalURL, arguments);\n\t      };\n\t      JURL.revokeObjectURL = function (url) {\n\t        OriginalURL.revokeObjectURL(url);\n\t      };\n\t    }\n\t    globalScope.URL = JURL;\n\t  })();\n\t}\n\t\n\t/***/ }),\n\t/* 85 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tmodule.exports = typeof window !== 'undefined' && window.Math === Math ? window : typeof global !== 'undefined' && global.Math === Math ? global : typeof self !== 'undefined' && self.Math === Math ? self : {};\n\t\n\t/***/ }),\n\t/* 86 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\t__w_pdfjs_require__(87);\n\tmodule.exports = __w_pdfjs_require__(7).Uint8ClampedArray;\n\t\n\t/***/ }),\n\t/* 87 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\t__w_pdfjs_require__(88)('Uint8', 1, function (init) {\n\t  return function Uint8ClampedArray(data, byteOffset, length) {\n\t    return init(this, data, byteOffset, length);\n\t  };\n\t}, true);\n\t\n\t/***/ }),\n\t/* 88 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tif (__w_pdfjs_require__(11)) {\n\t  var LIBRARY = __w_pdfjs_require__(28);\n\t  var global = __w_pdfjs_require__(1);\n\t  var fails = __w_pdfjs_require__(12);\n\t  var $export = __w_pdfjs_require__(6);\n\t  var $typed = __w_pdfjs_require__(49);\n\t  var $buffer = __w_pdfjs_require__(89);\n\t  var ctx = __w_pdfjs_require__(13);\n\t  var anInstance = __w_pdfjs_require__(23);\n\t  var propertyDesc = __w_pdfjs_require__(29);\n\t  var hide = __w_pdfjs_require__(8);\n\t  var redefineAll = __w_pdfjs_require__(22);\n\t  var toInteger = __w_pdfjs_require__(18);\n\t  var toLength = __w_pdfjs_require__(14);\n\t  var toIndex = __w_pdfjs_require__(50);\n\t  var toAbsoluteIndex = __w_pdfjs_require__(31);\n\t  var toPrimitive = __w_pdfjs_require__(36);\n\t  var has = __w_pdfjs_require__(10);\n\t  var classof = __w_pdfjs_require__(32);\n\t  var isObject = __w_pdfjs_require__(3);\n\t  var toObject = __w_pdfjs_require__(19);\n\t  var isArrayIter = __w_pdfjs_require__(56);\n\t  var create = __w_pdfjs_require__(57);\n\t  var getPrototypeOf = __w_pdfjs_require__(59);\n\t  var gOPN = __w_pdfjs_require__(51).f;\n\t  var getIterFn = __w_pdfjs_require__(60);\n\t  var uid = __w_pdfjs_require__(17);\n\t  var wks = __w_pdfjs_require__(4);\n\t  var createArrayMethod = __w_pdfjs_require__(42);\n\t  var createArrayIncludes = __w_pdfjs_require__(53);\n\t  var speciesConstructor = __w_pdfjs_require__(43);\n\t  var ArrayIterators = __w_pdfjs_require__(61);\n\t  var Iterators = __w_pdfjs_require__(20);\n\t  var $iterDetect = __w_pdfjs_require__(44);\n\t  var setSpecies = __w_pdfjs_require__(63);\n\t  var arrayFill = __w_pdfjs_require__(55);\n\t  var arrayCopyWithin = __w_pdfjs_require__(97);\n\t  var $DP = __w_pdfjs_require__(15);\n\t  var $GOPD = __w_pdfjs_require__(64);\n\t  var dP = $DP.f;\n\t  var gOPD = $GOPD.f;\n\t  var RangeError = global.RangeError;\n\t  var TypeError = global.TypeError;\n\t  var Uint8Array = global.Uint8Array;\n\t  var ARRAY_BUFFER = 'ArrayBuffer';\n\t  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;\n\t  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';\n\t  var PROTOTYPE = 'prototype';\n\t  var ArrayProto = Array[PROTOTYPE];\n\t  var $ArrayBuffer = $buffer.ArrayBuffer;\n\t  var $DataView = $buffer.DataView;\n\t  var arrayForEach = createArrayMethod(0);\n\t  var arrayFilter = createArrayMethod(2);\n\t  var arraySome = createArrayMethod(3);\n\t  var arrayEvery = createArrayMethod(4);\n\t  var arrayFind = createArrayMethod(5);\n\t  var arrayFindIndex = createArrayMethod(6);\n\t  var arrayIncludes = createArrayIncludes(true);\n\t  var arrayIndexOf = createArrayIncludes(false);\n\t  var arrayValues = ArrayIterators.values;\n\t  var arrayKeys = ArrayIterators.keys;\n\t  var arrayEntries = ArrayIterators.entries;\n\t  var arrayLastIndexOf = ArrayProto.lastIndexOf;\n\t  var arrayReduce = ArrayProto.reduce;\n\t  var arrayReduceRight = ArrayProto.reduceRight;\n\t  var arrayJoin = ArrayProto.join;\n\t  var arraySort = ArrayProto.sort;\n\t  var arraySlice = ArrayProto.slice;\n\t  var arrayToString = ArrayProto.toString;\n\t  var arrayToLocaleString = ArrayProto.toLocaleString;\n\t  var ITERATOR = wks('iterator');\n\t  var TAG = wks('toStringTag');\n\t  var TYPED_CONSTRUCTOR = uid('typed_constructor');\n\t  var DEF_CONSTRUCTOR = uid('def_constructor');\n\t  var ALL_CONSTRUCTORS = $typed.CONSTR;\n\t  var TYPED_ARRAY = $typed.TYPED;\n\t  var VIEW = $typed.VIEW;\n\t  var WRONG_LENGTH = 'Wrong length!';\n\t  var $map = createArrayMethod(1, function (O, length) {\n\t    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);\n\t  });\n\t  var LITTLE_ENDIAN = fails(function () {\n\t    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;\n\t  });\n\t  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {\n\t    new Uint8Array(1).set({});\n\t  });\n\t  var toOffset = function toOffset(it, BYTES) {\n\t    var offset = toInteger(it);\n\t    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');\n\t    return offset;\n\t  };\n\t  var validate = function validate(it) {\n\t    if (isObject(it) && TYPED_ARRAY in it) return it;\n\t    throw TypeError(it + ' is not a typed array!');\n\t  };\n\t  var allocate = function allocate(C, length) {\n\t    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {\n\t      throw TypeError('It is not a typed array constructor!');\n\t    }\n\t    return new C(length);\n\t  };\n\t  var speciesFromList = function speciesFromList(O, list) {\n\t    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);\n\t  };\n\t  var fromList = function fromList(C, list) {\n\t    var index = 0;\n\t    var length = list.length;\n\t    var result = allocate(C, length);\n\t    while (length > index) {\n\t      result[index] = list[index++];\n\t    }return result;\n\t  };\n\t  var addGetter = function addGetter(it, key, internal) {\n\t    dP(it, key, {\n\t      get: function get() {\n\t        return this._d[internal];\n\t      }\n\t    });\n\t  };\n\t  var $from = function from(source) {\n\t    var O = toObject(source);\n\t    var aLen = arguments.length;\n\t    var mapfn = aLen > 1 ? arguments[1] : undefined;\n\t    var mapping = mapfn !== undefined;\n\t    var iterFn = getIterFn(O);\n\t    var i, length, values, result, step, iterator;\n\t    if (iterFn != undefined && !isArrayIter(iterFn)) {\n\t      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {\n\t        values.push(step.value);\n\t      }\n\t      O = values;\n\t    }\n\t    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);\n\t    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {\n\t      result[i] = mapping ? mapfn(O[i], i) : O[i];\n\t    }\n\t    return result;\n\t  };\n\t  var $of = function of() {\n\t    var index = 0;\n\t    var length = arguments.length;\n\t    var result = allocate(this, length);\n\t    while (length > index) {\n\t      result[index] = arguments[index++];\n\t    }return result;\n\t  };\n\t  var TO_LOCALE_BUG = !!Uint8Array && fails(function () {\n\t    arrayToLocaleString.call(new Uint8Array(1));\n\t  });\n\t  var $toLocaleString = function toLocaleString() {\n\t    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);\n\t  };\n\t  var proto = {\n\t    copyWithin: function copyWithin(target, start) {\n\t      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);\n\t    },\n\t    every: function every(callbackfn) {\n\t      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n\t    },\n\t    fill: function fill(value) {\n\t      return arrayFill.apply(validate(this), arguments);\n\t    },\n\t    filter: function filter(callbackfn) {\n\t      return speciesFromList(this, arrayFilter(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined));\n\t    },\n\t    find: function find(predicate) {\n\t      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n\t    },\n\t    findIndex: function findIndex(predicate) {\n\t      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n\t    },\n\t    forEach: function forEach(callbackfn) {\n\t      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n\t    },\n\t    indexOf: function indexOf(searchElement) {\n\t      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n\t    },\n\t    includes: function includes(searchElement) {\n\t      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n\t    },\n\t    join: function join(separator) {\n\t      return arrayJoin.apply(validate(this), arguments);\n\t    },\n\t    lastIndexOf: function lastIndexOf(searchElement) {\n\t      return arrayLastIndexOf.apply(validate(this), arguments);\n\t    },\n\t    map: function map(mapfn) {\n\t      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);\n\t    },\n\t    reduce: function reduce(callbackfn) {\n\t      return arrayReduce.apply(validate(this), arguments);\n\t    },\n\t    reduceRight: function reduceRight(callbackfn) {\n\t      return arrayReduceRight.apply(validate(this), arguments);\n\t    },\n\t    reverse: function reverse() {\n\t      var that = this;\n\t      var length = validate(that).length;\n\t      var middle = Math.floor(length / 2);\n\t      var index = 0;\n\t      var value;\n\t      while (index < middle) {\n\t        value = that[index];\n\t        that[index++] = that[--length];\n\t        that[length] = value;\n\t      }\n\t      return that;\n\t    },\n\t    some: function some(callbackfn) {\n\t      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n\t    },\n\t    sort: function sort(comparefn) {\n\t      return arraySort.call(validate(this), comparefn);\n\t    },\n\t    subarray: function subarray(begin, end) {\n\t      var O = validate(this);\n\t      var length = O.length;\n\t      var $begin = toAbsoluteIndex(begin, length);\n\t      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(O.buffer, O.byteOffset + $begin * O.BYTES_PER_ELEMENT, toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin));\n\t    }\n\t  };\n\t  var $slice = function slice(start, end) {\n\t    return speciesFromList(this, arraySlice.call(validate(this), start, end));\n\t  };\n\t  var $set = function set(arrayLike) {\n\t    validate(this);\n\t    var offset = toOffset(arguments[1], 1);\n\t    var length = this.length;\n\t    var src = toObject(arrayLike);\n\t    var len = toLength(src.length);\n\t    var index = 0;\n\t    if (len + offset > length) throw RangeError(WRONG_LENGTH);\n\t    while (index < len) {\n\t      this[offset + index] = src[index++];\n\t    }\n\t  };\n\t  var $iterators = {\n\t    entries: function entries() {\n\t      return arrayEntries.call(validate(this));\n\t    },\n\t    keys: function keys() {\n\t      return arrayKeys.call(validate(this));\n\t    },\n\t    values: function values() {\n\t      return arrayValues.call(validate(this));\n\t    }\n\t  };\n\t  var isTAIndex = function isTAIndex(target, key) {\n\t    return isObject(target) && target[TYPED_ARRAY] && (typeof key === 'undefined' ? 'undefined' : _typeof(key)) != 'symbol' && key in target && String(+key) == String(key);\n\t  };\n\t  var $getDesc = function getOwnPropertyDescriptor(target, key) {\n\t    return isTAIndex(target, key = toPrimitive(key, true)) ? propertyDesc(2, target[key]) : gOPD(target, key);\n\t  };\n\t  var $setDesc = function defineProperty(target, key, desc) {\n\t    if (isTAIndex(target, key = toPrimitive(key, true)) && isObject(desc) && has(desc, 'value') && !has(desc, 'get') && !has(desc, 'set') && !desc.configurable && (!has(desc, 'writable') || desc.writable) && (!has(desc, 'enumerable') || desc.enumerable)) {\n\t      target[key] = desc.value;\n\t      return target;\n\t    }\n\t    return dP(target, key, desc);\n\t  };\n\t  if (!ALL_CONSTRUCTORS) {\n\t    $GOPD.f = $getDesc;\n\t    $DP.f = $setDesc;\n\t  }\n\t  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {\n\t    getOwnPropertyDescriptor: $getDesc,\n\t    defineProperty: $setDesc\n\t  });\n\t  if (fails(function () {\n\t    arrayToString.call({});\n\t  })) {\n\t    arrayToString = arrayToLocaleString = function toString() {\n\t      return arrayJoin.call(this);\n\t    };\n\t  }\n\t  var $TypedArrayPrototype$ = redefineAll({}, proto);\n\t  redefineAll($TypedArrayPrototype$, $iterators);\n\t  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);\n\t  redefineAll($TypedArrayPrototype$, {\n\t    slice: $slice,\n\t    set: $set,\n\t    constructor: function constructor() {},\n\t    toString: arrayToString,\n\t    toLocaleString: $toLocaleString\n\t  });\n\t  addGetter($TypedArrayPrototype$, 'buffer', 'b');\n\t  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');\n\t  addGetter($TypedArrayPrototype$, 'byteLength', 'l');\n\t  addGetter($TypedArrayPrototype$, 'length', 'e');\n\t  dP($TypedArrayPrototype$, TAG, {\n\t    get: function get() {\n\t      return this[TYPED_ARRAY];\n\t    }\n\t  });\n\t  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {\n\t    CLAMPED = !!CLAMPED;\n\t    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';\n\t    var GETTER = 'get' + KEY;\n\t    var SETTER = 'set' + KEY;\n\t    var TypedArray = global[NAME];\n\t    var Base = TypedArray || {};\n\t    var TAC = TypedArray && getPrototypeOf(TypedArray);\n\t    var FORCED = !TypedArray || !$typed.ABV;\n\t    var O = {};\n\t    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];\n\t    var getter = function getter(that, index) {\n\t      var data = that._d;\n\t      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);\n\t    };\n\t    var setter = function setter(that, index, value) {\n\t      var data = that._d;\n\t      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;\n\t      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);\n\t    };\n\t    var addElement = function addElement(that, index) {\n\t      dP(that, index, {\n\t        get: function get() {\n\t          return getter(this, index);\n\t        },\n\t        set: function set(value) {\n\t          return setter(this, index, value);\n\t        },\n\t        enumerable: true\n\t      });\n\t    };\n\t    if (FORCED) {\n\t      TypedArray = wrapper(function (that, data, $offset, $length) {\n\t        anInstance(that, TypedArray, NAME, '_d');\n\t        var index = 0;\n\t        var offset = 0;\n\t        var buffer, byteLength, length, klass;\n\t        if (!isObject(data)) {\n\t          length = toIndex(data);\n\t          byteLength = length * BYTES;\n\t          buffer = new $ArrayBuffer(byteLength);\n\t        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n\t          buffer = data;\n\t          offset = toOffset($offset, BYTES);\n\t          var $len = data.byteLength;\n\t          if ($length === undefined) {\n\t            if ($len % BYTES) throw RangeError(WRONG_LENGTH);\n\t            byteLength = $len - offset;\n\t            if (byteLength < 0) throw RangeError(WRONG_LENGTH);\n\t          } else {\n\t            byteLength = toLength($length) * BYTES;\n\t            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);\n\t          }\n\t          length = byteLength / BYTES;\n\t        } else if (TYPED_ARRAY in data) {\n\t          return fromList(TypedArray, data);\n\t        } else {\n\t          return $from.call(TypedArray, data);\n\t        }\n\t        hide(that, '_d', {\n\t          b: buffer,\n\t          o: offset,\n\t          l: byteLength,\n\t          e: length,\n\t          v: new $DataView(buffer)\n\t        });\n\t        while (index < length) {\n\t          addElement(that, index++);\n\t        }\n\t      });\n\t      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);\n\t      hide(TypedArrayPrototype, 'constructor', TypedArray);\n\t    } else if (!fails(function () {\n\t      TypedArray(1);\n\t    }) || !fails(function () {\n\t      new TypedArray(-1);\n\t    }) || !$iterDetect(function (iter) {\n\t      new TypedArray();\n\t      new TypedArray(null);\n\t      new TypedArray(1.5);\n\t      new TypedArray(iter);\n\t    }, true)) {\n\t      TypedArray = wrapper(function (that, data, $offset, $length) {\n\t        anInstance(that, TypedArray, NAME);\n\t        var klass;\n\t        if (!isObject(data)) return new Base(toIndex(data));\n\t        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n\t          return $length !== undefined ? new Base(data, toOffset($offset, BYTES), $length) : $offset !== undefined ? new Base(data, toOffset($offset, BYTES)) : new Base(data);\n\t        }\n\t        if (TYPED_ARRAY in data) return fromList(TypedArray, data);\n\t        return $from.call(TypedArray, data);\n\t      });\n\t      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {\n\t        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);\n\t      });\n\t      TypedArray[PROTOTYPE] = TypedArrayPrototype;\n\t      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;\n\t    }\n\t    var $nativeIterator = TypedArrayPrototype[ITERATOR];\n\t    var CORRECT_ITER_NAME = !!$nativeIterator && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);\n\t    var $iterator = $iterators.values;\n\t    hide(TypedArray, TYPED_CONSTRUCTOR, true);\n\t    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);\n\t    hide(TypedArrayPrototype, VIEW, true);\n\t    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);\n\t    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {\n\t      dP(TypedArrayPrototype, TAG, {\n\t        get: function get() {\n\t          return NAME;\n\t        }\n\t      });\n\t    }\n\t    O[NAME] = TypedArray;\n\t    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);\n\t    $export($export.S, NAME, { BYTES_PER_ELEMENT: BYTES });\n\t    $export($export.S + $export.F * fails(function () {\n\t      Base.of.call(TypedArray, 1);\n\t    }), NAME, {\n\t      from: $from,\n\t      of: $of\n\t    });\n\t    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);\n\t    $export($export.P, NAME, proto);\n\t    setSpecies(NAME);\n\t    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });\n\t    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);\n\t    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;\n\t    $export($export.P + $export.F * fails(function () {\n\t      new TypedArray(1).slice();\n\t    }), NAME, { slice: $slice });\n\t    $export($export.P + $export.F * (fails(function () {\n\t      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();\n\t    }) || !fails(function () {\n\t      TypedArrayPrototype.toLocaleString.call([1, 2]);\n\t    })), NAME, { toLocaleString: $toLocaleString });\n\t    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;\n\t    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);\n\t  };\n\t} else module.exports = function () {};\n\t\n\t/***/ }),\n\t/* 89 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar global = __w_pdfjs_require__(1);\n\tvar DESCRIPTORS = __w_pdfjs_require__(11);\n\tvar LIBRARY = __w_pdfjs_require__(28);\n\tvar $typed = __w_pdfjs_require__(49);\n\tvar hide = __w_pdfjs_require__(8);\n\tvar redefineAll = __w_pdfjs_require__(22);\n\tvar fails = __w_pdfjs_require__(12);\n\tvar anInstance = __w_pdfjs_require__(23);\n\tvar toInteger = __w_pdfjs_require__(18);\n\tvar toLength = __w_pdfjs_require__(14);\n\tvar toIndex = __w_pdfjs_require__(50);\n\tvar gOPN = __w_pdfjs_require__(51).f;\n\tvar dP = __w_pdfjs_require__(15).f;\n\tvar arrayFill = __w_pdfjs_require__(55);\n\tvar setToStringTag = __w_pdfjs_require__(25);\n\tvar ARRAY_BUFFER = 'ArrayBuffer';\n\tvar DATA_VIEW = 'DataView';\n\tvar PROTOTYPE = 'prototype';\n\tvar WRONG_LENGTH = 'Wrong length!';\n\tvar WRONG_INDEX = 'Wrong index!';\n\tvar $ArrayBuffer = global[ARRAY_BUFFER];\n\tvar $DataView = global[DATA_VIEW];\n\tvar Math = global.Math;\n\tvar RangeError = global.RangeError;\n\tvar Infinity = global.Infinity;\n\tvar BaseBuffer = $ArrayBuffer;\n\tvar abs = Math.abs;\n\tvar pow = Math.pow;\n\tvar floor = Math.floor;\n\tvar log = Math.log;\n\tvar LN2 = Math.LN2;\n\tvar BUFFER = 'buffer';\n\tvar BYTE_LENGTH = 'byteLength';\n\tvar BYTE_OFFSET = 'byteOffset';\n\tvar $BUFFER = DESCRIPTORS ? '_b' : BUFFER;\n\tvar $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;\n\tvar $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;\n\tfunction packIEEE754(value, mLen, nBytes) {\n\t  var buffer = Array(nBytes);\n\t  var eLen = nBytes * 8 - mLen - 1;\n\t  var eMax = (1 << eLen) - 1;\n\t  var eBias = eMax >> 1;\n\t  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;\n\t  var i = 0;\n\t  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n\t  var e, m, c;\n\t  value = abs(value);\n\t  if (value != value || value === Infinity) {\n\t    m = value != value ? 1 : 0;\n\t    e = eMax;\n\t  } else {\n\t    e = floor(log(value) / LN2);\n\t    if (value * (c = pow(2, -e)) < 1) {\n\t      e--;\n\t      c *= 2;\n\t    }\n\t    if (e + eBias >= 1) {\n\t      value += rt / c;\n\t    } else {\n\t      value += rt * pow(2, 1 - eBias);\n\t    }\n\t    if (value * c >= 2) {\n\t      e++;\n\t      c /= 2;\n\t    }\n\t    if (e + eBias >= eMax) {\n\t      m = 0;\n\t      e = eMax;\n\t    } else if (e + eBias >= 1) {\n\t      m = (value * c - 1) * pow(2, mLen);\n\t      e = e + eBias;\n\t    } else {\n\t      m = value * pow(2, eBias - 1) * pow(2, mLen);\n\t      e = 0;\n\t    }\n\t  }\n\t  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8) {}\n\t  e = e << mLen | m;\n\t  eLen += mLen;\n\t  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8) {}\n\t  buffer[--i] |= s * 128;\n\t  return buffer;\n\t}\n\tfunction unpackIEEE754(buffer, mLen, nBytes) {\n\t  var eLen = nBytes * 8 - mLen - 1;\n\t  var eMax = (1 << eLen) - 1;\n\t  var eBias = eMax >> 1;\n\t  var nBits = eLen - 7;\n\t  var i = nBytes - 1;\n\t  var s = buffer[i--];\n\t  var e = s & 127;\n\t  var m;\n\t  s >>= 7;\n\t  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8) {}\n\t  m = e & (1 << -nBits) - 1;\n\t  e >>= -nBits;\n\t  nBits += mLen;\n\t  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8) {}\n\t  if (e === 0) {\n\t    e = 1 - eBias;\n\t  } else if (e === eMax) {\n\t    return m ? NaN : s ? -Infinity : Infinity;\n\t  } else {\n\t    m = m + pow(2, mLen);\n\t    e = e - eBias;\n\t  }\n\t  return (s ? -1 : 1) * m * pow(2, e - mLen);\n\t}\n\tfunction unpackI32(bytes) {\n\t  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];\n\t}\n\tfunction packI8(it) {\n\t  return [it & 0xff];\n\t}\n\tfunction packI16(it) {\n\t  return [it & 0xff, it >> 8 & 0xff];\n\t}\n\tfunction packI32(it) {\n\t  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];\n\t}\n\tfunction packF64(it) {\n\t  return packIEEE754(it, 52, 8);\n\t}\n\tfunction packF32(it) {\n\t  return packIEEE754(it, 23, 4);\n\t}\n\tfunction addGetter(C, key, internal) {\n\t  dP(C[PROTOTYPE], key, {\n\t    get: function get() {\n\t      return this[internal];\n\t    }\n\t  });\n\t}\n\tfunction get(view, bytes, index, isLittleEndian) {\n\t  var numIndex = +index;\n\t  var intIndex = toIndex(numIndex);\n\t  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n\t  var store = view[$BUFFER]._b;\n\t  var start = intIndex + view[$OFFSET];\n\t  var pack = store.slice(start, start + bytes);\n\t  return isLittleEndian ? pack : pack.reverse();\n\t}\n\tfunction set(view, bytes, index, conversion, value, isLittleEndian) {\n\t  var numIndex = +index;\n\t  var intIndex = toIndex(numIndex);\n\t  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n\t  var store = view[$BUFFER]._b;\n\t  var start = intIndex + view[$OFFSET];\n\t  var pack = conversion(+value);\n\t  for (var i = 0; i < bytes; i++) {\n\t    store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];\n\t  }\n\t}\n\tif (!$typed.ABV) {\n\t  $ArrayBuffer = function ArrayBuffer(length) {\n\t    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);\n\t    var byteLength = toIndex(length);\n\t    this._b = arrayFill.call(Array(byteLength), 0);\n\t    this[$LENGTH] = byteLength;\n\t  };\n\t  $DataView = function DataView(buffer, byteOffset, byteLength) {\n\t    anInstance(this, $DataView, DATA_VIEW);\n\t    anInstance(buffer, $ArrayBuffer, DATA_VIEW);\n\t    var bufferLength = buffer[$LENGTH];\n\t    var offset = toInteger(byteOffset);\n\t    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');\n\t    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);\n\t    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);\n\t    this[$BUFFER] = buffer;\n\t    this[$OFFSET] = offset;\n\t    this[$LENGTH] = byteLength;\n\t  };\n\t  if (DESCRIPTORS) {\n\t    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');\n\t    addGetter($DataView, BUFFER, '_b');\n\t    addGetter($DataView, BYTE_LENGTH, '_l');\n\t    addGetter($DataView, BYTE_OFFSET, '_o');\n\t  }\n\t  redefineAll($DataView[PROTOTYPE], {\n\t    getInt8: function getInt8(byteOffset) {\n\t      return get(this, 1, byteOffset)[0] << 24 >> 24;\n\t    },\n\t    getUint8: function getUint8(byteOffset) {\n\t      return get(this, 1, byteOffset)[0];\n\t    },\n\t    getInt16: function getInt16(byteOffset) {\n\t      var bytes = get(this, 2, byteOffset, arguments[1]);\n\t      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;\n\t    },\n\t    getUint16: function getUint16(byteOffset) {\n\t      var bytes = get(this, 2, byteOffset, arguments[1]);\n\t      return bytes[1] << 8 | bytes[0];\n\t    },\n\t    getInt32: function getInt32(byteOffset) {\n\t      return unpackI32(get(this, 4, byteOffset, arguments[1]));\n\t    },\n\t    getUint32: function getUint32(byteOffset) {\n\t      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;\n\t    },\n\t    getFloat32: function getFloat32(byteOffset) {\n\t      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);\n\t    },\n\t    getFloat64: function getFloat64(byteOffset) {\n\t      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);\n\t    },\n\t    setInt8: function setInt8(byteOffset, value) {\n\t      set(this, 1, byteOffset, packI8, value);\n\t    },\n\t    setUint8: function setUint8(byteOffset, value) {\n\t      set(this, 1, byteOffset, packI8, value);\n\t    },\n\t    setInt16: function setInt16(byteOffset, value) {\n\t      set(this, 2, byteOffset, packI16, value, arguments[2]);\n\t    },\n\t    setUint16: function setUint16(byteOffset, value) {\n\t      set(this, 2, byteOffset, packI16, value, arguments[2]);\n\t    },\n\t    setInt32: function setInt32(byteOffset, value) {\n\t      set(this, 4, byteOffset, packI32, value, arguments[2]);\n\t    },\n\t    setUint32: function setUint32(byteOffset, value) {\n\t      set(this, 4, byteOffset, packI32, value, arguments[2]);\n\t    },\n\t    setFloat32: function setFloat32(byteOffset, value) {\n\t      set(this, 4, byteOffset, packF32, value, arguments[2]);\n\t    },\n\t    setFloat64: function setFloat64(byteOffset, value) {\n\t      set(this, 8, byteOffset, packF64, value, arguments[2]);\n\t    }\n\t  });\n\t} else {\n\t  if (!fails(function () {\n\t    $ArrayBuffer(1);\n\t  }) || !fails(function () {\n\t    new $ArrayBuffer(-1);\n\t  }) || fails(function () {\n\t    new $ArrayBuffer();\n\t    new $ArrayBuffer(1.5);\n\t    new $ArrayBuffer(NaN);\n\t    return $ArrayBuffer.name != ARRAY_BUFFER;\n\t  })) {\n\t    $ArrayBuffer = function ArrayBuffer(length) {\n\t      anInstance(this, $ArrayBuffer);\n\t      return new BaseBuffer(toIndex(length));\n\t    };\n\t    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];\n\t    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {\n\t      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);\n\t    }\n\t    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;\n\t  }\n\t  var view = new $DataView(new $ArrayBuffer(2));\n\t  var $setInt8 = $DataView[PROTOTYPE].setInt8;\n\t  view.setInt8(0, 2147483648);\n\t  view.setInt8(1, 2147483649);\n\t  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {\n\t    setInt8: function setInt8(byteOffset, value) {\n\t      $setInt8.call(this, byteOffset, value << 24 >> 24);\n\t    },\n\t    setUint8: function setUint8(byteOffset, value) {\n\t      $setInt8.call(this, byteOffset, value << 24 >> 24);\n\t    }\n\t  }, true);\n\t}\n\tsetToStringTag($ArrayBuffer, ARRAY_BUFFER);\n\tsetToStringTag($DataView, DATA_VIEW);\n\thide($DataView[PROTOTYPE], $typed.VIEW, true);\n\texports[ARRAY_BUFFER] = $ArrayBuffer;\n\texports[DATA_VIEW] = $DataView;\n\t\n\t/***/ }),\n\t/* 90 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar dP = __w_pdfjs_require__(15);\n\tvar anObject = __w_pdfjs_require__(9);\n\tvar getKeys = __w_pdfjs_require__(41);\n\tmodule.exports = __w_pdfjs_require__(11) ? Object.defineProperties : function defineProperties(O, Properties) {\n\t  anObject(O);\n\t  var keys = getKeys(Properties);\n\t  var length = keys.length;\n\t  var i = 0;\n\t  var P;\n\t  while (length > i) {\n\t    dP.f(O, P = keys[i++], Properties[P]);\n\t  }return O;\n\t};\n\t\n\t/***/ }),\n\t/* 91 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar speciesConstructor = __w_pdfjs_require__(92);\n\tmodule.exports = function (original, length) {\n\t  return new (speciesConstructor(original))(length);\n\t};\n\t\n\t/***/ }),\n\t/* 92 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar isObject = __w_pdfjs_require__(3);\n\tvar isArray = __w_pdfjs_require__(93);\n\tvar SPECIES = __w_pdfjs_require__(4)('species');\n\tmodule.exports = function (original) {\n\t  var C;\n\t  if (isArray(original)) {\n\t    C = original.constructor;\n\t    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n\t    if (isObject(C)) {\n\t      C = C[SPECIES];\n\t      if (C === null) C = undefined;\n\t    }\n\t  }\n\t  return C === undefined ? Array : C;\n\t};\n\t\n\t/***/ }),\n\t/* 93 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar cof = __w_pdfjs_require__(24);\n\tmodule.exports = Array.isArray || function isArray(arg) {\n\t  return cof(arg) == 'Array';\n\t};\n\t\n\t/***/ }),\n\t/* 94 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar UNSCOPABLES = __w_pdfjs_require__(4)('unscopables');\n\tvar ArrayProto = Array.prototype;\n\tif (ArrayProto[UNSCOPABLES] == undefined) __w_pdfjs_require__(8)(ArrayProto, UNSCOPABLES, {});\n\tmodule.exports = function (key) {\n\t  ArrayProto[UNSCOPABLES][key] = true;\n\t};\n\t\n\t/***/ }),\n\t/* 95 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tmodule.exports = function (done, value) {\n\t  return {\n\t    value: value,\n\t    done: !!done\n\t  };\n\t};\n\t\n\t/***/ }),\n\t/* 96 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar create = __w_pdfjs_require__(57);\n\tvar descriptor = __w_pdfjs_require__(29);\n\tvar setToStringTag = __w_pdfjs_require__(25);\n\tvar IteratorPrototype = {};\n\t__w_pdfjs_require__(8)(IteratorPrototype, __w_pdfjs_require__(4)('iterator'), function () {\n\t  return this;\n\t});\n\tmodule.exports = function (Constructor, NAME, next) {\n\t  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n\t  setToStringTag(Constructor, NAME + ' Iterator');\n\t};\n\t\n\t/***/ }),\n\t/* 97 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar toObject = __w_pdfjs_require__(19);\n\tvar toAbsoluteIndex = __w_pdfjs_require__(31);\n\tvar toLength = __w_pdfjs_require__(14);\n\tmodule.exports = [].copyWithin || function copyWithin(target, start) {\n\t  var O = toObject(this);\n\t  var len = toLength(O.length);\n\t  var to = toAbsoluteIndex(target, len);\n\t  var from = toAbsoluteIndex(start, len);\n\t  var end = arguments.length > 2 ? arguments[2] : undefined;\n\t  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);\n\t  var inc = 1;\n\t  if (from < to && to < from + count) {\n\t    inc = -1;\n\t    from += count - 1;\n\t    to += count - 1;\n\t  }\n\t  while (count-- > 0) {\n\t    if (from in O) O[to] = O[from];else delete O[to];\n\t    to += inc;\n\t    from += inc;\n\t  }\n\t  return O;\n\t};\n\t\n\t/***/ }),\n\t/* 98 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\t__w_pdfjs_require__(99);\n\tmodule.exports = __w_pdfjs_require__(7).Number.isNaN;\n\t\n\t/***/ }),\n\t/* 99 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar $export = __w_pdfjs_require__(6);\n\t$export($export.S, 'Number', {\n\t  isNaN: function isNaN(number) {\n\t    return number != number;\n\t  }\n\t});\n\t\n\t/***/ }),\n\t/* 100 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\t__w_pdfjs_require__(101);\n\tmodule.exports = __w_pdfjs_require__(7).Number.isInteger;\n\t\n\t/***/ }),\n\t/* 101 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar $export = __w_pdfjs_require__(6);\n\t$export($export.S, 'Number', { isInteger: __w_pdfjs_require__(102) });\n\t\n\t/***/ }),\n\t/* 102 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar isObject = __w_pdfjs_require__(3);\n\tvar floor = Math.floor;\n\tmodule.exports = function isInteger(it) {\n\t  return !isObject(it) && isFinite(it) && floor(it) === it;\n\t};\n\t\n\t/***/ }),\n\t/* 103 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\t__w_pdfjs_require__(66);\n\t__w_pdfjs_require__(104);\n\t__w_pdfjs_require__(67);\n\t__w_pdfjs_require__(106);\n\t__w_pdfjs_require__(110);\n\t__w_pdfjs_require__(111);\n\tmodule.exports = __w_pdfjs_require__(7).Promise;\n\t\n\t/***/ }),\n\t/* 104 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar $at = __w_pdfjs_require__(105)(true);\n\t__w_pdfjs_require__(62)(String, 'String', function (iterated) {\n\t  this._t = String(iterated);\n\t  this._i = 0;\n\t}, function () {\n\t  var O = this._t;\n\t  var index = this._i;\n\t  var point;\n\t  if (index >= O.length) return {\n\t    value: undefined,\n\t    done: true\n\t  };\n\t  point = $at(O, index);\n\t  this._i += point.length;\n\t  return {\n\t    value: point,\n\t    done: false\n\t  };\n\t});\n\t\n\t/***/ }),\n\t/* 105 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar toInteger = __w_pdfjs_require__(18);\n\tvar defined = __w_pdfjs_require__(38);\n\tmodule.exports = function (TO_STRING) {\n\t  return function (that, pos) {\n\t    var s = String(defined(that));\n\t    var i = toInteger(pos);\n\t    var l = s.length;\n\t    var a, b;\n\t    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n\t    a = s.charCodeAt(i);\n\t    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n\t  };\n\t};\n\t\n\t/***/ }),\n\t/* 106 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar LIBRARY = __w_pdfjs_require__(28);\n\tvar global = __w_pdfjs_require__(1);\n\tvar ctx = __w_pdfjs_require__(13);\n\tvar classof = __w_pdfjs_require__(32);\n\tvar $export = __w_pdfjs_require__(6);\n\tvar isObject = __w_pdfjs_require__(3);\n\tvar aFunction = __w_pdfjs_require__(21);\n\tvar anInstance = __w_pdfjs_require__(23);\n\tvar forOf = __w_pdfjs_require__(33);\n\tvar speciesConstructor = __w_pdfjs_require__(43);\n\tvar task = __w_pdfjs_require__(68).set;\n\tvar microtask = __w_pdfjs_require__(109)();\n\tvar newPromiseCapabilityModule = __w_pdfjs_require__(45);\n\tvar perform = __w_pdfjs_require__(69);\n\tvar promiseResolve = __w_pdfjs_require__(70);\n\tvar PROMISE = 'Promise';\n\tvar TypeError = global.TypeError;\n\tvar process = global.process;\n\tvar $Promise = global[PROMISE];\n\tvar isNode = classof(process) == 'process';\n\tvar empty = function empty() {};\n\tvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\n\tvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\tvar USE_NATIVE = !!function () {\n\t  try {\n\t    var promise = $Promise.resolve(1);\n\t    var FakePromise = (promise.constructor = {})[__w_pdfjs_require__(4)('species')] = function (exec) {\n\t      exec(empty, empty);\n\t    };\n\t    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;\n\t  } catch (e) {}\n\t}();\n\tvar isThenable = function isThenable(it) {\n\t  var then;\n\t  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n\t};\n\tvar notify = function notify(promise, isReject) {\n\t  if (promise._n) return;\n\t  promise._n = true;\n\t  var chain = promise._c;\n\t  microtask(function () {\n\t    var value = promise._v;\n\t    var ok = promise._s == 1;\n\t    var i = 0;\n\t    var run = function run(reaction) {\n\t      var handler = ok ? reaction.ok : reaction.fail;\n\t      var resolve = reaction.resolve;\n\t      var reject = reaction.reject;\n\t      var domain = reaction.domain;\n\t      var result, then;\n\t      try {\n\t        if (handler) {\n\t          if (!ok) {\n\t            if (promise._h == 2) onHandleUnhandled(promise);\n\t            promise._h = 1;\n\t          }\n\t          if (handler === true) result = value;else {\n\t            if (domain) domain.enter();\n\t            result = handler(value);\n\t            if (domain) domain.exit();\n\t          }\n\t          if (result === reaction.promise) {\n\t            reject(TypeError('Promise-chain cycle'));\n\t          } else if (then = isThenable(result)) {\n\t            then.call(result, resolve, reject);\n\t          } else resolve(result);\n\t        } else reject(value);\n\t      } catch (e) {\n\t        reject(e);\n\t      }\n\t    };\n\t    while (chain.length > i) {\n\t      run(chain[i++]);\n\t    }promise._c = [];\n\t    promise._n = false;\n\t    if (isReject && !promise._h) onUnhandled(promise);\n\t  });\n\t};\n\tvar onUnhandled = function onUnhandled(promise) {\n\t  task.call(global, function () {\n\t    var value = promise._v;\n\t    var unhandled = isUnhandled(promise);\n\t    var result, handler, console;\n\t    if (unhandled) {\n\t      result = perform(function () {\n\t        if (isNode) {\n\t          process.emit('unhandledRejection', value, promise);\n\t        } else if (handler = global.onunhandledrejection) {\n\t          handler({\n\t            promise: promise,\n\t            reason: value\n\t          });\n\t        } else if ((console = global.console) && console.error) {\n\t          console.error('Unhandled promise rejection', value);\n\t        }\n\t      });\n\t      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n\t    }\n\t    promise._a = undefined;\n\t    if (unhandled && result.e) throw result.v;\n\t  });\n\t};\n\tvar isUnhandled = function isUnhandled(promise) {\n\t  if (promise._h == 1) return false;\n\t  var chain = promise._a || promise._c;\n\t  var i = 0;\n\t  var reaction;\n\t  while (chain.length > i) {\n\t    reaction = chain[i++];\n\t    if (reaction.fail || !isUnhandled(reaction.promise)) return false;\n\t  }\n\t  return true;\n\t};\n\tvar onHandleUnhandled = function onHandleUnhandled(promise) {\n\t  task.call(global, function () {\n\t    var handler;\n\t    if (isNode) {\n\t      process.emit('rejectionHandled', promise);\n\t    } else if (handler = global.onrejectionhandled) {\n\t      handler({\n\t        promise: promise,\n\t        reason: promise._v\n\t      });\n\t    }\n\t  });\n\t};\n\tvar $reject = function $reject(value) {\n\t  var promise = this;\n\t  if (promise._d) return;\n\t  promise._d = true;\n\t  promise = promise._w || promise;\n\t  promise._v = value;\n\t  promise._s = 2;\n\t  if (!promise._a) promise._a = promise._c.slice();\n\t  notify(promise, true);\n\t};\n\tvar $resolve = function $resolve(value) {\n\t  var promise = this;\n\t  var then;\n\t  if (promise._d) return;\n\t  promise._d = true;\n\t  promise = promise._w || promise;\n\t  try {\n\t    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n\t    if (then = isThenable(value)) {\n\t      microtask(function () {\n\t        var wrapper = {\n\t          _w: promise,\n\t          _d: false\n\t        };\n\t        try {\n\t          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n\t        } catch (e) {\n\t          $reject.call(wrapper, e);\n\t        }\n\t      });\n\t    } else {\n\t      promise._v = value;\n\t      promise._s = 1;\n\t      notify(promise, false);\n\t    }\n\t  } catch (e) {\n\t    $reject.call({\n\t      _w: promise,\n\t      _d: false\n\t    }, e);\n\t  }\n\t};\n\tif (!USE_NATIVE) {\n\t  $Promise = function Promise(executor) {\n\t    anInstance(this, $Promise, PROMISE, '_h');\n\t    aFunction(executor);\n\t    Internal.call(this);\n\t    try {\n\t      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n\t    } catch (err) {\n\t      $reject.call(this, err);\n\t    }\n\t  };\n\t  Internal = function Promise(executor) {\n\t    this._c = [];\n\t    this._a = undefined;\n\t    this._s = 0;\n\t    this._d = false;\n\t    this._v = undefined;\n\t    this._h = 0;\n\t    this._n = false;\n\t  };\n\t  Internal.prototype = __w_pdfjs_require__(22)($Promise.prototype, {\n\t    then: function then(onFulfilled, onRejected) {\n\t      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n\t      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n\t      reaction.fail = typeof onRejected == 'function' && onRejected;\n\t      reaction.domain = isNode ? process.domain : undefined;\n\t      this._c.push(reaction);\n\t      if (this._a) this._a.push(reaction);\n\t      if (this._s) notify(this, false);\n\t      return reaction.promise;\n\t    },\n\t    'catch': function _catch(onRejected) {\n\t      return this.then(undefined, onRejected);\n\t    }\n\t  });\n\t  OwnPromiseCapability = function OwnPromiseCapability() {\n\t    var promise = new Internal();\n\t    this.promise = promise;\n\t    this.resolve = ctx($resolve, promise, 1);\n\t    this.reject = ctx($reject, promise, 1);\n\t  };\n\t  newPromiseCapabilityModule.f = newPromiseCapability = function newPromiseCapability(C) {\n\t    return C === $Promise || C === Wrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);\n\t  };\n\t}\n\t$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\n\t__w_pdfjs_require__(25)($Promise, PROMISE);\n\t__w_pdfjs_require__(63)(PROMISE);\n\tWrapper = __w_pdfjs_require__(7)[PROMISE];\n\t$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n\t  reject: function reject(r) {\n\t    var capability = newPromiseCapability(this);\n\t    var $$reject = capability.reject;\n\t    $$reject(r);\n\t    return capability.promise;\n\t  }\n\t});\n\t$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n\t  resolve: function resolve(x) {\n\t    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n\t  }\n\t});\n\t$export($export.S + $export.F * !(USE_NATIVE && __w_pdfjs_require__(44)(function (iter) {\n\t  $Promise.all(iter)['catch'](empty);\n\t})), PROMISE, {\n\t  all: function all(iterable) {\n\t    var C = this;\n\t    var capability = newPromiseCapability(C);\n\t    var resolve = capability.resolve;\n\t    var reject = capability.reject;\n\t    var result = perform(function () {\n\t      var values = [];\n\t      var index = 0;\n\t      var remaining = 1;\n\t      forOf(iterable, false, function (promise) {\n\t        var $index = index++;\n\t        var alreadyCalled = false;\n\t        values.push(undefined);\n\t        remaining++;\n\t        C.resolve(promise).then(function (value) {\n\t          if (alreadyCalled) return;\n\t          alreadyCalled = true;\n\t          values[$index] = value;\n\t          --remaining || resolve(values);\n\t        }, reject);\n\t      });\n\t      --remaining || resolve(values);\n\t    });\n\t    if (result.e) reject(result.v);\n\t    return capability.promise;\n\t  },\n\t  race: function race(iterable) {\n\t    var C = this;\n\t    var capability = newPromiseCapability(C);\n\t    var reject = capability.reject;\n\t    var result = perform(function () {\n\t      forOf(iterable, false, function (promise) {\n\t        C.resolve(promise).then(capability.resolve, reject);\n\t      });\n\t    });\n\t    if (result.e) reject(result.v);\n\t    return capability.promise;\n\t  }\n\t});\n\t\n\t/***/ }),\n\t/* 107 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar anObject = __w_pdfjs_require__(9);\n\tmodule.exports = function (iterator, fn, value, entries) {\n\t  try {\n\t    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n\t  } catch (e) {\n\t    var ret = iterator['return'];\n\t    if (ret !== undefined) anObject(ret.call(iterator));\n\t    throw e;\n\t  }\n\t};\n\t\n\t/***/ }),\n\t/* 108 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tmodule.exports = function (fn, args, that) {\n\t  var un = that === undefined;\n\t  switch (args.length) {\n\t    case 0:\n\t      return un ? fn() : fn.call(that);\n\t    case 1:\n\t      return un ? fn(args[0]) : fn.call(that, args[0]);\n\t    case 2:\n\t      return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);\n\t    case 3:\n\t      return un ? fn(args[0], args[1], args[2]) : fn.call(that, args[0], args[1], args[2]);\n\t    case 4:\n\t      return un ? fn(args[0], args[1], args[2], args[3]) : fn.call(that, args[0], args[1], args[2], args[3]);\n\t  }\n\t  return fn.apply(that, args);\n\t};\n\t\n\t/***/ }),\n\t/* 109 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar global = __w_pdfjs_require__(1);\n\tvar macrotask = __w_pdfjs_require__(68).set;\n\tvar Observer = global.MutationObserver || global.WebKitMutationObserver;\n\tvar process = global.process;\n\tvar Promise = global.Promise;\n\tvar isNode = __w_pdfjs_require__(24)(process) == 'process';\n\tmodule.exports = function () {\n\t  var head, last, notify;\n\t  var flush = function flush() {\n\t    var parent, fn;\n\t    if (isNode && (parent = process.domain)) parent.exit();\n\t    while (head) {\n\t      fn = head.fn;\n\t      head = head.next;\n\t      try {\n\t        fn();\n\t      } catch (e) {\n\t        if (head) notify();else last = undefined;\n\t        throw e;\n\t      }\n\t    }\n\t    last = undefined;\n\t    if (parent) parent.enter();\n\t  };\n\t  if (isNode) {\n\t    notify = function notify() {\n\t      process.nextTick(flush);\n\t    };\n\t  } else if (Observer) {\n\t    var toggle = true;\n\t    var node = document.createTextNode('');\n\t    new Observer(flush).observe(node, { characterData: true });\n\t    notify = function notify() {\n\t      node.data = toggle = !toggle;\n\t    };\n\t  } else if (Promise && Promise.resolve) {\n\t    var promise = Promise.resolve();\n\t    notify = function notify() {\n\t      promise.then(flush);\n\t    };\n\t  } else {\n\t    notify = function notify() {\n\t      macrotask.call(global, flush);\n\t    };\n\t  }\n\t  return function (fn) {\n\t    var task = {\n\t      fn: fn,\n\t      next: undefined\n\t    };\n\t    if (last) last.next = task;\n\t    if (!head) {\n\t      head = task;\n\t      notify();\n\t    }\n\t    last = task;\n\t  };\n\t};\n\t\n\t/***/ }),\n\t/* 110 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar $export = __w_pdfjs_require__(6);\n\tvar core = __w_pdfjs_require__(7);\n\tvar global = __w_pdfjs_require__(1);\n\tvar speciesConstructor = __w_pdfjs_require__(43);\n\tvar promiseResolve = __w_pdfjs_require__(70);\n\t$export($export.P + $export.R, 'Promise', {\n\t  'finally': function _finally(onFinally) {\n\t    var C = speciesConstructor(this, core.Promise || global.Promise);\n\t    var isFunction = typeof onFinally == 'function';\n\t    return this.then(isFunction ? function (x) {\n\t      return promiseResolve(C, onFinally()).then(function () {\n\t        return x;\n\t      });\n\t    } : onFinally, isFunction ? function (e) {\n\t      return promiseResolve(C, onFinally()).then(function () {\n\t        throw e;\n\t      });\n\t    } : onFinally);\n\t  }\n\t});\n\t\n\t/***/ }),\n\t/* 111 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar $export = __w_pdfjs_require__(6);\n\tvar newPromiseCapability = __w_pdfjs_require__(45);\n\tvar perform = __w_pdfjs_require__(69);\n\t$export($export.S, 'Promise', {\n\t  'try': function _try(callbackfn) {\n\t    var promiseCapability = newPromiseCapability.f(this);\n\t    var result = perform(callbackfn);\n\t    (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n\t    return promiseCapability.promise;\n\t  }\n\t});\n\t\n\t/***/ }),\n\t/* 112 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\t__w_pdfjs_require__(66);\n\t__w_pdfjs_require__(67);\n\t__w_pdfjs_require__(113);\n\t__w_pdfjs_require__(120);\n\t__w_pdfjs_require__(122);\n\tmodule.exports = __w_pdfjs_require__(7).WeakMap;\n\t\n\t/***/ }),\n\t/* 113 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar each = __w_pdfjs_require__(42)(0);\n\tvar redefine = __w_pdfjs_require__(16);\n\tvar meta = __w_pdfjs_require__(46);\n\tvar assign = __w_pdfjs_require__(114);\n\tvar weak = __w_pdfjs_require__(116);\n\tvar isObject = __w_pdfjs_require__(3);\n\tvar fails = __w_pdfjs_require__(12);\n\tvar validate = __w_pdfjs_require__(71);\n\tvar WEAK_MAP = 'WeakMap';\n\tvar getWeak = meta.getWeak;\n\tvar isExtensible = Object.isExtensible;\n\tvar uncaughtFrozenStore = weak.ufstore;\n\tvar tmp = {};\n\tvar InternalMap;\n\tvar wrapper = function wrapper(get) {\n\t  return function WeakMap() {\n\t    return get(this, arguments.length > 0 ? arguments[0] : undefined);\n\t  };\n\t};\n\tvar methods = {\n\t  get: function get(key) {\n\t    if (isObject(key)) {\n\t      var data = getWeak(key);\n\t      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);\n\t      return data ? data[this._i] : undefined;\n\t    }\n\t  },\n\t  set: function set(key, value) {\n\t    return weak.def(validate(this, WEAK_MAP), key, value);\n\t  }\n\t};\n\tvar $WeakMap = module.exports = __w_pdfjs_require__(117)(WEAK_MAP, wrapper, methods, weak, true, true);\n\tif (fails(function () {\n\t  return new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7;\n\t})) {\n\t  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);\n\t  assign(InternalMap.prototype, methods);\n\t  meta.NEED = true;\n\t  each(['delete', 'has', 'get', 'set'], function (key) {\n\t    var proto = $WeakMap.prototype;\n\t    var method = proto[key];\n\t    redefine(proto, key, function (a, b) {\n\t      if (isObject(a) && !isExtensible(a)) {\n\t        if (!this._f) this._f = new InternalMap();\n\t        var result = this._f[key](a, b);\n\t        return key == 'set' ? this : result;\n\t      }\n\t      return method.call(this, a, b);\n\t    });\n\t  });\n\t}\n\t\n\t/***/ }),\n\t/* 114 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar getKeys = __w_pdfjs_require__(41);\n\tvar gOPS = __w_pdfjs_require__(115);\n\tvar pIE = __w_pdfjs_require__(65);\n\tvar toObject = __w_pdfjs_require__(19);\n\tvar IObject = __w_pdfjs_require__(37);\n\tvar $assign = Object.assign;\n\tmodule.exports = !$assign || __w_pdfjs_require__(12)(function () {\n\t  var A = {};\n\t  var B = {};\n\t  var S = Symbol();\n\t  var K = 'abcdefghijklmnopqrst';\n\t  A[S] = 7;\n\t  K.split('').forEach(function (k) {\n\t    B[k] = k;\n\t  });\n\t  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n\t}) ? function assign(target, source) {\n\t  var T = toObject(target);\n\t  var aLen = arguments.length;\n\t  var index = 1;\n\t  var getSymbols = gOPS.f;\n\t  var isEnum = pIE.f;\n\t  while (aLen > index) {\n\t    var S = IObject(arguments[index++]);\n\t    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n\t    var length = keys.length;\n\t    var j = 0;\n\t    var key;\n\t    while (length > j) {\n\t      if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n\t    }\n\t  }\n\t  return T;\n\t} : $assign;\n\t\n\t/***/ }),\n\t/* 115 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\texports.f = Object.getOwnPropertySymbols;\n\t\n\t/***/ }),\n\t/* 116 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar redefineAll = __w_pdfjs_require__(22);\n\tvar getWeak = __w_pdfjs_require__(46).getWeak;\n\tvar anObject = __w_pdfjs_require__(9);\n\tvar isObject = __w_pdfjs_require__(3);\n\tvar anInstance = __w_pdfjs_require__(23);\n\tvar forOf = __w_pdfjs_require__(33);\n\tvar createArrayMethod = __w_pdfjs_require__(42);\n\tvar $has = __w_pdfjs_require__(10);\n\tvar validate = __w_pdfjs_require__(71);\n\tvar arrayFind = createArrayMethod(5);\n\tvar arrayFindIndex = createArrayMethod(6);\n\tvar id = 0;\n\tvar uncaughtFrozenStore = function uncaughtFrozenStore(that) {\n\t  return that._l || (that._l = new UncaughtFrozenStore());\n\t};\n\tvar UncaughtFrozenStore = function UncaughtFrozenStore() {\n\t  this.a = [];\n\t};\n\tvar findUncaughtFrozen = function findUncaughtFrozen(store, key) {\n\t  return arrayFind(store.a, function (it) {\n\t    return it[0] === key;\n\t  });\n\t};\n\tUncaughtFrozenStore.prototype = {\n\t  get: function get(key) {\n\t    var entry = findUncaughtFrozen(this, key);\n\t    if (entry) return entry[1];\n\t  },\n\t  has: function has(key) {\n\t    return !!findUncaughtFrozen(this, key);\n\t  },\n\t  set: function set(key, value) {\n\t    var entry = findUncaughtFrozen(this, key);\n\t    if (entry) entry[1] = value;else this.a.push([key, value]);\n\t  },\n\t  'delete': function _delete(key) {\n\t    var index = arrayFindIndex(this.a, function (it) {\n\t      return it[0] === key;\n\t    });\n\t    if (~index) this.a.splice(index, 1);\n\t    return !!~index;\n\t  }\n\t};\n\tmodule.exports = {\n\t  getConstructor: function getConstructor(wrapper, NAME, IS_MAP, ADDER) {\n\t    var C = wrapper(function (that, iterable) {\n\t      anInstance(that, C, NAME, '_i');\n\t      that._t = NAME;\n\t      that._i = id++;\n\t      that._l = undefined;\n\t      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n\t    });\n\t    redefineAll(C.prototype, {\n\t      'delete': function _delete(key) {\n\t        if (!isObject(key)) return false;\n\t        var data = getWeak(key);\n\t        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);\n\t        return data && $has(data, this._i) && delete data[this._i];\n\t      },\n\t      has: function has(key) {\n\t        if (!isObject(key)) return false;\n\t        var data = getWeak(key);\n\t        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);\n\t        return data && $has(data, this._i);\n\t      }\n\t    });\n\t    return C;\n\t  },\n\t  def: function def(that, key, value) {\n\t    var data = getWeak(anObject(key), true);\n\t    if (data === true) uncaughtFrozenStore(that).set(key, value);else data[that._i] = value;\n\t    return that;\n\t  },\n\t  ufstore: uncaughtFrozenStore\n\t};\n\t\n\t/***/ }),\n\t/* 117 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar global = __w_pdfjs_require__(1);\n\tvar $export = __w_pdfjs_require__(6);\n\tvar redefine = __w_pdfjs_require__(16);\n\tvar redefineAll = __w_pdfjs_require__(22);\n\tvar meta = __w_pdfjs_require__(46);\n\tvar forOf = __w_pdfjs_require__(33);\n\tvar anInstance = __w_pdfjs_require__(23);\n\tvar isObject = __w_pdfjs_require__(3);\n\tvar fails = __w_pdfjs_require__(12);\n\tvar $iterDetect = __w_pdfjs_require__(44);\n\tvar setToStringTag = __w_pdfjs_require__(25);\n\tvar inheritIfRequired = __w_pdfjs_require__(118);\n\tmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n\t  var Base = global[NAME];\n\t  var C = Base;\n\t  var ADDER = IS_MAP ? 'set' : 'add';\n\t  var proto = C && C.prototype;\n\t  var O = {};\n\t  var fixMethod = function fixMethod(KEY) {\n\t    var fn = proto[KEY];\n\t    redefine(proto, KEY, KEY == 'delete' ? function (a) {\n\t      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n\t    } : KEY == 'has' ? function has(a) {\n\t      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n\t    } : KEY == 'get' ? function get(a) {\n\t      return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\n\t    } : KEY == 'add' ? function add(a) {\n\t      fn.call(this, a === 0 ? 0 : a);\n\t      return this;\n\t    } : function set(a, b) {\n\t      fn.call(this, a === 0 ? 0 : a, b);\n\t      return this;\n\t    });\n\t  };\n\t  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n\t    new C().entries().next();\n\t  }))) {\n\t    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n\t    redefineAll(C.prototype, methods);\n\t    meta.NEED = true;\n\t  } else {\n\t    var instance = new C();\n\t    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n\t    var THROWS_ON_PRIMITIVES = fails(function () {\n\t      instance.has(1);\n\t    });\n\t    var ACCEPT_ITERABLES = $iterDetect(function (iter) {\n\t      new C(iter);\n\t    });\n\t    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n\t      var $instance = new C();\n\t      var index = 5;\n\t      while (index--) {\n\t        $instance[ADDER](index, index);\n\t      }return !$instance.has(-0);\n\t    });\n\t    if (!ACCEPT_ITERABLES) {\n\t      C = wrapper(function (target, iterable) {\n\t        anInstance(target, C, NAME);\n\t        var that = inheritIfRequired(new Base(), target, C);\n\t        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n\t        return that;\n\t      });\n\t      C.prototype = proto;\n\t      proto.constructor = C;\n\t    }\n\t    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n\t      fixMethod('delete');\n\t      fixMethod('has');\n\t      IS_MAP && fixMethod('get');\n\t    }\n\t    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n\t    if (IS_WEAK && proto.clear) delete proto.clear;\n\t  }\n\t  setToStringTag(C, NAME);\n\t  O[NAME] = C;\n\t  $export($export.G + $export.W + $export.F * (C != Base), O);\n\t  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n\t  return C;\n\t};\n\t\n\t/***/ }),\n\t/* 118 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar isObject = __w_pdfjs_require__(3);\n\tvar setPrototypeOf = __w_pdfjs_require__(119).set;\n\tmodule.exports = function (that, target, C) {\n\t  var S = target.constructor;\n\t  var P;\n\t  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n\t    setPrototypeOf(that, P);\n\t  }\n\t  return that;\n\t};\n\t\n\t/***/ }),\n\t/* 119 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar isObject = __w_pdfjs_require__(3);\n\tvar anObject = __w_pdfjs_require__(9);\n\tvar check = function check(O, proto) {\n\t  anObject(O);\n\t  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n\t};\n\tmodule.exports = {\n\t  set: Object.setPrototypeOf || ('__proto__' in {} ? function (test, buggy, set) {\n\t    try {\n\t      set = __w_pdfjs_require__(13)(Function.call, __w_pdfjs_require__(64).f(Object.prototype, '__proto__').set, 2);\n\t      set(test, []);\n\t      buggy = !(test instanceof Array);\n\t    } catch (e) {\n\t      buggy = true;\n\t    }\n\t    return function setPrototypeOf(O, proto) {\n\t      check(O, proto);\n\t      if (buggy) O.__proto__ = proto;else set(O, proto);\n\t      return O;\n\t    };\n\t  }({}, false) : undefined),\n\t  check: check\n\t};\n\t\n\t/***/ }),\n\t/* 120 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\t__w_pdfjs_require__(121)('WeakMap');\n\t\n\t/***/ }),\n\t/* 121 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar $export = __w_pdfjs_require__(6);\n\tmodule.exports = function (COLLECTION) {\n\t  $export($export.S, COLLECTION, {\n\t    of: function of() {\n\t      var length = arguments.length;\n\t      var A = Array(length);\n\t      while (length--) {\n\t        A[length] = arguments[length];\n\t      }return new this(A);\n\t    }\n\t  });\n\t};\n\t\n\t/***/ }),\n\t/* 122 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\t__w_pdfjs_require__(123)('WeakMap');\n\t\n\t/***/ }),\n\t/* 123 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar $export = __w_pdfjs_require__(6);\n\tvar aFunction = __w_pdfjs_require__(21);\n\tvar ctx = __w_pdfjs_require__(13);\n\tvar forOf = __w_pdfjs_require__(33);\n\tmodule.exports = function (COLLECTION) {\n\t  $export($export.S, COLLECTION, {\n\t    from: function from(source) {\n\t      var mapFn = arguments[1];\n\t      var mapping, A, n, cb;\n\t      aFunction(this);\n\t      mapping = mapFn !== undefined;\n\t      if (mapping) aFunction(mapFn);\n\t      if (source == undefined) return new this();\n\t      A = [];\n\t      if (mapping) {\n\t        n = 0;\n\t        cb = ctx(mapFn, arguments[2], 2);\n\t        forOf(source, false, function (nextItem) {\n\t          A.push(cb(nextItem, n++));\n\t        });\n\t      } else {\n\t        forOf(source, false, A.push, A);\n\t      }\n\t      return new this(A);\n\t    }\n\t  });\n\t};\n\t\n\t/***/ }),\n\t/* 124 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar isReadableStreamSupported = false;\n\tif (typeof ReadableStream !== 'undefined') {\n\t  try {\n\t    new ReadableStream({\n\t      start: function start(controller) {\n\t        controller.close();\n\t      }\n\t    });\n\t    isReadableStreamSupported = true;\n\t  } catch (e) {}\n\t}\n\tif (isReadableStreamSupported) {\n\t  exports.ReadableStream = ReadableStream;\n\t} else {\n\t  exports.ReadableStream = __w_pdfjs_require__(125).ReadableStream;\n\t}\n\t\n\t/***/ }),\n\t/* 125 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t(function (e, a) {\n\t  for (var i in a) {\n\t    e[i] = a[i];\n\t  }\n\t})(exports, function (modules) {\n\t  var installedModules = {};\n\t  function __w_pdfjs_require__(moduleId) {\n\t    if (installedModules[moduleId]) return installedModules[moduleId].exports;\n\t    var module = installedModules[moduleId] = {\n\t      i: moduleId,\n\t      l: false,\n\t      exports: {}\n\t    };\n\t    modules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n\t    module.l = true;\n\t    return module.exports;\n\t  }\n\t  __w_pdfjs_require__.m = modules;\n\t  __w_pdfjs_require__.c = installedModules;\n\t  __w_pdfjs_require__.i = function (value) {\n\t    return value;\n\t  };\n\t  __w_pdfjs_require__.d = function (exports, name, getter) {\n\t    if (!__w_pdfjs_require__.o(exports, name)) {\n\t      Object.defineProperty(exports, name, {\n\t        configurable: false,\n\t        enumerable: true,\n\t        get: getter\n\t      });\n\t    }\n\t  };\n\t  __w_pdfjs_require__.n = function (module) {\n\t    var getter = module && module.__esModule ? function getDefault() {\n\t      return module['default'];\n\t    } : function getModuleExports() {\n\t      return module;\n\t    };\n\t    __w_pdfjs_require__.d(getter, 'a', getter);\n\t    return getter;\n\t  };\n\t  __w_pdfjs_require__.o = function (object, property) {\n\t    return Object.prototype.hasOwnProperty.call(object, property);\n\t  };\n\t  __w_pdfjs_require__.p = \"\";\n\t  return __w_pdfjs_require__(__w_pdfjs_require__.s = 7);\n\t}([function (module, exports, __w_pdfjs_require__) {\n\t  \"use strict\";\n\t\n\t  var _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n\t    return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n\t  } : function (obj) {\n\t    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n\t  };\n\t  var _require = __w_pdfjs_require__(1),\n\t      assert = _require.assert;\n\t  function IsPropertyKey(argument) {\n\t    return typeof argument === 'string' || (typeof argument === 'undefined' ? 'undefined' : _typeof(argument)) === 'symbol';\n\t  }\n\t  exports.typeIsObject = function (x) {\n\t    return (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && x !== null || typeof x === 'function';\n\t  };\n\t  exports.createDataProperty = function (o, p, v) {\n\t    assert(exports.typeIsObject(o));\n\t    Object.defineProperty(o, p, {\n\t      value: v,\n\t      writable: true,\n\t      enumerable: true,\n\t      configurable: true\n\t    });\n\t  };\n\t  exports.createArrayFromList = function (elements) {\n\t    return elements.slice();\n\t  };\n\t  exports.ArrayBufferCopy = function (dest, destOffset, src, srcOffset, n) {\n\t    new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n\t  };\n\t  exports.CreateIterResultObject = function (value, done) {\n\t    assert(typeof done === 'boolean');\n\t    var obj = {};\n\t    Object.defineProperty(obj, 'value', {\n\t      value: value,\n\t      enumerable: true,\n\t      writable: true,\n\t      configurable: true\n\t    });\n\t    Object.defineProperty(obj, 'done', {\n\t      value: done,\n\t      enumerable: true,\n\t      writable: true,\n\t      configurable: true\n\t    });\n\t    return obj;\n\t  };\n\t  exports.IsFiniteNonNegativeNumber = function (v) {\n\t    if (Number.isNaN(v)) {\n\t      return false;\n\t    }\n\t    if (v === Infinity) {\n\t      return false;\n\t    }\n\t    if (v < 0) {\n\t      return false;\n\t    }\n\t    return true;\n\t  };\n\t  function Call(F, V, args) {\n\t    if (typeof F !== 'function') {\n\t      throw new TypeError('Argument is not a function');\n\t    }\n\t    return Function.prototype.apply.call(F, V, args);\n\t  }\n\t  exports.InvokeOrNoop = function (O, P, args) {\n\t    assert(O !== undefined);\n\t    assert(IsPropertyKey(P));\n\t    assert(Array.isArray(args));\n\t    var method = O[P];\n\t    if (method === undefined) {\n\t      return undefined;\n\t    }\n\t    return Call(method, O, args);\n\t  };\n\t  exports.PromiseInvokeOrNoop = function (O, P, args) {\n\t    assert(O !== undefined);\n\t    assert(IsPropertyKey(P));\n\t    assert(Array.isArray(args));\n\t    try {\n\t      return Promise.resolve(exports.InvokeOrNoop(O, P, args));\n\t    } catch (returnValueE) {\n\t      return Promise.reject(returnValueE);\n\t    }\n\t  };\n\t  exports.PromiseInvokeOrPerformFallback = function (O, P, args, F, argsF) {\n\t    assert(O !== undefined);\n\t    assert(IsPropertyKey(P));\n\t    assert(Array.isArray(args));\n\t    assert(Array.isArray(argsF));\n\t    var method = void 0;\n\t    try {\n\t      method = O[P];\n\t    } catch (methodE) {\n\t      return Promise.reject(methodE);\n\t    }\n\t    if (method === undefined) {\n\t      return F.apply(null, argsF);\n\t    }\n\t    try {\n\t      return Promise.resolve(Call(method, O, args));\n\t    } catch (e) {\n\t      return Promise.reject(e);\n\t    }\n\t  };\n\t  exports.TransferArrayBuffer = function (O) {\n\t    return O.slice();\n\t  };\n\t  exports.ValidateAndNormalizeHighWaterMark = function (highWaterMark) {\n\t    highWaterMark = Number(highWaterMark);\n\t    if (Number.isNaN(highWaterMark) || highWaterMark < 0) {\n\t      throw new RangeError('highWaterMark property of a queuing strategy must be non-negative and non-NaN');\n\t    }\n\t    return highWaterMark;\n\t  };\n\t  exports.ValidateAndNormalizeQueuingStrategy = function (size, highWaterMark) {\n\t    if (size !== undefined && typeof size !== 'function') {\n\t      throw new TypeError('size property of a queuing strategy must be a function');\n\t    }\n\t    highWaterMark = exports.ValidateAndNormalizeHighWaterMark(highWaterMark);\n\t    return {\n\t      size: size,\n\t      highWaterMark: highWaterMark\n\t    };\n\t  };\n\t}, function (module, exports, __w_pdfjs_require__) {\n\t  \"use strict\";\n\t\n\t  function rethrowAssertionErrorRejection(e) {\n\t    if (e && e.constructor === AssertionError) {\n\t      setTimeout(function () {\n\t        throw e;\n\t      }, 0);\n\t    }\n\t  }\n\t  function AssertionError(message) {\n\t    this.name = 'AssertionError';\n\t    this.message = message || '';\n\t    this.stack = new Error().stack;\n\t  }\n\t  AssertionError.prototype = Object.create(Error.prototype);\n\t  AssertionError.prototype.constructor = AssertionError;\n\t  function assert(value, message) {\n\t    if (!value) {\n\t      throw new AssertionError(message);\n\t    }\n\t  }\n\t  module.exports = {\n\t    rethrowAssertionErrorRejection: rethrowAssertionErrorRejection,\n\t    AssertionError: AssertionError,\n\t    assert: assert\n\t  };\n\t}, function (module, exports, __w_pdfjs_require__) {\n\t  \"use strict\";\n\t\n\t  var _createClass = function () {\n\t    function defineProperties(target, props) {\n\t      for (var i = 0; i < props.length; i++) {\n\t        var descriptor = props[i];\n\t        descriptor.enumerable = descriptor.enumerable || false;\n\t        descriptor.configurable = true;\n\t        if (\"value\" in descriptor) descriptor.writable = true;\n\t        Object.defineProperty(target, descriptor.key, descriptor);\n\t      }\n\t    }\n\t    return function (Constructor, protoProps, staticProps) {\n\t      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n\t      if (staticProps) defineProperties(Constructor, staticProps);\n\t      return Constructor;\n\t    };\n\t  }();\n\t  function _classCallCheck(instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  }\n\t  var _require = __w_pdfjs_require__(0),\n\t      InvokeOrNoop = _require.InvokeOrNoop,\n\t      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\n\t      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\n\t      typeIsObject = _require.typeIsObject;\n\t  var _require2 = __w_pdfjs_require__(1),\n\t      assert = _require2.assert,\n\t      rethrowAssertionErrorRejection = _require2.rethrowAssertionErrorRejection;\n\t  var _require3 = __w_pdfjs_require__(3),\n\t      DequeueValue = _require3.DequeueValue,\n\t      EnqueueValueWithSize = _require3.EnqueueValueWithSize,\n\t      PeekQueueValue = _require3.PeekQueueValue,\n\t      ResetQueue = _require3.ResetQueue;\n\t  var WritableStream = function () {\n\t    function WritableStream() {\n\t      var underlyingSink = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t          size = _ref.size,\n\t          _ref$highWaterMark = _ref.highWaterMark,\n\t          highWaterMark = _ref$highWaterMark === undefined ? 1 : _ref$highWaterMark;\n\t      _classCallCheck(this, WritableStream);\n\t      this._state = 'writable';\n\t      this._storedError = undefined;\n\t      this._writer = undefined;\n\t      this._writableStreamController = undefined;\n\t      this._writeRequests = [];\n\t      this._inFlightWriteRequest = undefined;\n\t      this._closeRequest = undefined;\n\t      this._inFlightCloseRequest = undefined;\n\t      this._pendingAbortRequest = undefined;\n\t      this._backpressure = false;\n\t      var type = underlyingSink.type;\n\t      if (type !== undefined) {\n\t        throw new RangeError('Invalid type is specified');\n\t      }\n\t      this._writableStreamController = new WritableStreamDefaultController(this, underlyingSink, size, highWaterMark);\n\t      this._writableStreamController.__startSteps();\n\t    }\n\t    _createClass(WritableStream, [{\n\t      key: 'abort',\n\t      value: function abort(reason) {\n\t        if (IsWritableStream(this) === false) {\n\t          return Promise.reject(streamBrandCheckException('abort'));\n\t        }\n\t        if (IsWritableStreamLocked(this) === true) {\n\t          return Promise.reject(new TypeError('Cannot abort a stream that already has a writer'));\n\t        }\n\t        return WritableStreamAbort(this, reason);\n\t      }\n\t    }, {\n\t      key: 'getWriter',\n\t      value: function getWriter() {\n\t        if (IsWritableStream(this) === false) {\n\t          throw streamBrandCheckException('getWriter');\n\t        }\n\t        return AcquireWritableStreamDefaultWriter(this);\n\t      }\n\t    }, {\n\t      key: 'locked',\n\t      get: function get() {\n\t        if (IsWritableStream(this) === false) {\n\t          throw streamBrandCheckException('locked');\n\t        }\n\t        return IsWritableStreamLocked(this);\n\t      }\n\t    }]);\n\t    return WritableStream;\n\t  }();\n\t  module.exports = {\n\t    AcquireWritableStreamDefaultWriter: AcquireWritableStreamDefaultWriter,\n\t    IsWritableStream: IsWritableStream,\n\t    IsWritableStreamLocked: IsWritableStreamLocked,\n\t    WritableStream: WritableStream,\n\t    WritableStreamAbort: WritableStreamAbort,\n\t    WritableStreamDefaultControllerError: WritableStreamDefaultControllerError,\n\t    WritableStreamDefaultWriterCloseWithErrorPropagation: WritableStreamDefaultWriterCloseWithErrorPropagation,\n\t    WritableStreamDefaultWriterRelease: WritableStreamDefaultWriterRelease,\n\t    WritableStreamDefaultWriterWrite: WritableStreamDefaultWriterWrite,\n\t    WritableStreamCloseQueuedOrInFlight: WritableStreamCloseQueuedOrInFlight\n\t  };\n\t  function AcquireWritableStreamDefaultWriter(stream) {\n\t    return new WritableStreamDefaultWriter(stream);\n\t  }\n\t  function IsWritableStream(x) {\n\t    if (!typeIsObject(x)) {\n\t      return false;\n\t    }\n\t    if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  function IsWritableStreamLocked(stream) {\n\t    assert(IsWritableStream(stream) === true, 'IsWritableStreamLocked should only be used on known writable streams');\n\t    if (stream._writer === undefined) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  function WritableStreamAbort(stream, reason) {\n\t    var state = stream._state;\n\t    if (state === 'closed') {\n\t      return Promise.resolve(undefined);\n\t    }\n\t    if (state === 'errored') {\n\t      return Promise.reject(stream._storedError);\n\t    }\n\t    var error = new TypeError('Requested to abort');\n\t    if (stream._pendingAbortRequest !== undefined) {\n\t      return Promise.reject(error);\n\t    }\n\t    assert(state === 'writable' || state === 'erroring', 'state must be writable or erroring');\n\t    var wasAlreadyErroring = false;\n\t    if (state === 'erroring') {\n\t      wasAlreadyErroring = true;\n\t      reason = undefined;\n\t    }\n\t    var promise = new Promise(function (resolve, reject) {\n\t      stream._pendingAbortRequest = {\n\t        _resolve: resolve,\n\t        _reject: reject,\n\t        _reason: reason,\n\t        _wasAlreadyErroring: wasAlreadyErroring\n\t      };\n\t    });\n\t    if (wasAlreadyErroring === false) {\n\t      WritableStreamStartErroring(stream, error);\n\t    }\n\t    return promise;\n\t  }\n\t  function WritableStreamAddWriteRequest(stream) {\n\t    assert(IsWritableStreamLocked(stream) === true);\n\t    assert(stream._state === 'writable');\n\t    var promise = new Promise(function (resolve, reject) {\n\t      var writeRequest = {\n\t        _resolve: resolve,\n\t        _reject: reject\n\t      };\n\t      stream._writeRequests.push(writeRequest);\n\t    });\n\t    return promise;\n\t  }\n\t  function WritableStreamDealWithRejection(stream, error) {\n\t    var state = stream._state;\n\t    if (state === 'writable') {\n\t      WritableStreamStartErroring(stream, error);\n\t      return;\n\t    }\n\t    assert(state === 'erroring');\n\t    WritableStreamFinishErroring(stream);\n\t  }\n\t  function WritableStreamStartErroring(stream, reason) {\n\t    assert(stream._storedError === undefined, 'stream._storedError === undefined');\n\t    assert(stream._state === 'writable', 'state must be writable');\n\t    var controller = stream._writableStreamController;\n\t    assert(controller !== undefined, 'controller must not be undefined');\n\t    stream._state = 'erroring';\n\t    stream._storedError = reason;\n\t    var writer = stream._writer;\n\t    if (writer !== undefined) {\n\t      WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n\t    }\n\t    if (WritableStreamHasOperationMarkedInFlight(stream) === false && controller._started === true) {\n\t      WritableStreamFinishErroring(stream);\n\t    }\n\t  }\n\t  function WritableStreamFinishErroring(stream) {\n\t    assert(stream._state === 'erroring', 'stream._state === erroring');\n\t    assert(WritableStreamHasOperationMarkedInFlight(stream) === false, 'WritableStreamHasOperationMarkedInFlight(stream) === false');\n\t    stream._state = 'errored';\n\t    stream._writableStreamController.__errorSteps();\n\t    var storedError = stream._storedError;\n\t    for (var i = 0; i < stream._writeRequests.length; i++) {\n\t      var writeRequest = stream._writeRequests[i];\n\t      writeRequest._reject(storedError);\n\t    }\n\t    stream._writeRequests = [];\n\t    if (stream._pendingAbortRequest === undefined) {\n\t      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n\t      return;\n\t    }\n\t    var abortRequest = stream._pendingAbortRequest;\n\t    stream._pendingAbortRequest = undefined;\n\t    if (abortRequest._wasAlreadyErroring === true) {\n\t      abortRequest._reject(storedError);\n\t      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n\t      return;\n\t    }\n\t    var promise = stream._writableStreamController.__abortSteps(abortRequest._reason);\n\t    promise.then(function () {\n\t      abortRequest._resolve();\n\t      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n\t    }, function (reason) {\n\t      abortRequest._reject(reason);\n\t      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n\t    });\n\t  }\n\t  function WritableStreamFinishInFlightWrite(stream) {\n\t    assert(stream._inFlightWriteRequest !== undefined);\n\t    stream._inFlightWriteRequest._resolve(undefined);\n\t    stream._inFlightWriteRequest = undefined;\n\t  }\n\t  function WritableStreamFinishInFlightWriteWithError(stream, error) {\n\t    assert(stream._inFlightWriteRequest !== undefined);\n\t    stream._inFlightWriteRequest._reject(error);\n\t    stream._inFlightWriteRequest = undefined;\n\t    assert(stream._state === 'writable' || stream._state === 'erroring');\n\t    WritableStreamDealWithRejection(stream, error);\n\t  }\n\t  function WritableStreamFinishInFlightClose(stream) {\n\t    assert(stream._inFlightCloseRequest !== undefined);\n\t    stream._inFlightCloseRequest._resolve(undefined);\n\t    stream._inFlightCloseRequest = undefined;\n\t    var state = stream._state;\n\t    assert(state === 'writable' || state === 'erroring');\n\t    if (state === 'erroring') {\n\t      stream._storedError = undefined;\n\t      if (stream._pendingAbortRequest !== undefined) {\n\t        stream._pendingAbortRequest._resolve();\n\t        stream._pendingAbortRequest = undefined;\n\t      }\n\t    }\n\t    stream._state = 'closed';\n\t    var writer = stream._writer;\n\t    if (writer !== undefined) {\n\t      defaultWriterClosedPromiseResolve(writer);\n\t    }\n\t    assert(stream._pendingAbortRequest === undefined, 'stream._pendingAbortRequest === undefined');\n\t    assert(stream._storedError === undefined, 'stream._storedError === undefined');\n\t  }\n\t  function WritableStreamFinishInFlightCloseWithError(stream, error) {\n\t    assert(stream._inFlightCloseRequest !== undefined);\n\t    stream._inFlightCloseRequest._reject(error);\n\t    stream._inFlightCloseRequest = undefined;\n\t    assert(stream._state === 'writable' || stream._state === 'erroring');\n\t    if (stream._pendingAbortRequest !== undefined) {\n\t      stream._pendingAbortRequest._reject(error);\n\t      stream._pendingAbortRequest = undefined;\n\t    }\n\t    WritableStreamDealWithRejection(stream, error);\n\t  }\n\t  function WritableStreamCloseQueuedOrInFlight(stream) {\n\t    if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  function WritableStreamHasOperationMarkedInFlight(stream) {\n\t    if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  function WritableStreamMarkCloseRequestInFlight(stream) {\n\t    assert(stream._inFlightCloseRequest === undefined);\n\t    assert(stream._closeRequest !== undefined);\n\t    stream._inFlightCloseRequest = stream._closeRequest;\n\t    stream._closeRequest = undefined;\n\t  }\n\t  function WritableStreamMarkFirstWriteRequestInFlight(stream) {\n\t    assert(stream._inFlightWriteRequest === undefined, 'there must be no pending write request');\n\t    assert(stream._writeRequests.length !== 0, 'writeRequests must not be empty');\n\t    stream._inFlightWriteRequest = stream._writeRequests.shift();\n\t  }\n\t  function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n\t    assert(stream._state === 'errored', '_stream_.[[state]] is `\"errored\"`');\n\t    if (stream._closeRequest !== undefined) {\n\t      assert(stream._inFlightCloseRequest === undefined);\n\t      stream._closeRequest._reject(stream._storedError);\n\t      stream._closeRequest = undefined;\n\t    }\n\t    var writer = stream._writer;\n\t    if (writer !== undefined) {\n\t      defaultWriterClosedPromiseReject(writer, stream._storedError);\n\t      writer._closedPromise.catch(function () {});\n\t    }\n\t  }\n\t  function WritableStreamUpdateBackpressure(stream, backpressure) {\n\t    assert(stream._state === 'writable');\n\t    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n\t    var writer = stream._writer;\n\t    if (writer !== undefined && backpressure !== stream._backpressure) {\n\t      if (backpressure === true) {\n\t        defaultWriterReadyPromiseReset(writer);\n\t      } else {\n\t        assert(backpressure === false);\n\t        defaultWriterReadyPromiseResolve(writer);\n\t      }\n\t    }\n\t    stream._backpressure = backpressure;\n\t  }\n\t  var WritableStreamDefaultWriter = function () {\n\t    function WritableStreamDefaultWriter(stream) {\n\t      _classCallCheck(this, WritableStreamDefaultWriter);\n\t      if (IsWritableStream(stream) === false) {\n\t        throw new TypeError('WritableStreamDefaultWriter can only be constructed with a WritableStream instance');\n\t      }\n\t      if (IsWritableStreamLocked(stream) === true) {\n\t        throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n\t      }\n\t      this._ownerWritableStream = stream;\n\t      stream._writer = this;\n\t      var state = stream._state;\n\t      if (state === 'writable') {\n\t        if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._backpressure === true) {\n\t          defaultWriterReadyPromiseInitialize(this);\n\t        } else {\n\t          defaultWriterReadyPromiseInitializeAsResolved(this);\n\t        }\n\t        defaultWriterClosedPromiseInitialize(this);\n\t      } else if (state === 'erroring') {\n\t        defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n\t        this._readyPromise.catch(function () {});\n\t        defaultWriterClosedPromiseInitialize(this);\n\t      } else if (state === 'closed') {\n\t        defaultWriterReadyPromiseInitializeAsResolved(this);\n\t        defaultWriterClosedPromiseInitializeAsResolved(this);\n\t      } else {\n\t        assert(state === 'errored', 'state must be errored');\n\t        var storedError = stream._storedError;\n\t        defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n\t        this._readyPromise.catch(function () {});\n\t        defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n\t        this._closedPromise.catch(function () {});\n\t      }\n\t    }\n\t    _createClass(WritableStreamDefaultWriter, [{\n\t      key: 'abort',\n\t      value: function abort(reason) {\n\t        if (IsWritableStreamDefaultWriter(this) === false) {\n\t          return Promise.reject(defaultWriterBrandCheckException('abort'));\n\t        }\n\t        if (this._ownerWritableStream === undefined) {\n\t          return Promise.reject(defaultWriterLockException('abort'));\n\t        }\n\t        return WritableStreamDefaultWriterAbort(this, reason);\n\t      }\n\t    }, {\n\t      key: 'close',\n\t      value: function close() {\n\t        if (IsWritableStreamDefaultWriter(this) === false) {\n\t          return Promise.reject(defaultWriterBrandCheckException('close'));\n\t        }\n\t        var stream = this._ownerWritableStream;\n\t        if (stream === undefined) {\n\t          return Promise.reject(defaultWriterLockException('close'));\n\t        }\n\t        if (WritableStreamCloseQueuedOrInFlight(stream) === true) {\n\t          return Promise.reject(new TypeError('cannot close an already-closing stream'));\n\t        }\n\t        return WritableStreamDefaultWriterClose(this);\n\t      }\n\t    }, {\n\t      key: 'releaseLock',\n\t      value: function releaseLock() {\n\t        if (IsWritableStreamDefaultWriter(this) === false) {\n\t          throw defaultWriterBrandCheckException('releaseLock');\n\t        }\n\t        var stream = this._ownerWritableStream;\n\t        if (stream === undefined) {\n\t          return;\n\t        }\n\t        assert(stream._writer !== undefined);\n\t        WritableStreamDefaultWriterRelease(this);\n\t      }\n\t    }, {\n\t      key: 'write',\n\t      value: function write(chunk) {\n\t        if (IsWritableStreamDefaultWriter(this) === false) {\n\t          return Promise.reject(defaultWriterBrandCheckException('write'));\n\t        }\n\t        if (this._ownerWritableStream === undefined) {\n\t          return Promise.reject(defaultWriterLockException('write to'));\n\t        }\n\t        return WritableStreamDefaultWriterWrite(this, chunk);\n\t      }\n\t    }, {\n\t      key: 'closed',\n\t      get: function get() {\n\t        if (IsWritableStreamDefaultWriter(this) === false) {\n\t          return Promise.reject(defaultWriterBrandCheckException('closed'));\n\t        }\n\t        return this._closedPromise;\n\t      }\n\t    }, {\n\t      key: 'desiredSize',\n\t      get: function get() {\n\t        if (IsWritableStreamDefaultWriter(this) === false) {\n\t          throw defaultWriterBrandCheckException('desiredSize');\n\t        }\n\t        if (this._ownerWritableStream === undefined) {\n\t          throw defaultWriterLockException('desiredSize');\n\t        }\n\t        return WritableStreamDefaultWriterGetDesiredSize(this);\n\t      }\n\t    }, {\n\t      key: 'ready',\n\t      get: function get() {\n\t        if (IsWritableStreamDefaultWriter(this) === false) {\n\t          return Promise.reject(defaultWriterBrandCheckException('ready'));\n\t        }\n\t        return this._readyPromise;\n\t      }\n\t    }]);\n\t    return WritableStreamDefaultWriter;\n\t  }();\n\t  function IsWritableStreamDefaultWriter(x) {\n\t    if (!typeIsObject(x)) {\n\t      return false;\n\t    }\n\t    if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  function WritableStreamDefaultWriterAbort(writer, reason) {\n\t    var stream = writer._ownerWritableStream;\n\t    assert(stream !== undefined);\n\t    return WritableStreamAbort(stream, reason);\n\t  }\n\t  function WritableStreamDefaultWriterClose(writer) {\n\t    var stream = writer._ownerWritableStream;\n\t    assert(stream !== undefined);\n\t    var state = stream._state;\n\t    if (state === 'closed' || state === 'errored') {\n\t      return Promise.reject(new TypeError('The stream (in ' + state + ' state) is not in the writable state and cannot be closed'));\n\t    }\n\t    assert(state === 'writable' || state === 'erroring');\n\t    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n\t    var promise = new Promise(function (resolve, reject) {\n\t      var closeRequest = {\n\t        _resolve: resolve,\n\t        _reject: reject\n\t      };\n\t      stream._closeRequest = closeRequest;\n\t    });\n\t    if (stream._backpressure === true && state === 'writable') {\n\t      defaultWriterReadyPromiseResolve(writer);\n\t    }\n\t    WritableStreamDefaultControllerClose(stream._writableStreamController);\n\t    return promise;\n\t  }\n\t  function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n\t    var stream = writer._ownerWritableStream;\n\t    assert(stream !== undefined);\n\t    var state = stream._state;\n\t    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n\t      return Promise.resolve();\n\t    }\n\t    if (state === 'errored') {\n\t      return Promise.reject(stream._storedError);\n\t    }\n\t    assert(state === 'writable' || state === 'erroring');\n\t    return WritableStreamDefaultWriterClose(writer);\n\t  }\n\t  function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n\t    if (writer._closedPromiseState === 'pending') {\n\t      defaultWriterClosedPromiseReject(writer, error);\n\t    } else {\n\t      defaultWriterClosedPromiseResetToRejected(writer, error);\n\t    }\n\t    writer._closedPromise.catch(function () {});\n\t  }\n\t  function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n\t    if (writer._readyPromiseState === 'pending') {\n\t      defaultWriterReadyPromiseReject(writer, error);\n\t    } else {\n\t      defaultWriterReadyPromiseResetToRejected(writer, error);\n\t    }\n\t    writer._readyPromise.catch(function () {});\n\t  }\n\t  function WritableStreamDefaultWriterGetDesiredSize(writer) {\n\t    var stream = writer._ownerWritableStream;\n\t    var state = stream._state;\n\t    if (state === 'errored' || state === 'erroring') {\n\t      return null;\n\t    }\n\t    if (state === 'closed') {\n\t      return 0;\n\t    }\n\t    return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n\t  }\n\t  function WritableStreamDefaultWriterRelease(writer) {\n\t    var stream = writer._ownerWritableStream;\n\t    assert(stream !== undefined);\n\t    assert(stream._writer === writer);\n\t    var releasedError = new TypeError('Writer was released and can no longer be used to monitor the stream\\'s closedness');\n\t    WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n\t    WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n\t    stream._writer = undefined;\n\t    writer._ownerWritableStream = undefined;\n\t  }\n\t  function WritableStreamDefaultWriterWrite(writer, chunk) {\n\t    var stream = writer._ownerWritableStream;\n\t    assert(stream !== undefined);\n\t    var controller = stream._writableStreamController;\n\t    var chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n\t    if (stream !== writer._ownerWritableStream) {\n\t      return Promise.reject(defaultWriterLockException('write to'));\n\t    }\n\t    var state = stream._state;\n\t    if (state === 'errored') {\n\t      return Promise.reject(stream._storedError);\n\t    }\n\t    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n\t      return Promise.reject(new TypeError('The stream is closing or closed and cannot be written to'));\n\t    }\n\t    if (state === 'erroring') {\n\t      return Promise.reject(stream._storedError);\n\t    }\n\t    assert(state === 'writable');\n\t    var promise = WritableStreamAddWriteRequest(stream);\n\t    WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n\t    return promise;\n\t  }\n\t  var WritableStreamDefaultController = function () {\n\t    function WritableStreamDefaultController(stream, underlyingSink, size, highWaterMark) {\n\t      _classCallCheck(this, WritableStreamDefaultController);\n\t      if (IsWritableStream(stream) === false) {\n\t        throw new TypeError('WritableStreamDefaultController can only be constructed with a WritableStream instance');\n\t      }\n\t      if (stream._writableStreamController !== undefined) {\n\t        throw new TypeError('WritableStreamDefaultController instances can only be created by the WritableStream constructor');\n\t      }\n\t      this._controlledWritableStream = stream;\n\t      this._underlyingSink = underlyingSink;\n\t      this._queue = undefined;\n\t      this._queueTotalSize = undefined;\n\t      ResetQueue(this);\n\t      this._started = false;\n\t      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\n\t      this._strategySize = normalizedStrategy.size;\n\t      this._strategyHWM = normalizedStrategy.highWaterMark;\n\t      var backpressure = WritableStreamDefaultControllerGetBackpressure(this);\n\t      WritableStreamUpdateBackpressure(stream, backpressure);\n\t    }\n\t    _createClass(WritableStreamDefaultController, [{\n\t      key: 'error',\n\t      value: function error(e) {\n\t        if (IsWritableStreamDefaultController(this) === false) {\n\t          throw new TypeError('WritableStreamDefaultController.prototype.error can only be used on a WritableStreamDefaultController');\n\t        }\n\t        var state = this._controlledWritableStream._state;\n\t        if (state !== 'writable') {\n\t          return;\n\t        }\n\t        WritableStreamDefaultControllerError(this, e);\n\t      }\n\t    }, {\n\t      key: '__abortSteps',\n\t      value: function __abortSteps(reason) {\n\t        return PromiseInvokeOrNoop(this._underlyingSink, 'abort', [reason]);\n\t      }\n\t    }, {\n\t      key: '__errorSteps',\n\t      value: function __errorSteps() {\n\t        ResetQueue(this);\n\t      }\n\t    }, {\n\t      key: '__startSteps',\n\t      value: function __startSteps() {\n\t        var _this = this;\n\t        var startResult = InvokeOrNoop(this._underlyingSink, 'start', [this]);\n\t        var stream = this._controlledWritableStream;\n\t        Promise.resolve(startResult).then(function () {\n\t          assert(stream._state === 'writable' || stream._state === 'erroring');\n\t          _this._started = true;\n\t          WritableStreamDefaultControllerAdvanceQueueIfNeeded(_this);\n\t        }, function (r) {\n\t          assert(stream._state === 'writable' || stream._state === 'erroring');\n\t          _this._started = true;\n\t          WritableStreamDealWithRejection(stream, r);\n\t        }).catch(rethrowAssertionErrorRejection);\n\t      }\n\t    }]);\n\t    return WritableStreamDefaultController;\n\t  }();\n\t  function WritableStreamDefaultControllerClose(controller) {\n\t    EnqueueValueWithSize(controller, 'close', 0);\n\t    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n\t  }\n\t  function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n\t    var strategySize = controller._strategySize;\n\t    if (strategySize === undefined) {\n\t      return 1;\n\t    }\n\t    try {\n\t      return strategySize(chunk);\n\t    } catch (chunkSizeE) {\n\t      WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n\t      return 1;\n\t    }\n\t  }\n\t  function WritableStreamDefaultControllerGetDesiredSize(controller) {\n\t    return controller._strategyHWM - controller._queueTotalSize;\n\t  }\n\t  function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n\t    var writeRecord = { chunk: chunk };\n\t    try {\n\t      EnqueueValueWithSize(controller, writeRecord, chunkSize);\n\t    } catch (enqueueE) {\n\t      WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n\t      return;\n\t    }\n\t    var stream = controller._controlledWritableStream;\n\t    if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._state === 'writable') {\n\t      var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n\t      WritableStreamUpdateBackpressure(stream, backpressure);\n\t    }\n\t    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n\t  }\n\t  function IsWritableStreamDefaultController(x) {\n\t    if (!typeIsObject(x)) {\n\t      return false;\n\t    }\n\t    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSink')) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n\t    var stream = controller._controlledWritableStream;\n\t    if (controller._started === false) {\n\t      return;\n\t    }\n\t    if (stream._inFlightWriteRequest !== undefined) {\n\t      return;\n\t    }\n\t    var state = stream._state;\n\t    if (state === 'closed' || state === 'errored') {\n\t      return;\n\t    }\n\t    if (state === 'erroring') {\n\t      WritableStreamFinishErroring(stream);\n\t      return;\n\t    }\n\t    if (controller._queue.length === 0) {\n\t      return;\n\t    }\n\t    var writeRecord = PeekQueueValue(controller);\n\t    if (writeRecord === 'close') {\n\t      WritableStreamDefaultControllerProcessClose(controller);\n\t    } else {\n\t      WritableStreamDefaultControllerProcessWrite(controller, writeRecord.chunk);\n\t    }\n\t  }\n\t  function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n\t    if (controller._controlledWritableStream._state === 'writable') {\n\t      WritableStreamDefaultControllerError(controller, error);\n\t    }\n\t  }\n\t  function WritableStreamDefaultControllerProcessClose(controller) {\n\t    var stream = controller._controlledWritableStream;\n\t    WritableStreamMarkCloseRequestInFlight(stream);\n\t    DequeueValue(controller);\n\t    assert(controller._queue.length === 0, 'queue must be empty once the final write record is dequeued');\n\t    var sinkClosePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'close', []);\n\t    sinkClosePromise.then(function () {\n\t      WritableStreamFinishInFlightClose(stream);\n\t    }, function (reason) {\n\t      WritableStreamFinishInFlightCloseWithError(stream, reason);\n\t    }).catch(rethrowAssertionErrorRejection);\n\t  }\n\t  function WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n\t    var stream = controller._controlledWritableStream;\n\t    WritableStreamMarkFirstWriteRequestInFlight(stream);\n\t    var sinkWritePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'write', [chunk, controller]);\n\t    sinkWritePromise.then(function () {\n\t      WritableStreamFinishInFlightWrite(stream);\n\t      var state = stream._state;\n\t      assert(state === 'writable' || state === 'erroring');\n\t      DequeueValue(controller);\n\t      if (WritableStreamCloseQueuedOrInFlight(stream) === false && state === 'writable') {\n\t        var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n\t        WritableStreamUpdateBackpressure(stream, backpressure);\n\t      }\n\t      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n\t    }, function (reason) {\n\t      WritableStreamFinishInFlightWriteWithError(stream, reason);\n\t    }).catch(rethrowAssertionErrorRejection);\n\t  }\n\t  function WritableStreamDefaultControllerGetBackpressure(controller) {\n\t    var desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n\t    return desiredSize <= 0;\n\t  }\n\t  function WritableStreamDefaultControllerError(controller, error) {\n\t    var stream = controller._controlledWritableStream;\n\t    assert(stream._state === 'writable');\n\t    WritableStreamStartErroring(stream, error);\n\t  }\n\t  function streamBrandCheckException(name) {\n\t    return new TypeError('WritableStream.prototype.' + name + ' can only be used on a WritableStream');\n\t  }\n\t  function defaultWriterBrandCheckException(name) {\n\t    return new TypeError('WritableStreamDefaultWriter.prototype.' + name + ' can only be used on a WritableStreamDefaultWriter');\n\t  }\n\t  function defaultWriterLockException(name) {\n\t    return new TypeError('Cannot ' + name + ' a stream using a released writer');\n\t  }\n\t  function defaultWriterClosedPromiseInitialize(writer) {\n\t    writer._closedPromise = new Promise(function (resolve, reject) {\n\t      writer._closedPromise_resolve = resolve;\n\t      writer._closedPromise_reject = reject;\n\t      writer._closedPromiseState = 'pending';\n\t    });\n\t  }\n\t  function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n\t    writer._closedPromise = Promise.reject(reason);\n\t    writer._closedPromise_resolve = undefined;\n\t    writer._closedPromise_reject = undefined;\n\t    writer._closedPromiseState = 'rejected';\n\t  }\n\t  function defaultWriterClosedPromiseInitializeAsResolved(writer) {\n\t    writer._closedPromise = Promise.resolve(undefined);\n\t    writer._closedPromise_resolve = undefined;\n\t    writer._closedPromise_reject = undefined;\n\t    writer._closedPromiseState = 'resolved';\n\t  }\n\t  function defaultWriterClosedPromiseReject(writer, reason) {\n\t    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\n\t    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\n\t    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\n\t    writer._closedPromise_reject(reason);\n\t    writer._closedPromise_resolve = undefined;\n\t    writer._closedPromise_reject = undefined;\n\t    writer._closedPromiseState = 'rejected';\n\t  }\n\t  function defaultWriterClosedPromiseResetToRejected(writer, reason) {\n\t    assert(writer._closedPromise_resolve === undefined, 'writer._closedPromise_resolve === undefined');\n\t    assert(writer._closedPromise_reject === undefined, 'writer._closedPromise_reject === undefined');\n\t    assert(writer._closedPromiseState !== 'pending', 'writer._closedPromiseState is not pending');\n\t    writer._closedPromise = Promise.reject(reason);\n\t    writer._closedPromiseState = 'rejected';\n\t  }\n\t  function defaultWriterClosedPromiseResolve(writer) {\n\t    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\n\t    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\n\t    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\n\t    writer._closedPromise_resolve(undefined);\n\t    writer._closedPromise_resolve = undefined;\n\t    writer._closedPromise_reject = undefined;\n\t    writer._closedPromiseState = 'resolved';\n\t  }\n\t  function defaultWriterReadyPromiseInitialize(writer) {\n\t    writer._readyPromise = new Promise(function (resolve, reject) {\n\t      writer._readyPromise_resolve = resolve;\n\t      writer._readyPromise_reject = reject;\n\t    });\n\t    writer._readyPromiseState = 'pending';\n\t  }\n\t  function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n\t    writer._readyPromise = Promise.reject(reason);\n\t    writer._readyPromise_resolve = undefined;\n\t    writer._readyPromise_reject = undefined;\n\t    writer._readyPromiseState = 'rejected';\n\t  }\n\t  function defaultWriterReadyPromiseInitializeAsResolved(writer) {\n\t    writer._readyPromise = Promise.resolve(undefined);\n\t    writer._readyPromise_resolve = undefined;\n\t    writer._readyPromise_reject = undefined;\n\t    writer._readyPromiseState = 'fulfilled';\n\t  }\n\t  function defaultWriterReadyPromiseReject(writer, reason) {\n\t    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\n\t    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\n\t    writer._readyPromise_reject(reason);\n\t    writer._readyPromise_resolve = undefined;\n\t    writer._readyPromise_reject = undefined;\n\t    writer._readyPromiseState = 'rejected';\n\t  }\n\t  function defaultWriterReadyPromiseReset(writer) {\n\t    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\n\t    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\n\t    writer._readyPromise = new Promise(function (resolve, reject) {\n\t      writer._readyPromise_resolve = resolve;\n\t      writer._readyPromise_reject = reject;\n\t    });\n\t    writer._readyPromiseState = 'pending';\n\t  }\n\t  function defaultWriterReadyPromiseResetToRejected(writer, reason) {\n\t    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\n\t    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\n\t    writer._readyPromise = Promise.reject(reason);\n\t    writer._readyPromiseState = 'rejected';\n\t  }\n\t  function defaultWriterReadyPromiseResolve(writer) {\n\t    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\n\t    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\n\t    writer._readyPromise_resolve(undefined);\n\t    writer._readyPromise_resolve = undefined;\n\t    writer._readyPromise_reject = undefined;\n\t    writer._readyPromiseState = 'fulfilled';\n\t  }\n\t}, function (module, exports, __w_pdfjs_require__) {\n\t  \"use strict\";\n\t\n\t  var _require = __w_pdfjs_require__(0),\n\t      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber;\n\t  var _require2 = __w_pdfjs_require__(1),\n\t      assert = _require2.assert;\n\t  exports.DequeueValue = function (container) {\n\t    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: DequeueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n\t    assert(container._queue.length > 0, 'Spec-level failure: should never dequeue from an empty queue.');\n\t    var pair = container._queue.shift();\n\t    container._queueTotalSize -= pair.size;\n\t    if (container._queueTotalSize < 0) {\n\t      container._queueTotalSize = 0;\n\t    }\n\t    return pair.value;\n\t  };\n\t  exports.EnqueueValueWithSize = function (container, value, size) {\n\t    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: EnqueueValueWithSize should only be used on containers with [[queue]] and ' + '[[queueTotalSize]].');\n\t    size = Number(size);\n\t    if (!IsFiniteNonNegativeNumber(size)) {\n\t      throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n\t    }\n\t    container._queue.push({\n\t      value: value,\n\t      size: size\n\t    });\n\t    container._queueTotalSize += size;\n\t  };\n\t  exports.PeekQueueValue = function (container) {\n\t    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: PeekQueueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n\t    assert(container._queue.length > 0, 'Spec-level failure: should never peek at an empty queue.');\n\t    var pair = container._queue[0];\n\t    return pair.value;\n\t  };\n\t  exports.ResetQueue = function (container) {\n\t    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: ResetQueue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n\t    container._queue = [];\n\t    container._queueTotalSize = 0;\n\t  };\n\t}, function (module, exports, __w_pdfjs_require__) {\n\t  \"use strict\";\n\t\n\t  var _createClass = function () {\n\t    function defineProperties(target, props) {\n\t      for (var i = 0; i < props.length; i++) {\n\t        var descriptor = props[i];\n\t        descriptor.enumerable = descriptor.enumerable || false;\n\t        descriptor.configurable = true;\n\t        if (\"value\" in descriptor) descriptor.writable = true;\n\t        Object.defineProperty(target, descriptor.key, descriptor);\n\t      }\n\t    }\n\t    return function (Constructor, protoProps, staticProps) {\n\t      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n\t      if (staticProps) defineProperties(Constructor, staticProps);\n\t      return Constructor;\n\t    };\n\t  }();\n\t  function _classCallCheck(instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  }\n\t  var _require = __w_pdfjs_require__(0),\n\t      ArrayBufferCopy = _require.ArrayBufferCopy,\n\t      CreateIterResultObject = _require.CreateIterResultObject,\n\t      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber,\n\t      InvokeOrNoop = _require.InvokeOrNoop,\n\t      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\n\t      TransferArrayBuffer = _require.TransferArrayBuffer,\n\t      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\n\t      ValidateAndNormalizeHighWaterMark = _require.ValidateAndNormalizeHighWaterMark;\n\t  var _require2 = __w_pdfjs_require__(0),\n\t      createArrayFromList = _require2.createArrayFromList,\n\t      createDataProperty = _require2.createDataProperty,\n\t      typeIsObject = _require2.typeIsObject;\n\t  var _require3 = __w_pdfjs_require__(1),\n\t      assert = _require3.assert,\n\t      rethrowAssertionErrorRejection = _require3.rethrowAssertionErrorRejection;\n\t  var _require4 = __w_pdfjs_require__(3),\n\t      DequeueValue = _require4.DequeueValue,\n\t      EnqueueValueWithSize = _require4.EnqueueValueWithSize,\n\t      ResetQueue = _require4.ResetQueue;\n\t  var _require5 = __w_pdfjs_require__(2),\n\t      AcquireWritableStreamDefaultWriter = _require5.AcquireWritableStreamDefaultWriter,\n\t      IsWritableStream = _require5.IsWritableStream,\n\t      IsWritableStreamLocked = _require5.IsWritableStreamLocked,\n\t      WritableStreamAbort = _require5.WritableStreamAbort,\n\t      WritableStreamDefaultWriterCloseWithErrorPropagation = _require5.WritableStreamDefaultWriterCloseWithErrorPropagation,\n\t      WritableStreamDefaultWriterRelease = _require5.WritableStreamDefaultWriterRelease,\n\t      WritableStreamDefaultWriterWrite = _require5.WritableStreamDefaultWriterWrite,\n\t      WritableStreamCloseQueuedOrInFlight = _require5.WritableStreamCloseQueuedOrInFlight;\n\t  var ReadableStream = function () {\n\t    function ReadableStream() {\n\t      var underlyingSource = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t          size = _ref.size,\n\t          highWaterMark = _ref.highWaterMark;\n\t      _classCallCheck(this, ReadableStream);\n\t      this._state = 'readable';\n\t      this._reader = undefined;\n\t      this._storedError = undefined;\n\t      this._disturbed = false;\n\t      this._readableStreamController = undefined;\n\t      var type = underlyingSource.type;\n\t      var typeString = String(type);\n\t      if (typeString === 'bytes') {\n\t        if (highWaterMark === undefined) {\n\t          highWaterMark = 0;\n\t        }\n\t        this._readableStreamController = new ReadableByteStreamController(this, underlyingSource, highWaterMark);\n\t      } else if (type === undefined) {\n\t        if (highWaterMark === undefined) {\n\t          highWaterMark = 1;\n\t        }\n\t        this._readableStreamController = new ReadableStreamDefaultController(this, underlyingSource, size, highWaterMark);\n\t      } else {\n\t        throw new RangeError('Invalid type is specified');\n\t      }\n\t    }\n\t    _createClass(ReadableStream, [{\n\t      key: 'cancel',\n\t      value: function cancel(reason) {\n\t        if (IsReadableStream(this) === false) {\n\t          return Promise.reject(streamBrandCheckException('cancel'));\n\t        }\n\t        if (IsReadableStreamLocked(this) === true) {\n\t          return Promise.reject(new TypeError('Cannot cancel a stream that already has a reader'));\n\t        }\n\t        return ReadableStreamCancel(this, reason);\n\t      }\n\t    }, {\n\t      key: 'getReader',\n\t      value: function getReader() {\n\t        var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n\t            mode = _ref2.mode;\n\t        if (IsReadableStream(this) === false) {\n\t          throw streamBrandCheckException('getReader');\n\t        }\n\t        if (mode === undefined) {\n\t          return AcquireReadableStreamDefaultReader(this);\n\t        }\n\t        mode = String(mode);\n\t        if (mode === 'byob') {\n\t          return AcquireReadableStreamBYOBReader(this);\n\t        }\n\t        throw new RangeError('Invalid mode is specified');\n\t      }\n\t    }, {\n\t      key: 'pipeThrough',\n\t      value: function pipeThrough(_ref3, options) {\n\t        var writable = _ref3.writable,\n\t            readable = _ref3.readable;\n\t        var promise = this.pipeTo(writable, options);\n\t        ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise);\n\t        return readable;\n\t      }\n\t    }, {\n\t      key: 'pipeTo',\n\t      value: function pipeTo(dest) {\n\t        var _this = this;\n\t        var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t            preventClose = _ref4.preventClose,\n\t            preventAbort = _ref4.preventAbort,\n\t            preventCancel = _ref4.preventCancel;\n\t        if (IsReadableStream(this) === false) {\n\t          return Promise.reject(streamBrandCheckException('pipeTo'));\n\t        }\n\t        if (IsWritableStream(dest) === false) {\n\t          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo\\'s first argument must be a WritableStream'));\n\t        }\n\t        preventClose = Boolean(preventClose);\n\t        preventAbort = Boolean(preventAbort);\n\t        preventCancel = Boolean(preventCancel);\n\t        if (IsReadableStreamLocked(this) === true) {\n\t          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n\t        }\n\t        if (IsWritableStreamLocked(dest) === true) {\n\t          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n\t        }\n\t        var reader = AcquireReadableStreamDefaultReader(this);\n\t        var writer = AcquireWritableStreamDefaultWriter(dest);\n\t        var shuttingDown = false;\n\t        var currentWrite = Promise.resolve();\n\t        return new Promise(function (resolve, reject) {\n\t          function pipeLoop() {\n\t            currentWrite = Promise.resolve();\n\t            if (shuttingDown === true) {\n\t              return Promise.resolve();\n\t            }\n\t            return writer._readyPromise.then(function () {\n\t              return ReadableStreamDefaultReaderRead(reader).then(function (_ref5) {\n\t                var value = _ref5.value,\n\t                    done = _ref5.done;\n\t                if (done === true) {\n\t                  return;\n\t                }\n\t                currentWrite = WritableStreamDefaultWriterWrite(writer, value).catch(function () {});\n\t              });\n\t            }).then(pipeLoop);\n\t          }\n\t          isOrBecomesErrored(_this, reader._closedPromise, function (storedError) {\n\t            if (preventAbort === false) {\n\t              shutdownWithAction(function () {\n\t                return WritableStreamAbort(dest, storedError);\n\t              }, true, storedError);\n\t            } else {\n\t              shutdown(true, storedError);\n\t            }\n\t          });\n\t          isOrBecomesErrored(dest, writer._closedPromise, function (storedError) {\n\t            if (preventCancel === false) {\n\t              shutdownWithAction(function () {\n\t                return ReadableStreamCancel(_this, storedError);\n\t              }, true, storedError);\n\t            } else {\n\t              shutdown(true, storedError);\n\t            }\n\t          });\n\t          isOrBecomesClosed(_this, reader._closedPromise, function () {\n\t            if (preventClose === false) {\n\t              shutdownWithAction(function () {\n\t                return WritableStreamDefaultWriterCloseWithErrorPropagation(writer);\n\t              });\n\t            } else {\n\t              shutdown();\n\t            }\n\t          });\n\t          if (WritableStreamCloseQueuedOrInFlight(dest) === true || dest._state === 'closed') {\n\t            var destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n\t            if (preventCancel === false) {\n\t              shutdownWithAction(function () {\n\t                return ReadableStreamCancel(_this, destClosed);\n\t              }, true, destClosed);\n\t            } else {\n\t              shutdown(true, destClosed);\n\t            }\n\t          }\n\t          pipeLoop().catch(function (err) {\n\t            currentWrite = Promise.resolve();\n\t            rethrowAssertionErrorRejection(err);\n\t          });\n\t          function waitForWritesToFinish() {\n\t            var oldCurrentWrite = currentWrite;\n\t            return currentWrite.then(function () {\n\t              return oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined;\n\t            });\n\t          }\n\t          function isOrBecomesErrored(stream, promise, action) {\n\t            if (stream._state === 'errored') {\n\t              action(stream._storedError);\n\t            } else {\n\t              promise.catch(action).catch(rethrowAssertionErrorRejection);\n\t            }\n\t          }\n\t          function isOrBecomesClosed(stream, promise, action) {\n\t            if (stream._state === 'closed') {\n\t              action();\n\t            } else {\n\t              promise.then(action).catch(rethrowAssertionErrorRejection);\n\t            }\n\t          }\n\t          function shutdownWithAction(action, originalIsError, originalError) {\n\t            if (shuttingDown === true) {\n\t              return;\n\t            }\n\t            shuttingDown = true;\n\t            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n\t              waitForWritesToFinish().then(doTheRest);\n\t            } else {\n\t              doTheRest();\n\t            }\n\t            function doTheRest() {\n\t              action().then(function () {\n\t                return finalize(originalIsError, originalError);\n\t              }, function (newError) {\n\t                return finalize(true, newError);\n\t              }).catch(rethrowAssertionErrorRejection);\n\t            }\n\t          }\n\t          function shutdown(isError, error) {\n\t            if (shuttingDown === true) {\n\t              return;\n\t            }\n\t            shuttingDown = true;\n\t            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n\t              waitForWritesToFinish().then(function () {\n\t                return finalize(isError, error);\n\t              }).catch(rethrowAssertionErrorRejection);\n\t            } else {\n\t              finalize(isError, error);\n\t            }\n\t          }\n\t          function finalize(isError, error) {\n\t            WritableStreamDefaultWriterRelease(writer);\n\t            ReadableStreamReaderGenericRelease(reader);\n\t            if (isError) {\n\t              reject(error);\n\t            } else {\n\t              resolve(undefined);\n\t            }\n\t          }\n\t        });\n\t      }\n\t    }, {\n\t      key: 'tee',\n\t      value: function tee() {\n\t        if (IsReadableStream(this) === false) {\n\t          throw streamBrandCheckException('tee');\n\t        }\n\t        var branches = ReadableStreamTee(this, false);\n\t        return createArrayFromList(branches);\n\t      }\n\t    }, {\n\t      key: 'locked',\n\t      get: function get() {\n\t        if (IsReadableStream(this) === false) {\n\t          throw streamBrandCheckException('locked');\n\t        }\n\t        return IsReadableStreamLocked(this);\n\t      }\n\t    }]);\n\t    return ReadableStream;\n\t  }();\n\t  module.exports = {\n\t    ReadableStream: ReadableStream,\n\t    IsReadableStreamDisturbed: IsReadableStreamDisturbed,\n\t    ReadableStreamDefaultControllerClose: ReadableStreamDefaultControllerClose,\n\t    ReadableStreamDefaultControllerEnqueue: ReadableStreamDefaultControllerEnqueue,\n\t    ReadableStreamDefaultControllerError: ReadableStreamDefaultControllerError,\n\t    ReadableStreamDefaultControllerGetDesiredSize: ReadableStreamDefaultControllerGetDesiredSize\n\t  };\n\t  function AcquireReadableStreamBYOBReader(stream) {\n\t    return new ReadableStreamBYOBReader(stream);\n\t  }\n\t  function AcquireReadableStreamDefaultReader(stream) {\n\t    return new ReadableStreamDefaultReader(stream);\n\t  }\n\t  function IsReadableStream(x) {\n\t    if (!typeIsObject(x)) {\n\t      return false;\n\t    }\n\t    if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  function IsReadableStreamDisturbed(stream) {\n\t    assert(IsReadableStream(stream) === true, 'IsReadableStreamDisturbed should only be used on known readable streams');\n\t    return stream._disturbed;\n\t  }\n\t  function IsReadableStreamLocked(stream) {\n\t    assert(IsReadableStream(stream) === true, 'IsReadableStreamLocked should only be used on known readable streams');\n\t    if (stream._reader === undefined) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  function ReadableStreamTee(stream, cloneForBranch2) {\n\t    assert(IsReadableStream(stream) === true);\n\t    assert(typeof cloneForBranch2 === 'boolean');\n\t    var reader = AcquireReadableStreamDefaultReader(stream);\n\t    var teeState = {\n\t      closedOrErrored: false,\n\t      canceled1: false,\n\t      canceled2: false,\n\t      reason1: undefined,\n\t      reason2: undefined\n\t    };\n\t    teeState.promise = new Promise(function (resolve) {\n\t      teeState._resolve = resolve;\n\t    });\n\t    var pull = create_ReadableStreamTeePullFunction();\n\t    pull._reader = reader;\n\t    pull._teeState = teeState;\n\t    pull._cloneForBranch2 = cloneForBranch2;\n\t    var cancel1 = create_ReadableStreamTeeBranch1CancelFunction();\n\t    cancel1._stream = stream;\n\t    cancel1._teeState = teeState;\n\t    var cancel2 = create_ReadableStreamTeeBranch2CancelFunction();\n\t    cancel2._stream = stream;\n\t    cancel2._teeState = teeState;\n\t    var underlyingSource1 = Object.create(Object.prototype);\n\t    createDataProperty(underlyingSource1, 'pull', pull);\n\t    createDataProperty(underlyingSource1, 'cancel', cancel1);\n\t    var branch1Stream = new ReadableStream(underlyingSource1);\n\t    var underlyingSource2 = Object.create(Object.prototype);\n\t    createDataProperty(underlyingSource2, 'pull', pull);\n\t    createDataProperty(underlyingSource2, 'cancel', cancel2);\n\t    var branch2Stream = new ReadableStream(underlyingSource2);\n\t    pull._branch1 = branch1Stream._readableStreamController;\n\t    pull._branch2 = branch2Stream._readableStreamController;\n\t    reader._closedPromise.catch(function (r) {\n\t      if (teeState.closedOrErrored === true) {\n\t        return;\n\t      }\n\t      ReadableStreamDefaultControllerError(pull._branch1, r);\n\t      ReadableStreamDefaultControllerError(pull._branch2, r);\n\t      teeState.closedOrErrored = true;\n\t    });\n\t    return [branch1Stream, branch2Stream];\n\t  }\n\t  function create_ReadableStreamTeePullFunction() {\n\t    function f() {\n\t      var reader = f._reader,\n\t          branch1 = f._branch1,\n\t          branch2 = f._branch2,\n\t          teeState = f._teeState;\n\t      return ReadableStreamDefaultReaderRead(reader).then(function (result) {\n\t        assert(typeIsObject(result));\n\t        var value = result.value;\n\t        var done = result.done;\n\t        assert(typeof done === 'boolean');\n\t        if (done === true && teeState.closedOrErrored === false) {\n\t          if (teeState.canceled1 === false) {\n\t            ReadableStreamDefaultControllerClose(branch1);\n\t          }\n\t          if (teeState.canceled2 === false) {\n\t            ReadableStreamDefaultControllerClose(branch2);\n\t          }\n\t          teeState.closedOrErrored = true;\n\t        }\n\t        if (teeState.closedOrErrored === true) {\n\t          return;\n\t        }\n\t        var value1 = value;\n\t        var value2 = value;\n\t        if (teeState.canceled1 === false) {\n\t          ReadableStreamDefaultControllerEnqueue(branch1, value1);\n\t        }\n\t        if (teeState.canceled2 === false) {\n\t          ReadableStreamDefaultControllerEnqueue(branch2, value2);\n\t        }\n\t      });\n\t    }\n\t    return f;\n\t  }\n\t  function create_ReadableStreamTeeBranch1CancelFunction() {\n\t    function f(reason) {\n\t      var stream = f._stream,\n\t          teeState = f._teeState;\n\t      teeState.canceled1 = true;\n\t      teeState.reason1 = reason;\n\t      if (teeState.canceled2 === true) {\n\t        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\n\t        var cancelResult = ReadableStreamCancel(stream, compositeReason);\n\t        teeState._resolve(cancelResult);\n\t      }\n\t      return teeState.promise;\n\t    }\n\t    return f;\n\t  }\n\t  function create_ReadableStreamTeeBranch2CancelFunction() {\n\t    function f(reason) {\n\t      var stream = f._stream,\n\t          teeState = f._teeState;\n\t      teeState.canceled2 = true;\n\t      teeState.reason2 = reason;\n\t      if (teeState.canceled1 === true) {\n\t        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\n\t        var cancelResult = ReadableStreamCancel(stream, compositeReason);\n\t        teeState._resolve(cancelResult);\n\t      }\n\t      return teeState.promise;\n\t    }\n\t    return f;\n\t  }\n\t  function ReadableStreamAddReadIntoRequest(stream) {\n\t    assert(IsReadableStreamBYOBReader(stream._reader) === true);\n\t    assert(stream._state === 'readable' || stream._state === 'closed');\n\t    var promise = new Promise(function (resolve, reject) {\n\t      var readIntoRequest = {\n\t        _resolve: resolve,\n\t        _reject: reject\n\t      };\n\t      stream._reader._readIntoRequests.push(readIntoRequest);\n\t    });\n\t    return promise;\n\t  }\n\t  function ReadableStreamAddReadRequest(stream) {\n\t    assert(IsReadableStreamDefaultReader(stream._reader) === true);\n\t    assert(stream._state === 'readable');\n\t    var promise = new Promise(function (resolve, reject) {\n\t      var readRequest = {\n\t        _resolve: resolve,\n\t        _reject: reject\n\t      };\n\t      stream._reader._readRequests.push(readRequest);\n\t    });\n\t    return promise;\n\t  }\n\t  function ReadableStreamCancel(stream, reason) {\n\t    stream._disturbed = true;\n\t    if (stream._state === 'closed') {\n\t      return Promise.resolve(undefined);\n\t    }\n\t    if (stream._state === 'errored') {\n\t      return Promise.reject(stream._storedError);\n\t    }\n\t    ReadableStreamClose(stream);\n\t    var sourceCancelPromise = stream._readableStreamController.__cancelSteps(reason);\n\t    return sourceCancelPromise.then(function () {\n\t      return undefined;\n\t    });\n\t  }\n\t  function ReadableStreamClose(stream) {\n\t    assert(stream._state === 'readable');\n\t    stream._state = 'closed';\n\t    var reader = stream._reader;\n\t    if (reader === undefined) {\n\t      return undefined;\n\t    }\n\t    if (IsReadableStreamDefaultReader(reader) === true) {\n\t      for (var i = 0; i < reader._readRequests.length; i++) {\n\t        var _resolve = reader._readRequests[i]._resolve;\n\t        _resolve(CreateIterResultObject(undefined, true));\n\t      }\n\t      reader._readRequests = [];\n\t    }\n\t    defaultReaderClosedPromiseResolve(reader);\n\t    return undefined;\n\t  }\n\t  function ReadableStreamError(stream, e) {\n\t    assert(IsReadableStream(stream) === true, 'stream must be ReadableStream');\n\t    assert(stream._state === 'readable', 'state must be readable');\n\t    stream._state = 'errored';\n\t    stream._storedError = e;\n\t    var reader = stream._reader;\n\t    if (reader === undefined) {\n\t      return undefined;\n\t    }\n\t    if (IsReadableStreamDefaultReader(reader) === true) {\n\t      for (var i = 0; i < reader._readRequests.length; i++) {\n\t        var readRequest = reader._readRequests[i];\n\t        readRequest._reject(e);\n\t      }\n\t      reader._readRequests = [];\n\t    } else {\n\t      assert(IsReadableStreamBYOBReader(reader), 'reader must be ReadableStreamBYOBReader');\n\t      for (var _i = 0; _i < reader._readIntoRequests.length; _i++) {\n\t        var readIntoRequest = reader._readIntoRequests[_i];\n\t        readIntoRequest._reject(e);\n\t      }\n\t      reader._readIntoRequests = [];\n\t    }\n\t    defaultReaderClosedPromiseReject(reader, e);\n\t    reader._closedPromise.catch(function () {});\n\t  }\n\t  function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n\t    var reader = stream._reader;\n\t    assert(reader._readIntoRequests.length > 0);\n\t    var readIntoRequest = reader._readIntoRequests.shift();\n\t    readIntoRequest._resolve(CreateIterResultObject(chunk, done));\n\t  }\n\t  function ReadableStreamFulfillReadRequest(stream, chunk, done) {\n\t    var reader = stream._reader;\n\t    assert(reader._readRequests.length > 0);\n\t    var readRequest = reader._readRequests.shift();\n\t    readRequest._resolve(CreateIterResultObject(chunk, done));\n\t  }\n\t  function ReadableStreamGetNumReadIntoRequests(stream) {\n\t    return stream._reader._readIntoRequests.length;\n\t  }\n\t  function ReadableStreamGetNumReadRequests(stream) {\n\t    return stream._reader._readRequests.length;\n\t  }\n\t  function ReadableStreamHasBYOBReader(stream) {\n\t    var reader = stream._reader;\n\t    if (reader === undefined) {\n\t      return false;\n\t    }\n\t    if (IsReadableStreamBYOBReader(reader) === false) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  function ReadableStreamHasDefaultReader(stream) {\n\t    var reader = stream._reader;\n\t    if (reader === undefined) {\n\t      return false;\n\t    }\n\t    if (IsReadableStreamDefaultReader(reader) === false) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  var ReadableStreamDefaultReader = function () {\n\t    function ReadableStreamDefaultReader(stream) {\n\t      _classCallCheck(this, ReadableStreamDefaultReader);\n\t      if (IsReadableStream(stream) === false) {\n\t        throw new TypeError('ReadableStreamDefaultReader can only be constructed with a ReadableStream instance');\n\t      }\n\t      if (IsReadableStreamLocked(stream) === true) {\n\t        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n\t      }\n\t      ReadableStreamReaderGenericInitialize(this, stream);\n\t      this._readRequests = [];\n\t    }\n\t    _createClass(ReadableStreamDefaultReader, [{\n\t      key: 'cancel',\n\t      value: function cancel(reason) {\n\t        if (IsReadableStreamDefaultReader(this) === false) {\n\t          return Promise.reject(defaultReaderBrandCheckException('cancel'));\n\t        }\n\t        if (this._ownerReadableStream === undefined) {\n\t          return Promise.reject(readerLockException('cancel'));\n\t        }\n\t        return ReadableStreamReaderGenericCancel(this, reason);\n\t      }\n\t    }, {\n\t      key: 'read',\n\t      value: function read() {\n\t        if (IsReadableStreamDefaultReader(this) === false) {\n\t          return Promise.reject(defaultReaderBrandCheckException('read'));\n\t        }\n\t        if (this._ownerReadableStream === undefined) {\n\t          return Promise.reject(readerLockException('read from'));\n\t        }\n\t        return ReadableStreamDefaultReaderRead(this);\n\t      }\n\t    }, {\n\t      key: 'releaseLock',\n\t      value: function releaseLock() {\n\t        if (IsReadableStreamDefaultReader(this) === false) {\n\t          throw defaultReaderBrandCheckException('releaseLock');\n\t        }\n\t        if (this._ownerReadableStream === undefined) {\n\t          return;\n\t        }\n\t        if (this._readRequests.length > 0) {\n\t          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n\t        }\n\t        ReadableStreamReaderGenericRelease(this);\n\t      }\n\t    }, {\n\t      key: 'closed',\n\t      get: function get() {\n\t        if (IsReadableStreamDefaultReader(this) === false) {\n\t          return Promise.reject(defaultReaderBrandCheckException('closed'));\n\t        }\n\t        return this._closedPromise;\n\t      }\n\t    }]);\n\t    return ReadableStreamDefaultReader;\n\t  }();\n\t  var ReadableStreamBYOBReader = function () {\n\t    function ReadableStreamBYOBReader(stream) {\n\t      _classCallCheck(this, ReadableStreamBYOBReader);\n\t      if (!IsReadableStream(stream)) {\n\t        throw new TypeError('ReadableStreamBYOBReader can only be constructed with a ReadableStream instance given a ' + 'byte source');\n\t      }\n\t      if (IsReadableByteStreamController(stream._readableStreamController) === false) {\n\t        throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' + 'source');\n\t      }\n\t      if (IsReadableStreamLocked(stream)) {\n\t        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n\t      }\n\t      ReadableStreamReaderGenericInitialize(this, stream);\n\t      this._readIntoRequests = [];\n\t    }\n\t    _createClass(ReadableStreamBYOBReader, [{\n\t      key: 'cancel',\n\t      value: function cancel(reason) {\n\t        if (!IsReadableStreamBYOBReader(this)) {\n\t          return Promise.reject(byobReaderBrandCheckException('cancel'));\n\t        }\n\t        if (this._ownerReadableStream === undefined) {\n\t          return Promise.reject(readerLockException('cancel'));\n\t        }\n\t        return ReadableStreamReaderGenericCancel(this, reason);\n\t      }\n\t    }, {\n\t      key: 'read',\n\t      value: function read(view) {\n\t        if (!IsReadableStreamBYOBReader(this)) {\n\t          return Promise.reject(byobReaderBrandCheckException('read'));\n\t        }\n\t        if (this._ownerReadableStream === undefined) {\n\t          return Promise.reject(readerLockException('read from'));\n\t        }\n\t        if (!ArrayBuffer.isView(view)) {\n\t          return Promise.reject(new TypeError('view must be an array buffer view'));\n\t        }\n\t        if (view.byteLength === 0) {\n\t          return Promise.reject(new TypeError('view must have non-zero byteLength'));\n\t        }\n\t        return ReadableStreamBYOBReaderRead(this, view);\n\t      }\n\t    }, {\n\t      key: 'releaseLock',\n\t      value: function releaseLock() {\n\t        if (!IsReadableStreamBYOBReader(this)) {\n\t          throw byobReaderBrandCheckException('releaseLock');\n\t        }\n\t        if (this._ownerReadableStream === undefined) {\n\t          return;\n\t        }\n\t        if (this._readIntoRequests.length > 0) {\n\t          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n\t        }\n\t        ReadableStreamReaderGenericRelease(this);\n\t      }\n\t    }, {\n\t      key: 'closed',\n\t      get: function get() {\n\t        if (!IsReadableStreamBYOBReader(this)) {\n\t          return Promise.reject(byobReaderBrandCheckException('closed'));\n\t        }\n\t        return this._closedPromise;\n\t      }\n\t    }]);\n\t    return ReadableStreamBYOBReader;\n\t  }();\n\t  function IsReadableStreamBYOBReader(x) {\n\t    if (!typeIsObject(x)) {\n\t      return false;\n\t    }\n\t    if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  function IsReadableStreamDefaultReader(x) {\n\t    if (!typeIsObject(x)) {\n\t      return false;\n\t    }\n\t    if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  function ReadableStreamReaderGenericInitialize(reader, stream) {\n\t    reader._ownerReadableStream = stream;\n\t    stream._reader = reader;\n\t    if (stream._state === 'readable') {\n\t      defaultReaderClosedPromiseInitialize(reader);\n\t    } else if (stream._state === 'closed') {\n\t      defaultReaderClosedPromiseInitializeAsResolved(reader);\n\t    } else {\n\t      assert(stream._state === 'errored', 'state must be errored');\n\t      defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n\t      reader._closedPromise.catch(function () {});\n\t    }\n\t  }\n\t  function ReadableStreamReaderGenericCancel(reader, reason) {\n\t    var stream = reader._ownerReadableStream;\n\t    assert(stream !== undefined);\n\t    return ReadableStreamCancel(stream, reason);\n\t  }\n\t  function ReadableStreamReaderGenericRelease(reader) {\n\t    assert(reader._ownerReadableStream !== undefined);\n\t    assert(reader._ownerReadableStream._reader === reader);\n\t    if (reader._ownerReadableStream._state === 'readable') {\n\t      defaultReaderClosedPromiseReject(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n\t    } else {\n\t      defaultReaderClosedPromiseResetToRejected(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n\t    }\n\t    reader._closedPromise.catch(function () {});\n\t    reader._ownerReadableStream._reader = undefined;\n\t    reader._ownerReadableStream = undefined;\n\t  }\n\t  function ReadableStreamBYOBReaderRead(reader, view) {\n\t    var stream = reader._ownerReadableStream;\n\t    assert(stream !== undefined);\n\t    stream._disturbed = true;\n\t    if (stream._state === 'errored') {\n\t      return Promise.reject(stream._storedError);\n\t    }\n\t    return ReadableByteStreamControllerPullInto(stream._readableStreamController, view);\n\t  }\n\t  function ReadableStreamDefaultReaderRead(reader) {\n\t    var stream = reader._ownerReadableStream;\n\t    assert(stream !== undefined);\n\t    stream._disturbed = true;\n\t    if (stream._state === 'closed') {\n\t      return Promise.resolve(CreateIterResultObject(undefined, true));\n\t    }\n\t    if (stream._state === 'errored') {\n\t      return Promise.reject(stream._storedError);\n\t    }\n\t    assert(stream._state === 'readable');\n\t    return stream._readableStreamController.__pullSteps();\n\t  }\n\t  var ReadableStreamDefaultController = function () {\n\t    function ReadableStreamDefaultController(stream, underlyingSource, size, highWaterMark) {\n\t      _classCallCheck(this, ReadableStreamDefaultController);\n\t      if (IsReadableStream(stream) === false) {\n\t        throw new TypeError('ReadableStreamDefaultController can only be constructed with a ReadableStream instance');\n\t      }\n\t      if (stream._readableStreamController !== undefined) {\n\t        throw new TypeError('ReadableStreamDefaultController instances can only be created by the ReadableStream constructor');\n\t      }\n\t      this._controlledReadableStream = stream;\n\t      this._underlyingSource = underlyingSource;\n\t      this._queue = undefined;\n\t      this._queueTotalSize = undefined;\n\t      ResetQueue(this);\n\t      this._started = false;\n\t      this._closeRequested = false;\n\t      this._pullAgain = false;\n\t      this._pulling = false;\n\t      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\n\t      this._strategySize = normalizedStrategy.size;\n\t      this._strategyHWM = normalizedStrategy.highWaterMark;\n\t      var controller = this;\n\t      var startResult = InvokeOrNoop(underlyingSource, 'start', [this]);\n\t      Promise.resolve(startResult).then(function () {\n\t        controller._started = true;\n\t        assert(controller._pulling === false);\n\t        assert(controller._pullAgain === false);\n\t        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n\t      }, function (r) {\n\t        ReadableStreamDefaultControllerErrorIfNeeded(controller, r);\n\t      }).catch(rethrowAssertionErrorRejection);\n\t    }\n\t    _createClass(ReadableStreamDefaultController, [{\n\t      key: 'close',\n\t      value: function close() {\n\t        if (IsReadableStreamDefaultController(this) === false) {\n\t          throw defaultControllerBrandCheckException('close');\n\t        }\n\t        if (this._closeRequested === true) {\n\t          throw new TypeError('The stream has already been closed; do not close it again!');\n\t        }\n\t        var state = this._controlledReadableStream._state;\n\t        if (state !== 'readable') {\n\t          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\n\t        }\n\t        ReadableStreamDefaultControllerClose(this);\n\t      }\n\t    }, {\n\t      key: 'enqueue',\n\t      value: function enqueue(chunk) {\n\t        if (IsReadableStreamDefaultController(this) === false) {\n\t          throw defaultControllerBrandCheckException('enqueue');\n\t        }\n\t        if (this._closeRequested === true) {\n\t          throw new TypeError('stream is closed or draining');\n\t        }\n\t        var state = this._controlledReadableStream._state;\n\t        if (state !== 'readable') {\n\t          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\n\t        }\n\t        return ReadableStreamDefaultControllerEnqueue(this, chunk);\n\t      }\n\t    }, {\n\t      key: 'error',\n\t      value: function error(e) {\n\t        if (IsReadableStreamDefaultController(this) === false) {\n\t          throw defaultControllerBrandCheckException('error');\n\t        }\n\t        var stream = this._controlledReadableStream;\n\t        if (stream._state !== 'readable') {\n\t          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\n\t        }\n\t        ReadableStreamDefaultControllerError(this, e);\n\t      }\n\t    }, {\n\t      key: '__cancelSteps',\n\t      value: function __cancelSteps(reason) {\n\t        ResetQueue(this);\n\t        return PromiseInvokeOrNoop(this._underlyingSource, 'cancel', [reason]);\n\t      }\n\t    }, {\n\t      key: '__pullSteps',\n\t      value: function __pullSteps() {\n\t        var stream = this._controlledReadableStream;\n\t        if (this._queue.length > 0) {\n\t          var chunk = DequeueValue(this);\n\t          if (this._closeRequested === true && this._queue.length === 0) {\n\t            ReadableStreamClose(stream);\n\t          } else {\n\t            ReadableStreamDefaultControllerCallPullIfNeeded(this);\n\t          }\n\t          return Promise.resolve(CreateIterResultObject(chunk, false));\n\t        }\n\t        var pendingPromise = ReadableStreamAddReadRequest(stream);\n\t        ReadableStreamDefaultControllerCallPullIfNeeded(this);\n\t        return pendingPromise;\n\t      }\n\t    }, {\n\t      key: 'desiredSize',\n\t      get: function get() {\n\t        if (IsReadableStreamDefaultController(this) === false) {\n\t          throw defaultControllerBrandCheckException('desiredSize');\n\t        }\n\t        return ReadableStreamDefaultControllerGetDesiredSize(this);\n\t      }\n\t    }]);\n\t    return ReadableStreamDefaultController;\n\t  }();\n\t  function IsReadableStreamDefaultController(x) {\n\t    if (!typeIsObject(x)) {\n\t      return false;\n\t    }\n\t    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSource')) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n\t    var shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n\t    if (shouldPull === false) {\n\t      return undefined;\n\t    }\n\t    if (controller._pulling === true) {\n\t      controller._pullAgain = true;\n\t      return undefined;\n\t    }\n\t    assert(controller._pullAgain === false);\n\t    controller._pulling = true;\n\t    var pullPromise = PromiseInvokeOrNoop(controller._underlyingSource, 'pull', [controller]);\n\t    pullPromise.then(function () {\n\t      controller._pulling = false;\n\t      if (controller._pullAgain === true) {\n\t        controller._pullAgain = false;\n\t        return ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n\t      }\n\t      return undefined;\n\t    }, function (e) {\n\t      ReadableStreamDefaultControllerErrorIfNeeded(controller, e);\n\t    }).catch(rethrowAssertionErrorRejection);\n\t    return undefined;\n\t  }\n\t  function ReadableStreamDefaultControllerShouldCallPull(controller) {\n\t    var stream = controller._controlledReadableStream;\n\t    if (stream._state === 'closed' || stream._state === 'errored') {\n\t      return false;\n\t    }\n\t    if (controller._closeRequested === true) {\n\t      return false;\n\t    }\n\t    if (controller._started === false) {\n\t      return false;\n\t    }\n\t    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n\t      return true;\n\t    }\n\t    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n\t    if (desiredSize > 0) {\n\t      return true;\n\t    }\n\t    return false;\n\t  }\n\t  function ReadableStreamDefaultControllerClose(controller) {\n\t    var stream = controller._controlledReadableStream;\n\t    assert(controller._closeRequested === false);\n\t    assert(stream._state === 'readable');\n\t    controller._closeRequested = true;\n\t    if (controller._queue.length === 0) {\n\t      ReadableStreamClose(stream);\n\t    }\n\t  }\n\t  function ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n\t    var stream = controller._controlledReadableStream;\n\t    assert(controller._closeRequested === false);\n\t    assert(stream._state === 'readable');\n\t    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n\t      ReadableStreamFulfillReadRequest(stream, chunk, false);\n\t    } else {\n\t      var chunkSize = 1;\n\t      if (controller._strategySize !== undefined) {\n\t        var strategySize = controller._strategySize;\n\t        try {\n\t          chunkSize = strategySize(chunk);\n\t        } catch (chunkSizeE) {\n\t          ReadableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n\t          throw chunkSizeE;\n\t        }\n\t      }\n\t      try {\n\t        EnqueueValueWithSize(controller, chunk, chunkSize);\n\t      } catch (enqueueE) {\n\t        ReadableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n\t        throw enqueueE;\n\t      }\n\t    }\n\t    ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n\t    return undefined;\n\t  }\n\t  function ReadableStreamDefaultControllerError(controller, e) {\n\t    var stream = controller._controlledReadableStream;\n\t    assert(stream._state === 'readable');\n\t    ResetQueue(controller);\n\t    ReadableStreamError(stream, e);\n\t  }\n\t  function ReadableStreamDefaultControllerErrorIfNeeded(controller, e) {\n\t    if (controller._controlledReadableStream._state === 'readable') {\n\t      ReadableStreamDefaultControllerError(controller, e);\n\t    }\n\t  }\n\t  function ReadableStreamDefaultControllerGetDesiredSize(controller) {\n\t    var stream = controller._controlledReadableStream;\n\t    var state = stream._state;\n\t    if (state === 'errored') {\n\t      return null;\n\t    }\n\t    if (state === 'closed') {\n\t      return 0;\n\t    }\n\t    return controller._strategyHWM - controller._queueTotalSize;\n\t  }\n\t  var ReadableStreamBYOBRequest = function () {\n\t    function ReadableStreamBYOBRequest(controller, view) {\n\t      _classCallCheck(this, ReadableStreamBYOBRequest);\n\t      this._associatedReadableByteStreamController = controller;\n\t      this._view = view;\n\t    }\n\t    _createClass(ReadableStreamBYOBRequest, [{\n\t      key: 'respond',\n\t      value: function respond(bytesWritten) {\n\t        if (IsReadableStreamBYOBRequest(this) === false) {\n\t          throw byobRequestBrandCheckException('respond');\n\t        }\n\t        if (this._associatedReadableByteStreamController === undefined) {\n\t          throw new TypeError('This BYOB request has been invalidated');\n\t        }\n\t        ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n\t      }\n\t    }, {\n\t      key: 'respondWithNewView',\n\t      value: function respondWithNewView(view) {\n\t        if (IsReadableStreamBYOBRequest(this) === false) {\n\t          throw byobRequestBrandCheckException('respond');\n\t        }\n\t        if (this._associatedReadableByteStreamController === undefined) {\n\t          throw new TypeError('This BYOB request has been invalidated');\n\t        }\n\t        if (!ArrayBuffer.isView(view)) {\n\t          throw new TypeError('You can only respond with array buffer views');\n\t        }\n\t        ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n\t      }\n\t    }, {\n\t      key: 'view',\n\t      get: function get() {\n\t        return this._view;\n\t      }\n\t    }]);\n\t    return ReadableStreamBYOBRequest;\n\t  }();\n\t  var ReadableByteStreamController = function () {\n\t    function ReadableByteStreamController(stream, underlyingByteSource, highWaterMark) {\n\t      _classCallCheck(this, ReadableByteStreamController);\n\t      if (IsReadableStream(stream) === false) {\n\t        throw new TypeError('ReadableByteStreamController can only be constructed with a ReadableStream instance given ' + 'a byte source');\n\t      }\n\t      if (stream._readableStreamController !== undefined) {\n\t        throw new TypeError('ReadableByteStreamController instances can only be created by the ReadableStream constructor given a byte ' + 'source');\n\t      }\n\t      this._controlledReadableStream = stream;\n\t      this._underlyingByteSource = underlyingByteSource;\n\t      this._pullAgain = false;\n\t      this._pulling = false;\n\t      ReadableByteStreamControllerClearPendingPullIntos(this);\n\t      this._queue = this._queueTotalSize = undefined;\n\t      ResetQueue(this);\n\t      this._closeRequested = false;\n\t      this._started = false;\n\t      this._strategyHWM = ValidateAndNormalizeHighWaterMark(highWaterMark);\n\t      var autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n\t      if (autoAllocateChunkSize !== undefined) {\n\t        if (Number.isInteger(autoAllocateChunkSize) === false || autoAllocateChunkSize <= 0) {\n\t          throw new RangeError('autoAllocateChunkSize must be a positive integer');\n\t        }\n\t      }\n\t      this._autoAllocateChunkSize = autoAllocateChunkSize;\n\t      this._pendingPullIntos = [];\n\t      var controller = this;\n\t      var startResult = InvokeOrNoop(underlyingByteSource, 'start', [this]);\n\t      Promise.resolve(startResult).then(function () {\n\t        controller._started = true;\n\t        assert(controller._pulling === false);\n\t        assert(controller._pullAgain === false);\n\t        ReadableByteStreamControllerCallPullIfNeeded(controller);\n\t      }, function (r) {\n\t        if (stream._state === 'readable') {\n\t          ReadableByteStreamControllerError(controller, r);\n\t        }\n\t      }).catch(rethrowAssertionErrorRejection);\n\t    }\n\t    _createClass(ReadableByteStreamController, [{\n\t      key: 'close',\n\t      value: function close() {\n\t        if (IsReadableByteStreamController(this) === false) {\n\t          throw byteStreamControllerBrandCheckException('close');\n\t        }\n\t        if (this._closeRequested === true) {\n\t          throw new TypeError('The stream has already been closed; do not close it again!');\n\t        }\n\t        var state = this._controlledReadableStream._state;\n\t        if (state !== 'readable') {\n\t          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\n\t        }\n\t        ReadableByteStreamControllerClose(this);\n\t      }\n\t    }, {\n\t      key: 'enqueue',\n\t      value: function enqueue(chunk) {\n\t        if (IsReadableByteStreamController(this) === false) {\n\t          throw byteStreamControllerBrandCheckException('enqueue');\n\t        }\n\t        if (this._closeRequested === true) {\n\t          throw new TypeError('stream is closed or draining');\n\t        }\n\t        var state = this._controlledReadableStream._state;\n\t        if (state !== 'readable') {\n\t          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\n\t        }\n\t        if (!ArrayBuffer.isView(chunk)) {\n\t          throw new TypeError('You can only enqueue array buffer views when using a ReadableByteStreamController');\n\t        }\n\t        ReadableByteStreamControllerEnqueue(this, chunk);\n\t      }\n\t    }, {\n\t      key: 'error',\n\t      value: function error(e) {\n\t        if (IsReadableByteStreamController(this) === false) {\n\t          throw byteStreamControllerBrandCheckException('error');\n\t        }\n\t        var stream = this._controlledReadableStream;\n\t        if (stream._state !== 'readable') {\n\t          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\n\t        }\n\t        ReadableByteStreamControllerError(this, e);\n\t      }\n\t    }, {\n\t      key: '__cancelSteps',\n\t      value: function __cancelSteps(reason) {\n\t        if (this._pendingPullIntos.length > 0) {\n\t          var firstDescriptor = this._pendingPullIntos[0];\n\t          firstDescriptor.bytesFilled = 0;\n\t        }\n\t        ResetQueue(this);\n\t        return PromiseInvokeOrNoop(this._underlyingByteSource, 'cancel', [reason]);\n\t      }\n\t    }, {\n\t      key: '__pullSteps',\n\t      value: function __pullSteps() {\n\t        var stream = this._controlledReadableStream;\n\t        assert(ReadableStreamHasDefaultReader(stream) === true);\n\t        if (this._queueTotalSize > 0) {\n\t          assert(ReadableStreamGetNumReadRequests(stream) === 0);\n\t          var entry = this._queue.shift();\n\t          this._queueTotalSize -= entry.byteLength;\n\t          ReadableByteStreamControllerHandleQueueDrain(this);\n\t          var view = void 0;\n\t          try {\n\t            view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n\t          } catch (viewE) {\n\t            return Promise.reject(viewE);\n\t          }\n\t          return Promise.resolve(CreateIterResultObject(view, false));\n\t        }\n\t        var autoAllocateChunkSize = this._autoAllocateChunkSize;\n\t        if (autoAllocateChunkSize !== undefined) {\n\t          var buffer = void 0;\n\t          try {\n\t            buffer = new ArrayBuffer(autoAllocateChunkSize);\n\t          } catch (bufferE) {\n\t            return Promise.reject(bufferE);\n\t          }\n\t          var pullIntoDescriptor = {\n\t            buffer: buffer,\n\t            byteOffset: 0,\n\t            byteLength: autoAllocateChunkSize,\n\t            bytesFilled: 0,\n\t            elementSize: 1,\n\t            ctor: Uint8Array,\n\t            readerType: 'default'\n\t          };\n\t          this._pendingPullIntos.push(pullIntoDescriptor);\n\t        }\n\t        var promise = ReadableStreamAddReadRequest(stream);\n\t        ReadableByteStreamControllerCallPullIfNeeded(this);\n\t        return promise;\n\t      }\n\t    }, {\n\t      key: 'byobRequest',\n\t      get: function get() {\n\t        if (IsReadableByteStreamController(this) === false) {\n\t          throw byteStreamControllerBrandCheckException('byobRequest');\n\t        }\n\t        if (this._byobRequest === undefined && this._pendingPullIntos.length > 0) {\n\t          var firstDescriptor = this._pendingPullIntos[0];\n\t          var view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n\t          this._byobRequest = new ReadableStreamBYOBRequest(this, view);\n\t        }\n\t        return this._byobRequest;\n\t      }\n\t    }, {\n\t      key: 'desiredSize',\n\t      get: function get() {\n\t        if (IsReadableByteStreamController(this) === false) {\n\t          throw byteStreamControllerBrandCheckException('desiredSize');\n\t        }\n\t        return ReadableByteStreamControllerGetDesiredSize(this);\n\t      }\n\t    }]);\n\t    return ReadableByteStreamController;\n\t  }();\n\t  function IsReadableByteStreamController(x) {\n\t    if (!typeIsObject(x)) {\n\t      return false;\n\t    }\n\t    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingByteSource')) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  function IsReadableStreamBYOBRequest(x) {\n\t    if (!typeIsObject(x)) {\n\t      return false;\n\t    }\n\t    if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  function ReadableByteStreamControllerCallPullIfNeeded(controller) {\n\t    var shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n\t    if (shouldPull === false) {\n\t      return undefined;\n\t    }\n\t    if (controller._pulling === true) {\n\t      controller._pullAgain = true;\n\t      return undefined;\n\t    }\n\t    assert(controller._pullAgain === false);\n\t    controller._pulling = true;\n\t    var pullPromise = PromiseInvokeOrNoop(controller._underlyingByteSource, 'pull', [controller]);\n\t    pullPromise.then(function () {\n\t      controller._pulling = false;\n\t      if (controller._pullAgain === true) {\n\t        controller._pullAgain = false;\n\t        ReadableByteStreamControllerCallPullIfNeeded(controller);\n\t      }\n\t    }, function (e) {\n\t      if (controller._controlledReadableStream._state === 'readable') {\n\t        ReadableByteStreamControllerError(controller, e);\n\t      }\n\t    }).catch(rethrowAssertionErrorRejection);\n\t    return undefined;\n\t  }\n\t  function ReadableByteStreamControllerClearPendingPullIntos(controller) {\n\t    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n\t    controller._pendingPullIntos = [];\n\t  }\n\t  function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n\t    assert(stream._state !== 'errored', 'state must not be errored');\n\t    var done = false;\n\t    if (stream._state === 'closed') {\n\t      assert(pullIntoDescriptor.bytesFilled === 0);\n\t      done = true;\n\t    }\n\t    var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n\t    if (pullIntoDescriptor.readerType === 'default') {\n\t      ReadableStreamFulfillReadRequest(stream, filledView, done);\n\t    } else {\n\t      assert(pullIntoDescriptor.readerType === 'byob');\n\t      ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n\t    }\n\t  }\n\t  function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n\t    var bytesFilled = pullIntoDescriptor.bytesFilled;\n\t    var elementSize = pullIntoDescriptor.elementSize;\n\t    assert(bytesFilled <= pullIntoDescriptor.byteLength);\n\t    assert(bytesFilled % elementSize === 0);\n\t    return new pullIntoDescriptor.ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n\t  }\n\t  function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n\t    controller._queue.push({\n\t      buffer: buffer,\n\t      byteOffset: byteOffset,\n\t      byteLength: byteLength\n\t    });\n\t    controller._queueTotalSize += byteLength;\n\t  }\n\t  function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n\t    var elementSize = pullIntoDescriptor.elementSize;\n\t    var currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n\t    var maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n\t    var maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n\t    var maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n\t    var totalBytesToCopyRemaining = maxBytesToCopy;\n\t    var ready = false;\n\t    if (maxAlignedBytes > currentAlignedBytes) {\n\t      totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n\t      ready = true;\n\t    }\n\t    var queue = controller._queue;\n\t    while (totalBytesToCopyRemaining > 0) {\n\t      var headOfQueue = queue[0];\n\t      var bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n\t      var destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n\t      ArrayBufferCopy(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n\t      if (headOfQueue.byteLength === bytesToCopy) {\n\t        queue.shift();\n\t      } else {\n\t        headOfQueue.byteOffset += bytesToCopy;\n\t        headOfQueue.byteLength -= bytesToCopy;\n\t      }\n\t      controller._queueTotalSize -= bytesToCopy;\n\t      ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n\t      totalBytesToCopyRemaining -= bytesToCopy;\n\t    }\n\t    if (ready === false) {\n\t      assert(controller._queueTotalSize === 0, 'queue must be empty');\n\t      assert(pullIntoDescriptor.bytesFilled > 0);\n\t      assert(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize);\n\t    }\n\t    return ready;\n\t  }\n\t  function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n\t    assert(controller._pendingPullIntos.length === 0 || controller._pendingPullIntos[0] === pullIntoDescriptor);\n\t    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n\t    pullIntoDescriptor.bytesFilled += size;\n\t  }\n\t  function ReadableByteStreamControllerHandleQueueDrain(controller) {\n\t    assert(controller._controlledReadableStream._state === 'readable');\n\t    if (controller._queueTotalSize === 0 && controller._closeRequested === true) {\n\t      ReadableStreamClose(controller._controlledReadableStream);\n\t    } else {\n\t      ReadableByteStreamControllerCallPullIfNeeded(controller);\n\t    }\n\t  }\n\t  function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n\t    if (controller._byobRequest === undefined) {\n\t      return;\n\t    }\n\t    controller._byobRequest._associatedReadableByteStreamController = undefined;\n\t    controller._byobRequest._view = undefined;\n\t    controller._byobRequest = undefined;\n\t  }\n\t  function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n\t    assert(controller._closeRequested === false);\n\t    while (controller._pendingPullIntos.length > 0) {\n\t      if (controller._queueTotalSize === 0) {\n\t        return;\n\t      }\n\t      var pullIntoDescriptor = controller._pendingPullIntos[0];\n\t      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n\t        ReadableByteStreamControllerShiftPendingPullInto(controller);\n\t        ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\n\t      }\n\t    }\n\t  }\n\t  function ReadableByteStreamControllerPullInto(controller, view) {\n\t    var stream = controller._controlledReadableStream;\n\t    var elementSize = 1;\n\t    if (view.constructor !== DataView) {\n\t      elementSize = view.constructor.BYTES_PER_ELEMENT;\n\t    }\n\t    var ctor = view.constructor;\n\t    var pullIntoDescriptor = {\n\t      buffer: view.buffer,\n\t      byteOffset: view.byteOffset,\n\t      byteLength: view.byteLength,\n\t      bytesFilled: 0,\n\t      elementSize: elementSize,\n\t      ctor: ctor,\n\t      readerType: 'byob'\n\t    };\n\t    if (controller._pendingPullIntos.length > 0) {\n\t      pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n\t      controller._pendingPullIntos.push(pullIntoDescriptor);\n\t      return ReadableStreamAddReadIntoRequest(stream);\n\t    }\n\t    if (stream._state === 'closed') {\n\t      var emptyView = new view.constructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n\t      return Promise.resolve(CreateIterResultObject(emptyView, true));\n\t    }\n\t    if (controller._queueTotalSize > 0) {\n\t      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n\t        var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n\t        ReadableByteStreamControllerHandleQueueDrain(controller);\n\t        return Promise.resolve(CreateIterResultObject(filledView, false));\n\t      }\n\t      if (controller._closeRequested === true) {\n\t        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n\t        ReadableByteStreamControllerError(controller, e);\n\t        return Promise.reject(e);\n\t      }\n\t    }\n\t    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n\t    controller._pendingPullIntos.push(pullIntoDescriptor);\n\t    var promise = ReadableStreamAddReadIntoRequest(stream);\n\t    ReadableByteStreamControllerCallPullIfNeeded(controller);\n\t    return promise;\n\t  }\n\t  function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n\t    firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n\t    assert(firstDescriptor.bytesFilled === 0, 'bytesFilled must be 0');\n\t    var stream = controller._controlledReadableStream;\n\t    if (ReadableStreamHasBYOBReader(stream) === true) {\n\t      while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n\t        var pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n\t        ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n\t      }\n\t    }\n\t  }\n\t  function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n\t    if (pullIntoDescriptor.bytesFilled + bytesWritten > pullIntoDescriptor.byteLength) {\n\t      throw new RangeError('bytesWritten out of range');\n\t    }\n\t    ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n\t    if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n\t      return;\n\t    }\n\t    ReadableByteStreamControllerShiftPendingPullInto(controller);\n\t    var remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n\t    if (remainderSize > 0) {\n\t      var end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n\t      var remainder = pullIntoDescriptor.buffer.slice(end - remainderSize, end);\n\t      ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n\t    }\n\t    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n\t    pullIntoDescriptor.bytesFilled -= remainderSize;\n\t    ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\n\t    ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n\t  }\n\t  function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n\t    var firstDescriptor = controller._pendingPullIntos[0];\n\t    var stream = controller._controlledReadableStream;\n\t    if (stream._state === 'closed') {\n\t      if (bytesWritten !== 0) {\n\t        throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n\t      }\n\t      ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\n\t    } else {\n\t      assert(stream._state === 'readable');\n\t      ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n\t    }\n\t  }\n\t  function ReadableByteStreamControllerShiftPendingPullInto(controller) {\n\t    var descriptor = controller._pendingPullIntos.shift();\n\t    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n\t    return descriptor;\n\t  }\n\t  function ReadableByteStreamControllerShouldCallPull(controller) {\n\t    var stream = controller._controlledReadableStream;\n\t    if (stream._state !== 'readable') {\n\t      return false;\n\t    }\n\t    if (controller._closeRequested === true) {\n\t      return false;\n\t    }\n\t    if (controller._started === false) {\n\t      return false;\n\t    }\n\t    if (ReadableStreamHasDefaultReader(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n\t      return true;\n\t    }\n\t    if (ReadableStreamHasBYOBReader(stream) === true && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n\t      return true;\n\t    }\n\t    if (ReadableByteStreamControllerGetDesiredSize(controller) > 0) {\n\t      return true;\n\t    }\n\t    return false;\n\t  }\n\t  function ReadableByteStreamControllerClose(controller) {\n\t    var stream = controller._controlledReadableStream;\n\t    assert(controller._closeRequested === false);\n\t    assert(stream._state === 'readable');\n\t    if (controller._queueTotalSize > 0) {\n\t      controller._closeRequested = true;\n\t      return;\n\t    }\n\t    if (controller._pendingPullIntos.length > 0) {\n\t      var firstPendingPullInto = controller._pendingPullIntos[0];\n\t      if (firstPendingPullInto.bytesFilled > 0) {\n\t        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n\t        ReadableByteStreamControllerError(controller, e);\n\t        throw e;\n\t      }\n\t    }\n\t    ReadableStreamClose(stream);\n\t  }\n\t  function ReadableByteStreamControllerEnqueue(controller, chunk) {\n\t    var stream = controller._controlledReadableStream;\n\t    assert(controller._closeRequested === false);\n\t    assert(stream._state === 'readable');\n\t    var buffer = chunk.buffer;\n\t    var byteOffset = chunk.byteOffset;\n\t    var byteLength = chunk.byteLength;\n\t    var transferredBuffer = TransferArrayBuffer(buffer);\n\t    if (ReadableStreamHasDefaultReader(stream) === true) {\n\t      if (ReadableStreamGetNumReadRequests(stream) === 0) {\n\t        ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n\t      } else {\n\t        assert(controller._queue.length === 0);\n\t        var transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n\t        ReadableStreamFulfillReadRequest(stream, transferredView, false);\n\t      }\n\t    } else if (ReadableStreamHasBYOBReader(stream) === true) {\n\t      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n\t      ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n\t    } else {\n\t      assert(IsReadableStreamLocked(stream) === false, 'stream must not be locked');\n\t      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n\t    }\n\t  }\n\t  function ReadableByteStreamControllerError(controller, e) {\n\t    var stream = controller._controlledReadableStream;\n\t    assert(stream._state === 'readable');\n\t    ReadableByteStreamControllerClearPendingPullIntos(controller);\n\t    ResetQueue(controller);\n\t    ReadableStreamError(stream, e);\n\t  }\n\t  function ReadableByteStreamControllerGetDesiredSize(controller) {\n\t    var stream = controller._controlledReadableStream;\n\t    var state = stream._state;\n\t    if (state === 'errored') {\n\t      return null;\n\t    }\n\t    if (state === 'closed') {\n\t      return 0;\n\t    }\n\t    return controller._strategyHWM - controller._queueTotalSize;\n\t  }\n\t  function ReadableByteStreamControllerRespond(controller, bytesWritten) {\n\t    bytesWritten = Number(bytesWritten);\n\t    if (IsFiniteNonNegativeNumber(bytesWritten) === false) {\n\t      throw new RangeError('bytesWritten must be a finite');\n\t    }\n\t    assert(controller._pendingPullIntos.length > 0);\n\t    ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n\t  }\n\t  function ReadableByteStreamControllerRespondWithNewView(controller, view) {\n\t    assert(controller._pendingPullIntos.length > 0);\n\t    var firstDescriptor = controller._pendingPullIntos[0];\n\t    if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n\t      throw new RangeError('The region specified by view does not match byobRequest');\n\t    }\n\t    if (firstDescriptor.byteLength !== view.byteLength) {\n\t      throw new RangeError('The buffer of view has different capacity than byobRequest');\n\t    }\n\t    firstDescriptor.buffer = view.buffer;\n\t    ReadableByteStreamControllerRespondInternal(controller, view.byteLength);\n\t  }\n\t  function streamBrandCheckException(name) {\n\t    return new TypeError('ReadableStream.prototype.' + name + ' can only be used on a ReadableStream');\n\t  }\n\t  function readerLockException(name) {\n\t    return new TypeError('Cannot ' + name + ' a stream using a released reader');\n\t  }\n\t  function defaultReaderBrandCheckException(name) {\n\t    return new TypeError('ReadableStreamDefaultReader.prototype.' + name + ' can only be used on a ReadableStreamDefaultReader');\n\t  }\n\t  function defaultReaderClosedPromiseInitialize(reader) {\n\t    reader._closedPromise = new Promise(function (resolve, reject) {\n\t      reader._closedPromise_resolve = resolve;\n\t      reader._closedPromise_reject = reject;\n\t    });\n\t  }\n\t  function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n\t    reader._closedPromise = Promise.reject(reason);\n\t    reader._closedPromise_resolve = undefined;\n\t    reader._closedPromise_reject = undefined;\n\t  }\n\t  function defaultReaderClosedPromiseInitializeAsResolved(reader) {\n\t    reader._closedPromise = Promise.resolve(undefined);\n\t    reader._closedPromise_resolve = undefined;\n\t    reader._closedPromise_reject = undefined;\n\t  }\n\t  function defaultReaderClosedPromiseReject(reader, reason) {\n\t    assert(reader._closedPromise_resolve !== undefined);\n\t    assert(reader._closedPromise_reject !== undefined);\n\t    reader._closedPromise_reject(reason);\n\t    reader._closedPromise_resolve = undefined;\n\t    reader._closedPromise_reject = undefined;\n\t  }\n\t  function defaultReaderClosedPromiseResetToRejected(reader, reason) {\n\t    assert(reader._closedPromise_resolve === undefined);\n\t    assert(reader._closedPromise_reject === undefined);\n\t    reader._closedPromise = Promise.reject(reason);\n\t  }\n\t  function defaultReaderClosedPromiseResolve(reader) {\n\t    assert(reader._closedPromise_resolve !== undefined);\n\t    assert(reader._closedPromise_reject !== undefined);\n\t    reader._closedPromise_resolve(undefined);\n\t    reader._closedPromise_resolve = undefined;\n\t    reader._closedPromise_reject = undefined;\n\t  }\n\t  function byobReaderBrandCheckException(name) {\n\t    return new TypeError('ReadableStreamBYOBReader.prototype.' + name + ' can only be used on a ReadableStreamBYOBReader');\n\t  }\n\t  function defaultControllerBrandCheckException(name) {\n\t    return new TypeError('ReadableStreamDefaultController.prototype.' + name + ' can only be used on a ReadableStreamDefaultController');\n\t  }\n\t  function byobRequestBrandCheckException(name) {\n\t    return new TypeError('ReadableStreamBYOBRequest.prototype.' + name + ' can only be used on a ReadableStreamBYOBRequest');\n\t  }\n\t  function byteStreamControllerBrandCheckException(name) {\n\t    return new TypeError('ReadableByteStreamController.prototype.' + name + ' can only be used on a ReadableByteStreamController');\n\t  }\n\t  function ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise) {\n\t    try {\n\t      Promise.prototype.then.call(promise, undefined, function () {});\n\t    } catch (e) {}\n\t  }\n\t}, function (module, exports, __w_pdfjs_require__) {\n\t  \"use strict\";\n\t\n\t  var transformStream = __w_pdfjs_require__(6);\n\t  var readableStream = __w_pdfjs_require__(4);\n\t  var writableStream = __w_pdfjs_require__(2);\n\t  exports.TransformStream = transformStream.TransformStream;\n\t  exports.ReadableStream = readableStream.ReadableStream;\n\t  exports.IsReadableStreamDisturbed = readableStream.IsReadableStreamDisturbed;\n\t  exports.ReadableStreamDefaultControllerClose = readableStream.ReadableStreamDefaultControllerClose;\n\t  exports.ReadableStreamDefaultControllerEnqueue = readableStream.ReadableStreamDefaultControllerEnqueue;\n\t  exports.ReadableStreamDefaultControllerError = readableStream.ReadableStreamDefaultControllerError;\n\t  exports.ReadableStreamDefaultControllerGetDesiredSize = readableStream.ReadableStreamDefaultControllerGetDesiredSize;\n\t  exports.AcquireWritableStreamDefaultWriter = writableStream.AcquireWritableStreamDefaultWriter;\n\t  exports.IsWritableStream = writableStream.IsWritableStream;\n\t  exports.IsWritableStreamLocked = writableStream.IsWritableStreamLocked;\n\t  exports.WritableStream = writableStream.WritableStream;\n\t  exports.WritableStreamAbort = writableStream.WritableStreamAbort;\n\t  exports.WritableStreamDefaultControllerError = writableStream.WritableStreamDefaultControllerError;\n\t  exports.WritableStreamDefaultWriterCloseWithErrorPropagation = writableStream.WritableStreamDefaultWriterCloseWithErrorPropagation;\n\t  exports.WritableStreamDefaultWriterRelease = writableStream.WritableStreamDefaultWriterRelease;\n\t  exports.WritableStreamDefaultWriterWrite = writableStream.WritableStreamDefaultWriterWrite;\n\t}, function (module, exports, __w_pdfjs_require__) {\n\t  \"use strict\";\n\t\n\t  var _createClass = function () {\n\t    function defineProperties(target, props) {\n\t      for (var i = 0; i < props.length; i++) {\n\t        var descriptor = props[i];\n\t        descriptor.enumerable = descriptor.enumerable || false;\n\t        descriptor.configurable = true;\n\t        if (\"value\" in descriptor) descriptor.writable = true;\n\t        Object.defineProperty(target, descriptor.key, descriptor);\n\t      }\n\t    }\n\t    return function (Constructor, protoProps, staticProps) {\n\t      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n\t      if (staticProps) defineProperties(Constructor, staticProps);\n\t      return Constructor;\n\t    };\n\t  }();\n\t  function _classCallCheck(instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  }\n\t  var _require = __w_pdfjs_require__(1),\n\t      assert = _require.assert;\n\t  var _require2 = __w_pdfjs_require__(0),\n\t      InvokeOrNoop = _require2.InvokeOrNoop,\n\t      PromiseInvokeOrPerformFallback = _require2.PromiseInvokeOrPerformFallback,\n\t      PromiseInvokeOrNoop = _require2.PromiseInvokeOrNoop,\n\t      typeIsObject = _require2.typeIsObject;\n\t  var _require3 = __w_pdfjs_require__(4),\n\t      ReadableStream = _require3.ReadableStream,\n\t      ReadableStreamDefaultControllerClose = _require3.ReadableStreamDefaultControllerClose,\n\t      ReadableStreamDefaultControllerEnqueue = _require3.ReadableStreamDefaultControllerEnqueue,\n\t      ReadableStreamDefaultControllerError = _require3.ReadableStreamDefaultControllerError,\n\t      ReadableStreamDefaultControllerGetDesiredSize = _require3.ReadableStreamDefaultControllerGetDesiredSize;\n\t  var _require4 = __w_pdfjs_require__(2),\n\t      WritableStream = _require4.WritableStream,\n\t      WritableStreamDefaultControllerError = _require4.WritableStreamDefaultControllerError;\n\t  function TransformStreamCloseReadable(transformStream) {\n\t    if (transformStream._errored === true) {\n\t      throw new TypeError('TransformStream is already errored');\n\t    }\n\t    if (transformStream._readableClosed === true) {\n\t      throw new TypeError('Readable side is already closed');\n\t    }\n\t    TransformStreamCloseReadableInternal(transformStream);\n\t  }\n\t  function TransformStreamEnqueueToReadable(transformStream, chunk) {\n\t    if (transformStream._errored === true) {\n\t      throw new TypeError('TransformStream is already errored');\n\t    }\n\t    if (transformStream._readableClosed === true) {\n\t      throw new TypeError('Readable side is already closed');\n\t    }\n\t    var controller = transformStream._readableController;\n\t    try {\n\t      ReadableStreamDefaultControllerEnqueue(controller, chunk);\n\t    } catch (e) {\n\t      transformStream._readableClosed = true;\n\t      TransformStreamErrorIfNeeded(transformStream, e);\n\t      throw transformStream._storedError;\n\t    }\n\t    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n\t    var maybeBackpressure = desiredSize <= 0;\n\t    if (maybeBackpressure === true && transformStream._backpressure === false) {\n\t      TransformStreamSetBackpressure(transformStream, true);\n\t    }\n\t  }\n\t  function TransformStreamError(transformStream, e) {\n\t    if (transformStream._errored === true) {\n\t      throw new TypeError('TransformStream is already errored');\n\t    }\n\t    TransformStreamErrorInternal(transformStream, e);\n\t  }\n\t  function TransformStreamCloseReadableInternal(transformStream) {\n\t    assert(transformStream._errored === false);\n\t    assert(transformStream._readableClosed === false);\n\t    try {\n\t      ReadableStreamDefaultControllerClose(transformStream._readableController);\n\t    } catch (e) {\n\t      assert(false);\n\t    }\n\t    transformStream._readableClosed = true;\n\t  }\n\t  function TransformStreamErrorIfNeeded(transformStream, e) {\n\t    if (transformStream._errored === false) {\n\t      TransformStreamErrorInternal(transformStream, e);\n\t    }\n\t  }\n\t  function TransformStreamErrorInternal(transformStream, e) {\n\t    assert(transformStream._errored === false);\n\t    transformStream._errored = true;\n\t    transformStream._storedError = e;\n\t    if (transformStream._writableDone === false) {\n\t      WritableStreamDefaultControllerError(transformStream._writableController, e);\n\t    }\n\t    if (transformStream._readableClosed === false) {\n\t      ReadableStreamDefaultControllerError(transformStream._readableController, e);\n\t    }\n\t  }\n\t  function TransformStreamReadableReadyPromise(transformStream) {\n\t    assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n\t    if (transformStream._backpressure === false) {\n\t      return Promise.resolve();\n\t    }\n\t    assert(transformStream._backpressure === true, '_backpressure should have been initialized');\n\t    return transformStream._backpressureChangePromise;\n\t  }\n\t  function TransformStreamSetBackpressure(transformStream, backpressure) {\n\t    assert(transformStream._backpressure !== backpressure, 'TransformStreamSetBackpressure() should be called only when backpressure is changed');\n\t    if (transformStream._backpressureChangePromise !== undefined) {\n\t      transformStream._backpressureChangePromise_resolve(backpressure);\n\t    }\n\t    transformStream._backpressureChangePromise = new Promise(function (resolve) {\n\t      transformStream._backpressureChangePromise_resolve = resolve;\n\t    });\n\t    transformStream._backpressureChangePromise.then(function (resolution) {\n\t      assert(resolution !== backpressure, '_backpressureChangePromise should be fulfilled only when backpressure is changed');\n\t    });\n\t    transformStream._backpressure = backpressure;\n\t  }\n\t  function TransformStreamDefaultTransform(chunk, transformStreamController) {\n\t    var transformStream = transformStreamController._controlledTransformStream;\n\t    TransformStreamEnqueueToReadable(transformStream, chunk);\n\t    return Promise.resolve();\n\t  }\n\t  function TransformStreamTransform(transformStream, chunk) {\n\t    assert(transformStream._errored === false);\n\t    assert(transformStream._transforming === false);\n\t    assert(transformStream._backpressure === false);\n\t    transformStream._transforming = true;\n\t    var transformer = transformStream._transformer;\n\t    var controller = transformStream._transformStreamController;\n\t    var transformPromise = PromiseInvokeOrPerformFallback(transformer, 'transform', [chunk, controller], TransformStreamDefaultTransform, [chunk, controller]);\n\t    return transformPromise.then(function () {\n\t      transformStream._transforming = false;\n\t      return TransformStreamReadableReadyPromise(transformStream);\n\t    }, function (e) {\n\t      TransformStreamErrorIfNeeded(transformStream, e);\n\t      return Promise.reject(e);\n\t    });\n\t  }\n\t  function IsTransformStreamDefaultController(x) {\n\t    if (!typeIsObject(x)) {\n\t      return false;\n\t    }\n\t    if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  function IsTransformStream(x) {\n\t    if (!typeIsObject(x)) {\n\t      return false;\n\t    }\n\t    if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  var TransformStreamSink = function () {\n\t    function TransformStreamSink(transformStream, startPromise) {\n\t      _classCallCheck(this, TransformStreamSink);\n\t      this._transformStream = transformStream;\n\t      this._startPromise = startPromise;\n\t    }\n\t    _createClass(TransformStreamSink, [{\n\t      key: 'start',\n\t      value: function start(c) {\n\t        var transformStream = this._transformStream;\n\t        transformStream._writableController = c;\n\t        return this._startPromise.then(function () {\n\t          return TransformStreamReadableReadyPromise(transformStream);\n\t        });\n\t      }\n\t    }, {\n\t      key: 'write',\n\t      value: function write(chunk) {\n\t        var transformStream = this._transformStream;\n\t        return TransformStreamTransform(transformStream, chunk);\n\t      }\n\t    }, {\n\t      key: 'abort',\n\t      value: function abort() {\n\t        var transformStream = this._transformStream;\n\t        transformStream._writableDone = true;\n\t        TransformStreamErrorInternal(transformStream, new TypeError('Writable side aborted'));\n\t      }\n\t    }, {\n\t      key: 'close',\n\t      value: function close() {\n\t        var transformStream = this._transformStream;\n\t        assert(transformStream._transforming === false);\n\t        transformStream._writableDone = true;\n\t        var flushPromise = PromiseInvokeOrNoop(transformStream._transformer, 'flush', [transformStream._transformStreamController]);\n\t        return flushPromise.then(function () {\n\t          if (transformStream._errored === true) {\n\t            return Promise.reject(transformStream._storedError);\n\t          }\n\t          if (transformStream._readableClosed === false) {\n\t            TransformStreamCloseReadableInternal(transformStream);\n\t          }\n\t          return Promise.resolve();\n\t        }).catch(function (r) {\n\t          TransformStreamErrorIfNeeded(transformStream, r);\n\t          return Promise.reject(transformStream._storedError);\n\t        });\n\t      }\n\t    }]);\n\t    return TransformStreamSink;\n\t  }();\n\t  var TransformStreamSource = function () {\n\t    function TransformStreamSource(transformStream, startPromise) {\n\t      _classCallCheck(this, TransformStreamSource);\n\t      this._transformStream = transformStream;\n\t      this._startPromise = startPromise;\n\t    }\n\t    _createClass(TransformStreamSource, [{\n\t      key: 'start',\n\t      value: function start(c) {\n\t        var transformStream = this._transformStream;\n\t        transformStream._readableController = c;\n\t        return this._startPromise.then(function () {\n\t          assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n\t          if (transformStream._backpressure === true) {\n\t            return Promise.resolve();\n\t          }\n\t          assert(transformStream._backpressure === false, '_backpressure should have been initialized');\n\t          return transformStream._backpressureChangePromise;\n\t        });\n\t      }\n\t    }, {\n\t      key: 'pull',\n\t      value: function pull() {\n\t        var transformStream = this._transformStream;\n\t        assert(transformStream._backpressure === true, 'pull() should be never called while _backpressure is false');\n\t        assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n\t        TransformStreamSetBackpressure(transformStream, false);\n\t        return transformStream._backpressureChangePromise;\n\t      }\n\t    }, {\n\t      key: 'cancel',\n\t      value: function cancel() {\n\t        var transformStream = this._transformStream;\n\t        transformStream._readableClosed = true;\n\t        TransformStreamErrorInternal(transformStream, new TypeError('Readable side canceled'));\n\t      }\n\t    }]);\n\t    return TransformStreamSource;\n\t  }();\n\t  var TransformStreamDefaultController = function () {\n\t    function TransformStreamDefaultController(transformStream) {\n\t      _classCallCheck(this, TransformStreamDefaultController);\n\t      if (IsTransformStream(transformStream) === false) {\n\t        throw new TypeError('TransformStreamDefaultController can only be ' + 'constructed with a TransformStream instance');\n\t      }\n\t      if (transformStream._transformStreamController !== undefined) {\n\t        throw new TypeError('TransformStreamDefaultController instances can ' + 'only be created by the TransformStream constructor');\n\t      }\n\t      this._controlledTransformStream = transformStream;\n\t    }\n\t    _createClass(TransformStreamDefaultController, [{\n\t      key: 'enqueue',\n\t      value: function enqueue(chunk) {\n\t        if (IsTransformStreamDefaultController(this) === false) {\n\t          throw defaultControllerBrandCheckException('enqueue');\n\t        }\n\t        TransformStreamEnqueueToReadable(this._controlledTransformStream, chunk);\n\t      }\n\t    }, {\n\t      key: 'close',\n\t      value: function close() {\n\t        if (IsTransformStreamDefaultController(this) === false) {\n\t          throw defaultControllerBrandCheckException('close');\n\t        }\n\t        TransformStreamCloseReadable(this._controlledTransformStream);\n\t      }\n\t    }, {\n\t      key: 'error',\n\t      value: function error(reason) {\n\t        if (IsTransformStreamDefaultController(this) === false) {\n\t          throw defaultControllerBrandCheckException('error');\n\t        }\n\t        TransformStreamError(this._controlledTransformStream, reason);\n\t      }\n\t    }, {\n\t      key: 'desiredSize',\n\t      get: function get() {\n\t        if (IsTransformStreamDefaultController(this) === false) {\n\t          throw defaultControllerBrandCheckException('desiredSize');\n\t        }\n\t        var transformStream = this._controlledTransformStream;\n\t        var readableController = transformStream._readableController;\n\t        return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n\t      }\n\t    }]);\n\t    return TransformStreamDefaultController;\n\t  }();\n\t  var TransformStream = function () {\n\t    function TransformStream() {\n\t      var transformer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t      _classCallCheck(this, TransformStream);\n\t      this._transformer = transformer;\n\t      var readableStrategy = transformer.readableStrategy,\n\t          writableStrategy = transformer.writableStrategy;\n\t      this._transforming = false;\n\t      this._errored = false;\n\t      this._storedError = undefined;\n\t      this._writableController = undefined;\n\t      this._readableController = undefined;\n\t      this._transformStreamController = undefined;\n\t      this._writableDone = false;\n\t      this._readableClosed = false;\n\t      this._backpressure = undefined;\n\t      this._backpressureChangePromise = undefined;\n\t      this._backpressureChangePromise_resolve = undefined;\n\t      this._transformStreamController = new TransformStreamDefaultController(this);\n\t      var startPromise_resolve = void 0;\n\t      var startPromise = new Promise(function (resolve) {\n\t        startPromise_resolve = resolve;\n\t      });\n\t      var source = new TransformStreamSource(this, startPromise);\n\t      this._readable = new ReadableStream(source, readableStrategy);\n\t      var sink = new TransformStreamSink(this, startPromise);\n\t      this._writable = new WritableStream(sink, writableStrategy);\n\t      assert(this._writableController !== undefined);\n\t      assert(this._readableController !== undefined);\n\t      var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(this._readableController);\n\t      TransformStreamSetBackpressure(this, desiredSize <= 0);\n\t      var transformStream = this;\n\t      var startResult = InvokeOrNoop(transformer, 'start', [transformStream._transformStreamController]);\n\t      startPromise_resolve(startResult);\n\t      startPromise.catch(function (e) {\n\t        if (transformStream._errored === false) {\n\t          transformStream._errored = true;\n\t          transformStream._storedError = e;\n\t        }\n\t      });\n\t    }\n\t    _createClass(TransformStream, [{\n\t      key: 'readable',\n\t      get: function get() {\n\t        if (IsTransformStream(this) === false) {\n\t          throw streamBrandCheckException('readable');\n\t        }\n\t        return this._readable;\n\t      }\n\t    }, {\n\t      key: 'writable',\n\t      get: function get() {\n\t        if (IsTransformStream(this) === false) {\n\t          throw streamBrandCheckException('writable');\n\t        }\n\t        return this._writable;\n\t      }\n\t    }]);\n\t    return TransformStream;\n\t  }();\n\t  module.exports = { TransformStream: TransformStream };\n\t  function defaultControllerBrandCheckException(name) {\n\t    return new TypeError('TransformStreamDefaultController.prototype.' + name + ' can only be used on a TransformStreamDefaultController');\n\t  }\n\t  function streamBrandCheckException(name) {\n\t    return new TypeError('TransformStream.prototype.' + name + ' can only be used on a TransformStream');\n\t  }\n\t}, function (module, exports, __w_pdfjs_require__) {\n\t  module.exports = __w_pdfjs_require__(5);\n\t}]));\n\t\n\t/***/ }),\n\t/* 126 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.NetworkPdfManager = exports.LocalPdfManager = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _chunked_stream = __w_pdfjs_require__(72);\n\t\n\tvar _document = __w_pdfjs_require__(127);\n\t\n\tvar _stream = __w_pdfjs_require__(5);\n\t\n\tvar BasePdfManager = function BasePdfManagerClosure() {\n\t  function BasePdfManager() {\n\t    throw new Error('Cannot initialize BaseManagerManager');\n\t  }\n\t  BasePdfManager.prototype = {\n\t    get docId() {\n\t      return this._docId;\n\t    },\n\t    get password() {\n\t      return this._password;\n\t    },\n\t    get docBaseUrl() {\n\t      var docBaseUrl = null;\n\t      if (this._docBaseUrl) {\n\t        var absoluteUrl = (0, _util.createValidAbsoluteUrl)(this._docBaseUrl);\n\t        if (absoluteUrl) {\n\t          docBaseUrl = absoluteUrl.href;\n\t        } else {\n\t          (0, _util.warn)('Invalid absolute docBaseUrl: \"' + this._docBaseUrl + '\".');\n\t        }\n\t      }\n\t      return (0, _util.shadow)(this, 'docBaseUrl', docBaseUrl);\n\t    },\n\t    onLoadedStream: function BasePdfManager_onLoadedStream() {\n\t      throw new _util.NotImplementedException();\n\t    },\n\t    ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n\t      return this.ensure(this.pdfDocument, prop, args);\n\t    },\n\t    ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n\t      return this.ensure(this.pdfDocument.xref, prop, args);\n\t    },\n\t    ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n\t      return this.ensure(this.pdfDocument.catalog, prop, args);\n\t    },\n\t    getPage: function BasePdfManager_getPage(pageIndex) {\n\t      return this.pdfDocument.getPage(pageIndex);\n\t    },\n\t    cleanup: function BasePdfManager_cleanup() {\n\t      return this.pdfDocument.cleanup();\n\t    },\n\t    ensure: function BasePdfManager_ensure(obj, prop, args) {\n\t      return new _util.NotImplementedException();\n\t    },\n\t    requestRange: function BasePdfManager_requestRange(begin, end) {\n\t      return new _util.NotImplementedException();\n\t    },\n\t    requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n\t      return new _util.NotImplementedException();\n\t    },\n\t    sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n\t      return new _util.NotImplementedException();\n\t    },\n\t    updatePassword: function BasePdfManager_updatePassword(password) {\n\t      this._password = password;\n\t    },\n\t    terminate: function BasePdfManager_terminate() {\n\t      return new _util.NotImplementedException();\n\t    }\n\t  };\n\t  return BasePdfManager;\n\t}();\n\tvar LocalPdfManager = function LocalPdfManagerClosure() {\n\t  function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n\t    this._docId = docId;\n\t    this._password = password;\n\t    this._docBaseUrl = docBaseUrl;\n\t    this.evaluatorOptions = evaluatorOptions;\n\t    var stream = new _stream.Stream(data);\n\t    this.pdfDocument = new _document.PDFDocument(this, stream);\n\t    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n\t    this._loadedStreamCapability.resolve(stream);\n\t  }\n\t  _util.Util.inherit(LocalPdfManager, BasePdfManager, {\n\t    ensure: function LocalPdfManager_ensure(obj, prop, args) {\n\t      return new Promise(function (resolve, reject) {\n\t        try {\n\t          var value = obj[prop];\n\t          var result;\n\t          if (typeof value === 'function') {\n\t            result = value.apply(obj, args);\n\t          } else {\n\t            result = value;\n\t          }\n\t          resolve(result);\n\t        } catch (e) {\n\t          reject(e);\n\t        }\n\t      });\n\t    },\n\t    requestRange: function LocalPdfManager_requestRange(begin, end) {\n\t      return Promise.resolve();\n\t    },\n\t    requestLoadedStream: function LocalPdfManager_requestLoadedStream() {},\n\t    onLoadedStream: function LocalPdfManager_onLoadedStream() {\n\t      return this._loadedStreamCapability.promise;\n\t    },\n\t    terminate: function LocalPdfManager_terminate() {}\n\t  });\n\t  return LocalPdfManager;\n\t}();\n\tvar NetworkPdfManager = function NetworkPdfManagerClosure() {\n\t  function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n\t    this._docId = docId;\n\t    this._password = args.password;\n\t    this._docBaseUrl = docBaseUrl;\n\t    this.msgHandler = args.msgHandler;\n\t    this.evaluatorOptions = evaluatorOptions;\n\t    var params = {\n\t      msgHandler: args.msgHandler,\n\t      url: args.url,\n\t      length: args.length,\n\t      disableAutoFetch: args.disableAutoFetch,\n\t      rangeChunkSize: args.rangeChunkSize\n\t    };\n\t    this.streamManager = new _chunked_stream.ChunkedStreamManager(pdfNetworkStream, params);\n\t    this.pdfDocument = new _document.PDFDocument(this, this.streamManager.getStream());\n\t  }\n\t  _util.Util.inherit(NetworkPdfManager, BasePdfManager, {\n\t    ensure: function NetworkPdfManager_ensure(obj, prop, args) {\n\t      var pdfManager = this;\n\t      return new Promise(function (resolve, reject) {\n\t        function ensureHelper() {\n\t          try {\n\t            var result;\n\t            var value = obj[prop];\n\t            if (typeof value === 'function') {\n\t              result = value.apply(obj, args);\n\t            } else {\n\t              result = value;\n\t            }\n\t            resolve(result);\n\t          } catch (e) {\n\t            if (!(e instanceof _util.MissingDataException)) {\n\t              reject(e);\n\t              return;\n\t            }\n\t            pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\n\t          }\n\t        }\n\t        ensureHelper();\n\t      });\n\t    },\n\t    requestRange: function NetworkPdfManager_requestRange(begin, end) {\n\t      return this.streamManager.requestRange(begin, end);\n\t    },\n\t    requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\n\t      this.streamManager.requestAllChunks();\n\t    },\n\t    sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\n\t      this.streamManager.onReceiveData({ chunk: chunk });\n\t    },\n\t    onLoadedStream: function NetworkPdfManager_onLoadedStream() {\n\t      return this.streamManager.onLoadedStream();\n\t    },\n\t    terminate: function NetworkPdfManager_terminate() {\n\t      this.streamManager.abort();\n\t    }\n\t  });\n\t  return NetworkPdfManager;\n\t}();\n\texports.LocalPdfManager = LocalPdfManager;\n\texports.NetworkPdfManager = NetworkPdfManager;\n\t\n\t/***/ }),\n\t/* 127 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.PDFDocument = exports.Page = undefined;\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _obj = __w_pdfjs_require__(73);\n\t\n\tvar _primitives = __w_pdfjs_require__(2);\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _stream = __w_pdfjs_require__(5);\n\t\n\tvar _evaluator = __w_pdfjs_require__(77);\n\t\n\tvar _annotation = __w_pdfjs_require__(144);\n\t\n\tvar _crypto = __w_pdfjs_require__(76);\n\t\n\tvar _parser = __w_pdfjs_require__(34);\n\t\n\tvar _function = __w_pdfjs_require__(81);\n\t\n\tvar Page = function PageClosure() {\n\t  var DEFAULT_USER_UNIT = 1.0;\n\t  var LETTER_SIZE_MEDIABOX = [0, 0, 612, 792];\n\t  function isAnnotationRenderable(annotation, intent) {\n\t    return intent === 'display' && annotation.viewable || intent === 'print' && annotation.printable;\n\t  }\n\t  function Page(_ref) {\n\t    var pdfManager = _ref.pdfManager,\n\t        xref = _ref.xref,\n\t        pageIndex = _ref.pageIndex,\n\t        pageDict = _ref.pageDict,\n\t        ref = _ref.ref,\n\t        fontCache = _ref.fontCache,\n\t        builtInCMapCache = _ref.builtInCMapCache,\n\t        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\t\n\t    this.pdfManager = pdfManager;\n\t    this.pageIndex = pageIndex;\n\t    this.pageDict = pageDict;\n\t    this.xref = xref;\n\t    this.ref = ref;\n\t    this.fontCache = fontCache;\n\t    this.builtInCMapCache = builtInCMapCache;\n\t    this.pdfFunctionFactory = pdfFunctionFactory;\n\t    this.evaluatorOptions = pdfManager.evaluatorOptions;\n\t    this.resourcesPromise = null;\n\t    var uniquePrefix = 'p' + this.pageIndex + '_';\n\t    var idCounters = { obj: 0 };\n\t    this.idFactory = {\n\t      createObjId: function createObjId() {\n\t        return uniquePrefix + ++idCounters.obj;\n\t      }\n\t    };\n\t  }\n\t  Page.prototype = {\n\t    getPageProp: function Page_getPageProp(key) {\n\t      return this.pageDict.get(key);\n\t    },\n\t    getInheritedPageProp: function Page_getInheritedPageProp(key, getArray) {\n\t      var dict = this.pageDict,\n\t          valueArray = null,\n\t          loopCount = 0;\n\t      var MAX_LOOP_COUNT = 100;\n\t      getArray = getArray || false;\n\t      while (dict) {\n\t        var value = getArray ? dict.getArray(key) : dict.get(key);\n\t        if (value !== undefined) {\n\t          if (!valueArray) {\n\t            valueArray = [];\n\t          }\n\t          valueArray.push(value);\n\t        }\n\t        if (++loopCount > MAX_LOOP_COUNT) {\n\t          (0, _util.warn)('getInheritedPageProp: maximum loop count exceeded for ' + key);\n\t          return valueArray ? valueArray[0] : undefined;\n\t        }\n\t        dict = dict.get('Parent');\n\t      }\n\t      if (!valueArray) {\n\t        return undefined;\n\t      }\n\t      if (valueArray.length === 1 || !(0, _primitives.isDict)(valueArray[0])) {\n\t        return valueArray[0];\n\t      }\n\t      return _primitives.Dict.merge(this.xref, valueArray);\n\t    },\n\t    get content() {\n\t      return this.getPageProp('Contents');\n\t    },\n\t    get resources() {\n\t      return (0, _util.shadow)(this, 'resources', this.getInheritedPageProp('Resources') || _primitives.Dict.empty);\n\t    },\n\t    get mediaBox() {\n\t      var mediaBox = this.getInheritedPageProp('MediaBox', true);\n\t      if (!Array.isArray(mediaBox) || mediaBox.length !== 4) {\n\t        return (0, _util.shadow)(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\n\t      }\n\t      return (0, _util.shadow)(this, 'mediaBox', mediaBox);\n\t    },\n\t    get cropBox() {\n\t      var cropBox = this.getInheritedPageProp('CropBox', true);\n\t      if (!Array.isArray(cropBox) || cropBox.length !== 4) {\n\t        return (0, _util.shadow)(this, 'cropBox', this.mediaBox);\n\t      }\n\t      return (0, _util.shadow)(this, 'cropBox', cropBox);\n\t    },\n\t    get userUnit() {\n\t      var obj = this.getPageProp('UserUnit');\n\t      if (!(0, _util.isNum)(obj) || obj <= 0) {\n\t        obj = DEFAULT_USER_UNIT;\n\t      }\n\t      return (0, _util.shadow)(this, 'userUnit', obj);\n\t    },\n\t    get view() {\n\t      var mediaBox = this.mediaBox,\n\t          cropBox = this.cropBox;\n\t      if (mediaBox === cropBox) {\n\t        return (0, _util.shadow)(this, 'view', mediaBox);\n\t      }\n\t      var intersection = _util.Util.intersect(cropBox, mediaBox);\n\t      return (0, _util.shadow)(this, 'view', intersection || mediaBox);\n\t    },\n\t    get rotate() {\n\t      var rotate = this.getInheritedPageProp('Rotate') || 0;\n\t      if (rotate % 90 !== 0) {\n\t        rotate = 0;\n\t      } else if (rotate >= 360) {\n\t        rotate = rotate % 360;\n\t      } else if (rotate < 0) {\n\t        rotate = (rotate % 360 + 360) % 360;\n\t      }\n\t      return (0, _util.shadow)(this, 'rotate', rotate);\n\t    },\n\t    getContentStream: function Page_getContentStream() {\n\t      var content = this.content;\n\t      var stream;\n\t      if (Array.isArray(content)) {\n\t        var xref = this.xref;\n\t        var i,\n\t            n = content.length;\n\t        var streams = [];\n\t        for (i = 0; i < n; ++i) {\n\t          streams.push(xref.fetchIfRef(content[i]));\n\t        }\n\t        stream = new _stream.StreamsSequenceStream(streams);\n\t      } else if ((0, _primitives.isStream)(content)) {\n\t        stream = content;\n\t      } else {\n\t        stream = new _stream.NullStream();\n\t      }\n\t      return stream;\n\t    },\n\t    loadResources: function Page_loadResources(keys) {\n\t      var _this = this;\n\t\n\t      if (!this.resourcesPromise) {\n\t        this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n\t      }\n\t      return this.resourcesPromise.then(function () {\n\t        var objectLoader = new _obj.ObjectLoader(_this.resources, keys, _this.xref);\n\t        return objectLoader.load();\n\t      });\n\t    },\n\t    getOperatorList: function getOperatorList(_ref2) {\n\t      var _this2 = this;\n\t\n\t      var handler = _ref2.handler,\n\t          task = _ref2.task,\n\t          intent = _ref2.intent,\n\t          renderInteractiveForms = _ref2.renderInteractiveForms;\n\t\n\t      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n\t      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n\t      var partialEvaluator = new _evaluator.PartialEvaluator({\n\t        pdfManager: this.pdfManager,\n\t        xref: this.xref,\n\t        handler: handler,\n\t        pageIndex: this.pageIndex,\n\t        idFactory: this.idFactory,\n\t        fontCache: this.fontCache,\n\t        builtInCMapCache: this.builtInCMapCache,\n\t        options: this.evaluatorOptions,\n\t        pdfFunctionFactory: this.pdfFunctionFactory\n\t      });\n\t      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n\t      var pageListPromise = dataPromises.then(function (_ref3) {\n\t        var _ref4 = _slicedToArray(_ref3, 1),\n\t            contentStream = _ref4[0];\n\t\n\t        var opList = new _evaluator.OperatorList(intent, handler, _this2.pageIndex);\n\t        handler.send('StartRenderPage', {\n\t          transparency: partialEvaluator.hasBlendModes(_this2.resources),\n\t          pageIndex: _this2.pageIndex,\n\t          intent: intent\n\t        });\n\t        return partialEvaluator.getOperatorList({\n\t          stream: contentStream,\n\t          task: task,\n\t          resources: _this2.resources,\n\t          operatorList: opList\n\t        }).then(function () {\n\t          return opList;\n\t        });\n\t      });\n\t      var annotationsPromise = this.pdfManager.ensure(this, 'annotations');\n\t      return Promise.all([pageListPromise, annotationsPromise]).then(function (_ref5) {\n\t        var _ref6 = _slicedToArray(_ref5, 2),\n\t            pageOpList = _ref6[0],\n\t            annotations = _ref6[1];\n\t\n\t        if (annotations.length === 0) {\n\t          pageOpList.flush(true);\n\t          return pageOpList;\n\t        }\n\t        var i,\n\t            ii,\n\t            opListPromises = [];\n\t        for (i = 0, ii = annotations.length; i < ii; i++) {\n\t          if (isAnnotationRenderable(annotations[i], intent)) {\n\t            opListPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderInteractiveForms));\n\t          }\n\t        }\n\t        return Promise.all(opListPromises).then(function (opLists) {\n\t          pageOpList.addOp(_util.OPS.beginAnnotations, []);\n\t          for (i = 0, ii = opLists.length; i < ii; i++) {\n\t            pageOpList.addOpList(opLists[i]);\n\t          }\n\t          pageOpList.addOp(_util.OPS.endAnnotations, []);\n\t          pageOpList.flush(true);\n\t          return pageOpList;\n\t        });\n\t      });\n\t    },\n\t    extractTextContent: function extractTextContent(_ref7) {\n\t      var _this3 = this;\n\t\n\t      var handler = _ref7.handler,\n\t          task = _ref7.task,\n\t          normalizeWhitespace = _ref7.normalizeWhitespace,\n\t          sink = _ref7.sink,\n\t          combineTextItems = _ref7.combineTextItems;\n\t\n\t      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n\t      var resourcesPromise = this.loadResources(['ExtGState', 'XObject', 'Font']);\n\t      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n\t      return dataPromises.then(function (_ref8) {\n\t        var _ref9 = _slicedToArray(_ref8, 1),\n\t            contentStream = _ref9[0];\n\t\n\t        var partialEvaluator = new _evaluator.PartialEvaluator({\n\t          pdfManager: _this3.pdfManager,\n\t          xref: _this3.xref,\n\t          handler: handler,\n\t          pageIndex: _this3.pageIndex,\n\t          idFactory: _this3.idFactory,\n\t          fontCache: _this3.fontCache,\n\t          builtInCMapCache: _this3.builtInCMapCache,\n\t          options: _this3.evaluatorOptions,\n\t          pdfFunctionFactory: _this3.pdfFunctionFactory\n\t        });\n\t        return partialEvaluator.getTextContent({\n\t          stream: contentStream,\n\t          task: task,\n\t          resources: _this3.resources,\n\t          normalizeWhitespace: normalizeWhitespace,\n\t          combineTextItems: combineTextItems,\n\t          sink: sink\n\t        });\n\t      });\n\t    },\n\t\n\t    getAnnotationsData: function Page_getAnnotationsData(intent) {\n\t      var annotations = this.annotations;\n\t      var annotationsData = [];\n\t      for (var i = 0, n = annotations.length; i < n; ++i) {\n\t        if (!intent || isAnnotationRenderable(annotations[i], intent)) {\n\t          annotationsData.push(annotations[i].data);\n\t        }\n\t      }\n\t      return annotationsData;\n\t    },\n\t    get annotations() {\n\t      var annotations = [];\n\t      var annotationRefs = this.getInheritedPageProp('Annots') || [];\n\t      for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n\t        var annotationRef = annotationRefs[i];\n\t        var annotation = _annotation.AnnotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\n\t        if (annotation) {\n\t          annotations.push(annotation);\n\t        }\n\t      }\n\t      return (0, _util.shadow)(this, 'annotations', annotations);\n\t    }\n\t  };\n\t  return Page;\n\t}();\n\tvar PDFDocument = function PDFDocumentClosure() {\n\t  var FINGERPRINT_FIRST_BYTES = 1024;\n\t  var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n\t  function PDFDocument(pdfManager, arg) {\n\t    var stream;\n\t    if ((0, _primitives.isStream)(arg)) {\n\t      stream = arg;\n\t    } else if ((0, _util.isArrayBuffer)(arg)) {\n\t      stream = new _stream.Stream(arg);\n\t    } else {\n\t      throw new Error('PDFDocument: Unknown argument type');\n\t    }\n\t    if (stream.length <= 0) {\n\t      throw new Error('PDFDocument: stream must have data');\n\t    }\n\t    this.pdfManager = pdfManager;\n\t    this.stream = stream;\n\t    this.xref = new _obj.XRef(stream, pdfManager);\n\t    var evaluatorOptions = pdfManager.evaluatorOptions;\n\t    this.pdfFunctionFactory = new _function.PDFFunctionFactory({\n\t      xref: this.xref,\n\t      isEvalSupported: evaluatorOptions.isEvalSupported\n\t    });\n\t  }\n\t  function find(stream, needle, limit, backwards) {\n\t    var pos = stream.pos;\n\t    var end = stream.end;\n\t    var strBuf = [];\n\t    if (pos + limit > end) {\n\t      limit = end - pos;\n\t    }\n\t    for (var n = 0; n < limit; ++n) {\n\t      strBuf.push(String.fromCharCode(stream.getByte()));\n\t    }\n\t    var str = strBuf.join('');\n\t    stream.pos = pos;\n\t    var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n\t    if (index === -1) {\n\t      return false;\n\t    }\n\t    stream.pos += index;\n\t    return true;\n\t  }\n\t  var DocumentInfoValidators = {\n\t    get entries() {\n\t      return (0, _util.shadow)(this, 'entries', {\n\t        Title: _util.isString,\n\t        Author: _util.isString,\n\t        Subject: _util.isString,\n\t        Keywords: _util.isString,\n\t        Creator: _util.isString,\n\t        Producer: _util.isString,\n\t        CreationDate: _util.isString,\n\t        ModDate: _util.isString,\n\t        Trapped: _primitives.isName\n\t      });\n\t    }\n\t  };\n\t  PDFDocument.prototype = {\n\t    parse: function PDFDocument_parse(recoveryMode) {\n\t      this.setup(recoveryMode);\n\t      var version = this.catalog.catDict.get('Version');\n\t      if ((0, _primitives.isName)(version)) {\n\t        this.pdfFormatVersion = version.name;\n\t      }\n\t      try {\n\t        this.acroForm = this.catalog.catDict.get('AcroForm');\n\t        if (this.acroForm) {\n\t          this.xfa = this.acroForm.get('XFA');\n\t          var fields = this.acroForm.get('Fields');\n\t          if ((!fields || !Array.isArray(fields) || fields.length === 0) && !this.xfa) {\n\t            this.acroForm = null;\n\t          }\n\t        }\n\t      } catch (ex) {\n\t        if (ex instanceof _util.MissingDataException) {\n\t          throw ex;\n\t        }\n\t        (0, _util.info)('Something wrong with AcroForm entry');\n\t        this.acroForm = null;\n\t      }\n\t    },\n\t    get linearization() {\n\t      var linearization = null;\n\t      if (this.stream.length) {\n\t        try {\n\t          linearization = _parser.Linearization.create(this.stream);\n\t        } catch (err) {\n\t          if (err instanceof _util.MissingDataException) {\n\t            throw err;\n\t          }\n\t          (0, _util.info)(err);\n\t        }\n\t      }\n\t      return (0, _util.shadow)(this, 'linearization', linearization);\n\t    },\n\t    get startXRef() {\n\t      var stream = this.stream;\n\t      var startXRef = 0;\n\t      var linearization = this.linearization;\n\t      if (linearization) {\n\t        stream.reset();\n\t        if (find(stream, 'endobj', 1024)) {\n\t          startXRef = stream.pos + 6;\n\t        }\n\t      } else {\n\t        var step = 1024;\n\t        var found = false,\n\t            pos = stream.end;\n\t        while (!found && pos > 0) {\n\t          pos -= step - 'startxref'.length;\n\t          if (pos < 0) {\n\t            pos = 0;\n\t          }\n\t          stream.pos = pos;\n\t          found = find(stream, 'startxref', step, true);\n\t        }\n\t        if (found) {\n\t          stream.skip(9);\n\t          var ch;\n\t          do {\n\t            ch = stream.getByte();\n\t          } while ((0, _util.isSpace)(ch));\n\t          var str = '';\n\t          while (ch >= 0x20 && ch <= 0x39) {\n\t            str += String.fromCharCode(ch);\n\t            ch = stream.getByte();\n\t          }\n\t          startXRef = parseInt(str, 10);\n\t          if (isNaN(startXRef)) {\n\t            startXRef = 0;\n\t          }\n\t        }\n\t      }\n\t      return (0, _util.shadow)(this, 'startXRef', startXRef);\n\t    },\n\t    get mainXRefEntriesOffset() {\n\t      var mainXRefEntriesOffset = 0;\n\t      var linearization = this.linearization;\n\t      if (linearization) {\n\t        mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n\t      }\n\t      return (0, _util.shadow)(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n\t    },\n\t    checkHeader: function PDFDocument_checkHeader() {\n\t      var stream = this.stream;\n\t      stream.reset();\n\t      if (find(stream, '%PDF-', 1024)) {\n\t        stream.moveStart();\n\t        var MAX_VERSION_LENGTH = 12;\n\t        var version = '',\n\t            ch;\n\t        while ((ch = stream.getByte()) > 0x20) {\n\t          if (version.length >= MAX_VERSION_LENGTH) {\n\t            break;\n\t          }\n\t          version += String.fromCharCode(ch);\n\t        }\n\t        if (!this.pdfFormatVersion) {\n\t          this.pdfFormatVersion = version.substring(5);\n\t        }\n\t        return;\n\t      }\n\t    },\n\t    parseStartXRef: function PDFDocument_parseStartXRef() {\n\t      var startXRef = this.startXRef;\n\t      this.xref.setStartXRef(startXRef);\n\t    },\n\t    setup: function PDFDocument_setup(recoveryMode) {\n\t      var _this4 = this;\n\t\n\t      this.xref.parse(recoveryMode);\n\t      var pageFactory = {\n\t        createPage: function createPage(pageIndex, dict, ref, fontCache, builtInCMapCache) {\n\t          return new Page({\n\t            pdfManager: _this4.pdfManager,\n\t            xref: _this4.xref,\n\t            pageIndex: pageIndex,\n\t            pageDict: dict,\n\t            ref: ref,\n\t            fontCache: fontCache,\n\t            builtInCMapCache: builtInCMapCache,\n\t            pdfFunctionFactory: _this4.pdfFunctionFactory\n\t          });\n\t        }\n\t      };\n\t      this.catalog = new _obj.Catalog(this.pdfManager, this.xref, pageFactory);\n\t    },\n\t    get numPages() {\n\t      var linearization = this.linearization;\n\t      var num = linearization ? linearization.numPages : this.catalog.numPages;\n\t      return (0, _util.shadow)(this, 'numPages', num);\n\t    },\n\t    get documentInfo() {\n\t      var docInfo = {\n\t        PDFFormatVersion: this.pdfFormatVersion,\n\t        IsAcroFormPresent: !!this.acroForm,\n\t        IsXFAPresent: !!this.xfa\n\t      };\n\t      var infoDict;\n\t      try {\n\t        infoDict = this.xref.trailer.get('Info');\n\t      } catch (err) {\n\t        if (err instanceof _util.MissingDataException) {\n\t          throw err;\n\t        }\n\t        (0, _util.info)('The document information dictionary is invalid.');\n\t      }\n\t      if (infoDict) {\n\t        var validEntries = DocumentInfoValidators.entries;\n\t        for (var key in validEntries) {\n\t          if (infoDict.has(key)) {\n\t            var value = infoDict.get(key);\n\t            if (validEntries[key](value)) {\n\t              docInfo[key] = typeof value !== 'string' ? value : (0, _util.stringToPDFString)(value);\n\t            } else {\n\t              (0, _util.info)('Bad value in document info for \"' + key + '\"');\n\t            }\n\t          }\n\t        }\n\t      }\n\t      return (0, _util.shadow)(this, 'documentInfo', docInfo);\n\t    },\n\t    get fingerprint() {\n\t      var xref = this.xref,\n\t          hash,\n\t          fileID = '';\n\t      var idArray = xref.trailer.get('ID');\n\t      if (Array.isArray(idArray) && idArray[0] && (0, _util.isString)(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n\t        hash = (0, _util.stringToBytes)(idArray[0]);\n\t      } else {\n\t        if (this.stream.ensureRange) {\n\t          this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n\t        }\n\t        hash = (0, _crypto.calculateMD5)(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n\t      }\n\t      for (var i = 0, n = hash.length; i < n; i++) {\n\t        var hex = hash[i].toString(16);\n\t        fileID += hex.length === 1 ? '0' + hex : hex;\n\t      }\n\t      return (0, _util.shadow)(this, 'fingerprint', fileID);\n\t    },\n\t    getPage: function PDFDocument_getPage(pageIndex) {\n\t      return this.catalog.getPage(pageIndex);\n\t    },\n\t    cleanup: function PDFDocument_cleanup() {\n\t      return this.catalog.cleanup();\n\t    }\n\t  };\n\t  return PDFDocument;\n\t}();\n\texports.Page = Page;\n\texports.PDFDocument = PDFDocument;\n\t\n\t/***/ }),\n\t/* 128 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.JpegImage = undefined;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar JpegError = function JpegErrorClosure() {\n\t  function JpegError(msg) {\n\t    this.message = 'JPEG error: ' + msg;\n\t  }\n\t  JpegError.prototype = new Error();\n\t  JpegError.prototype.name = 'JpegError';\n\t  JpegError.constructor = JpegError;\n\t  return JpegError;\n\t}();\n\tvar JpegImage = function JpegImageClosure() {\n\t  var dctZigZag = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\n\t  var dctCos1 = 4017;\n\t  var dctSin1 = 799;\n\t  var dctCos3 = 3406;\n\t  var dctSin3 = 2276;\n\t  var dctCos6 = 1567;\n\t  var dctSin6 = 3784;\n\t  var dctSqrt2 = 5793;\n\t  var dctSqrt1d2 = 2896;\n\t  function JpegImage() {\n\t    this.decodeTransform = null;\n\t    this.colorTransform = -1;\n\t  }\n\t  function buildHuffmanTable(codeLengths, values) {\n\t    var k = 0,\n\t        code = [],\n\t        i,\n\t        j,\n\t        length = 16;\n\t    while (length > 0 && !codeLengths[length - 1]) {\n\t      length--;\n\t    }\n\t    code.push({\n\t      children: [],\n\t      index: 0\n\t    });\n\t    var p = code[0],\n\t        q;\n\t    for (i = 0; i < length; i++) {\n\t      for (j = 0; j < codeLengths[i]; j++) {\n\t        p = code.pop();\n\t        p.children[p.index] = values[k];\n\t        while (p.index > 0) {\n\t          p = code.pop();\n\t        }\n\t        p.index++;\n\t        code.push(p);\n\t        while (code.length <= i) {\n\t          code.push(q = {\n\t            children: [],\n\t            index: 0\n\t          });\n\t          p.children[p.index] = q.children;\n\t          p = q;\n\t        }\n\t        k++;\n\t      }\n\t      if (i + 1 < length) {\n\t        code.push(q = {\n\t          children: [],\n\t          index: 0\n\t        });\n\t        p.children[p.index] = q.children;\n\t        p = q;\n\t      }\n\t    }\n\t    return code[0].children;\n\t  }\n\t  function getBlockBufferOffset(component, row, col) {\n\t    return 64 * ((component.blocksPerLine + 1) * row + col);\n\t  }\n\t  function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n\t    var mcusPerLine = frame.mcusPerLine;\n\t    var progressive = frame.progressive;\n\t    var startOffset = offset,\n\t        bitsData = 0,\n\t        bitsCount = 0;\n\t    function readBit() {\n\t      if (bitsCount > 0) {\n\t        bitsCount--;\n\t        return bitsData >> bitsCount & 1;\n\t      }\n\t      bitsData = data[offset++];\n\t      if (bitsData === 0xFF) {\n\t        var nextByte = data[offset++];\n\t        if (nextByte) {\n\t          throw new JpegError('unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\n\t        }\n\t      }\n\t      bitsCount = 7;\n\t      return bitsData >>> 7;\n\t    }\n\t    function decodeHuffman(tree) {\n\t      var node = tree;\n\t      while (true) {\n\t        node = node[readBit()];\n\t        if (typeof node === 'number') {\n\t          return node;\n\t        }\n\t        if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {\n\t          throw new JpegError('invalid huffman sequence');\n\t        }\n\t      }\n\t    }\n\t    function receive(length) {\n\t      var n = 0;\n\t      while (length > 0) {\n\t        n = n << 1 | readBit();\n\t        length--;\n\t      }\n\t      return n;\n\t    }\n\t    function receiveAndExtend(length) {\n\t      if (length === 1) {\n\t        return readBit() === 1 ? 1 : -1;\n\t      }\n\t      var n = receive(length);\n\t      if (n >= 1 << length - 1) {\n\t        return n;\n\t      }\n\t      return n + (-1 << length) + 1;\n\t    }\n\t    function decodeBaseline(component, offset) {\n\t      var t = decodeHuffman(component.huffmanTableDC);\n\t      var diff = t === 0 ? 0 : receiveAndExtend(t);\n\t      component.blockData[offset] = component.pred += diff;\n\t      var k = 1;\n\t      while (k < 64) {\n\t        var rs = decodeHuffman(component.huffmanTableAC);\n\t        var s = rs & 15,\n\t            r = rs >> 4;\n\t        if (s === 0) {\n\t          if (r < 15) {\n\t            break;\n\t          }\n\t          k += 16;\n\t          continue;\n\t        }\n\t        k += r;\n\t        var z = dctZigZag[k];\n\t        component.blockData[offset + z] = receiveAndExtend(s);\n\t        k++;\n\t      }\n\t    }\n\t    function decodeDCFirst(component, offset) {\n\t      var t = decodeHuffman(component.huffmanTableDC);\n\t      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n\t      component.blockData[offset] = component.pred += diff;\n\t    }\n\t    function decodeDCSuccessive(component, offset) {\n\t      component.blockData[offset] |= readBit() << successive;\n\t    }\n\t    var eobrun = 0;\n\t    function decodeACFirst(component, offset) {\n\t      if (eobrun > 0) {\n\t        eobrun--;\n\t        return;\n\t      }\n\t      var k = spectralStart,\n\t          e = spectralEnd;\n\t      while (k <= e) {\n\t        var rs = decodeHuffman(component.huffmanTableAC);\n\t        var s = rs & 15,\n\t            r = rs >> 4;\n\t        if (s === 0) {\n\t          if (r < 15) {\n\t            eobrun = receive(r) + (1 << r) - 1;\n\t            break;\n\t          }\n\t          k += 16;\n\t          continue;\n\t        }\n\t        k += r;\n\t        var z = dctZigZag[k];\n\t        component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\n\t        k++;\n\t      }\n\t    }\n\t    var successiveACState = 0,\n\t        successiveACNextValue;\n\t    function decodeACSuccessive(component, offset) {\n\t      var k = spectralStart;\n\t      var e = spectralEnd;\n\t      var r = 0;\n\t      var s;\n\t      var rs;\n\t      while (k <= e) {\n\t        var z = dctZigZag[k];\n\t        switch (successiveACState) {\n\t          case 0:\n\t            rs = decodeHuffman(component.huffmanTableAC);\n\t            s = rs & 15;\n\t            r = rs >> 4;\n\t            if (s === 0) {\n\t              if (r < 15) {\n\t                eobrun = receive(r) + (1 << r);\n\t                successiveACState = 4;\n\t              } else {\n\t                r = 16;\n\t                successiveACState = 1;\n\t              }\n\t            } else {\n\t              if (s !== 1) {\n\t                throw new JpegError('invalid ACn encoding');\n\t              }\n\t              successiveACNextValue = receiveAndExtend(s);\n\t              successiveACState = r ? 2 : 3;\n\t            }\n\t            continue;\n\t          case 1:\n\t          case 2:\n\t            if (component.blockData[offset + z]) {\n\t              component.blockData[offset + z] += readBit() << successive;\n\t            } else {\n\t              r--;\n\t              if (r === 0) {\n\t                successiveACState = successiveACState === 2 ? 3 : 0;\n\t              }\n\t            }\n\t            break;\n\t          case 3:\n\t            if (component.blockData[offset + z]) {\n\t              component.blockData[offset + z] += readBit() << successive;\n\t            } else {\n\t              component.blockData[offset + z] = successiveACNextValue << successive;\n\t              successiveACState = 0;\n\t            }\n\t            break;\n\t          case 4:\n\t            if (component.blockData[offset + z]) {\n\t              component.blockData[offset + z] += readBit() << successive;\n\t            }\n\t            break;\n\t        }\n\t        k++;\n\t      }\n\t      if (successiveACState === 4) {\n\t        eobrun--;\n\t        if (eobrun === 0) {\n\t          successiveACState = 0;\n\t        }\n\t      }\n\t    }\n\t    function decodeMcu(component, decode, mcu, row, col) {\n\t      var mcuRow = mcu / mcusPerLine | 0;\n\t      var mcuCol = mcu % mcusPerLine;\n\t      var blockRow = mcuRow * component.v + row;\n\t      var blockCol = mcuCol * component.h + col;\n\t      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n\t      decode(component, offset);\n\t    }\n\t    function decodeBlock(component, decode, mcu) {\n\t      var blockRow = mcu / component.blocksPerLine | 0;\n\t      var blockCol = mcu % component.blocksPerLine;\n\t      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n\t      decode(component, offset);\n\t    }\n\t    var componentsLength = components.length;\n\t    var component, i, j, k, n;\n\t    var decodeFn;\n\t    if (progressive) {\n\t      if (spectralStart === 0) {\n\t        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n\t      } else {\n\t        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n\t      }\n\t    } else {\n\t      decodeFn = decodeBaseline;\n\t    }\n\t    var mcu = 0,\n\t        fileMarker;\n\t    var mcuExpected;\n\t    if (componentsLength === 1) {\n\t      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n\t    } else {\n\t      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n\t    }\n\t    var h, v;\n\t    while (mcu < mcuExpected) {\n\t      var mcuToRead = resetInterval ? Math.min(mcuExpected - mcu, resetInterval) : mcuExpected;\n\t      for (i = 0; i < componentsLength; i++) {\n\t        components[i].pred = 0;\n\t      }\n\t      eobrun = 0;\n\t      if (componentsLength === 1) {\n\t        component = components[0];\n\t        for (n = 0; n < mcuToRead; n++) {\n\t          decodeBlock(component, decodeFn, mcu);\n\t          mcu++;\n\t        }\n\t      } else {\n\t        for (n = 0; n < mcuToRead; n++) {\n\t          for (i = 0; i < componentsLength; i++) {\n\t            component = components[i];\n\t            h = component.h;\n\t            v = component.v;\n\t            for (j = 0; j < v; j++) {\n\t              for (k = 0; k < h; k++) {\n\t                decodeMcu(component, decodeFn, mcu, j, k);\n\t              }\n\t            }\n\t          }\n\t          mcu++;\n\t        }\n\t      }\n\t      bitsCount = 0;\n\t      fileMarker = findNextFileMarker(data, offset);\n\t      if (fileMarker && fileMarker.invalid) {\n\t        (0, _util.warn)('decodeScan - unexpected MCU data, next marker is: ' + fileMarker.invalid);\n\t        offset = fileMarker.offset;\n\t      }\n\t      var marker = fileMarker && fileMarker.marker;\n\t      if (!marker || marker <= 0xFF00) {\n\t        throw new JpegError('marker was not found');\n\t      }\n\t      if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n\t        offset += 2;\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    fileMarker = findNextFileMarker(data, offset);\n\t    if (fileMarker && fileMarker.invalid) {\n\t      (0, _util.warn)('decodeScan - unexpected Scan data, next marker is: ' + fileMarker.invalid);\n\t      offset = fileMarker.offset;\n\t    }\n\t    return offset - startOffset;\n\t  }\n\t  function quantizeAndInverse(component, blockBufferOffset, p) {\n\t    var qt = component.quantizationTable,\n\t        blockData = component.blockData;\n\t    var v0, v1, v2, v3, v4, v5, v6, v7;\n\t    var p0, p1, p2, p3, p4, p5, p6, p7;\n\t    var t;\n\t    if (!qt) {\n\t      throw new JpegError('missing required Quantization Table.');\n\t    }\n\t    for (var row = 0; row < 64; row += 8) {\n\t      p0 = blockData[blockBufferOffset + row];\n\t      p1 = blockData[blockBufferOffset + row + 1];\n\t      p2 = blockData[blockBufferOffset + row + 2];\n\t      p3 = blockData[blockBufferOffset + row + 3];\n\t      p4 = blockData[blockBufferOffset + row + 4];\n\t      p5 = blockData[blockBufferOffset + row + 5];\n\t      p6 = blockData[blockBufferOffset + row + 6];\n\t      p7 = blockData[blockBufferOffset + row + 7];\n\t      p0 *= qt[row];\n\t      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n\t        t = dctSqrt2 * p0 + 512 >> 10;\n\t        p[row] = t;\n\t        p[row + 1] = t;\n\t        p[row + 2] = t;\n\t        p[row + 3] = t;\n\t        p[row + 4] = t;\n\t        p[row + 5] = t;\n\t        p[row + 6] = t;\n\t        p[row + 7] = t;\n\t        continue;\n\t      }\n\t      p1 *= qt[row + 1];\n\t      p2 *= qt[row + 2];\n\t      p3 *= qt[row + 3];\n\t      p4 *= qt[row + 4];\n\t      p5 *= qt[row + 5];\n\t      p6 *= qt[row + 6];\n\t      p7 *= qt[row + 7];\n\t      v0 = dctSqrt2 * p0 + 128 >> 8;\n\t      v1 = dctSqrt2 * p4 + 128 >> 8;\n\t      v2 = p2;\n\t      v3 = p6;\n\t      v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n\t      v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n\t      v5 = p3 << 4;\n\t      v6 = p5 << 4;\n\t      v0 = v0 + v1 + 1 >> 1;\n\t      v1 = v0 - v1;\n\t      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n\t      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n\t      v3 = t;\n\t      v4 = v4 + v6 + 1 >> 1;\n\t      v6 = v4 - v6;\n\t      v7 = v7 + v5 + 1 >> 1;\n\t      v5 = v7 - v5;\n\t      v0 = v0 + v3 + 1 >> 1;\n\t      v3 = v0 - v3;\n\t      v1 = v1 + v2 + 1 >> 1;\n\t      v2 = v1 - v2;\n\t      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n\t      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n\t      v7 = t;\n\t      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n\t      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n\t      v6 = t;\n\t      p[row] = v0 + v7;\n\t      p[row + 7] = v0 - v7;\n\t      p[row + 1] = v1 + v6;\n\t      p[row + 6] = v1 - v6;\n\t      p[row + 2] = v2 + v5;\n\t      p[row + 5] = v2 - v5;\n\t      p[row + 3] = v3 + v4;\n\t      p[row + 4] = v3 - v4;\n\t    }\n\t    for (var col = 0; col < 8; ++col) {\n\t      p0 = p[col];\n\t      p1 = p[col + 8];\n\t      p2 = p[col + 16];\n\t      p3 = p[col + 24];\n\t      p4 = p[col + 32];\n\t      p5 = p[col + 40];\n\t      p6 = p[col + 48];\n\t      p7 = p[col + 56];\n\t      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n\t        t = dctSqrt2 * p0 + 8192 >> 14;\n\t        t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\n\t        blockData[blockBufferOffset + col] = t;\n\t        blockData[blockBufferOffset + col + 8] = t;\n\t        blockData[blockBufferOffset + col + 16] = t;\n\t        blockData[blockBufferOffset + col + 24] = t;\n\t        blockData[blockBufferOffset + col + 32] = t;\n\t        blockData[blockBufferOffset + col + 40] = t;\n\t        blockData[blockBufferOffset + col + 48] = t;\n\t        blockData[blockBufferOffset + col + 56] = t;\n\t        continue;\n\t      }\n\t      v0 = dctSqrt2 * p0 + 2048 >> 12;\n\t      v1 = dctSqrt2 * p4 + 2048 >> 12;\n\t      v2 = p2;\n\t      v3 = p6;\n\t      v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n\t      v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n\t      v5 = p3;\n\t      v6 = p5;\n\t      v0 = (v0 + v1 + 1 >> 1) + 4112;\n\t      v1 = v0 - v1;\n\t      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n\t      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n\t      v3 = t;\n\t      v4 = v4 + v6 + 1 >> 1;\n\t      v6 = v4 - v6;\n\t      v7 = v7 + v5 + 1 >> 1;\n\t      v5 = v7 - v5;\n\t      v0 = v0 + v3 + 1 >> 1;\n\t      v3 = v0 - v3;\n\t      v1 = v1 + v2 + 1 >> 1;\n\t      v2 = v1 - v2;\n\t      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n\t      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n\t      v7 = t;\n\t      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n\t      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n\t      v6 = t;\n\t      p0 = v0 + v7;\n\t      p7 = v0 - v7;\n\t      p1 = v1 + v6;\n\t      p6 = v1 - v6;\n\t      p2 = v2 + v5;\n\t      p5 = v2 - v5;\n\t      p3 = v3 + v4;\n\t      p4 = v3 - v4;\n\t      p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n\t      p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n\t      p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n\t      p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n\t      p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n\t      p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n\t      p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n\t      p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n\t      blockData[blockBufferOffset + col] = p0;\n\t      blockData[blockBufferOffset + col + 8] = p1;\n\t      blockData[blockBufferOffset + col + 16] = p2;\n\t      blockData[blockBufferOffset + col + 24] = p3;\n\t      blockData[blockBufferOffset + col + 32] = p4;\n\t      blockData[blockBufferOffset + col + 40] = p5;\n\t      blockData[blockBufferOffset + col + 48] = p6;\n\t      blockData[blockBufferOffset + col + 56] = p7;\n\t    }\n\t  }\n\t  function buildComponentData(frame, component) {\n\t    var blocksPerLine = component.blocksPerLine;\n\t    var blocksPerColumn = component.blocksPerColumn;\n\t    var computationBuffer = new Int16Array(64);\n\t    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n\t      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n\t        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n\t        quantizeAndInverse(component, offset, computationBuffer);\n\t      }\n\t    }\n\t    return component.blockData;\n\t  }\n\t  function findNextFileMarker(data, currentPos, startPos) {\n\t    function peekUint16(pos) {\n\t      return data[pos] << 8 | data[pos + 1];\n\t    }\n\t    var maxPos = data.length - 1;\n\t    var newPos = startPos < currentPos ? startPos : currentPos;\n\t    if (currentPos >= maxPos) {\n\t      return null;\n\t    }\n\t    var currentMarker = peekUint16(currentPos);\n\t    if (currentMarker >= 0xFFC0 && currentMarker <= 0xFFFE) {\n\t      return {\n\t        invalid: null,\n\t        marker: currentMarker,\n\t        offset: currentPos\n\t      };\n\t    }\n\t    var newMarker = peekUint16(newPos);\n\t    while (!(newMarker >= 0xFFC0 && newMarker <= 0xFFFE)) {\n\t      if (++newPos >= maxPos) {\n\t        return null;\n\t      }\n\t      newMarker = peekUint16(newPos);\n\t    }\n\t    return {\n\t      invalid: currentMarker.toString(16),\n\t      marker: newMarker,\n\t      offset: newPos\n\t    };\n\t  }\n\t  JpegImage.prototype = {\n\t    parse: function parse(data) {\n\t      function readUint16() {\n\t        var value = data[offset] << 8 | data[offset + 1];\n\t        offset += 2;\n\t        return value;\n\t      }\n\t      function readDataBlock() {\n\t        var length = readUint16();\n\t        var endOffset = offset + length - 2;\n\t        var fileMarker = findNextFileMarker(data, endOffset, offset);\n\t        if (fileMarker && fileMarker.invalid) {\n\t          (0, _util.warn)('readDataBlock - incorrect length, next marker is: ' + fileMarker.invalid);\n\t          endOffset = fileMarker.offset;\n\t        }\n\t        var array = data.subarray(offset, endOffset);\n\t        offset += array.length;\n\t        return array;\n\t      }\n\t      function prepareComponents(frame) {\n\t        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n\t        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n\t        for (var i = 0; i < frame.components.length; i++) {\n\t          component = frame.components[i];\n\t          var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n\t          var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n\t          var blocksPerLineForMcu = mcusPerLine * component.h;\n\t          var blocksPerColumnForMcu = mcusPerColumn * component.v;\n\t          var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n\t          component.blockData = new Int16Array(blocksBufferSize);\n\t          component.blocksPerLine = blocksPerLine;\n\t          component.blocksPerColumn = blocksPerColumn;\n\t        }\n\t        frame.mcusPerLine = mcusPerLine;\n\t        frame.mcusPerColumn = mcusPerColumn;\n\t      }\n\t      var offset = 0;\n\t      var jfif = null;\n\t      var adobe = null;\n\t      var frame, resetInterval;\n\t      var quantizationTables = [];\n\t      var huffmanTablesAC = [],\n\t          huffmanTablesDC = [];\n\t      var fileMarker = readUint16();\n\t      if (fileMarker !== 0xFFD8) {\n\t        throw new JpegError('SOI not found');\n\t      }\n\t      fileMarker = readUint16();\n\t      while (fileMarker !== 0xFFD9) {\n\t        var i, j, l;\n\t        switch (fileMarker) {\n\t          case 0xFFE0:\n\t          case 0xFFE1:\n\t          case 0xFFE2:\n\t          case 0xFFE3:\n\t          case 0xFFE4:\n\t          case 0xFFE5:\n\t          case 0xFFE6:\n\t          case 0xFFE7:\n\t          case 0xFFE8:\n\t          case 0xFFE9:\n\t          case 0xFFEA:\n\t          case 0xFFEB:\n\t          case 0xFFEC:\n\t          case 0xFFED:\n\t          case 0xFFEE:\n\t          case 0xFFEF:\n\t          case 0xFFFE:\n\t            var appData = readDataBlock();\n\t            if (fileMarker === 0xFFE0) {\n\t              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n\t                jfif = {\n\t                  version: {\n\t                    major: appData[5],\n\t                    minor: appData[6]\n\t                  },\n\t                  densityUnits: appData[7],\n\t                  xDensity: appData[8] << 8 | appData[9],\n\t                  yDensity: appData[10] << 8 | appData[11],\n\t                  thumbWidth: appData[12],\n\t                  thumbHeight: appData[13],\n\t                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n\t                };\n\t              }\n\t            }\n\t            if (fileMarker === 0xFFEE) {\n\t              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\n\t                adobe = {\n\t                  version: appData[5] << 8 | appData[6],\n\t                  flags0: appData[7] << 8 | appData[8],\n\t                  flags1: appData[9] << 8 | appData[10],\n\t                  transformCode: appData[11]\n\t                };\n\t              }\n\t            }\n\t            break;\n\t          case 0xFFDB:\n\t            var quantizationTablesLength = readUint16();\n\t            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n\t            var z;\n\t            while (offset < quantizationTablesEnd) {\n\t              var quantizationTableSpec = data[offset++];\n\t              var tableData = new Uint16Array(64);\n\t              if (quantizationTableSpec >> 4 === 0) {\n\t                for (j = 0; j < 64; j++) {\n\t                  z = dctZigZag[j];\n\t                  tableData[z] = data[offset++];\n\t                }\n\t              } else if (quantizationTableSpec >> 4 === 1) {\n\t                for (j = 0; j < 64; j++) {\n\t                  z = dctZigZag[j];\n\t                  tableData[z] = readUint16();\n\t                }\n\t              } else {\n\t                throw new JpegError('DQT - invalid table spec');\n\t              }\n\t              quantizationTables[quantizationTableSpec & 15] = tableData;\n\t            }\n\t            break;\n\t          case 0xFFC0:\n\t          case 0xFFC1:\n\t          case 0xFFC2:\n\t            if (frame) {\n\t              throw new JpegError('Only single frame JPEGs supported');\n\t            }\n\t            readUint16();\n\t            frame = {};\n\t            frame.extended = fileMarker === 0xFFC1;\n\t            frame.progressive = fileMarker === 0xFFC2;\n\t            frame.precision = data[offset++];\n\t            frame.scanLines = readUint16();\n\t            frame.samplesPerLine = readUint16();\n\t            frame.components = [];\n\t            frame.componentIds = {};\n\t            var componentsCount = data[offset++],\n\t                componentId;\n\t            var maxH = 0,\n\t                maxV = 0;\n\t            for (i = 0; i < componentsCount; i++) {\n\t              componentId = data[offset];\n\t              var h = data[offset + 1] >> 4;\n\t              var v = data[offset + 1] & 15;\n\t              if (maxH < h) {\n\t                maxH = h;\n\t              }\n\t              if (maxV < v) {\n\t                maxV = v;\n\t              }\n\t              var qId = data[offset + 2];\n\t              l = frame.components.push({\n\t                h: h,\n\t                v: v,\n\t                quantizationId: qId,\n\t                quantizationTable: null\n\t              });\n\t              frame.componentIds[componentId] = l - 1;\n\t              offset += 3;\n\t            }\n\t            frame.maxH = maxH;\n\t            frame.maxV = maxV;\n\t            prepareComponents(frame);\n\t            break;\n\t          case 0xFFC4:\n\t            var huffmanLength = readUint16();\n\t            for (i = 2; i < huffmanLength;) {\n\t              var huffmanTableSpec = data[offset++];\n\t              var codeLengths = new Uint8Array(16);\n\t              var codeLengthSum = 0;\n\t              for (j = 0; j < 16; j++, offset++) {\n\t                codeLengthSum += codeLengths[j] = data[offset];\n\t              }\n\t              var huffmanValues = new Uint8Array(codeLengthSum);\n\t              for (j = 0; j < codeLengthSum; j++, offset++) {\n\t                huffmanValues[j] = data[offset];\n\t              }\n\t              i += 17 + codeLengthSum;\n\t              (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n\t            }\n\t            break;\n\t          case 0xFFDD:\n\t            readUint16();\n\t            resetInterval = readUint16();\n\t            break;\n\t          case 0xFFDA:\n\t            readUint16();\n\t            var selectorsCount = data[offset++];\n\t            var components = [],\n\t                component;\n\t            for (i = 0; i < selectorsCount; i++) {\n\t              var componentIndex = frame.componentIds[data[offset++]];\n\t              component = frame.components[componentIndex];\n\t              var tableSpec = data[offset++];\n\t              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n\t              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n\t              components.push(component);\n\t            }\n\t            var spectralStart = data[offset++];\n\t            var spectralEnd = data[offset++];\n\t            var successiveApproximation = data[offset++];\n\t            var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15);\n\t            offset += processed;\n\t            break;\n\t          case 0xFFFF:\n\t            if (data[offset] !== 0xFF) {\n\t              offset--;\n\t            }\n\t            break;\n\t          default:\n\t            if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n\t              offset -= 3;\n\t              break;\n\t            }\n\t            throw new JpegError('unknown marker ' + fileMarker.toString(16));\n\t        }\n\t        fileMarker = readUint16();\n\t      }\n\t      this.width = frame.samplesPerLine;\n\t      this.height = frame.scanLines;\n\t      this.jfif = jfif;\n\t      this.adobe = adobe;\n\t      this.components = [];\n\t      for (i = 0; i < frame.components.length; i++) {\n\t        component = frame.components[i];\n\t        var quantizationTable = quantizationTables[component.quantizationId];\n\t        if (quantizationTable) {\n\t          component.quantizationTable = quantizationTable;\n\t        }\n\t        this.components.push({\n\t          output: buildComponentData(frame, component),\n\t          scaleX: component.h / frame.maxH,\n\t          scaleY: component.v / frame.maxV,\n\t          blocksPerLine: component.blocksPerLine,\n\t          blocksPerColumn: component.blocksPerColumn\n\t        });\n\t      }\n\t      this.numComponents = this.components.length;\n\t    },\n\t    _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n\t      var scaleX = this.width / width,\n\t          scaleY = this.height / height;\n\t      var component, componentScaleX, componentScaleY, blocksPerScanline;\n\t      var x, y, i, j, k;\n\t      var index;\n\t      var offset = 0;\n\t      var output;\n\t      var numComponents = this.components.length;\n\t      var dataLength = width * height * numComponents;\n\t      var data = new Uint8ClampedArray(dataLength);\n\t      var xScaleBlockOffset = new Uint32Array(width);\n\t      var mask3LSB = 0xfffffff8;\n\t      for (i = 0; i < numComponents; i++) {\n\t        component = this.components[i];\n\t        componentScaleX = component.scaleX * scaleX;\n\t        componentScaleY = component.scaleY * scaleY;\n\t        offset = i;\n\t        output = component.output;\n\t        blocksPerScanline = component.blocksPerLine + 1 << 3;\n\t        for (x = 0; x < width; x++) {\n\t          j = 0 | x * componentScaleX;\n\t          xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n\t        }\n\t        for (y = 0; y < height; y++) {\n\t          j = 0 | y * componentScaleY;\n\t          index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n\t          for (x = 0; x < width; x++) {\n\t            data[offset] = output[index + xScaleBlockOffset[x]];\n\t            offset += numComponents;\n\t          }\n\t        }\n\t      }\n\t      var transform = this.decodeTransform;\n\t      if (transform) {\n\t        for (i = 0; i < dataLength;) {\n\t          for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n\t            data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n\t          }\n\t        }\n\t      }\n\t      return data;\n\t    },\n\t    _isColorConversionNeeded: function _isColorConversionNeeded() {\n\t      if (this.adobe) {\n\t        return !!this.adobe.transformCode;\n\t      }\n\t      if (this.numComponents === 3) {\n\t        if (this.colorTransform === 0) {\n\t          return false;\n\t        }\n\t        return true;\n\t      }\n\t      if (this.colorTransform === 1) {\n\t        return true;\n\t      }\n\t      return false;\n\t    },\n\t\n\t    _convertYccToRgb: function convertYccToRgb(data) {\n\t      var Y, Cb, Cr;\n\t      for (var i = 0, length = data.length; i < length; i += 3) {\n\t        Y = data[i];\n\t        Cb = data[i + 1];\n\t        Cr = data[i + 2];\n\t        data[i] = Y - 179.456 + 1.402 * Cr;\n\t        data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n\t        data[i + 2] = Y - 226.816 + 1.772 * Cb;\n\t      }\n\t      return data;\n\t    },\n\t    _convertYcckToRgb: function convertYcckToRgb(data) {\n\t      var Y, Cb, Cr, k;\n\t      var offset = 0;\n\t      for (var i = 0, length = data.length; i < length; i += 4) {\n\t        Y = data[i];\n\t        Cb = data[i + 1];\n\t        Cr = data[i + 2];\n\t        k = data[i + 3];\n\t        data[offset++] = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n\t        data[offset++] = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n\t        data[offset++] = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n\t      }\n\t      return data;\n\t    },\n\t    _convertYcckToCmyk: function convertYcckToCmyk(data) {\n\t      var Y, Cb, Cr;\n\t      for (var i = 0, length = data.length; i < length; i += 4) {\n\t        Y = data[i];\n\t        Cb = data[i + 1];\n\t        Cr = data[i + 2];\n\t        data[i] = 434.456 - Y - 1.402 * Cr;\n\t        data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n\t        data[i + 2] = 481.816 - Y - 1.772 * Cb;\n\t      }\n\t      return data;\n\t    },\n\t    _convertCmykToRgb: function convertCmykToRgb(data) {\n\t      var c, m, y, k;\n\t      var offset = 0;\n\t      var scale = 1 / 255;\n\t      for (var i = 0, length = data.length; i < length; i += 4) {\n\t        c = data[i] * scale;\n\t        m = data[i + 1] * scale;\n\t        y = data[i + 2] * scale;\n\t        k = data[i + 3] * scale;\n\t        data[offset++] = 255 + c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) - k * (21.86122147463605 * k + 189.48180835922747);\n\t        data[offset++] = 255 + c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) - k * (20.737325471181034 * k + 187.80453709719578);\n\t        data[offset++] = 255 + c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 193.58209356861505) - k * (22.33816807309886 * k + 180.12613974708367);\n\t      }\n\t      return data;\n\t    },\n\t    getData: function getData(width, height, forceRGBoutput) {\n\t      if (this.numComponents > 4) {\n\t        throw new JpegError('Unsupported color mode');\n\t      }\n\t      var data = this._getLinearizedBlockData(width, height);\n\t      if (this.numComponents === 1 && forceRGBoutput) {\n\t        var dataLength = data.length;\n\t        var rgbData = new Uint8ClampedArray(dataLength * 3);\n\t        var offset = 0;\n\t        for (var i = 0; i < dataLength; i++) {\n\t          var grayColor = data[i];\n\t          rgbData[offset++] = grayColor;\n\t          rgbData[offset++] = grayColor;\n\t          rgbData[offset++] = grayColor;\n\t        }\n\t        return rgbData;\n\t      } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\n\t        return this._convertYccToRgb(data);\n\t      } else if (this.numComponents === 4) {\n\t        if (this._isColorConversionNeeded()) {\n\t          if (forceRGBoutput) {\n\t            return this._convertYcckToRgb(data);\n\t          }\n\t          return this._convertYcckToCmyk(data);\n\t        } else if (forceRGBoutput) {\n\t          return this._convertCmykToRgb(data);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t  };\n\t  return JpegImage;\n\t}();\n\texports.JpegImage = JpegImage;\n\t\n\t/***/ }),\n\t/* 129 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.CCITTFaxStream = undefined;\n\t\n\tvar _primitives = __w_pdfjs_require__(2);\n\t\n\tvar _ccitt = __w_pdfjs_require__(130);\n\t\n\tvar _stream = __w_pdfjs_require__(5);\n\t\n\tvar CCITTFaxStream = function CCITTFaxStreamClosure() {\n\t  function CCITTFaxStream(str, maybeLength, params) {\n\t    this.str = str;\n\t    this.dict = str.dict;\n\t    if (!(0, _primitives.isDict)(params)) {\n\t      params = _primitives.Dict.empty;\n\t    }\n\t    var source = {\n\t      next: function next() {\n\t        return str.getByte();\n\t      }\n\t    };\n\t    this.ccittFaxDecoder = new _ccitt.CCITTFaxDecoder(source, {\n\t      K: params.get('K'),\n\t      EndOfLine: params.get('EndOfLine'),\n\t      EncodedByteAlign: params.get('EncodedByteAlign'),\n\t      Columns: params.get('Columns'),\n\t      Rows: params.get('Rows'),\n\t      EndOfBlock: params.get('EndOfBlock'),\n\t      BlackIs1: params.get('BlackIs1')\n\t    });\n\t    _stream.DecodeStream.call(this, maybeLength);\n\t  }\n\t  CCITTFaxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n\t  CCITTFaxStream.prototype.readBlock = function () {\n\t    while (!this.eof) {\n\t      var c = this.ccittFaxDecoder.readNextChar();\n\t      if (c === -1) {\n\t        this.eof = true;\n\t        return;\n\t      }\n\t      this.ensureBuffer(this.bufferLength + 1);\n\t      this.buffer[this.bufferLength++] = c;\n\t    }\n\t  };\n\t  return CCITTFaxStream;\n\t}();\n\texports.CCITTFaxStream = CCITTFaxStream;\n\t\n\t/***/ }),\n\t/* 130 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.CCITTFaxDecoder = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar CCITTFaxDecoder = function CCITTFaxDecoder() {\n\t  var ccittEOL = -2;\n\t  var ccittEOF = -1;\n\t  var twoDimPass = 0;\n\t  var twoDimHoriz = 1;\n\t  var twoDimVert0 = 2;\n\t  var twoDimVertR1 = 3;\n\t  var twoDimVertL1 = 4;\n\t  var twoDimVertR2 = 5;\n\t  var twoDimVertL2 = 6;\n\t  var twoDimVertR3 = 7;\n\t  var twoDimVertL3 = 8;\n\t  var twoDimTable = [[-1, -1], [-1, -1], [7, twoDimVertL3], [7, twoDimVertR3], [6, twoDimVertL2], [6, twoDimVertL2], [6, twoDimVertR2], [6, twoDimVertR2], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0]];\n\t  var whiteTable1 = [[-1, -1], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]];\n\t  var whiteTable2 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]];\n\t  var blackTable1 = [[-1, -1], [-1, -1], [12, ccittEOL], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]];\n\t  var blackTable2 = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]];\n\t  var blackTable3 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];\n\t  function CCITTFaxDecoder(source) {\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    if (!source || typeof source.next !== 'function') {\n\t      throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n\t    }\n\t    this.source = source;\n\t    this.eof = false;\n\t    this.encoding = options['K'] || 0;\n\t    this.eoline = options['EndOfLine'] || false;\n\t    this.byteAlign = options['EncodedByteAlign'] || false;\n\t    this.columns = options['Columns'] || 1728;\n\t    this.rows = options['Rows'] || 0;\n\t    var eoblock = options['EndOfBlock'];\n\t    if (eoblock === null || eoblock === undefined) {\n\t      eoblock = true;\n\t    }\n\t    this.eoblock = eoblock;\n\t    this.black = options['BlackIs1'] || false;\n\t    this.codingLine = new Uint32Array(this.columns + 1);\n\t    this.refLine = new Uint32Array(this.columns + 2);\n\t    this.codingLine[0] = this.columns;\n\t    this.codingPos = 0;\n\t    this.row = 0;\n\t    this.nextLine2D = this.encoding < 0;\n\t    this.inputBits = 0;\n\t    this.inputBuf = 0;\n\t    this.outputBits = 0;\n\t    this.rowsDone = false;\n\t    var code1 = void 0;\n\t    while ((code1 = this._lookBits(12)) === 0) {\n\t      this._eatBits(1);\n\t    }\n\t    if (code1 === 1) {\n\t      this._eatBits(12);\n\t    }\n\t    if (this.encoding > 0) {\n\t      this.nextLine2D = !this._lookBits(1);\n\t      this._eatBits(1);\n\t    }\n\t  }\n\t  CCITTFaxDecoder.prototype = {\n\t    readNextChar: function readNextChar() {\n\t      if (this.eof) {\n\t        return -1;\n\t      }\n\t      var refLine = this.refLine;\n\t      var codingLine = this.codingLine;\n\t      var columns = this.columns;\n\t      var refPos = void 0,\n\t          blackPixels = void 0,\n\t          bits = void 0,\n\t          i = void 0;\n\t      if (this.outputBits === 0) {\n\t        if (this.rowsDone) {\n\t          this.eof = true;\n\t        }\n\t        if (this.eof) {\n\t          return -1;\n\t        }\n\t        this.err = false;\n\t        var code1 = void 0,\n\t            code2 = void 0,\n\t            code3 = void 0;\n\t        if (this.nextLine2D) {\n\t          for (i = 0; codingLine[i] < columns; ++i) {\n\t            refLine[i] = codingLine[i];\n\t          }\n\t          refLine[i++] = columns;\n\t          refLine[i] = columns;\n\t          codingLine[0] = 0;\n\t          this.codingPos = 0;\n\t          refPos = 0;\n\t          blackPixels = 0;\n\t          while (codingLine[this.codingPos] < columns) {\n\t            code1 = this._getTwoDimCode();\n\t            switch (code1) {\n\t              case twoDimPass:\n\t                this._addPixels(refLine[refPos + 1], blackPixels);\n\t                if (refLine[refPos + 1] < columns) {\n\t                  refPos += 2;\n\t                }\n\t                break;\n\t              case twoDimHoriz:\n\t                code1 = code2 = 0;\n\t                if (blackPixels) {\n\t                  do {\n\t                    code1 += code3 = this._getBlackCode();\n\t                  } while (code3 >= 64);\n\t                  do {\n\t                    code2 += code3 = this._getWhiteCode();\n\t                  } while (code3 >= 64);\n\t                } else {\n\t                  do {\n\t                    code1 += code3 = this._getWhiteCode();\n\t                  } while (code3 >= 64);\n\t                  do {\n\t                    code2 += code3 = this._getBlackCode();\n\t                  } while (code3 >= 64);\n\t                }\n\t                this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n\t                if (codingLine[this.codingPos] < columns) {\n\t                  this._addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n\t                }\n\t                while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t                  refPos += 2;\n\t                }\n\t                break;\n\t              case twoDimVertR3:\n\t                this._addPixels(refLine[refPos] + 3, blackPixels);\n\t                blackPixels ^= 1;\n\t                if (codingLine[this.codingPos] < columns) {\n\t                  ++refPos;\n\t                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t                    refPos += 2;\n\t                  }\n\t                }\n\t                break;\n\t              case twoDimVertR2:\n\t                this._addPixels(refLine[refPos] + 2, blackPixels);\n\t                blackPixels ^= 1;\n\t                if (codingLine[this.codingPos] < columns) {\n\t                  ++refPos;\n\t                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t                    refPos += 2;\n\t                  }\n\t                }\n\t                break;\n\t              case twoDimVertR1:\n\t                this._addPixels(refLine[refPos] + 1, blackPixels);\n\t                blackPixels ^= 1;\n\t                if (codingLine[this.codingPos] < columns) {\n\t                  ++refPos;\n\t                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t                    refPos += 2;\n\t                  }\n\t                }\n\t                break;\n\t              case twoDimVert0:\n\t                this._addPixels(refLine[refPos], blackPixels);\n\t                blackPixels ^= 1;\n\t                if (codingLine[this.codingPos] < columns) {\n\t                  ++refPos;\n\t                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t                    refPos += 2;\n\t                  }\n\t                }\n\t                break;\n\t              case twoDimVertL3:\n\t                this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n\t                blackPixels ^= 1;\n\t                if (codingLine[this.codingPos] < columns) {\n\t                  if (refPos > 0) {\n\t                    --refPos;\n\t                  } else {\n\t                    ++refPos;\n\t                  }\n\t                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t                    refPos += 2;\n\t                  }\n\t                }\n\t                break;\n\t              case twoDimVertL2:\n\t                this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n\t                blackPixels ^= 1;\n\t                if (codingLine[this.codingPos] < columns) {\n\t                  if (refPos > 0) {\n\t                    --refPos;\n\t                  } else {\n\t                    ++refPos;\n\t                  }\n\t                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t                    refPos += 2;\n\t                  }\n\t                }\n\t                break;\n\t              case twoDimVertL1:\n\t                this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n\t                blackPixels ^= 1;\n\t                if (codingLine[this.codingPos] < columns) {\n\t                  if (refPos > 0) {\n\t                    --refPos;\n\t                  } else {\n\t                    ++refPos;\n\t                  }\n\t                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t                    refPos += 2;\n\t                  }\n\t                }\n\t                break;\n\t              case ccittEOF:\n\t                this._addPixels(columns, 0);\n\t                this.eof = true;\n\t                break;\n\t              default:\n\t                (0, _util.info)('bad 2d code');\n\t                this._addPixels(columns, 0);\n\t                this.err = true;\n\t            }\n\t          }\n\t        } else {\n\t          codingLine[0] = 0;\n\t          this.codingPos = 0;\n\t          blackPixels = 0;\n\t          while (codingLine[this.codingPos] < columns) {\n\t            code1 = 0;\n\t            if (blackPixels) {\n\t              do {\n\t                code1 += code3 = this._getBlackCode();\n\t              } while (code3 >= 64);\n\t            } else {\n\t              do {\n\t                code1 += code3 = this._getWhiteCode();\n\t              } while (code3 >= 64);\n\t            }\n\t            this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n\t            blackPixels ^= 1;\n\t          }\n\t        }\n\t        var gotEOL = false;\n\t        if (this.byteAlign) {\n\t          this.inputBits &= ~7;\n\t        }\n\t        if (!this.eoblock && this.row === this.rows - 1) {\n\t          this.rowsDone = true;\n\t        } else {\n\t          code1 = this._lookBits(12);\n\t          if (this.eoline) {\n\t            while (code1 !== ccittEOF && code1 !== 1) {\n\t              this._eatBits(1);\n\t              code1 = this._lookBits(12);\n\t            }\n\t          } else {\n\t            while (code1 === 0) {\n\t              this._eatBits(1);\n\t              code1 = this._lookBits(12);\n\t            }\n\t          }\n\t          if (code1 === 1) {\n\t            this._eatBits(12);\n\t            gotEOL = true;\n\t          } else if (code1 === ccittEOF) {\n\t            this.eof = true;\n\t          }\n\t        }\n\t        if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n\t          this.nextLine2D = !this._lookBits(1);\n\t          this._eatBits(1);\n\t        }\n\t        if (this.eoblock && gotEOL && this.byteAlign) {\n\t          code1 = this._lookBits(12);\n\t          if (code1 === 1) {\n\t            this._eatBits(12);\n\t            if (this.encoding > 0) {\n\t              this._lookBits(1);\n\t              this._eatBits(1);\n\t            }\n\t            if (this.encoding >= 0) {\n\t              for (i = 0; i < 4; ++i) {\n\t                code1 = this._lookBits(12);\n\t                if (code1 !== 1) {\n\t                  (0, _util.info)('bad rtc code: ' + code1);\n\t                }\n\t                this._eatBits(12);\n\t                if (this.encoding > 0) {\n\t                  this._lookBits(1);\n\t                  this._eatBits(1);\n\t                }\n\t              }\n\t            }\n\t            this.eof = true;\n\t          }\n\t        } else if (this.err && this.eoline) {\n\t          while (true) {\n\t            code1 = this._lookBits(13);\n\t            if (code1 === ccittEOF) {\n\t              this.eof = true;\n\t              return -1;\n\t            }\n\t            if (code1 >> 1 === 1) {\n\t              break;\n\t            }\n\t            this._eatBits(1);\n\t          }\n\t          this._eatBits(12);\n\t          if (this.encoding > 0) {\n\t            this._eatBits(1);\n\t            this.nextLine2D = !(code1 & 1);\n\t          }\n\t        }\n\t        if (codingLine[0] > 0) {\n\t          this.outputBits = codingLine[this.codingPos = 0];\n\t        } else {\n\t          this.outputBits = codingLine[this.codingPos = 1];\n\t        }\n\t        this.row++;\n\t      }\n\t      var c = void 0;\n\t      if (this.outputBits >= 8) {\n\t        c = this.codingPos & 1 ? 0 : 0xFF;\n\t        this.outputBits -= 8;\n\t        if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n\t          this.codingPos++;\n\t          this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n\t        }\n\t      } else {\n\t        bits = 8;\n\t        c = 0;\n\t        do {\n\t          if (this.outputBits > bits) {\n\t            c <<= bits;\n\t            if (!(this.codingPos & 1)) {\n\t              c |= 0xFF >> 8 - bits;\n\t            }\n\t            this.outputBits -= bits;\n\t            bits = 0;\n\t          } else {\n\t            c <<= this.outputBits;\n\t            if (!(this.codingPos & 1)) {\n\t              c |= 0xFF >> 8 - this.outputBits;\n\t            }\n\t            bits -= this.outputBits;\n\t            this.outputBits = 0;\n\t            if (codingLine[this.codingPos] < columns) {\n\t              this.codingPos++;\n\t              this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n\t            } else if (bits > 0) {\n\t              c <<= bits;\n\t              bits = 0;\n\t            }\n\t          }\n\t        } while (bits);\n\t      }\n\t      if (this.black) {\n\t        c ^= 0xFF;\n\t      }\n\t      return c;\n\t    },\n\t    _addPixels: function _addPixels(a1, blackPixels) {\n\t      var codingLine = this.codingLine;\n\t      var codingPos = this.codingPos;\n\t      if (a1 > codingLine[codingPos]) {\n\t        if (a1 > this.columns) {\n\t          (0, _util.info)('row is wrong length');\n\t          this.err = true;\n\t          a1 = this.columns;\n\t        }\n\t        if (codingPos & 1 ^ blackPixels) {\n\t          ++codingPos;\n\t        }\n\t        codingLine[codingPos] = a1;\n\t      }\n\t      this.codingPos = codingPos;\n\t    },\n\t    _addPixelsNeg: function _addPixelsNeg(a1, blackPixels) {\n\t      var codingLine = this.codingLine;\n\t      var codingPos = this.codingPos;\n\t      if (a1 > codingLine[codingPos]) {\n\t        if (a1 > this.columns) {\n\t          (0, _util.info)('row is wrong length');\n\t          this.err = true;\n\t          a1 = this.columns;\n\t        }\n\t        if (codingPos & 1 ^ blackPixels) {\n\t          ++codingPos;\n\t        }\n\t        codingLine[codingPos] = a1;\n\t      } else if (a1 < codingLine[codingPos]) {\n\t        if (a1 < 0) {\n\t          (0, _util.info)('invalid code');\n\t          this.err = true;\n\t          a1 = 0;\n\t        }\n\t        while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n\t          --codingPos;\n\t        }\n\t        codingLine[codingPos] = a1;\n\t      }\n\t      this.codingPos = codingPos;\n\t    },\n\t    _findTableCode: function _findTableCode(start, end, table, limit) {\n\t      var limitValue = limit || 0;\n\t      for (var i = start; i <= end; ++i) {\n\t        var code = this._lookBits(i);\n\t        if (code === ccittEOF) {\n\t          return [true, 1, false];\n\t        }\n\t        if (i < end) {\n\t          code <<= end - i;\n\t        }\n\t        if (!limitValue || code >= limitValue) {\n\t          var p = table[code - limitValue];\n\t          if (p[0] === i) {\n\t            this._eatBits(i);\n\t            return [true, p[1], true];\n\t          }\n\t        }\n\t      }\n\t      return [false, 0, false];\n\t    },\n\t    _getTwoDimCode: function _getTwoDimCode() {\n\t      var code = 0;\n\t      var p = void 0;\n\t      if (this.eoblock) {\n\t        code = this._lookBits(7);\n\t        p = twoDimTable[code];\n\t        if (p && p[0] > 0) {\n\t          this._eatBits(p[0]);\n\t          return p[1];\n\t        }\n\t      } else {\n\t        var result = this._findTableCode(1, 7, twoDimTable);\n\t        if (result[0] && result[2]) {\n\t          return result[1];\n\t        }\n\t      }\n\t      (0, _util.info)('Bad two dim code');\n\t      return ccittEOF;\n\t    },\n\t    _getWhiteCode: function _getWhiteCode() {\n\t      var code = 0;\n\t      var p = void 0;\n\t      if (this.eoblock) {\n\t        code = this._lookBits(12);\n\t        if (code === ccittEOF) {\n\t          return 1;\n\t        }\n\t        if (code >> 5 === 0) {\n\t          p = whiteTable1[code];\n\t        } else {\n\t          p = whiteTable2[code >> 3];\n\t        }\n\t        if (p[0] > 0) {\n\t          this._eatBits(p[0]);\n\t          return p[1];\n\t        }\n\t      } else {\n\t        var result = this._findTableCode(1, 9, whiteTable2);\n\t        if (result[0]) {\n\t          return result[1];\n\t        }\n\t        result = this._findTableCode(11, 12, whiteTable1);\n\t        if (result[0]) {\n\t          return result[1];\n\t        }\n\t      }\n\t      (0, _util.info)('bad white code');\n\t      this._eatBits(1);\n\t      return 1;\n\t    },\n\t    _getBlackCode: function _getBlackCode() {\n\t      var code = void 0,\n\t          p = void 0;\n\t      if (this.eoblock) {\n\t        code = this._lookBits(13);\n\t        if (code === ccittEOF) {\n\t          return 1;\n\t        }\n\t        if (code >> 7 === 0) {\n\t          p = blackTable1[code];\n\t        } else if (code >> 9 === 0 && code >> 7 !== 0) {\n\t          p = blackTable2[(code >> 1) - 64];\n\t        } else {\n\t          p = blackTable3[code >> 7];\n\t        }\n\t        if (p[0] > 0) {\n\t          this._eatBits(p[0]);\n\t          return p[1];\n\t        }\n\t      } else {\n\t        var result = this._findTableCode(2, 6, blackTable3);\n\t        if (result[0]) {\n\t          return result[1];\n\t        }\n\t        result = this._findTableCode(7, 12, blackTable2, 64);\n\t        if (result[0]) {\n\t          return result[1];\n\t        }\n\t        result = this._findTableCode(10, 13, blackTable1);\n\t        if (result[0]) {\n\t          return result[1];\n\t        }\n\t      }\n\t      (0, _util.info)('bad black code');\n\t      this._eatBits(1);\n\t      return 1;\n\t    },\n\t    _lookBits: function _lookBits(n) {\n\t      var c = void 0;\n\t      while (this.inputBits < n) {\n\t        if ((c = this.source.next()) === -1) {\n\t          if (this.inputBits === 0) {\n\t            return ccittEOF;\n\t          }\n\t          return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\n\t        }\n\t        this.inputBuf = this.inputBuf << 8 | c;\n\t        this.inputBits += 8;\n\t      }\n\t      return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\n\t    },\n\t    _eatBits: function _eatBits(n) {\n\t      if ((this.inputBits -= n) < 0) {\n\t        this.inputBits = 0;\n\t      }\n\t    }\n\t  };\n\t  return CCITTFaxDecoder;\n\t}();\n\texports.CCITTFaxDecoder = CCITTFaxDecoder;\n\t\n\t/***/ }),\n\t/* 131 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Jbig2Stream = undefined;\n\t\n\tvar _primitives = __w_pdfjs_require__(2);\n\t\n\tvar _stream = __w_pdfjs_require__(5);\n\t\n\tvar _jbig = __w_pdfjs_require__(132);\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar Jbig2Stream = function Jbig2StreamClosure() {\n\t  function Jbig2Stream(stream, maybeLength, dict, params) {\n\t    this.stream = stream;\n\t    this.maybeLength = maybeLength;\n\t    this.dict = dict;\n\t    this.params = params;\n\t    _stream.DecodeStream.call(this, maybeLength);\n\t  }\n\t  Jbig2Stream.prototype = Object.create(_stream.DecodeStream.prototype);\n\t  Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n\t    get: function get() {\n\t      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n\t    },\n\t\n\t    configurable: true\n\t  });\n\t  Jbig2Stream.prototype.ensureBuffer = function (req) {\n\t    if (this.bufferLength) {\n\t      return;\n\t    }\n\t    var jbig2Image = new _jbig.Jbig2Image();\n\t    var chunks = [];\n\t    if ((0, _primitives.isDict)(this.params)) {\n\t      var globalsStream = this.params.get('JBIG2Globals');\n\t      if ((0, _primitives.isStream)(globalsStream)) {\n\t        var globals = globalsStream.getBytes();\n\t        chunks.push({\n\t          data: globals,\n\t          start: 0,\n\t          end: globals.length\n\t        });\n\t      }\n\t    }\n\t    chunks.push({\n\t      data: this.bytes,\n\t      start: 0,\n\t      end: this.bytes.length\n\t    });\n\t    var data = jbig2Image.parseChunks(chunks);\n\t    var dataLength = data.length;\n\t    for (var i = 0; i < dataLength; i++) {\n\t      data[i] ^= 0xFF;\n\t    }\n\t    this.buffer = data;\n\t    this.bufferLength = dataLength;\n\t    this.eof = true;\n\t  };\n\t  return Jbig2Stream;\n\t}();\n\texports.Jbig2Stream = Jbig2Stream;\n\t\n\t/***/ }),\n\t/* 132 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Jbig2Image = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _arithmetic_decoder = __w_pdfjs_require__(75);\n\t\n\tvar Jbig2Error = function Jbig2ErrorClosure() {\n\t  function Jbig2Error(msg) {\n\t    this.message = 'JBIG2 error: ' + msg;\n\t  }\n\t  Jbig2Error.prototype = new Error();\n\t  Jbig2Error.prototype.name = 'Jbig2Error';\n\t  Jbig2Error.constructor = Jbig2Error;\n\t  return Jbig2Error;\n\t}();\n\tvar Jbig2Image = function Jbig2ImageClosure() {\n\t  function ContextCache() {}\n\t  ContextCache.prototype = {\n\t    getContexts: function getContexts(id) {\n\t      if (id in this) {\n\t        return this[id];\n\t      }\n\t      return this[id] = new Int8Array(1 << 16);\n\t    }\n\t  };\n\t  function DecodingContext(data, start, end) {\n\t    this.data = data;\n\t    this.start = start;\n\t    this.end = end;\n\t  }\n\t  DecodingContext.prototype = {\n\t    get decoder() {\n\t      var decoder = new _arithmetic_decoder.ArithmeticDecoder(this.data, this.start, this.end);\n\t      return (0, _util.shadow)(this, 'decoder', decoder);\n\t    },\n\t    get contextCache() {\n\t      var cache = new ContextCache();\n\t      return (0, _util.shadow)(this, 'contextCache', cache);\n\t    }\n\t  };\n\t  function decodeInteger(contextCache, procedure, decoder) {\n\t    var contexts = contextCache.getContexts(procedure);\n\t    var prev = 1;\n\t    function readBits(length) {\n\t      var v = 0;\n\t      for (var i = 0; i < length; i++) {\n\t        var bit = decoder.readBit(contexts, prev);\n\t        prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n\t        v = v << 1 | bit;\n\t      }\n\t      return v >>> 0;\n\t    }\n\t    var sign = readBits(1);\n\t    var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n\t    return sign === 0 ? value : value > 0 ? -value : null;\n\t  }\n\t  function decodeIAID(contextCache, decoder, codeLength) {\n\t    var contexts = contextCache.getContexts('IAID');\n\t    var prev = 1;\n\t    for (var i = 0; i < codeLength; i++) {\n\t      var bit = decoder.readBit(contexts, prev);\n\t      prev = prev << 1 | bit;\n\t    }\n\t    if (codeLength < 31) {\n\t      return prev & (1 << codeLength) - 1;\n\t    }\n\t    return prev & 0x7FFFFFFF;\n\t  }\n\t  var SegmentTypes = ['SymbolDictionary', null, null, null, 'IntermediateTextRegion', null, 'ImmediateTextRegion', 'ImmediateLosslessTextRegion', null, null, null, null, null, null, null, null, 'PatternDictionary', null, null, null, 'IntermediateHalftoneRegion', null, 'ImmediateHalftoneRegion', 'ImmediateLosslessHalftoneRegion', null, null, null, null, null, null, null, null, null, null, null, null, 'IntermediateGenericRegion', null, 'ImmediateGenericRegion', 'ImmediateLosslessGenericRegion', 'IntermediateGenericRefinementRegion', null, 'ImmediateGenericRefinementRegion', 'ImmediateLosslessGenericRefinementRegion', null, null, null, null, 'PageInformation', 'EndOfPage', 'EndOfStripe', 'EndOfFile', 'Profiles', 'Tables', null, null, null, null, null, null, null, null, 'Extension'];\n\t  var CodingTemplates = [[{\n\t    x: -1,\n\t    y: -2\n\t  }, {\n\t    x: 0,\n\t    y: -2\n\t  }, {\n\t    x: 1,\n\t    y: -2\n\t  }, {\n\t    x: -2,\n\t    y: -1\n\t  }, {\n\t    x: -1,\n\t    y: -1\n\t  }, {\n\t    x: 0,\n\t    y: -1\n\t  }, {\n\t    x: 1,\n\t    y: -1\n\t  }, {\n\t    x: 2,\n\t    y: -1\n\t  }, {\n\t    x: -4,\n\t    y: 0\n\t  }, {\n\t    x: -3,\n\t    y: 0\n\t  }, {\n\t    x: -2,\n\t    y: 0\n\t  }, {\n\t    x: -1,\n\t    y: 0\n\t  }], [{\n\t    x: -1,\n\t    y: -2\n\t  }, {\n\t    x: 0,\n\t    y: -2\n\t  }, {\n\t    x: 1,\n\t    y: -2\n\t  }, {\n\t    x: 2,\n\t    y: -2\n\t  }, {\n\t    x: -2,\n\t    y: -1\n\t  }, {\n\t    x: -1,\n\t    y: -1\n\t  }, {\n\t    x: 0,\n\t    y: -1\n\t  }, {\n\t    x: 1,\n\t    y: -1\n\t  }, {\n\t    x: 2,\n\t    y: -1\n\t  }, {\n\t    x: -3,\n\t    y: 0\n\t  }, {\n\t    x: -2,\n\t    y: 0\n\t  }, {\n\t    x: -1,\n\t    y: 0\n\t  }], [{\n\t    x: -1,\n\t    y: -2\n\t  }, {\n\t    x: 0,\n\t    y: -2\n\t  }, {\n\t    x: 1,\n\t    y: -2\n\t  }, {\n\t    x: -2,\n\t    y: -1\n\t  }, {\n\t    x: -1,\n\t    y: -1\n\t  }, {\n\t    x: 0,\n\t    y: -1\n\t  }, {\n\t    x: 1,\n\t    y: -1\n\t  }, {\n\t    x: -2,\n\t    y: 0\n\t  }, {\n\t    x: -1,\n\t    y: 0\n\t  }], [{\n\t    x: -3,\n\t    y: -1\n\t  }, {\n\t    x: -2,\n\t    y: -1\n\t  }, {\n\t    x: -1,\n\t    y: -1\n\t  }, {\n\t    x: 0,\n\t    y: -1\n\t  }, {\n\t    x: 1,\n\t    y: -1\n\t  }, {\n\t    x: -4,\n\t    y: 0\n\t  }, {\n\t    x: -3,\n\t    y: 0\n\t  }, {\n\t    x: -2,\n\t    y: 0\n\t  }, {\n\t    x: -1,\n\t    y: 0\n\t  }]];\n\t  var RefinementTemplates = [{\n\t    coding: [{\n\t      x: 0,\n\t      y: -1\n\t    }, {\n\t      x: 1,\n\t      y: -1\n\t    }, {\n\t      x: -1,\n\t      y: 0\n\t    }],\n\t    reference: [{\n\t      x: 0,\n\t      y: -1\n\t    }, {\n\t      x: 1,\n\t      y: -1\n\t    }, {\n\t      x: -1,\n\t      y: 0\n\t    }, {\n\t      x: 0,\n\t      y: 0\n\t    }, {\n\t      x: 1,\n\t      y: 0\n\t    }, {\n\t      x: -1,\n\t      y: 1\n\t    }, {\n\t      x: 0,\n\t      y: 1\n\t    }, {\n\t      x: 1,\n\t      y: 1\n\t    }]\n\t  }, {\n\t    coding: [{\n\t      x: -1,\n\t      y: -1\n\t    }, {\n\t      x: 0,\n\t      y: -1\n\t    }, {\n\t      x: 1,\n\t      y: -1\n\t    }, {\n\t      x: -1,\n\t      y: 0\n\t    }],\n\t    reference: [{\n\t      x: 0,\n\t      y: -1\n\t    }, {\n\t      x: -1,\n\t      y: 0\n\t    }, {\n\t      x: 0,\n\t      y: 0\n\t    }, {\n\t      x: 1,\n\t      y: 0\n\t    }, {\n\t      x: 0,\n\t      y: 1\n\t    }, {\n\t      x: 1,\n\t      y: 1\n\t    }]\n\t  }];\n\t  var ReusedContexts = [0x9B25, 0x0795, 0x00E5, 0x0195];\n\t  var RefinementReusedContexts = [0x0020, 0x0008];\n\t  function decodeBitmapTemplate0(width, height, decodingContext) {\n\t    var decoder = decodingContext.decoder;\n\t    var contexts = decodingContext.contextCache.getContexts('GB');\n\t    var contextLabel,\n\t        i,\n\t        j,\n\t        pixel,\n\t        row,\n\t        row1,\n\t        row2,\n\t        bitmap = [];\n\t    var OLD_PIXEL_MASK = 0x7BF7;\n\t    for (i = 0; i < height; i++) {\n\t      row = bitmap[i] = new Uint8Array(width);\n\t      row1 = i < 1 ? row : bitmap[i - 1];\n\t      row2 = i < 2 ? row : bitmap[i - 2];\n\t      contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n\t      for (j = 0; j < width; j++) {\n\t        row[j] = pixel = decoder.readBit(contexts, contextLabel);\n\t        contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n\t      }\n\t    }\n\t    return bitmap;\n\t  }\n\t  function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n\t    if (mmr) {\n\t      throw new Jbig2Error('MMR encoding is not supported');\n\t    }\n\t    if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n\t      return decodeBitmapTemplate0(width, height, decodingContext);\n\t    }\n\t    var useskip = !!skip;\n\t    var template = CodingTemplates[templateIndex].concat(at);\n\t    template.sort(function (a, b) {\n\t      return a.y - b.y || a.x - b.x;\n\t    });\n\t    var templateLength = template.length;\n\t    var templateX = new Int8Array(templateLength);\n\t    var templateY = new Int8Array(templateLength);\n\t    var changingTemplateEntries = [];\n\t    var reuseMask = 0,\n\t        minX = 0,\n\t        maxX = 0,\n\t        minY = 0;\n\t    var c, k;\n\t    for (k = 0; k < templateLength; k++) {\n\t      templateX[k] = template[k].x;\n\t      templateY[k] = template[k].y;\n\t      minX = Math.min(minX, template[k].x);\n\t      maxX = Math.max(maxX, template[k].x);\n\t      minY = Math.min(minY, template[k].y);\n\t      if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n\t        reuseMask |= 1 << templateLength - 1 - k;\n\t      } else {\n\t        changingTemplateEntries.push(k);\n\t      }\n\t    }\n\t    var changingEntriesLength = changingTemplateEntries.length;\n\t    var changingTemplateX = new Int8Array(changingEntriesLength);\n\t    var changingTemplateY = new Int8Array(changingEntriesLength);\n\t    var changingTemplateBit = new Uint16Array(changingEntriesLength);\n\t    for (c = 0; c < changingEntriesLength; c++) {\n\t      k = changingTemplateEntries[c];\n\t      changingTemplateX[c] = template[k].x;\n\t      changingTemplateY[c] = template[k].y;\n\t      changingTemplateBit[c] = 1 << templateLength - 1 - k;\n\t    }\n\t    var sbb_left = -minX;\n\t    var sbb_top = -minY;\n\t    var sbb_right = width - maxX;\n\t    var pseudoPixelContext = ReusedContexts[templateIndex];\n\t    var row = new Uint8Array(width);\n\t    var bitmap = [];\n\t    var decoder = decodingContext.decoder;\n\t    var contexts = decodingContext.contextCache.getContexts('GB');\n\t    var ltp = 0,\n\t        j,\n\t        i0,\n\t        j0,\n\t        contextLabel = 0,\n\t        bit,\n\t        shift;\n\t    for (var i = 0; i < height; i++) {\n\t      if (prediction) {\n\t        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n\t        ltp ^= sltp;\n\t        if (ltp) {\n\t          bitmap.push(row);\n\t          continue;\n\t        }\n\t      }\n\t      row = new Uint8Array(row);\n\t      bitmap.push(row);\n\t      for (j = 0; j < width; j++) {\n\t        if (useskip && skip[i][j]) {\n\t          row[j] = 0;\n\t          continue;\n\t        }\n\t        if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n\t          contextLabel = contextLabel << 1 & reuseMask;\n\t          for (k = 0; k < changingEntriesLength; k++) {\n\t            i0 = i + changingTemplateY[k];\n\t            j0 = j + changingTemplateX[k];\n\t            bit = bitmap[i0][j0];\n\t            if (bit) {\n\t              bit = changingTemplateBit[k];\n\t              contextLabel |= bit;\n\t            }\n\t          }\n\t        } else {\n\t          contextLabel = 0;\n\t          shift = templateLength - 1;\n\t          for (k = 0; k < templateLength; k++, shift--) {\n\t            j0 = j + templateX[k];\n\t            if (j0 >= 0 && j0 < width) {\n\t              i0 = i + templateY[k];\n\t              if (i0 >= 0) {\n\t                bit = bitmap[i0][j0];\n\t                if (bit) {\n\t                  contextLabel |= bit << shift;\n\t                }\n\t              }\n\t            }\n\t          }\n\t        }\n\t        var pixel = decoder.readBit(contexts, contextLabel);\n\t        row[j] = pixel;\n\t      }\n\t    }\n\t    return bitmap;\n\t  }\n\t  function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n\t    var codingTemplate = RefinementTemplates[templateIndex].coding;\n\t    if (templateIndex === 0) {\n\t      codingTemplate = codingTemplate.concat([at[0]]);\n\t    }\n\t    var codingTemplateLength = codingTemplate.length;\n\t    var codingTemplateX = new Int32Array(codingTemplateLength);\n\t    var codingTemplateY = new Int32Array(codingTemplateLength);\n\t    var k;\n\t    for (k = 0; k < codingTemplateLength; k++) {\n\t      codingTemplateX[k] = codingTemplate[k].x;\n\t      codingTemplateY[k] = codingTemplate[k].y;\n\t    }\n\t    var referenceTemplate = RefinementTemplates[templateIndex].reference;\n\t    if (templateIndex === 0) {\n\t      referenceTemplate = referenceTemplate.concat([at[1]]);\n\t    }\n\t    var referenceTemplateLength = referenceTemplate.length;\n\t    var referenceTemplateX = new Int32Array(referenceTemplateLength);\n\t    var referenceTemplateY = new Int32Array(referenceTemplateLength);\n\t    for (k = 0; k < referenceTemplateLength; k++) {\n\t      referenceTemplateX[k] = referenceTemplate[k].x;\n\t      referenceTemplateY[k] = referenceTemplate[k].y;\n\t    }\n\t    var referenceWidth = referenceBitmap[0].length;\n\t    var referenceHeight = referenceBitmap.length;\n\t    var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n\t    var bitmap = [];\n\t    var decoder = decodingContext.decoder;\n\t    var contexts = decodingContext.contextCache.getContexts('GR');\n\t    var ltp = 0;\n\t    for (var i = 0; i < height; i++) {\n\t      if (prediction) {\n\t        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n\t        ltp ^= sltp;\n\t        if (ltp) {\n\t          throw new Jbig2Error('prediction is not supported');\n\t        }\n\t      }\n\t      var row = new Uint8Array(width);\n\t      bitmap.push(row);\n\t      for (var j = 0; j < width; j++) {\n\t        var i0, j0;\n\t        var contextLabel = 0;\n\t        for (k = 0; k < codingTemplateLength; k++) {\n\t          i0 = i + codingTemplateY[k];\n\t          j0 = j + codingTemplateX[k];\n\t          if (i0 < 0 || j0 < 0 || j0 >= width) {\n\t            contextLabel <<= 1;\n\t          } else {\n\t            contextLabel = contextLabel << 1 | bitmap[i0][j0];\n\t          }\n\t        }\n\t        for (k = 0; k < referenceTemplateLength; k++) {\n\t          i0 = i + referenceTemplateY[k] - offsetY;\n\t          j0 = j + referenceTemplateX[k] - offsetX;\n\t          if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n\t            contextLabel <<= 1;\n\t          } else {\n\t            contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n\t          }\n\t        }\n\t        var pixel = decoder.readBit(contexts, contextLabel);\n\t        row[j] = pixel;\n\t      }\n\t    }\n\t    return bitmap;\n\t  }\n\t  function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext) {\n\t    if (huffman) {\n\t      throw new Jbig2Error('huffman is not supported');\n\t    }\n\t    var newSymbols = [];\n\t    var currentHeight = 0;\n\t    var symbolCodeLength = (0, _util.log2)(symbols.length + numberOfNewSymbols);\n\t    var decoder = decodingContext.decoder;\n\t    var contextCache = decodingContext.contextCache;\n\t    while (newSymbols.length < numberOfNewSymbols) {\n\t      var deltaHeight = decodeInteger(contextCache, 'IADH', decoder);\n\t      currentHeight += deltaHeight;\n\t      var currentWidth = 0;\n\t      while (true) {\n\t        var deltaWidth = decodeInteger(contextCache, 'IADW', decoder);\n\t        if (deltaWidth === null) {\n\t          break;\n\t        }\n\t        currentWidth += deltaWidth;\n\t        var bitmap;\n\t        if (refinement) {\n\t          var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n\t          if (numberOfInstances > 1) {\n\t            bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext);\n\t          } else {\n\t            var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n\t            var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n\t            var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n\t            var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n\t            bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n\t          }\n\t        } else {\n\t          bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n\t        }\n\t        newSymbols.push(bitmap);\n\t      }\n\t    }\n\t    var exportedSymbols = [];\n\t    var flags = [],\n\t        currentFlag = false;\n\t    var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n\t    while (flags.length < totalSymbolsLength) {\n\t      var runLength = decodeInteger(contextCache, 'IAEX', decoder);\n\t      while (runLength--) {\n\t        flags.push(currentFlag);\n\t      }\n\t      currentFlag = !currentFlag;\n\t    }\n\t    for (var i = 0, ii = symbols.length; i < ii; i++) {\n\t      if (flags[i]) {\n\t        exportedSymbols.push(symbols[i]);\n\t      }\n\t    }\n\t    for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n\t      if (flags[i]) {\n\t        exportedSymbols.push(newSymbols[j]);\n\t      }\n\t    }\n\t    return exportedSymbols;\n\t  }\n\t  function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext) {\n\t    if (huffman) {\n\t      throw new Jbig2Error('huffman is not supported');\n\t    }\n\t    var bitmap = [];\n\t    var i, row;\n\t    for (i = 0; i < height; i++) {\n\t      row = new Uint8Array(width);\n\t      if (defaultPixelValue) {\n\t        for (var j = 0; j < width; j++) {\n\t          row[j] = defaultPixelValue;\n\t        }\n\t      }\n\t      bitmap.push(row);\n\t    }\n\t    var decoder = decodingContext.decoder;\n\t    var contextCache = decodingContext.contextCache;\n\t    var stripT = -decodeInteger(contextCache, 'IADT', decoder);\n\t    var firstS = 0;\n\t    i = 0;\n\t    while (i < numberOfSymbolInstances) {\n\t      var deltaT = decodeInteger(contextCache, 'IADT', decoder);\n\t      stripT += deltaT;\n\t      var deltaFirstS = decodeInteger(contextCache, 'IAFS', decoder);\n\t      firstS += deltaFirstS;\n\t      var currentS = firstS;\n\t      do {\n\t        var currentT = stripSize === 1 ? 0 : decodeInteger(contextCache, 'IAIT', decoder);\n\t        var t = stripSize * stripT + currentT;\n\t        var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n\t        var applyRefinement = refinement && decodeInteger(contextCache, 'IARI', decoder);\n\t        var symbolBitmap = inputSymbols[symbolId];\n\t        var symbolWidth = symbolBitmap[0].length;\n\t        var symbolHeight = symbolBitmap.length;\n\t        if (applyRefinement) {\n\t          var rdw = decodeInteger(contextCache, 'IARDW', decoder);\n\t          var rdh = decodeInteger(contextCache, 'IARDH', decoder);\n\t          var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n\t          var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n\t          symbolWidth += rdw;\n\t          symbolHeight += rdh;\n\t          symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n\t        }\n\t        var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n\t        var offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n\t        var s2, t2, symbolRow;\n\t        if (transposed) {\n\t          for (s2 = 0; s2 < symbolHeight; s2++) {\n\t            row = bitmap[offsetS + s2];\n\t            if (!row) {\n\t              continue;\n\t            }\n\t            symbolRow = symbolBitmap[s2];\n\t            var maxWidth = Math.min(width - offsetT, symbolWidth);\n\t            switch (combinationOperator) {\n\t              case 0:\n\t                for (t2 = 0; t2 < maxWidth; t2++) {\n\t                  row[offsetT + t2] |= symbolRow[t2];\n\t                }\n\t                break;\n\t              case 2:\n\t                for (t2 = 0; t2 < maxWidth; t2++) {\n\t                  row[offsetT + t2] ^= symbolRow[t2];\n\t                }\n\t                break;\n\t              default:\n\t                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n\t            }\n\t          }\n\t          currentS += symbolHeight - 1;\n\t        } else {\n\t          for (t2 = 0; t2 < symbolHeight; t2++) {\n\t            row = bitmap[offsetT + t2];\n\t            if (!row) {\n\t              continue;\n\t            }\n\t            symbolRow = symbolBitmap[t2];\n\t            switch (combinationOperator) {\n\t              case 0:\n\t                for (s2 = 0; s2 < symbolWidth; s2++) {\n\t                  row[offsetS + s2] |= symbolRow[s2];\n\t                }\n\t                break;\n\t              case 2:\n\t                for (s2 = 0; s2 < symbolWidth; s2++) {\n\t                  row[offsetS + s2] ^= symbolRow[s2];\n\t                }\n\t                break;\n\t              default:\n\t                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n\t            }\n\t          }\n\t          currentS += symbolWidth - 1;\n\t        }\n\t        i++;\n\t        var deltaS = decodeInteger(contextCache, 'IADS', decoder);\n\t        if (deltaS === null) {\n\t          break;\n\t        }\n\t        currentS += deltaS + dsOffset;\n\t      } while (true);\n\t    }\n\t    return bitmap;\n\t  }\n\t  function decodePatternDictionary(mmr, patternWidth, patternHeight, maxPatternIndex, template, decodingContext) {\n\t    var at = [];\n\t    at.push({\n\t      x: -patternWidth,\n\t      y: 0\n\t    });\n\t    if (template === 0) {\n\t      at.push({\n\t        x: -3,\n\t        y: -1\n\t      });\n\t      at.push({\n\t        x: 2,\n\t        y: -2\n\t      });\n\t      at.push({\n\t        x: -2,\n\t        y: -2\n\t      });\n\t    }\n\t    var collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n\t    var collectiveBitmap = decodeBitmap(mmr, collectiveWidth, patternHeight, template, false, null, at, decodingContext);\n\t    var patterns = [],\n\t        i = 0,\n\t        patternBitmap = void 0,\n\t        xMin = void 0,\n\t        xMax = void 0,\n\t        y = void 0;\n\t    while (i <= maxPatternIndex) {\n\t      patternBitmap = [];\n\t      xMin = patternWidth * i;\n\t      xMax = xMin + patternWidth;\n\t      for (y = 0; y < patternHeight; y++) {\n\t        patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n\t      }\n\t      patterns.push(patternBitmap);\n\t      i++;\n\t    }\n\t    return patterns;\n\t  }\n\t  function decodeHalftoneRegion(mmr, patterns, template, regionWidth, regionHeight, defaultPixelValue, enableSkip, combinationOperator, gridWidth, gridHeight, gridOffsetX, gridOffsetY, gridVectorX, gridVectorY, decodingContext) {\n\t    var skip = null;\n\t    if (enableSkip) {\n\t      throw new Jbig2Error('skip is not supported');\n\t    }\n\t    if (combinationOperator !== 0) {\n\t      throw new Jbig2Error('operator ' + combinationOperator + ' is not supported in halftone region');\n\t    }\n\t    var regionBitmap = [];\n\t    var i = void 0,\n\t        j = void 0,\n\t        row = void 0;\n\t    for (i = 0; i < regionHeight; i++) {\n\t      row = new Uint8Array(regionWidth);\n\t      if (defaultPixelValue) {\n\t        for (j = 0; j < regionWidth; j++) {\n\t          row[j] = defaultPixelValue;\n\t        }\n\t      }\n\t      regionBitmap.push(row);\n\t    }\n\t    var numberOfPatterns = patterns.length;\n\t    var pattern0 = patterns[0];\n\t    var patternWidth = pattern0[0].length,\n\t        patternHeight = pattern0.length;\n\t    var bitsPerValue = (0, _util.log2)(numberOfPatterns);\n\t    var at = [];\n\t    at.push({\n\t      x: template <= 1 ? 3 : 2,\n\t      y: -1\n\t    });\n\t    if (template === 0) {\n\t      at.push({\n\t        x: -3,\n\t        y: -1\n\t      });\n\t      at.push({\n\t        x: 2,\n\t        y: -2\n\t      });\n\t      at.push({\n\t        x: -2,\n\t        y: -2\n\t      });\n\t    }\n\t    var grayScaleBitPlanes = [];\n\t    for (i = bitsPerValue - 1; i >= 0; i--) {\n\t      grayScaleBitPlanes[i] = decodeBitmap(mmr, gridWidth, gridHeight, template, false, skip, at, decodingContext);\n\t    }\n\t    var mg = void 0,\n\t        ng = void 0,\n\t        bit = void 0,\n\t        patternIndex = void 0,\n\t        patternBitmap = void 0,\n\t        x = void 0,\n\t        y = void 0,\n\t        patternRow = void 0,\n\t        regionRow = void 0;\n\t    for (mg = 0; mg < gridHeight; mg++) {\n\t      for (ng = 0; ng < gridWidth; ng++) {\n\t        bit = 0;\n\t        patternIndex = 0;\n\t        for (j = bitsPerValue - 1; j >= 0; j--) {\n\t          bit = grayScaleBitPlanes[j][mg][ng] ^ bit;\n\t          patternIndex |= bit << j;\n\t        }\n\t        patternBitmap = patterns[patternIndex];\n\t        x = gridOffsetX + mg * gridVectorY + ng * gridVectorX >> 8;\n\t        y = gridOffsetY + mg * gridVectorX - ng * gridVectorY >> 8;\n\t        if (x >= 0 && x + patternWidth <= regionWidth && y >= 0 && y + patternHeight <= regionHeight) {\n\t          for (i = 0; i < patternHeight; i++) {\n\t            regionRow = regionBitmap[y + i];\n\t            patternRow = patternBitmap[i];\n\t            for (j = 0; j < patternWidth; j++) {\n\t              regionRow[x + j] |= patternRow[j];\n\t            }\n\t          }\n\t        } else {\n\t          var regionX = void 0,\n\t              regionY = void 0;\n\t          for (i = 0; i < patternHeight; i++) {\n\t            regionY = y + i;\n\t            if (regionY < 0 || regionY >= regionHeight) {\n\t              continue;\n\t            }\n\t            regionRow = regionBitmap[regionY];\n\t            patternRow = patternBitmap[i];\n\t            for (j = 0; j < patternWidth; j++) {\n\t              regionX = x + j;\n\t              if (regionX >= 0 && regionX < regionWidth) {\n\t                regionRow[regionX] |= patternRow[j];\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return regionBitmap;\n\t  }\n\t  function readSegmentHeader(data, start) {\n\t    var segmentHeader = {};\n\t    segmentHeader.number = (0, _util.readUint32)(data, start);\n\t    var flags = data[start + 4];\n\t    var segmentType = flags & 0x3F;\n\t    if (!SegmentTypes[segmentType]) {\n\t      throw new Jbig2Error('invalid segment type: ' + segmentType);\n\t    }\n\t    segmentHeader.type = segmentType;\n\t    segmentHeader.typeName = SegmentTypes[segmentType];\n\t    segmentHeader.deferredNonRetain = !!(flags & 0x80);\n\t    var pageAssociationFieldSize = !!(flags & 0x40);\n\t    var referredFlags = data[start + 5];\n\t    var referredToCount = referredFlags >> 5 & 7;\n\t    var retainBits = [referredFlags & 31];\n\t    var position = start + 6;\n\t    if (referredFlags === 7) {\n\t      referredToCount = (0, _util.readUint32)(data, position - 1) & 0x1FFFFFFF;\n\t      position += 3;\n\t      var bytes = referredToCount + 7 >> 3;\n\t      retainBits[0] = data[position++];\n\t      while (--bytes > 0) {\n\t        retainBits.push(data[position++]);\n\t      }\n\t    } else if (referredFlags === 5 || referredFlags === 6) {\n\t      throw new Jbig2Error('invalid referred-to flags');\n\t    }\n\t    segmentHeader.retainBits = retainBits;\n\t    var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n\t    var referredTo = [];\n\t    var i, ii;\n\t    for (i = 0; i < referredToCount; i++) {\n\t      var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? (0, _util.readUint16)(data, position) : (0, _util.readUint32)(data, position);\n\t      referredTo.push(number);\n\t      position += referredToSegmentNumberSize;\n\t    }\n\t    segmentHeader.referredTo = referredTo;\n\t    if (!pageAssociationFieldSize) {\n\t      segmentHeader.pageAssociation = data[position++];\n\t    } else {\n\t      segmentHeader.pageAssociation = (0, _util.readUint32)(data, position);\n\t      position += 4;\n\t    }\n\t    segmentHeader.length = (0, _util.readUint32)(data, position);\n\t    position += 4;\n\t    if (segmentHeader.length === 0xFFFFFFFF) {\n\t      if (segmentType === 38) {\n\t        var genericRegionInfo = readRegionSegmentInformation(data, position);\n\t        var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n\t        var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n\t        var searchPatternLength = 6;\n\t        var searchPattern = new Uint8Array(searchPatternLength);\n\t        if (!genericRegionMmr) {\n\t          searchPattern[0] = 0xFF;\n\t          searchPattern[1] = 0xAC;\n\t        }\n\t        searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\n\t        searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\n\t        searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\n\t        searchPattern[5] = genericRegionInfo.height & 0xFF;\n\t        for (i = position, ii = data.length; i < ii; i++) {\n\t          var j = 0;\n\t          while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n\t            j++;\n\t          }\n\t          if (j === searchPatternLength) {\n\t            segmentHeader.length = i + searchPatternLength;\n\t            break;\n\t          }\n\t        }\n\t        if (segmentHeader.length === 0xFFFFFFFF) {\n\t          throw new Jbig2Error('segment end was not found');\n\t        }\n\t      } else {\n\t        throw new Jbig2Error('invalid unknown segment length');\n\t      }\n\t    }\n\t    segmentHeader.headerEnd = position;\n\t    return segmentHeader;\n\t  }\n\t  function readSegments(header, data, start, end) {\n\t    var segments = [];\n\t    var position = start;\n\t    while (position < end) {\n\t      var segmentHeader = readSegmentHeader(data, position);\n\t      position = segmentHeader.headerEnd;\n\t      var segment = {\n\t        header: segmentHeader,\n\t        data: data\n\t      };\n\t      if (!header.randomAccess) {\n\t        segment.start = position;\n\t        position += segmentHeader.length;\n\t        segment.end = position;\n\t      }\n\t      segments.push(segment);\n\t      if (segmentHeader.type === 51) {\n\t        break;\n\t      }\n\t    }\n\t    if (header.randomAccess) {\n\t      for (var i = 0, ii = segments.length; i < ii; i++) {\n\t        segments[i].start = position;\n\t        position += segments[i].header.length;\n\t        segments[i].end = position;\n\t      }\n\t    }\n\t    return segments;\n\t  }\n\t  function readRegionSegmentInformation(data, start) {\n\t    return {\n\t      width: (0, _util.readUint32)(data, start),\n\t      height: (0, _util.readUint32)(data, start + 4),\n\t      x: (0, _util.readUint32)(data, start + 8),\n\t      y: (0, _util.readUint32)(data, start + 12),\n\t      combinationOperator: data[start + 16] & 7\n\t    };\n\t  }\n\t  var RegionSegmentInformationFieldLength = 17;\n\t  function processSegment(segment, visitor) {\n\t    var header = segment.header;\n\t    var data = segment.data,\n\t        position = segment.start,\n\t        end = segment.end;\n\t    var args, at, i, atLength;\n\t    switch (header.type) {\n\t      case 0:\n\t        var dictionary = {};\n\t        var dictionaryFlags = (0, _util.readUint16)(data, position);\n\t        dictionary.huffman = !!(dictionaryFlags & 1);\n\t        dictionary.refinement = !!(dictionaryFlags & 2);\n\t        dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n\t        dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n\t        dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n\t        dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n\t        dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n\t        dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n\t        dictionary.template = dictionaryFlags >> 10 & 3;\n\t        dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n\t        position += 2;\n\t        if (!dictionary.huffman) {\n\t          atLength = dictionary.template === 0 ? 4 : 1;\n\t          at = [];\n\t          for (i = 0; i < atLength; i++) {\n\t            at.push({\n\t              x: (0, _util.readInt8)(data, position),\n\t              y: (0, _util.readInt8)(data, position + 1)\n\t            });\n\t            position += 2;\n\t          }\n\t          dictionary.at = at;\n\t        }\n\t        if (dictionary.refinement && !dictionary.refinementTemplate) {\n\t          at = [];\n\t          for (i = 0; i < 2; i++) {\n\t            at.push({\n\t              x: (0, _util.readInt8)(data, position),\n\t              y: (0, _util.readInt8)(data, position + 1)\n\t            });\n\t            position += 2;\n\t          }\n\t          dictionary.refinementAt = at;\n\t        }\n\t        dictionary.numberOfExportedSymbols = (0, _util.readUint32)(data, position);\n\t        position += 4;\n\t        dictionary.numberOfNewSymbols = (0, _util.readUint32)(data, position);\n\t        position += 4;\n\t        args = [dictionary, header.number, header.referredTo, data, position, end];\n\t        break;\n\t      case 6:\n\t      case 7:\n\t        var textRegion = {};\n\t        textRegion.info = readRegionSegmentInformation(data, position);\n\t        position += RegionSegmentInformationFieldLength;\n\t        var textRegionSegmentFlags = (0, _util.readUint16)(data, position);\n\t        position += 2;\n\t        textRegion.huffman = !!(textRegionSegmentFlags & 1);\n\t        textRegion.refinement = !!(textRegionSegmentFlags & 2);\n\t        textRegion.stripSize = 1 << (textRegionSegmentFlags >> 2 & 3);\n\t        textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n\t        textRegion.transposed = !!(textRegionSegmentFlags & 64);\n\t        textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n\t        textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n\t        textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n\t        textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n\t        if (textRegion.huffman) {\n\t          var textRegionHuffmanFlags = (0, _util.readUint16)(data, position);\n\t          position += 2;\n\t          textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n\t          textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n\t          textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n\t          textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n\t          textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n\t          textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n\t          textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n\t          textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 14);\n\t        }\n\t        if (textRegion.refinement && !textRegion.refinementTemplate) {\n\t          at = [];\n\t          for (i = 0; i < 2; i++) {\n\t            at.push({\n\t              x: (0, _util.readInt8)(data, position),\n\t              y: (0, _util.readInt8)(data, position + 1)\n\t            });\n\t            position += 2;\n\t          }\n\t          textRegion.refinementAt = at;\n\t        }\n\t        textRegion.numberOfSymbolInstances = (0, _util.readUint32)(data, position);\n\t        position += 4;\n\t        if (textRegion.huffman) {\n\t          throw new Jbig2Error('huffman is not supported');\n\t        }\n\t        args = [textRegion, header.referredTo, data, position, end];\n\t        break;\n\t      case 16:\n\t        var patternDictionary = {};\n\t        var patternDictionaryFlags = data[position++];\n\t        patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n\t        patternDictionary.template = patternDictionaryFlags >> 1 & 3;\n\t        patternDictionary.patternWidth = data[position++];\n\t        patternDictionary.patternHeight = data[position++];\n\t        patternDictionary.maxPatternIndex = (0, _util.readUint32)(data, position);\n\t        position += 4;\n\t        args = [patternDictionary, header.number, data, position, end];\n\t        break;\n\t      case 22:\n\t      case 23:\n\t        var halftoneRegion = {};\n\t        halftoneRegion.info = readRegionSegmentInformation(data, position);\n\t        position += RegionSegmentInformationFieldLength;\n\t        var halftoneRegionFlags = data[position++];\n\t        halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n\t        halftoneRegion.template = halftoneRegionFlags >> 1 & 3;\n\t        halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n\t        halftoneRegion.combinationOperator = halftoneRegionFlags >> 4 & 7;\n\t        halftoneRegion.defaultPixelValue = halftoneRegionFlags >> 7 & 1;\n\t        halftoneRegion.gridWidth = (0, _util.readUint32)(data, position);\n\t        position += 4;\n\t        halftoneRegion.gridHeight = (0, _util.readUint32)(data, position);\n\t        position += 4;\n\t        halftoneRegion.gridOffsetX = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n\t        position += 4;\n\t        halftoneRegion.gridOffsetY = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n\t        position += 4;\n\t        halftoneRegion.gridVectorX = (0, _util.readUint16)(data, position);\n\t        position += 2;\n\t        halftoneRegion.gridVectorY = (0, _util.readUint16)(data, position);\n\t        position += 2;\n\t        args = [halftoneRegion, header.referredTo, data, position, end];\n\t        break;\n\t      case 38:\n\t      case 39:\n\t        var genericRegion = {};\n\t        genericRegion.info = readRegionSegmentInformation(data, position);\n\t        position += RegionSegmentInformationFieldLength;\n\t        var genericRegionSegmentFlags = data[position++];\n\t        genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n\t        genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n\t        genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n\t        if (!genericRegion.mmr) {\n\t          atLength = genericRegion.template === 0 ? 4 : 1;\n\t          at = [];\n\t          for (i = 0; i < atLength; i++) {\n\t            at.push({\n\t              x: (0, _util.readInt8)(data, position),\n\t              y: (0, _util.readInt8)(data, position + 1)\n\t            });\n\t            position += 2;\n\t          }\n\t          genericRegion.at = at;\n\t        }\n\t        args = [genericRegion, data, position, end];\n\t        break;\n\t      case 48:\n\t        var pageInfo = {\n\t          width: (0, _util.readUint32)(data, position),\n\t          height: (0, _util.readUint32)(data, position + 4),\n\t          resolutionX: (0, _util.readUint32)(data, position + 8),\n\t          resolutionY: (0, _util.readUint32)(data, position + 12)\n\t        };\n\t        if (pageInfo.height === 0xFFFFFFFF) {\n\t          delete pageInfo.height;\n\t        }\n\t        var pageSegmentFlags = data[position + 16];\n\t        (0, _util.readUint16)(data, position + 17);\n\t        pageInfo.lossless = !!(pageSegmentFlags & 1);\n\t        pageInfo.refinement = !!(pageSegmentFlags & 2);\n\t        pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n\t        pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n\t        pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n\t        pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n\t        args = [pageInfo];\n\t        break;\n\t      case 49:\n\t        break;\n\t      case 50:\n\t        break;\n\t      case 51:\n\t        break;\n\t      case 62:\n\t        break;\n\t      default:\n\t        throw new Jbig2Error('segment type ' + header.typeName + '(' + header.type + ')' + ' is not implemented');\n\t    }\n\t    var callbackName = 'on' + header.typeName;\n\t    if (callbackName in visitor) {\n\t      visitor[callbackName].apply(visitor, args);\n\t    }\n\t  }\n\t  function processSegments(segments, visitor) {\n\t    for (var i = 0, ii = segments.length; i < ii; i++) {\n\t      processSegment(segments[i], visitor);\n\t    }\n\t  }\n\t  function parseJbig2(data, start, end) {\n\t    var position = start;\n\t    if (data[position] !== 0x97 || data[position + 1] !== 0x4A || data[position + 2] !== 0x42 || data[position + 3] !== 0x32 || data[position + 4] !== 0x0D || data[position + 5] !== 0x0A || data[position + 6] !== 0x1A || data[position + 7] !== 0x0A) {\n\t      throw new Jbig2Error('invalid header');\n\t    }\n\t    var header = {};\n\t    position += 8;\n\t    var flags = data[position++];\n\t    header.randomAccess = !(flags & 1);\n\t    if (!(flags & 2)) {\n\t      header.numberOfPages = (0, _util.readUint32)(data, position);\n\t      position += 4;\n\t    }\n\t    readSegments(header, data, position, end);\n\t    throw new Error('Not implemented');\n\t  }\n\t  function parseJbig2Chunks(chunks) {\n\t    var visitor = new SimpleSegmentVisitor();\n\t    for (var i = 0, ii = chunks.length; i < ii; i++) {\n\t      var chunk = chunks[i];\n\t      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n\t      processSegments(segments, visitor);\n\t    }\n\t    return visitor.buffer;\n\t  }\n\t  function SimpleSegmentVisitor() {}\n\t  SimpleSegmentVisitor.prototype = {\n\t    onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n\t      this.currentPageInfo = info;\n\t      var rowSize = info.width + 7 >> 3;\n\t      var buffer = new Uint8ClampedArray(rowSize * info.height);\n\t      if (info.defaultPixelValue) {\n\t        for (var i = 0, ii = buffer.length; i < ii; i++) {\n\t          buffer[i] = 0xFF;\n\t        }\n\t      }\n\t      this.buffer = buffer;\n\t    },\n\t    drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n\t      var pageInfo = this.currentPageInfo;\n\t      var width = regionInfo.width,\n\t          height = regionInfo.height;\n\t      var rowSize = pageInfo.width + 7 >> 3;\n\t      var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n\t      var buffer = this.buffer;\n\t      var mask0 = 128 >> (regionInfo.x & 7);\n\t      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n\t      var i, j, mask, offset;\n\t      switch (combinationOperator) {\n\t        case 0:\n\t          for (i = 0; i < height; i++) {\n\t            mask = mask0;\n\t            offset = offset0;\n\t            for (j = 0; j < width; j++) {\n\t              if (bitmap[i][j]) {\n\t                buffer[offset] |= mask;\n\t              }\n\t              mask >>= 1;\n\t              if (!mask) {\n\t                mask = 128;\n\t                offset++;\n\t              }\n\t            }\n\t            offset0 += rowSize;\n\t          }\n\t          break;\n\t        case 2:\n\t          for (i = 0; i < height; i++) {\n\t            mask = mask0;\n\t            offset = offset0;\n\t            for (j = 0; j < width; j++) {\n\t              if (bitmap[i][j]) {\n\t                buffer[offset] ^= mask;\n\t              }\n\t              mask >>= 1;\n\t              if (!mask) {\n\t                mask = 128;\n\t                offset++;\n\t              }\n\t            }\n\t            offset0 += rowSize;\n\t          }\n\t          break;\n\t        default:\n\t          throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n\t      }\n\t    },\n\t    onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n\t      var regionInfo = region.info;\n\t      var decodingContext = new DecodingContext(data, start, end);\n\t      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n\t      this.drawBitmap(regionInfo, bitmap);\n\t    },\n\t    onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n\t      this.onImmediateGenericRegion.apply(this, arguments);\n\t    },\n\t    onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n\t      var huffmanTables;\n\t      if (dictionary.huffman) {\n\t        throw new Jbig2Error('huffman is not supported');\n\t      }\n\t      var symbols = this.symbols;\n\t      if (!symbols) {\n\t        this.symbols = symbols = {};\n\t      }\n\t      var inputSymbols = [];\n\t      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n\t        inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n\t      }\n\t      var decodingContext = new DecodingContext(data, start, end);\n\t      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext);\n\t    },\n\t    onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n\t      var regionInfo = region.info;\n\t      var huffmanTables;\n\t      var symbols = this.symbols;\n\t      var inputSymbols = [];\n\t      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n\t        inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n\t      }\n\t      var symbolCodeLength = (0, _util.log2)(inputSymbols.length);\n\t      var decodingContext = new DecodingContext(data, start, end);\n\t      var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext);\n\t      this.drawBitmap(regionInfo, bitmap);\n\t    },\n\t    onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n\t      this.onImmediateTextRegion.apply(this, arguments);\n\t    },\n\t    onPatternDictionary: function onPatternDictionary(dictionary, currentSegment, data, start, end) {\n\t      var patterns = this.patterns;\n\t      if (!patterns) {\n\t        this.patterns = patterns = {};\n\t      }\n\t      var decodingContext = new DecodingContext(data, start, end);\n\t      patterns[currentSegment] = decodePatternDictionary(dictionary.mmr, dictionary.patternWidth, dictionary.patternHeight, dictionary.maxPatternIndex, dictionary.template, decodingContext);\n\t    },\n\t    onImmediateHalftoneRegion: function onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n\t      var patterns = this.patterns[referredSegments[0]];\n\t      var regionInfo = region.info;\n\t      var decodingContext = new DecodingContext(data, start, end);\n\t      var bitmap = decodeHalftoneRegion(region.mmr, patterns, region.template, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.enableSkip, region.combinationOperator, region.gridWidth, region.gridHeight, region.gridOffsetX, region.gridOffsetY, region.gridVectorX, region.gridVectorY, decodingContext);\n\t      this.drawBitmap(regionInfo, bitmap);\n\t    },\n\t    onImmediateLosslessHalftoneRegion: function onImmediateLosslessHalftoneRegion() {\n\t      this.onImmediateHalftoneRegion.apply(this, arguments);\n\t    }\n\t  };\n\t  function Jbig2Image() {}\n\t  Jbig2Image.prototype = {\n\t    parseChunks: function Jbig2Image_parseChunks(chunks) {\n\t      return parseJbig2Chunks(chunks);\n\t    }\n\t  };\n\t  return Jbig2Image;\n\t}();\n\texports.Jbig2Image = Jbig2Image;\n\t\n\t/***/ }),\n\t/* 133 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.CMapFactory = exports.IdentityCMap = exports.CMap = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _primitives = __w_pdfjs_require__(2);\n\t\n\tvar _parser = __w_pdfjs_require__(34);\n\t\n\tvar _stream = __w_pdfjs_require__(5);\n\t\n\tvar BUILT_IN_CMAPS = ['Adobe-GB1-UCS2', 'Adobe-CNS1-UCS2', 'Adobe-Japan1-UCS2', 'Adobe-Korea1-UCS2', '78-EUC-H', '78-EUC-V', '78-H', '78-RKSJ-H', '78-RKSJ-V', '78-V', '78ms-RKSJ-H', '78ms-RKSJ-V', '83pv-RKSJ-H', '90ms-RKSJ-H', '90ms-RKSJ-V', '90msp-RKSJ-H', '90msp-RKSJ-V', '90pv-RKSJ-H', '90pv-RKSJ-V', 'Add-H', 'Add-RKSJ-H', 'Add-RKSJ-V', 'Add-V', 'Adobe-CNS1-0', 'Adobe-CNS1-1', 'Adobe-CNS1-2', 'Adobe-CNS1-3', 'Adobe-CNS1-4', 'Adobe-CNS1-5', 'Adobe-CNS1-6', 'Adobe-GB1-0', 'Adobe-GB1-1', 'Adobe-GB1-2', 'Adobe-GB1-3', 'Adobe-GB1-4', 'Adobe-GB1-5', 'Adobe-Japan1-0', 'Adobe-Japan1-1', 'Adobe-Japan1-2', 'Adobe-Japan1-3', 'Adobe-Japan1-4', 'Adobe-Japan1-5', 'Adobe-Japan1-6', 'Adobe-Korea1-0', 'Adobe-Korea1-1', 'Adobe-Korea1-2', 'B5-H', 'B5-V', 'B5pc-H', 'B5pc-V', 'CNS-EUC-H', 'CNS-EUC-V', 'CNS1-H', 'CNS1-V', 'CNS2-H', 'CNS2-V', 'ETHK-B5-H', 'ETHK-B5-V', 'ETen-B5-H', 'ETen-B5-V', 'ETenms-B5-H', 'ETenms-B5-V', 'EUC-H', 'EUC-V', 'Ext-H', 'Ext-RKSJ-H', 'Ext-RKSJ-V', 'Ext-V', 'GB-EUC-H', 'GB-EUC-V', 'GB-H', 'GB-V', 'GBK-EUC-H', 'GBK-EUC-V', 'GBK2K-H', 'GBK2K-V', 'GBKp-EUC-H', 'GBKp-EUC-V', 'GBT-EUC-H', 'GBT-EUC-V', 'GBT-H', 'GBT-V', 'GBTpc-EUC-H', 'GBTpc-EUC-V', 'GBpc-EUC-H', 'GBpc-EUC-V', 'H', 'HKdla-B5-H', 'HKdla-B5-V', 'HKdlb-B5-H', 'HKdlb-B5-V', 'HKgccs-B5-H', 'HKgccs-B5-V', 'HKm314-B5-H', 'HKm314-B5-V', 'HKm471-B5-H', 'HKm471-B5-V', 'HKscs-B5-H', 'HKscs-B5-V', 'Hankaku', 'Hiragana', 'KSC-EUC-H', 'KSC-EUC-V', 'KSC-H', 'KSC-Johab-H', 'KSC-Johab-V', 'KSC-V', 'KSCms-UHC-H', 'KSCms-UHC-HW-H', 'KSCms-UHC-HW-V', 'KSCms-UHC-V', 'KSCpc-EUC-H', 'KSCpc-EUC-V', 'Katakana', 'NWP-H', 'NWP-V', 'RKSJ-H', 'RKSJ-V', 'Roman', 'UniCNS-UCS2-H', 'UniCNS-UCS2-V', 'UniCNS-UTF16-H', 'UniCNS-UTF16-V', 'UniCNS-UTF32-H', 'UniCNS-UTF32-V', 'UniCNS-UTF8-H', 'UniCNS-UTF8-V', 'UniGB-UCS2-H', 'UniGB-UCS2-V', 'UniGB-UTF16-H', 'UniGB-UTF16-V', 'UniGB-UTF32-H', 'UniGB-UTF32-V', 'UniGB-UTF8-H', 'UniGB-UTF8-V', 'UniJIS-UCS2-H', 'UniJIS-UCS2-HW-H', 'UniJIS-UCS2-HW-V', 'UniJIS-UCS2-V', 'UniJIS-UTF16-H', 'UniJIS-UTF16-V', 'UniJIS-UTF32-H', 'UniJIS-UTF32-V', 'UniJIS-UTF8-H', 'UniJIS-UTF8-V', 'UniJIS2004-UTF16-H', 'UniJIS2004-UTF16-V', 'UniJIS2004-UTF32-H', 'UniJIS2004-UTF32-V', 'UniJIS2004-UTF8-H', 'UniJIS2004-UTF8-V', 'UniJISPro-UCS2-HW-V', 'UniJISPro-UCS2-V', 'UniJISPro-UTF8-V', 'UniJISX0213-UTF32-H', 'UniJISX0213-UTF32-V', 'UniJISX02132004-UTF32-H', 'UniJISX02132004-UTF32-V', 'UniKS-UCS2-H', 'UniKS-UCS2-V', 'UniKS-UTF16-H', 'UniKS-UTF16-V', 'UniKS-UTF32-H', 'UniKS-UTF32-V', 'UniKS-UTF8-H', 'UniKS-UTF8-V', 'V', 'WP-Symbol'];\n\tvar CMap = function CMapClosure() {\n\t  function CMap(builtInCMap) {\n\t    this.codespaceRanges = [[], [], [], []];\n\t    this.numCodespaceRanges = 0;\n\t    this._map = [];\n\t    this.name = '';\n\t    this.vertical = false;\n\t    this.useCMap = null;\n\t    this.builtInCMap = builtInCMap;\n\t  }\n\t  CMap.prototype = {\n\t    addCodespaceRange: function addCodespaceRange(n, low, high) {\n\t      this.codespaceRanges[n - 1].push(low, high);\n\t      this.numCodespaceRanges++;\n\t    },\n\t    mapCidRange: function mapCidRange(low, high, dstLow) {\n\t      while (low <= high) {\n\t        this._map[low++] = dstLow++;\n\t      }\n\t    },\n\t    mapBfRange: function mapBfRange(low, high, dstLow) {\n\t      var lastByte = dstLow.length - 1;\n\t      while (low <= high) {\n\t        this._map[low++] = dstLow;\n\t        dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n\t      }\n\t    },\n\t    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n\t      var i = 0,\n\t          ii = array.length;\n\t      while (low <= high && i < ii) {\n\t        this._map[low] = array[i++];\n\t        ++low;\n\t      }\n\t    },\n\t    mapOne: function mapOne(src, dst) {\n\t      this._map[src] = dst;\n\t    },\n\t    lookup: function lookup(code) {\n\t      return this._map[code];\n\t    },\n\t    contains: function contains(code) {\n\t      return this._map[code] !== undefined;\n\t    },\n\t    forEach: function forEach(callback) {\n\t      var map = this._map;\n\t      var length = map.length;\n\t      if (length <= 0x10000) {\n\t        for (var i = 0; i < length; i++) {\n\t          if (map[i] !== undefined) {\n\t            callback(i, map[i]);\n\t          }\n\t        }\n\t      } else {\n\t        for (var _i in map) {\n\t          callback(_i, map[_i]);\n\t        }\n\t      }\n\t    },\n\t    charCodeOf: function charCodeOf(value) {\n\t      var map = this._map;\n\t      if (map.length <= 0x10000) {\n\t        return map.indexOf(value);\n\t      }\n\t      for (var charCode in map) {\n\t        if (map[charCode] === value) {\n\t          return charCode | 0;\n\t        }\n\t      }\n\t      return -1;\n\t    },\n\t    getMap: function getMap() {\n\t      return this._map;\n\t    },\n\t    readCharCode: function readCharCode(str, offset, out) {\n\t      var c = 0;\n\t      var codespaceRanges = this.codespaceRanges;\n\t      var codespaceRangesLen = this.codespaceRanges.length;\n\t      for (var n = 0; n < codespaceRangesLen; n++) {\n\t        c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n\t        var codespaceRange = codespaceRanges[n];\n\t        for (var k = 0, kk = codespaceRange.length; k < kk;) {\n\t          var low = codespaceRange[k++];\n\t          var high = codespaceRange[k++];\n\t          if (c >= low && c <= high) {\n\t            out.charcode = c;\n\t            out.length = n + 1;\n\t            return;\n\t          }\n\t        }\n\t      }\n\t      out.charcode = 0;\n\t      out.length = 1;\n\t    },\n\t\n\t    get length() {\n\t      return this._map.length;\n\t    },\n\t    get isIdentityCMap() {\n\t      if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\n\t        return false;\n\t      }\n\t      if (this._map.length !== 0x10000) {\n\t        return false;\n\t      }\n\t      for (var i = 0; i < 0x10000; i++) {\n\t        if (this._map[i] !== i) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t  };\n\t  return CMap;\n\t}();\n\tvar IdentityCMap = function IdentityCMapClosure() {\n\t  function IdentityCMap(vertical, n) {\n\t    CMap.call(this);\n\t    this.vertical = vertical;\n\t    this.addCodespaceRange(n, 0, 0xffff);\n\t  }\n\t  _util.Util.inherit(IdentityCMap, CMap, {});\n\t  IdentityCMap.prototype = {\n\t    addCodespaceRange: CMap.prototype.addCodespaceRange,\n\t    mapCidRange: function mapCidRange(low, high, dstLow) {\n\t      throw new Error('should not call mapCidRange');\n\t    },\n\t    mapBfRange: function mapBfRange(low, high, dstLow) {\n\t      throw new Error('should not call mapBfRange');\n\t    },\n\t    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n\t      throw new Error('should not call mapBfRangeToArray');\n\t    },\n\t    mapOne: function mapOne(src, dst) {\n\t      throw new Error('should not call mapCidOne');\n\t    },\n\t    lookup: function lookup(code) {\n\t      return Number.isInteger(code) && code <= 0xffff ? code : undefined;\n\t    },\n\t    contains: function contains(code) {\n\t      return Number.isInteger(code) && code <= 0xffff;\n\t    },\n\t    forEach: function forEach(callback) {\n\t      for (var i = 0; i <= 0xffff; i++) {\n\t        callback(i, i);\n\t      }\n\t    },\n\t    charCodeOf: function charCodeOf(value) {\n\t      return Number.isInteger(value) && value <= 0xffff ? value : -1;\n\t    },\n\t    getMap: function getMap() {\n\t      var map = new Array(0x10000);\n\t      for (var i = 0; i <= 0xffff; i++) {\n\t        map[i] = i;\n\t      }\n\t      return map;\n\t    },\n\t\n\t    readCharCode: CMap.prototype.readCharCode,\n\t    get length() {\n\t      return 0x10000;\n\t    },\n\t    get isIdentityCMap() {\n\t      throw new Error('should not access .isIdentityCMap');\n\t    }\n\t  };\n\t  return IdentityCMap;\n\t}();\n\tvar BinaryCMapReader = function BinaryCMapReaderClosure() {\n\t  function hexToInt(a, size) {\n\t    var n = 0;\n\t    for (var i = 0; i <= size; i++) {\n\t      n = n << 8 | a[i];\n\t    }\n\t    return n >>> 0;\n\t  }\n\t  function hexToStr(a, size) {\n\t    if (size === 1) {\n\t      return String.fromCharCode(a[0], a[1]);\n\t    }\n\t    if (size === 3) {\n\t      return String.fromCharCode(a[0], a[1], a[2], a[3]);\n\t    }\n\t    return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n\t  }\n\t  function addHex(a, b, size) {\n\t    var c = 0;\n\t    for (var i = size; i >= 0; i--) {\n\t      c += a[i] + b[i];\n\t      a[i] = c & 255;\n\t      c >>= 8;\n\t    }\n\t  }\n\t  function incHex(a, size) {\n\t    var c = 1;\n\t    for (var i = size; i >= 0 && c > 0; i--) {\n\t      c += a[i];\n\t      a[i] = c & 255;\n\t      c >>= 8;\n\t    }\n\t  }\n\t  var MAX_NUM_SIZE = 16;\n\t  var MAX_ENCODED_NUM_SIZE = 19;\n\t  function BinaryCMapStream(data) {\n\t    this.buffer = data;\n\t    this.pos = 0;\n\t    this.end = data.length;\n\t    this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n\t  }\n\t  BinaryCMapStream.prototype = {\n\t    readByte: function readByte() {\n\t      if (this.pos >= this.end) {\n\t        return -1;\n\t      }\n\t      return this.buffer[this.pos++];\n\t    },\n\t    readNumber: function readNumber() {\n\t      var n = 0;\n\t      var last;\n\t      do {\n\t        var b = this.readByte();\n\t        if (b < 0) {\n\t          throw new _util.FormatError('unexpected EOF in bcmap');\n\t        }\n\t        last = !(b & 0x80);\n\t        n = n << 7 | b & 0x7F;\n\t      } while (!last);\n\t      return n;\n\t    },\n\t    readSigned: function readSigned() {\n\t      var n = this.readNumber();\n\t      return n & 1 ? ~(n >>> 1) : n >>> 1;\n\t    },\n\t    readHex: function readHex(num, size) {\n\t      num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n\t      this.pos += size + 1;\n\t    },\n\t    readHexNumber: function readHexNumber(num, size) {\n\t      var last;\n\t      var stack = this.tmpBuf,\n\t          sp = 0;\n\t      do {\n\t        var b = this.readByte();\n\t        if (b < 0) {\n\t          throw new _util.FormatError('unexpected EOF in bcmap');\n\t        }\n\t        last = !(b & 0x80);\n\t        stack[sp++] = b & 0x7F;\n\t      } while (!last);\n\t      var i = size,\n\t          buffer = 0,\n\t          bufferSize = 0;\n\t      while (i >= 0) {\n\t        while (bufferSize < 8 && stack.length > 0) {\n\t          buffer = stack[--sp] << bufferSize | buffer;\n\t          bufferSize += 7;\n\t        }\n\t        num[i] = buffer & 255;\n\t        i--;\n\t        buffer >>= 8;\n\t        bufferSize -= 8;\n\t      }\n\t    },\n\t    readHexSigned: function readHexSigned(num, size) {\n\t      this.readHexNumber(num, size);\n\t      var sign = num[size] & 1 ? 255 : 0;\n\t      var c = 0;\n\t      for (var i = 0; i <= size; i++) {\n\t        c = (c & 1) << 8 | num[i];\n\t        num[i] = c >> 1 ^ sign;\n\t      }\n\t    },\n\t    readString: function readString() {\n\t      var len = this.readNumber();\n\t      var s = '';\n\t      for (var i = 0; i < len; i++) {\n\t        s += String.fromCharCode(this.readNumber());\n\t      }\n\t      return s;\n\t    }\n\t  };\n\t  function processBinaryCMap(data, cMap, extend) {\n\t    return new Promise(function (resolve, reject) {\n\t      var stream = new BinaryCMapStream(data);\n\t      var header = stream.readByte();\n\t      cMap.vertical = !!(header & 1);\n\t      var useCMap = null;\n\t      var start = new Uint8Array(MAX_NUM_SIZE);\n\t      var end = new Uint8Array(MAX_NUM_SIZE);\n\t      var char = new Uint8Array(MAX_NUM_SIZE);\n\t      var charCode = new Uint8Array(MAX_NUM_SIZE);\n\t      var tmp = new Uint8Array(MAX_NUM_SIZE);\n\t      var code;\n\t      var b;\n\t      while ((b = stream.readByte()) >= 0) {\n\t        var type = b >> 5;\n\t        if (type === 7) {\n\t          switch (b & 0x1F) {\n\t            case 0:\n\t              stream.readString();\n\t              break;\n\t            case 1:\n\t              useCMap = stream.readString();\n\t              break;\n\t          }\n\t          continue;\n\t        }\n\t        var sequence = !!(b & 0x10);\n\t        var dataSize = b & 15;\n\t        if (dataSize + 1 > MAX_NUM_SIZE) {\n\t          throw new Error('processBinaryCMap: Invalid dataSize.');\n\t        }\n\t        var ucs2DataSize = 1;\n\t        var subitemsCount = stream.readNumber();\n\t        var i;\n\t        switch (type) {\n\t          case 0:\n\t            stream.readHex(start, dataSize);\n\t            stream.readHexNumber(end, dataSize);\n\t            addHex(end, start, dataSize);\n\t            cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n\t            for (i = 1; i < subitemsCount; i++) {\n\t              incHex(end, dataSize);\n\t              stream.readHexNumber(start, dataSize);\n\t              addHex(start, end, dataSize);\n\t              stream.readHexNumber(end, dataSize);\n\t              addHex(end, start, dataSize);\n\t              cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n\t            }\n\t            break;\n\t          case 1:\n\t            stream.readHex(start, dataSize);\n\t            stream.readHexNumber(end, dataSize);\n\t            addHex(end, start, dataSize);\n\t            code = stream.readNumber();\n\t            for (i = 1; i < subitemsCount; i++) {\n\t              incHex(end, dataSize);\n\t              stream.readHexNumber(start, dataSize);\n\t              addHex(start, end, dataSize);\n\t              stream.readHexNumber(end, dataSize);\n\t              addHex(end, start, dataSize);\n\t              code = stream.readNumber();\n\t            }\n\t            break;\n\t          case 2:\n\t            stream.readHex(char, dataSize);\n\t            code = stream.readNumber();\n\t            cMap.mapOne(hexToInt(char, dataSize), code);\n\t            for (i = 1; i < subitemsCount; i++) {\n\t              incHex(char, dataSize);\n\t              if (!sequence) {\n\t                stream.readHexNumber(tmp, dataSize);\n\t                addHex(char, tmp, dataSize);\n\t              }\n\t              code = stream.readSigned() + (code + 1);\n\t              cMap.mapOne(hexToInt(char, dataSize), code);\n\t            }\n\t            break;\n\t          case 3:\n\t            stream.readHex(start, dataSize);\n\t            stream.readHexNumber(end, dataSize);\n\t            addHex(end, start, dataSize);\n\t            code = stream.readNumber();\n\t            cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n\t            for (i = 1; i < subitemsCount; i++) {\n\t              incHex(end, dataSize);\n\t              if (!sequence) {\n\t                stream.readHexNumber(start, dataSize);\n\t                addHex(start, end, dataSize);\n\t              } else {\n\t                start.set(end);\n\t              }\n\t              stream.readHexNumber(end, dataSize);\n\t              addHex(end, start, dataSize);\n\t              code = stream.readNumber();\n\t              cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n\t            }\n\t            break;\n\t          case 4:\n\t            stream.readHex(char, ucs2DataSize);\n\t            stream.readHex(charCode, dataSize);\n\t            cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n\t            for (i = 1; i < subitemsCount; i++) {\n\t              incHex(char, ucs2DataSize);\n\t              if (!sequence) {\n\t                stream.readHexNumber(tmp, ucs2DataSize);\n\t                addHex(char, tmp, ucs2DataSize);\n\t              }\n\t              incHex(charCode, dataSize);\n\t              stream.readHexSigned(tmp, dataSize);\n\t              addHex(charCode, tmp, dataSize);\n\t              cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n\t            }\n\t            break;\n\t          case 5:\n\t            stream.readHex(start, ucs2DataSize);\n\t            stream.readHexNumber(end, ucs2DataSize);\n\t            addHex(end, start, ucs2DataSize);\n\t            stream.readHex(charCode, dataSize);\n\t            cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n\t            for (i = 1; i < subitemsCount; i++) {\n\t              incHex(end, ucs2DataSize);\n\t              if (!sequence) {\n\t                stream.readHexNumber(start, ucs2DataSize);\n\t                addHex(start, end, ucs2DataSize);\n\t              } else {\n\t                start.set(end);\n\t              }\n\t              stream.readHexNumber(end, ucs2DataSize);\n\t              addHex(end, start, ucs2DataSize);\n\t              stream.readHex(charCode, dataSize);\n\t              cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n\t            }\n\t            break;\n\t          default:\n\t            reject(new Error('processBinaryCMap: Unknown type: ' + type));\n\t            return;\n\t        }\n\t      }\n\t      if (useCMap) {\n\t        resolve(extend(useCMap));\n\t        return;\n\t      }\n\t      resolve(cMap);\n\t    });\n\t  }\n\t  function BinaryCMapReader() {}\n\t  BinaryCMapReader.prototype = { process: processBinaryCMap };\n\t  return BinaryCMapReader;\n\t}();\n\tvar CMapFactory = function CMapFactoryClosure() {\n\t  function strToInt(str) {\n\t    var a = 0;\n\t    for (var i = 0; i < str.length; i++) {\n\t      a = a << 8 | str.charCodeAt(i);\n\t    }\n\t    return a >>> 0;\n\t  }\n\t  function expectString(obj) {\n\t    if (!(0, _util.isString)(obj)) {\n\t      throw new _util.FormatError('Malformed CMap: expected string.');\n\t    }\n\t  }\n\t  function expectInt(obj) {\n\t    if (!Number.isInteger(obj)) {\n\t      throw new _util.FormatError('Malformed CMap: expected int.');\n\t    }\n\t  }\n\t  function parseBfChar(cMap, lexer) {\n\t    while (true) {\n\t      var obj = lexer.getObj();\n\t      if ((0, _primitives.isEOF)(obj)) {\n\t        break;\n\t      }\n\t      if ((0, _primitives.isCmd)(obj, 'endbfchar')) {\n\t        return;\n\t      }\n\t      expectString(obj);\n\t      var src = strToInt(obj);\n\t      obj = lexer.getObj();\n\t      expectString(obj);\n\t      var dst = obj;\n\t      cMap.mapOne(src, dst);\n\t    }\n\t  }\n\t  function parseBfRange(cMap, lexer) {\n\t    while (true) {\n\t      var obj = lexer.getObj();\n\t      if ((0, _primitives.isEOF)(obj)) {\n\t        break;\n\t      }\n\t      if ((0, _primitives.isCmd)(obj, 'endbfrange')) {\n\t        return;\n\t      }\n\t      expectString(obj);\n\t      var low = strToInt(obj);\n\t      obj = lexer.getObj();\n\t      expectString(obj);\n\t      var high = strToInt(obj);\n\t      obj = lexer.getObj();\n\t      if (Number.isInteger(obj) || (0, _util.isString)(obj)) {\n\t        var dstLow = Number.isInteger(obj) ? String.fromCharCode(obj) : obj;\n\t        cMap.mapBfRange(low, high, dstLow);\n\t      } else if ((0, _primitives.isCmd)(obj, '[')) {\n\t        obj = lexer.getObj();\n\t        var array = [];\n\t        while (!(0, _primitives.isCmd)(obj, ']') && !(0, _primitives.isEOF)(obj)) {\n\t          array.push(obj);\n\t          obj = lexer.getObj();\n\t        }\n\t        cMap.mapBfRangeToArray(low, high, array);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    throw new _util.FormatError('Invalid bf range.');\n\t  }\n\t  function parseCidChar(cMap, lexer) {\n\t    while (true) {\n\t      var obj = lexer.getObj();\n\t      if ((0, _primitives.isEOF)(obj)) {\n\t        break;\n\t      }\n\t      if ((0, _primitives.isCmd)(obj, 'endcidchar')) {\n\t        return;\n\t      }\n\t      expectString(obj);\n\t      var src = strToInt(obj);\n\t      obj = lexer.getObj();\n\t      expectInt(obj);\n\t      var dst = obj;\n\t      cMap.mapOne(src, dst);\n\t    }\n\t  }\n\t  function parseCidRange(cMap, lexer) {\n\t    while (true) {\n\t      var obj = lexer.getObj();\n\t      if ((0, _primitives.isEOF)(obj)) {\n\t        break;\n\t      }\n\t      if ((0, _primitives.isCmd)(obj, 'endcidrange')) {\n\t        return;\n\t      }\n\t      expectString(obj);\n\t      var low = strToInt(obj);\n\t      obj = lexer.getObj();\n\t      expectString(obj);\n\t      var high = strToInt(obj);\n\t      obj = lexer.getObj();\n\t      expectInt(obj);\n\t      var dstLow = obj;\n\t      cMap.mapCidRange(low, high, dstLow);\n\t    }\n\t  }\n\t  function parseCodespaceRange(cMap, lexer) {\n\t    while (true) {\n\t      var obj = lexer.getObj();\n\t      if ((0, _primitives.isEOF)(obj)) {\n\t        break;\n\t      }\n\t      if ((0, _primitives.isCmd)(obj, 'endcodespacerange')) {\n\t        return;\n\t      }\n\t      if (!(0, _util.isString)(obj)) {\n\t        break;\n\t      }\n\t      var low = strToInt(obj);\n\t      obj = lexer.getObj();\n\t      if (!(0, _util.isString)(obj)) {\n\t        break;\n\t      }\n\t      var high = strToInt(obj);\n\t      cMap.addCodespaceRange(obj.length, low, high);\n\t    }\n\t    throw new _util.FormatError('Invalid codespace range.');\n\t  }\n\t  function parseWMode(cMap, lexer) {\n\t    var obj = lexer.getObj();\n\t    if (Number.isInteger(obj)) {\n\t      cMap.vertical = !!obj;\n\t    }\n\t  }\n\t  function parseCMapName(cMap, lexer) {\n\t    var obj = lexer.getObj();\n\t    if ((0, _primitives.isName)(obj) && (0, _util.isString)(obj.name)) {\n\t      cMap.name = obj.name;\n\t    }\n\t  }\n\t  function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\n\t    var previous;\n\t    var embededUseCMap;\n\t    objLoop: while (true) {\n\t      try {\n\t        var obj = lexer.getObj();\n\t        if ((0, _primitives.isEOF)(obj)) {\n\t          break;\n\t        } else if ((0, _primitives.isName)(obj)) {\n\t          if (obj.name === 'WMode') {\n\t            parseWMode(cMap, lexer);\n\t          } else if (obj.name === 'CMapName') {\n\t            parseCMapName(cMap, lexer);\n\t          }\n\t          previous = obj;\n\t        } else if ((0, _primitives.isCmd)(obj)) {\n\t          switch (obj.cmd) {\n\t            case 'endcmap':\n\t              break objLoop;\n\t            case 'usecmap':\n\t              if ((0, _primitives.isName)(previous)) {\n\t                embededUseCMap = previous.name;\n\t              }\n\t              break;\n\t            case 'begincodespacerange':\n\t              parseCodespaceRange(cMap, lexer);\n\t              break;\n\t            case 'beginbfchar':\n\t              parseBfChar(cMap, lexer);\n\t              break;\n\t            case 'begincidchar':\n\t              parseCidChar(cMap, lexer);\n\t              break;\n\t            case 'beginbfrange':\n\t              parseBfRange(cMap, lexer);\n\t              break;\n\t            case 'begincidrange':\n\t              parseCidRange(cMap, lexer);\n\t              break;\n\t          }\n\t        }\n\t      } catch (ex) {\n\t        if (ex instanceof _util.MissingDataException) {\n\t          throw ex;\n\t        }\n\t        (0, _util.warn)('Invalid cMap data: ' + ex);\n\t        continue;\n\t      }\n\t    }\n\t    if (!useCMap && embededUseCMap) {\n\t      useCMap = embededUseCMap;\n\t    }\n\t    if (useCMap) {\n\t      return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n\t    }\n\t    return Promise.resolve(cMap);\n\t  }\n\t  function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\n\t    return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\n\t      cMap.useCMap = newCMap;\n\t      if (cMap.numCodespaceRanges === 0) {\n\t        var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n\t        for (var i = 0; i < useCodespaceRanges.length; i++) {\n\t          cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n\t        }\n\t        cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n\t      }\n\t      cMap.useCMap.forEach(function (key, value) {\n\t        if (!cMap.contains(key)) {\n\t          cMap.mapOne(key, cMap.useCMap.lookup(key));\n\t        }\n\t      });\n\t      return cMap;\n\t    });\n\t  }\n\t  function createBuiltInCMap(name, fetchBuiltInCMap) {\n\t    if (name === 'Identity-H') {\n\t      return Promise.resolve(new IdentityCMap(false, 2));\n\t    } else if (name === 'Identity-V') {\n\t      return Promise.resolve(new IdentityCMap(true, 2));\n\t    }\n\t    if (BUILT_IN_CMAPS.indexOf(name) === -1) {\n\t      return Promise.reject(new Error('Unknown CMap name: ' + name));\n\t    }\n\t    if (!fetchBuiltInCMap) {\n\t      return Promise.reject(new Error('Built-in CMap parameters are not provided.'));\n\t    }\n\t    return fetchBuiltInCMap(name).then(function (data) {\n\t      var cMapData = data.cMapData,\n\t          compressionType = data.compressionType;\n\t      var cMap = new CMap(true);\n\t      if (compressionType === _util.CMapCompressionType.BINARY) {\n\t        return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\n\t          return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n\t        });\n\t      }\n\t      if (compressionType === _util.CMapCompressionType.NONE) {\n\t        var lexer = new _parser.Lexer(new _stream.Stream(cMapData));\n\t        return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\n\t      }\n\t      return Promise.reject(new Error('TODO: Only BINARY/NONE CMap compression is currently supported.'));\n\t    });\n\t  }\n\t  return {\n\t    create: function create(params) {\n\t      var encoding = params.encoding;\n\t      var fetchBuiltInCMap = params.fetchBuiltInCMap;\n\t      var useCMap = params.useCMap;\n\t      if ((0, _primitives.isName)(encoding)) {\n\t        return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\n\t      } else if ((0, _primitives.isStream)(encoding)) {\n\t        var cMap = new CMap();\n\t        var lexer = new _parser.Lexer(encoding);\n\t        return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\n\t          if (parsedCMap.isIdentityCMap) {\n\t            return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\n\t          }\n\t          return parsedCMap;\n\t        });\n\t      }\n\t      return Promise.reject(new Error('Encoding required.'));\n\t    }\n\t  };\n\t}();\n\texports.CMap = CMap;\n\texports.IdentityCMap = IdentityCMap;\n\texports.CMapFactory = CMapFactory;\n\t\n\t/***/ }),\n\t/* 134 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.getFontType = exports.ProblematicCharRanges = exports.IdentityToUnicodeMap = exports.ToUnicodeMap = exports.FontFlags = exports.Font = exports.ErrorFont = exports.PRIVATE_USE_OFFSET_END = exports.PRIVATE_USE_OFFSET_START = exports.SEAC_ANALYSIS_ENABLED = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _cff_parser = __w_pdfjs_require__(78);\n\t\n\tvar _glyphlist = __w_pdfjs_require__(47);\n\t\n\tvar _encodings = __w_pdfjs_require__(27);\n\t\n\tvar _standard_fonts = __w_pdfjs_require__(79);\n\t\n\tvar _unicode = __w_pdfjs_require__(80);\n\t\n\tvar _font_renderer = __w_pdfjs_require__(136);\n\t\n\tvar _stream = __w_pdfjs_require__(5);\n\t\n\tvar _type1_parser = __w_pdfjs_require__(137);\n\t\n\tvar PRIVATE_USE_OFFSET_START = 0xE000;\n\tvar PRIVATE_USE_OFFSET_END = 0xF8FF;\n\tvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\n\tvar PDF_GLYPH_SPACE_UNITS = 1000;\n\tvar SEAC_ANALYSIS_ENABLED = false;\n\tvar FontFlags = {\n\t  FixedPitch: 1,\n\t  Serif: 2,\n\t  Symbolic: 4,\n\t  Script: 8,\n\t  Nonsymbolic: 32,\n\t  Italic: 64,\n\t  AllCap: 65536,\n\t  SmallCap: 131072,\n\t  ForceBold: 262144\n\t};\n\tvar MacStandardGlyphOrdering = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\tfunction adjustWidths(properties) {\n\t  if (!properties.fontMatrix) {\n\t    return;\n\t  }\n\t  if (properties.fontMatrix[0] === _util.FONT_IDENTITY_MATRIX[0]) {\n\t    return;\n\t  }\n\t  var scale = 0.001 / properties.fontMatrix[0];\n\t  var glyphsWidths = properties.widths;\n\t  for (var glyph in glyphsWidths) {\n\t    glyphsWidths[glyph] *= scale;\n\t  }\n\t  properties.defaultWidth *= scale;\n\t}\n\tfunction adjustToUnicode(properties, builtInEncoding) {\n\t  if (properties.hasIncludedToUnicodeMap) {\n\t    return;\n\t  }\n\t  if (properties.hasEncoding) {\n\t    return;\n\t  }\n\t  if (builtInEncoding === properties.defaultEncoding) {\n\t    return;\n\t  }\n\t  if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n\t    return;\n\t  }\n\t  var toUnicode = [],\n\t      glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n\t  for (var charCode in builtInEncoding) {\n\t    var glyphName = builtInEncoding[charCode];\n\t    var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n\t    if (unicode !== -1) {\n\t      toUnicode[charCode] = String.fromCharCode(unicode);\n\t    }\n\t  }\n\t  properties.toUnicode.amend(toUnicode);\n\t}\n\tfunction getFontType(type, subtype) {\n\t  switch (type) {\n\t    case 'Type1':\n\t      return subtype === 'Type1C' ? _util.FontType.TYPE1C : _util.FontType.TYPE1;\n\t    case 'CIDFontType0':\n\t      return subtype === 'CIDFontType0C' ? _util.FontType.CIDFONTTYPE0C : _util.FontType.CIDFONTTYPE0;\n\t    case 'OpenType':\n\t      return _util.FontType.OPENTYPE;\n\t    case 'TrueType':\n\t      return _util.FontType.TRUETYPE;\n\t    case 'CIDFontType2':\n\t      return _util.FontType.CIDFONTTYPE2;\n\t    case 'MMType1':\n\t      return _util.FontType.MMTYPE1;\n\t    case 'Type0':\n\t      return _util.FontType.TYPE0;\n\t    default:\n\t      return _util.FontType.UNKNOWN;\n\t  }\n\t}\n\tfunction recoverGlyphName(name, glyphsUnicodeMap) {\n\t  if (glyphsUnicodeMap[name] !== undefined) {\n\t    return name;\n\t  }\n\t  var unicode = (0, _unicode.getUnicodeForGlyph)(name, glyphsUnicodeMap);\n\t  if (unicode !== -1) {\n\t    for (var key in glyphsUnicodeMap) {\n\t      if (glyphsUnicodeMap[key] === unicode) {\n\t        return key;\n\t      }\n\t    }\n\t  }\n\t  (0, _util.info)('Unable to recover a standard glyph name for: ' + name);\n\t  return name;\n\t}\n\tvar Glyph = function GlyphClosure() {\n\t  function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n\t    this.fontChar = fontChar;\n\t    this.unicode = unicode;\n\t    this.accent = accent;\n\t    this.width = width;\n\t    this.vmetric = vmetric;\n\t    this.operatorListId = operatorListId;\n\t    this.isSpace = isSpace;\n\t    this.isInFont = isInFont;\n\t  }\n\t  Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n\t    return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n\t  };\n\t  return Glyph;\n\t}();\n\tvar ToUnicodeMap = function ToUnicodeMapClosure() {\n\t  function ToUnicodeMap(cmap) {\n\t    this._map = cmap;\n\t  }\n\t  ToUnicodeMap.prototype = {\n\t    get length() {\n\t      return this._map.length;\n\t    },\n\t    forEach: function forEach(callback) {\n\t      for (var charCode in this._map) {\n\t        callback(charCode, this._map[charCode].charCodeAt(0));\n\t      }\n\t    },\n\t    has: function has(i) {\n\t      return this._map[i] !== undefined;\n\t    },\n\t    get: function get(i) {\n\t      return this._map[i];\n\t    },\n\t    charCodeOf: function charCodeOf(value) {\n\t      var map = this._map;\n\t      if (map.length <= 0x10000) {\n\t        return map.indexOf(value);\n\t      }\n\t      for (var charCode in map) {\n\t        if (map[charCode] === value) {\n\t          return charCode | 0;\n\t        }\n\t      }\n\t      return -1;\n\t    },\n\t    amend: function amend(map) {\n\t      for (var charCode in map) {\n\t        this._map[charCode] = map[charCode];\n\t      }\n\t    }\n\t  };\n\t  return ToUnicodeMap;\n\t}();\n\tvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n\t  function IdentityToUnicodeMap(firstChar, lastChar) {\n\t    this.firstChar = firstChar;\n\t    this.lastChar = lastChar;\n\t  }\n\t  IdentityToUnicodeMap.prototype = {\n\t    get length() {\n\t      return this.lastChar + 1 - this.firstChar;\n\t    },\n\t    forEach: function forEach(callback) {\n\t      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n\t        callback(i, i);\n\t      }\n\t    },\n\t    has: function has(i) {\n\t      return this.firstChar <= i && i <= this.lastChar;\n\t    },\n\t    get: function get(i) {\n\t      if (this.firstChar <= i && i <= this.lastChar) {\n\t        return String.fromCharCode(i);\n\t      }\n\t      return undefined;\n\t    },\n\t    charCodeOf: function charCodeOf(v) {\n\t      return Number.isInteger(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n\t    },\n\t    amend: function amend(map) {\n\t      throw new Error('Should not call amend()');\n\t    }\n\t  };\n\t  return IdentityToUnicodeMap;\n\t}();\n\tvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n\t  function writeInt16(dest, offset, num) {\n\t    dest[offset] = num >> 8 & 0xFF;\n\t    dest[offset + 1] = num & 0xFF;\n\t  }\n\t  function writeInt32(dest, offset, num) {\n\t    dest[offset] = num >> 24 & 0xFF;\n\t    dest[offset + 1] = num >> 16 & 0xFF;\n\t    dest[offset + 2] = num >> 8 & 0xFF;\n\t    dest[offset + 3] = num & 0xFF;\n\t  }\n\t  function writeData(dest, offset, data) {\n\t    var i, ii;\n\t    if (data instanceof Uint8Array) {\n\t      dest.set(data, offset);\n\t    } else if (typeof data === 'string') {\n\t      for (i = 0, ii = data.length; i < ii; i++) {\n\t        dest[offset++] = data.charCodeAt(i) & 0xFF;\n\t      }\n\t    } else {\n\t      for (i = 0, ii = data.length; i < ii; i++) {\n\t        dest[offset++] = data[i] & 0xFF;\n\t      }\n\t    }\n\t  }\n\t  function OpenTypeFileBuilder(sfnt) {\n\t    this.sfnt = sfnt;\n\t    this.tables = Object.create(null);\n\t  }\n\t  OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n\t    var maxPower2 = 1,\n\t        log2 = 0;\n\t    while ((maxPower2 ^ entriesCount) > maxPower2) {\n\t      maxPower2 <<= 1;\n\t      log2++;\n\t    }\n\t    var searchRange = maxPower2 * entrySize;\n\t    return {\n\t      range: searchRange,\n\t      entry: log2,\n\t      rangeShift: entrySize * entriesCount - searchRange\n\t    };\n\t  };\n\t  var OTF_HEADER_SIZE = 12;\n\t  var OTF_TABLE_ENTRY_SIZE = 16;\n\t  OpenTypeFileBuilder.prototype = {\n\t    toArray: function OpenTypeFileBuilder_toArray() {\n\t      var sfnt = this.sfnt;\n\t      var tables = this.tables;\n\t      var tablesNames = Object.keys(tables);\n\t      tablesNames.sort();\n\t      var numTables = tablesNames.length;\n\t      var i, j, jj, table, tableName;\n\t      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n\t      var tableOffsets = [offset];\n\t      for (i = 0; i < numTables; i++) {\n\t        table = tables[tablesNames[i]];\n\t        var paddedLength = (table.length + 3 & ~3) >>> 0;\n\t        offset += paddedLength;\n\t        tableOffsets.push(offset);\n\t      }\n\t      var file = new Uint8Array(offset);\n\t      for (i = 0; i < numTables; i++) {\n\t        table = tables[tablesNames[i]];\n\t        writeData(file, tableOffsets[i], table);\n\t      }\n\t      if (sfnt === 'true') {\n\t        sfnt = (0, _util.string32)(0x00010000);\n\t      }\n\t      file[0] = sfnt.charCodeAt(0) & 0xFF;\n\t      file[1] = sfnt.charCodeAt(1) & 0xFF;\n\t      file[2] = sfnt.charCodeAt(2) & 0xFF;\n\t      file[3] = sfnt.charCodeAt(3) & 0xFF;\n\t      writeInt16(file, 4, numTables);\n\t      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n\t      writeInt16(file, 6, searchParams.range);\n\t      writeInt16(file, 8, searchParams.entry);\n\t      writeInt16(file, 10, searchParams.rangeShift);\n\t      offset = OTF_HEADER_SIZE;\n\t      for (i = 0; i < numTables; i++) {\n\t        tableName = tablesNames[i];\n\t        file[offset] = tableName.charCodeAt(0) & 0xFF;\n\t        file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n\t        file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n\t        file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n\t        var checksum = 0;\n\t        for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n\t          var quad = (0, _util.readUint32)(file, j);\n\t          checksum = checksum + quad >>> 0;\n\t        }\n\t        writeInt32(file, offset + 4, checksum);\n\t        writeInt32(file, offset + 8, tableOffsets[i]);\n\t        writeInt32(file, offset + 12, tables[tableName].length);\n\t        offset += OTF_TABLE_ENTRY_SIZE;\n\t      }\n\t      return file;\n\t    },\n\t    addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n\t      if (tag in this.tables) {\n\t        throw new Error('Table ' + tag + ' already exists');\n\t      }\n\t      this.tables[tag] = data;\n\t    }\n\t  };\n\t  return OpenTypeFileBuilder;\n\t}();\n\tvar ProblematicCharRanges = new Int32Array([0x0000, 0x0020, 0x007F, 0x00A1, 0x00AD, 0x00AE, 0x0600, 0x0780, 0x08A0, 0x10A0, 0x1780, 0x1800, 0x1C00, 0x1C50, 0x2000, 0x2010, 0x2011, 0x2012, 0x2028, 0x2030, 0x205F, 0x2070, 0x25CC, 0x25CD, 0x3000, 0x3001, 0x3164, 0x3165, 0xAA60, 0xAA80, 0xFFF0, 0x10000]);\n\tvar Font = function FontClosure() {\n\t  function Font(name, file, properties) {\n\t    var charCode;\n\t    this.name = name;\n\t    this.loadedName = properties.loadedName;\n\t    this.isType3Font = properties.isType3Font;\n\t    this.sizes = [];\n\t    this.missingFile = false;\n\t    this.glyphCache = Object.create(null);\n\t    this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n\t    this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n\t    this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n\t    var type = properties.type;\n\t    var subtype = properties.subtype;\n\t    this.type = type;\n\t    this.subtype = subtype;\n\t    this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\n\t    this.differences = properties.differences;\n\t    this.widths = properties.widths;\n\t    this.defaultWidth = properties.defaultWidth;\n\t    this.composite = properties.composite;\n\t    this.wideChars = properties.wideChars;\n\t    this.cMap = properties.cMap;\n\t    this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n\t    this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n\t    this.fontMatrix = properties.fontMatrix;\n\t    this.bbox = properties.bbox;\n\t    this.defaultEncoding = properties.defaultEncoding;\n\t    this.toUnicode = properties.toUnicode;\n\t    this.toFontChar = [];\n\t    if (properties.type === 'Type3') {\n\t      for (charCode = 0; charCode < 256; charCode++) {\n\t        this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n\t      }\n\t      this.fontType = _util.FontType.TYPE3;\n\t      return;\n\t    }\n\t    this.cidEncoding = properties.cidEncoding;\n\t    this.vertical = properties.vertical;\n\t    if (this.vertical) {\n\t      this.vmetrics = properties.vmetrics;\n\t      this.defaultVMetrics = properties.defaultVMetrics;\n\t    }\n\t    if (!file || file.isEmpty) {\n\t      if (file) {\n\t        (0, _util.warn)('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n\t      }\n\t      this.fallbackToSystemFont();\n\t      return;\n\t    }\n\t    if (subtype === 'Type1C') {\n\t      if (type !== 'Type1' && type !== 'MMType1') {\n\t        if (isTrueTypeFile(file)) {\n\t          subtype = 'TrueType';\n\t        } else {\n\t          type = 'Type1';\n\t        }\n\t      } else if (isOpenTypeFile(file)) {\n\t        subtype = 'OpenType';\n\t      }\n\t    }\n\t    if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n\t      type = 'CIDFontType0';\n\t    }\n\t    if (type === 'CIDFontType0') {\n\t      if (isType1File(file)) {\n\t        subtype = 'CIDFontType0';\n\t      } else if (isOpenTypeFile(file)) {\n\t        subtype = 'OpenType';\n\t      } else {\n\t        subtype = 'CIDFontType0C';\n\t      }\n\t    }\n\t    if (subtype === 'OpenType' && type !== 'OpenType') {\n\t      type = 'OpenType';\n\t    }\n\t    try {\n\t      var data;\n\t      switch (type) {\n\t        case 'MMType1':\n\t          (0, _util.info)('MMType1 font (' + name + '), falling back to Type1.');\n\t        case 'Type1':\n\t        case 'CIDFontType0':\n\t          this.mimetype = 'font/opentype';\n\t          var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n\t          adjustWidths(properties);\n\t          data = this.convert(name, cff, properties);\n\t          break;\n\t        case 'OpenType':\n\t        case 'TrueType':\n\t        case 'CIDFontType2':\n\t          this.mimetype = 'font/opentype';\n\t          data = this.checkAndRepair(name, file, properties);\n\t          if (this.isOpenType) {\n\t            adjustWidths(properties);\n\t            type = 'OpenType';\n\t          }\n\t          break;\n\t        default:\n\t          throw new _util.FormatError('Font ' + type + ' is not supported');\n\t      }\n\t    } catch (e) {\n\t      if (!(e instanceof _util.FormatError)) {\n\t        throw e;\n\t      }\n\t      (0, _util.warn)(e);\n\t      this.fallbackToSystemFont();\n\t      return;\n\t    }\n\t    this.data = data;\n\t    this.fontType = getFontType(type, subtype);\n\t    this.fontMatrix = properties.fontMatrix;\n\t    this.widths = properties.widths;\n\t    this.defaultWidth = properties.defaultWidth;\n\t    this.toUnicode = properties.toUnicode;\n\t    this.encoding = properties.baseEncoding;\n\t    this.seacMap = properties.seacMap;\n\t    this.loading = true;\n\t  }\n\t  Font.getFontID = function () {\n\t    var ID = 1;\n\t    return function Font_getFontID() {\n\t      return String(ID++);\n\t    };\n\t  }();\n\t  function int16(b0, b1) {\n\t    return (b0 << 8) + b1;\n\t  }\n\t  function writeSignedInt16(bytes, index, value) {\n\t    bytes[index + 1] = value;\n\t    bytes[index] = value >>> 8;\n\t  }\n\t  function signedInt16(b0, b1) {\n\t    var value = (b0 << 8) + b1;\n\t    return value & 1 << 15 ? value - 0x10000 : value;\n\t  }\n\t  function int32(b0, b1, b2, b3) {\n\t    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n\t  }\n\t  function string16(value) {\n\t    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n\t  }\n\t  function safeString16(value) {\n\t    value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\n\t    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n\t  }\n\t  function isTrueTypeFile(file) {\n\t    var header = file.peekBytes(4);\n\t    return (0, _util.readUint32)(header, 0) === 0x00010000;\n\t  }\n\t  function isOpenTypeFile(file) {\n\t    var header = file.peekBytes(4);\n\t    return (0, _util.bytesToString)(header) === 'OTTO';\n\t  }\n\t  function isType1File(file) {\n\t    var header = file.peekBytes(2);\n\t    if (header[0] === 0x25 && header[1] === 0x21) {\n\t      return true;\n\t    }\n\t    if (header[0] === 0x80 && header[1] === 0x01) {\n\t      return true;\n\t    }\n\t    return false;\n\t  }\n\t  function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n\t    var toFontChar = [],\n\t        unicode;\n\t    for (var i = 0, ii = encoding.length; i < ii; i++) {\n\t      unicode = (0, _unicode.getUnicodeForGlyph)(encoding[i], glyphsUnicodeMap);\n\t      if (unicode !== -1) {\n\t        toFontChar[i] = unicode;\n\t      }\n\t    }\n\t    for (var charCode in differences) {\n\t      unicode = (0, _unicode.getUnicodeForGlyph)(differences[charCode], glyphsUnicodeMap);\n\t      if (unicode !== -1) {\n\t        toFontChar[+charCode] = unicode;\n\t      }\n\t    }\n\t    return toFontChar;\n\t  }\n\t  function isProblematicUnicodeLocation(code) {\n\t    var i = 0,\n\t        j = ProblematicCharRanges.length - 1;\n\t    while (i < j) {\n\t      var c = i + j + 1 >> 1;\n\t      if (code < ProblematicCharRanges[c]) {\n\t        j = c - 1;\n\t      } else {\n\t        i = c;\n\t      }\n\t    }\n\t    return !(i & 1);\n\t  }\n\t  function adjustMapping(charCodeToGlyphId, properties, missingGlyphs) {\n\t    var toUnicode = properties.toUnicode;\n\t    var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n\t    var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\n\t    var newMap = Object.create(null);\n\t    var toFontChar = [];\n\t    var usedFontCharCodes = [];\n\t    var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n\t    for (var originalCharCode in charCodeToGlyphId) {\n\t      originalCharCode |= 0;\n\t      var glyphId = charCodeToGlyphId[originalCharCode];\n\t      if (missingGlyphs[glyphId]) {\n\t        continue;\n\t      }\n\t      var fontCharCode = originalCharCode;\n\t      var hasUnicodeValue = false;\n\t      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n\t        hasUnicodeValue = true;\n\t        var unicode = toUnicode.get(fontCharCode);\n\t        if (unicode.length === 1) {\n\t          fontCharCode = unicode.charCodeAt(0);\n\t        }\n\t      }\n\t      if (usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) {\n\t        do {\n\t          if (nextAvailableFontCharCode > PRIVATE_USE_OFFSET_END) {\n\t            (0, _util.warn)('Ran out of space in font private use area.');\n\t            break;\n\t          }\n\t          fontCharCode = nextAvailableFontCharCode++;\n\t          if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n\t            fontCharCode = 0xF020;\n\t            nextAvailableFontCharCode = fontCharCode + 1;\n\t          }\n\t        } while (usedFontCharCodes[fontCharCode] !== undefined);\n\t      }\n\t      newMap[fontCharCode] = glyphId;\n\t      toFontChar[originalCharCode] = fontCharCode;\n\t      usedFontCharCodes[fontCharCode] = true;\n\t    }\n\t    return {\n\t      toFontChar: toFontChar,\n\t      charCodeToGlyphId: newMap,\n\t      nextAvailableFontCharCode: nextAvailableFontCharCode\n\t    };\n\t  }\n\t  function getRanges(glyphs, numGlyphs) {\n\t    var codes = [];\n\t    for (var charCode in glyphs) {\n\t      if (glyphs[charCode] >= numGlyphs) {\n\t        continue;\n\t      }\n\t      codes.push({\n\t        fontCharCode: charCode | 0,\n\t        glyphId: glyphs[charCode]\n\t      });\n\t    }\n\t    if (codes.length === 0) {\n\t      codes.push({\n\t        fontCharCode: 0,\n\t        glyphId: 0\n\t      });\n\t    }\n\t    codes.sort(function fontGetRangesSort(a, b) {\n\t      return a.fontCharCode - b.fontCharCode;\n\t    });\n\t    var ranges = [];\n\t    var length = codes.length;\n\t    for (var n = 0; n < length;) {\n\t      var start = codes[n].fontCharCode;\n\t      var codeIndices = [codes[n].glyphId];\n\t      ++n;\n\t      var end = start;\n\t      while (n < length && end + 1 === codes[n].fontCharCode) {\n\t        codeIndices.push(codes[n].glyphId);\n\t        ++end;\n\t        ++n;\n\t        if (end === 0xFFFF) {\n\t          break;\n\t        }\n\t      }\n\t      ranges.push([start, end, codeIndices]);\n\t    }\n\t    return ranges;\n\t  }\n\t  function createCmapTable(glyphs, numGlyphs) {\n\t    var ranges = getRanges(glyphs, numGlyphs);\n\t    var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n\t    var cmap = '\\x00\\x00' + string16(numTables) + '\\x00\\x03' + '\\x00\\x01' + (0, _util.string32)(4 + numTables * 8);\n\t    var i, ii, j, jj;\n\t    for (i = ranges.length - 1; i >= 0; --i) {\n\t      if (ranges[i][0] <= 0xFFFF) {\n\t        break;\n\t      }\n\t    }\n\t    var bmpLength = i + 1;\n\t    if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n\t      ranges[i][1] = 0xFFFE;\n\t    }\n\t    var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n\t    var segCount = bmpLength + trailingRangesCount;\n\t    var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n\t    var startCount = '';\n\t    var endCount = '';\n\t    var idDeltas = '';\n\t    var idRangeOffsets = '';\n\t    var glyphsIds = '';\n\t    var bias = 0;\n\t    var range, start, end, codes;\n\t    for (i = 0, ii = bmpLength; i < ii; i++) {\n\t      range = ranges[i];\n\t      start = range[0];\n\t      end = range[1];\n\t      startCount += string16(start);\n\t      endCount += string16(end);\n\t      codes = range[2];\n\t      var contiguous = true;\n\t      for (j = 1, jj = codes.length; j < jj; ++j) {\n\t        if (codes[j] !== codes[j - 1] + 1) {\n\t          contiguous = false;\n\t          break;\n\t        }\n\t      }\n\t      if (!contiguous) {\n\t        var offset = (segCount - i) * 2 + bias * 2;\n\t        bias += end - start + 1;\n\t        idDeltas += string16(0);\n\t        idRangeOffsets += string16(offset);\n\t        for (j = 0, jj = codes.length; j < jj; ++j) {\n\t          glyphsIds += string16(codes[j]);\n\t        }\n\t      } else {\n\t        var startCode = codes[0];\n\t        idDeltas += string16(startCode - start & 0xFFFF);\n\t        idRangeOffsets += string16(0);\n\t      }\n\t    }\n\t    if (trailingRangesCount > 0) {\n\t      endCount += '\\xFF\\xFF';\n\t      startCount += '\\xFF\\xFF';\n\t      idDeltas += '\\x00\\x01';\n\t      idRangeOffsets += '\\x00\\x00';\n\t    }\n\t    var format314 = '\\x00\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\x00\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\n\t    var format31012 = '';\n\t    var header31012 = '';\n\t    if (numTables > 1) {\n\t      cmap += '\\x00\\x03' + '\\x00\\x0A' + (0, _util.string32)(4 + numTables * 8 + 4 + format314.length);\n\t      format31012 = '';\n\t      for (i = 0, ii = ranges.length; i < ii; i++) {\n\t        range = ranges[i];\n\t        start = range[0];\n\t        codes = range[2];\n\t        var code = codes[0];\n\t        for (j = 1, jj = codes.length; j < jj; ++j) {\n\t          if (codes[j] !== codes[j - 1] + 1) {\n\t            end = range[0] + j - 1;\n\t            format31012 += (0, _util.string32)(start) + (0, _util.string32)(end) + (0, _util.string32)(code);\n\t            start = end + 1;\n\t            code = codes[j];\n\t          }\n\t        }\n\t        format31012 += (0, _util.string32)(start) + (0, _util.string32)(range[1]) + (0, _util.string32)(code);\n\t      }\n\t      header31012 = '\\x00\\x0C' + '\\x00\\x00' + (0, _util.string32)(format31012.length + 16) + '\\x00\\x00\\x00\\x00' + (0, _util.string32)(format31012.length / 12);\n\t    }\n\t    return cmap + '\\x00\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\n\t  }\n\t  function validateOS2Table(os2) {\n\t    var stream = new _stream.Stream(os2.data);\n\t    var version = stream.getUint16();\n\t    stream.getBytes(60);\n\t    var selection = stream.getUint16();\n\t    if (version < 4 && selection & 0x0300) {\n\t      return false;\n\t    }\n\t    var firstChar = stream.getUint16();\n\t    var lastChar = stream.getUint16();\n\t    if (firstChar > lastChar) {\n\t      return false;\n\t    }\n\t    stream.getBytes(6);\n\t    var usWinAscent = stream.getUint16();\n\t    if (usWinAscent === 0) {\n\t      return false;\n\t    }\n\t    os2.data[8] = os2.data[9] = 0;\n\t    return true;\n\t  }\n\t  function createOS2Table(properties, charstrings, override) {\n\t    override = override || {\n\t      unitsPerEm: 0,\n\t      yMax: 0,\n\t      yMin: 0,\n\t      ascent: 0,\n\t      descent: 0\n\t    };\n\t    var ulUnicodeRange1 = 0;\n\t    var ulUnicodeRange2 = 0;\n\t    var ulUnicodeRange3 = 0;\n\t    var ulUnicodeRange4 = 0;\n\t    var firstCharIndex = null;\n\t    var lastCharIndex = 0;\n\t    if (charstrings) {\n\t      for (var code in charstrings) {\n\t        code |= 0;\n\t        if (firstCharIndex > code || !firstCharIndex) {\n\t          firstCharIndex = code;\n\t        }\n\t        if (lastCharIndex < code) {\n\t          lastCharIndex = code;\n\t        }\n\t        var position = (0, _unicode.getUnicodeRangeFor)(code);\n\t        if (position < 32) {\n\t          ulUnicodeRange1 |= 1 << position;\n\t        } else if (position < 64) {\n\t          ulUnicodeRange2 |= 1 << position - 32;\n\t        } else if (position < 96) {\n\t          ulUnicodeRange3 |= 1 << position - 64;\n\t        } else if (position < 123) {\n\t          ulUnicodeRange4 |= 1 << position - 96;\n\t        } else {\n\t          throw new _util.FormatError('Unicode ranges Bits > 123 are reserved for internal usage');\n\t        }\n\t      }\n\t    } else {\n\t      firstCharIndex = 0;\n\t      lastCharIndex = 255;\n\t    }\n\t    var bbox = properties.bbox || [0, 0, 0, 0];\n\t    var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n\t    var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n\t    var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n\t    var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n\t    if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n\t      typoDescent = -typoDescent;\n\t    }\n\t    var winAscent = override.yMax || typoAscent;\n\t    var winDescent = -override.yMin || -typoDescent;\n\t    return '\\x00\\x03' + '\\x02\\x24' + '\\x01\\xF4' + '\\x00\\x05' + '\\x00\\x00' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x00\\x8C' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x01\\xDF' + '\\x00\\x31' + '\\x01\\x02' + '\\x00\\x00' + '\\x00\\x00\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\x00\\x00\\x00\\x00\\x00\\x00' + (0, _util.string32)(ulUnicodeRange1) + (0, _util.string32)(ulUnicodeRange2) + (0, _util.string32)(ulUnicodeRange3) + (0, _util.string32)(ulUnicodeRange4) + '\\x2A\\x32\\x31\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\x00\\x64' + string16(winAscent) + string16(winDescent) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\x00\\x03';\n\t  }\n\t  function createPostTable(properties) {\n\t    var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n\t    return '\\x00\\x03\\x00\\x00' + (0, _util.string32)(angle) + '\\x00\\x00' + '\\x00\\x00' + (0, _util.string32)(properties.fixedPitch) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00';\n\t  }\n\t  function createNameTable(name, proto) {\n\t    if (!proto) {\n\t      proto = [[], []];\n\t    }\n\t    var strings = [proto[0][0] || 'Original licence', proto[0][1] || name, proto[0][2] || 'Unknown', proto[0][3] || 'uniqueID', proto[0][4] || name, proto[0][5] || 'Version 0.11', proto[0][6] || '', proto[0][7] || 'Unknown', proto[0][8] || 'Unknown', proto[0][9] || 'Unknown'];\n\t    var stringsUnicode = [];\n\t    var i, ii, j, jj, str;\n\t    for (i = 0, ii = strings.length; i < ii; i++) {\n\t      str = proto[1][i] || strings[i];\n\t      var strBufUnicode = [];\n\t      for (j = 0, jj = str.length; j < jj; j++) {\n\t        strBufUnicode.push(string16(str.charCodeAt(j)));\n\t      }\n\t      stringsUnicode.push(strBufUnicode.join(''));\n\t    }\n\t    var names = [strings, stringsUnicode];\n\t    var platforms = ['\\x00\\x01', '\\x00\\x03'];\n\t    var encodings = ['\\x00\\x00', '\\x00\\x01'];\n\t    var languages = ['\\x00\\x00', '\\x04\\x09'];\n\t    var namesRecordCount = strings.length * platforms.length;\n\t    var nameTable = '\\x00\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n\t    var strOffset = 0;\n\t    for (i = 0, ii = platforms.length; i < ii; i++) {\n\t      var strs = names[i];\n\t      for (j = 0, jj = strs.length; j < jj; j++) {\n\t        str = strs[j];\n\t        var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n\t        nameTable += nameRecord;\n\t        strOffset += str.length;\n\t      }\n\t    }\n\t    nameTable += strings.join('') + stringsUnicode.join('');\n\t    return nameTable;\n\t  }\n\t  Font.prototype = {\n\t    name: null,\n\t    font: null,\n\t    mimetype: null,\n\t    encoding: null,\n\t    get renderer() {\n\t      var renderer = _font_renderer.FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n\t      return (0, _util.shadow)(this, 'renderer', renderer);\n\t    },\n\t    exportData: function Font_exportData() {\n\t      var data = {};\n\t      for (var i in this) {\n\t        if (this.hasOwnProperty(i)) {\n\t          data[i] = this[i];\n\t        }\n\t      }\n\t      return data;\n\t    },\n\t    fallbackToSystemFont: function Font_fallbackToSystemFont() {\n\t      var _this = this;\n\t\n\t      this.missingFile = true;\n\t      var charCode, unicode;\n\t      var name = this.name;\n\t      var type = this.type;\n\t      var subtype = this.subtype;\n\t      var fontName = name.replace(/[,_]/g, '-');\n\t      var stdFontMap = (0, _standard_fonts.getStdFontMap)(),\n\t          nonStdFontMap = (0, _standard_fonts.getNonStdFontMap)();\n\t      var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n\t      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n\t      this.bold = fontName.search(/bold/gi) !== -1;\n\t      this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n\t      this.black = name.search(/Black/g) !== -1;\n\t      this.remeasure = Object.keys(this.widths).length > 0;\n\t      if (isStandardFont && type === 'CIDFontType2' && this.cidEncoding.indexOf('Identity-') === 0) {\n\t        var GlyphMapForStandardFonts = (0, _standard_fonts.getGlyphMapForStandardFonts)();\n\t        var map = [];\n\t        for (charCode in GlyphMapForStandardFonts) {\n\t          map[+charCode] = GlyphMapForStandardFonts[charCode];\n\t        }\n\t        if (/Arial-?Black/i.test(name)) {\n\t          var SupplementalGlyphMapForArialBlack = (0, _standard_fonts.getSupplementalGlyphMapForArialBlack)();\n\t          for (charCode in SupplementalGlyphMapForArialBlack) {\n\t            map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\n\t          }\n\t        }\n\t        var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n\t        if (!isIdentityUnicode) {\n\t          this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n\t            map[+charCode] = unicodeCharCode;\n\t          });\n\t        }\n\t        this.toFontChar = map;\n\t        this.toUnicode = new ToUnicodeMap(map);\n\t      } else if (/Symbol/i.test(fontName)) {\n\t        this.toFontChar = buildToFontChar(_encodings.SymbolSetEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n\t      } else if (/Dingbats/i.test(fontName)) {\n\t        if (/Wingdings/i.test(name)) {\n\t          (0, _util.warn)('Non-embedded Wingdings font, falling back to ZapfDingbats.');\n\t        }\n\t        this.toFontChar = buildToFontChar(_encodings.ZapfDingbatsEncoding, (0, _glyphlist.getDingbatsGlyphsUnicode)(), this.differences);\n\t      } else if (isStandardFont) {\n\t        this.toFontChar = buildToFontChar(this.defaultEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n\t      } else {\n\t        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n\t        this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n\t          if (!_this.composite) {\n\t            var glyphName = _this.differences[charCode] || _this.defaultEncoding[charCode];\n\t            unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n\t            if (unicode !== -1) {\n\t              unicodeCharCode = unicode;\n\t            }\n\t          }\n\t          _this.toFontChar[charCode] = unicodeCharCode;\n\t        });\n\t      }\n\t      this.loadedName = fontName.split('-')[0];\n\t      this.loading = false;\n\t      this.fontType = getFontType(type, subtype);\n\t    },\n\t    checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n\t      function readTableEntry(file) {\n\t        var tag = (0, _util.bytesToString)(file.getBytes(4));\n\t        var checksum = file.getInt32() >>> 0;\n\t        var offset = file.getInt32() >>> 0;\n\t        var length = file.getInt32() >>> 0;\n\t        var previousPosition = file.pos;\n\t        file.pos = file.start ? file.start : 0;\n\t        file.skip(offset);\n\t        var data = file.getBytes(length);\n\t        file.pos = previousPosition;\n\t        if (tag === 'head') {\n\t          data[8] = data[9] = data[10] = data[11] = 0;\n\t          data[17] |= 0x20;\n\t        }\n\t        return {\n\t          tag: tag,\n\t          checksum: checksum,\n\t          length: length,\n\t          offset: offset,\n\t          data: data\n\t        };\n\t      }\n\t      function readOpenTypeHeader(ttf) {\n\t        return {\n\t          version: (0, _util.bytesToString)(ttf.getBytes(4)),\n\t          numTables: ttf.getUint16(),\n\t          searchRange: ttf.getUint16(),\n\t          entrySelector: ttf.getUint16(),\n\t          rangeShift: ttf.getUint16()\n\t        };\n\t      }\n\t      function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\n\t        if (!cmap) {\n\t          (0, _util.warn)('No cmap table available.');\n\t          return {\n\t            platformId: -1,\n\t            encodingId: -1,\n\t            mappings: [],\n\t            hasShortCmap: false\n\t          };\n\t        }\n\t        var segment;\n\t        var start = (font.start ? font.start : 0) + cmap.offset;\n\t        font.pos = start;\n\t        font.getUint16();\n\t        var numTables = font.getUint16();\n\t        var potentialTable;\n\t        var canBreak = false;\n\t        for (var i = 0; i < numTables; i++) {\n\t          var platformId = font.getUint16();\n\t          var encodingId = font.getUint16();\n\t          var offset = font.getInt32() >>> 0;\n\t          var useTable = false;\n\t          if (potentialTable && potentialTable.platformId === platformId && potentialTable.encodingId === encodingId) {\n\t            continue;\n\t          }\n\t          if (platformId === 0 && encodingId === 0) {\n\t            useTable = true;\n\t          } else if (platformId === 1 && encodingId === 0) {\n\t            useTable = true;\n\t          } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\n\t            useTable = true;\n\t            if (!isSymbolicFont) {\n\t              canBreak = true;\n\t            }\n\t          } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n\t            useTable = true;\n\t            canBreak = true;\n\t          }\n\t          if (useTable) {\n\t            potentialTable = {\n\t              platformId: platformId,\n\t              encodingId: encodingId,\n\t              offset: offset\n\t            };\n\t          }\n\t          if (canBreak) {\n\t            break;\n\t          }\n\t        }\n\t        if (potentialTable) {\n\t          font.pos = start + potentialTable.offset;\n\t        }\n\t        if (!potentialTable || font.peekByte() === -1) {\n\t          (0, _util.warn)('Could not find a preferred cmap table.');\n\t          return {\n\t            platformId: -1,\n\t            encodingId: -1,\n\t            mappings: [],\n\t            hasShortCmap: false\n\t          };\n\t        }\n\t        var format = font.getUint16();\n\t        font.getUint16();\n\t        font.getUint16();\n\t        var hasShortCmap = false;\n\t        var mappings = [];\n\t        var j, glyphId;\n\t        if (format === 0) {\n\t          for (j = 0; j < 256; j++) {\n\t            var index = font.getByte();\n\t            if (!index) {\n\t              continue;\n\t            }\n\t            mappings.push({\n\t              charCode: j,\n\t              glyphId: index\n\t            });\n\t          }\n\t          hasShortCmap = true;\n\t        } else if (format === 4) {\n\t          var segCount = font.getUint16() >> 1;\n\t          font.getBytes(6);\n\t          var segIndex,\n\t              segments = [];\n\t          for (segIndex = 0; segIndex < segCount; segIndex++) {\n\t            segments.push({ end: font.getUint16() });\n\t          }\n\t          font.getUint16();\n\t          for (segIndex = 0; segIndex < segCount; segIndex++) {\n\t            segments[segIndex].start = font.getUint16();\n\t          }\n\t          for (segIndex = 0; segIndex < segCount; segIndex++) {\n\t            segments[segIndex].delta = font.getUint16();\n\t          }\n\t          var offsetsCount = 0;\n\t          for (segIndex = 0; segIndex < segCount; segIndex++) {\n\t            segment = segments[segIndex];\n\t            var rangeOffset = font.getUint16();\n\t            if (!rangeOffset) {\n\t              segment.offsetIndex = -1;\n\t              continue;\n\t            }\n\t            var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n\t            segment.offsetIndex = offsetIndex;\n\t            offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n\t          }\n\t          var offsets = [];\n\t          for (j = 0; j < offsetsCount; j++) {\n\t            offsets.push(font.getUint16());\n\t          }\n\t          for (segIndex = 0; segIndex < segCount; segIndex++) {\n\t            segment = segments[segIndex];\n\t            start = segment.start;\n\t            var end = segment.end;\n\t            var delta = segment.delta;\n\t            offsetIndex = segment.offsetIndex;\n\t            for (j = start; j <= end; j++) {\n\t              if (j === 0xFFFF) {\n\t                continue;\n\t              }\n\t              glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n\t              glyphId = glyphId + delta & 0xFFFF;\n\t              mappings.push({\n\t                charCode: j,\n\t                glyphId: glyphId\n\t              });\n\t            }\n\t          }\n\t        } else if (format === 6) {\n\t          var firstCode = font.getUint16();\n\t          var entryCount = font.getUint16();\n\t          for (j = 0; j < entryCount; j++) {\n\t            glyphId = font.getUint16();\n\t            var charCode = firstCode + j;\n\t            mappings.push({\n\t              charCode: charCode,\n\t              glyphId: glyphId\n\t            });\n\t          }\n\t        } else {\n\t          (0, _util.warn)('cmap table has unsupported format: ' + format);\n\t          return {\n\t            platformId: -1,\n\t            encodingId: -1,\n\t            mappings: [],\n\t            hasShortCmap: false\n\t          };\n\t        }\n\t        mappings.sort(function (a, b) {\n\t          return a.charCode - b.charCode;\n\t        });\n\t        for (i = 1; i < mappings.length; i++) {\n\t          if (mappings[i - 1].charCode === mappings[i].charCode) {\n\t            mappings.splice(i, 1);\n\t            i--;\n\t          }\n\t        }\n\t        return {\n\t          platformId: potentialTable.platformId,\n\t          encodingId: potentialTable.encodingId,\n\t          mappings: mappings,\n\t          hasShortCmap: hasShortCmap\n\t        };\n\t      }\n\t      function sanitizeMetrics(font, header, metrics, numGlyphs) {\n\t        if (!header) {\n\t          if (metrics) {\n\t            metrics.data = null;\n\t          }\n\t          return;\n\t        }\n\t        font.pos = (font.start ? font.start : 0) + header.offset;\n\t        font.pos += header.length - 2;\n\t        var numOfMetrics = font.getUint16();\n\t        if (numOfMetrics > numGlyphs) {\n\t          (0, _util.info)('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\n\t          numOfMetrics = numGlyphs;\n\t          header.data[34] = (numOfMetrics & 0xff00) >> 8;\n\t          header.data[35] = numOfMetrics & 0x00ff;\n\t        }\n\t        var numOfSidebearings = numGlyphs - numOfMetrics;\n\t        var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n\t        if (numMissing > 0) {\n\t          var entries = new Uint8Array(metrics.length + numMissing * 2);\n\t          entries.set(metrics.data);\n\t          metrics.data = entries;\n\t        }\n\t      }\n\t      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n\t        var glyphProfile = {\n\t          length: 0,\n\t          sizeOfInstructions: 0\n\t        };\n\t        if (sourceEnd - sourceStart <= 12) {\n\t          return glyphProfile;\n\t        }\n\t        var glyf = source.subarray(sourceStart, sourceEnd);\n\t        var contoursCount = signedInt16(glyf[0], glyf[1]);\n\t        if (contoursCount < 0) {\n\t          contoursCount = -1;\n\t          writeSignedInt16(glyf, 0, contoursCount);\n\t          dest.set(glyf, destStart);\n\t          glyphProfile.length = glyf.length;\n\t          return glyphProfile;\n\t        }\n\t        var i,\n\t            j = 10,\n\t            flagsCount = 0;\n\t        for (i = 0; i < contoursCount; i++) {\n\t          var endPoint = glyf[j] << 8 | glyf[j + 1];\n\t          flagsCount = endPoint + 1;\n\t          j += 2;\n\t        }\n\t        var instructionsStart = j;\n\t        var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n\t        glyphProfile.sizeOfInstructions = instructionsLength;\n\t        j += 2 + instructionsLength;\n\t        var instructionsEnd = j;\n\t        var coordinatesLength = 0;\n\t        for (i = 0; i < flagsCount; i++) {\n\t          var flag = glyf[j++];\n\t          if (flag & 0xC0) {\n\t            glyf[j - 1] = flag & 0x3F;\n\t          }\n\t          var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\n\t          coordinatesLength += xyLength;\n\t          if (flag & 8) {\n\t            var repeat = glyf[j++];\n\t            i += repeat;\n\t            coordinatesLength += repeat * xyLength;\n\t          }\n\t        }\n\t        if (coordinatesLength === 0) {\n\t          return glyphProfile;\n\t        }\n\t        var glyphDataLength = j + coordinatesLength;\n\t        if (glyphDataLength > glyf.length) {\n\t          return glyphProfile;\n\t        }\n\t        if (!hintsValid && instructionsLength > 0) {\n\t          dest.set(glyf.subarray(0, instructionsStart), destStart);\n\t          dest.set([0, 0], destStart + instructionsStart);\n\t          dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n\t          glyphDataLength -= instructionsLength;\n\t          if (glyf.length - glyphDataLength > 3) {\n\t            glyphDataLength = glyphDataLength + 3 & ~3;\n\t          }\n\t          glyphProfile.length = glyphDataLength;\n\t          return glyphProfile;\n\t        }\n\t        if (glyf.length - glyphDataLength > 3) {\n\t          glyphDataLength = glyphDataLength + 3 & ~3;\n\t          dest.set(glyf.subarray(0, glyphDataLength), destStart);\n\t          glyphProfile.length = glyphDataLength;\n\t          return glyphProfile;\n\t        }\n\t        dest.set(glyf, destStart);\n\t        glyphProfile.length = glyf.length;\n\t        return glyphProfile;\n\t      }\n\t      function sanitizeHead(head, numGlyphs, locaLength) {\n\t        var data = head.data;\n\t        var version = int32(data[0], data[1], data[2], data[3]);\n\t        if (version >> 16 !== 1) {\n\t          (0, _util.info)('Attempting to fix invalid version in head table: ' + version);\n\t          data[0] = 0;\n\t          data[1] = 1;\n\t          data[2] = 0;\n\t          data[3] = 0;\n\t        }\n\t        var indexToLocFormat = int16(data[50], data[51]);\n\t        if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n\t          (0, _util.info)('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\n\t          var numGlyphsPlusOne = numGlyphs + 1;\n\t          if (locaLength === numGlyphsPlusOne << 1) {\n\t            data[50] = 0;\n\t            data[51] = 0;\n\t          } else if (locaLength === numGlyphsPlusOne << 2) {\n\t            data[50] = 0;\n\t            data[51] = 1;\n\t          } else {\n\t            throw new _util.FormatError('Could not fix indexToLocFormat: ' + indexToLocFormat);\n\t          }\n\t        }\n\t      }\n\t      function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions) {\n\t        var itemSize, itemDecode, itemEncode;\n\t        if (isGlyphLocationsLong) {\n\t          itemSize = 4;\n\t          itemDecode = function fontItemDecodeLong(data, offset) {\n\t            return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n\t          };\n\t          itemEncode = function fontItemEncodeLong(data, offset, value) {\n\t            data[offset] = value >>> 24 & 0xFF;\n\t            data[offset + 1] = value >> 16 & 0xFF;\n\t            data[offset + 2] = value >> 8 & 0xFF;\n\t            data[offset + 3] = value & 0xFF;\n\t          };\n\t        } else {\n\t          itemSize = 2;\n\t          itemDecode = function fontItemDecode(data, offset) {\n\t            return data[offset] << 9 | data[offset + 1] << 1;\n\t          };\n\t          itemEncode = function fontItemEncode(data, offset, value) {\n\t            data[offset] = value >> 9 & 0xFF;\n\t            data[offset + 1] = value >> 1 & 0xFF;\n\t          };\n\t        }\n\t        var locaData = loca.data;\n\t        var locaDataSize = itemSize * (1 + numGlyphs);\n\t        if (locaData.length !== locaDataSize) {\n\t          locaData = new Uint8Array(locaDataSize);\n\t          locaData.set(loca.data.subarray(0, locaDataSize));\n\t          loca.data = locaData;\n\t        }\n\t        var oldGlyfData = glyf.data;\n\t        var oldGlyfDataLength = oldGlyfData.length;\n\t        var newGlyfData = new Uint8Array(oldGlyfDataLength);\n\t        var startOffset = itemDecode(locaData, 0);\n\t        var writeOffset = 0;\n\t        var missingGlyphs = Object.create(null);\n\t        itemEncode(locaData, 0, writeOffset);\n\t        var i, j;\n\t        var locaCount = dupFirstEntry ? numGlyphs - 1 : numGlyphs;\n\t        for (i = 0, j = itemSize; i < locaCount; i++, j += itemSize) {\n\t          var endOffset = itemDecode(locaData, j);\n\t          if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\n\t            endOffset = oldGlyfDataLength;\n\t          }\n\t          if (endOffset > oldGlyfDataLength) {\n\t            startOffset = endOffset;\n\t          }\n\t          var glyphProfile = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\n\t          var newLength = glyphProfile.length;\n\t          if (newLength === 0) {\n\t            missingGlyphs[i] = true;\n\t          }\n\t          if (glyphProfile.sizeOfInstructions > maxSizeOfInstructions) {\n\t            maxSizeOfInstructions = glyphProfile.sizeOfInstructions;\n\t          }\n\t          writeOffset += newLength;\n\t          itemEncode(locaData, j, writeOffset);\n\t          startOffset = endOffset;\n\t        }\n\t        if (writeOffset === 0) {\n\t          var simpleGlyph = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);\n\t          for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n\t            itemEncode(locaData, j, simpleGlyph.length);\n\t          }\n\t          glyf.data = simpleGlyph;\n\t        } else if (dupFirstEntry) {\n\t          var firstEntryLength = itemDecode(locaData, itemSize);\n\t          if (newGlyfData.length > firstEntryLength + writeOffset) {\n\t            glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n\t          } else {\n\t            glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n\t            glyf.data.set(newGlyfData.subarray(0, writeOffset));\n\t          }\n\t          glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n\t          itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n\t        } else {\n\t          glyf.data = newGlyfData.subarray(0, writeOffset);\n\t        }\n\t        return {\n\t          missingGlyphs: missingGlyphs,\n\t          maxSizeOfInstructions: maxSizeOfInstructions\n\t        };\n\t      }\n\t      function readPostScriptTable(post, properties, maxpNumGlyphs) {\n\t        var start = (font.start ? font.start : 0) + post.offset;\n\t        font.pos = start;\n\t        var length = post.length,\n\t            end = start + length;\n\t        var version = font.getInt32();\n\t        font.getBytes(28);\n\t        var glyphNames;\n\t        var valid = true;\n\t        var i;\n\t        switch (version) {\n\t          case 0x00010000:\n\t            glyphNames = MacStandardGlyphOrdering;\n\t            break;\n\t          case 0x00020000:\n\t            var numGlyphs = font.getUint16();\n\t            if (numGlyphs !== maxpNumGlyphs) {\n\t              valid = false;\n\t              break;\n\t            }\n\t            var glyphNameIndexes = [];\n\t            for (i = 0; i < numGlyphs; ++i) {\n\t              var index = font.getUint16();\n\t              if (index >= 32768) {\n\t                valid = false;\n\t                break;\n\t              }\n\t              glyphNameIndexes.push(index);\n\t            }\n\t            if (!valid) {\n\t              break;\n\t            }\n\t            var customNames = [];\n\t            var strBuf = [];\n\t            while (font.pos < end) {\n\t              var stringLength = font.getByte();\n\t              strBuf.length = stringLength;\n\t              for (i = 0; i < stringLength; ++i) {\n\t                strBuf[i] = String.fromCharCode(font.getByte());\n\t              }\n\t              customNames.push(strBuf.join(''));\n\t            }\n\t            glyphNames = [];\n\t            for (i = 0; i < numGlyphs; ++i) {\n\t              var j = glyphNameIndexes[i];\n\t              if (j < 258) {\n\t                glyphNames.push(MacStandardGlyphOrdering[j]);\n\t                continue;\n\t              }\n\t              glyphNames.push(customNames[j - 258]);\n\t            }\n\t            break;\n\t          case 0x00030000:\n\t            break;\n\t          default:\n\t            (0, _util.warn)('Unknown/unsupported post table version ' + version);\n\t            valid = false;\n\t            if (properties.defaultEncoding) {\n\t              glyphNames = properties.defaultEncoding;\n\t            }\n\t            break;\n\t        }\n\t        properties.glyphNames = glyphNames;\n\t        return valid;\n\t      }\n\t      function readNameTable(nameTable) {\n\t        var start = (font.start ? font.start : 0) + nameTable.offset;\n\t        font.pos = start;\n\t        var names = [[], []];\n\t        var length = nameTable.length,\n\t            end = start + length;\n\t        var format = font.getUint16();\n\t        var FORMAT_0_HEADER_LENGTH = 6;\n\t        if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n\t          return names;\n\t        }\n\t        var numRecords = font.getUint16();\n\t        var stringsStart = font.getUint16();\n\t        var records = [];\n\t        var NAME_RECORD_LENGTH = 12;\n\t        var i, ii;\n\t        for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n\t          var r = {\n\t            platform: font.getUint16(),\n\t            encoding: font.getUint16(),\n\t            language: font.getUint16(),\n\t            name: font.getUint16(),\n\t            length: font.getUint16(),\n\t            offset: font.getUint16()\n\t          };\n\t          if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n\t            records.push(r);\n\t          }\n\t        }\n\t        for (i = 0, ii = records.length; i < ii; i++) {\n\t          var record = records[i];\n\t          if (record.length <= 0) {\n\t            continue;\n\t          }\n\t          var pos = start + stringsStart + record.offset;\n\t          if (pos + record.length > end) {\n\t            continue;\n\t          }\n\t          font.pos = pos;\n\t          var nameIndex = record.name;\n\t          if (record.encoding) {\n\t            var str = '';\n\t            for (var j = 0, jj = record.length; j < jj; j += 2) {\n\t              str += String.fromCharCode(font.getUint16());\n\t            }\n\t            names[1][nameIndex] = str;\n\t          } else {\n\t            names[0][nameIndex] = (0, _util.bytesToString)(font.getBytes(record.length));\n\t          }\n\t        }\n\t        return names;\n\t      }\n\t      var TTOpsStackDeltas = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];\n\t      function sanitizeTTProgram(table, ttContext) {\n\t        var data = table.data;\n\t        var i = 0,\n\t            j,\n\t            n,\n\t            b,\n\t            funcId,\n\t            pc,\n\t            lastEndf = 0,\n\t            lastDeff = 0;\n\t        var stack = [];\n\t        var callstack = [];\n\t        var functionsCalled = [];\n\t        var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n\t        var inFDEF = false,\n\t            ifLevel = 0,\n\t            inELSE = 0;\n\t        for (var ii = data.length; i < ii;) {\n\t          var op = data[i++];\n\t          if (op === 0x40) {\n\t            n = data[i++];\n\t            if (inFDEF || inELSE) {\n\t              i += n;\n\t            } else {\n\t              for (j = 0; j < n; j++) {\n\t                stack.push(data[i++]);\n\t              }\n\t            }\n\t          } else if (op === 0x41) {\n\t            n = data[i++];\n\t            if (inFDEF || inELSE) {\n\t              i += n * 2;\n\t            } else {\n\t              for (j = 0; j < n; j++) {\n\t                b = data[i++];\n\t                stack.push(b << 8 | data[i++]);\n\t              }\n\t            }\n\t          } else if ((op & 0xF8) === 0xB0) {\n\t            n = op - 0xB0 + 1;\n\t            if (inFDEF || inELSE) {\n\t              i += n;\n\t            } else {\n\t              for (j = 0; j < n; j++) {\n\t                stack.push(data[i++]);\n\t              }\n\t            }\n\t          } else if ((op & 0xF8) === 0xB8) {\n\t            n = op - 0xB8 + 1;\n\t            if (inFDEF || inELSE) {\n\t              i += n * 2;\n\t            } else {\n\t              for (j = 0; j < n; j++) {\n\t                b = data[i++];\n\t                stack.push(b << 8 | data[i++]);\n\t              }\n\t            }\n\t          } else if (op === 0x2B && !tooComplexToFollowFunctions) {\n\t            if (!inFDEF && !inELSE) {\n\t              funcId = stack[stack.length - 1];\n\t              ttContext.functionsUsed[funcId] = true;\n\t              if (funcId in ttContext.functionsStackDeltas) {\n\t                stack.length += ttContext.functionsStackDeltas[funcId];\n\t              } else if (funcId in ttContext.functionsDefined && functionsCalled.indexOf(funcId) < 0) {\n\t                callstack.push({\n\t                  data: data,\n\t                  i: i,\n\t                  stackTop: stack.length - 1\n\t                });\n\t                functionsCalled.push(funcId);\n\t                pc = ttContext.functionsDefined[funcId];\n\t                if (!pc) {\n\t                  (0, _util.warn)('TT: CALL non-existent function');\n\t                  ttContext.hintsValid = false;\n\t                  return;\n\t                }\n\t                data = pc.data;\n\t                i = pc.i;\n\t              }\n\t            }\n\t          } else if (op === 0x2C && !tooComplexToFollowFunctions) {\n\t            if (inFDEF || inELSE) {\n\t              (0, _util.warn)('TT: nested FDEFs not allowed');\n\t              tooComplexToFollowFunctions = true;\n\t            }\n\t            inFDEF = true;\n\t            lastDeff = i;\n\t            funcId = stack.pop();\n\t            ttContext.functionsDefined[funcId] = {\n\t              data: data,\n\t              i: i\n\t            };\n\t          } else if (op === 0x2D) {\n\t            if (inFDEF) {\n\t              inFDEF = false;\n\t              lastEndf = i;\n\t            } else {\n\t              pc = callstack.pop();\n\t              if (!pc) {\n\t                (0, _util.warn)('TT: ENDF bad stack');\n\t                ttContext.hintsValid = false;\n\t                return;\n\t              }\n\t              funcId = functionsCalled.pop();\n\t              data = pc.data;\n\t              i = pc.i;\n\t              ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n\t            }\n\t          } else if (op === 0x89) {\n\t            if (inFDEF || inELSE) {\n\t              (0, _util.warn)('TT: nested IDEFs not allowed');\n\t              tooComplexToFollowFunctions = true;\n\t            }\n\t            inFDEF = true;\n\t            lastDeff = i;\n\t          } else if (op === 0x58) {\n\t            ++ifLevel;\n\t          } else if (op === 0x1B) {\n\t            inELSE = ifLevel;\n\t          } else if (op === 0x59) {\n\t            if (inELSE === ifLevel) {\n\t              inELSE = 0;\n\t            }\n\t            --ifLevel;\n\t          } else if (op === 0x1C) {\n\t            if (!inFDEF && !inELSE) {\n\t              var offset = stack[stack.length - 1];\n\t              if (offset > 0) {\n\t                i += offset - 1;\n\t              }\n\t            }\n\t          }\n\t          if (!inFDEF && !inELSE) {\n\t            var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n\t            if (op >= 0x71 && op <= 0x75) {\n\t              n = stack.pop();\n\t              if (!isNaN(n)) {\n\t                stackDelta = -n * 2;\n\t              }\n\t            }\n\t            while (stackDelta < 0 && stack.length > 0) {\n\t              stack.pop();\n\t              stackDelta++;\n\t            }\n\t            while (stackDelta > 0) {\n\t              stack.push(NaN);\n\t              stackDelta--;\n\t            }\n\t          }\n\t        }\n\t        ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n\t        var content = [data];\n\t        if (i > data.length) {\n\t          content.push(new Uint8Array(i - data.length));\n\t        }\n\t        if (lastDeff > lastEndf) {\n\t          (0, _util.warn)('TT: complementing a missing function tail');\n\t          content.push(new Uint8Array([0x22, 0x2D]));\n\t        }\n\t        foldTTTable(table, content);\n\t      }\n\t      function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n\t        if (ttContext.tooComplexToFollowFunctions) {\n\t          return;\n\t        }\n\t        if (ttContext.functionsDefined.length > maxFunctionDefs) {\n\t          (0, _util.warn)('TT: more functions defined than expected');\n\t          ttContext.hintsValid = false;\n\t          return;\n\t        }\n\t        for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n\t          if (j > maxFunctionDefs) {\n\t            (0, _util.warn)('TT: invalid function id: ' + j);\n\t            ttContext.hintsValid = false;\n\t            return;\n\t          }\n\t          if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n\t            (0, _util.warn)('TT: undefined function: ' + j);\n\t            ttContext.hintsValid = false;\n\t            return;\n\t          }\n\t        }\n\t      }\n\t      function foldTTTable(table, content) {\n\t        if (content.length > 1) {\n\t          var newLength = 0;\n\t          var j, jj;\n\t          for (j = 0, jj = content.length; j < jj; j++) {\n\t            newLength += content[j].length;\n\t          }\n\t          newLength = newLength + 3 & ~3;\n\t          var result = new Uint8Array(newLength);\n\t          var pos = 0;\n\t          for (j = 0, jj = content.length; j < jj; j++) {\n\t            result.set(content[j], pos);\n\t            pos += content[j].length;\n\t          }\n\t          table.data = result;\n\t          table.length = newLength;\n\t        }\n\t      }\n\t      function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n\t        var ttContext = {\n\t          functionsDefined: [],\n\t          functionsUsed: [],\n\t          functionsStackDeltas: [],\n\t          tooComplexToFollowFunctions: false,\n\t          hintsValid: true\n\t        };\n\t        if (fpgm) {\n\t          sanitizeTTProgram(fpgm, ttContext);\n\t        }\n\t        if (prep) {\n\t          sanitizeTTProgram(prep, ttContext);\n\t        }\n\t        if (fpgm) {\n\t          checkInvalidFunctions(ttContext, maxFunctionDefs);\n\t        }\n\t        if (cvt && cvt.length & 1) {\n\t          var cvtData = new Uint8Array(cvt.length + 1);\n\t          cvtData.set(cvt.data);\n\t          cvt.data = cvtData;\n\t        }\n\t        return ttContext.hintsValid;\n\t      }\n\t      font = new _stream.Stream(new Uint8Array(font.getBytes()));\n\t      var VALID_TABLES = ['OS/2', 'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'post', 'loca', 'glyf', 'fpgm', 'prep', 'cvt ', 'CFF '];\n\t      var header = readOpenTypeHeader(font);\n\t      var numTables = header.numTables;\n\t      var cff, cffFile;\n\t      var tables = Object.create(null);\n\t      tables['OS/2'] = null;\n\t      tables['cmap'] = null;\n\t      tables['head'] = null;\n\t      tables['hhea'] = null;\n\t      tables['hmtx'] = null;\n\t      tables['maxp'] = null;\n\t      tables['name'] = null;\n\t      tables['post'] = null;\n\t      var table;\n\t      for (var i = 0; i < numTables; i++) {\n\t        table = readTableEntry(font);\n\t        if (VALID_TABLES.indexOf(table.tag) < 0) {\n\t          continue;\n\t        }\n\t        if (table.length === 0) {\n\t          continue;\n\t        }\n\t        tables[table.tag] = table;\n\t      }\n\t      var isTrueType = !tables['CFF '];\n\t      if (!isTrueType) {\n\t        if (header.version === 'OTTO' && !(properties.composite && properties.cidToGidMap) || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\n\t          cffFile = new _stream.Stream(tables['CFF '].data);\n\t          cff = new CFFFont(cffFile, properties);\n\t          adjustWidths(properties);\n\t          return this.convert(name, cff, properties);\n\t        }\n\t        delete tables['glyf'];\n\t        delete tables['loca'];\n\t        delete tables['fpgm'];\n\t        delete tables['prep'];\n\t        delete tables['cvt '];\n\t        this.isOpenType = true;\n\t      } else {\n\t        if (!tables['loca']) {\n\t          throw new _util.FormatError('Required \"loca\" table is not found');\n\t        }\n\t        if (!tables['glyf']) {\n\t          (0, _util.warn)('Required \"glyf\" table is not found -- trying to recover.');\n\t          tables['glyf'] = {\n\t            tag: 'glyf',\n\t            data: new Uint8Array(0)\n\t          };\n\t        }\n\t        this.isOpenType = false;\n\t      }\n\t      if (!tables['maxp']) {\n\t        throw new _util.FormatError('Required \"maxp\" table is not found');\n\t      }\n\t      font.pos = (font.start || 0) + tables['maxp'].offset;\n\t      var version = font.getInt32();\n\t      var numGlyphs = font.getUint16();\n\t      var maxFunctionDefs = 0;\n\t      var maxSizeOfInstructions = 0;\n\t      if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n\t        font.pos += 8;\n\t        var maxZones = font.getUint16();\n\t        if (maxZones > 2) {\n\t          tables['maxp'].data[14] = 0;\n\t          tables['maxp'].data[15] = 2;\n\t        }\n\t        font.pos += 4;\n\t        maxFunctionDefs = font.getUint16();\n\t        font.pos += 6;\n\t        maxSizeOfInstructions = font.getUint16();\n\t      }\n\t      var dupFirstEntry = false;\n\t      if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\0') {\n\t        dupFirstEntry = true;\n\t        numGlyphs++;\n\t        tables['maxp'].data[4] = numGlyphs >> 8;\n\t        tables['maxp'].data[5] = numGlyphs & 255;\n\t      }\n\t      var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\n\t      if (!hintsValid) {\n\t        delete tables['fpgm'];\n\t        delete tables['prep'];\n\t        delete tables['cvt '];\n\t      }\n\t      sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\n\t      if (!tables['head']) {\n\t        throw new _util.FormatError('Required \"head\" table is not found');\n\t      }\n\t      sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\n\t      var missingGlyphs = Object.create(null);\n\t      if (isTrueType) {\n\t        var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\n\t        var glyphsInfo = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions);\n\t        missingGlyphs = glyphsInfo.missingGlyphs;\n\t        if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n\t          tables['maxp'].data[26] = glyphsInfo.maxSizeOfInstructions >> 8;\n\t          tables['maxp'].data[27] = glyphsInfo.maxSizeOfInstructions & 255;\n\t        }\n\t      }\n\t      if (!tables['hhea']) {\n\t        throw new _util.FormatError('Required \"hhea\" table is not found');\n\t      }\n\t      if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\n\t        tables['hhea'].data[10] = 0xFF;\n\t        tables['hhea'].data[11] = 0xFF;\n\t      }\n\t      var metricsOverride = {\n\t        unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\n\t        yMax: int16(tables['head'].data[42], tables['head'].data[43]),\n\t        yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\n\t        ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\n\t        descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\n\t      };\n\t      this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n\t      this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n\t      if (tables['post']) {\n\t        var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\n\t        if (!valid) {\n\t          tables['post'] = null;\n\t        }\n\t      }\n\t      var charCodeToGlyphId = [],\n\t          charCode;\n\t      function hasGlyph(glyphId) {\n\t        return !missingGlyphs[glyphId];\n\t      }\n\t      if (properties.composite) {\n\t        var cidToGidMap = properties.cidToGidMap || [];\n\t        var isCidToGidMapEmpty = cidToGidMap.length === 0;\n\t        properties.cMap.forEach(function (charCode, cid) {\n\t          if (cid > 0xffff) {\n\t            throw new _util.FormatError('Max size of CID is 65,535');\n\t          }\n\t          var glyphId = -1;\n\t          if (isCidToGidMapEmpty) {\n\t            glyphId = cid;\n\t          } else if (cidToGidMap[cid] !== undefined) {\n\t            glyphId = cidToGidMap[cid];\n\t          }\n\t          if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId)) {\n\t            charCodeToGlyphId[charCode] = glyphId;\n\t          }\n\t        });\n\t        if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\n\t          charCodeToGlyphId[0] = numGlyphs - 1;\n\t        }\n\t      } else {\n\t        var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\n\t        var cmapPlatformId = cmapTable.platformId;\n\t        var cmapEncodingId = cmapTable.encodingId;\n\t        var cmapMappings = cmapTable.mappings;\n\t        var cmapMappingsLength = cmapMappings.length;\n\t        if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!(0, _encodings.getEncoding)(properties.baseEncodingName)) {\n\t          var baseEncoding = [];\n\t          if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\n\t            baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n\t          }\n\t          var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n\t          for (charCode = 0; charCode < 256; charCode++) {\n\t            var glyphName, standardGlyphName;\n\t            if (this.differences && charCode in this.differences) {\n\t              glyphName = this.differences[charCode];\n\t            } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\n\t              glyphName = baseEncoding[charCode];\n\t            } else {\n\t              glyphName = _encodings.StandardEncoding[charCode];\n\t            }\n\t            if (!glyphName) {\n\t              continue;\n\t            }\n\t            standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n\t            var unicodeOrCharCode;\n\t            if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n\t              unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n\t            } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n\t              unicodeOrCharCode = _encodings.MacRomanEncoding.indexOf(standardGlyphName);\n\t            }\n\t            var found = false;\n\t            for (i = 0; i < cmapMappingsLength; ++i) {\n\t              if (cmapMappings[i].charCode !== unicodeOrCharCode) {\n\t                continue;\n\t              }\n\t              charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n\t              found = true;\n\t              break;\n\t            }\n\t            if (!found && properties.glyphNames) {\n\t              var glyphId = properties.glyphNames.indexOf(glyphName);\n\t              if (glyphId === -1 && standardGlyphName !== glyphName) {\n\t                glyphId = properties.glyphNames.indexOf(standardGlyphName);\n\t              }\n\t              if (glyphId > 0 && hasGlyph(glyphId)) {\n\t                charCodeToGlyphId[charCode] = glyphId;\n\t                found = true;\n\t              }\n\t            }\n\t          }\n\t        } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n\t          for (i = 0; i < cmapMappingsLength; ++i) {\n\t            charCodeToGlyphId[cmapMappings[i].charCode] = cmapMappings[i].glyphId;\n\t          }\n\t        } else {\n\t          for (i = 0; i < cmapMappingsLength; ++i) {\n\t            charCode = cmapMappings[i].charCode;\n\t            if (cmapPlatformId === 3 && charCode >= 0xF000 && charCode <= 0xF0FF) {\n\t              charCode &= 0xFF;\n\t            }\n\t            charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n\t          }\n\t        }\n\t      }\n\t      if (charCodeToGlyphId.length === 0) {\n\t        charCodeToGlyphId[0] = 0;\n\t      }\n\t      var newMapping = adjustMapping(charCodeToGlyphId, properties, missingGlyphs);\n\t      this.toFontChar = newMapping.toFontChar;\n\t      tables['cmap'] = {\n\t        tag: 'cmap',\n\t        data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\n\t      };\n\t      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n\t        tables['OS/2'] = {\n\t          tag: 'OS/2',\n\t          data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n\t        };\n\t      }\n\t      if (!tables['post']) {\n\t        tables['post'] = {\n\t          tag: 'post',\n\t          data: createPostTable(properties)\n\t        };\n\t      }\n\t      if (!isTrueType) {\n\t        try {\n\t          cffFile = new _stream.Stream(tables['CFF '].data);\n\t          var parser = new _cff_parser.CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n\t          cff = parser.parse();\n\t          var compiler = new _cff_parser.CFFCompiler(cff);\n\t          tables['CFF '].data = compiler.compile();\n\t        } catch (e) {\n\t          (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n\t        }\n\t      }\n\t      if (!tables['name']) {\n\t        tables['name'] = {\n\t          tag: 'name',\n\t          data: createNameTable(this.name)\n\t        };\n\t      } else {\n\t        var namePrototype = readNameTable(tables['name']);\n\t        tables['name'].data = createNameTable(name, namePrototype);\n\t      }\n\t      var builder = new OpenTypeFileBuilder(header.version);\n\t      for (var tableTag in tables) {\n\t        builder.addTable(tableTag, tables[tableTag].data);\n\t      }\n\t      return builder.toArray();\n\t    },\n\t    convert: function Font_convert(fontName, font, properties) {\n\t      properties.fixedPitch = false;\n\t      if (properties.builtInEncoding) {\n\t        adjustToUnicode(properties, properties.builtInEncoding);\n\t      }\n\t      var mapping = font.getGlyphMapping(properties);\n\t      var newMapping = adjustMapping(mapping, properties, Object.create(null));\n\t      this.toFontChar = newMapping.toFontChar;\n\t      var numGlyphs = font.numGlyphs;\n\t      function getCharCodes(charCodeToGlyphId, glyphId) {\n\t        var charCodes = null;\n\t        for (var charCode in charCodeToGlyphId) {\n\t          if (glyphId === charCodeToGlyphId[charCode]) {\n\t            if (!charCodes) {\n\t              charCodes = [];\n\t            }\n\t            charCodes.push(charCode | 0);\n\t          }\n\t        }\n\t        return charCodes;\n\t      }\n\t      function createCharCode(charCodeToGlyphId, glyphId) {\n\t        for (var charCode in charCodeToGlyphId) {\n\t          if (glyphId === charCodeToGlyphId[charCode]) {\n\t            return charCode | 0;\n\t          }\n\t        }\n\t        newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n\t        return newMapping.nextAvailableFontCharCode++;\n\t      }\n\t      var seacs = font.seacs;\n\t      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n\t        var matrix = properties.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n\t        var charset = font.getCharset();\n\t        var seacMap = Object.create(null);\n\t        for (var glyphId in seacs) {\n\t          glyphId |= 0;\n\t          var seac = seacs[glyphId];\n\t          var baseGlyphName = _encodings.StandardEncoding[seac[2]];\n\t          var accentGlyphName = _encodings.StandardEncoding[seac[3]];\n\t          var baseGlyphId = charset.indexOf(baseGlyphName);\n\t          var accentGlyphId = charset.indexOf(accentGlyphName);\n\t          if (baseGlyphId < 0 || accentGlyphId < 0) {\n\t            continue;\n\t          }\n\t          var accentOffset = {\n\t            x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n\t            y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n\t          };\n\t          var charCodes = getCharCodes(mapping, glyphId);\n\t          if (!charCodes) {\n\t            continue;\n\t          }\n\t          for (var i = 0, ii = charCodes.length; i < ii; i++) {\n\t            var charCode = charCodes[i];\n\t            var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n\t            var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n\t            var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n\t            seacMap[charCode] = {\n\t              baseFontCharCode: baseFontCharCode,\n\t              accentFontCharCode: accentFontCharCode,\n\t              accentOffset: accentOffset\n\t            };\n\t          }\n\t        }\n\t        properties.seacMap = seacMap;\n\t      }\n\t      var unitsPerEm = 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n\t      var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n\t      builder.addTable('CFF ', font.data);\n\t      builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\n\t      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n\t      builder.addTable('head', '\\x00\\x01\\x00\\x00' + '\\x00\\x00\\x10\\x00' + '\\x00\\x00\\x00\\x00' + '\\x5F\\x0F\\x3C\\xF5' + '\\x00\\x00' + safeString16(unitsPerEm) + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00' + safeString16(properties.descent) + '\\x0F\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\x00\\x11' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00');\n\t      builder.addTable('hhea', '\\x00\\x01\\x00\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\x00\\x00' + '\\xFF\\xFF' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + string16(numGlyphs));\n\t      builder.addTable('hmtx', function fontFieldsHmtx() {\n\t        var charstrings = font.charstrings;\n\t        var cffWidths = font.cff ? font.cff.widths : null;\n\t        var hmtx = '\\x00\\x00\\x00\\x00';\n\t        for (var i = 1, ii = numGlyphs; i < ii; i++) {\n\t          var width = 0;\n\t          if (charstrings) {\n\t            var charstring = charstrings[i - 1];\n\t            width = 'width' in charstring ? charstring.width : 0;\n\t          } else if (cffWidths) {\n\t            width = Math.ceil(cffWidths[i] || 0);\n\t          }\n\t          hmtx += string16(width) + string16(0);\n\t        }\n\t        return hmtx;\n\t      }());\n\t      builder.addTable('maxp', '\\x00\\x00\\x50\\x00' + string16(numGlyphs));\n\t      builder.addTable('name', createNameTable(fontName));\n\t      builder.addTable('post', createPostTable(properties));\n\t      return builder.toArray();\n\t    },\n\t    get spaceWidth() {\n\t      if ('_shadowWidth' in this) {\n\t        return this._shadowWidth;\n\t      }\n\t      var possibleSpaceReplacements = ['space', 'minus', 'one', 'i', 'I'];\n\t      var width;\n\t      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n\t        var glyphName = possibleSpaceReplacements[i];\n\t        if (glyphName in this.widths) {\n\t          width = this.widths[glyphName];\n\t          break;\n\t        }\n\t        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n\t        var glyphUnicode = glyphsUnicodeMap[glyphName];\n\t        var charcode = 0;\n\t        if (this.composite) {\n\t          if (this.cMap.contains(glyphUnicode)) {\n\t            charcode = this.cMap.lookup(glyphUnicode);\n\t          }\n\t        }\n\t        if (!charcode && this.toUnicode) {\n\t          charcode = this.toUnicode.charCodeOf(glyphUnicode);\n\t        }\n\t        if (charcode <= 0) {\n\t          charcode = glyphUnicode;\n\t        }\n\t        width = this.widths[charcode];\n\t        if (width) {\n\t          break;\n\t        }\n\t      }\n\t      width = width || this.defaultWidth;\n\t      this._shadowWidth = width;\n\t      return width;\n\t    },\n\t    charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n\t      var fontCharCode, width, operatorListId;\n\t      var widthCode = charcode;\n\t      if (this.cMap && this.cMap.contains(charcode)) {\n\t        widthCode = this.cMap.lookup(charcode);\n\t      }\n\t      width = this.widths[widthCode];\n\t      width = (0, _util.isNum)(width) ? width : this.defaultWidth;\n\t      var vmetric = this.vmetrics && this.vmetrics[widthCode];\n\t      var unicode = this.toUnicode.get(charcode) || charcode;\n\t      if (typeof unicode === 'number') {\n\t        unicode = String.fromCharCode(unicode);\n\t      }\n\t      var isInFont = charcode in this.toFontChar;\n\t      fontCharCode = this.toFontChar[charcode] || charcode;\n\t      if (this.missingFile) {\n\t        fontCharCode = (0, _unicode.mapSpecialUnicodeValues)(fontCharCode);\n\t      }\n\t      if (this.isType3Font) {\n\t        operatorListId = fontCharCode;\n\t      }\n\t      var accent = null;\n\t      if (this.seacMap && this.seacMap[charcode]) {\n\t        isInFont = true;\n\t        var seac = this.seacMap[charcode];\n\t        fontCharCode = seac.baseFontCharCode;\n\t        accent = {\n\t          fontChar: String.fromCharCode(seac.accentFontCharCode),\n\t          offset: seac.accentOffset\n\t        };\n\t      }\n\t      var fontChar = String.fromCharCode(fontCharCode);\n\t      var glyph = this.glyphCache[charcode];\n\t      if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n\t        glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n\t        this.glyphCache[charcode] = glyph;\n\t      }\n\t      return glyph;\n\t    },\n\t    charsToGlyphs: function Font_charsToGlyphs(chars) {\n\t      var charsCache = this.charsCache;\n\t      var glyphs, glyph, charcode;\n\t      if (charsCache) {\n\t        glyphs = charsCache[chars];\n\t        if (glyphs) {\n\t          return glyphs;\n\t        }\n\t      }\n\t      if (!charsCache) {\n\t        charsCache = this.charsCache = Object.create(null);\n\t      }\n\t      glyphs = [];\n\t      var charsCacheKey = chars;\n\t      var i = 0,\n\t          ii;\n\t      if (this.cMap) {\n\t        var c = Object.create(null);\n\t        while (i < chars.length) {\n\t          this.cMap.readCharCode(chars, i, c);\n\t          charcode = c.charcode;\n\t          var length = c.length;\n\t          i += length;\n\t          var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n\t          glyph = this.charToGlyph(charcode, isSpace);\n\t          glyphs.push(glyph);\n\t        }\n\t      } else {\n\t        for (i = 0, ii = chars.length; i < ii; ++i) {\n\t          charcode = chars.charCodeAt(i);\n\t          glyph = this.charToGlyph(charcode, charcode === 0x20);\n\t          glyphs.push(glyph);\n\t        }\n\t      }\n\t      return charsCache[charsCacheKey] = glyphs;\n\t    }\n\t  };\n\t  return Font;\n\t}();\n\tvar ErrorFont = function ErrorFontClosure() {\n\t  function ErrorFont(error) {\n\t    this.error = error;\n\t    this.loadedName = 'g_font_error';\n\t    this.loading = false;\n\t  }\n\t  ErrorFont.prototype = {\n\t    charsToGlyphs: function ErrorFont_charsToGlyphs() {\n\t      return [];\n\t    },\n\t    exportData: function ErrorFont_exportData() {\n\t      return { error: this.error };\n\t    }\n\t  };\n\t  return ErrorFont;\n\t}();\n\tfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n\t  var charCodeToGlyphId = Object.create(null);\n\t  var glyphId, charCode, baseEncoding;\n\t  var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n\t  if (properties.baseEncodingName) {\n\t    baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n\t    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n\t      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n\t      if (glyphId >= 0) {\n\t        charCodeToGlyphId[charCode] = glyphId;\n\t      } else {\n\t        charCodeToGlyphId[charCode] = 0;\n\t      }\n\t    }\n\t  } else if (isSymbolicFont) {\n\t    for (charCode in builtInEncoding) {\n\t      charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n\t    }\n\t  } else {\n\t    baseEncoding = _encodings.StandardEncoding;\n\t    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n\t      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n\t      if (glyphId >= 0) {\n\t        charCodeToGlyphId[charCode] = glyphId;\n\t      } else {\n\t        charCodeToGlyphId[charCode] = 0;\n\t      }\n\t    }\n\t  }\n\t  var differences = properties.differences,\n\t      glyphsUnicodeMap;\n\t  if (differences) {\n\t    for (charCode in differences) {\n\t      var glyphName = differences[charCode];\n\t      glyphId = glyphNames.indexOf(glyphName);\n\t      if (glyphId === -1) {\n\t        if (!glyphsUnicodeMap) {\n\t          glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n\t        }\n\t        var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n\t        if (standardGlyphName !== glyphName) {\n\t          glyphId = glyphNames.indexOf(standardGlyphName);\n\t        }\n\t      }\n\t      if (glyphId >= 0) {\n\t        charCodeToGlyphId[charCode] = glyphId;\n\t      } else {\n\t        charCodeToGlyphId[charCode] = 0;\n\t      }\n\t    }\n\t  }\n\t  return charCodeToGlyphId;\n\t}\n\tvar Type1Font = function Type1FontClosure() {\n\t  function findBlock(streamBytes, signature, startIndex) {\n\t    var streamBytesLength = streamBytes.length;\n\t    var signatureLength = signature.length;\n\t    var scanLength = streamBytesLength - signatureLength;\n\t    var i = startIndex,\n\t        j,\n\t        found = false;\n\t    while (i < scanLength) {\n\t      j = 0;\n\t      while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n\t        j++;\n\t      }\n\t      if (j >= signatureLength) {\n\t        i += j;\n\t        while (i < streamBytesLength && (0, _util.isSpace)(streamBytes[i])) {\n\t          i++;\n\t        }\n\t        found = true;\n\t        break;\n\t      }\n\t      i++;\n\t    }\n\t    return {\n\t      found: found,\n\t      length: i\n\t    };\n\t  }\n\t  function getHeaderBlock(stream, suggestedLength) {\n\t    var EEXEC_SIGNATURE = [0x65, 0x65, 0x78, 0x65, 0x63];\n\t    var streamStartPos = stream.pos;\n\t    var headerBytes, headerBytesLength, block;\n\t    try {\n\t      headerBytes = stream.getBytes(suggestedLength);\n\t      headerBytesLength = headerBytes.length;\n\t    } catch (ex) {\n\t      if (ex instanceof _util.MissingDataException) {\n\t        throw ex;\n\t      }\n\t    }\n\t    if (headerBytesLength === suggestedLength) {\n\t      block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n\t      if (block.found && block.length === suggestedLength) {\n\t        return {\n\t          stream: new _stream.Stream(headerBytes),\n\t          length: suggestedLength\n\t        };\n\t      }\n\t    }\n\t    (0, _util.warn)('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n\t    stream.pos = streamStartPos;\n\t    var SCAN_BLOCK_LENGTH = 2048;\n\t    var actualLength;\n\t    while (true) {\n\t      var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n\t      block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n\t      if (block.length === 0) {\n\t        break;\n\t      }\n\t      stream.pos += block.length;\n\t      if (block.found) {\n\t        actualLength = stream.pos - streamStartPos;\n\t        break;\n\t      }\n\t    }\n\t    stream.pos = streamStartPos;\n\t    if (actualLength) {\n\t      return {\n\t        stream: new _stream.Stream(stream.getBytes(actualLength)),\n\t        length: actualLength\n\t      };\n\t    }\n\t    (0, _util.warn)('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n\t    return {\n\t      stream: new _stream.Stream(stream.getBytes(suggestedLength)),\n\t      length: suggestedLength\n\t    };\n\t  }\n\t  function getEexecBlock(stream, suggestedLength) {\n\t    var eexecBytes = stream.getBytes();\n\t    return {\n\t      stream: new _stream.Stream(eexecBytes),\n\t      length: eexecBytes.length\n\t    };\n\t  }\n\t  function Type1Font(name, file, properties) {\n\t    var PFB_HEADER_SIZE = 6;\n\t    var headerBlockLength = properties.length1;\n\t    var eexecBlockLength = properties.length2;\n\t    var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n\t    var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n\t    if (pfbHeaderPresent) {\n\t      file.skip(PFB_HEADER_SIZE);\n\t      headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n\t    }\n\t    var headerBlock = getHeaderBlock(file, headerBlockLength);\n\t    headerBlockLength = headerBlock.length;\n\t    var headerBlockParser = new _type1_parser.Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n\t    headerBlockParser.extractFontHeader(properties);\n\t    if (pfbHeaderPresent) {\n\t      pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n\t      eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n\t    }\n\t    var eexecBlock = getEexecBlock(file, eexecBlockLength);\n\t    eexecBlockLength = eexecBlock.length;\n\t    var eexecBlockParser = new _type1_parser.Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n\t    var data = eexecBlockParser.extractFontProgram();\n\t    for (var info in data.properties) {\n\t      properties[info] = data.properties[info];\n\t    }\n\t    var charstrings = data.charstrings;\n\t    var type2Charstrings = this.getType2Charstrings(charstrings);\n\t    var subrs = this.getType2Subrs(data.subrs);\n\t    this.charstrings = charstrings;\n\t    this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n\t    this.seacs = this.getSeacs(data.charstrings);\n\t  }\n\t  Type1Font.prototype = {\n\t    get numGlyphs() {\n\t      return this.charstrings.length + 1;\n\t    },\n\t    getCharset: function Type1Font_getCharset() {\n\t      var charset = ['.notdef'];\n\t      var charstrings = this.charstrings;\n\t      for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n\t        charset.push(charstrings[glyphId].glyphName);\n\t      }\n\t      return charset;\n\t    },\n\t    getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n\t      var charstrings = this.charstrings;\n\t      var glyphNames = ['.notdef'],\n\t          glyphId;\n\t      for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n\t        glyphNames.push(charstrings[glyphId].glyphName);\n\t      }\n\t      var encoding = properties.builtInEncoding;\n\t      if (encoding) {\n\t        var builtInEncoding = Object.create(null);\n\t        for (var charCode in encoding) {\n\t          glyphId = glyphNames.indexOf(encoding[charCode]);\n\t          if (glyphId >= 0) {\n\t            builtInEncoding[charCode] = glyphId;\n\t          }\n\t        }\n\t      }\n\t      return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n\t    },\n\t    getSeacs: function Type1Font_getSeacs(charstrings) {\n\t      var i, ii;\n\t      var seacMap = [];\n\t      for (i = 0, ii = charstrings.length; i < ii; i++) {\n\t        var charstring = charstrings[i];\n\t        if (charstring.seac) {\n\t          seacMap[i + 1] = charstring.seac;\n\t        }\n\t      }\n\t      return seacMap;\n\t    },\n\t    getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n\t      var type2Charstrings = [];\n\t      for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n\t        type2Charstrings.push(type1Charstrings[i].charstring);\n\t      }\n\t      return type2Charstrings;\n\t    },\n\t    getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n\t      var bias = 0;\n\t      var count = type1Subrs.length;\n\t      if (count < 1133) {\n\t        bias = 107;\n\t      } else if (count < 33769) {\n\t        bias = 1131;\n\t      } else {\n\t        bias = 32768;\n\t      }\n\t      var type2Subrs = [];\n\t      var i;\n\t      for (i = 0; i < bias; i++) {\n\t        type2Subrs.push([0x0B]);\n\t      }\n\t      for (i = 0; i < count; i++) {\n\t        type2Subrs.push(type1Subrs[i]);\n\t      }\n\t      return type2Subrs;\n\t    },\n\t    wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n\t      var cff = new _cff_parser.CFF();\n\t      cff.header = new _cff_parser.CFFHeader(1, 0, 4, 4);\n\t      cff.names = [name];\n\t      var topDict = new _cff_parser.CFFTopDict();\n\t      topDict.setByName('version', 391);\n\t      topDict.setByName('Notice', 392);\n\t      topDict.setByName('FullName', 393);\n\t      topDict.setByName('FamilyName', 394);\n\t      topDict.setByName('Weight', 395);\n\t      topDict.setByName('Encoding', null);\n\t      topDict.setByName('FontMatrix', properties.fontMatrix);\n\t      topDict.setByName('FontBBox', properties.bbox);\n\t      topDict.setByName('charset', null);\n\t      topDict.setByName('CharStrings', null);\n\t      topDict.setByName('Private', null);\n\t      cff.topDict = topDict;\n\t      var strings = new _cff_parser.CFFStrings();\n\t      strings.add('Version 0.11');\n\t      strings.add('See original notice');\n\t      strings.add(name);\n\t      strings.add(name);\n\t      strings.add('Medium');\n\t      cff.strings = strings;\n\t      cff.globalSubrIndex = new _cff_parser.CFFIndex();\n\t      var count = glyphs.length;\n\t      var charsetArray = [0];\n\t      var i, ii;\n\t      for (i = 0; i < count; i++) {\n\t        var index = _cff_parser.CFFStandardStrings.indexOf(charstrings[i].glyphName);\n\t        if (index === -1) {\n\t          index = 0;\n\t        }\n\t        charsetArray.push(index >> 8 & 0xff, index & 0xff);\n\t      }\n\t      cff.charset = new _cff_parser.CFFCharset(false, 0, [], charsetArray);\n\t      var charStringsIndex = new _cff_parser.CFFIndex();\n\t      charStringsIndex.add([0x8B, 0x0E]);\n\t      for (i = 0; i < count; i++) {\n\t        var glyph = glyphs[i];\n\t        if (glyph.length === 0) {\n\t          charStringsIndex.add([0x8B, 0x0E]);\n\t          continue;\n\t        }\n\t        charStringsIndex.add(glyph);\n\t      }\n\t      cff.charStrings = charStringsIndex;\n\t      var privateDict = new _cff_parser.CFFPrivateDict();\n\t      privateDict.setByName('Subrs', null);\n\t      var fields = ['BlueValues', 'OtherBlues', 'FamilyBlues', 'FamilyOtherBlues', 'StemSnapH', 'StemSnapV', 'BlueShift', 'BlueFuzz', 'BlueScale', 'LanguageGroup', 'ExpansionFactor', 'ForceBold', 'StdHW', 'StdVW'];\n\t      for (i = 0, ii = fields.length; i < ii; i++) {\n\t        var field = fields[i];\n\t        if (!(field in properties.privateData)) {\n\t          continue;\n\t        }\n\t        var value = properties.privateData[field];\n\t        if (Array.isArray(value)) {\n\t          for (var j = value.length - 1; j > 0; j--) {\n\t            value[j] -= value[j - 1];\n\t          }\n\t        }\n\t        privateDict.setByName(field, value);\n\t      }\n\t      cff.topDict.privateDict = privateDict;\n\t      var subrIndex = new _cff_parser.CFFIndex();\n\t      for (i = 0, ii = subrs.length; i < ii; i++) {\n\t        subrIndex.add(subrs[i]);\n\t      }\n\t      privateDict.subrsIndex = subrIndex;\n\t      var compiler = new _cff_parser.CFFCompiler(cff);\n\t      return compiler.compile();\n\t    }\n\t  };\n\t  return Type1Font;\n\t}();\n\tvar CFFFont = function CFFFontClosure() {\n\t  function CFFFont(file, properties) {\n\t    this.properties = properties;\n\t    var parser = new _cff_parser.CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n\t    this.cff = parser.parse();\n\t    var compiler = new _cff_parser.CFFCompiler(this.cff);\n\t    this.seacs = this.cff.seacs;\n\t    try {\n\t      this.data = compiler.compile();\n\t    } catch (e) {\n\t      (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n\t      this.data = file;\n\t    }\n\t  }\n\t  CFFFont.prototype = {\n\t    get numGlyphs() {\n\t      return this.cff.charStrings.count;\n\t    },\n\t    getCharset: function CFFFont_getCharset() {\n\t      return this.cff.charset.charset;\n\t    },\n\t    getGlyphMapping: function CFFFont_getGlyphMapping() {\n\t      var cff = this.cff;\n\t      var properties = this.properties;\n\t      var charsets = cff.charset.charset;\n\t      var charCodeToGlyphId;\n\t      var glyphId;\n\t      if (properties.composite) {\n\t        charCodeToGlyphId = Object.create(null);\n\t        if (cff.isCIDFont) {\n\t          for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n\t            var cid = charsets[glyphId];\n\t            var charCode = properties.cMap.charCodeOf(cid);\n\t            charCodeToGlyphId[charCode] = glyphId;\n\t          }\n\t        } else {\n\t          for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n\t            charCodeToGlyphId[glyphId] = glyphId;\n\t          }\n\t        }\n\t        return charCodeToGlyphId;\n\t      }\n\t      var encoding = cff.encoding ? cff.encoding.encoding : null;\n\t      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n\t      return charCodeToGlyphId;\n\t    }\n\t  };\n\t  return CFFFont;\n\t}();\n\t(function checkSeacSupport() {\n\t  if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\n\t    exports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED = true;\n\t  }\n\t})();\n\t(function checkChromeWindows() {\n\t  if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\n\t    SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n\t  }\n\t})();\n\texports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\n\texports.PRIVATE_USE_OFFSET_START = PRIVATE_USE_OFFSET_START;\n\texports.PRIVATE_USE_OFFSET_END = PRIVATE_USE_OFFSET_END;\n\texports.ErrorFont = ErrorFont;\n\texports.Font = Font;\n\texports.FontFlags = FontFlags;\n\texports.ToUnicodeMap = ToUnicodeMap;\n\texports.IdentityToUnicodeMap = IdentityToUnicodeMap;\n\texports.ProblematicCharRanges = ProblematicCharRanges;\n\texports.getFontType = getFontType;\n\t\n\t/***/ }),\n\t/* 135 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\n\tvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\tvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\n\texports.ISOAdobeCharset = ISOAdobeCharset;\n\texports.ExpertCharset = ExpertCharset;\n\texports.ExpertSubsetCharset = ExpertSubsetCharset;\n\t\n\t/***/ }),\n\t/* 136 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.FontRendererFactory = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _cff_parser = __w_pdfjs_require__(78);\n\t\n\tvar _glyphlist = __w_pdfjs_require__(47);\n\t\n\tvar _encodings = __w_pdfjs_require__(27);\n\t\n\tvar _stream = __w_pdfjs_require__(5);\n\t\n\tvar FontRendererFactory = function FontRendererFactoryClosure() {\n\t  function getLong(data, offset) {\n\t    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n\t  }\n\t  function getUshort(data, offset) {\n\t    return data[offset] << 8 | data[offset + 1];\n\t  }\n\t  function parseCmap(data, start, end) {\n\t    var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n\t    var format = getUshort(data, start + offset);\n\t    var ranges, p, i;\n\t    if (format === 4) {\n\t      getUshort(data, start + offset + 2);\n\t      var segCount = getUshort(data, start + offset + 6) >> 1;\n\t      p = start + offset + 14;\n\t      ranges = [];\n\t      for (i = 0; i < segCount; i++, p += 2) {\n\t        ranges[i] = { end: getUshort(data, p) };\n\t      }\n\t      p += 2;\n\t      for (i = 0; i < segCount; i++, p += 2) {\n\t        ranges[i].start = getUshort(data, p);\n\t      }\n\t      for (i = 0; i < segCount; i++, p += 2) {\n\t        ranges[i].idDelta = getUshort(data, p);\n\t      }\n\t      for (i = 0; i < segCount; i++, p += 2) {\n\t        var idOffset = getUshort(data, p);\n\t        if (idOffset === 0) {\n\t          continue;\n\t        }\n\t        ranges[i].ids = [];\n\t        for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n\t          ranges[i].ids[j] = getUshort(data, p + idOffset);\n\t          idOffset += 2;\n\t        }\n\t      }\n\t      return ranges;\n\t    } else if (format === 12) {\n\t      getLong(data, start + offset + 4);\n\t      var groups = getLong(data, start + offset + 12);\n\t      p = start + offset + 16;\n\t      ranges = [];\n\t      for (i = 0; i < groups; i++) {\n\t        ranges.push({\n\t          start: getLong(data, p),\n\t          end: getLong(data, p + 4),\n\t          idDelta: getLong(data, p + 8) - getLong(data, p)\n\t        });\n\t        p += 12;\n\t      }\n\t      return ranges;\n\t    }\n\t    throw new _util.FormatError('unsupported cmap: ' + format);\n\t  }\n\t  function parseCff(data, start, end, seacAnalysisEnabled) {\n\t    var properties = {};\n\t    var parser = new _cff_parser.CFFParser(new _stream.Stream(data, start, end - start), properties, seacAnalysisEnabled);\n\t    var cff = parser.parse();\n\t    return {\n\t      glyphs: cff.charStrings.objects,\n\t      subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n\t      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects\n\t    };\n\t  }\n\t  function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n\t    var itemSize, itemDecode;\n\t    if (isGlyphLocationsLong) {\n\t      itemSize = 4;\n\t      itemDecode = function fontItemDecodeLong(data, offset) {\n\t        return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n\t      };\n\t    } else {\n\t      itemSize = 2;\n\t      itemDecode = function fontItemDecode(data, offset) {\n\t        return data[offset] << 9 | data[offset + 1] << 1;\n\t      };\n\t    }\n\t    var glyphs = [];\n\t    var startOffset = itemDecode(loca, 0);\n\t    for (var j = itemSize; j < loca.length; j += itemSize) {\n\t      var endOffset = itemDecode(loca, j);\n\t      glyphs.push(glyf.subarray(startOffset, endOffset));\n\t      startOffset = endOffset;\n\t    }\n\t    return glyphs;\n\t  }\n\t  function lookupCmap(ranges, unicode) {\n\t    var code = unicode.charCodeAt(0),\n\t        gid = 0;\n\t    var l = 0,\n\t        r = ranges.length - 1;\n\t    while (l < r) {\n\t      var c = l + r + 1 >> 1;\n\t      if (code < ranges[c].start) {\n\t        r = c - 1;\n\t      } else {\n\t        l = c;\n\t      }\n\t    }\n\t    if (ranges[l].start <= code && code <= ranges[l].end) {\n\t      gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\n\t    }\n\t    return {\n\t      charCode: code,\n\t      glyphId: gid\n\t    };\n\t  }\n\t  function compileGlyf(code, cmds, font) {\n\t    function moveTo(x, y) {\n\t      cmds.push({\n\t        cmd: 'moveTo',\n\t        args: [x, y]\n\t      });\n\t    }\n\t    function lineTo(x, y) {\n\t      cmds.push({\n\t        cmd: 'lineTo',\n\t        args: [x, y]\n\t      });\n\t    }\n\t    function quadraticCurveTo(xa, ya, x, y) {\n\t      cmds.push({\n\t        cmd: 'quadraticCurveTo',\n\t        args: [xa, ya, x, y]\n\t      });\n\t    }\n\t    var i = 0;\n\t    var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n\t    var flags;\n\t    var x = 0,\n\t        y = 0;\n\t    i += 10;\n\t    if (numberOfContours < 0) {\n\t      do {\n\t        flags = code[i] << 8 | code[i + 1];\n\t        var glyphIndex = code[i + 2] << 8 | code[i + 3];\n\t        i += 4;\n\t        var arg1, arg2;\n\t        if (flags & 0x01) {\n\t          arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n\t          arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n\t          i += 4;\n\t        } else {\n\t          arg1 = code[i++];\n\t          arg2 = code[i++];\n\t        }\n\t        if (flags & 0x02) {\n\t          x = arg1;\n\t          y = arg2;\n\t        } else {\n\t          x = 0;\n\t          y = 0;\n\t        }\n\t        var scaleX = 1,\n\t            scaleY = 1,\n\t            scale01 = 0,\n\t            scale10 = 0;\n\t        if (flags & 0x08) {\n\t          scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n\t          i += 2;\n\t        } else if (flags & 0x40) {\n\t          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n\t          scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n\t          i += 4;\n\t        } else if (flags & 0x80) {\n\t          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n\t          scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n\t          scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n\t          scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n\t          i += 8;\n\t        }\n\t        var subglyph = font.glyphs[glyphIndex];\n\t        if (subglyph) {\n\t          cmds.push({ cmd: 'save' });\n\t          cmds.push({\n\t            cmd: 'transform',\n\t            args: [scaleX, scale01, scale10, scaleY, x, y]\n\t          });\n\t          compileGlyf(subglyph, cmds, font);\n\t          cmds.push({ cmd: 'restore' });\n\t        }\n\t      } while (flags & 0x20);\n\t    } else {\n\t      var endPtsOfContours = [];\n\t      var j, jj;\n\t      for (j = 0; j < numberOfContours; j++) {\n\t        endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n\t        i += 2;\n\t      }\n\t      var instructionLength = code[i] << 8 | code[i + 1];\n\t      i += 2 + instructionLength;\n\t      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n\t      var points = [];\n\t      while (points.length < numberOfPoints) {\n\t        flags = code[i++];\n\t        var repeat = 1;\n\t        if (flags & 0x08) {\n\t          repeat += code[i++];\n\t        }\n\t        while (repeat-- > 0) {\n\t          points.push({ flags: flags });\n\t        }\n\t      }\n\t      for (j = 0; j < numberOfPoints; j++) {\n\t        switch (points[j].flags & 0x12) {\n\t          case 0x00:\n\t            x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n\t            i += 2;\n\t            break;\n\t          case 0x02:\n\t            x -= code[i++];\n\t            break;\n\t          case 0x12:\n\t            x += code[i++];\n\t            break;\n\t        }\n\t        points[j].x = x;\n\t      }\n\t      for (j = 0; j < numberOfPoints; j++) {\n\t        switch (points[j].flags & 0x24) {\n\t          case 0x00:\n\t            y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n\t            i += 2;\n\t            break;\n\t          case 0x04:\n\t            y -= code[i++];\n\t            break;\n\t          case 0x24:\n\t            y += code[i++];\n\t            break;\n\t        }\n\t        points[j].y = y;\n\t      }\n\t      var startPoint = 0;\n\t      for (i = 0; i < numberOfContours; i++) {\n\t        var endPoint = endPtsOfContours[i];\n\t        var contour = points.slice(startPoint, endPoint + 1);\n\t        if (contour[0].flags & 1) {\n\t          contour.push(contour[0]);\n\t        } else if (contour[contour.length - 1].flags & 1) {\n\t          contour.unshift(contour[contour.length - 1]);\n\t        } else {\n\t          var p = {\n\t            flags: 1,\n\t            x: (contour[0].x + contour[contour.length - 1].x) / 2,\n\t            y: (contour[0].y + contour[contour.length - 1].y) / 2\n\t          };\n\t          contour.unshift(p);\n\t          contour.push(p);\n\t        }\n\t        moveTo(contour[0].x, contour[0].y);\n\t        for (j = 1, jj = contour.length; j < jj; j++) {\n\t          if (contour[j].flags & 1) {\n\t            lineTo(contour[j].x, contour[j].y);\n\t          } else if (contour[j + 1].flags & 1) {\n\t            quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n\t            j++;\n\t          } else {\n\t            quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n\t          }\n\t        }\n\t        startPoint = endPoint + 1;\n\t      }\n\t    }\n\t  }\n\t  function compileCharString(code, cmds, font) {\n\t    var stack = [];\n\t    var x = 0,\n\t        y = 0;\n\t    var stems = 0;\n\t    function moveTo(x, y) {\n\t      cmds.push({\n\t        cmd: 'moveTo',\n\t        args: [x, y]\n\t      });\n\t    }\n\t    function lineTo(x, y) {\n\t      cmds.push({\n\t        cmd: 'lineTo',\n\t        args: [x, y]\n\t      });\n\t    }\n\t    function bezierCurveTo(x1, y1, x2, y2, x, y) {\n\t      cmds.push({\n\t        cmd: 'bezierCurveTo',\n\t        args: [x1, y1, x2, y2, x, y]\n\t      });\n\t    }\n\t    function parse(code) {\n\t      var i = 0;\n\t      while (i < code.length) {\n\t        var stackClean = false;\n\t        var v = code[i++];\n\t        var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n\t        switch (v) {\n\t          case 1:\n\t            stems += stack.length >> 1;\n\t            stackClean = true;\n\t            break;\n\t          case 3:\n\t            stems += stack.length >> 1;\n\t            stackClean = true;\n\t            break;\n\t          case 4:\n\t            y += stack.pop();\n\t            moveTo(x, y);\n\t            stackClean = true;\n\t            break;\n\t          case 5:\n\t            while (stack.length > 0) {\n\t              x += stack.shift();\n\t              y += stack.shift();\n\t              lineTo(x, y);\n\t            }\n\t            break;\n\t          case 6:\n\t            while (stack.length > 0) {\n\t              x += stack.shift();\n\t              lineTo(x, y);\n\t              if (stack.length === 0) {\n\t                break;\n\t              }\n\t              y += stack.shift();\n\t              lineTo(x, y);\n\t            }\n\t            break;\n\t          case 7:\n\t            while (stack.length > 0) {\n\t              y += stack.shift();\n\t              lineTo(x, y);\n\t              if (stack.length === 0) {\n\t                break;\n\t              }\n\t              x += stack.shift();\n\t              lineTo(x, y);\n\t            }\n\t            break;\n\t          case 8:\n\t            while (stack.length > 0) {\n\t              xa = x + stack.shift();\n\t              ya = y + stack.shift();\n\t              xb = xa + stack.shift();\n\t              yb = ya + stack.shift();\n\t              x = xb + stack.shift();\n\t              y = yb + stack.shift();\n\t              bezierCurveTo(xa, ya, xb, yb, x, y);\n\t            }\n\t            break;\n\t          case 10:\n\t            n = stack.pop() + font.subrsBias;\n\t            subrCode = font.subrs[n];\n\t            if (subrCode) {\n\t              parse(subrCode);\n\t            }\n\t            break;\n\t          case 11:\n\t            return;\n\t          case 12:\n\t            v = code[i++];\n\t            switch (v) {\n\t              case 34:\n\t                xa = x + stack.shift();\n\t                xb = xa + stack.shift();\n\t                y1 = y + stack.shift();\n\t                x = xb + stack.shift();\n\t                bezierCurveTo(xa, y, xb, y1, x, y1);\n\t                xa = x + stack.shift();\n\t                xb = xa + stack.shift();\n\t                x = xb + stack.shift();\n\t                bezierCurveTo(xa, y1, xb, y, x, y);\n\t                break;\n\t              case 35:\n\t                xa = x + stack.shift();\n\t                ya = y + stack.shift();\n\t                xb = xa + stack.shift();\n\t                yb = ya + stack.shift();\n\t                x = xb + stack.shift();\n\t                y = yb + stack.shift();\n\t                bezierCurveTo(xa, ya, xb, yb, x, y);\n\t                xa = x + stack.shift();\n\t                ya = y + stack.shift();\n\t                xb = xa + stack.shift();\n\t                yb = ya + stack.shift();\n\t                x = xb + stack.shift();\n\t                y = yb + stack.shift();\n\t                bezierCurveTo(xa, ya, xb, yb, x, y);\n\t                stack.pop();\n\t                break;\n\t              case 36:\n\t                xa = x + stack.shift();\n\t                y1 = y + stack.shift();\n\t                xb = xa + stack.shift();\n\t                y2 = y1 + stack.shift();\n\t                x = xb + stack.shift();\n\t                bezierCurveTo(xa, y1, xb, y2, x, y2);\n\t                xa = x + stack.shift();\n\t                xb = xa + stack.shift();\n\t                y3 = y2 + stack.shift();\n\t                x = xb + stack.shift();\n\t                bezierCurveTo(xa, y2, xb, y3, x, y);\n\t                break;\n\t              case 37:\n\t                var x0 = x,\n\t                    y0 = y;\n\t                xa = x + stack.shift();\n\t                ya = y + stack.shift();\n\t                xb = xa + stack.shift();\n\t                yb = ya + stack.shift();\n\t                x = xb + stack.shift();\n\t                y = yb + stack.shift();\n\t                bezierCurveTo(xa, ya, xb, yb, x, y);\n\t                xa = x + stack.shift();\n\t                ya = y + stack.shift();\n\t                xb = xa + stack.shift();\n\t                yb = ya + stack.shift();\n\t                x = xb;\n\t                y = yb;\n\t                if (Math.abs(x - x0) > Math.abs(y - y0)) {\n\t                  x += stack.shift();\n\t                } else {\n\t                  y += stack.shift();\n\t                }\n\t                bezierCurveTo(xa, ya, xb, yb, x, y);\n\t                break;\n\t              default:\n\t                throw new _util.FormatError('unknown operator: 12 ' + v);\n\t            }\n\t            break;\n\t          case 14:\n\t            if (stack.length >= 4) {\n\t              var achar = stack.pop();\n\t              var bchar = stack.pop();\n\t              y = stack.pop();\n\t              x = stack.pop();\n\t              cmds.push({ cmd: 'save' });\n\t              cmds.push({\n\t                cmd: 'translate',\n\t                args: [x, y]\n\t              });\n\t              var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));\n\t              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n\t              cmds.push({ cmd: 'restore' });\n\t              cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]]));\n\t              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n\t            }\n\t            return;\n\t          case 18:\n\t            stems += stack.length >> 1;\n\t            stackClean = true;\n\t            break;\n\t          case 19:\n\t            stems += stack.length >> 1;\n\t            i += stems + 7 >> 3;\n\t            stackClean = true;\n\t            break;\n\t          case 20:\n\t            stems += stack.length >> 1;\n\t            i += stems + 7 >> 3;\n\t            stackClean = true;\n\t            break;\n\t          case 21:\n\t            y += stack.pop();\n\t            x += stack.pop();\n\t            moveTo(x, y);\n\t            stackClean = true;\n\t            break;\n\t          case 22:\n\t            x += stack.pop();\n\t            moveTo(x, y);\n\t            stackClean = true;\n\t            break;\n\t          case 23:\n\t            stems += stack.length >> 1;\n\t            stackClean = true;\n\t            break;\n\t          case 24:\n\t            while (stack.length > 2) {\n\t              xa = x + stack.shift();\n\t              ya = y + stack.shift();\n\t              xb = xa + stack.shift();\n\t              yb = ya + stack.shift();\n\t              x = xb + stack.shift();\n\t              y = yb + stack.shift();\n\t              bezierCurveTo(xa, ya, xb, yb, x, y);\n\t            }\n\t            x += stack.shift();\n\t            y += stack.shift();\n\t            lineTo(x, y);\n\t            break;\n\t          case 25:\n\t            while (stack.length > 6) {\n\t              x += stack.shift();\n\t              y += stack.shift();\n\t              lineTo(x, y);\n\t            }\n\t            xa = x + stack.shift();\n\t            ya = y + stack.shift();\n\t            xb = xa + stack.shift();\n\t            yb = ya + stack.shift();\n\t            x = xb + stack.shift();\n\t            y = yb + stack.shift();\n\t            bezierCurveTo(xa, ya, xb, yb, x, y);\n\t            break;\n\t          case 26:\n\t            if (stack.length % 2) {\n\t              x += stack.shift();\n\t            }\n\t            while (stack.length > 0) {\n\t              xa = x;\n\t              ya = y + stack.shift();\n\t              xb = xa + stack.shift();\n\t              yb = ya + stack.shift();\n\t              x = xb;\n\t              y = yb + stack.shift();\n\t              bezierCurveTo(xa, ya, xb, yb, x, y);\n\t            }\n\t            break;\n\t          case 27:\n\t            if (stack.length % 2) {\n\t              y += stack.shift();\n\t            }\n\t            while (stack.length > 0) {\n\t              xa = x + stack.shift();\n\t              ya = y;\n\t              xb = xa + stack.shift();\n\t              yb = ya + stack.shift();\n\t              x = xb + stack.shift();\n\t              y = yb;\n\t              bezierCurveTo(xa, ya, xb, yb, x, y);\n\t            }\n\t            break;\n\t          case 28:\n\t            stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n\t            i += 2;\n\t            break;\n\t          case 29:\n\t            n = stack.pop() + font.gsubrsBias;\n\t            subrCode = font.gsubrs[n];\n\t            if (subrCode) {\n\t              parse(subrCode);\n\t            }\n\t            break;\n\t          case 30:\n\t            while (stack.length > 0) {\n\t              xa = x;\n\t              ya = y + stack.shift();\n\t              xb = xa + stack.shift();\n\t              yb = ya + stack.shift();\n\t              x = xb + stack.shift();\n\t              y = yb + (stack.length === 1 ? stack.shift() : 0);\n\t              bezierCurveTo(xa, ya, xb, yb, x, y);\n\t              if (stack.length === 0) {\n\t                break;\n\t              }\n\t              xa = x + stack.shift();\n\t              ya = y;\n\t              xb = xa + stack.shift();\n\t              yb = ya + stack.shift();\n\t              y = yb + stack.shift();\n\t              x = xb + (stack.length === 1 ? stack.shift() : 0);\n\t              bezierCurveTo(xa, ya, xb, yb, x, y);\n\t            }\n\t            break;\n\t          case 31:\n\t            while (stack.length > 0) {\n\t              xa = x + stack.shift();\n\t              ya = y;\n\t              xb = xa + stack.shift();\n\t              yb = ya + stack.shift();\n\t              y = yb + stack.shift();\n\t              x = xb + (stack.length === 1 ? stack.shift() : 0);\n\t              bezierCurveTo(xa, ya, xb, yb, x, y);\n\t              if (stack.length === 0) {\n\t                break;\n\t              }\n\t              xa = x;\n\t              ya = y + stack.shift();\n\t              xb = xa + stack.shift();\n\t              yb = ya + stack.shift();\n\t              x = xb + stack.shift();\n\t              y = yb + (stack.length === 1 ? stack.shift() : 0);\n\t              bezierCurveTo(xa, ya, xb, yb, x, y);\n\t            }\n\t            break;\n\t          default:\n\t            if (v < 32) {\n\t              throw new _util.FormatError('unknown operator: ' + v);\n\t            }\n\t            if (v < 247) {\n\t              stack.push(v - 139);\n\t            } else if (v < 251) {\n\t              stack.push((v - 247) * 256 + code[i++] + 108);\n\t            } else if (v < 255) {\n\t              stack.push(-(v - 251) * 256 - code[i++] - 108);\n\t            } else {\n\t              stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n\t              i += 4;\n\t            }\n\t            break;\n\t        }\n\t        if (stackClean) {\n\t          stack.length = 0;\n\t        }\n\t      }\n\t    }\n\t    parse(code);\n\t  }\n\t  var noop = '';\n\t  function CompiledFont(fontMatrix) {\n\t    this.compiledGlyphs = Object.create(null);\n\t    this.compiledCharCodeToGlyphId = Object.create(null);\n\t    this.fontMatrix = fontMatrix;\n\t  }\n\t  CompiledFont.prototype = {\n\t    getPathJs: function getPathJs(unicode) {\n\t      var cmap = lookupCmap(this.cmap, unicode);\n\t      var fn = this.compiledGlyphs[cmap.glyphId];\n\t      if (!fn) {\n\t        fn = this.compileGlyph(this.glyphs[cmap.glyphId]);\n\t        this.compiledGlyphs[cmap.glyphId] = fn;\n\t      }\n\t      if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n\t        this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n\t      }\n\t      return fn;\n\t    },\n\t    compileGlyph: function compileGlyph(code) {\n\t      if (!code || code.length === 0 || code[0] === 14) {\n\t        return noop;\n\t      }\n\t      var cmds = [];\n\t      cmds.push({ cmd: 'save' });\n\t      cmds.push({\n\t        cmd: 'transform',\n\t        args: this.fontMatrix.slice()\n\t      });\n\t      cmds.push({\n\t        cmd: 'scale',\n\t        args: ['size', '-size']\n\t      });\n\t      this.compileGlyphImpl(code, cmds);\n\t      cmds.push({ cmd: 'restore' });\n\t      return cmds;\n\t    },\n\t    compileGlyphImpl: function compileGlyphImpl() {\n\t      throw new Error('Children classes should implement this.');\n\t    },\n\t    hasBuiltPath: function hasBuiltPath(unicode) {\n\t      var cmap = lookupCmap(this.cmap, unicode);\n\t      return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n\t    }\n\t  };\n\t  function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n\t    fontMatrix = fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0];\n\t    CompiledFont.call(this, fontMatrix);\n\t    this.glyphs = glyphs;\n\t    this.cmap = cmap;\n\t  }\n\t  _util.Util.inherit(TrueTypeCompiled, CompiledFont, {\n\t    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n\t      compileGlyf(code, cmds, this);\n\t    }\n\t  });\n\t  function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n\t    fontMatrix = fontMatrix || [0.001, 0, 0, 0.001, 0, 0];\n\t    CompiledFont.call(this, fontMatrix);\n\t    this.glyphs = cffInfo.glyphs;\n\t    this.gsubrs = cffInfo.gsubrs || [];\n\t    this.subrs = cffInfo.subrs || [];\n\t    this.cmap = cmap;\n\t    this.glyphNameMap = glyphNameMap || (0, _glyphlist.getGlyphsUnicode)();\n\t    this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\n\t    this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\n\t  }\n\t  _util.Util.inherit(Type2Compiled, CompiledFont, {\n\t    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n\t      compileCharString(code, cmds, this);\n\t    }\n\t  });\n\t  return {\n\t    create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n\t      var data = new Uint8Array(font.data);\n\t      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n\t      var numTables = getUshort(data, 4);\n\t      for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n\t        var tag = (0, _util.bytesToString)(data.subarray(p, p + 4));\n\t        var offset = getLong(data, p + 8);\n\t        var length = getLong(data, p + 12);\n\t        switch (tag) {\n\t          case 'cmap':\n\t            cmap = parseCmap(data, offset, offset + length);\n\t            break;\n\t          case 'glyf':\n\t            glyf = data.subarray(offset, offset + length);\n\t            break;\n\t          case 'loca':\n\t            loca = data.subarray(offset, offset + length);\n\t            break;\n\t          case 'head':\n\t            unitsPerEm = getUshort(data, offset + 18);\n\t            indexToLocFormat = getUshort(data, offset + 50);\n\t            break;\n\t          case 'CFF ':\n\t            cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n\t            break;\n\t        }\n\t      }\n\t      if (glyf) {\n\t        var fontMatrix = !unitsPerEm ? font.fontMatrix : [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0];\n\t        return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n\t      }\n\t      return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n\t    }\n\t  };\n\t}();\n\texports.FontRendererFactory = FontRendererFactory;\n\t\n\t/***/ }),\n\t/* 137 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Type1Parser = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _encodings = __w_pdfjs_require__(27);\n\t\n\tvar _stream = __w_pdfjs_require__(5);\n\t\n\tvar HINTING_ENABLED = false;\n\tvar Type1CharString = function Type1CharStringClosure() {\n\t  var COMMAND_MAP = {\n\t    'hstem': [1],\n\t    'vstem': [3],\n\t    'vmoveto': [4],\n\t    'rlineto': [5],\n\t    'hlineto': [6],\n\t    'vlineto': [7],\n\t    'rrcurveto': [8],\n\t    'callsubr': [10],\n\t    'flex': [12, 35],\n\t    'drop': [12, 18],\n\t    'endchar': [14],\n\t    'rmoveto': [21],\n\t    'hmoveto': [22],\n\t    'vhcurveto': [30],\n\t    'hvcurveto': [31]\n\t  };\n\t  function Type1CharString() {\n\t    this.width = 0;\n\t    this.lsb = 0;\n\t    this.flexing = false;\n\t    this.output = [];\n\t    this.stack = [];\n\t  }\n\t  Type1CharString.prototype = {\n\t    convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n\t      var count = encoded.length;\n\t      var error = false;\n\t      var wx, sbx, subrNumber;\n\t      for (var i = 0; i < count; i++) {\n\t        var value = encoded[i];\n\t        if (value < 32) {\n\t          if (value === 12) {\n\t            value = (value << 8) + encoded[++i];\n\t          }\n\t          switch (value) {\n\t            case 1:\n\t              if (!HINTING_ENABLED) {\n\t                this.stack = [];\n\t                break;\n\t              }\n\t              error = this.executeCommand(2, COMMAND_MAP.hstem);\n\t              break;\n\t            case 3:\n\t              if (!HINTING_ENABLED) {\n\t                this.stack = [];\n\t                break;\n\t              }\n\t              error = this.executeCommand(2, COMMAND_MAP.vstem);\n\t              break;\n\t            case 4:\n\t              if (this.flexing) {\n\t                if (this.stack.length < 1) {\n\t                  error = true;\n\t                  break;\n\t                }\n\t                var dy = this.stack.pop();\n\t                this.stack.push(0, dy);\n\t                break;\n\t              }\n\t              error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n\t              break;\n\t            case 5:\n\t              error = this.executeCommand(2, COMMAND_MAP.rlineto);\n\t              break;\n\t            case 6:\n\t              error = this.executeCommand(1, COMMAND_MAP.hlineto);\n\t              break;\n\t            case 7:\n\t              error = this.executeCommand(1, COMMAND_MAP.vlineto);\n\t              break;\n\t            case 8:\n\t              error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n\t              break;\n\t            case 9:\n\t              this.stack = [];\n\t              break;\n\t            case 10:\n\t              if (this.stack.length < 1) {\n\t                error = true;\n\t                break;\n\t              }\n\t              subrNumber = this.stack.pop();\n\t              if (!subrs[subrNumber]) {\n\t                error = true;\n\t                break;\n\t              }\n\t              error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n\t              break;\n\t            case 11:\n\t              return error;\n\t            case 13:\n\t              if (this.stack.length < 2) {\n\t                error = true;\n\t                break;\n\t              }\n\t              wx = this.stack.pop();\n\t              sbx = this.stack.pop();\n\t              this.lsb = sbx;\n\t              this.width = wx;\n\t              this.stack.push(wx, sbx);\n\t              error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n\t              break;\n\t            case 14:\n\t              this.output.push(COMMAND_MAP.endchar[0]);\n\t              break;\n\t            case 21:\n\t              if (this.flexing) {\n\t                break;\n\t              }\n\t              error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n\t              break;\n\t            case 22:\n\t              if (this.flexing) {\n\t                this.stack.push(0);\n\t                break;\n\t              }\n\t              error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n\t              break;\n\t            case 30:\n\t              error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n\t              break;\n\t            case 31:\n\t              error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n\t              break;\n\t            case (12 << 8) + 0:\n\t              this.stack = [];\n\t              break;\n\t            case (12 << 8) + 1:\n\t              if (!HINTING_ENABLED) {\n\t                this.stack = [];\n\t                break;\n\t              }\n\t              error = this.executeCommand(2, COMMAND_MAP.vstem);\n\t              break;\n\t            case (12 << 8) + 2:\n\t              if (!HINTING_ENABLED) {\n\t                this.stack = [];\n\t                break;\n\t              }\n\t              error = this.executeCommand(2, COMMAND_MAP.hstem);\n\t              break;\n\t            case (12 << 8) + 6:\n\t              if (seacAnalysisEnabled) {\n\t                this.seac = this.stack.splice(-4, 4);\n\t                error = this.executeCommand(0, COMMAND_MAP.endchar);\n\t              } else {\n\t                error = this.executeCommand(4, COMMAND_MAP.endchar);\n\t              }\n\t              break;\n\t            case (12 << 8) + 7:\n\t              if (this.stack.length < 4) {\n\t                error = true;\n\t                break;\n\t              }\n\t              this.stack.pop();\n\t              wx = this.stack.pop();\n\t              var sby = this.stack.pop();\n\t              sbx = this.stack.pop();\n\t              this.lsb = sbx;\n\t              this.width = wx;\n\t              this.stack.push(wx, sbx, sby);\n\t              error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n\t              break;\n\t            case (12 << 8) + 12:\n\t              if (this.stack.length < 2) {\n\t                error = true;\n\t                break;\n\t              }\n\t              var num2 = this.stack.pop();\n\t              var num1 = this.stack.pop();\n\t              this.stack.push(num1 / num2);\n\t              break;\n\t            case (12 << 8) + 16:\n\t              if (this.stack.length < 2) {\n\t                error = true;\n\t                break;\n\t              }\n\t              subrNumber = this.stack.pop();\n\t              var numArgs = this.stack.pop();\n\t              if (subrNumber === 0 && numArgs === 3) {\n\t                var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n\t                this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n\t                error = this.executeCommand(13, COMMAND_MAP.flex, true);\n\t                this.flexing = false;\n\t                this.stack.push(flexArgs[15], flexArgs[16]);\n\t              } else if (subrNumber === 1 && numArgs === 0) {\n\t                this.flexing = true;\n\t              }\n\t              break;\n\t            case (12 << 8) + 17:\n\t              break;\n\t            case (12 << 8) + 33:\n\t              this.stack = [];\n\t              break;\n\t            default:\n\t              (0, _util.warn)('Unknown type 1 charstring command of \"' + value + '\"');\n\t              break;\n\t          }\n\t          if (error) {\n\t            break;\n\t          }\n\t          continue;\n\t        } else if (value <= 246) {\n\t          value = value - 139;\n\t        } else if (value <= 250) {\n\t          value = (value - 247) * 256 + encoded[++i] + 108;\n\t        } else if (value <= 254) {\n\t          value = -((value - 251) * 256) - encoded[++i] - 108;\n\t        } else {\n\t          value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n\t        }\n\t        this.stack.push(value);\n\t      }\n\t      return error;\n\t    },\n\t    executeCommand: function executeCommand(howManyArgs, command, keepStack) {\n\t      var stackLength = this.stack.length;\n\t      if (howManyArgs > stackLength) {\n\t        return true;\n\t      }\n\t      var start = stackLength - howManyArgs;\n\t      for (var i = start; i < stackLength; i++) {\n\t        var value = this.stack[i];\n\t        if (Number.isInteger(value)) {\n\t          this.output.push(28, value >> 8 & 0xff, value & 0xff);\n\t        } else {\n\t          value = 65536 * value | 0;\n\t          this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\n\t        }\n\t      }\n\t      this.output.push.apply(this.output, command);\n\t      if (keepStack) {\n\t        this.stack.splice(start, howManyArgs);\n\t      } else {\n\t        this.stack.length = 0;\n\t      }\n\t      return false;\n\t    }\n\t  };\n\t  return Type1CharString;\n\t}();\n\tvar Type1Parser = function Type1ParserClosure() {\n\t  var EEXEC_ENCRYPT_KEY = 55665;\n\t  var CHAR_STRS_ENCRYPT_KEY = 4330;\n\t  function isHexDigit(code) {\n\t    return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n\t  }\n\t  function decrypt(data, key, discardNumber) {\n\t    if (discardNumber >= data.length) {\n\t      return new Uint8Array(0);\n\t    }\n\t    var r = key | 0,\n\t        c1 = 52845,\n\t        c2 = 22719,\n\t        i,\n\t        j;\n\t    for (i = 0; i < discardNumber; i++) {\n\t      r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n\t    }\n\t    var count = data.length - discardNumber;\n\t    var decrypted = new Uint8Array(count);\n\t    for (i = discardNumber, j = 0; j < count; i++, j++) {\n\t      var value = data[i];\n\t      decrypted[j] = value ^ r >> 8;\n\t      r = (value + r) * c1 + c2 & (1 << 16) - 1;\n\t    }\n\t    return decrypted;\n\t  }\n\t  function decryptAscii(data, key, discardNumber) {\n\t    var r = key | 0,\n\t        c1 = 52845,\n\t        c2 = 22719;\n\t    var count = data.length,\n\t        maybeLength = count >>> 1;\n\t    var decrypted = new Uint8Array(maybeLength);\n\t    var i, j;\n\t    for (i = 0, j = 0; i < count; i++) {\n\t      var digit1 = data[i];\n\t      if (!isHexDigit(digit1)) {\n\t        continue;\n\t      }\n\t      i++;\n\t      var digit2;\n\t      while (i < count && !isHexDigit(digit2 = data[i])) {\n\t        i++;\n\t      }\n\t      if (i < count) {\n\t        var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n\t        decrypted[j++] = value ^ r >> 8;\n\t        r = (value + r) * c1 + c2 & (1 << 16) - 1;\n\t      }\n\t    }\n\t    return Array.prototype.slice.call(decrypted, discardNumber, j);\n\t  }\n\t  function isSpecial(c) {\n\t    return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\n\t  }\n\t  function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n\t    if (encrypted) {\n\t      var data = stream.getBytes();\n\t      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\n\t      stream = new _stream.Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n\t    }\n\t    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n\t    this.stream = stream;\n\t    this.nextChar();\n\t  }\n\t  Type1Parser.prototype = {\n\t    readNumberArray: function Type1Parser_readNumberArray() {\n\t      this.getToken();\n\t      var array = [];\n\t      while (true) {\n\t        var token = this.getToken();\n\t        if (token === null || token === ']' || token === '}') {\n\t          break;\n\t        }\n\t        array.push(parseFloat(token || 0));\n\t      }\n\t      return array;\n\t    },\n\t    readNumber: function Type1Parser_readNumber() {\n\t      var token = this.getToken();\n\t      return parseFloat(token || 0);\n\t    },\n\t    readInt: function Type1Parser_readInt() {\n\t      var token = this.getToken();\n\t      return parseInt(token || 0, 10) | 0;\n\t    },\n\t    readBoolean: function Type1Parser_readBoolean() {\n\t      var token = this.getToken();\n\t      return token === 'true' ? 1 : 0;\n\t    },\n\t    nextChar: function Type1_nextChar() {\n\t      return this.currentChar = this.stream.getByte();\n\t    },\n\t    getToken: function Type1Parser_getToken() {\n\t      var comment = false;\n\t      var ch = this.currentChar;\n\t      while (true) {\n\t        if (ch === -1) {\n\t          return null;\n\t        }\n\t        if (comment) {\n\t          if (ch === 0x0A || ch === 0x0D) {\n\t            comment = false;\n\t          }\n\t        } else if (ch === 0x25) {\n\t          comment = true;\n\t        } else if (!(0, _util.isSpace)(ch)) {\n\t          break;\n\t        }\n\t        ch = this.nextChar();\n\t      }\n\t      if (isSpecial(ch)) {\n\t        this.nextChar();\n\t        return String.fromCharCode(ch);\n\t      }\n\t      var token = '';\n\t      do {\n\t        token += String.fromCharCode(ch);\n\t        ch = this.nextChar();\n\t      } while (ch >= 0 && !(0, _util.isSpace)(ch) && !isSpecial(ch));\n\t      return token;\n\t    },\n\t    readCharStrings: function Type1Parser_readCharStrings(bytes, lenIV) {\n\t      if (lenIV === -1) {\n\t        return bytes;\n\t      }\n\t      return decrypt(bytes, CHAR_STRS_ENCRYPT_KEY, lenIV);\n\t    },\n\t    extractFontProgram: function Type1Parser_extractFontProgram() {\n\t      var stream = this.stream;\n\t      var subrs = [],\n\t          charstrings = [];\n\t      var privateData = Object.create(null);\n\t      privateData['lenIV'] = 4;\n\t      var program = {\n\t        subrs: [],\n\t        charstrings: [],\n\t        properties: { 'privateData': privateData }\n\t      };\n\t      var token, length, data, lenIV, encoded;\n\t      while ((token = this.getToken()) !== null) {\n\t        if (token !== '/') {\n\t          continue;\n\t        }\n\t        token = this.getToken();\n\t        switch (token) {\n\t          case 'CharStrings':\n\t            this.getToken();\n\t            this.getToken();\n\t            this.getToken();\n\t            this.getToken();\n\t            while (true) {\n\t              token = this.getToken();\n\t              if (token === null || token === 'end') {\n\t                break;\n\t              }\n\t              if (token !== '/') {\n\t                continue;\n\t              }\n\t              var glyph = this.getToken();\n\t              length = this.readInt();\n\t              this.getToken();\n\t              data = stream.makeSubStream(stream.pos, length);\n\t              lenIV = program.properties.privateData['lenIV'];\n\t              encoded = this.readCharStrings(data.getBytes(), lenIV);\n\t              stream.skip(length);\n\t              this.nextChar();\n\t              token = this.getToken();\n\t              if (token === 'noaccess') {\n\t                this.getToken();\n\t              }\n\t              charstrings.push({\n\t                glyph: glyph,\n\t                encoded: encoded\n\t              });\n\t            }\n\t            break;\n\t          case 'Subrs':\n\t            this.readInt();\n\t            this.getToken();\n\t            while ((token = this.getToken()) === 'dup') {\n\t              var index = this.readInt();\n\t              length = this.readInt();\n\t              this.getToken();\n\t              data = stream.makeSubStream(stream.pos, length);\n\t              lenIV = program.properties.privateData['lenIV'];\n\t              encoded = this.readCharStrings(data.getBytes(), lenIV);\n\t              stream.skip(length);\n\t              this.nextChar();\n\t              token = this.getToken();\n\t              if (token === 'noaccess') {\n\t                this.getToken();\n\t              }\n\t              subrs[index] = encoded;\n\t            }\n\t            break;\n\t          case 'BlueValues':\n\t          case 'OtherBlues':\n\t          case 'FamilyBlues':\n\t          case 'FamilyOtherBlues':\n\t            var blueArray = this.readNumberArray();\n\t            if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n\t              program.properties.privateData[token] = blueArray;\n\t            }\n\t            break;\n\t          case 'StemSnapH':\n\t          case 'StemSnapV':\n\t            program.properties.privateData[token] = this.readNumberArray();\n\t            break;\n\t          case 'StdHW':\n\t          case 'StdVW':\n\t            program.properties.privateData[token] = this.readNumberArray()[0];\n\t            break;\n\t          case 'BlueShift':\n\t          case 'lenIV':\n\t          case 'BlueFuzz':\n\t          case 'BlueScale':\n\t          case 'LanguageGroup':\n\t          case 'ExpansionFactor':\n\t            program.properties.privateData[token] = this.readNumber();\n\t            break;\n\t          case 'ForceBold':\n\t            program.properties.privateData[token] = this.readBoolean();\n\t            break;\n\t        }\n\t      }\n\t      for (var i = 0; i < charstrings.length; i++) {\n\t        glyph = charstrings[i].glyph;\n\t        encoded = charstrings[i].encoded;\n\t        var charString = new Type1CharString();\n\t        var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n\t        var output = charString.output;\n\t        if (error) {\n\t          output = [14];\n\t        }\n\t        program.charstrings.push({\n\t          glyphName: glyph,\n\t          charstring: output,\n\t          width: charString.width,\n\t          lsb: charString.lsb,\n\t          seac: charString.seac\n\t        });\n\t      }\n\t      return program;\n\t    },\n\t    extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n\t      var token;\n\t      while ((token = this.getToken()) !== null) {\n\t        if (token !== '/') {\n\t          continue;\n\t        }\n\t        token = this.getToken();\n\t        switch (token) {\n\t          case 'FontMatrix':\n\t            var matrix = this.readNumberArray();\n\t            properties.fontMatrix = matrix;\n\t            break;\n\t          case 'Encoding':\n\t            var encodingArg = this.getToken();\n\t            var encoding;\n\t            if (!/^\\d+$/.test(encodingArg)) {\n\t              encoding = (0, _encodings.getEncoding)(encodingArg);\n\t            } else {\n\t              encoding = [];\n\t              var size = parseInt(encodingArg, 10) | 0;\n\t              this.getToken();\n\t              for (var j = 0; j < size; j++) {\n\t                token = this.getToken();\n\t                while (token !== 'dup' && token !== 'def') {\n\t                  token = this.getToken();\n\t                  if (token === null) {\n\t                    return;\n\t                  }\n\t                }\n\t                if (token === 'def') {\n\t                  break;\n\t                }\n\t                var index = this.readInt();\n\t                this.getToken();\n\t                var glyph = this.getToken();\n\t                encoding[index] = glyph;\n\t                this.getToken();\n\t              }\n\t            }\n\t            properties.builtInEncoding = encoding;\n\t            break;\n\t          case 'FontBBox':\n\t            var fontBBox = this.readNumberArray();\n\t            properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n\t            properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n\t            properties.ascentScaled = true;\n\t            break;\n\t        }\n\t      }\n\t    }\n\t  };\n\t  return Type1Parser;\n\t}();\n\texports.Type1Parser = Type1Parser;\n\t\n\t/***/ }),\n\t/* 138 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.getTilingPatternIR = exports.Pattern = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _colorspace = __w_pdfjs_require__(26);\n\t\n\tvar _primitives = __w_pdfjs_require__(2);\n\t\n\tvar ShadingType = {\n\t  FUNCTION_BASED: 1,\n\t  AXIAL: 2,\n\t  RADIAL: 3,\n\t  FREE_FORM_MESH: 4,\n\t  LATTICE_FORM_MESH: 5,\n\t  COONS_PATCH_MESH: 6,\n\t  TENSOR_PATCH_MESH: 7\n\t};\n\tvar Pattern = function PatternClosure() {\n\t  function Pattern() {\n\t    throw new Error('should not call Pattern constructor');\n\t  }\n\t  Pattern.prototype = {\n\t    getPattern: function Pattern_getPattern(ctx) {\n\t      throw new Error('Should not call Pattern.getStyle: ' + ctx);\n\t    }\n\t  };\n\t  Pattern.parseShading = function (shading, matrix, xref, res, handler, pdfFunctionFactory) {\n\t    var dict = (0, _primitives.isStream)(shading) ? shading.dict : shading;\n\t    var type = dict.get('ShadingType');\n\t    try {\n\t      switch (type) {\n\t        case ShadingType.AXIAL:\n\t        case ShadingType.RADIAL:\n\t          return new Shadings.RadialAxial(dict, matrix, xref, res, pdfFunctionFactory);\n\t        case ShadingType.FREE_FORM_MESH:\n\t        case ShadingType.LATTICE_FORM_MESH:\n\t        case ShadingType.COONS_PATCH_MESH:\n\t        case ShadingType.TENSOR_PATCH_MESH:\n\t          return new Shadings.Mesh(shading, matrix, xref, res, pdfFunctionFactory);\n\t        default:\n\t          throw new _util.FormatError('Unsupported ShadingType: ' + type);\n\t      }\n\t    } catch (ex) {\n\t      if (ex instanceof _util.MissingDataException) {\n\t        throw ex;\n\t      }\n\t      handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.shadingPattern });\n\t      (0, _util.warn)(ex);\n\t      return new Shadings.Dummy();\n\t    }\n\t  };\n\t  return Pattern;\n\t}();\n\tvar Shadings = {};\n\tShadings.SMALL_NUMBER = 1e-6;\n\tShadings.RadialAxial = function RadialAxialClosure() {\n\t  function RadialAxial(dict, matrix, xref, res, pdfFunctionFactory) {\n\t    this.matrix = matrix;\n\t    this.coordsArr = dict.getArray('Coords');\n\t    this.shadingType = dict.get('ShadingType');\n\t    this.type = 'Pattern';\n\t    var cs = dict.get('ColorSpace', 'CS');\n\t    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n\t    this.cs = cs;\n\t    var t0 = 0.0,\n\t        t1 = 1.0;\n\t    if (dict.has('Domain')) {\n\t      var domainArr = dict.getArray('Domain');\n\t      t0 = domainArr[0];\n\t      t1 = domainArr[1];\n\t    }\n\t    var extendStart = false,\n\t        extendEnd = false;\n\t    if (dict.has('Extend')) {\n\t      var extendArr = dict.getArray('Extend');\n\t      extendStart = extendArr[0];\n\t      extendEnd = extendArr[1];\n\t    }\n\t    if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n\t      var x1 = this.coordsArr[0];\n\t      var y1 = this.coordsArr[1];\n\t      var r1 = this.coordsArr[2];\n\t      var x2 = this.coordsArr[3];\n\t      var y2 = this.coordsArr[4];\n\t      var r2 = this.coordsArr[5];\n\t      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n\t      if (r1 <= r2 + distance && r2 <= r1 + distance) {\n\t        (0, _util.warn)('Unsupported radial gradient.');\n\t      }\n\t    }\n\t    this.extendStart = extendStart;\n\t    this.extendEnd = extendEnd;\n\t    var fnObj = dict.get('Function');\n\t    var fn = pdfFunctionFactory.createFromArray(fnObj);\n\t    var diff = t1 - t0;\n\t    var step = diff / 10;\n\t    var colorStops = this.colorStops = [];\n\t    if (t0 >= t1 || step <= 0) {\n\t      (0, _util.info)('Bad shading domain.');\n\t      return;\n\t    }\n\t    var color = new Float32Array(cs.numComps),\n\t        ratio = new Float32Array(1);\n\t    var rgbColor;\n\t    for (var i = t0; i <= t1; i += step) {\n\t      ratio[0] = i;\n\t      fn(ratio, 0, color, 0);\n\t      rgbColor = cs.getRgb(color, 0);\n\t      var cssColor = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n\t      colorStops.push([(i - t0) / diff, cssColor]);\n\t    }\n\t    var background = 'transparent';\n\t    if (dict.has('Background')) {\n\t      rgbColor = cs.getRgb(dict.get('Background'), 0);\n\t      background = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n\t    }\n\t    if (!extendStart) {\n\t      colorStops.unshift([0, background]);\n\t      colorStops[1][0] += Shadings.SMALL_NUMBER;\n\t    }\n\t    if (!extendEnd) {\n\t      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n\t      colorStops.push([1, background]);\n\t    }\n\t    this.colorStops = colorStops;\n\t  }\n\t  RadialAxial.prototype = {\n\t    getIR: function RadialAxial_getIR() {\n\t      var coordsArr = this.coordsArr;\n\t      var shadingType = this.shadingType;\n\t      var type, p0, p1, r0, r1;\n\t      if (shadingType === ShadingType.AXIAL) {\n\t        p0 = [coordsArr[0], coordsArr[1]];\n\t        p1 = [coordsArr[2], coordsArr[3]];\n\t        r0 = null;\n\t        r1 = null;\n\t        type = 'axial';\n\t      } else if (shadingType === ShadingType.RADIAL) {\n\t        p0 = [coordsArr[0], coordsArr[1]];\n\t        p1 = [coordsArr[3], coordsArr[4]];\n\t        r0 = coordsArr[2];\n\t        r1 = coordsArr[5];\n\t        type = 'radial';\n\t      } else {\n\t        (0, _util.unreachable)('getPattern type unknown: ' + shadingType);\n\t      }\n\t      var matrix = this.matrix;\n\t      if (matrix) {\n\t        p0 = _util.Util.applyTransform(p0, matrix);\n\t        p1 = _util.Util.applyTransform(p1, matrix);\n\t        if (shadingType === ShadingType.RADIAL) {\n\t          var scale = _util.Util.singularValueDecompose2dScale(matrix);\n\t          r0 *= scale[0];\n\t          r1 *= scale[1];\n\t        }\n\t      }\n\t      return ['RadialAxial', type, this.colorStops, p0, p1, r0, r1];\n\t    }\n\t  };\n\t  return RadialAxial;\n\t}();\n\tShadings.Mesh = function MeshClosure() {\n\t  function MeshStreamReader(stream, context) {\n\t    this.stream = stream;\n\t    this.context = context;\n\t    this.buffer = 0;\n\t    this.bufferLength = 0;\n\t    var numComps = context.numComps;\n\t    this.tmpCompsBuf = new Float32Array(numComps);\n\t    var csNumComps = context.colorSpace.numComps;\n\t    this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n\t  }\n\t  MeshStreamReader.prototype = {\n\t    get hasData() {\n\t      if (this.stream.end) {\n\t        return this.stream.pos < this.stream.end;\n\t      }\n\t      if (this.bufferLength > 0) {\n\t        return true;\n\t      }\n\t      var nextByte = this.stream.getByte();\n\t      if (nextByte < 0) {\n\t        return false;\n\t      }\n\t      this.buffer = nextByte;\n\t      this.bufferLength = 8;\n\t      return true;\n\t    },\n\t    readBits: function MeshStreamReader_readBits(n) {\n\t      var buffer = this.buffer;\n\t      var bufferLength = this.bufferLength;\n\t      if (n === 32) {\n\t        if (bufferLength === 0) {\n\t          return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n\t        }\n\t        buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n\t        var nextByte = this.stream.getByte();\n\t        this.buffer = nextByte & (1 << bufferLength) - 1;\n\t        return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\n\t      }\n\t      if (n === 8 && bufferLength === 0) {\n\t        return this.stream.getByte();\n\t      }\n\t      while (bufferLength < n) {\n\t        buffer = buffer << 8 | this.stream.getByte();\n\t        bufferLength += 8;\n\t      }\n\t      bufferLength -= n;\n\t      this.bufferLength = bufferLength;\n\t      this.buffer = buffer & (1 << bufferLength) - 1;\n\t      return buffer >> bufferLength;\n\t    },\n\t    align: function MeshStreamReader_align() {\n\t      this.buffer = 0;\n\t      this.bufferLength = 0;\n\t    },\n\t    readFlag: function MeshStreamReader_readFlag() {\n\t      return this.readBits(this.context.bitsPerFlag);\n\t    },\n\t    readCoordinate: function MeshStreamReader_readCoordinate() {\n\t      var bitsPerCoordinate = this.context.bitsPerCoordinate;\n\t      var xi = this.readBits(bitsPerCoordinate);\n\t      var yi = this.readBits(bitsPerCoordinate);\n\t      var decode = this.context.decode;\n\t      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n\t      return [xi * scale * (decode[1] - decode[0]) + decode[0], yi * scale * (decode[3] - decode[2]) + decode[2]];\n\t    },\n\t    readComponents: function MeshStreamReader_readComponents() {\n\t      var numComps = this.context.numComps;\n\t      var bitsPerComponent = this.context.bitsPerComponent;\n\t      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n\t      var decode = this.context.decode;\n\t      var components = this.tmpCompsBuf;\n\t      for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n\t        var ci = this.readBits(bitsPerComponent);\n\t        components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n\t      }\n\t      var color = this.tmpCsCompsBuf;\n\t      if (this.context.colorFn) {\n\t        this.context.colorFn(components, 0, color, 0);\n\t      }\n\t      return this.context.colorSpace.getRgb(color, 0);\n\t    }\n\t  };\n\t  function decodeType4Shading(mesh, reader) {\n\t    var coords = mesh.coords;\n\t    var colors = mesh.colors;\n\t    var operators = [];\n\t    var ps = [];\n\t    var verticesLeft = 0;\n\t    while (reader.hasData) {\n\t      var f = reader.readFlag();\n\t      var coord = reader.readCoordinate();\n\t      var color = reader.readComponents();\n\t      if (verticesLeft === 0) {\n\t        if (!(0 <= f && f <= 2)) {\n\t          throw new _util.FormatError('Unknown type4 flag');\n\t        }\n\t        switch (f) {\n\t          case 0:\n\t            verticesLeft = 3;\n\t            break;\n\t          case 1:\n\t            ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n\t            verticesLeft = 1;\n\t            break;\n\t          case 2:\n\t            ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n\t            verticesLeft = 1;\n\t            break;\n\t        }\n\t        operators.push(f);\n\t      }\n\t      ps.push(coords.length);\n\t      coords.push(coord);\n\t      colors.push(color);\n\t      verticesLeft--;\n\t      reader.align();\n\t    }\n\t    mesh.figures.push({\n\t      type: 'triangles',\n\t      coords: new Int32Array(ps),\n\t      colors: new Int32Array(ps)\n\t    });\n\t  }\n\t  function decodeType5Shading(mesh, reader, verticesPerRow) {\n\t    var coords = mesh.coords;\n\t    var colors = mesh.colors;\n\t    var ps = [];\n\t    while (reader.hasData) {\n\t      var coord = reader.readCoordinate();\n\t      var color = reader.readComponents();\n\t      ps.push(coords.length);\n\t      coords.push(coord);\n\t      colors.push(color);\n\t    }\n\t    mesh.figures.push({\n\t      type: 'lattice',\n\t      coords: new Int32Array(ps),\n\t      colors: new Int32Array(ps),\n\t      verticesPerRow: verticesPerRow\n\t    });\n\t  }\n\t  var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n\t  var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n\t  var TRIANGLE_DENSITY = 20;\n\t  var getB = function getBClosure() {\n\t    function buildB(count) {\n\t      var lut = [];\n\t      for (var i = 0; i <= count; i++) {\n\t        var t = i / count,\n\t            t_ = 1 - t;\n\t        lut.push(new Float32Array([t_ * t_ * t_, 3 * t * t_ * t_, 3 * t * t * t_, t * t * t]));\n\t      }\n\t      return lut;\n\t    }\n\t    var cache = [];\n\t    return function getB(count) {\n\t      if (!cache[count]) {\n\t        cache[count] = buildB(count);\n\t      }\n\t      return cache[count];\n\t    };\n\t  }();\n\t  function buildFigureFromPatch(mesh, index) {\n\t    var figure = mesh.figures[index];\n\t    (0, _util.assert)(figure.type === 'patch', 'Unexpected patch mesh figure');\n\t    var coords = mesh.coords,\n\t        colors = mesh.colors;\n\t    var pi = figure.coords;\n\t    var ci = figure.colors;\n\t    var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n\t    var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n\t    var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n\t    var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n\t    var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n\t    splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n\t    var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n\t    splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n\t    var verticesPerRow = splitXBy + 1;\n\t    var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n\t    var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n\t    var k = 0;\n\t    var cl = new Uint8Array(3),\n\t        cr = new Uint8Array(3);\n\t    var c0 = colors[ci[0]],\n\t        c1 = colors[ci[1]],\n\t        c2 = colors[ci[2]],\n\t        c3 = colors[ci[3]];\n\t    var bRow = getB(splitYBy),\n\t        bCol = getB(splitXBy);\n\t    for (var row = 0; row <= splitYBy; row++) {\n\t      cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n\t      cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n\t      cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n\t      cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n\t      cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n\t      cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n\t      for (var col = 0; col <= splitXBy; col++, k++) {\n\t        if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n\t          continue;\n\t        }\n\t        var x = 0,\n\t            y = 0;\n\t        var q = 0;\n\t        for (var i = 0; i <= 3; i++) {\n\t          for (var j = 0; j <= 3; j++, q++) {\n\t            var m = bRow[row][i] * bCol[col][j];\n\t            x += coords[pi[q]][0] * m;\n\t            y += coords[pi[q]][1] * m;\n\t          }\n\t        }\n\t        figureCoords[k] = coords.length;\n\t        coords.push([x, y]);\n\t        figureColors[k] = colors.length;\n\t        var newColor = new Uint8Array(3);\n\t        newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n\t        newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n\t        newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n\t        colors.push(newColor);\n\t      }\n\t    }\n\t    figureCoords[0] = pi[0];\n\t    figureColors[0] = ci[0];\n\t    figureCoords[splitXBy] = pi[3];\n\t    figureColors[splitXBy] = ci[1];\n\t    figureCoords[verticesPerRow * splitYBy] = pi[12];\n\t    figureColors[verticesPerRow * splitYBy] = ci[2];\n\t    figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n\t    figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n\t    mesh.figures[index] = {\n\t      type: 'lattice',\n\t      coords: figureCoords,\n\t      colors: figureColors,\n\t      verticesPerRow: verticesPerRow\n\t    };\n\t  }\n\t  function decodeType6Shading(mesh, reader) {\n\t    var coords = mesh.coords;\n\t    var colors = mesh.colors;\n\t    var ps = new Int32Array(16);\n\t    var cs = new Int32Array(4);\n\t    while (reader.hasData) {\n\t      var f = reader.readFlag();\n\t      if (!(0 <= f && f <= 3)) {\n\t        throw new _util.FormatError('Unknown type6 flag');\n\t      }\n\t      var i, ii;\n\t      var pi = coords.length;\n\t      for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n\t        coords.push(reader.readCoordinate());\n\t      }\n\t      var ci = colors.length;\n\t      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n\t        colors.push(reader.readComponents());\n\t      }\n\t      var tmp1, tmp2, tmp3, tmp4;\n\t      switch (f) {\n\t        case 0:\n\t          ps[12] = pi + 3;\n\t          ps[13] = pi + 4;\n\t          ps[14] = pi + 5;\n\t          ps[15] = pi + 6;\n\t          ps[8] = pi + 2;\n\t          ps[11] = pi + 7;\n\t          ps[4] = pi + 1;\n\t          ps[7] = pi + 8;\n\t          ps[0] = pi;\n\t          ps[1] = pi + 11;\n\t          ps[2] = pi + 10;\n\t          ps[3] = pi + 9;\n\t          cs[2] = ci + 1;\n\t          cs[3] = ci + 2;\n\t          cs[0] = ci;\n\t          cs[1] = ci + 3;\n\t          break;\n\t        case 1:\n\t          tmp1 = ps[12];\n\t          tmp2 = ps[13];\n\t          tmp3 = ps[14];\n\t          tmp4 = ps[15];\n\t          ps[12] = tmp4;\n\t          ps[13] = pi + 0;\n\t          ps[14] = pi + 1;\n\t          ps[15] = pi + 2;\n\t          ps[8] = tmp3;\n\t          ps[11] = pi + 3;\n\t          ps[4] = tmp2;\n\t          ps[7] = pi + 4;\n\t          ps[0] = tmp1;\n\t          ps[1] = pi + 7;\n\t          ps[2] = pi + 6;\n\t          ps[3] = pi + 5;\n\t          tmp1 = cs[2];\n\t          tmp2 = cs[3];\n\t          cs[2] = tmp2;\n\t          cs[3] = ci;\n\t          cs[0] = tmp1;\n\t          cs[1] = ci + 1;\n\t          break;\n\t        case 2:\n\t          tmp1 = ps[15];\n\t          tmp2 = ps[11];\n\t          ps[12] = ps[3];\n\t          ps[13] = pi + 0;\n\t          ps[14] = pi + 1;\n\t          ps[15] = pi + 2;\n\t          ps[8] = ps[7];\n\t          ps[11] = pi + 3;\n\t          ps[4] = tmp2;\n\t          ps[7] = pi + 4;\n\t          ps[0] = tmp1;\n\t          ps[1] = pi + 7;\n\t          ps[2] = pi + 6;\n\t          ps[3] = pi + 5;\n\t          tmp1 = cs[3];\n\t          cs[2] = cs[1];\n\t          cs[3] = ci;\n\t          cs[0] = tmp1;\n\t          cs[1] = ci + 1;\n\t          break;\n\t        case 3:\n\t          ps[12] = ps[0];\n\t          ps[13] = pi + 0;\n\t          ps[14] = pi + 1;\n\t          ps[15] = pi + 2;\n\t          ps[8] = ps[1];\n\t          ps[11] = pi + 3;\n\t          ps[4] = ps[2];\n\t          ps[7] = pi + 4;\n\t          ps[0] = ps[3];\n\t          ps[1] = pi + 7;\n\t          ps[2] = pi + 6;\n\t          ps[3] = pi + 5;\n\t          cs[2] = cs[0];\n\t          cs[3] = ci;\n\t          cs[0] = cs[1];\n\t          cs[1] = ci + 1;\n\t          break;\n\t      }\n\t      ps[5] = coords.length;\n\t      coords.push([(-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9, (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9]);\n\t      ps[6] = coords.length;\n\t      coords.push([(-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9, (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9]);\n\t      ps[9] = coords.length;\n\t      coords.push([(-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9, (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9]);\n\t      ps[10] = coords.length;\n\t      coords.push([(-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9, (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9]);\n\t      mesh.figures.push({\n\t        type: 'patch',\n\t        coords: new Int32Array(ps),\n\t        colors: new Int32Array(cs)\n\t      });\n\t    }\n\t  }\n\t  function decodeType7Shading(mesh, reader) {\n\t    var coords = mesh.coords;\n\t    var colors = mesh.colors;\n\t    var ps = new Int32Array(16);\n\t    var cs = new Int32Array(4);\n\t    while (reader.hasData) {\n\t      var f = reader.readFlag();\n\t      if (!(0 <= f && f <= 3)) {\n\t        throw new _util.FormatError('Unknown type7 flag');\n\t      }\n\t      var i, ii;\n\t      var pi = coords.length;\n\t      for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n\t        coords.push(reader.readCoordinate());\n\t      }\n\t      var ci = colors.length;\n\t      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n\t        colors.push(reader.readComponents());\n\t      }\n\t      var tmp1, tmp2, tmp3, tmp4;\n\t      switch (f) {\n\t        case 0:\n\t          ps[12] = pi + 3;\n\t          ps[13] = pi + 4;\n\t          ps[14] = pi + 5;\n\t          ps[15] = pi + 6;\n\t          ps[8] = pi + 2;\n\t          ps[9] = pi + 13;\n\t          ps[10] = pi + 14;\n\t          ps[11] = pi + 7;\n\t          ps[4] = pi + 1;\n\t          ps[5] = pi + 12;\n\t          ps[6] = pi + 15;\n\t          ps[7] = pi + 8;\n\t          ps[0] = pi;\n\t          ps[1] = pi + 11;\n\t          ps[2] = pi + 10;\n\t          ps[3] = pi + 9;\n\t          cs[2] = ci + 1;\n\t          cs[3] = ci + 2;\n\t          cs[0] = ci;\n\t          cs[1] = ci + 3;\n\t          break;\n\t        case 1:\n\t          tmp1 = ps[12];\n\t          tmp2 = ps[13];\n\t          tmp3 = ps[14];\n\t          tmp4 = ps[15];\n\t          ps[12] = tmp4;\n\t          ps[13] = pi + 0;\n\t          ps[14] = pi + 1;\n\t          ps[15] = pi + 2;\n\t          ps[8] = tmp3;\n\t          ps[9] = pi + 9;\n\t          ps[10] = pi + 10;\n\t          ps[11] = pi + 3;\n\t          ps[4] = tmp2;\n\t          ps[5] = pi + 8;\n\t          ps[6] = pi + 11;\n\t          ps[7] = pi + 4;\n\t          ps[0] = tmp1;\n\t          ps[1] = pi + 7;\n\t          ps[2] = pi + 6;\n\t          ps[3] = pi + 5;\n\t          tmp1 = cs[2];\n\t          tmp2 = cs[3];\n\t          cs[2] = tmp2;\n\t          cs[3] = ci;\n\t          cs[0] = tmp1;\n\t          cs[1] = ci + 1;\n\t          break;\n\t        case 2:\n\t          tmp1 = ps[15];\n\t          tmp2 = ps[11];\n\t          ps[12] = ps[3];\n\t          ps[13] = pi + 0;\n\t          ps[14] = pi + 1;\n\t          ps[15] = pi + 2;\n\t          ps[8] = ps[7];\n\t          ps[9] = pi + 9;\n\t          ps[10] = pi + 10;\n\t          ps[11] = pi + 3;\n\t          ps[4] = tmp2;\n\t          ps[5] = pi + 8;\n\t          ps[6] = pi + 11;\n\t          ps[7] = pi + 4;\n\t          ps[0] = tmp1;\n\t          ps[1] = pi + 7;\n\t          ps[2] = pi + 6;\n\t          ps[3] = pi + 5;\n\t          tmp1 = cs[3];\n\t          cs[2] = cs[1];\n\t          cs[3] = ci;\n\t          cs[0] = tmp1;\n\t          cs[1] = ci + 1;\n\t          break;\n\t        case 3:\n\t          ps[12] = ps[0];\n\t          ps[13] = pi + 0;\n\t          ps[14] = pi + 1;\n\t          ps[15] = pi + 2;\n\t          ps[8] = ps[1];\n\t          ps[9] = pi + 9;\n\t          ps[10] = pi + 10;\n\t          ps[11] = pi + 3;\n\t          ps[4] = ps[2];\n\t          ps[5] = pi + 8;\n\t          ps[6] = pi + 11;\n\t          ps[7] = pi + 4;\n\t          ps[0] = ps[3];\n\t          ps[1] = pi + 7;\n\t          ps[2] = pi + 6;\n\t          ps[3] = pi + 5;\n\t          cs[2] = cs[0];\n\t          cs[3] = ci;\n\t          cs[0] = cs[1];\n\t          cs[1] = ci + 1;\n\t          break;\n\t      }\n\t      mesh.figures.push({\n\t        type: 'patch',\n\t        coords: new Int32Array(ps),\n\t        colors: new Int32Array(cs)\n\t      });\n\t    }\n\t  }\n\t  function updateBounds(mesh) {\n\t    var minX = mesh.coords[0][0],\n\t        minY = mesh.coords[0][1],\n\t        maxX = minX,\n\t        maxY = minY;\n\t    for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n\t      var x = mesh.coords[i][0],\n\t          y = mesh.coords[i][1];\n\t      minX = minX > x ? x : minX;\n\t      minY = minY > y ? y : minY;\n\t      maxX = maxX < x ? x : maxX;\n\t      maxY = maxY < y ? y : maxY;\n\t    }\n\t    mesh.bounds = [minX, minY, maxX, maxY];\n\t  }\n\t  function packData(mesh) {\n\t    var i, ii, j, jj;\n\t    var coords = mesh.coords;\n\t    var coordsPacked = new Float32Array(coords.length * 2);\n\t    for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n\t      var xy = coords[i];\n\t      coordsPacked[j++] = xy[0];\n\t      coordsPacked[j++] = xy[1];\n\t    }\n\t    mesh.coords = coordsPacked;\n\t    var colors = mesh.colors;\n\t    var colorsPacked = new Uint8Array(colors.length * 3);\n\t    for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n\t      var c = colors[i];\n\t      colorsPacked[j++] = c[0];\n\t      colorsPacked[j++] = c[1];\n\t      colorsPacked[j++] = c[2];\n\t    }\n\t    mesh.colors = colorsPacked;\n\t    var figures = mesh.figures;\n\t    for (i = 0, ii = figures.length; i < ii; i++) {\n\t      var figure = figures[i],\n\t          ps = figure.coords,\n\t          cs = figure.colors;\n\t      for (j = 0, jj = ps.length; j < jj; j++) {\n\t        ps[j] *= 2;\n\t        cs[j] *= 3;\n\t      }\n\t    }\n\t  }\n\t  function Mesh(stream, matrix, xref, res, pdfFunctionFactory) {\n\t    if (!(0, _primitives.isStream)(stream)) {\n\t      throw new _util.FormatError('Mesh data is not a stream');\n\t    }\n\t    var dict = stream.dict;\n\t    this.matrix = matrix;\n\t    this.shadingType = dict.get('ShadingType');\n\t    this.type = 'Pattern';\n\t    this.bbox = dict.getArray('BBox');\n\t    var cs = dict.get('ColorSpace', 'CS');\n\t    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n\t    this.cs = cs;\n\t    this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\n\t    var fnObj = dict.get('Function');\n\t    var fn = fnObj ? pdfFunctionFactory.createFromArray(fnObj) : null;\n\t    this.coords = [];\n\t    this.colors = [];\n\t    this.figures = [];\n\t    var decodeContext = {\n\t      bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n\t      bitsPerComponent: dict.get('BitsPerComponent'),\n\t      bitsPerFlag: dict.get('BitsPerFlag'),\n\t      decode: dict.getArray('Decode'),\n\t      colorFn: fn,\n\t      colorSpace: cs,\n\t      numComps: fn ? 1 : cs.numComps\n\t    };\n\t    var reader = new MeshStreamReader(stream, decodeContext);\n\t    var patchMesh = false;\n\t    switch (this.shadingType) {\n\t      case ShadingType.FREE_FORM_MESH:\n\t        decodeType4Shading(this, reader);\n\t        break;\n\t      case ShadingType.LATTICE_FORM_MESH:\n\t        var verticesPerRow = dict.get('VerticesPerRow') | 0;\n\t        if (verticesPerRow < 2) {\n\t          throw new _util.FormatError('Invalid VerticesPerRow');\n\t        }\n\t        decodeType5Shading(this, reader, verticesPerRow);\n\t        break;\n\t      case ShadingType.COONS_PATCH_MESH:\n\t        decodeType6Shading(this, reader);\n\t        patchMesh = true;\n\t        break;\n\t      case ShadingType.TENSOR_PATCH_MESH:\n\t        decodeType7Shading(this, reader);\n\t        patchMesh = true;\n\t        break;\n\t      default:\n\t        (0, _util.unreachable)('Unsupported mesh type.');\n\t        break;\n\t    }\n\t    if (patchMesh) {\n\t      updateBounds(this);\n\t      for (var i = 0, ii = this.figures.length; i < ii; i++) {\n\t        buildFigureFromPatch(this, i);\n\t      }\n\t    }\n\t    updateBounds(this);\n\t    packData(this);\n\t  }\n\t  Mesh.prototype = {\n\t    getIR: function Mesh_getIR() {\n\t      return ['Mesh', this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.matrix, this.bbox, this.background];\n\t    }\n\t  };\n\t  return Mesh;\n\t}();\n\tShadings.Dummy = function DummyClosure() {\n\t  function Dummy() {\n\t    this.type = 'Pattern';\n\t  }\n\t  Dummy.prototype = {\n\t    getIR: function Dummy_getIR() {\n\t      return ['Dummy'];\n\t    }\n\t  };\n\t  return Dummy;\n\t}();\n\tfunction getTilingPatternIR(operatorList, dict, args) {\n\t  var matrix = dict.getArray('Matrix');\n\t  var bbox = _util.Util.normalizeRect(dict.getArray('BBox'));\n\t  var xstep = dict.get('XStep');\n\t  var ystep = dict.get('YStep');\n\t  var paintType = dict.get('PaintType');\n\t  var tilingType = dict.get('TilingType');\n\t  if (bbox[2] - bbox[0] === 0 || bbox[3] - bbox[1] === 0) {\n\t    throw new _util.FormatError('Invalid getTilingPatternIR /BBox array: [' + bbox + '].');\n\t  }\n\t  return ['TilingPattern', args, operatorList, matrix, bbox, xstep, ystep, paintType, tilingType];\n\t}\n\texports.Pattern = Pattern;\n\texports.getTilingPatternIR = getTilingPatternIR;\n\t\n\t/***/ }),\n\t/* 139 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.bidi = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar baseTypes = ['BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'S', 'B', 'S', 'WS', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'B', 'B', 'S', 'WS', 'ON', 'ON', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'ON', 'ES', 'CS', 'ES', 'CS', 'CS', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'CS', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'CS', 'ON', 'ET', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'L', 'ON', 'ON', 'BN', 'ON', 'ON', 'ET', 'ET', 'EN', 'EN', 'ON', 'L', 'ON', 'ON', 'ON', 'EN', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L'];\n\tvar arabicTypes = ['AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ON', 'ON', 'AL', 'ET', 'ET', 'AL', 'CS', 'AL', 'ON', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', '', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ET', 'AN', 'AN', 'AL', 'AL', 'AL', 'NSM', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'NSM', 'NSM', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL'];\n\tfunction isOdd(i) {\n\t  return (i & 1) !== 0;\n\t}\n\tfunction isEven(i) {\n\t  return (i & 1) === 0;\n\t}\n\tfunction findUnequal(arr, start, value) {\n\t  for (var j = start, jj = arr.length; j < jj; ++j) {\n\t    if (arr[j] !== value) {\n\t      return j;\n\t    }\n\t  }\n\t  return j;\n\t}\n\tfunction setValues(arr, start, end, value) {\n\t  for (var j = start; j < end; ++j) {\n\t    arr[j] = value;\n\t  }\n\t}\n\tfunction reverseValues(arr, start, end) {\n\t  for (var i = start, j = end - 1; i < j; ++i, --j) {\n\t    var temp = arr[i];\n\t    arr[i] = arr[j];\n\t    arr[j] = temp;\n\t  }\n\t}\n\tfunction createBidiText(str, isLTR, vertical) {\n\t  return {\n\t    str: str,\n\t    dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\n\t  };\n\t}\n\tvar chars = [];\n\tvar types = [];\n\tfunction bidi(str, startLevel, vertical) {\n\t  var isLTR = true;\n\t  var strLength = str.length;\n\t  if (strLength === 0 || vertical) {\n\t    return createBidiText(str, isLTR, vertical);\n\t  }\n\t  chars.length = strLength;\n\t  types.length = strLength;\n\t  var numBidi = 0;\n\t  var i, ii;\n\t  for (i = 0; i < strLength; ++i) {\n\t    chars[i] = str.charAt(i);\n\t    var charCode = str.charCodeAt(i);\n\t    var charType = 'L';\n\t    if (charCode <= 0x00ff) {\n\t      charType = baseTypes[charCode];\n\t    } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n\t      charType = 'R';\n\t    } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n\t      charType = arabicTypes[charCode & 0xff];\n\t      if (!charType) {\n\t        (0, _util.warn)('Bidi: invalid Unicode character ' + charCode.toString(16));\n\t      }\n\t    } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n\t      charType = 'AL';\n\t    }\n\t    if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n\t      numBidi++;\n\t    }\n\t    types[i] = charType;\n\t  }\n\t  if (numBidi === 0) {\n\t    isLTR = true;\n\t    return createBidiText(str, isLTR);\n\t  }\n\t  if (startLevel === -1) {\n\t    if (numBidi / strLength < 0.3) {\n\t      isLTR = true;\n\t      startLevel = 0;\n\t    } else {\n\t      isLTR = false;\n\t      startLevel = 1;\n\t    }\n\t  }\n\t  var levels = [];\n\t  for (i = 0; i < strLength; ++i) {\n\t    levels[i] = startLevel;\n\t  }\n\t  var e = isOdd(startLevel) ? 'R' : 'L';\n\t  var sor = e;\n\t  var eor = sor;\n\t  var lastType = sor;\n\t  for (i = 0; i < strLength; ++i) {\n\t    if (types[i] === 'NSM') {\n\t      types[i] = lastType;\n\t    } else {\n\t      lastType = types[i];\n\t    }\n\t  }\n\t  lastType = sor;\n\t  var t;\n\t  for (i = 0; i < strLength; ++i) {\n\t    t = types[i];\n\t    if (t === 'EN') {\n\t      types[i] = lastType === 'AL' ? 'AN' : 'EN';\n\t    } else if (t === 'R' || t === 'L' || t === 'AL') {\n\t      lastType = t;\n\t    }\n\t  }\n\t  for (i = 0; i < strLength; ++i) {\n\t    t = types[i];\n\t    if (t === 'AL') {\n\t      types[i] = 'R';\n\t    }\n\t  }\n\t  for (i = 1; i < strLength - 1; ++i) {\n\t    if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n\t      types[i] = 'EN';\n\t    }\n\t    if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\n\t      types[i] = types[i - 1];\n\t    }\n\t  }\n\t  for (i = 0; i < strLength; ++i) {\n\t    if (types[i] === 'EN') {\n\t      var j;\n\t      for (j = i - 1; j >= 0; --j) {\n\t        if (types[j] !== 'ET') {\n\t          break;\n\t        }\n\t        types[j] = 'EN';\n\t      }\n\t      for (j = i + 1; j < strLength; ++j) {\n\t        if (types[j] !== 'ET') {\n\t          break;\n\t        }\n\t        types[j] = 'EN';\n\t      }\n\t    }\n\t  }\n\t  for (i = 0; i < strLength; ++i) {\n\t    t = types[i];\n\t    if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n\t      types[i] = 'ON';\n\t    }\n\t  }\n\t  lastType = sor;\n\t  for (i = 0; i < strLength; ++i) {\n\t    t = types[i];\n\t    if (t === 'EN') {\n\t      types[i] = lastType === 'L' ? 'L' : 'EN';\n\t    } else if (t === 'R' || t === 'L') {\n\t      lastType = t;\n\t    }\n\t  }\n\t  for (i = 0; i < strLength; ++i) {\n\t    if (types[i] === 'ON') {\n\t      var end = findUnequal(types, i + 1, 'ON');\n\t      var before = sor;\n\t      if (i > 0) {\n\t        before = types[i - 1];\n\t      }\n\t      var after = eor;\n\t      if (end + 1 < strLength) {\n\t        after = types[end + 1];\n\t      }\n\t      if (before !== 'L') {\n\t        before = 'R';\n\t      }\n\t      if (after !== 'L') {\n\t        after = 'R';\n\t      }\n\t      if (before === after) {\n\t        setValues(types, i, end, before);\n\t      }\n\t      i = end - 1;\n\t    }\n\t  }\n\t  for (i = 0; i < strLength; ++i) {\n\t    if (types[i] === 'ON') {\n\t      types[i] = e;\n\t    }\n\t  }\n\t  for (i = 0; i < strLength; ++i) {\n\t    t = types[i];\n\t    if (isEven(levels[i])) {\n\t      if (t === 'R') {\n\t        levels[i] += 1;\n\t      } else if (t === 'AN' || t === 'EN') {\n\t        levels[i] += 2;\n\t      }\n\t    } else {\n\t      if (t === 'L' || t === 'AN' || t === 'EN') {\n\t        levels[i] += 1;\n\t      }\n\t    }\n\t  }\n\t  var highestLevel = -1;\n\t  var lowestOddLevel = 99;\n\t  var level;\n\t  for (i = 0, ii = levels.length; i < ii; ++i) {\n\t    level = levels[i];\n\t    if (highestLevel < level) {\n\t      highestLevel = level;\n\t    }\n\t    if (lowestOddLevel > level && isOdd(level)) {\n\t      lowestOddLevel = level;\n\t    }\n\t  }\n\t  for (level = highestLevel; level >= lowestOddLevel; --level) {\n\t    var start = -1;\n\t    for (i = 0, ii = levels.length; i < ii; ++i) {\n\t      if (levels[i] < level) {\n\t        if (start >= 0) {\n\t          reverseValues(chars, start, i);\n\t          start = -1;\n\t        }\n\t      } else if (start < 0) {\n\t        start = i;\n\t      }\n\t    }\n\t    if (start >= 0) {\n\t      reverseValues(chars, start, levels.length);\n\t    }\n\t  }\n\t  for (i = 0, ii = chars.length; i < ii; ++i) {\n\t    var ch = chars[i];\n\t    if (ch === '<' || ch === '>') {\n\t      chars[i] = '';\n\t    }\n\t  }\n\t  return createBidiText(chars.join(''), isLTR);\n\t}\n\texports.bidi = bidi;\n\t\n\t/***/ }),\n\t/* 140 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.getMetrics = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar getMetrics = (0, _util.getLookupTableFactory)(function (t) {\n\t  t['Courier'] = 600;\n\t  t['Courier-Bold'] = 600;\n\t  t['Courier-BoldOblique'] = 600;\n\t  t['Courier-Oblique'] = 600;\n\t  t['Helvetica'] = (0, _util.getLookupTableFactory)(function (t) {\n\t    t['space'] = 278;\n\t    t['exclam'] = 278;\n\t    t['quotedbl'] = 355;\n\t    t['numbersign'] = 556;\n\t    t['dollar'] = 556;\n\t    t['percent'] = 889;\n\t    t['ampersand'] = 667;\n\t    t['quoteright'] = 222;\n\t    t['parenleft'] = 333;\n\t    t['parenright'] = 333;\n\t    t['asterisk'] = 389;\n\t    t['plus'] = 584;\n\t    t['comma'] = 278;\n\t    t['hyphen'] = 333;\n\t    t['period'] = 278;\n\t    t['slash'] = 278;\n\t    t['zero'] = 556;\n\t    t['one'] = 556;\n\t    t['two'] = 556;\n\t    t['three'] = 556;\n\t    t['four'] = 556;\n\t    t['five'] = 556;\n\t    t['six'] = 556;\n\t    t['seven'] = 556;\n\t    t['eight'] = 556;\n\t    t['nine'] = 556;\n\t    t['colon'] = 278;\n\t    t['semicolon'] = 278;\n\t    t['less'] = 584;\n\t    t['equal'] = 584;\n\t    t['greater'] = 584;\n\t    t['question'] = 556;\n\t    t['at'] = 1015;\n\t    t['A'] = 667;\n\t    t['B'] = 667;\n\t    t['C'] = 722;\n\t    t['D'] = 722;\n\t    t['E'] = 667;\n\t    t['F'] = 611;\n\t    t['G'] = 778;\n\t    t['H'] = 722;\n\t    t['I'] = 278;\n\t    t['J'] = 500;\n\t    t['K'] = 667;\n\t    t['L'] = 556;\n\t    t['M'] = 833;\n\t    t['N'] = 722;\n\t    t['O'] = 778;\n\t    t['P'] = 667;\n\t    t['Q'] = 778;\n\t    t['R'] = 722;\n\t    t['S'] = 667;\n\t    t['T'] = 611;\n\t    t['U'] = 722;\n\t    t['V'] = 667;\n\t    t['W'] = 944;\n\t    t['X'] = 667;\n\t    t['Y'] = 667;\n\t    t['Z'] = 611;\n\t    t['bracketleft'] = 278;\n\t    t['backslash'] = 278;\n\t    t['bracketright'] = 278;\n\t    t['asciicircum'] = 469;\n\t    t['underscore'] = 556;\n\t    t['quoteleft'] = 222;\n\t    t['a'] = 556;\n\t    t['b'] = 556;\n\t    t['c'] = 500;\n\t    t['d'] = 556;\n\t    t['e'] = 556;\n\t    t['f'] = 278;\n\t    t['g'] = 556;\n\t    t['h'] = 556;\n\t    t['i'] = 222;\n\t    t['j'] = 222;\n\t    t['k'] = 500;\n\t    t['l'] = 222;\n\t    t['m'] = 833;\n\t    t['n'] = 556;\n\t    t['o'] = 556;\n\t    t['p'] = 556;\n\t    t['q'] = 556;\n\t    t['r'] = 333;\n\t    t['s'] = 500;\n\t    t['t'] = 278;\n\t    t['u'] = 556;\n\t    t['v'] = 500;\n\t    t['w'] = 722;\n\t    t['x'] = 500;\n\t    t['y'] = 500;\n\t    t['z'] = 500;\n\t    t['braceleft'] = 334;\n\t    t['bar'] = 260;\n\t    t['braceright'] = 334;\n\t    t['asciitilde'] = 584;\n\t    t['exclamdown'] = 333;\n\t    t['cent'] = 556;\n\t    t['sterling'] = 556;\n\t    t['fraction'] = 167;\n\t    t['yen'] = 556;\n\t    t['florin'] = 556;\n\t    t['section'] = 556;\n\t    t['currency'] = 556;\n\t    t['quotesingle'] = 191;\n\t    t['quotedblleft'] = 333;\n\t    t['guillemotleft'] = 556;\n\t    t['guilsinglleft'] = 333;\n\t    t['guilsinglright'] = 333;\n\t    t['fi'] = 500;\n\t    t['fl'] = 500;\n\t    t['endash'] = 556;\n\t    t['dagger'] = 556;\n\t    t['daggerdbl'] = 556;\n\t    t['periodcentered'] = 278;\n\t    t['paragraph'] = 537;\n\t    t['bullet'] = 350;\n\t    t['quotesinglbase'] = 222;\n\t    t['quotedblbase'] = 333;\n\t    t['quotedblright'] = 333;\n\t    t['guillemotright'] = 556;\n\t    t['ellipsis'] = 1000;\n\t    t['perthousand'] = 1000;\n\t    t['questiondown'] = 611;\n\t    t['grave'] = 333;\n\t    t['acute'] = 333;\n\t    t['circumflex'] = 333;\n\t    t['tilde'] = 333;\n\t    t['macron'] = 333;\n\t    t['breve'] = 333;\n\t    t['dotaccent'] = 333;\n\t    t['dieresis'] = 333;\n\t    t['ring'] = 333;\n\t    t['cedilla'] = 333;\n\t    t['hungarumlaut'] = 333;\n\t    t['ogonek'] = 333;\n\t    t['caron'] = 333;\n\t    t['emdash'] = 1000;\n\t    t['AE'] = 1000;\n\t    t['ordfeminine'] = 370;\n\t    t['Lslash'] = 556;\n\t    t['Oslash'] = 778;\n\t    t['OE'] = 1000;\n\t    t['ordmasculine'] = 365;\n\t    t['ae'] = 889;\n\t    t['dotlessi'] = 278;\n\t    t['lslash'] = 222;\n\t    t['oslash'] = 611;\n\t    t['oe'] = 944;\n\t    t['germandbls'] = 611;\n\t    t['Idieresis'] = 278;\n\t    t['eacute'] = 556;\n\t    t['abreve'] = 556;\n\t    t['uhungarumlaut'] = 556;\n\t    t['ecaron'] = 556;\n\t    t['Ydieresis'] = 667;\n\t    t['divide'] = 584;\n\t    t['Yacute'] = 667;\n\t    t['Acircumflex'] = 667;\n\t    t['aacute'] = 556;\n\t    t['Ucircumflex'] = 722;\n\t    t['yacute'] = 500;\n\t    t['scommaaccent'] = 500;\n\t    t['ecircumflex'] = 556;\n\t    t['Uring'] = 722;\n\t    t['Udieresis'] = 722;\n\t    t['aogonek'] = 556;\n\t    t['Uacute'] = 722;\n\t    t['uogonek'] = 556;\n\t    t['Edieresis'] = 667;\n\t    t['Dcroat'] = 722;\n\t    t['commaaccent'] = 250;\n\t    t['copyright'] = 737;\n\t    t['Emacron'] = 667;\n\t    t['ccaron'] = 500;\n\t    t['aring'] = 556;\n\t    t['Ncommaaccent'] = 722;\n\t    t['lacute'] = 222;\n\t    t['agrave'] = 556;\n\t    t['Tcommaaccent'] = 611;\n\t    t['Cacute'] = 722;\n\t    t['atilde'] = 556;\n\t    t['Edotaccent'] = 667;\n\t    t['scaron'] = 500;\n\t    t['scedilla'] = 500;\n\t    t['iacute'] = 278;\n\t    t['lozenge'] = 471;\n\t    t['Rcaron'] = 722;\n\t    t['Gcommaaccent'] = 778;\n\t    t['ucircumflex'] = 556;\n\t    t['acircumflex'] = 556;\n\t    t['Amacron'] = 667;\n\t    t['rcaron'] = 333;\n\t    t['ccedilla'] = 500;\n\t    t['Zdotaccent'] = 611;\n\t    t['Thorn'] = 667;\n\t    t['Omacron'] = 778;\n\t    t['Racute'] = 722;\n\t    t['Sacute'] = 667;\n\t    t['dcaron'] = 643;\n\t    t['Umacron'] = 722;\n\t    t['uring'] = 556;\n\t    t['threesuperior'] = 333;\n\t    t['Ograve'] = 778;\n\t    t['Agrave'] = 667;\n\t    t['Abreve'] = 667;\n\t    t['multiply'] = 584;\n\t    t['uacute'] = 556;\n\t    t['Tcaron'] = 611;\n\t    t['partialdiff'] = 476;\n\t    t['ydieresis'] = 500;\n\t    t['Nacute'] = 722;\n\t    t['icircumflex'] = 278;\n\t    t['Ecircumflex'] = 667;\n\t    t['adieresis'] = 556;\n\t    t['edieresis'] = 556;\n\t    t['cacute'] = 500;\n\t    t['nacute'] = 556;\n\t    t['umacron'] = 556;\n\t    t['Ncaron'] = 722;\n\t    t['Iacute'] = 278;\n\t    t['plusminus'] = 584;\n\t    t['brokenbar'] = 260;\n\t    t['registered'] = 737;\n\t    t['Gbreve'] = 778;\n\t    t['Idotaccent'] = 278;\n\t    t['summation'] = 600;\n\t    t['Egrave'] = 667;\n\t    t['racute'] = 333;\n\t    t['omacron'] = 556;\n\t    t['Zacute'] = 611;\n\t    t['Zcaron'] = 611;\n\t    t['greaterequal'] = 549;\n\t    t['Eth'] = 722;\n\t    t['Ccedilla'] = 722;\n\t    t['lcommaaccent'] = 222;\n\t    t['tcaron'] = 317;\n\t    t['eogonek'] = 556;\n\t    t['Uogonek'] = 722;\n\t    t['Aacute'] = 667;\n\t    t['Adieresis'] = 667;\n\t    t['egrave'] = 556;\n\t    t['zacute'] = 500;\n\t    t['iogonek'] = 222;\n\t    t['Oacute'] = 778;\n\t    t['oacute'] = 556;\n\t    t['amacron'] = 556;\n\t    t['sacute'] = 500;\n\t    t['idieresis'] = 278;\n\t    t['Ocircumflex'] = 778;\n\t    t['Ugrave'] = 722;\n\t    t['Delta'] = 612;\n\t    t['thorn'] = 556;\n\t    t['twosuperior'] = 333;\n\t    t['Odieresis'] = 778;\n\t    t['mu'] = 556;\n\t    t['igrave'] = 278;\n\t    t['ohungarumlaut'] = 556;\n\t    t['Eogonek'] = 667;\n\t    t['dcroat'] = 556;\n\t    t['threequarters'] = 834;\n\t    t['Scedilla'] = 667;\n\t    t['lcaron'] = 299;\n\t    t['Kcommaaccent'] = 667;\n\t    t['Lacute'] = 556;\n\t    t['trademark'] = 1000;\n\t    t['edotaccent'] = 556;\n\t    t['Igrave'] = 278;\n\t    t['Imacron'] = 278;\n\t    t['Lcaron'] = 556;\n\t    t['onehalf'] = 834;\n\t    t['lessequal'] = 549;\n\t    t['ocircumflex'] = 556;\n\t    t['ntilde'] = 556;\n\t    t['Uhungarumlaut'] = 722;\n\t    t['Eacute'] = 667;\n\t    t['emacron'] = 556;\n\t    t['gbreve'] = 556;\n\t    t['onequarter'] = 834;\n\t    t['Scaron'] = 667;\n\t    t['Scommaaccent'] = 667;\n\t    t['Ohungarumlaut'] = 778;\n\t    t['degree'] = 400;\n\t    t['ograve'] = 556;\n\t    t['Ccaron'] = 722;\n\t    t['ugrave'] = 556;\n\t    t['radical'] = 453;\n\t    t['Dcaron'] = 722;\n\t    t['rcommaaccent'] = 333;\n\t    t['Ntilde'] = 722;\n\t    t['otilde'] = 556;\n\t    t['Rcommaaccent'] = 722;\n\t    t['Lcommaaccent'] = 556;\n\t    t['Atilde'] = 667;\n\t    t['Aogonek'] = 667;\n\t    t['Aring'] = 667;\n\t    t['Otilde'] = 778;\n\t    t['zdotaccent'] = 500;\n\t    t['Ecaron'] = 667;\n\t    t['Iogonek'] = 278;\n\t    t['kcommaaccent'] = 500;\n\t    t['minus'] = 584;\n\t    t['Icircumflex'] = 278;\n\t    t['ncaron'] = 556;\n\t    t['tcommaaccent'] = 278;\n\t    t['logicalnot'] = 584;\n\t    t['odieresis'] = 556;\n\t    t['udieresis'] = 556;\n\t    t['notequal'] = 549;\n\t    t['gcommaaccent'] = 556;\n\t    t['eth'] = 556;\n\t    t['zcaron'] = 500;\n\t    t['ncommaaccent'] = 556;\n\t    t['onesuperior'] = 333;\n\t    t['imacron'] = 278;\n\t    t['Euro'] = 556;\n\t  });\n\t  t['Helvetica-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n\t    t['space'] = 278;\n\t    t['exclam'] = 333;\n\t    t['quotedbl'] = 474;\n\t    t['numbersign'] = 556;\n\t    t['dollar'] = 556;\n\t    t['percent'] = 889;\n\t    t['ampersand'] = 722;\n\t    t['quoteright'] = 278;\n\t    t['parenleft'] = 333;\n\t    t['parenright'] = 333;\n\t    t['asterisk'] = 389;\n\t    t['plus'] = 584;\n\t    t['comma'] = 278;\n\t    t['hyphen'] = 333;\n\t    t['period'] = 278;\n\t    t['slash'] = 278;\n\t    t['zero'] = 556;\n\t    t['one'] = 556;\n\t    t['two'] = 556;\n\t    t['three'] = 556;\n\t    t['four'] = 556;\n\t    t['five'] = 556;\n\t    t['six'] = 556;\n\t    t['seven'] = 556;\n\t    t['eight'] = 556;\n\t    t['nine'] = 556;\n\t    t['colon'] = 333;\n\t    t['semicolon'] = 333;\n\t    t['less'] = 584;\n\t    t['equal'] = 584;\n\t    t['greater'] = 584;\n\t    t['question'] = 611;\n\t    t['at'] = 975;\n\t    t['A'] = 722;\n\t    t['B'] = 722;\n\t    t['C'] = 722;\n\t    t['D'] = 722;\n\t    t['E'] = 667;\n\t    t['F'] = 611;\n\t    t['G'] = 778;\n\t    t['H'] = 722;\n\t    t['I'] = 278;\n\t    t['J'] = 556;\n\t    t['K'] = 722;\n\t    t['L'] = 611;\n\t    t['M'] = 833;\n\t    t['N'] = 722;\n\t    t['O'] = 778;\n\t    t['P'] = 667;\n\t    t['Q'] = 778;\n\t    t['R'] = 722;\n\t    t['S'] = 667;\n\t    t['T'] = 611;\n\t    t['U'] = 722;\n\t    t['V'] = 667;\n\t    t['W'] = 944;\n\t    t['X'] = 667;\n\t    t['Y'] = 667;\n\t    t['Z'] = 611;\n\t    t['bracketleft'] = 333;\n\t    t['backslash'] = 278;\n\t    t['bracketright'] = 333;\n\t    t['asciicircum'] = 584;\n\t    t['underscore'] = 556;\n\t    t['quoteleft'] = 278;\n\t    t['a'] = 556;\n\t    t['b'] = 611;\n\t    t['c'] = 556;\n\t    t['d'] = 611;\n\t    t['e'] = 556;\n\t    t['f'] = 333;\n\t    t['g'] = 611;\n\t    t['h'] = 611;\n\t    t['i'] = 278;\n\t    t['j'] = 278;\n\t    t['k'] = 556;\n\t    t['l'] = 278;\n\t    t['m'] = 889;\n\t    t['n'] = 611;\n\t    t['o'] = 611;\n\t    t['p'] = 611;\n\t    t['q'] = 611;\n\t    t['r'] = 389;\n\t    t['s'] = 556;\n\t    t['t'] = 333;\n\t    t['u'] = 611;\n\t    t['v'] = 556;\n\t    t['w'] = 778;\n\t    t['x'] = 556;\n\t    t['y'] = 556;\n\t    t['z'] = 500;\n\t    t['braceleft'] = 389;\n\t    t['bar'] = 280;\n\t    t['braceright'] = 389;\n\t    t['asciitilde'] = 584;\n\t    t['exclamdown'] = 333;\n\t    t['cent'] = 556;\n\t    t['sterling'] = 556;\n\t    t['fraction'] = 167;\n\t    t['yen'] = 556;\n\t    t['florin'] = 556;\n\t    t['section'] = 556;\n\t    t['currency'] = 556;\n\t    t['quotesingle'] = 238;\n\t    t['quotedblleft'] = 500;\n\t    t['guillemotleft'] = 556;\n\t    t['guilsinglleft'] = 333;\n\t    t['guilsinglright'] = 333;\n\t    t['fi'] = 611;\n\t    t['fl'] = 611;\n\t    t['endash'] = 556;\n\t    t['dagger'] = 556;\n\t    t['daggerdbl'] = 556;\n\t    t['periodcentered'] = 278;\n\t    t['paragraph'] = 556;\n\t    t['bullet'] = 350;\n\t    t['quotesinglbase'] = 278;\n\t    t['quotedblbase'] = 500;\n\t    t['quotedblright'] = 500;\n\t    t['guillemotright'] = 556;\n\t    t['ellipsis'] = 1000;\n\t    t['perthousand'] = 1000;\n\t    t['questiondown'] = 611;\n\t    t['grave'] = 333;\n\t    t['acute'] = 333;\n\t    t['circumflex'] = 333;\n\t    t['tilde'] = 333;\n\t    t['macron'] = 333;\n\t    t['breve'] = 333;\n\t    t['dotaccent'] = 333;\n\t    t['dieresis'] = 333;\n\t    t['ring'] = 333;\n\t    t['cedilla'] = 333;\n\t    t['hungarumlaut'] = 333;\n\t    t['ogonek'] = 333;\n\t    t['caron'] = 333;\n\t    t['emdash'] = 1000;\n\t    t['AE'] = 1000;\n\t    t['ordfeminine'] = 370;\n\t    t['Lslash'] = 611;\n\t    t['Oslash'] = 778;\n\t    t['OE'] = 1000;\n\t    t['ordmasculine'] = 365;\n\t    t['ae'] = 889;\n\t    t['dotlessi'] = 278;\n\t    t['lslash'] = 278;\n\t    t['oslash'] = 611;\n\t    t['oe'] = 944;\n\t    t['germandbls'] = 611;\n\t    t['Idieresis'] = 278;\n\t    t['eacute'] = 556;\n\t    t['abreve'] = 556;\n\t    t['uhungarumlaut'] = 611;\n\t    t['ecaron'] = 556;\n\t    t['Ydieresis'] = 667;\n\t    t['divide'] = 584;\n\t    t['Yacute'] = 667;\n\t    t['Acircumflex'] = 722;\n\t    t['aacute'] = 556;\n\t    t['Ucircumflex'] = 722;\n\t    t['yacute'] = 556;\n\t    t['scommaaccent'] = 556;\n\t    t['ecircumflex'] = 556;\n\t    t['Uring'] = 722;\n\t    t['Udieresis'] = 722;\n\t    t['aogonek'] = 556;\n\t    t['Uacute'] = 722;\n\t    t['uogonek'] = 611;\n\t    t['Edieresis'] = 667;\n\t    t['Dcroat'] = 722;\n\t    t['commaaccent'] = 250;\n\t    t['copyright'] = 737;\n\t    t['Emacron'] = 667;\n\t    t['ccaron'] = 556;\n\t    t['aring'] = 556;\n\t    t['Ncommaaccent'] = 722;\n\t    t['lacute'] = 278;\n\t    t['agrave'] = 556;\n\t    t['Tcommaaccent'] = 611;\n\t    t['Cacute'] = 722;\n\t    t['atilde'] = 556;\n\t    t['Edotaccent'] = 667;\n\t    t['scaron'] = 556;\n\t    t['scedilla'] = 556;\n\t    t['iacute'] = 278;\n\t    t['lozenge'] = 494;\n\t    t['Rcaron'] = 722;\n\t    t['Gcommaaccent'] = 778;\n\t    t['ucircumflex'] = 611;\n\t    t['acircumflex'] = 556;\n\t    t['Amacron'] = 722;\n\t    t['rcaron'] = 389;\n\t    t['ccedilla'] = 556;\n\t    t['Zdotaccent'] = 611;\n\t    t['Thorn'] = 667;\n\t    t['Omacron'] = 778;\n\t    t['Racute'] = 722;\n\t    t['Sacute'] = 667;\n\t    t['dcaron'] = 743;\n\t    t['Umacron'] = 722;\n\t    t['uring'] = 611;\n\t    t['threesuperior'] = 333;\n\t    t['Ograve'] = 778;\n\t    t['Agrave'] = 722;\n\t    t['Abreve'] = 722;\n\t    t['multiply'] = 584;\n\t    t['uacute'] = 611;\n\t    t['Tcaron'] = 611;\n\t    t['partialdiff'] = 494;\n\t    t['ydieresis'] = 556;\n\t    t['Nacute'] = 722;\n\t    t['icircumflex'] = 278;\n\t    t['Ecircumflex'] = 667;\n\t    t['adieresis'] = 556;\n\t    t['edieresis'] = 556;\n\t    t['cacute'] = 556;\n\t    t['nacute'] = 611;\n\t    t['umacron'] = 611;\n\t    t['Ncaron'] = 722;\n\t    t['Iacute'] = 278;\n\t    t['plusminus'] = 584;\n\t    t['brokenbar'] = 280;\n\t    t['registered'] = 737;\n\t    t['Gbreve'] = 778;\n\t    t['Idotaccent'] = 278;\n\t    t['summation'] = 600;\n\t    t['Egrave'] = 667;\n\t    t['racute'] = 389;\n\t    t['omacron'] = 611;\n\t    t['Zacute'] = 611;\n\t    t['Zcaron'] = 611;\n\t    t['greaterequal'] = 549;\n\t    t['Eth'] = 722;\n\t    t['Ccedilla'] = 722;\n\t    t['lcommaaccent'] = 278;\n\t    t['tcaron'] = 389;\n\t    t['eogonek'] = 556;\n\t    t['Uogonek'] = 722;\n\t    t['Aacute'] = 722;\n\t    t['Adieresis'] = 722;\n\t    t['egrave'] = 556;\n\t    t['zacute'] = 500;\n\t    t['iogonek'] = 278;\n\t    t['Oacute'] = 778;\n\t    t['oacute'] = 611;\n\t    t['amacron'] = 556;\n\t    t['sacute'] = 556;\n\t    t['idieresis'] = 278;\n\t    t['Ocircumflex'] = 778;\n\t    t['Ugrave'] = 722;\n\t    t['Delta'] = 612;\n\t    t['thorn'] = 611;\n\t    t['twosuperior'] = 333;\n\t    t['Odieresis'] = 778;\n\t    t['mu'] = 611;\n\t    t['igrave'] = 278;\n\t    t['ohungarumlaut'] = 611;\n\t    t['Eogonek'] = 667;\n\t    t['dcroat'] = 611;\n\t    t['threequarters'] = 834;\n\t    t['Scedilla'] = 667;\n\t    t['lcaron'] = 400;\n\t    t['Kcommaaccent'] = 722;\n\t    t['Lacute'] = 611;\n\t    t['trademark'] = 1000;\n\t    t['edotaccent'] = 556;\n\t    t['Igrave'] = 278;\n\t    t['Imacron'] = 278;\n\t    t['Lcaron'] = 611;\n\t    t['onehalf'] = 834;\n\t    t['lessequal'] = 549;\n\t    t['ocircumflex'] = 611;\n\t    t['ntilde'] = 611;\n\t    t['Uhungarumlaut'] = 722;\n\t    t['Eacute'] = 667;\n\t    t['emacron'] = 556;\n\t    t['gbreve'] = 611;\n\t    t['onequarter'] = 834;\n\t    t['Scaron'] = 667;\n\t    t['Scommaaccent'] = 667;\n\t    t['Ohungarumlaut'] = 778;\n\t    t['degree'] = 400;\n\t    t['ograve'] = 611;\n\t    t['Ccaron'] = 722;\n\t    t['ugrave'] = 611;\n\t    t['radical'] = 549;\n\t    t['Dcaron'] = 722;\n\t    t['rcommaaccent'] = 389;\n\t    t['Ntilde'] = 722;\n\t    t['otilde'] = 611;\n\t    t['Rcommaaccent'] = 722;\n\t    t['Lcommaaccent'] = 611;\n\t    t['Atilde'] = 722;\n\t    t['Aogonek'] = 722;\n\t    t['Aring'] = 722;\n\t    t['Otilde'] = 778;\n\t    t['zdotaccent'] = 500;\n\t    t['Ecaron'] = 667;\n\t    t['Iogonek'] = 278;\n\t    t['kcommaaccent'] = 556;\n\t    t['minus'] = 584;\n\t    t['Icircumflex'] = 278;\n\t    t['ncaron'] = 611;\n\t    t['tcommaaccent'] = 333;\n\t    t['logicalnot'] = 584;\n\t    t['odieresis'] = 611;\n\t    t['udieresis'] = 611;\n\t    t['notequal'] = 549;\n\t    t['gcommaaccent'] = 611;\n\t    t['eth'] = 611;\n\t    t['zcaron'] = 500;\n\t    t['ncommaaccent'] = 611;\n\t    t['onesuperior'] = 333;\n\t    t['imacron'] = 278;\n\t    t['Euro'] = 556;\n\t  });\n\t  t['Helvetica-BoldOblique'] = (0, _util.getLookupTableFactory)(function (t) {\n\t    t['space'] = 278;\n\t    t['exclam'] = 333;\n\t    t['quotedbl'] = 474;\n\t    t['numbersign'] = 556;\n\t    t['dollar'] = 556;\n\t    t['percent'] = 889;\n\t    t['ampersand'] = 722;\n\t    t['quoteright'] = 278;\n\t    t['parenleft'] = 333;\n\t    t['parenright'] = 333;\n\t    t['asterisk'] = 389;\n\t    t['plus'] = 584;\n\t    t['comma'] = 278;\n\t    t['hyphen'] = 333;\n\t    t['period'] = 278;\n\t    t['slash'] = 278;\n\t    t['zero'] = 556;\n\t    t['one'] = 556;\n\t    t['two'] = 556;\n\t    t['three'] = 556;\n\t    t['four'] = 556;\n\t    t['five'] = 556;\n\t    t['six'] = 556;\n\t    t['seven'] = 556;\n\t    t['eight'] = 556;\n\t    t['nine'] = 556;\n\t    t['colon'] = 333;\n\t    t['semicolon'] = 333;\n\t    t['less'] = 584;\n\t    t['equal'] = 584;\n\t    t['greater'] = 584;\n\t    t['question'] = 611;\n\t    t['at'] = 975;\n\t    t['A'] = 722;\n\t    t['B'] = 722;\n\t    t['C'] = 722;\n\t    t['D'] = 722;\n\t    t['E'] = 667;\n\t    t['F'] = 611;\n\t    t['G'] = 778;\n\t    t['H'] = 722;\n\t    t['I'] = 278;\n\t    t['J'] = 556;\n\t    t['K'] = 722;\n\t    t['L'] = 611;\n\t    t['M'] = 833;\n\t    t['N'] = 722;\n\t    t['O'] = 778;\n\t    t['P'] = 667;\n\t    t['Q'] = 778;\n\t    t['R'] = 722;\n\t    t['S'] = 667;\n\t    t['T'] = 611;\n\t    t['U'] = 722;\n\t    t['V'] = 667;\n\t    t['W'] = 944;\n\t    t['X'] = 667;\n\t    t['Y'] = 667;\n\t    t['Z'] = 611;\n\t    t['bracketleft'] = 333;\n\t    t['backslash'] = 278;\n\t    t['bracketright'] = 333;\n\t    t['asciicircum'] = 584;\n\t    t['underscore'] = 556;\n\t    t['quoteleft'] = 278;\n\t    t['a'] = 556;\n\t    t['b'] = 611;\n\t    t['c'] = 556;\n\t    t['d'] = 611;\n\t    t['e'] = 556;\n\t    t['f'] = 333;\n\t    t['g'] = 611;\n\t    t['h'] = 611;\n\t    t['i'] = 278;\n\t    t['j'] = 278;\n\t    t['k'] = 556;\n\t    t['l'] = 278;\n\t    t['m'] = 889;\n\t    t['n'] = 611;\n\t    t['o'] = 611;\n\t    t['p'] = 611;\n\t    t['q'] = 611;\n\t    t['r'] = 389;\n\t    t['s'] = 556;\n\t    t['t'] = 333;\n\t    t['u'] = 611;\n\t    t['v'] = 556;\n\t    t['w'] = 778;\n\t    t['x'] = 556;\n\t    t['y'] = 556;\n\t    t['z'] = 500;\n\t    t['braceleft'] = 389;\n\t    t['bar'] = 280;\n\t    t['braceright'] = 389;\n\t    t['asciitilde'] = 584;\n\t    t['exclamdown'] = 333;\n\t    t['cent'] = 556;\n\t    t['sterling'] = 556;\n\t    t['fraction'] = 167;\n\t    t['yen'] = 556;\n\t    t['florin'] = 556;\n\t    t['section'] = 556;\n\t    t['currency'] = 556;\n\t    t['quotesingle'] = 238;\n\t    t['quotedblleft'] = 500;\n\t    t['guillemotleft'] = 556;\n\t    t['guilsinglleft'] = 333;\n\t    t['guilsinglright'] = 333;\n\t    t['fi'] = 611;\n\t    t['fl'] = 611;\n\t    t['endash'] = 556;\n\t    t['dagger'] = 556;\n\t    t['daggerdbl'] = 556;\n\t    t['periodcentered'] = 278;\n\t    t['paragraph'] = 556;\n\t    t['bullet'] = 350;\n\t    t['quotesinglbase'] = 278;\n\t    t['quotedblbase'] = 500;\n\t    t['quotedblright'] = 500;\n\t    t['guillemotright'] = 556;\n\t    t['ellipsis'] = 1000;\n\t    t['perthousand'] = 1000;\n\t    t['questiondown'] = 611;\n\t    t['grave'] = 333;\n\t    t['acute'] = 333;\n\t    t['circumflex'] = 333;\n\t    t['tilde'] = 333;\n\t    t['macron'] = 333;\n\t    t['breve'] = 333;\n\t    t['dotaccent'] = 333;\n\t    t['dieresis'] = 333;\n\t    t['ring'] = 333;\n\t    t['cedilla'] = 333;\n\t    t['hungarumlaut'] = 333;\n\t    t['ogonek'] = 333;\n\t    t['caron'] = 333;\n\t    t['emdash'] = 1000;\n\t    t['AE'] = 1000;\n\t    t['ordfeminine'] = 370;\n\t    t['Lslash'] = 611;\n\t    t['Oslash'] = 778;\n\t    t['OE'] = 1000;\n\t    t['ordmasculine'] = 365;\n\t    t['ae'] = 889;\n\t    t['dotlessi'] = 278;\n\t    t['lslash'] = 278;\n\t    t['oslash'] = 611;\n\t    t['oe'] = 944;\n\t    t['germandbls'] = 611;\n\t    t['Idieresis'] = 278;\n\t    t['eacute'] = 556;\n\t    t['abreve'] = 556;\n\t    t['uhungarumlaut'] = 611;\n\t    t['ecaron'] = 556;\n\t    t['Ydieresis'] = 667;\n\t    t['divide'] = 584;\n\t    t['Yacute'] = 667;\n\t    t['Acircumflex'] = 722;\n\t    t['aacute'] = 556;\n\t    t['Ucircumflex'] = 722;\n\t    t['yacute'] = 556;\n\t    t['scommaaccent'] = 556;\n\t    t['ecircumflex'] = 556;\n\t    t['Uring'] = 722;\n\t    t['Udieresis'] = 722;\n\t    t['aogonek'] = 556;\n\t    t['Uacute'] = 722;\n\t    t['uogonek'] = 611;\n\t    t['Edieresis'] = 667;\n\t    t['Dcroat'] = 722;\n\t    t['commaaccent'] = 250;\n\t    t['copyright'] = 737;\n\t    t['Emacron'] = 667;\n\t    t['ccaron'] = 556;\n\t    t['aring'] = 556;\n\t    t['Ncommaaccent'] = 722;\n\t    t['lacute'] = 278;\n\t    t['agrave'] = 556;\n\t    t['Tcommaaccent'] = 611;\n\t    t['Cacute'] = 722;\n\t    t['atilde'] = 556;\n\t    t['Edotaccent'] = 667;\n\t    t['scaron'] = 556;\n\t    t['scedilla'] = 556;\n\t    t['iacute'] = 278;\n\t    t['lozenge'] = 494;\n\t    t['Rcaron'] = 722;\n\t    t['Gcommaaccent'] = 778;\n\t    t['ucircumflex'] = 611;\n\t    t['acircumflex'] = 556;\n\t    t['Amacron'] = 722;\n\t    t['rcaron'] = 389;\n\t    t['ccedilla'] = 556;\n\t    t['Zdotaccent'] = 611;\n\t    t['Thorn'] = 667;\n\t    t['Omacron'] = 778;\n\t    t['Racute'] = 722;\n\t    t['Sacute'] = 667;\n\t    t['dcaron'] = 743;\n\t    t['Umacron'] = 722;\n\t    t['uring'] = 611;\n\t    t['threesuperior'] = 333;\n\t    t['Ograve'] = 778;\n\t    t['Agrave'] = 722;\n\t    t['Abreve'] = 722;\n\t    t['multiply'] = 584;\n\t    t['uacute'] = 611;\n\t    t['Tcaron'] = 611;\n\t    t['partialdiff'] = 494;\n\t    t['ydieresis'] = 556;\n\t    t['Nacute'] = 722;\n\t    t['icircumflex'] = 278;\n\t    t['Ecircumflex'] = 667;\n\t    t['adieresis'] = 556;\n\t    t['edieresis'] = 556;\n\t    t['cacute'] = 556;\n\t    t['nacute'] = 611;\n\t    t['umacron'] = 611;\n\t    t['Ncaron'] = 722;\n\t    t['Iacute'] = 278;\n\t    t['plusminus'] = 584;\n\t    t['brokenbar'] = 280;\n\t    t['registered'] = 737;\n\t    t['Gbreve'] = 778;\n\t    t['Idotaccent'] = 278;\n\t    t['summation'] = 600;\n\t    t['Egrave'] = 667;\n\t    t['racute'] = 389;\n\t    t['omacron'] = 611;\n\t    t['Zacute'] = 611;\n\t    t['Zcaron'] = 611;\n\t    t['greaterequal'] = 549;\n\t    t['Eth'] = 722;\n\t    t['Ccedilla'] = 722;\n\t    t['lcommaaccent'] = 278;\n\t    t['tcaron'] = 389;\n\t    t['eogonek'] = 556;\n\t    t['Uogonek'] = 722;\n\t    t['Aacute'] = 722;\n\t    t['Adieresis'] = 722;\n\t    t['egrave'] = 556;\n\t    t['zacute'] = 500;\n\t    t['iogonek'] = 278;\n\t    t['Oacute'] = 778;\n\t    t['oacute'] = 611;\n\t    t['amacron'] = 556;\n\t    t['sacute'] = 556;\n\t    t['idieresis'] = 278;\n\t    t['Ocircumflex'] = 778;\n\t    t['Ugrave'] = 722;\n\t    t['Delta'] = 612;\n\t    t['thorn'] = 611;\n\t    t['twosuperior'] = 333;\n\t    t['Odieresis'] = 778;\n\t    t['mu'] = 611;\n\t    t['igrave'] = 278;\n\t    t['ohungarumlaut'] = 611;\n\t    t['Eogonek'] = 667;\n\t    t['dcroat'] = 611;\n\t    t['threequarters'] = 834;\n\t    t['Scedilla'] = 667;\n\t    t['lcaron'] = 400;\n\t    t['Kcommaaccent'] = 722;\n\t    t['Lacute'] = 611;\n\t    t['trademark'] = 1000;\n\t    t['edotaccent'] = 556;\n\t    t['Igrave'] = 278;\n\t    t['Imacron'] = 278;\n\t    t['Lcaron'] = 611;\n\t    t['onehalf'] = 834;\n\t    t['lessequal'] = 549;\n\t    t['ocircumflex'] = 611;\n\t    t['ntilde'] = 611;\n\t    t['Uhungarumlaut'] = 722;\n\t    t['Eacute'] = 667;\n\t    t['emacron'] = 556;\n\t    t['gbreve'] = 611;\n\t    t['onequarter'] = 834;\n\t    t['Scaron'] = 667;\n\t    t['Scommaaccent'] = 667;\n\t    t['Ohungarumlaut'] = 778;\n\t    t['degree'] = 400;\n\t    t['ograve'] = 611;\n\t    t['Ccaron'] = 722;\n\t    t['ugrave'] = 611;\n\t    t['radical'] = 549;\n\t    t['Dcaron'] = 722;\n\t    t['rcommaaccent'] = 389;\n\t    t['Ntilde'] = 722;\n\t    t['otilde'] = 611;\n\t    t['Rcommaaccent'] = 722;\n\t    t['Lcommaaccent'] = 611;\n\t    t['Atilde'] = 722;\n\t    t['Aogonek'] = 722;\n\t    t['Aring'] = 722;\n\t    t['Otilde'] = 778;\n\t    t['zdotaccent'] = 500;\n\t    t['Ecaron'] = 667;\n\t    t['Iogonek'] = 278;\n\t    t['kcommaaccent'] = 556;\n\t    t['minus'] = 584;\n\t    t['Icircumflex'] = 278;\n\t    t['ncaron'] = 611;\n\t    t['tcommaaccent'] = 333;\n\t    t['logicalnot'] = 584;\n\t    t['odieresis'] = 611;\n\t    t['udieresis'] = 611;\n\t    t['notequal'] = 549;\n\t    t['gcommaaccent'] = 611;\n\t    t['eth'] = 611;\n\t    t['zcaron'] = 500;\n\t    t['ncommaaccent'] = 611;\n\t    t['onesuperior'] = 333;\n\t    t['imacron'] = 278;\n\t    t['Euro'] = 556;\n\t  });\n\t  t['Helvetica-Oblique'] = (0, _util.getLookupTableFactory)(function (t) {\n\t    t['space'] = 278;\n\t    t['exclam'] = 278;\n\t    t['quotedbl'] = 355;\n\t    t['numbersign'] = 556;\n\t    t['dollar'] = 556;\n\t    t['percent'] = 889;\n\t    t['ampersand'] = 667;\n\t    t['quoteright'] = 222;\n\t    t['parenleft'] = 333;\n\t    t['parenright'] = 333;\n\t    t['asterisk'] = 389;\n\t    t['plus'] = 584;\n\t    t['comma'] = 278;\n\t    t['hyphen'] = 333;\n\t    t['period'] = 278;\n\t    t['slash'] = 278;\n\t    t['zero'] = 556;\n\t    t['one'] = 556;\n\t    t['two'] = 556;\n\t    t['three'] = 556;\n\t    t['four'] = 556;\n\t    t['five'] = 556;\n\t    t['six'] = 556;\n\t    t['seven'] = 556;\n\t    t['eight'] = 556;\n\t    t['nine'] = 556;\n\t    t['colon'] = 278;\n\t    t['semicolon'] = 278;\n\t    t['less'] = 584;\n\t    t['equal'] = 584;\n\t    t['greater'] = 584;\n\t    t['question'] = 556;\n\t    t['at'] = 1015;\n\t    t['A'] = 667;\n\t    t['B'] = 667;\n\t    t['C'] = 722;\n\t    t['D'] = 722;\n\t    t['E'] = 667;\n\t    t['F'] = 611;\n\t    t['G'] = 778;\n\t    t['H'] = 722;\n\t    t['I'] = 278;\n\t    t['J'] = 500;\n\t    t['K'] = 667;\n\t    t['L'] = 556;\n\t    t['M'] = 833;\n\t    t['N'] = 722;\n\t    t['O'] = 778;\n\t    t['P'] = 667;\n\t    t['Q'] = 778;\n\t    t['R'] = 722;\n\t    t['S'] = 667;\n\t    t['T'] = 611;\n\t    t['U'] = 722;\n\t    t['V'] = 667;\n\t    t['W'] = 944;\n\t    t['X'] = 667;\n\t    t['Y'] = 667;\n\t    t['Z'] = 611;\n\t    t['bracketleft'] = 278;\n\t    t['backslash'] = 278;\n\t    t['bracketright'] = 278;\n\t    t['asciicircum'] = 469;\n\t    t['underscore'] = 556;\n\t    t['quoteleft'] = 222;\n\t    t['a'] = 556;\n\t    t['b'] = 556;\n\t    t['c'] = 500;\n\t    t['d'] = 556;\n\t    t['e'] = 556;\n\t    t['f'] = 278;\n\t    t['g'] = 556;\n\t    t['h'] = 556;\n\t    t['i'] = 222;\n\t    t['j'] = 222;\n\t    t['k'] = 500;\n\t    t['l'] = 222;\n\t    t['m'] = 833;\n\t    t['n'] = 556;\n\t    t['o'] = 556;\n\t    t['p'] = 556;\n\t    t['q'] = 556;\n\t    t['r'] = 333;\n\t    t['s'] = 500;\n\t    t['t'] = 278;\n\t    t['u'] = 556;\n\t    t['v'] = 500;\n\t    t['w'] = 722;\n\t    t['x'] = 500;\n\t    t['y'] = 500;\n\t    t['z'] = 500;\n\t    t['braceleft'] = 334;\n\t    t['bar'] = 260;\n\t    t['braceright'] = 334;\n\t    t['asciitilde'] = 584;\n\t    t['exclamdown'] = 333;\n\t    t['cent'] = 556;\n\t    t['sterling'] = 556;\n\t    t['fraction'] = 167;\n\t    t['yen'] = 556;\n\t    t['florin'] = 556;\n\t    t['section'] = 556;\n\t    t['currency'] = 556;\n\t    t['quotesingle'] = 191;\n\t    t['quotedblleft'] = 333;\n\t    t['guillemotleft'] = 556;\n\t    t['guilsinglleft'] = 333;\n\t    t['guilsinglright'] = 333;\n\t    t['fi'] = 500;\n\t    t['fl'] = 500;\n\t    t['endash'] = 556;\n\t    t['dagger'] = 556;\n\t    t['daggerdbl'] = 556;\n\t    t['periodcentered'] = 278;\n\t    t['paragraph'] = 537;\n\t    t['bullet'] = 350;\n\t    t['quotesinglbase'] = 222;\n\t    t['quotedblbase'] = 333;\n\t    t['quotedblright'] = 333;\n\t    t['guillemotright'] = 556;\n\t    t['ellipsis'] = 1000;\n\t    t['perthousand'] = 1000;\n\t    t['questiondown'] = 611;\n\t    t['grave'] = 333;\n\t    t['acute'] = 333;\n\t    t['circumflex'] = 333;\n\t    t['tilde'] = 333;\n\t    t['macron'] = 333;\n\t    t['breve'] = 333;\n\t    t['dotaccent'] = 333;\n\t    t['dieresis'] = 333;\n\t    t['ring'] = 333;\n\t    t['cedilla'] = 333;\n\t    t['hungarumlaut'] = 333;\n\t    t['ogonek'] = 333;\n\t    t['caron'] = 333;\n\t    t['emdash'] = 1000;\n\t    t['AE'] = 1000;\n\t    t['ordfeminine'] = 370;\n\t    t['Lslash'] = 556;\n\t    t['Oslash'] = 778;\n\t    t['OE'] = 1000;\n\t    t['ordmasculine'] = 365;\n\t    t['ae'] = 889;\n\t    t['dotlessi'] = 278;\n\t    t['lslash'] = 222;\n\t    t['oslash'] = 611;\n\t    t['oe'] = 944;\n\t    t['germandbls'] = 611;\n\t    t['Idieresis'] = 278;\n\t    t['eacute'] = 556;\n\t    t['abreve'] = 556;\n\t    t['uhungarumlaut'] = 556;\n\t    t['ecaron'] = 556;\n\t    t['Ydieresis'] = 667;\n\t    t['divide'] = 584;\n\t    t['Yacute'] = 667;\n\t    t['Acircumflex'] = 667;\n\t    t['aacute'] = 556;\n\t    t['Ucircumflex'] = 722;\n\t    t['yacute'] = 500;\n\t    t['scommaaccent'] = 500;\n\t    t['ecircumflex'] = 556;\n\t    t['Uring'] = 722;\n\t    t['Udieresis'] = 722;\n\t    t['aogonek'] = 556;\n\t    t['Uacute'] = 722;\n\t    t['uogonek'] = 556;\n\t    t['Edieresis'] = 667;\n\t    t['Dcroat'] = 722;\n\t    t['commaaccent'] = 250;\n\t    t['copyright'] = 737;\n\t    t['Emacron'] = 667;\n\t    t['ccaron'] = 500;\n\t    t['aring'] = 556;\n\t    t['Ncommaaccent'] = 722;\n\t    t['lacute'] = 222;\n\t    t['agrave'] = 556;\n\t    t['Tcommaaccent'] = 611;\n\t    t['Cacute'] = 722;\n\t    t['atilde'] = 556;\n\t    t['Edotaccent'] = 667;\n\t    t['scaron'] = 500;\n\t    t['scedilla'] = 500;\n\t    t['iacute'] = 278;\n\t    t['lozenge'] = 471;\n\t    t['Rcaron'] = 722;\n\t    t['Gcommaaccent'] = 778;\n\t    t['ucircumflex'] = 556;\n\t    t['acircumflex'] = 556;\n\t    t['Amacron'] = 667;\n\t    t['rcaron'] = 333;\n\t    t['ccedilla'] = 500;\n\t    t['Zdotaccent'] = 611;\n\t    t['Thorn'] = 667;\n\t    t['Omacron'] = 778;\n\t    t['Racute'] = 722;\n\t    t['Sacute'] = 667;\n\t    t['dcaron'] = 643;\n\t    t['Umacron'] = 722;\n\t    t['uring'] = 556;\n\t    t['threesuperior'] = 333;\n\t    t['Ograve'] = 778;\n\t    t['Agrave'] = 667;\n\t    t['Abreve'] = 667;\n\t    t['multiply'] = 584;\n\t    t['uacute'] = 556;\n\t    t['Tcaron'] = 611;\n\t    t['partialdiff'] = 476;\n\t    t['ydieresis'] = 500;\n\t    t['Nacute'] = 722;\n\t    t['icircumflex'] = 278;\n\t    t['Ecircumflex'] = 667;\n\t    t['adieresis'] = 556;\n\t    t['edieresis'] = 556;\n\t    t['cacute'] = 500;\n\t    t['nacute'] = 556;\n\t    t['umacron'] = 556;\n\t    t['Ncaron'] = 722;\n\t    t['Iacute'] = 278;\n\t    t['plusminus'] = 584;\n\t    t['brokenbar'] = 260;\n\t    t['registered'] = 737;\n\t    t['Gbreve'] = 778;\n\t    t['Idotaccent'] = 278;\n\t    t['summation'] = 600;\n\t    t['Egrave'] = 667;\n\t    t['racute'] = 333;\n\t    t['omacron'] = 556;\n\t    t['Zacute'] = 611;\n\t    t['Zcaron'] = 611;\n\t    t['greaterequal'] = 549;\n\t    t['Eth'] = 722;\n\t    t['Ccedilla'] = 722;\n\t    t['lcommaaccent'] = 222;\n\t    t['tcaron'] = 317;\n\t    t['eogonek'] = 556;\n\t    t['Uogonek'] = 722;\n\t    t['Aacute'] = 667;\n\t    t['Adieresis'] = 667;\n\t    t['egrave'] = 556;\n\t    t['zacute'] = 500;\n\t    t['iogonek'] = 222;\n\t    t['Oacute'] = 778;\n\t    t['oacute'] = 556;\n\t    t['amacron'] = 556;\n\t    t['sacute'] = 500;\n\t    t['idieresis'] = 278;\n\t    t['Ocircumflex'] = 778;\n\t    t['Ugrave'] = 722;\n\t    t['Delta'] = 612;\n\t    t['thorn'] = 556;\n\t    t['twosuperior'] = 333;\n\t    t['Odieresis'] = 778;\n\t    t['mu'] = 556;\n\t    t['igrave'] = 278;\n\t    t['ohungarumlaut'] = 556;\n\t    t['Eogonek'] = 667;\n\t    t['dcroat'] = 556;\n\t    t['threequarters'] = 834;\n\t    t['Scedilla'] = 667;\n\t    t['lcaron'] = 299;\n\t    t['Kcommaaccent'] = 667;\n\t    t['Lacute'] = 556;\n\t    t['trademark'] = 1000;\n\t    t['edotaccent'] = 556;\n\t    t['Igrave'] = 278;\n\t    t['Imacron'] = 278;\n\t    t['Lcaron'] = 556;\n\t    t['onehalf'] = 834;\n\t    t['lessequal'] = 549;\n\t    t['ocircumflex'] = 556;\n\t    t['ntilde'] = 556;\n\t    t['Uhungarumlaut'] = 722;\n\t    t['Eacute'] = 667;\n\t    t['emacron'] = 556;\n\t    t['gbreve'] = 556;\n\t    t['onequarter'] = 834;\n\t    t['Scaron'] = 667;\n\t    t['Scommaaccent'] = 667;\n\t    t['Ohungarumlaut'] = 778;\n\t    t['degree'] = 400;\n\t    t['ograve'] = 556;\n\t    t['Ccaron'] = 722;\n\t    t['ugrave'] = 556;\n\t    t['radical'] = 453;\n\t    t['Dcaron'] = 722;\n\t    t['rcommaaccent'] = 333;\n\t    t['Ntilde'] = 722;\n\t    t['otilde'] = 556;\n\t    t['Rcommaaccent'] = 722;\n\t    t['Lcommaaccent'] = 556;\n\t    t['Atilde'] = 667;\n\t    t['Aogonek'] = 667;\n\t    t['Aring'] = 667;\n\t    t['Otilde'] = 778;\n\t    t['zdotaccent'] = 500;\n\t    t['Ecaron'] = 667;\n\t    t['Iogonek'] = 278;\n\t    t['kcommaaccent'] = 500;\n\t    t['minus'] = 584;\n\t    t['Icircumflex'] = 278;\n\t    t['ncaron'] = 556;\n\t    t['tcommaaccent'] = 278;\n\t    t['logicalnot'] = 584;\n\t    t['odieresis'] = 556;\n\t    t['udieresis'] = 556;\n\t    t['notequal'] = 549;\n\t    t['gcommaaccent'] = 556;\n\t    t['eth'] = 556;\n\t    t['zcaron'] = 500;\n\t    t['ncommaaccent'] = 556;\n\t    t['onesuperior'] = 333;\n\t    t['imacron'] = 278;\n\t    t['Euro'] = 556;\n\t  });\n\t  t['Symbol'] = (0, _util.getLookupTableFactory)(function (t) {\n\t    t['space'] = 250;\n\t    t['exclam'] = 333;\n\t    t['universal'] = 713;\n\t    t['numbersign'] = 500;\n\t    t['existential'] = 549;\n\t    t['percent'] = 833;\n\t    t['ampersand'] = 778;\n\t    t['suchthat'] = 439;\n\t    t['parenleft'] = 333;\n\t    t['parenright'] = 333;\n\t    t['asteriskmath'] = 500;\n\t    t['plus'] = 549;\n\t    t['comma'] = 250;\n\t    t['minus'] = 549;\n\t    t['period'] = 250;\n\t    t['slash'] = 278;\n\t    t['zero'] = 500;\n\t    t['one'] = 500;\n\t    t['two'] = 500;\n\t    t['three'] = 500;\n\t    t['four'] = 500;\n\t    t['five'] = 500;\n\t    t['six'] = 500;\n\t    t['seven'] = 500;\n\t    t['eight'] = 500;\n\t    t['nine'] = 500;\n\t    t['colon'] = 278;\n\t    t['semicolon'] = 278;\n\t    t['less'] = 549;\n\t    t['equal'] = 549;\n\t    t['greater'] = 549;\n\t    t['question'] = 444;\n\t    t['congruent'] = 549;\n\t    t['Alpha'] = 722;\n\t    t['Beta'] = 667;\n\t    t['Chi'] = 722;\n\t    t['Delta'] = 612;\n\t    t['Epsilon'] = 611;\n\t    t['Phi'] = 763;\n\t    t['Gamma'] = 603;\n\t    t['Eta'] = 722;\n\t    t['Iota'] = 333;\n\t    t['theta1'] = 631;\n\t    t['Kappa'] = 722;\n\t    t['Lambda'] = 686;\n\t    t['Mu'] = 889;\n\t    t['Nu'] = 722;\n\t    t['Omicron'] = 722;\n\t    t['Pi'] = 768;\n\t    t['Theta'] = 741;\n\t    t['Rho'] = 556;\n\t    t['Sigma'] = 592;\n\t    t['Tau'] = 611;\n\t    t['Upsilon'] = 690;\n\t    t['sigma1'] = 439;\n\t    t['Omega'] = 768;\n\t    t['Xi'] = 645;\n\t    t['Psi'] = 795;\n\t    t['Zeta'] = 611;\n\t    t['bracketleft'] = 333;\n\t    t['therefore'] = 863;\n\t    t['bracketright'] = 333;\n\t    t['perpendicular'] = 658;\n\t    t['underscore'] = 500;\n\t    t['radicalex'] = 500;\n\t    t['alpha'] = 631;\n\t    t['beta'] = 549;\n\t    t['chi'] = 549;\n\t    t['delta'] = 494;\n\t    t['epsilon'] = 439;\n\t    t['phi'] = 521;\n\t    t['gamma'] = 411;\n\t    t['eta'] = 603;\n\t    t['iota'] = 329;\n\t    t['phi1'] = 603;\n\t    t['kappa'] = 549;\n\t    t['lambda'] = 549;\n\t    t['mu'] = 576;\n\t    t['nu'] = 521;\n\t    t['omicron'] = 549;\n\t    t['pi'] = 549;\n\t    t['theta'] = 521;\n\t    t['rho'] = 549;\n\t    t['sigma'] = 603;\n\t    t['tau'] = 439;\n\t    t['upsilon'] = 576;\n\t    t['omega1'] = 713;\n\t    t['omega'] = 686;\n\t    t['xi'] = 493;\n\t    t['psi'] = 686;\n\t    t['zeta'] = 494;\n\t    t['braceleft'] = 480;\n\t    t['bar'] = 200;\n\t    t['braceright'] = 480;\n\t    t['similar'] = 549;\n\t    t['Euro'] = 750;\n\t    t['Upsilon1'] = 620;\n\t    t['minute'] = 247;\n\t    t['lessequal'] = 549;\n\t    t['fraction'] = 167;\n\t    t['infinity'] = 713;\n\t    t['florin'] = 500;\n\t    t['club'] = 753;\n\t    t['diamond'] = 753;\n\t    t['heart'] = 753;\n\t    t['spade'] = 753;\n\t    t['arrowboth'] = 1042;\n\t    t['arrowleft'] = 987;\n\t    t['arrowup'] = 603;\n\t    t['arrowright'] = 987;\n\t    t['arrowdown'] = 603;\n\t    t['degree'] = 400;\n\t    t['plusminus'] = 549;\n\t    t['second'] = 411;\n\t    t['greaterequal'] = 549;\n\t    t['multiply'] = 549;\n\t    t['proportional'] = 713;\n\t    t['partialdiff'] = 494;\n\t    t['bullet'] = 460;\n\t    t['divide'] = 549;\n\t    t['notequal'] = 549;\n\t    t['equivalence'] = 549;\n\t    t['approxequal'] = 549;\n\t    t['ellipsis'] = 1000;\n\t    t['arrowvertex'] = 603;\n\t    t['arrowhorizex'] = 1000;\n\t    t['carriagereturn'] = 658;\n\t    t['aleph'] = 823;\n\t    t['Ifraktur'] = 686;\n\t    t['Rfraktur'] = 795;\n\t    t['weierstrass'] = 987;\n\t    t['circlemultiply'] = 768;\n\t    t['circleplus'] = 768;\n\t    t['emptyset'] = 823;\n\t    t['intersection'] = 768;\n\t    t['union'] = 768;\n\t    t['propersuperset'] = 713;\n\t    t['reflexsuperset'] = 713;\n\t    t['notsubset'] = 713;\n\t    t['propersubset'] = 713;\n\t    t['reflexsubset'] = 713;\n\t    t['element'] = 713;\n\t    t['notelement'] = 713;\n\t    t['angle'] = 768;\n\t    t['gradient'] = 713;\n\t    t['registerserif'] = 790;\n\t    t['copyrightserif'] = 790;\n\t    t['trademarkserif'] = 890;\n\t    t['product'] = 823;\n\t    t['radical'] = 549;\n\t    t['dotmath'] = 250;\n\t    t['logicalnot'] = 713;\n\t    t['logicaland'] = 603;\n\t    t['logicalor'] = 603;\n\t    t['arrowdblboth'] = 1042;\n\t    t['arrowdblleft'] = 987;\n\t    t['arrowdblup'] = 603;\n\t    t['arrowdblright'] = 987;\n\t    t['arrowdbldown'] = 603;\n\t    t['lozenge'] = 494;\n\t    t['angleleft'] = 329;\n\t    t['registersans'] = 790;\n\t    t['copyrightsans'] = 790;\n\t    t['trademarksans'] = 786;\n\t    t['summation'] = 713;\n\t    t['parenlefttp'] = 384;\n\t    t['parenleftex'] = 384;\n\t    t['parenleftbt'] = 384;\n\t    t['bracketlefttp'] = 384;\n\t    t['bracketleftex'] = 384;\n\t    t['bracketleftbt'] = 384;\n\t    t['bracelefttp'] = 494;\n\t    t['braceleftmid'] = 494;\n\t    t['braceleftbt'] = 494;\n\t    t['braceex'] = 494;\n\t    t['angleright'] = 329;\n\t    t['integral'] = 274;\n\t    t['integraltp'] = 686;\n\t    t['integralex'] = 686;\n\t    t['integralbt'] = 686;\n\t    t['parenrighttp'] = 384;\n\t    t['parenrightex'] = 384;\n\t    t['parenrightbt'] = 384;\n\t    t['bracketrighttp'] = 384;\n\t    t['bracketrightex'] = 384;\n\t    t['bracketrightbt'] = 384;\n\t    t['bracerighttp'] = 494;\n\t    t['bracerightmid'] = 494;\n\t    t['bracerightbt'] = 494;\n\t    t['apple'] = 790;\n\t  });\n\t  t['Times-Roman'] = (0, _util.getLookupTableFactory)(function (t) {\n\t    t['space'] = 250;\n\t    t['exclam'] = 333;\n\t    t['quotedbl'] = 408;\n\t    t['numbersign'] = 500;\n\t    t['dollar'] = 500;\n\t    t['percent'] = 833;\n\t    t['ampersand'] = 778;\n\t    t['quoteright'] = 333;\n\t    t['parenleft'] = 333;\n\t    t['parenright'] = 333;\n\t    t['asterisk'] = 500;\n\t    t['plus'] = 564;\n\t    t['comma'] = 250;\n\t    t['hyphen'] = 333;\n\t    t['period'] = 250;\n\t    t['slash'] = 278;\n\t    t['zero'] = 500;\n\t    t['one'] = 500;\n\t    t['two'] = 500;\n\t    t['three'] = 500;\n\t    t['four'] = 500;\n\t    t['five'] = 500;\n\t    t['six'] = 500;\n\t    t['seven'] = 500;\n\t    t['eight'] = 500;\n\t    t['nine'] = 500;\n\t    t['colon'] = 278;\n\t    t['semicolon'] = 278;\n\t    t['less'] = 564;\n\t    t['equal'] = 564;\n\t    t['greater'] = 564;\n\t    t['question'] = 444;\n\t    t['at'] = 921;\n\t    t['A'] = 722;\n\t    t['B'] = 667;\n\t    t['C'] = 667;\n\t    t['D'] = 722;\n\t    t['E'] = 611;\n\t    t['F'] = 556;\n\t    t['G'] = 722;\n\t    t['H'] = 722;\n\t    t['I'] = 333;\n\t    t['J'] = 389;\n\t    t['K'] = 722;\n\t    t['L'] = 611;\n\t    t['M'] = 889;\n\t    t['N'] = 722;\n\t    t['O'] = 722;\n\t    t['P'] = 556;\n\t    t['Q'] = 722;\n\t    t['R'] = 667;\n\t    t['S'] = 556;\n\t    t['T'] = 611;\n\t    t['U'] = 722;\n\t    t['V'] = 722;\n\t    t['W'] = 944;\n\t    t['X'] = 722;\n\t    t['Y'] = 722;\n\t    t['Z'] = 611;\n\t    t['bracketleft'] = 333;\n\t    t['backslash'] = 278;\n\t    t['bracketright'] = 333;\n\t    t['asciicircum'] = 469;\n\t    t['underscore'] = 500;\n\t    t['quoteleft'] = 333;\n\t    t['a'] = 444;\n\t    t['b'] = 500;\n\t    t['c'] = 444;\n\t    t['d'] = 500;\n\t    t['e'] = 444;\n\t    t['f'] = 333;\n\t    t['g'] = 500;\n\t    t['h'] = 500;\n\t    t['i'] = 278;\n\t    t['j'] = 278;\n\t    t['k'] = 500;\n\t    t['l'] = 278;\n\t    t['m'] = 778;\n\t    t['n'] = 500;\n\t    t['o'] = 500;\n\t    t['p'] = 500;\n\t    t['q'] = 500;\n\t    t['r'] = 333;\n\t    t['s'] = 389;\n\t    t['t'] = 278;\n\t    t['u'] = 500;\n\t    t['v'] = 500;\n\t    t['w'] = 722;\n\t    t['x'] = 500;\n\t    t['y'] = 500;\n\t    t['z'] = 444;\n\t    t['braceleft'] = 480;\n\t    t['bar'] = 200;\n\t    t['braceright'] = 480;\n\t    t['asciitilde'] = 541;\n\t    t['exclamdown'] = 333;\n\t    t['cent'] = 500;\n\t    t['sterling'] = 500;\n\t    t['fraction'] = 167;\n\t    t['yen'] = 500;\n\t    t['florin'] = 500;\n\t    t['section'] = 500;\n\t    t['currency'] = 500;\n\t    t['quotesingle'] = 180;\n\t    t['quotedblleft'] = 444;\n\t    t['guillemotleft'] = 500;\n\t    t['guilsinglleft'] = 333;\n\t    t['guilsinglright'] = 333;\n\t    t['fi'] = 556;\n\t    t['fl'] = 556;\n\t    t['endash'] = 500;\n\t    t['dagger'] = 500;\n\t    t['daggerdbl'] = 500;\n\t    t['periodcentered'] = 250;\n\t    t['paragraph'] = 453;\n\t    t['bullet'] = 350;\n\t    t['quotesinglbase'] = 333;\n\t    t['quotedblbase'] = 444;\n\t    t['quotedblright'] = 444;\n\t    t['guillemotright'] = 500;\n\t    t['ellipsis'] = 1000;\n\t    t['perthousand'] = 1000;\n\t    t['questiondown'] = 444;\n\t    t['grave'] = 333;\n\t    t['acute'] = 333;\n\t    t['circumflex'] = 333;\n\t    t['tilde'] = 333;\n\t    t['macron'] = 333;\n\t    t['breve'] = 333;\n\t    t['dotaccent'] = 333;\n\t    t['dieresis'] = 333;\n\t    t['ring'] = 333;\n\t    t['cedilla'] = 333;\n\t    t['hungarumlaut'] = 333;\n\t    t['ogonek'] = 333;\n\t    t['caron'] = 333;\n\t    t['emdash'] = 1000;\n\t    t['AE'] = 889;\n\t    t['ordfeminine'] = 276;\n\t    t['Lslash'] = 611;\n\t    t['Oslash'] = 722;\n\t    t['OE'] = 889;\n\t    t['ordmasculine'] = 310;\n\t    t['ae'] = 667;\n\t    t['dotlessi'] = 278;\n\t    t['lslash'] = 278;\n\t    t['oslash'] = 500;\n\t    t['oe'] = 722;\n\t    t['germandbls'] = 500;\n\t    t['Idieresis'] = 333;\n\t    t['eacute'] = 444;\n\t    t['abreve'] = 444;\n\t    t['uhungarumlaut'] = 500;\n\t    t['ecaron'] = 444;\n\t    t['Ydieresis'] = 722;\n\t    t['divide'] = 564;\n\t    t['Yacute'] = 722;\n\t    t['Acircumflex'] = 722;\n\t    t['aacute'] = 444;\n\t    t['Ucircumflex'] = 722;\n\t    t['yacute'] = 500;\n\t    t['scommaaccent'] = 389;\n\t    t['ecircumflex'] = 444;\n\t    t['Uring'] = 722;\n\t    t['Udieresis'] = 722;\n\t    t['aogonek'] = 444;\n\t    t['Uacute'] = 722;\n\t    t['uogonek'] = 500;\n\t    t['Edieresis'] = 611;\n\t    t['Dcroat'] = 722;\n\t    t['commaaccent'] = 250;\n\t    t['copyright'] = 760;\n\t    t['Emacron'] = 611;\n\t    t['ccaron'] = 444;\n\t    t['aring'] = 444;\n\t    t['Ncommaaccent'] = 722;\n\t    t['lacute'] = 278;\n\t    t['agrave'] = 444;\n\t    t['Tcommaaccent'] = 611;\n\t    t['Cacute'] = 667;\n\t    t['atilde'] = 444;\n\t    t['Edotaccent'] = 611;\n\t    t['scaron'] = 389;\n\t    t['scedilla'] = 389;\n\t    t['iacute'] = 278;\n\t    t['lozenge'] = 471;\n\t    t['Rcaron'] = 667;\n\t    t['Gcommaaccent'] = 722;\n\t    t['ucircumflex'] = 500;\n\t    t['acircumflex'] = 444;\n\t    t['Amacron'] = 722;\n\t    t['rcaron'] = 333;\n\t    t['ccedilla'] = 444;\n\t    t['Zdotaccent'] = 611;\n\t    t['Thorn'] = 556;\n\t    t['Omacron'] = 722;\n\t    t['Racute'] = 667;\n\t    t['Sacute'] = 556;\n\t    t['dcaron'] = 588;\n\t    t['Umacron'] = 722;\n\t    t['uring'] = 500;\n\t    t['threesuperior'] = 300;\n\t    t['Ograve'] = 722;\n\t    t['Agrave'] = 722;\n\t    t['Abreve'] = 722;\n\t    t['multiply'] = 564;\n\t    t['uacute'] = 500;\n\t    t['Tcaron'] = 611;\n\t    t['partialdiff'] = 476;\n\t    t['ydieresis'] = 500;\n\t    t['Nacute'] = 722;\n\t    t['icircumflex'] = 278;\n\t    t['Ecircumflex'] = 611;\n\t    t['adieresis'] = 444;\n\t    t['edieresis'] = 444;\n\t    t['cacute'] = 444;\n\t    t['nacute'] = 500;\n\t    t['umacron'] = 500;\n\t    t['Ncaron'] = 722;\n\t    t['Iacute'] = 333;\n\t    t['plusminus'] = 564;\n\t    t['brokenbar'] = 200;\n\t    t['registered'] = 760;\n\t    t['Gbreve'] = 722;\n\t    t['Idotaccent'] = 333;\n\t    t['summation'] = 600;\n\t    t['Egrave'] = 611;\n\t    t['racute'] = 333;\n\t    t['omacron'] = 500;\n\t    t['Zacute'] = 611;\n\t    t['Zcaron'] = 611;\n\t    t['greaterequal'] = 549;\n\t    t['Eth'] = 722;\n\t    t['Ccedilla'] = 667;\n\t    t['lcommaaccent'] = 278;\n\t    t['tcaron'] = 326;\n\t    t['eogonek'] = 444;\n\t    t['Uogonek'] = 722;\n\t    t['Aacute'] = 722;\n\t    t['Adieresis'] = 722;\n\t    t['egrave'] = 444;\n\t    t['zacute'] = 444;\n\t    t['iogonek'] = 278;\n\t    t['Oacute'] = 722;\n\t    t['oacute'] = 500;\n\t    t['amacron'] = 444;\n\t    t['sacute'] = 389;\n\t    t['idieresis'] = 278;\n\t    t['Ocircumflex'] = 722;\n\t    t['Ugrave'] = 722;\n\t    t['Delta'] = 612;\n\t    t['thorn'] = 500;\n\t    t['twosuperior'] = 300;\n\t    t['Odieresis'] = 722;\n\t    t['mu'] = 500;\n\t    t['igrave'] = 278;\n\t    t['ohungarumlaut'] = 500;\n\t    t['Eogonek'] = 611;\n\t    t['dcroat'] = 500;\n\t    t['threequarters'] = 750;\n\t    t['Scedilla'] = 556;\n\t    t['lcaron'] = 344;\n\t    t['Kcommaaccent'] = 722;\n\t    t['Lacute'] = 611;\n\t    t['trademark'] = 980;\n\t    t['edotaccent'] = 444;\n\t    t['Igrave'] = 333;\n\t    t['Imacron'] = 333;\n\t    t['Lcaron'] = 611;\n\t    t['onehalf'] = 750;\n\t    t['lessequal'] = 549;\n\t    t['ocircumflex'] = 500;\n\t    t['ntilde'] = 500;\n\t    t['Uhungarumlaut'] = 722;\n\t    t['Eacute'] = 611;\n\t    t['emacron'] = 444;\n\t    t['gbreve'] = 500;\n\t    t['onequarter'] = 750;\n\t    t['Scaron'] = 556;\n\t    t['Scommaaccent'] = 556;\n\t    t['Ohungarumlaut'] = 722;\n\t    t['degree'] = 400;\n\t    t['ograve'] = 500;\n\t    t['Ccaron'] = 667;\n\t    t['ugrave'] = 500;\n\t    t['radical'] = 453;\n\t    t['Dcaron'] = 722;\n\t    t['rcommaaccent'] = 333;\n\t    t['Ntilde'] = 722;\n\t    t['otilde'] = 500;\n\t    t['Rcommaaccent'] = 667;\n\t    t['Lcommaaccent'] = 611;\n\t    t['Atilde'] = 722;\n\t    t['Aogonek'] = 722;\n\t    t['Aring'] = 722;\n\t    t['Otilde'] = 722;\n\t    t['zdotaccent'] = 444;\n\t    t['Ecaron'] = 611;\n\t    t['Iogonek'] = 333;\n\t    t['kcommaaccent'] = 500;\n\t    t['minus'] = 564;\n\t    t['Icircumflex'] = 333;\n\t    t['ncaron'] = 500;\n\t    t['tcommaaccent'] = 278;\n\t    t['logicalnot'] = 564;\n\t    t['odieresis'] = 500;\n\t    t['udieresis'] = 500;\n\t    t['notequal'] = 549;\n\t    t['gcommaaccent'] = 500;\n\t    t['eth'] = 500;\n\t    t['zcaron'] = 444;\n\t    t['ncommaaccent'] = 500;\n\t    t['onesuperior'] = 300;\n\t    t['imacron'] = 278;\n\t    t['Euro'] = 500;\n\t  });\n\t  t['Times-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n\t    t['space'] = 250;\n\t    t['exclam'] = 333;\n\t    t['quotedbl'] = 555;\n\t    t['numbersign'] = 500;\n\t    t['dollar'] = 500;\n\t    t['percent'] = 1000;\n\t    t['ampersand'] = 833;\n\t    t['quoteright'] = 333;\n\t    t['parenleft'] = 333;\n\t    t['parenright'] = 333;\n\t    t['asterisk'] = 500;\n\t    t['plus'] = 570;\n\t    t['comma'] = 250;\n\t    t['hyphen'] = 333;\n\t    t['period'] = 250;\n\t    t['slash'] = 278;\n\t    t['zero'] = 500;\n\t    t['one'] = 500;\n\t    t['two'] = 500;\n\t    t['three'] = 500;\n\t    t['four'] = 500;\n\t    t['five'] = 500;\n\t    t['six'] = 500;\n\t    t['seven'] = 500;\n\t    t['eight'] = 500;\n\t    t['nine'] = 500;\n\t    t['colon'] = 333;\n\t    t['semicolon'] = 333;\n\t    t['less'] = 570;\n\t    t['equal'] = 570;\n\t    t['greater'] = 570;\n\t    t['question'] = 500;\n\t    t['at'] = 930;\n\t    t['A'] = 722;\n\t    t['B'] = 667;\n\t    t['C'] = 722;\n\t    t['D'] = 722;\n\t    t['E'] = 667;\n\t    t['F'] = 611;\n\t    t['G'] = 778;\n\t    t['H'] = 778;\n\t    t['I'] = 389;\n\t    t['J'] = 500;\n\t    t['K'] = 778;\n\t    t['L'] = 667;\n\t    t['M'] = 944;\n\t    t['N'] = 722;\n\t    t['O'] = 778;\n\t    t['P'] = 611;\n\t    t['Q'] = 778;\n\t    t['R'] = 722;\n\t    t['S'] = 556;\n\t    t['T'] = 667;\n\t    t['U'] = 722;\n\t    t['V'] = 722;\n\t    t['W'] = 1000;\n\t    t['X'] = 722;\n\t    t['Y'] = 722;\n\t    t['Z'] = 667;\n\t    t['bracketleft'] = 333;\n\t    t['backslash'] = 278;\n\t    t['bracketright'] = 333;\n\t    t['asciicircum'] = 581;\n\t    t['underscore'] = 500;\n\t    t['quoteleft'] = 333;\n\t    t['a'] = 500;\n\t    t['b'] = 556;\n\t    t['c'] = 444;\n\t    t['d'] = 556;\n\t    t['e'] = 444;\n\t    t['f'] = 333;\n\t    t['g'] = 500;\n\t    t['h'] = 556;\n\t    t['i'] = 278;\n\t    t['j'] = 333;\n\t    t['k'] = 556;\n\t    t['l'] = 278;\n\t    t['m'] = 833;\n\t    t['n'] = 556;\n\t    t['o'] = 500;\n\t    t['p'] = 556;\n\t    t['q'] = 556;\n\t    t['r'] = 444;\n\t    t['s'] = 389;\n\t    t['t'] = 333;\n\t    t['u'] = 556;\n\t    t['v'] = 500;\n\t    t['w'] = 722;\n\t    t['x'] = 500;\n\t    t['y'] = 500;\n\t    t['z'] = 444;\n\t    t['braceleft'] = 394;\n\t    t['bar'] = 220;\n\t    t['braceright'] = 394;\n\t    t['asciitilde'] = 520;\n\t    t['exclamdown'] = 333;\n\t    t['cent'] = 500;\n\t    t['sterling'] = 500;\n\t    t['fraction'] = 167;\n\t    t['yen'] = 500;\n\t    t['florin'] = 500;\n\t    t['section'] = 500;\n\t    t['currency'] = 500;\n\t    t['quotesingle'] = 278;\n\t    t['quotedblleft'] = 500;\n\t    t['guillemotleft'] = 500;\n\t    t['guilsinglleft'] = 333;\n\t    t['guilsinglright'] = 333;\n\t    t['fi'] = 556;\n\t    t['fl'] = 556;\n\t    t['endash'] = 500;\n\t    t['dagger'] = 500;\n\t    t['daggerdbl'] = 500;\n\t    t['periodcentered'] = 250;\n\t    t['paragraph'] = 540;\n\t    t['bullet'] = 350;\n\t    t['quotesinglbase'] = 333;\n\t    t['quotedblbase'] = 500;\n\t    t['quotedblright'] = 500;\n\t    t['guillemotright'] = 500;\n\t    t['ellipsis'] = 1000;\n\t    t['perthousand'] = 1000;\n\t    t['questiondown'] = 500;\n\t    t['grave'] = 333;\n\t    t['acute'] = 333;\n\t    t['circumflex'] = 333;\n\t    t['tilde'] = 333;\n\t    t['macron'] = 333;\n\t    t['breve'] = 333;\n\t    t['dotaccent'] = 333;\n\t    t['dieresis'] = 333;\n\t    t['ring'] = 333;\n\t    t['cedilla'] = 333;\n\t    t['hungarumlaut'] = 333;\n\t    t['ogonek'] = 333;\n\t    t['caron'] = 333;\n\t    t['emdash'] = 1000;\n\t    t['AE'] = 1000;\n\t    t['ordfeminine'] = 300;\n\t    t['Lslash'] = 667;\n\t    t['Oslash'] = 778;\n\t    t['OE'] = 1000;\n\t    t['ordmasculine'] = 330;\n\t    t['ae'] = 722;\n\t    t['dotlessi'] = 278;\n\t    t['lslash'] = 278;\n\t    t['oslash'] = 500;\n\t    t['oe'] = 722;\n\t    t['germandbls'] = 556;\n\t    t['Idieresis'] = 389;\n\t    t['eacute'] = 444;\n\t    t['abreve'] = 500;\n\t    t['uhungarumlaut'] = 556;\n\t    t['ecaron'] = 444;\n\t    t['Ydieresis'] = 722;\n\t    t['divide'] = 570;\n\t    t['Yacute'] = 722;\n\t    t['Acircumflex'] = 722;\n\t    t['aacute'] = 500;\n\t    t['Ucircumflex'] = 722;\n\t    t['yacute'] = 500;\n\t    t['scommaaccent'] = 389;\n\t    t['ecircumflex'] = 444;\n\t    t['Uring'] = 722;\n\t    t['Udieresis'] = 722;\n\t    t['aogonek'] = 500;\n\t    t['Uacute'] = 722;\n\t    t['uogonek'] = 556;\n\t    t['Edieresis'] = 667;\n\t    t['Dcroat'] = 722;\n\t    t['commaaccent'] = 250;\n\t    t['copyright'] = 747;\n\t    t['Emacron'] = 667;\n\t    t['ccaron'] = 444;\n\t    t['aring'] = 500;\n\t    t['Ncommaaccent'] = 722;\n\t    t['lacute'] = 278;\n\t    t['agrave'] = 500;\n\t    t['Tcommaaccent'] = 667;\n\t    t['Cacute'] = 722;\n\t    t['atilde'] = 500;\n\t    t['Edotaccent'] = 667;\n\t    t['scaron'] = 389;\n\t    t['scedilla'] = 389;\n\t    t['iacute'] = 278;\n\t    t['lozenge'] = 494;\n\t    t['Rcaron'] = 722;\n\t    t['Gcommaaccent'] = 778;\n\t    t['ucircumflex'] = 556;\n\t    t['acircumflex'] = 500;\n\t    t['Amacron'] = 722;\n\t    t['rcaron'] = 444;\n\t    t['ccedilla'] = 444;\n\t    t['Zdotaccent'] = 667;\n\t    t['Thorn'] = 611;\n\t    t['Omacron'] = 778;\n\t    t['Racute'] = 722;\n\t    t['Sacute'] = 556;\n\t    t['dcaron'] = 672;\n\t    t['Umacron'] = 722;\n\t    t['uring'] = 556;\n\t    t['threesuperior'] = 300;\n\t    t['Ograve'] = 778;\n\t    t['Agrave'] = 722;\n\t    t['Abreve'] = 722;\n\t    t['multiply'] = 570;\n\t    t['uacute'] = 556;\n\t    t['Tcaron'] = 667;\n\t    t['partialdiff'] = 494;\n\t    t['ydieresis'] = 500;\n\t    t['Nacute'] = 722;\n\t    t['icircumflex'] = 278;\n\t    t['Ecircumflex'] = 667;\n\t    t['adieresis'] = 500;\n\t    t['edieresis'] = 444;\n\t    t['cacute'] = 444;\n\t    t['nacute'] = 556;\n\t    t['umacron'] = 556;\n\t    t['Ncaron'] = 722;\n\t    t['Iacute'] = 389;\n\t    t['plusminus'] = 570;\n\t    t['brokenbar'] = 220;\n\t    t['registered'] = 747;\n\t    t['Gbreve'] = 778;\n\t    t['Idotaccent'] = 389;\n\t    t['summation'] = 600;\n\t    t['Egrave'] = 667;\n\t    t['racute'] = 444;\n\t    t['omacron'] = 500;\n\t    t['Zacute'] = 667;\n\t    t['Zcaron'] = 667;\n\t    t['greaterequal'] = 549;\n\t    t['Eth'] = 722;\n\t    t['Ccedilla'] = 722;\n\t    t['lcommaaccent'] = 278;\n\t    t['tcaron'] = 416;\n\t    t['eogonek'] = 444;\n\t    t['Uogonek'] = 722;\n\t    t['Aacute'] = 722;\n\t    t['Adieresis'] = 722;\n\t    t['egrave'] = 444;\n\t    t['zacute'] = 444;\n\t    t['iogonek'] = 278;\n\t    t['Oacute'] = 778;\n\t    t['oacute'] = 500;\n\t    t['amacron'] = 500;\n\t    t['sacute'] = 389;\n\t    t['idieresis'] = 278;\n\t    t['Ocircumflex'] = 778;\n\t    t['Ugrave'] = 722;\n\t    t['Delta'] = 612;\n\t    t['thorn'] = 556;\n\t    t['twosuperior'] = 300;\n\t    t['Odieresis'] = 778;\n\t    t['mu'] = 556;\n\t    t['igrave'] = 278;\n\t    t['ohungarumlaut'] = 500;\n\t    t['Eogonek'] = 667;\n\t    t['dcroat'] = 556;\n\t    t['threequarters'] = 750;\n\t    t['Scedilla'] = 556;\n\t    t['lcaron'] = 394;\n\t    t['Kcommaaccent'] = 778;\n\t    t['Lacute'] = 667;\n\t    t['trademark'] = 1000;\n\t    t['edotaccent'] = 444;\n\t    t['Igrave'] = 389;\n\t    t['Imacron'] = 389;\n\t    t['Lcaron'] = 667;\n\t    t['onehalf'] = 750;\n\t    t['lessequal'] = 549;\n\t    t['ocircumflex'] = 500;\n\t    t['ntilde'] = 556;\n\t    t['Uhungarumlaut'] = 722;\n\t    t['Eacute'] = 667;\n\t    t['emacron'] = 444;\n\t    t['gbreve'] = 500;\n\t    t['onequarter'] = 750;\n\t    t['Scaron'] = 556;\n\t    t['Scommaaccent'] = 556;\n\t    t['Ohungarumlaut'] = 778;\n\t    t['degree'] = 400;\n\t    t['ograve'] = 500;\n\t    t['Ccaron'] = 722;\n\t    t['ugrave'] = 556;\n\t    t['radical'] = 549;\n\t    t['Dcaron'] = 722;\n\t    t['rcommaaccent'] = 444;\n\t    t['Ntilde'] = 722;\n\t    t['otilde'] = 500;\n\t    t['Rcommaaccent'] = 722;\n\t    t['Lcommaaccent'] = 667;\n\t    t['Atilde'] = 722;\n\t    t['Aogonek'] = 722;\n\t    t['Aring'] = 722;\n\t    t['Otilde'] = 778;\n\t    t['zdotaccent'] = 444;\n\t    t['Ecaron'] = 667;\n\t    t['Iogonek'] = 389;\n\t    t['kcommaaccent'] = 556;\n\t    t['minus'] = 570;\n\t    t['Icircumflex'] = 389;\n\t    t['ncaron'] = 556;\n\t    t['tcommaaccent'] = 333;\n\t    t['logicalnot'] = 570;\n\t    t['odieresis'] = 500;\n\t    t['udieresis'] = 556;\n\t    t['notequal'] = 549;\n\t    t['gcommaaccent'] = 500;\n\t    t['eth'] = 500;\n\t    t['zcaron'] = 444;\n\t    t['ncommaaccent'] = 556;\n\t    t['onesuperior'] = 300;\n\t    t['imacron'] = 278;\n\t    t['Euro'] = 500;\n\t  });\n\t  t['Times-BoldItalic'] = (0, _util.getLookupTableFactory)(function (t) {\n\t    t['space'] = 250;\n\t    t['exclam'] = 389;\n\t    t['quotedbl'] = 555;\n\t    t['numbersign'] = 500;\n\t    t['dollar'] = 500;\n\t    t['percent'] = 833;\n\t    t['ampersand'] = 778;\n\t    t['quoteright'] = 333;\n\t    t['parenleft'] = 333;\n\t    t['parenright'] = 333;\n\t    t['asterisk'] = 500;\n\t    t['plus'] = 570;\n\t    t['comma'] = 250;\n\t    t['hyphen'] = 333;\n\t    t['period'] = 250;\n\t    t['slash'] = 278;\n\t    t['zero'] = 500;\n\t    t['one'] = 500;\n\t    t['two'] = 500;\n\t    t['three'] = 500;\n\t    t['four'] = 500;\n\t    t['five'] = 500;\n\t    t['six'] = 500;\n\t    t['seven'] = 500;\n\t    t['eight'] = 500;\n\t    t['nine'] = 500;\n\t    t['colon'] = 333;\n\t    t['semicolon'] = 333;\n\t    t['less'] = 570;\n\t    t['equal'] = 570;\n\t    t['greater'] = 570;\n\t    t['question'] = 500;\n\t    t['at'] = 832;\n\t    t['A'] = 667;\n\t    t['B'] = 667;\n\t    t['C'] = 667;\n\t    t['D'] = 722;\n\t    t['E'] = 667;\n\t    t['F'] = 667;\n\t    t['G'] = 722;\n\t    t['H'] = 778;\n\t    t['I'] = 389;\n\t    t['J'] = 500;\n\t    t['K'] = 667;\n\t    t['L'] = 611;\n\t    t['M'] = 889;\n\t    t['N'] = 722;\n\t    t['O'] = 722;\n\t    t['P'] = 611;\n\t    t['Q'] = 722;\n\t    t['R'] = 667;\n\t    t['S'] = 556;\n\t    t['T'] = 611;\n\t    t['U'] = 722;\n\t    t['V'] = 667;\n\t    t['W'] = 889;\n\t    t['X'] = 667;\n\t    t['Y'] = 611;\n\t    t['Z'] = 611;\n\t    t['bracketleft'] = 333;\n\t    t['backslash'] = 278;\n\t    t['bracketright'] = 333;\n\t    t['asciicircum'] = 570;\n\t    t['underscore'] = 500;\n\t    t['quoteleft'] = 333;\n\t    t['a'] = 500;\n\t    t['b'] = 500;\n\t    t['c'] = 444;\n\t    t['d'] = 500;\n\t    t['e'] = 444;\n\t    t['f'] = 333;\n\t    t['g'] = 500;\n\t    t['h'] = 556;\n\t    t['i'] = 278;\n\t    t['j'] = 278;\n\t    t['k'] = 500;\n\t    t['l'] = 278;\n\t    t['m'] = 778;\n\t    t['n'] = 556;\n\t    t['o'] = 500;\n\t    t['p'] = 500;\n\t    t['q'] = 500;\n\t    t['r'] = 389;\n\t    t['s'] = 389;\n\t    t['t'] = 278;\n\t    t['u'] = 556;\n\t    t['v'] = 444;\n\t    t['w'] = 667;\n\t    t['x'] = 500;\n\t    t['y'] = 444;\n\t    t['z'] = 389;\n\t    t['braceleft'] = 348;\n\t    t['bar'] = 220;\n\t    t['braceright'] = 348;\n\t    t['asciitilde'] = 570;\n\t    t['exclamdown'] = 389;\n\t    t['cent'] = 500;\n\t    t['sterling'] = 500;\n\t    t['fraction'] = 167;\n\t    t['yen'] = 500;\n\t    t['florin'] = 500;\n\t    t['section'] = 500;\n\t    t['currency'] = 500;\n\t    t['quotesingle'] = 278;\n\t    t['quotedblleft'] = 500;\n\t    t['guillemotleft'] = 500;\n\t    t['guilsinglleft'] = 333;\n\t    t['guilsinglright'] = 333;\n\t    t['fi'] = 556;\n\t    t['fl'] = 556;\n\t    t['endash'] = 500;\n\t    t['dagger'] = 500;\n\t    t['daggerdbl'] = 500;\n\t    t['periodcentered'] = 250;\n\t    t['paragraph'] = 500;\n\t    t['bullet'] = 350;\n\t    t['quotesinglbase'] = 333;\n\t    t['quotedblbase'] = 500;\n\t    t['quotedblright'] = 500;\n\t    t['guillemotright'] = 500;\n\t    t['ellipsis'] = 1000;\n\t    t['perthousand'] = 1000;\n\t    t['questiondown'] = 500;\n\t    t['grave'] = 333;\n\t    t['acute'] = 333;\n\t    t['circumflex'] = 333;\n\t    t['tilde'] = 333;\n\t    t['macron'] = 333;\n\t    t['breve'] = 333;\n\t    t['dotaccent'] = 333;\n\t    t['dieresis'] = 333;\n\t    t['ring'] = 333;\n\t    t['cedilla'] = 333;\n\t    t['hungarumlaut'] = 333;\n\t    t['ogonek'] = 333;\n\t    t['caron'] = 333;\n\t    t['emdash'] = 1000;\n\t    t['AE'] = 944;\n\t    t['ordfeminine'] = 266;\n\t    t['Lslash'] = 611;\n\t    t['Oslash'] = 722;\n\t    t['OE'] = 944;\n\t    t['ordmasculine'] = 300;\n\t    t['ae'] = 722;\n\t    t['dotlessi'] = 278;\n\t    t['lslash'] = 278;\n\t    t['oslash'] = 500;\n\t    t['oe'] = 722;\n\t    t['germandbls'] = 500;\n\t    t['Idieresis'] = 389;\n\t    t['eacute'] = 444;\n\t    t['abreve'] = 500;\n\t    t['uhungarumlaut'] = 556;\n\t    t['ecaron'] = 444;\n\t    t['Ydieresis'] = 611;\n\t    t['divide'] = 570;\n\t    t['Yacute'] = 611;\n\t    t['Acircumflex'] = 667;\n\t    t['aacute'] = 500;\n\t    t['Ucircumflex'] = 722;\n\t    t['yacute'] = 444;\n\t    t['scommaaccent'] = 389;\n\t    t['ecircumflex'] = 444;\n\t    t['Uring'] = 722;\n\t    t['Udieresis'] = 722;\n\t    t['aogonek'] = 500;\n\t    t['Uacute'] = 722;\n\t    t['uogonek'] = 556;\n\t    t['Edieresis'] = 667;\n\t    t['Dcroat'] = 722;\n\t    t['commaaccent'] = 250;\n\t    t['copyright'] = 747;\n\t    t['Emacron'] = 667;\n\t    t['ccaron'] = 444;\n\t    t['aring'] = 500;\n\t    t['Ncommaaccent'] = 722;\n\t    t['lacute'] = 278;\n\t    t['agrave'] = 500;\n\t    t['Tcommaaccent'] = 611;\n\t    t['Cacute'] = 667;\n\t    t['atilde'] = 500;\n\t    t['Edotaccent'] = 667;\n\t    t['scaron'] = 389;\n\t    t['scedilla'] = 389;\n\t    t['iacute'] = 278;\n\t    t['lozenge'] = 494;\n\t    t['Rcaron'] = 667;\n\t    t['Gcommaaccent'] = 722;\n\t    t['ucircumflex'] = 556;\n\t    t['acircumflex'] = 500;\n\t    t['Amacron'] = 667;\n\t    t['rcaron'] = 389;\n\t    t['ccedilla'] = 444;\n\t    t['Zdotaccent'] = 611;\n\t    t['Thorn'] = 611;\n\t    t['Omacron'] = 722;\n\t    t['Racute'] = 667;\n\t    t['Sacute'] = 556;\n\t    t['dcaron'] = 608;\n\t    t['Umacron'] = 722;\n\t    t['uring'] = 556;\n\t    t['threesuperior'] = 300;\n\t    t['Ograve'] = 722;\n\t    t['Agrave'] = 667;\n\t    t['Abreve'] = 667;\n\t    t['multiply'] = 570;\n\t    t['uacute'] = 556;\n\t    t['Tcaron'] = 611;\n\t    t['partialdiff'] = 494;\n\t    t['ydieresis'] = 444;\n\t    t['Nacute'] = 722;\n\t    t['icircumflex'] = 278;\n\t    t['Ecircumflex'] = 667;\n\t    t['adieresis'] = 500;\n\t    t['edieresis'] = 444;\n\t    t['cacute'] = 444;\n\t    t['nacute'] = 556;\n\t    t['umacron'] = 556;\n\t    t['Ncaron'] = 722;\n\t    t['Iacute'] = 389;\n\t    t['plusminus'] = 570;\n\t    t['brokenbar'] = 220;\n\t    t['registered'] = 747;\n\t    t['Gbreve'] = 722;\n\t    t['Idotaccent'] = 389;\n\t    t['summation'] = 600;\n\t    t['Egrave'] = 667;\n\t    t['racute'] = 389;\n\t    t['omacron'] = 500;\n\t    t['Zacute'] = 611;\n\t    t['Zcaron'] = 611;\n\t    t['greaterequal'] = 549;\n\t    t['Eth'] = 722;\n\t    t['Ccedilla'] = 667;\n\t    t['lcommaaccent'] = 278;\n\t    t['tcaron'] = 366;\n\t    t['eogonek'] = 444;\n\t    t['Uogonek'] = 722;\n\t    t['Aacute'] = 667;\n\t    t['Adieresis'] = 667;\n\t    t['egrave'] = 444;\n\t    t['zacute'] = 389;\n\t    t['iogonek'] = 278;\n\t    t['Oacute'] = 722;\n\t    t['oacute'] = 500;\n\t    t['amacron'] = 500;\n\t    t['sacute'] = 389;\n\t    t['idieresis'] = 278;\n\t    t['Ocircumflex'] = 722;\n\t    t['Ugrave'] = 722;\n\t    t['Delta'] = 612;\n\t    t['thorn'] = 500;\n\t    t['twosuperior'] = 300;\n\t    t['Odieresis'] = 722;\n\t    t['mu'] = 576;\n\t    t['igrave'] = 278;\n\t    t['ohungarumlaut'] = 500;\n\t    t['Eogonek'] = 667;\n\t    t['dcroat'] = 500;\n\t    t['threequarters'] = 750;\n\t    t['Scedilla'] = 556;\n\t    t['lcaron'] = 382;\n\t    t['Kcommaaccent'] = 667;\n\t    t['Lacute'] = 611;\n\t    t['trademark'] = 1000;\n\t    t['edotaccent'] = 444;\n\t    t['Igrave'] = 389;\n\t    t['Imacron'] = 389;\n\t    t['Lcaron'] = 611;\n\t    t['onehalf'] = 750;\n\t    t['lessequal'] = 549;\n\t    t['ocircumflex'] = 500;\n\t    t['ntilde'] = 556;\n\t    t['Uhungarumlaut'] = 722;\n\t    t['Eacute'] = 667;\n\t    t['emacron'] = 444;\n\t    t['gbreve'] = 500;\n\t    t['onequarter'] = 750;\n\t    t['Scaron'] = 556;\n\t    t['Scommaaccent'] = 556;\n\t    t['Ohungarumlaut'] = 722;\n\t    t['degree'] = 400;\n\t    t['ograve'] = 500;\n\t    t['Ccaron'] = 667;\n\t    t['ugrave'] = 556;\n\t    t['radical'] = 549;\n\t    t['Dcaron'] = 722;\n\t    t['rcommaaccent'] = 389;\n\t    t['Ntilde'] = 722;\n\t    t['otilde'] = 500;\n\t    t['Rcommaaccent'] = 667;\n\t    t['Lcommaaccent'] = 611;\n\t    t['Atilde'] = 667;\n\t    t['Aogonek'] = 667;\n\t    t['Aring'] = 667;\n\t    t['Otilde'] = 722;\n\t    t['zdotaccent'] = 389;\n\t    t['Ecaron'] = 667;\n\t    t['Iogonek'] = 389;\n\t    t['kcommaaccent'] = 500;\n\t    t['minus'] = 606;\n\t    t['Icircumflex'] = 389;\n\t    t['ncaron'] = 556;\n\t    t['tcommaaccent'] = 278;\n\t    t['logicalnot'] = 606;\n\t    t['odieresis'] = 500;\n\t    t['udieresis'] = 556;\n\t    t['notequal'] = 549;\n\t    t['gcommaaccent'] = 500;\n\t    t['eth'] = 500;\n\t    t['zcaron'] = 389;\n\t    t['ncommaaccent'] = 556;\n\t    t['onesuperior'] = 300;\n\t    t['imacron'] = 278;\n\t    t['Euro'] = 500;\n\t  });\n\t  t['Times-Italic'] = (0, _util.getLookupTableFactory)(function (t) {\n\t    t['space'] = 250;\n\t    t['exclam'] = 333;\n\t    t['quotedbl'] = 420;\n\t    t['numbersign'] = 500;\n\t    t['dollar'] = 500;\n\t    t['percent'] = 833;\n\t    t['ampersand'] = 778;\n\t    t['quoteright'] = 333;\n\t    t['parenleft'] = 333;\n\t    t['parenright'] = 333;\n\t    t['asterisk'] = 500;\n\t    t['plus'] = 675;\n\t    t['comma'] = 250;\n\t    t['hyphen'] = 333;\n\t    t['period'] = 250;\n\t    t['slash'] = 278;\n\t    t['zero'] = 500;\n\t    t['one'] = 500;\n\t    t['two'] = 500;\n\t    t['three'] = 500;\n\t    t['four'] = 500;\n\t    t['five'] = 500;\n\t    t['six'] = 500;\n\t    t['seven'] = 500;\n\t    t['eight'] = 500;\n\t    t['nine'] = 500;\n\t    t['colon'] = 333;\n\t    t['semicolon'] = 333;\n\t    t['less'] = 675;\n\t    t['equal'] = 675;\n\t    t['greater'] = 675;\n\t    t['question'] = 500;\n\t    t['at'] = 920;\n\t    t['A'] = 611;\n\t    t['B'] = 611;\n\t    t['C'] = 667;\n\t    t['D'] = 722;\n\t    t['E'] = 611;\n\t    t['F'] = 611;\n\t    t['G'] = 722;\n\t    t['H'] = 722;\n\t    t['I'] = 333;\n\t    t['J'] = 444;\n\t    t['K'] = 667;\n\t    t['L'] = 556;\n\t    t['M'] = 833;\n\t    t['N'] = 667;\n\t    t['O'] = 722;\n\t    t['P'] = 611;\n\t    t['Q'] = 722;\n\t    t['R'] = 611;\n\t    t['S'] = 500;\n\t    t['T'] = 556;\n\t    t['U'] = 722;\n\t    t['V'] = 611;\n\t    t['W'] = 833;\n\t    t['X'] = 611;\n\t    t['Y'] = 556;\n\t    t['Z'] = 556;\n\t    t['bracketleft'] = 389;\n\t    t['backslash'] = 278;\n\t    t['bracketright'] = 389;\n\t    t['asciicircum'] = 422;\n\t    t['underscore'] = 500;\n\t    t['quoteleft'] = 333;\n\t    t['a'] = 500;\n\t    t['b'] = 500;\n\t    t['c'] = 444;\n\t    t['d'] = 500;\n\t    t['e'] = 444;\n\t    t['f'] = 278;\n\t    t['g'] = 500;\n\t    t['h'] = 500;\n\t    t['i'] = 278;\n\t    t['j'] = 278;\n\t    t['k'] = 444;\n\t    t['l'] = 278;\n\t    t['m'] = 722;\n\t    t['n'] = 500;\n\t    t['o'] = 500;\n\t    t['p'] = 500;\n\t    t['q'] = 500;\n\t    t['r'] = 389;\n\t    t['s'] = 389;\n\t    t['t'] = 278;\n\t    t['u'] = 500;\n\t    t['v'] = 444;\n\t    t['w'] = 667;\n\t    t['x'] = 444;\n\t    t['y'] = 444;\n\t    t['z'] = 389;\n\t    t['braceleft'] = 400;\n\t    t['bar'] = 275;\n\t    t['braceright'] = 400;\n\t    t['asciitilde'] = 541;\n\t    t['exclamdown'] = 389;\n\t    t['cent'] = 500;\n\t    t['sterling'] = 500;\n\t    t['fraction'] = 167;\n\t    t['yen'] = 500;\n\t    t['florin'] = 500;\n\t    t['section'] = 500;\n\t    t['currency'] = 500;\n\t    t['quotesingle'] = 214;\n\t    t['quotedblleft'] = 556;\n\t    t['guillemotleft'] = 500;\n\t    t['guilsinglleft'] = 333;\n\t    t['guilsinglright'] = 333;\n\t    t['fi'] = 500;\n\t    t['fl'] = 500;\n\t    t['endash'] = 500;\n\t    t['dagger'] = 500;\n\t    t['daggerdbl'] = 500;\n\t    t['periodcentered'] = 250;\n\t    t['paragraph'] = 523;\n\t    t['bullet'] = 350;\n\t    t['quotesinglbase'] = 333;\n\t    t['quotedblbase'] = 556;\n\t    t['quotedblright'] = 556;\n\t    t['guillemotright'] = 500;\n\t    t['ellipsis'] = 889;\n\t    t['perthousand'] = 1000;\n\t    t['questiondown'] = 500;\n\t    t['grave'] = 333;\n\t    t['acute'] = 333;\n\t    t['circumflex'] = 333;\n\t    t['tilde'] = 333;\n\t    t['macron'] = 333;\n\t    t['breve'] = 333;\n\t    t['dotaccent'] = 333;\n\t    t['dieresis'] = 333;\n\t    t['ring'] = 333;\n\t    t['cedilla'] = 333;\n\t    t['hungarumlaut'] = 333;\n\t    t['ogonek'] = 333;\n\t    t['caron'] = 333;\n\t    t['emdash'] = 889;\n\t    t['AE'] = 889;\n\t    t['ordfeminine'] = 276;\n\t    t['Lslash'] = 556;\n\t    t['Oslash'] = 722;\n\t    t['OE'] = 944;\n\t    t['ordmasculine'] = 310;\n\t    t['ae'] = 667;\n\t    t['dotlessi'] = 278;\n\t    t['lslash'] = 278;\n\t    t['oslash'] = 500;\n\t    t['oe'] = 667;\n\t    t['germandbls'] = 500;\n\t    t['Idieresis'] = 333;\n\t    t['eacute'] = 444;\n\t    t['abreve'] = 500;\n\t    t['uhungarumlaut'] = 500;\n\t    t['ecaron'] = 444;\n\t    t['Ydieresis'] = 556;\n\t    t['divide'] = 675;\n\t    t['Yacute'] = 556;\n\t    t['Acircumflex'] = 611;\n\t    t['aacute'] = 500;\n\t    t['Ucircumflex'] = 722;\n\t    t['yacute'] = 444;\n\t    t['scommaaccent'] = 389;\n\t    t['ecircumflex'] = 444;\n\t    t['Uring'] = 722;\n\t    t['Udieresis'] = 722;\n\t    t['aogonek'] = 500;\n\t    t['Uacute'] = 722;\n\t    t['uogonek'] = 500;\n\t    t['Edieresis'] = 611;\n\t    t['Dcroat'] = 722;\n\t    t['commaaccent'] = 250;\n\t    t['copyright'] = 760;\n\t    t['Emacron'] = 611;\n\t    t['ccaron'] = 444;\n\t    t['aring'] = 500;\n\t    t['Ncommaaccent'] = 667;\n\t    t['lacute'] = 278;\n\t    t['agrave'] = 500;\n\t    t['Tcommaaccent'] = 556;\n\t    t['Cacute'] = 667;\n\t    t['atilde'] = 500;\n\t    t['Edotaccent'] = 611;\n\t    t['scaron'] = 389;\n\t    t['scedilla'] = 389;\n\t    t['iacute'] = 278;\n\t    t['lozenge'] = 471;\n\t    t['Rcaron'] = 611;\n\t    t['Gcommaaccent'] = 722;\n\t    t['ucircumflex'] = 500;\n\t    t['acircumflex'] = 500;\n\t    t['Amacron'] = 611;\n\t    t['rcaron'] = 389;\n\t    t['ccedilla'] = 444;\n\t    t['Zdotaccent'] = 556;\n\t    t['Thorn'] = 611;\n\t    t['Omacron'] = 722;\n\t    t['Racute'] = 611;\n\t    t['Sacute'] = 500;\n\t    t['dcaron'] = 544;\n\t    t['Umacron'] = 722;\n\t    t['uring'] = 500;\n\t    t['threesuperior'] = 300;\n\t    t['Ograve'] = 722;\n\t    t['Agrave'] = 611;\n\t    t['Abreve'] = 611;\n\t    t['multiply'] = 675;\n\t    t['uacute'] = 500;\n\t    t['Tcaron'] = 556;\n\t    t['partialdiff'] = 476;\n\t    t['ydieresis'] = 444;\n\t    t['Nacute'] = 667;\n\t    t['icircumflex'] = 278;\n\t    t['Ecircumflex'] = 611;\n\t    t['adieresis'] = 500;\n\t    t['edieresis'] = 444;\n\t    t['cacute'] = 444;\n\t    t['nacute'] = 500;\n\t    t['umacron'] = 500;\n\t    t['Ncaron'] = 667;\n\t    t['Iacute'] = 333;\n\t    t['plusminus'] = 675;\n\t    t['brokenbar'] = 275;\n\t    t['registered'] = 760;\n\t    t['Gbreve'] = 722;\n\t    t['Idotaccent'] = 333;\n\t    t['summation'] = 600;\n\t    t['Egrave'] = 611;\n\t    t['racute'] = 389;\n\t    t['omacron'] = 500;\n\t    t['Zacute'] = 556;\n\t    t['Zcaron'] = 556;\n\t    t['greaterequal'] = 549;\n\t    t['Eth'] = 722;\n\t    t['Ccedilla'] = 667;\n\t    t['lcommaaccent'] = 278;\n\t    t['tcaron'] = 300;\n\t    t['eogonek'] = 444;\n\t    t['Uogonek'] = 722;\n\t    t['Aacute'] = 611;\n\t    t['Adieresis'] = 611;\n\t    t['egrave'] = 444;\n\t    t['zacute'] = 389;\n\t    t['iogonek'] = 278;\n\t    t['Oacute'] = 722;\n\t    t['oacute'] = 500;\n\t    t['amacron'] = 500;\n\t    t['sacute'] = 389;\n\t    t['idieresis'] = 278;\n\t    t['Ocircumflex'] = 722;\n\t    t['Ugrave'] = 722;\n\t    t['Delta'] = 612;\n\t    t['thorn'] = 500;\n\t    t['twosuperior'] = 300;\n\t    t['Odieresis'] = 722;\n\t    t['mu'] = 500;\n\t    t['igrave'] = 278;\n\t    t['ohungarumlaut'] = 500;\n\t    t['Eogonek'] = 611;\n\t    t['dcroat'] = 500;\n\t    t['threequarters'] = 750;\n\t    t['Scedilla'] = 500;\n\t    t['lcaron'] = 300;\n\t    t['Kcommaaccent'] = 667;\n\t    t['Lacute'] = 556;\n\t    t['trademark'] = 980;\n\t    t['edotaccent'] = 444;\n\t    t['Igrave'] = 333;\n\t    t['Imacron'] = 333;\n\t    t['Lcaron'] = 611;\n\t    t['onehalf'] = 750;\n\t    t['lessequal'] = 549;\n\t    t['ocircumflex'] = 500;\n\t    t['ntilde'] = 500;\n\t    t['Uhungarumlaut'] = 722;\n\t    t['Eacute'] = 611;\n\t    t['emacron'] = 444;\n\t    t['gbreve'] = 500;\n\t    t['onequarter'] = 750;\n\t    t['Scaron'] = 500;\n\t    t['Scommaaccent'] = 500;\n\t    t['Ohungarumlaut'] = 722;\n\t    t['degree'] = 400;\n\t    t['ograve'] = 500;\n\t    t['Ccaron'] = 667;\n\t    t['ugrave'] = 500;\n\t    t['radical'] = 453;\n\t    t['Dcaron'] = 722;\n\t    t['rcommaaccent'] = 389;\n\t    t['Ntilde'] = 667;\n\t    t['otilde'] = 500;\n\t    t['Rcommaaccent'] = 611;\n\t    t['Lcommaaccent'] = 556;\n\t    t['Atilde'] = 611;\n\t    t['Aogonek'] = 611;\n\t    t['Aring'] = 611;\n\t    t['Otilde'] = 722;\n\t    t['zdotaccent'] = 389;\n\t    t['Ecaron'] = 611;\n\t    t['Iogonek'] = 333;\n\t    t['kcommaaccent'] = 444;\n\t    t['minus'] = 675;\n\t    t['Icircumflex'] = 333;\n\t    t['ncaron'] = 500;\n\t    t['tcommaaccent'] = 278;\n\t    t['logicalnot'] = 675;\n\t    t['odieresis'] = 500;\n\t    t['udieresis'] = 500;\n\t    t['notequal'] = 549;\n\t    t['gcommaaccent'] = 500;\n\t    t['eth'] = 500;\n\t    t['zcaron'] = 389;\n\t    t['ncommaaccent'] = 500;\n\t    t['onesuperior'] = 300;\n\t    t['imacron'] = 278;\n\t    t['Euro'] = 500;\n\t  });\n\t  t['ZapfDingbats'] = (0, _util.getLookupTableFactory)(function (t) {\n\t    t['space'] = 278;\n\t    t['a1'] = 974;\n\t    t['a2'] = 961;\n\t    t['a202'] = 974;\n\t    t['a3'] = 980;\n\t    t['a4'] = 719;\n\t    t['a5'] = 789;\n\t    t['a119'] = 790;\n\t    t['a118'] = 791;\n\t    t['a117'] = 690;\n\t    t['a11'] = 960;\n\t    t['a12'] = 939;\n\t    t['a13'] = 549;\n\t    t['a14'] = 855;\n\t    t['a15'] = 911;\n\t    t['a16'] = 933;\n\t    t['a105'] = 911;\n\t    t['a17'] = 945;\n\t    t['a18'] = 974;\n\t    t['a19'] = 755;\n\t    t['a20'] = 846;\n\t    t['a21'] = 762;\n\t    t['a22'] = 761;\n\t    t['a23'] = 571;\n\t    t['a24'] = 677;\n\t    t['a25'] = 763;\n\t    t['a26'] = 760;\n\t    t['a27'] = 759;\n\t    t['a28'] = 754;\n\t    t['a6'] = 494;\n\t    t['a7'] = 552;\n\t    t['a8'] = 537;\n\t    t['a9'] = 577;\n\t    t['a10'] = 692;\n\t    t['a29'] = 786;\n\t    t['a30'] = 788;\n\t    t['a31'] = 788;\n\t    t['a32'] = 790;\n\t    t['a33'] = 793;\n\t    t['a34'] = 794;\n\t    t['a35'] = 816;\n\t    t['a36'] = 823;\n\t    t['a37'] = 789;\n\t    t['a38'] = 841;\n\t    t['a39'] = 823;\n\t    t['a40'] = 833;\n\t    t['a41'] = 816;\n\t    t['a42'] = 831;\n\t    t['a43'] = 923;\n\t    t['a44'] = 744;\n\t    t['a45'] = 723;\n\t    t['a46'] = 749;\n\t    t['a47'] = 790;\n\t    t['a48'] = 792;\n\t    t['a49'] = 695;\n\t    t['a50'] = 776;\n\t    t['a51'] = 768;\n\t    t['a52'] = 792;\n\t    t['a53'] = 759;\n\t    t['a54'] = 707;\n\t    t['a55'] = 708;\n\t    t['a56'] = 682;\n\t    t['a57'] = 701;\n\t    t['a58'] = 826;\n\t    t['a59'] = 815;\n\t    t['a60'] = 789;\n\t    t['a61'] = 789;\n\t    t['a62'] = 707;\n\t    t['a63'] = 687;\n\t    t['a64'] = 696;\n\t    t['a65'] = 689;\n\t    t['a66'] = 786;\n\t    t['a67'] = 787;\n\t    t['a68'] = 713;\n\t    t['a69'] = 791;\n\t    t['a70'] = 785;\n\t    t['a71'] = 791;\n\t    t['a72'] = 873;\n\t    t['a73'] = 761;\n\t    t['a74'] = 762;\n\t    t['a203'] = 762;\n\t    t['a75'] = 759;\n\t    t['a204'] = 759;\n\t    t['a76'] = 892;\n\t    t['a77'] = 892;\n\t    t['a78'] = 788;\n\t    t['a79'] = 784;\n\t    t['a81'] = 438;\n\t    t['a82'] = 138;\n\t    t['a83'] = 277;\n\t    t['a84'] = 415;\n\t    t['a97'] = 392;\n\t    t['a98'] = 392;\n\t    t['a99'] = 668;\n\t    t['a100'] = 668;\n\t    t['a89'] = 390;\n\t    t['a90'] = 390;\n\t    t['a93'] = 317;\n\t    t['a94'] = 317;\n\t    t['a91'] = 276;\n\t    t['a92'] = 276;\n\t    t['a205'] = 509;\n\t    t['a85'] = 509;\n\t    t['a206'] = 410;\n\t    t['a86'] = 410;\n\t    t['a87'] = 234;\n\t    t['a88'] = 234;\n\t    t['a95'] = 334;\n\t    t['a96'] = 334;\n\t    t['a101'] = 732;\n\t    t['a102'] = 544;\n\t    t['a103'] = 544;\n\t    t['a104'] = 910;\n\t    t['a106'] = 667;\n\t    t['a107'] = 760;\n\t    t['a108'] = 760;\n\t    t['a112'] = 776;\n\t    t['a111'] = 595;\n\t    t['a110'] = 694;\n\t    t['a109'] = 626;\n\t    t['a120'] = 788;\n\t    t['a121'] = 788;\n\t    t['a122'] = 788;\n\t    t['a123'] = 788;\n\t    t['a124'] = 788;\n\t    t['a125'] = 788;\n\t    t['a126'] = 788;\n\t    t['a127'] = 788;\n\t    t['a128'] = 788;\n\t    t['a129'] = 788;\n\t    t['a130'] = 788;\n\t    t['a131'] = 788;\n\t    t['a132'] = 788;\n\t    t['a133'] = 788;\n\t    t['a134'] = 788;\n\t    t['a135'] = 788;\n\t    t['a136'] = 788;\n\t    t['a137'] = 788;\n\t    t['a138'] = 788;\n\t    t['a139'] = 788;\n\t    t['a140'] = 788;\n\t    t['a141'] = 788;\n\t    t['a142'] = 788;\n\t    t['a143'] = 788;\n\t    t['a144'] = 788;\n\t    t['a145'] = 788;\n\t    t['a146'] = 788;\n\t    t['a147'] = 788;\n\t    t['a148'] = 788;\n\t    t['a149'] = 788;\n\t    t['a150'] = 788;\n\t    t['a151'] = 788;\n\t    t['a152'] = 788;\n\t    t['a153'] = 788;\n\t    t['a154'] = 788;\n\t    t['a155'] = 788;\n\t    t['a156'] = 788;\n\t    t['a157'] = 788;\n\t    t['a158'] = 788;\n\t    t['a159'] = 788;\n\t    t['a160'] = 894;\n\t    t['a161'] = 838;\n\t    t['a163'] = 1016;\n\t    t['a164'] = 458;\n\t    t['a196'] = 748;\n\t    t['a165'] = 924;\n\t    t['a192'] = 748;\n\t    t['a166'] = 918;\n\t    t['a167'] = 927;\n\t    t['a168'] = 928;\n\t    t['a169'] = 928;\n\t    t['a170'] = 834;\n\t    t['a171'] = 873;\n\t    t['a172'] = 828;\n\t    t['a173'] = 924;\n\t    t['a162'] = 924;\n\t    t['a174'] = 917;\n\t    t['a175'] = 930;\n\t    t['a176'] = 931;\n\t    t['a177'] = 463;\n\t    t['a178'] = 883;\n\t    t['a179'] = 836;\n\t    t['a193'] = 836;\n\t    t['a180'] = 867;\n\t    t['a199'] = 867;\n\t    t['a181'] = 696;\n\t    t['a200'] = 696;\n\t    t['a182'] = 874;\n\t    t['a201'] = 874;\n\t    t['a183'] = 760;\n\t    t['a184'] = 946;\n\t    t['a197'] = 771;\n\t    t['a185'] = 865;\n\t    t['a194'] = 771;\n\t    t['a198'] = 888;\n\t    t['a186'] = 967;\n\t    t['a195'] = 888;\n\t    t['a187'] = 831;\n\t    t['a188'] = 873;\n\t    t['a189'] = 927;\n\t    t['a190'] = 970;\n\t    t['a191'] = 918;\n\t  });\n\t});\n\texports.getMetrics = getMetrics;\n\t\n\t/***/ }),\n\t/* 141 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.PostScriptParser = exports.PostScriptLexer = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _primitives = __w_pdfjs_require__(2);\n\t\n\tvar PostScriptParser = function PostScriptParserClosure() {\n\t  function PostScriptParser(lexer) {\n\t    this.lexer = lexer;\n\t    this.operators = [];\n\t    this.token = null;\n\t    this.prev = null;\n\t  }\n\t  PostScriptParser.prototype = {\n\t    nextToken: function PostScriptParser_nextToken() {\n\t      this.prev = this.token;\n\t      this.token = this.lexer.getToken();\n\t    },\n\t    accept: function PostScriptParser_accept(type) {\n\t      if (this.token.type === type) {\n\t        this.nextToken();\n\t        return true;\n\t      }\n\t      return false;\n\t    },\n\t    expect: function PostScriptParser_expect(type) {\n\t      if (this.accept(type)) {\n\t        return true;\n\t      }\n\t      throw new _util.FormatError('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\n\t    },\n\t    parse: function PostScriptParser_parse() {\n\t      this.nextToken();\n\t      this.expect(PostScriptTokenTypes.LBRACE);\n\t      this.parseBlock();\n\t      this.expect(PostScriptTokenTypes.RBRACE);\n\t      return this.operators;\n\t    },\n\t    parseBlock: function PostScriptParser_parseBlock() {\n\t      while (true) {\n\t        if (this.accept(PostScriptTokenTypes.NUMBER)) {\n\t          this.operators.push(this.prev.value);\n\t        } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n\t          this.operators.push(this.prev.value);\n\t        } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n\t          this.parseCondition();\n\t        } else {\n\t          return;\n\t        }\n\t      }\n\t    },\n\t    parseCondition: function PostScriptParser_parseCondition() {\n\t      var conditionLocation = this.operators.length;\n\t      this.operators.push(null, null);\n\t      this.parseBlock();\n\t      this.expect(PostScriptTokenTypes.RBRACE);\n\t      if (this.accept(PostScriptTokenTypes.IF)) {\n\t        this.operators[conditionLocation] = this.operators.length;\n\t        this.operators[conditionLocation + 1] = 'jz';\n\t      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n\t        var jumpLocation = this.operators.length;\n\t        this.operators.push(null, null);\n\t        var endOfTrue = this.operators.length;\n\t        this.parseBlock();\n\t        this.expect(PostScriptTokenTypes.RBRACE);\n\t        this.expect(PostScriptTokenTypes.IFELSE);\n\t        this.operators[jumpLocation] = this.operators.length;\n\t        this.operators[jumpLocation + 1] = 'j';\n\t        this.operators[conditionLocation] = endOfTrue;\n\t        this.operators[conditionLocation + 1] = 'jz';\n\t      } else {\n\t        throw new _util.FormatError('PS Function: error parsing conditional.');\n\t      }\n\t    }\n\t  };\n\t  return PostScriptParser;\n\t}();\n\tvar PostScriptTokenTypes = {\n\t  LBRACE: 0,\n\t  RBRACE: 1,\n\t  NUMBER: 2,\n\t  OPERATOR: 3,\n\t  IF: 4,\n\t  IFELSE: 5\n\t};\n\tvar PostScriptToken = function PostScriptTokenClosure() {\n\t  function PostScriptToken(type, value) {\n\t    this.type = type;\n\t    this.value = value;\n\t  }\n\t  var opCache = Object.create(null);\n\t  PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n\t    var opValue = opCache[op];\n\t    if (opValue) {\n\t      return opValue;\n\t    }\n\t    return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n\t  };\n\t  PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\n\t  PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\n\t  PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n\t  PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\n\t  return PostScriptToken;\n\t}();\n\tvar PostScriptLexer = function PostScriptLexerClosure() {\n\t  function PostScriptLexer(stream) {\n\t    this.stream = stream;\n\t    this.nextChar();\n\t    this.strBuf = [];\n\t  }\n\t  PostScriptLexer.prototype = {\n\t    nextChar: function PostScriptLexer_nextChar() {\n\t      return this.currentChar = this.stream.getByte();\n\t    },\n\t    getToken: function PostScriptLexer_getToken() {\n\t      var comment = false;\n\t      var ch = this.currentChar;\n\t      while (true) {\n\t        if (ch < 0) {\n\t          return _primitives.EOF;\n\t        }\n\t        if (comment) {\n\t          if (ch === 0x0A || ch === 0x0D) {\n\t            comment = false;\n\t          }\n\t        } else if (ch === 0x25) {\n\t          comment = true;\n\t        } else if (!(0, _util.isSpace)(ch)) {\n\t          break;\n\t        }\n\t        ch = this.nextChar();\n\t      }\n\t      switch (ch | 0) {\n\t        case 0x30:\n\t        case 0x31:\n\t        case 0x32:\n\t        case 0x33:\n\t        case 0x34:\n\t        case 0x35:\n\t        case 0x36:\n\t        case 0x37:\n\t        case 0x38:\n\t        case 0x39:\n\t        case 0x2B:\n\t        case 0x2D:\n\t        case 0x2E:\n\t          return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n\t        case 0x7B:\n\t          this.nextChar();\n\t          return PostScriptToken.LBRACE;\n\t        case 0x7D:\n\t          this.nextChar();\n\t          return PostScriptToken.RBRACE;\n\t      }\n\t      var strBuf = this.strBuf;\n\t      strBuf.length = 0;\n\t      strBuf[0] = String.fromCharCode(ch);\n\t      while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\n\t        strBuf.push(String.fromCharCode(ch));\n\t      }\n\t      var str = strBuf.join('');\n\t      switch (str.toLowerCase()) {\n\t        case 'if':\n\t          return PostScriptToken.IF;\n\t        case 'ifelse':\n\t          return PostScriptToken.IFELSE;\n\t        default:\n\t          return PostScriptToken.getOperator(str);\n\t      }\n\t    },\n\t    getNumber: function PostScriptLexer_getNumber() {\n\t      var ch = this.currentChar;\n\t      var strBuf = this.strBuf;\n\t      strBuf.length = 0;\n\t      strBuf[0] = String.fromCharCode(ch);\n\t      while ((ch = this.nextChar()) >= 0) {\n\t        if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\n\t          strBuf.push(String.fromCharCode(ch));\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t      var value = parseFloat(strBuf.join(''));\n\t      if (isNaN(value)) {\n\t        throw new _util.FormatError('Invalid floating point number: ' + value);\n\t      }\n\t      return value;\n\t    }\n\t  };\n\t  return PostScriptLexer;\n\t}();\n\texports.PostScriptLexer = PostScriptLexer;\n\texports.PostScriptParser = PostScriptParser;\n\t\n\t/***/ }),\n\t/* 142 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\n\t  var MASK_HIGH = 0xffff0000;\n\t  var MASK_LOW = 0xffff;\n\t  function MurmurHash3_64(seed) {\n\t    var SEED = 0xc3d2e1f0;\n\t    this.h1 = seed ? seed & 0xffffffff : SEED;\n\t    this.h2 = seed ? seed & 0xffffffff : SEED;\n\t  }\n\t  MurmurHash3_64.prototype = {\n\t    update: function MurmurHash3_64_update(input) {\n\t      var i;\n\t      if (typeof input === 'string') {\n\t        var data = new Uint8Array(input.length * 2);\n\t        var length = 0;\n\t        for (i = 0; i < input.length; i++) {\n\t          var code = input.charCodeAt(i);\n\t          if (code <= 0xff) {\n\t            data[length++] = code;\n\t          } else {\n\t            data[length++] = code >>> 8;\n\t            data[length++] = code & 0xff;\n\t          }\n\t        }\n\t      } else if ((typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' && 'byteLength' in input) {\n\t        data = input;\n\t        length = data.byteLength;\n\t      } else {\n\t        throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\n\t      }\n\t      var blockCounts = length >> 2;\n\t      var tailLength = length - blockCounts * 4;\n\t      var dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n\t      var k1 = 0;\n\t      var k2 = 0;\n\t      var h1 = this.h1;\n\t      var h2 = this.h2;\n\t      var C1 = 0xcc9e2d51;\n\t      var C2 = 0x1b873593;\n\t      var C1_LOW = C1 & MASK_LOW;\n\t      var C2_LOW = C2 & MASK_LOW;\n\t      for (i = 0; i < blockCounts; i++) {\n\t        if (i & 1) {\n\t          k1 = dataUint32[i];\n\t          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n\t          k1 = k1 << 15 | k1 >>> 17;\n\t          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n\t          h1 ^= k1;\n\t          h1 = h1 << 13 | h1 >>> 19;\n\t          h1 = h1 * 5 + 0xe6546b64;\n\t        } else {\n\t          k2 = dataUint32[i];\n\t          k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n\t          k2 = k2 << 15 | k2 >>> 17;\n\t          k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n\t          h2 ^= k2;\n\t          h2 = h2 << 13 | h2 >>> 19;\n\t          h2 = h2 * 5 + 0xe6546b64;\n\t        }\n\t      }\n\t      k1 = 0;\n\t      switch (tailLength) {\n\t        case 3:\n\t          k1 ^= data[blockCounts * 4 + 2] << 16;\n\t        case 2:\n\t          k1 ^= data[blockCounts * 4 + 1] << 8;\n\t        case 1:\n\t          k1 ^= data[blockCounts * 4];\n\t          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n\t          k1 = k1 << 15 | k1 >>> 17;\n\t          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n\t          if (blockCounts & 1) {\n\t            h1 ^= k1;\n\t          } else {\n\t            h2 ^= k1;\n\t          }\n\t      }\n\t      this.h1 = h1;\n\t      this.h2 = h2;\n\t      return this;\n\t    },\n\t    hexdigest: function MurmurHash3_64_hexdigest() {\n\t      var h1 = this.h1;\n\t      var h2 = this.h2;\n\t      h1 ^= h2 >>> 1;\n\t      h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n\t      h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n\t      h1 ^= h2 >>> 1;\n\t      h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n\t      h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n\t      h1 ^= h2 >>> 1;\n\t      for (var i = 0, arr = [h1, h2], str = ''; i < arr.length; i++) {\n\t        var hex = (arr[i] >>> 0).toString(16);\n\t        while (hex.length < 8) {\n\t          hex = '0' + hex;\n\t        }\n\t        str += hex;\n\t      }\n\t      return str;\n\t    }\n\t  };\n\t  return MurmurHash3_64;\n\t}();\n\texports.MurmurHash3_64 = MurmurHash3_64;\n\t\n\t/***/ }),\n\t/* 143 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.PDFImage = undefined;\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _stream = __w_pdfjs_require__(5);\n\t\n\tvar _primitives = __w_pdfjs_require__(2);\n\t\n\tvar _colorspace = __w_pdfjs_require__(26);\n\t\n\tvar _jpx = __w_pdfjs_require__(74);\n\t\n\tvar PDFImage = function PDFImageClosure() {\n\t  function handleImageData(image, nativeDecoder) {\n\t    if (nativeDecoder && nativeDecoder.canDecode(image)) {\n\t      return nativeDecoder.decode(image);\n\t    }\n\t    return Promise.resolve(image);\n\t  }\n\t  function decodeAndClamp(value, addend, coefficient, max) {\n\t    value = addend + value * coefficient;\n\t    return value < 0 ? 0 : value > max ? max : value;\n\t  }\n\t  function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n\t    var length = w2 * h2;\n\t    var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n\t    var xRatio = w1 / w2;\n\t    var yRatio = h1 / h2;\n\t    var i,\n\t        j,\n\t        py,\n\t        newIndex = 0,\n\t        oldIndex;\n\t    var xScaled = new Uint16Array(w2);\n\t    var w1Scanline = w1;\n\t    for (i = 0; i < w2; i++) {\n\t      xScaled[i] = Math.floor(i * xRatio);\n\t    }\n\t    for (i = 0; i < h2; i++) {\n\t      py = Math.floor(i * yRatio) * w1Scanline;\n\t      for (j = 0; j < w2; j++) {\n\t        oldIndex = py + xScaled[j];\n\t        dest[newIndex++] = src[oldIndex];\n\t      }\n\t    }\n\t    return dest;\n\t  }\n\t  function PDFImage(_ref) {\n\t    var xref = _ref.xref,\n\t        res = _ref.res,\n\t        image = _ref.image,\n\t        _ref$smask = _ref.smask,\n\t        smask = _ref$smask === undefined ? null : _ref$smask,\n\t        _ref$mask = _ref.mask,\n\t        mask = _ref$mask === undefined ? null : _ref$mask,\n\t        _ref$isMask = _ref.isMask,\n\t        isMask = _ref$isMask === undefined ? false : _ref$isMask,\n\t        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\t\n\t    this.image = image;\n\t    var dict = image.dict;\n\t    if (dict.has('Filter')) {\n\t      var filter = dict.get('Filter').name;\n\t      if (filter === 'JPXDecode') {\n\t        var jpxImage = new _jpx.JpxImage();\n\t        jpxImage.parseImageProperties(image.stream);\n\t        image.stream.reset();\n\t        image.bitsPerComponent = jpxImage.bitsPerComponent;\n\t        image.numComps = jpxImage.componentsCount;\n\t      } else if (filter === 'JBIG2Decode') {\n\t        image.bitsPerComponent = 1;\n\t        image.numComps = 1;\n\t      }\n\t    }\n\t    this.width = dict.get('Width', 'W');\n\t    this.height = dict.get('Height', 'H');\n\t    if (this.width < 1 || this.height < 1) {\n\t      throw new _util.FormatError('Invalid image width: ' + this.width + ' or ' + ('height: ' + this.height));\n\t    }\n\t    this.interpolate = dict.get('Interpolate', 'I') || false;\n\t    this.imageMask = dict.get('ImageMask', 'IM') || false;\n\t    this.matte = dict.get('Matte') || false;\n\t    var bitsPerComponent = image.bitsPerComponent;\n\t    if (!bitsPerComponent) {\n\t      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n\t      if (!bitsPerComponent) {\n\t        if (this.imageMask) {\n\t          bitsPerComponent = 1;\n\t        } else {\n\t          throw new _util.FormatError('Bits per component missing in image: ' + this.imageMask);\n\t        }\n\t      }\n\t    }\n\t    this.bpc = bitsPerComponent;\n\t    if (!this.imageMask) {\n\t      var colorSpace = dict.get('ColorSpace', 'CS');\n\t      if (!colorSpace) {\n\t        (0, _util.info)('JPX images (which do not require color spaces)');\n\t        switch (image.numComps) {\n\t          case 1:\n\t            colorSpace = _primitives.Name.get('DeviceGray');\n\t            break;\n\t          case 3:\n\t            colorSpace = _primitives.Name.get('DeviceRGB');\n\t            break;\n\t          case 4:\n\t            colorSpace = _primitives.Name.get('DeviceCMYK');\n\t            break;\n\t          default:\n\t            throw new Error('JPX images with ' + this.numComps + ' ' + 'color components not supported.');\n\t        }\n\t      }\n\t      this.colorSpace = _colorspace.ColorSpace.parse(colorSpace, xref, res, pdfFunctionFactory);\n\t      this.numComps = this.colorSpace.numComps;\n\t    }\n\t    this.decode = dict.getArray('Decode', 'D');\n\t    this.needsDecode = false;\n\t    if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !_colorspace.ColorSpace.isDefaultDecode(this.decode, 1))) {\n\t      this.needsDecode = true;\n\t      var max = (1 << bitsPerComponent) - 1;\n\t      this.decodeCoefficients = [];\n\t      this.decodeAddends = [];\n\t      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n\t        var dmin = this.decode[i];\n\t        var dmax = this.decode[i + 1];\n\t        this.decodeCoefficients[j] = dmax - dmin;\n\t        this.decodeAddends[j] = max * dmin;\n\t      }\n\t    }\n\t    if (smask) {\n\t      this.smask = new PDFImage({\n\t        xref: xref,\n\t        res: res,\n\t        image: smask,\n\t        pdfFunctionFactory: pdfFunctionFactory\n\t      });\n\t    } else if (mask) {\n\t      if ((0, _primitives.isStream)(mask)) {\n\t        var maskDict = mask.dict,\n\t            imageMask = maskDict.get('ImageMask', 'IM');\n\t        if (!imageMask) {\n\t          (0, _util.warn)('Ignoring /Mask in image without /ImageMask.');\n\t        } else {\n\t          this.mask = new PDFImage({\n\t            xref: xref,\n\t            res: res,\n\t            image: mask,\n\t            isMask: true,\n\t            pdfFunctionFactory: pdfFunctionFactory\n\t          });\n\t        }\n\t      } else {\n\t        this.mask = mask;\n\t      }\n\t    }\n\t  }\n\t  PDFImage.buildImage = function (_ref2) {\n\t    var handler = _ref2.handler,\n\t        xref = _ref2.xref,\n\t        res = _ref2.res,\n\t        image = _ref2.image,\n\t        _ref2$nativeDecoder = _ref2.nativeDecoder,\n\t        nativeDecoder = _ref2$nativeDecoder === undefined ? null : _ref2$nativeDecoder,\n\t        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\t\n\t    var imagePromise = handleImageData(image, nativeDecoder);\n\t    var smaskPromise;\n\t    var maskPromise;\n\t    var smask = image.dict.get('SMask');\n\t    var mask = image.dict.get('Mask');\n\t    if (smask) {\n\t      smaskPromise = handleImageData(smask, nativeDecoder);\n\t      maskPromise = Promise.resolve(null);\n\t    } else {\n\t      smaskPromise = Promise.resolve(null);\n\t      if (mask) {\n\t        if ((0, _primitives.isStream)(mask)) {\n\t          maskPromise = handleImageData(mask, nativeDecoder);\n\t        } else if (Array.isArray(mask)) {\n\t          maskPromise = Promise.resolve(mask);\n\t        } else {\n\t          (0, _util.warn)('Unsupported mask format.');\n\t          maskPromise = Promise.resolve(null);\n\t        }\n\t      } else {\n\t        maskPromise = Promise.resolve(null);\n\t      }\n\t    }\n\t    return Promise.all([imagePromise, smaskPromise, maskPromise]).then(function (_ref3) {\n\t      var _ref4 = _slicedToArray(_ref3, 3),\n\t          imageData = _ref4[0],\n\t          smaskData = _ref4[1],\n\t          maskData = _ref4[2];\n\t\n\t      return new PDFImage({\n\t        xref: xref,\n\t        res: res,\n\t        image: imageData,\n\t        smask: smaskData,\n\t        mask: maskData,\n\t        pdfFunctionFactory: pdfFunctionFactory\n\t      });\n\t    });\n\t  };\n\t  PDFImage.createMask = function (_ref5) {\n\t    var imgArray = _ref5.imgArray,\n\t        width = _ref5.width,\n\t        height = _ref5.height,\n\t        imageIsFromDecodeStream = _ref5.imageIsFromDecodeStream,\n\t        inverseDecode = _ref5.inverseDecode;\n\t\n\t    var computedLength = (width + 7 >> 3) * height;\n\t    var actualLength = imgArray.byteLength;\n\t    var haveFullData = computedLength === actualLength;\n\t    var data, i;\n\t    if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n\t      data = imgArray;\n\t    } else if (!inverseDecode) {\n\t      data = new Uint8Array(actualLength);\n\t      data.set(imgArray);\n\t    } else {\n\t      data = new Uint8Array(computedLength);\n\t      data.set(imgArray);\n\t      for (i = actualLength; i < computedLength; i++) {\n\t        data[i] = 0xff;\n\t      }\n\t    }\n\t    if (inverseDecode) {\n\t      for (i = 0; i < actualLength; i++) {\n\t        data[i] ^= 0xFF;\n\t      }\n\t    }\n\t    return {\n\t      data: data,\n\t      width: width,\n\t      height: height\n\t    };\n\t  };\n\t  PDFImage.prototype = {\n\t    get drawWidth() {\n\t      return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n\t    },\n\t    get drawHeight() {\n\t      return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n\t    },\n\t    decodeBuffer: function decodeBuffer(buffer) {\n\t      var bpc = this.bpc;\n\t      var numComps = this.numComps;\n\t      var decodeAddends = this.decodeAddends;\n\t      var decodeCoefficients = this.decodeCoefficients;\n\t      var max = (1 << bpc) - 1;\n\t      var i, ii;\n\t      if (bpc === 1) {\n\t        for (i = 0, ii = buffer.length; i < ii; i++) {\n\t          buffer[i] = +!buffer[i];\n\t        }\n\t        return;\n\t      }\n\t      var index = 0;\n\t      for (i = 0, ii = this.width * this.height; i < ii; i++) {\n\t        for (var j = 0; j < numComps; j++) {\n\t          buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n\t          index++;\n\t        }\n\t      }\n\t    },\n\t    getComponents: function getComponents(buffer) {\n\t      var bpc = this.bpc;\n\t      if (bpc === 8) {\n\t        return buffer;\n\t      }\n\t      var width = this.width;\n\t      var height = this.height;\n\t      var numComps = this.numComps;\n\t      var length = width * height * numComps;\n\t      var bufferPos = 0;\n\t      var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n\t      var rowComps = width * numComps;\n\t      var max = (1 << bpc) - 1;\n\t      var i = 0,\n\t          ii,\n\t          buf;\n\t      if (bpc === 1) {\n\t        var mask, loop1End, loop2End;\n\t        for (var j = 0; j < height; j++) {\n\t          loop1End = i + (rowComps & ~7);\n\t          loop2End = i + rowComps;\n\t          while (i < loop1End) {\n\t            buf = buffer[bufferPos++];\n\t            output[i] = buf >> 7 & 1;\n\t            output[i + 1] = buf >> 6 & 1;\n\t            output[i + 2] = buf >> 5 & 1;\n\t            output[i + 3] = buf >> 4 & 1;\n\t            output[i + 4] = buf >> 3 & 1;\n\t            output[i + 5] = buf >> 2 & 1;\n\t            output[i + 6] = buf >> 1 & 1;\n\t            output[i + 7] = buf & 1;\n\t            i += 8;\n\t          }\n\t          if (i < loop2End) {\n\t            buf = buffer[bufferPos++];\n\t            mask = 128;\n\t            while (i < loop2End) {\n\t              output[i++] = +!!(buf & mask);\n\t              mask >>= 1;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        var bits = 0;\n\t        buf = 0;\n\t        for (i = 0, ii = length; i < ii; ++i) {\n\t          if (i % rowComps === 0) {\n\t            buf = 0;\n\t            bits = 0;\n\t          }\n\t          while (bits < bpc) {\n\t            buf = buf << 8 | buffer[bufferPos++];\n\t            bits += 8;\n\t          }\n\t          var remainingBits = bits - bpc;\n\t          var value = buf >> remainingBits;\n\t          output[i] = value < 0 ? 0 : value > max ? max : value;\n\t          buf = buf & (1 << remainingBits) - 1;\n\t          bits = remainingBits;\n\t        }\n\t      }\n\t      return output;\n\t    },\n\t    fillOpacity: function fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n\t      var smask = this.smask;\n\t      var mask = this.mask;\n\t      var alphaBuf, sw, sh, i, ii, j;\n\t      if (smask) {\n\t        sw = smask.width;\n\t        sh = smask.height;\n\t        alphaBuf = new Uint8Array(sw * sh);\n\t        smask.fillGrayBuffer(alphaBuf);\n\t        if (sw !== width || sh !== height) {\n\t          alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n\t        }\n\t      } else if (mask) {\n\t        if (mask instanceof PDFImage) {\n\t          sw = mask.width;\n\t          sh = mask.height;\n\t          alphaBuf = new Uint8Array(sw * sh);\n\t          mask.numComps = 1;\n\t          mask.fillGrayBuffer(alphaBuf);\n\t          for (i = 0, ii = sw * sh; i < ii; ++i) {\n\t            alphaBuf[i] = 255 - alphaBuf[i];\n\t          }\n\t          if (sw !== width || sh !== height) {\n\t            alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n\t          }\n\t        } else if (Array.isArray(mask)) {\n\t          alphaBuf = new Uint8Array(width * height);\n\t          var numComps = this.numComps;\n\t          for (i = 0, ii = width * height; i < ii; ++i) {\n\t            var opacity = 0;\n\t            var imageOffset = i * numComps;\n\t            for (j = 0; j < numComps; ++j) {\n\t              var color = image[imageOffset + j];\n\t              var maskOffset = j * 2;\n\t              if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n\t                opacity = 255;\n\t                break;\n\t              }\n\t            }\n\t            alphaBuf[i] = opacity;\n\t          }\n\t        } else {\n\t          throw new _util.FormatError('Unknown mask format.');\n\t        }\n\t      }\n\t      if (alphaBuf) {\n\t        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n\t          rgbaBuf[j] = alphaBuf[i];\n\t        }\n\t      } else {\n\t        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n\t          rgbaBuf[j] = 255;\n\t        }\n\t      }\n\t    },\n\t    undoPreblend: function undoPreblend(buffer, width, height) {\n\t      var matte = this.smask && this.smask.matte;\n\t      if (!matte) {\n\t        return;\n\t      }\n\t      var matteRgb = this.colorSpace.getRgb(matte, 0);\n\t      var matteR = matteRgb[0];\n\t      var matteG = matteRgb[1];\n\t      var matteB = matteRgb[2];\n\t      var length = width * height * 4;\n\t      var r, g, b;\n\t      for (var i = 0; i < length; i += 4) {\n\t        var alpha = buffer[i + 3];\n\t        if (alpha === 0) {\n\t          buffer[i] = 255;\n\t          buffer[i + 1] = 255;\n\t          buffer[i + 2] = 255;\n\t          continue;\n\t        }\n\t        var k = 255 / alpha;\n\t        r = (buffer[i] - matteR) * k + matteR;\n\t        g = (buffer[i + 1] - matteG) * k + matteG;\n\t        b = (buffer[i + 2] - matteB) * k + matteB;\n\t        buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n\t        buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n\t        buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n\t      }\n\t    },\n\t    createImageData: function createImageData() {\n\t      var forceRGBA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\t\n\t      var drawWidth = this.drawWidth;\n\t      var drawHeight = this.drawHeight;\n\t      var imgData = {\n\t        width: drawWidth,\n\t        height: drawHeight\n\t      };\n\t      var numComps = this.numComps;\n\t      var originalWidth = this.width;\n\t      var originalHeight = this.height;\n\t      var bpc = this.bpc;\n\t      var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n\t      var imgArray;\n\t      if (!forceRGBA) {\n\t        var kind;\n\t        if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n\t          kind = _util.ImageKind.GRAYSCALE_1BPP;\n\t        } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\n\t          kind = _util.ImageKind.RGB_24BPP;\n\t        }\n\t        if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n\t          imgData.kind = kind;\n\t          imgArray = this.getImageBytes(originalHeight * rowBytes);\n\t          if (this.image instanceof _stream.DecodeStream) {\n\t            imgData.data = imgArray;\n\t          } else {\n\t            var newArray = new Uint8Array(imgArray.length);\n\t            newArray.set(imgArray);\n\t            imgData.data = newArray;\n\t          }\n\t          if (this.needsDecode) {\n\t            (0, _util.assert)(kind === _util.ImageKind.GRAYSCALE_1BPP);\n\t            var buffer = imgData.data;\n\t            for (var i = 0, ii = buffer.length; i < ii; i++) {\n\t              buffer[i] ^= 0xff;\n\t            }\n\t          }\n\t          return imgData;\n\t        }\n\t        if (this.image instanceof _stream.JpegStream && !this.smask && !this.mask && (this.colorSpace.name === 'DeviceGray' || this.colorSpace.name === 'DeviceRGB' || this.colorSpace.name === 'DeviceCMYK')) {\n\t          imgData.kind = _util.ImageKind.RGB_24BPP;\n\t          imgData.data = this.getImageBytes(originalHeight * rowBytes, drawWidth, drawHeight, true);\n\t          return imgData;\n\t        }\n\t      }\n\t      imgArray = this.getImageBytes(originalHeight * rowBytes);\n\t      var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n\t      var comps = this.getComponents(imgArray);\n\t      var alpha01, maybeUndoPreblend;\n\t      if (!forceRGBA && !this.smask && !this.mask) {\n\t        imgData.kind = _util.ImageKind.RGB_24BPP;\n\t        imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n\t        alpha01 = 0;\n\t        maybeUndoPreblend = false;\n\t      } else {\n\t        imgData.kind = _util.ImageKind.RGBA_32BPP;\n\t        imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n\t        alpha01 = 1;\n\t        maybeUndoPreblend = true;\n\t        this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n\t      }\n\t      if (this.needsDecode) {\n\t        this.decodeBuffer(comps);\n\t      }\n\t      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n\t      if (maybeUndoPreblend) {\n\t        this.undoPreblend(imgData.data, drawWidth, actualHeight);\n\t      }\n\t      return imgData;\n\t    },\n\t    fillGrayBuffer: function fillGrayBuffer(buffer) {\n\t      var numComps = this.numComps;\n\t      if (numComps !== 1) {\n\t        throw new _util.FormatError('Reading gray scale from a color image: ' + numComps);\n\t      }\n\t      var width = this.width;\n\t      var height = this.height;\n\t      var bpc = this.bpc;\n\t      var rowBytes = width * numComps * bpc + 7 >> 3;\n\t      var imgArray = this.getImageBytes(height * rowBytes);\n\t      var comps = this.getComponents(imgArray);\n\t      var i, length;\n\t      if (bpc === 1) {\n\t        length = width * height;\n\t        if (this.needsDecode) {\n\t          for (i = 0; i < length; ++i) {\n\t            buffer[i] = comps[i] - 1 & 255;\n\t          }\n\t        } else {\n\t          for (i = 0; i < length; ++i) {\n\t            buffer[i] = -comps[i] & 255;\n\t          }\n\t        }\n\t        return;\n\t      }\n\t      if (this.needsDecode) {\n\t        this.decodeBuffer(comps);\n\t      }\n\t      length = width * height;\n\t      var scale = 255 / ((1 << bpc) - 1);\n\t      for (i = 0; i < length; ++i) {\n\t        buffer[i] = scale * comps[i] | 0;\n\t      }\n\t    },\n\t    getImageBytes: function getImageBytes(length, drawWidth, drawHeight) {\n\t      var forceRGB = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\t\n\t      this.image.reset();\n\t      this.image.drawWidth = drawWidth || this.width;\n\t      this.image.drawHeight = drawHeight || this.height;\n\t      this.image.forceRGB = !!forceRGB;\n\t      return this.image.getBytes(length);\n\t    }\n\t  };\n\t  return PDFImage;\n\t}();\n\texports.PDFImage = PDFImage;\n\t\n\t/***/ }),\n\t/* 144 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.AnnotationFactory = exports.AnnotationBorderStyle = exports.Annotation = undefined;\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _obj = __w_pdfjs_require__(73);\n\t\n\tvar _primitives = __w_pdfjs_require__(2);\n\t\n\tvar _colorspace = __w_pdfjs_require__(26);\n\t\n\tvar _evaluator = __w_pdfjs_require__(77);\n\t\n\tvar _stream = __w_pdfjs_require__(5);\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar AnnotationFactory = function () {\n\t  function AnnotationFactory() {\n\t    _classCallCheck(this, AnnotationFactory);\n\t  }\n\t\n\t  _createClass(AnnotationFactory, null, [{\n\t    key: 'create',\n\t    value: function create(xref, ref, pdfManager, idFactory) {\n\t      var dict = xref.fetchIfRef(ref);\n\t      if (!(0, _primitives.isDict)(dict)) {\n\t        return;\n\t      }\n\t      var id = (0, _primitives.isRef)(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\n\t      var subtype = dict.get('Subtype');\n\t      subtype = (0, _primitives.isName)(subtype) ? subtype.name : null;\n\t      var parameters = {\n\t        xref: xref,\n\t        dict: dict,\n\t        ref: (0, _primitives.isRef)(ref) ? ref : null,\n\t        subtype: subtype,\n\t        id: id,\n\t        pdfManager: pdfManager\n\t      };\n\t      switch (subtype) {\n\t        case 'Link':\n\t          return new LinkAnnotation(parameters);\n\t        case 'Text':\n\t          return new TextAnnotation(parameters);\n\t        case 'Widget':\n\t          var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\n\t          fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n\t          switch (fieldType) {\n\t            case 'Tx':\n\t              return new TextWidgetAnnotation(parameters);\n\t            case 'Btn':\n\t              return new ButtonWidgetAnnotation(parameters);\n\t            case 'Ch':\n\t              return new ChoiceWidgetAnnotation(parameters);\n\t          }\n\t          (0, _util.warn)('Unimplemented widget field type \"' + fieldType + '\", ' + 'falling back to base field type.');\n\t          return new WidgetAnnotation(parameters);\n\t        case 'Popup':\n\t          return new PopupAnnotation(parameters);\n\t        case 'Line':\n\t          return new LineAnnotation(parameters);\n\t        case 'Square':\n\t          return new SquareAnnotation(parameters);\n\t        case 'Circle':\n\t          return new CircleAnnotation(parameters);\n\t        case 'PolyLine':\n\t          return new PolylineAnnotation(parameters);\n\t        case 'Polygon':\n\t          return new PolygonAnnotation(parameters);\n\t        case 'Highlight':\n\t          return new HighlightAnnotation(parameters);\n\t        case 'Underline':\n\t          return new UnderlineAnnotation(parameters);\n\t        case 'Squiggly':\n\t          return new SquigglyAnnotation(parameters);\n\t        case 'StrikeOut':\n\t          return new StrikeOutAnnotation(parameters);\n\t        case 'Stamp':\n\t          return new StampAnnotation(parameters);\n\t        case 'FileAttachment':\n\t          return new FileAttachmentAnnotation(parameters);\n\t        default:\n\t          if (!subtype) {\n\t            (0, _util.warn)('Annotation is missing the required /Subtype.');\n\t          } else {\n\t            (0, _util.warn)('Unimplemented annotation type \"' + subtype + '\", ' + 'falling back to base annotation.');\n\t          }\n\t          return new Annotation(parameters);\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return AnnotationFactory;\n\t}();\n\t\n\tfunction getTransformMatrix(rect, bbox, matrix) {\n\t  var bounds = _util.Util.getAxialAlignedBoundingBox(bbox, matrix);\n\t  var minX = bounds[0];\n\t  var minY = bounds[1];\n\t  var maxX = bounds[2];\n\t  var maxY = bounds[3];\n\t  if (minX === maxX || minY === maxY) {\n\t    return [1, 0, 0, 1, rect[0], rect[1]];\n\t  }\n\t  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n\t  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n\t  return [xRatio, 0, 0, yRatio, rect[0] - minX * xRatio, rect[1] - minY * yRatio];\n\t}\n\t\n\tvar Annotation = function () {\n\t  function Annotation(params) {\n\t    _classCallCheck(this, Annotation);\n\t\n\t    var dict = params.dict;\n\t    this.setFlags(dict.get('F'));\n\t    this.setRectangle(dict.getArray('Rect'));\n\t    this.setColor(dict.getArray('C'));\n\t    this.setBorderStyle(dict);\n\t    this.setAppearance(dict);\n\t    this.data = {\n\t      annotationFlags: this.flags,\n\t      borderStyle: this.borderStyle,\n\t      color: this.color,\n\t      hasAppearance: !!this.appearance,\n\t      id: params.id,\n\t      rect: this.rectangle,\n\t      subtype: params.subtype\n\t    };\n\t  }\n\t\n\t  _createClass(Annotation, [{\n\t    key: '_hasFlag',\n\t    value: function _hasFlag(flags, flag) {\n\t      return !!(flags & flag);\n\t    }\n\t  }, {\n\t    key: '_isViewable',\n\t    value: function _isViewable(flags) {\n\t      return !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN) && !this._hasFlag(flags, _util.AnnotationFlag.NOVIEW);\n\t    }\n\t  }, {\n\t    key: '_isPrintable',\n\t    value: function _isPrintable(flags) {\n\t      return this._hasFlag(flags, _util.AnnotationFlag.PRINT) && !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN);\n\t    }\n\t  }, {\n\t    key: 'setFlags',\n\t    value: function setFlags(flags) {\n\t      this.flags = Number.isInteger(flags) && flags > 0 ? flags : 0;\n\t    }\n\t  }, {\n\t    key: 'hasFlag',\n\t    value: function hasFlag(flag) {\n\t      return this._hasFlag(this.flags, flag);\n\t    }\n\t  }, {\n\t    key: 'setRectangle',\n\t    value: function setRectangle(rectangle) {\n\t      if (Array.isArray(rectangle) && rectangle.length === 4) {\n\t        this.rectangle = _util.Util.normalizeRect(rectangle);\n\t      } else {\n\t        this.rectangle = [0, 0, 0, 0];\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setColor',\n\t    value: function setColor(color) {\n\t      var rgbColor = new Uint8Array(3);\n\t      if (!Array.isArray(color)) {\n\t        this.color = rgbColor;\n\t        return;\n\t      }\n\t      switch (color.length) {\n\t        case 0:\n\t          this.color = null;\n\t          break;\n\t        case 1:\n\t          _colorspace.ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n\t          this.color = rgbColor;\n\t          break;\n\t        case 3:\n\t          _colorspace.ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n\t          this.color = rgbColor;\n\t          break;\n\t        case 4:\n\t          _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n\t          this.color = rgbColor;\n\t          break;\n\t        default:\n\t          this.color = rgbColor;\n\t          break;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setBorderStyle',\n\t    value: function setBorderStyle(borderStyle) {\n\t      this.borderStyle = new AnnotationBorderStyle();\n\t      if (!(0, _primitives.isDict)(borderStyle)) {\n\t        return;\n\t      }\n\t      if (borderStyle.has('BS')) {\n\t        var dict = borderStyle.get('BS');\n\t        var dictType = dict.get('Type');\n\t        if (!dictType || (0, _primitives.isName)(dictType, 'Border')) {\n\t          this.borderStyle.setWidth(dict.get('W'));\n\t          this.borderStyle.setStyle(dict.get('S'));\n\t          this.borderStyle.setDashArray(dict.getArray('D'));\n\t        }\n\t      } else if (borderStyle.has('Border')) {\n\t        var array = borderStyle.getArray('Border');\n\t        if (Array.isArray(array) && array.length >= 3) {\n\t          this.borderStyle.setHorizontalCornerRadius(array[0]);\n\t          this.borderStyle.setVerticalCornerRadius(array[1]);\n\t          this.borderStyle.setWidth(array[2]);\n\t          if (array.length === 4) {\n\t            this.borderStyle.setDashArray(array[3]);\n\t          }\n\t        }\n\t      } else {\n\t        this.borderStyle.setWidth(0);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setAppearance',\n\t    value: function setAppearance(dict) {\n\t      this.appearance = null;\n\t      var appearanceStates = dict.get('AP');\n\t      if (!(0, _primitives.isDict)(appearanceStates)) {\n\t        return;\n\t      }\n\t      var normalAppearanceState = appearanceStates.get('N');\n\t      if ((0, _primitives.isStream)(normalAppearanceState)) {\n\t        this.appearance = normalAppearanceState;\n\t        return;\n\t      }\n\t      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n\t        return;\n\t      }\n\t      var as = dict.get('AS');\n\t      if (!(0, _primitives.isName)(as) || !normalAppearanceState.has(as.name)) {\n\t        return;\n\t      }\n\t      this.appearance = normalAppearanceState.get(as.name);\n\t    }\n\t  }, {\n\t    key: '_preparePopup',\n\t    value: function _preparePopup(dict) {\n\t      if (!dict.has('C')) {\n\t        this.data.color = null;\n\t      }\n\t      this.data.hasPopup = dict.has('Popup');\n\t      this.data.title = (0, _util.stringToPDFString)(dict.get('T') || '');\n\t      this.data.contents = (0, _util.stringToPDFString)(dict.get('Contents') || '');\n\t    }\n\t  }, {\n\t    key: 'loadResources',\n\t    value: function loadResources(keys) {\n\t      return this.appearance.dict.getAsync('Resources').then(function (resources) {\n\t        if (!resources) {\n\t          return;\n\t        }\n\t        var objectLoader = new _obj.ObjectLoader(resources, keys, resources.xref);\n\t        return objectLoader.load().then(function () {\n\t          return resources;\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'getOperatorList',\n\t    value: function getOperatorList(evaluator, task, renderForms) {\n\t      var _this = this;\n\t\n\t      if (!this.appearance) {\n\t        return Promise.resolve(new _evaluator.OperatorList());\n\t      }\n\t      var data = this.data;\n\t      var appearanceDict = this.appearance.dict;\n\t      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n\t      var bbox = appearanceDict.getArray('BBox') || [0, 0, 1, 1];\n\t      var matrix = appearanceDict.getArray('Matrix') || [1, 0, 0, 1, 0, 0];\n\t      var transform = getTransformMatrix(data.rect, bbox, matrix);\n\t      return resourcesPromise.then(function (resources) {\n\t        var opList = new _evaluator.OperatorList();\n\t        opList.addOp(_util.OPS.beginAnnotation, [data.rect, transform, matrix]);\n\t        return evaluator.getOperatorList({\n\t          stream: _this.appearance,\n\t          task: task,\n\t          resources: resources,\n\t          operatorList: opList\n\t        }).then(function () {\n\t          opList.addOp(_util.OPS.endAnnotation, []);\n\t          _this.appearance.reset();\n\t          return opList;\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'viewable',\n\t    get: function get() {\n\t      if (this.flags === 0) {\n\t        return true;\n\t      }\n\t      return this._isViewable(this.flags);\n\t    }\n\t  }, {\n\t    key: 'printable',\n\t    get: function get() {\n\t      if (this.flags === 0) {\n\t        return false;\n\t      }\n\t      return this._isPrintable(this.flags);\n\t    }\n\t  }]);\n\t\n\t  return Annotation;\n\t}();\n\t\n\tvar AnnotationBorderStyle = function () {\n\t  function AnnotationBorderStyle() {\n\t    _classCallCheck(this, AnnotationBorderStyle);\n\t\n\t    this.width = 1;\n\t    this.style = _util.AnnotationBorderStyleType.SOLID;\n\t    this.dashArray = [3];\n\t    this.horizontalCornerRadius = 0;\n\t    this.verticalCornerRadius = 0;\n\t  }\n\t\n\t  _createClass(AnnotationBorderStyle, [{\n\t    key: 'setWidth',\n\t    value: function setWidth(width) {\n\t      if (Number.isInteger(width)) {\n\t        this.width = width;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setStyle',\n\t    value: function setStyle(style) {\n\t      if (!style) {\n\t        return;\n\t      }\n\t      switch (style.name) {\n\t        case 'S':\n\t          this.style = _util.AnnotationBorderStyleType.SOLID;\n\t          break;\n\t        case 'D':\n\t          this.style = _util.AnnotationBorderStyleType.DASHED;\n\t          break;\n\t        case 'B':\n\t          this.style = _util.AnnotationBorderStyleType.BEVELED;\n\t          break;\n\t        case 'I':\n\t          this.style = _util.AnnotationBorderStyleType.INSET;\n\t          break;\n\t        case 'U':\n\t          this.style = _util.AnnotationBorderStyleType.UNDERLINE;\n\t          break;\n\t        default:\n\t          break;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setDashArray',\n\t    value: function setDashArray(dashArray) {\n\t      if (Array.isArray(dashArray) && dashArray.length > 0) {\n\t        var isValid = true;\n\t        var allZeros = true;\n\t        for (var i = 0, len = dashArray.length; i < len; i++) {\n\t          var element = dashArray[i];\n\t          var validNumber = +element >= 0;\n\t          if (!validNumber) {\n\t            isValid = false;\n\t            break;\n\t          } else if (element > 0) {\n\t            allZeros = false;\n\t          }\n\t        }\n\t        if (isValid && !allZeros) {\n\t          this.dashArray = dashArray;\n\t        } else {\n\t          this.width = 0;\n\t        }\n\t      } else if (dashArray) {\n\t        this.width = 0;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setHorizontalCornerRadius',\n\t    value: function setHorizontalCornerRadius(radius) {\n\t      if (Number.isInteger(radius)) {\n\t        this.horizontalCornerRadius = radius;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setVerticalCornerRadius',\n\t    value: function setVerticalCornerRadius(radius) {\n\t      if (Number.isInteger(radius)) {\n\t        this.verticalCornerRadius = radius;\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return AnnotationBorderStyle;\n\t}();\n\t\n\tvar WidgetAnnotation = function (_Annotation) {\n\t  _inherits(WidgetAnnotation, _Annotation);\n\t\n\t  function WidgetAnnotation(params) {\n\t    _classCallCheck(this, WidgetAnnotation);\n\t\n\t    var _this2 = _possibleConstructorReturn(this, (WidgetAnnotation.__proto__ || Object.getPrototypeOf(WidgetAnnotation)).call(this, params));\n\t\n\t    var dict = params.dict;\n\t    var data = _this2.data;\n\t    data.annotationType = _util.AnnotationType.WIDGET;\n\t    data.fieldName = _this2._constructFieldName(dict);\n\t    data.fieldValue = _util.Util.getInheritableProperty(dict, 'V', true);\n\t    data.alternativeText = (0, _util.stringToPDFString)(dict.get('TU') || '');\n\t    data.defaultAppearance = _util.Util.getInheritableProperty(dict, 'DA') || '';\n\t    var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\n\t    data.fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n\t    _this2.fieldResources = _util.Util.getInheritableProperty(dict, 'DR') || _primitives.Dict.empty;\n\t    data.fieldFlags = _util.Util.getInheritableProperty(dict, 'Ff');\n\t    if (!Number.isInteger(data.fieldFlags) || data.fieldFlags < 0) {\n\t      data.fieldFlags = 0;\n\t    }\n\t    data.readOnly = _this2.hasFieldFlag(_util.AnnotationFieldFlag.READONLY);\n\t    if (data.fieldType === 'Sig') {\n\t      _this2.setFlags(_util.AnnotationFlag.HIDDEN);\n\t    }\n\t    return _this2;\n\t  }\n\t\n\t  _createClass(WidgetAnnotation, [{\n\t    key: '_constructFieldName',\n\t    value: function _constructFieldName(dict) {\n\t      if (!dict.has('T') && !dict.has('Parent')) {\n\t        (0, _util.warn)('Unknown field name, falling back to empty field name.');\n\t        return '';\n\t      }\n\t      if (!dict.has('Parent')) {\n\t        return (0, _util.stringToPDFString)(dict.get('T'));\n\t      }\n\t      var fieldName = [];\n\t      if (dict.has('T')) {\n\t        fieldName.unshift((0, _util.stringToPDFString)(dict.get('T')));\n\t      }\n\t      var loopDict = dict;\n\t      while (loopDict.has('Parent')) {\n\t        loopDict = loopDict.get('Parent');\n\t        if (!(0, _primitives.isDict)(loopDict)) {\n\t          break;\n\t        }\n\t        if (loopDict.has('T')) {\n\t          fieldName.unshift((0, _util.stringToPDFString)(loopDict.get('T')));\n\t        }\n\t      }\n\t      return fieldName.join('.');\n\t    }\n\t  }, {\n\t    key: 'hasFieldFlag',\n\t    value: function hasFieldFlag(flag) {\n\t      return !!(this.data.fieldFlags & flag);\n\t    }\n\t  }, {\n\t    key: 'getOperatorList',\n\t    value: function getOperatorList(evaluator, task, renderForms) {\n\t      if (renderForms) {\n\t        return Promise.resolve(new _evaluator.OperatorList());\n\t      }\n\t      return _get(WidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(WidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n\t    }\n\t  }]);\n\t\n\t  return WidgetAnnotation;\n\t}(Annotation);\n\t\n\tvar TextWidgetAnnotation = function (_WidgetAnnotation) {\n\t  _inherits(TextWidgetAnnotation, _WidgetAnnotation);\n\t\n\t  function TextWidgetAnnotation(params) {\n\t    _classCallCheck(this, TextWidgetAnnotation);\n\t\n\t    var _this3 = _possibleConstructorReturn(this, (TextWidgetAnnotation.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation)).call(this, params));\n\t\n\t    _this3.data.fieldValue = (0, _util.stringToPDFString)(_this3.data.fieldValue || '');\n\t    var alignment = _util.Util.getInheritableProperty(params.dict, 'Q');\n\t    if (!Number.isInteger(alignment) || alignment < 0 || alignment > 2) {\n\t      alignment = null;\n\t    }\n\t    _this3.data.textAlignment = alignment;\n\t    var maximumLength = _util.Util.getInheritableProperty(params.dict, 'MaxLen');\n\t    if (!Number.isInteger(maximumLength) || maximumLength < 0) {\n\t      maximumLength = null;\n\t    }\n\t    _this3.data.maxLen = maximumLength;\n\t    _this3.data.multiLine = _this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE);\n\t    _this3.data.comb = _this3.hasFieldFlag(_util.AnnotationFieldFlag.COMB) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT) && _this3.data.maxLen !== null;\n\t    return _this3;\n\t  }\n\t\n\t  _createClass(TextWidgetAnnotation, [{\n\t    key: 'getOperatorList',\n\t    value: function getOperatorList(evaluator, task, renderForms) {\n\t      if (renderForms || this.appearance) {\n\t        return _get(TextWidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n\t      }\n\t      var operatorList = new _evaluator.OperatorList();\n\t      if (!this.data.defaultAppearance) {\n\t        return Promise.resolve(operatorList);\n\t      }\n\t      var stream = new _stream.Stream((0, _util.stringToBytes)(this.data.defaultAppearance));\n\t      return evaluator.getOperatorList({\n\t        stream: stream,\n\t        task: task,\n\t        resources: this.fieldResources,\n\t        operatorList: operatorList\n\t      }).then(function () {\n\t        return operatorList;\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return TextWidgetAnnotation;\n\t}(WidgetAnnotation);\n\t\n\tvar ButtonWidgetAnnotation = function (_WidgetAnnotation2) {\n\t  _inherits(ButtonWidgetAnnotation, _WidgetAnnotation2);\n\t\n\t  function ButtonWidgetAnnotation(params) {\n\t    _classCallCheck(this, ButtonWidgetAnnotation);\n\t\n\t    var _this4 = _possibleConstructorReturn(this, (ButtonWidgetAnnotation.__proto__ || Object.getPrototypeOf(ButtonWidgetAnnotation)).call(this, params));\n\t\n\t    _this4.data.checkBox = !_this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n\t    if (_this4.data.checkBox) {\n\t      if (!(0, _primitives.isName)(_this4.data.fieldValue)) {\n\t        return _possibleConstructorReturn(_this4);\n\t      }\n\t      _this4.data.fieldValue = _this4.data.fieldValue.name;\n\t    }\n\t    _this4.data.radioButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n\t    if (_this4.data.radioButton) {\n\t      _this4.data.fieldValue = _this4.data.buttonValue = null;\n\t      var fieldParent = params.dict.get('Parent');\n\t      if ((0, _primitives.isDict)(fieldParent) && fieldParent.has('V')) {\n\t        var fieldParentValue = fieldParent.get('V');\n\t        if ((0, _primitives.isName)(fieldParentValue)) {\n\t          _this4.data.fieldValue = fieldParentValue.name;\n\t        }\n\t      }\n\t      var appearanceStates = params.dict.get('AP');\n\t      if (!(0, _primitives.isDict)(appearanceStates)) {\n\t        return _possibleConstructorReturn(_this4);\n\t      }\n\t      var normalAppearanceState = appearanceStates.get('N');\n\t      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n\t        return _possibleConstructorReturn(_this4);\n\t      }\n\t      var keys = normalAppearanceState.getKeys();\n\t      for (var i = 0, ii = keys.length; i < ii; i++) {\n\t        if (keys[i] !== 'Off') {\n\t          _this4.data.buttonValue = keys[i];\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    return _this4;\n\t  }\n\t\n\t  return ButtonWidgetAnnotation;\n\t}(WidgetAnnotation);\n\t\n\tvar ChoiceWidgetAnnotation = function (_WidgetAnnotation3) {\n\t  _inherits(ChoiceWidgetAnnotation, _WidgetAnnotation3);\n\t\n\t  function ChoiceWidgetAnnotation(params) {\n\t    _classCallCheck(this, ChoiceWidgetAnnotation);\n\t\n\t    var _this5 = _possibleConstructorReturn(this, (ChoiceWidgetAnnotation.__proto__ || Object.getPrototypeOf(ChoiceWidgetAnnotation)).call(this, params));\n\t\n\t    _this5.data.options = [];\n\t    var options = _util.Util.getInheritableProperty(params.dict, 'Opt');\n\t    if (Array.isArray(options)) {\n\t      var xref = params.xref;\n\t      for (var i = 0, ii = options.length; i < ii; i++) {\n\t        var option = xref.fetchIfRef(options[i]);\n\t        var isOptionArray = Array.isArray(option);\n\t        _this5.data.options[i] = {\n\t          exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\n\t          displayValue: isOptionArray ? xref.fetchIfRef(option[1]) : option\n\t        };\n\t      }\n\t    }\n\t    if (!Array.isArray(_this5.data.fieldValue)) {\n\t      _this5.data.fieldValue = [_this5.data.fieldValue];\n\t    }\n\t    _this5.data.combo = _this5.hasFieldFlag(_util.AnnotationFieldFlag.COMBO);\n\t    _this5.data.multiSelect = _this5.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT);\n\t    return _this5;\n\t  }\n\t\n\t  return ChoiceWidgetAnnotation;\n\t}(WidgetAnnotation);\n\t\n\tvar TextAnnotation = function (_Annotation2) {\n\t  _inherits(TextAnnotation, _Annotation2);\n\t\n\t  function TextAnnotation(parameters) {\n\t    _classCallCheck(this, TextAnnotation);\n\t\n\t    var DEFAULT_ICON_SIZE = 22;\n\t\n\t    var _this6 = _possibleConstructorReturn(this, (TextAnnotation.__proto__ || Object.getPrototypeOf(TextAnnotation)).call(this, parameters));\n\t\n\t    _this6.data.annotationType = _util.AnnotationType.TEXT;\n\t    if (_this6.data.hasAppearance) {\n\t      _this6.data.name = 'NoIcon';\n\t    } else {\n\t      _this6.data.rect[1] = _this6.data.rect[3] - DEFAULT_ICON_SIZE;\n\t      _this6.data.rect[2] = _this6.data.rect[0] + DEFAULT_ICON_SIZE;\n\t      _this6.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\n\t    }\n\t    _this6._preparePopup(parameters.dict);\n\t    return _this6;\n\t  }\n\t\n\t  return TextAnnotation;\n\t}(Annotation);\n\t\n\tvar LinkAnnotation = function (_Annotation3) {\n\t  _inherits(LinkAnnotation, _Annotation3);\n\t\n\t  function LinkAnnotation(params) {\n\t    _classCallCheck(this, LinkAnnotation);\n\t\n\t    var _this7 = _possibleConstructorReturn(this, (LinkAnnotation.__proto__ || Object.getPrototypeOf(LinkAnnotation)).call(this, params));\n\t\n\t    _this7.data.annotationType = _util.AnnotationType.LINK;\n\t    _obj.Catalog.parseDestDictionary({\n\t      destDict: params.dict,\n\t      resultObj: _this7.data,\n\t      docBaseUrl: params.pdfManager.docBaseUrl\n\t    });\n\t    return _this7;\n\t  }\n\t\n\t  return LinkAnnotation;\n\t}(Annotation);\n\t\n\tvar PopupAnnotation = function (_Annotation4) {\n\t  _inherits(PopupAnnotation, _Annotation4);\n\t\n\t  function PopupAnnotation(parameters) {\n\t    _classCallCheck(this, PopupAnnotation);\n\t\n\t    var _this8 = _possibleConstructorReturn(this, (PopupAnnotation.__proto__ || Object.getPrototypeOf(PopupAnnotation)).call(this, parameters));\n\t\n\t    _this8.data.annotationType = _util.AnnotationType.POPUP;\n\t    var dict = parameters.dict;\n\t    var parentItem = dict.get('Parent');\n\t    if (!parentItem) {\n\t      (0, _util.warn)('Popup annotation has a missing or invalid parent annotation.');\n\t      return _possibleConstructorReturn(_this8);\n\t    }\n\t    var parentSubtype = parentItem.get('Subtype');\n\t    _this8.data.parentType = (0, _primitives.isName)(parentSubtype) ? parentSubtype.name : null;\n\t    _this8.data.parentId = dict.getRaw('Parent').toString();\n\t    _this8.data.title = (0, _util.stringToPDFString)(parentItem.get('T') || '');\n\t    _this8.data.contents = (0, _util.stringToPDFString)(parentItem.get('Contents') || '');\n\t    if (!parentItem.has('C')) {\n\t      _this8.data.color = null;\n\t    } else {\n\t      _this8.setColor(parentItem.getArray('C'));\n\t      _this8.data.color = _this8.color;\n\t    }\n\t    if (!_this8.viewable) {\n\t      var parentFlags = parentItem.get('F');\n\t      if (_this8._isViewable(parentFlags)) {\n\t        _this8.setFlags(parentFlags);\n\t      }\n\t    }\n\t    return _this8;\n\t  }\n\t\n\t  return PopupAnnotation;\n\t}(Annotation);\n\t\n\tvar LineAnnotation = function (_Annotation5) {\n\t  _inherits(LineAnnotation, _Annotation5);\n\t\n\t  function LineAnnotation(parameters) {\n\t    _classCallCheck(this, LineAnnotation);\n\t\n\t    var _this9 = _possibleConstructorReturn(this, (LineAnnotation.__proto__ || Object.getPrototypeOf(LineAnnotation)).call(this, parameters));\n\t\n\t    _this9.data.annotationType = _util.AnnotationType.LINE;\n\t    var dict = parameters.dict;\n\t    _this9.data.lineCoordinates = _util.Util.normalizeRect(dict.getArray('L'));\n\t    _this9._preparePopup(dict);\n\t    return _this9;\n\t  }\n\t\n\t  return LineAnnotation;\n\t}(Annotation);\n\t\n\tvar SquareAnnotation = function (_Annotation6) {\n\t  _inherits(SquareAnnotation, _Annotation6);\n\t\n\t  function SquareAnnotation(parameters) {\n\t    _classCallCheck(this, SquareAnnotation);\n\t\n\t    var _this10 = _possibleConstructorReturn(this, (SquareAnnotation.__proto__ || Object.getPrototypeOf(SquareAnnotation)).call(this, parameters));\n\t\n\t    _this10.data.annotationType = _util.AnnotationType.SQUARE;\n\t    _this10._preparePopup(parameters.dict);\n\t    return _this10;\n\t  }\n\t\n\t  return SquareAnnotation;\n\t}(Annotation);\n\t\n\tvar CircleAnnotation = function (_Annotation7) {\n\t  _inherits(CircleAnnotation, _Annotation7);\n\t\n\t  function CircleAnnotation(parameters) {\n\t    _classCallCheck(this, CircleAnnotation);\n\t\n\t    var _this11 = _possibleConstructorReturn(this, (CircleAnnotation.__proto__ || Object.getPrototypeOf(CircleAnnotation)).call(this, parameters));\n\t\n\t    _this11.data.annotationType = _util.AnnotationType.CIRCLE;\n\t    _this11._preparePopup(parameters.dict);\n\t    return _this11;\n\t  }\n\t\n\t  return CircleAnnotation;\n\t}(Annotation);\n\t\n\tvar PolylineAnnotation = function (_Annotation8) {\n\t  _inherits(PolylineAnnotation, _Annotation8);\n\t\n\t  function PolylineAnnotation(parameters) {\n\t    _classCallCheck(this, PolylineAnnotation);\n\t\n\t    var _this12 = _possibleConstructorReturn(this, (PolylineAnnotation.__proto__ || Object.getPrototypeOf(PolylineAnnotation)).call(this, parameters));\n\t\n\t    _this12.data.annotationType = _util.AnnotationType.POLYLINE;\n\t    var dict = parameters.dict;\n\t    var rawVertices = dict.getArray('Vertices');\n\t    _this12.data.vertices = [];\n\t    for (var i = 0, ii = rawVertices.length; i < ii; i += 2) {\n\t      _this12.data.vertices.push({\n\t        x: rawVertices[i],\n\t        y: rawVertices[i + 1]\n\t      });\n\t    }\n\t    _this12._preparePopup(dict);\n\t    return _this12;\n\t  }\n\t\n\t  return PolylineAnnotation;\n\t}(Annotation);\n\t\n\tvar PolygonAnnotation = function (_PolylineAnnotation) {\n\t  _inherits(PolygonAnnotation, _PolylineAnnotation);\n\t\n\t  function PolygonAnnotation(parameters) {\n\t    _classCallCheck(this, PolygonAnnotation);\n\t\n\t    var _this13 = _possibleConstructorReturn(this, (PolygonAnnotation.__proto__ || Object.getPrototypeOf(PolygonAnnotation)).call(this, parameters));\n\t\n\t    _this13.data.annotationType = _util.AnnotationType.POLYGON;\n\t    return _this13;\n\t  }\n\t\n\t  return PolygonAnnotation;\n\t}(PolylineAnnotation);\n\t\n\tvar HighlightAnnotation = function (_Annotation9) {\n\t  _inherits(HighlightAnnotation, _Annotation9);\n\t\n\t  function HighlightAnnotation(parameters) {\n\t    _classCallCheck(this, HighlightAnnotation);\n\t\n\t    var _this14 = _possibleConstructorReturn(this, (HighlightAnnotation.__proto__ || Object.getPrototypeOf(HighlightAnnotation)).call(this, parameters));\n\t\n\t    _this14.data.annotationType = _util.AnnotationType.HIGHLIGHT;\n\t    _this14._preparePopup(parameters.dict);\n\t    return _this14;\n\t  }\n\t\n\t  return HighlightAnnotation;\n\t}(Annotation);\n\t\n\tvar UnderlineAnnotation = function (_Annotation10) {\n\t  _inherits(UnderlineAnnotation, _Annotation10);\n\t\n\t  function UnderlineAnnotation(parameters) {\n\t    _classCallCheck(this, UnderlineAnnotation);\n\t\n\t    var _this15 = _possibleConstructorReturn(this, (UnderlineAnnotation.__proto__ || Object.getPrototypeOf(UnderlineAnnotation)).call(this, parameters));\n\t\n\t    _this15.data.annotationType = _util.AnnotationType.UNDERLINE;\n\t    _this15._preparePopup(parameters.dict);\n\t    return _this15;\n\t  }\n\t\n\t  return UnderlineAnnotation;\n\t}(Annotation);\n\t\n\tvar SquigglyAnnotation = function (_Annotation11) {\n\t  _inherits(SquigglyAnnotation, _Annotation11);\n\t\n\t  function SquigglyAnnotation(parameters) {\n\t    _classCallCheck(this, SquigglyAnnotation);\n\t\n\t    var _this16 = _possibleConstructorReturn(this, (SquigglyAnnotation.__proto__ || Object.getPrototypeOf(SquigglyAnnotation)).call(this, parameters));\n\t\n\t    _this16.data.annotationType = _util.AnnotationType.SQUIGGLY;\n\t    _this16._preparePopup(parameters.dict);\n\t    return _this16;\n\t  }\n\t\n\t  return SquigglyAnnotation;\n\t}(Annotation);\n\t\n\tvar StrikeOutAnnotation = function (_Annotation12) {\n\t  _inherits(StrikeOutAnnotation, _Annotation12);\n\t\n\t  function StrikeOutAnnotation(parameters) {\n\t    _classCallCheck(this, StrikeOutAnnotation);\n\t\n\t    var _this17 = _possibleConstructorReturn(this, (StrikeOutAnnotation.__proto__ || Object.getPrototypeOf(StrikeOutAnnotation)).call(this, parameters));\n\t\n\t    _this17.data.annotationType = _util.AnnotationType.STRIKEOUT;\n\t    _this17._preparePopup(parameters.dict);\n\t    return _this17;\n\t  }\n\t\n\t  return StrikeOutAnnotation;\n\t}(Annotation);\n\t\n\tvar StampAnnotation = function (_Annotation13) {\n\t  _inherits(StampAnnotation, _Annotation13);\n\t\n\t  function StampAnnotation(parameters) {\n\t    _classCallCheck(this, StampAnnotation);\n\t\n\t    var _this18 = _possibleConstructorReturn(this, (StampAnnotation.__proto__ || Object.getPrototypeOf(StampAnnotation)).call(this, parameters));\n\t\n\t    _this18.data.annotationType = _util.AnnotationType.STAMP;\n\t    _this18._preparePopup(parameters.dict);\n\t    return _this18;\n\t  }\n\t\n\t  return StampAnnotation;\n\t}(Annotation);\n\t\n\tvar FileAttachmentAnnotation = function (_Annotation14) {\n\t  _inherits(FileAttachmentAnnotation, _Annotation14);\n\t\n\t  function FileAttachmentAnnotation(parameters) {\n\t    _classCallCheck(this, FileAttachmentAnnotation);\n\t\n\t    var _this19 = _possibleConstructorReturn(this, (FileAttachmentAnnotation.__proto__ || Object.getPrototypeOf(FileAttachmentAnnotation)).call(this, parameters));\n\t\n\t    var file = new _obj.FileSpec(parameters.dict.get('FS'), parameters.xref);\n\t    _this19.data.annotationType = _util.AnnotationType.FILEATTACHMENT;\n\t    _this19.data.file = file.serializable;\n\t    _this19._preparePopup(parameters.dict);\n\t    return _this19;\n\t  }\n\t\n\t  return FileAttachmentAnnotation;\n\t}(Annotation);\n\t\n\texports.Annotation = Annotation;\n\texports.AnnotationBorderStyle = AnnotationBorderStyle;\n\texports.AnnotationFactory = AnnotationFactory;\n\t\n\t/***/ })\n\t/******/ ]);\n\t});\n\t//# sourceMappingURL=pdf.worker.js.map\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 28), (function() { return this; }())))\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 2.2.bundle.js","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf.worker\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf.worker\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf.worker\"] = root.pdfjsDistBuildPdfWorker = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __w_pdfjs_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__w_pdfjs_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__w_pdfjs_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__w_pdfjs_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__w_pdfjs_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__w_pdfjs_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 82);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unreachable = exports.warn = exports.utf8StringToString = exports.stringToUTF8String = exports.stringToPDFString = exports.stringToBytes = exports.string32 = exports.shadow = exports.setVerbosityLevel = exports.ReadableStream = exports.removeNullCharacters = exports.readUint32 = exports.readUint16 = exports.readInt8 = exports.log2 = exports.loadJpegStream = exports.isEvalSupported = exports.isLittleEndian = exports.createValidAbsoluteUrl = exports.isSameOrigin = exports.isNodeJS = exports.isSpace = exports.isString = exports.isNum = exports.isEmptyObj = exports.isBool = exports.isArrayBuffer = exports.info = exports.getVerbosityLevel = exports.getLookupTableFactory = exports.deprecated = exports.createObjectURL = exports.createPromiseCapability = exports.createBlob = exports.bytesToString = exports.assert = exports.arraysToBytes = exports.arrayByteLength = exports.FormatError = exports.XRefParseException = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.StatTimer = exports.PasswordResponses = exports.PasswordException = exports.PageViewport = exports.NotImplementedException = exports.NativeImageDecoding = exports.MissingPDFException = exports.MissingDataException = exports.MessageHandler = exports.InvalidPDFException = exports.AbortException = exports.CMapCompressionType = exports.ImageKind = exports.FontType = exports.AnnotationType = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.UNSUPPORTED_FEATURES = exports.VERBOSITY_LEVELS = exports.OPS = exports.IDENTITY_MATRIX = exports.FONT_IDENTITY_MATRIX = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n__w_pdfjs_require__(84);\n\nvar _streams_polyfill = __w_pdfjs_require__(124);\n\nvar FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\nvar NativeImageDecoding = {\n  NONE: 'none',\n  DECODE: 'decode',\n  DISPLAY: 'display'\n};\nvar TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4\n};\nvar ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3\n};\nvar AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26\n};\nvar AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200\n};\nvar AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000\n};\nvar AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5\n};\nvar StreamType = {\n  UNKNOWN: 0,\n  FLATE: 1,\n  LZW: 2,\n  DCT: 3,\n  JPX: 4,\n  JBIG: 5,\n  A85: 6,\n  AHX: 7,\n  CCF: 8,\n  RL: 9\n};\nvar FontType = {\n  UNKNOWN: 0,\n  TYPE1: 1,\n  TYPE1C: 2,\n  CIDFONTTYPE0: 3,\n  CIDFONTTYPE0C: 4,\n  TRUETYPE: 5,\n  CIDFONTTYPE2: 6,\n  TYPE3: 7,\n  OPENTYPE: 8,\n  TYPE0: 9,\n  MMTYPE1: 10\n};\nvar VERBOSITY_LEVELS = {\n  errors: 0,\n  warnings: 1,\n  infos: 5\n};\nvar CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2\n};\nvar OPS = {\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91\n};\nvar verbosity = VERBOSITY_LEVELS.warnings;\nfunction setVerbosityLevel(level) {\n  verbosity = level;\n}\nfunction getVerbosityLevel() {\n  return verbosity;\n}\nfunction info(msg) {\n  if (verbosity >= VERBOSITY_LEVELS.infos) {\n    console.log('Info: ' + msg);\n  }\n}\nfunction warn(msg) {\n  if (verbosity >= VERBOSITY_LEVELS.warnings) {\n    console.log('Warning: ' + msg);\n  }\n}\nfunction deprecated(details) {\n  console.log('Deprecated API usage: ' + details);\n}\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\nvar UNSUPPORTED_FEATURES = {\n  unknown: 'unknown',\n  forms: 'forms',\n  javaScript: 'javaScript',\n  smask: 'smask',\n  shadingPattern: 'shadingPattern',\n  font: 'font'\n};\nfunction isSameOrigin(baseUrl, otherUrl) {\n  try {\n    var base = new URL(baseUrl);\n    if (!base.origin || base.origin === 'null') {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n  var other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\nfunction isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case 'http:':\n    case 'https:':\n    case 'ftp:':\n    case 'mailto:':\n    case 'tel:':\n      return true;\n    default:\n      return false;\n  }\n}\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    var absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {}\n  return null;\n}\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value: value,\n    enumerable: true,\n    configurable: true,\n    writable: false\n  });\n  return value;\n}\nfunction getLookupTableFactory(initializer) {\n  var lookup;\n  return function () {\n    if (initializer) {\n      lookup = Object.create(null);\n      initializer(lookup);\n      initializer = null;\n    }\n    return lookup;\n  };\n}\nvar PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2\n};\nvar PasswordException = function PasswordExceptionClosure() {\n  function PasswordException(msg, code) {\n    this.name = 'PasswordException';\n    this.message = msg;\n    this.code = code;\n  }\n  PasswordException.prototype = new Error();\n  PasswordException.constructor = PasswordException;\n  return PasswordException;\n}();\nvar UnknownErrorException = function UnknownErrorExceptionClosure() {\n  function UnknownErrorException(msg, details) {\n    this.name = 'UnknownErrorException';\n    this.message = msg;\n    this.details = details;\n  }\n  UnknownErrorException.prototype = new Error();\n  UnknownErrorException.constructor = UnknownErrorException;\n  return UnknownErrorException;\n}();\nvar InvalidPDFException = function InvalidPDFExceptionClosure() {\n  function InvalidPDFException(msg) {\n    this.name = 'InvalidPDFException';\n    this.message = msg;\n  }\n  InvalidPDFException.prototype = new Error();\n  InvalidPDFException.constructor = InvalidPDFException;\n  return InvalidPDFException;\n}();\nvar MissingPDFException = function MissingPDFExceptionClosure() {\n  function MissingPDFException(msg) {\n    this.name = 'MissingPDFException';\n    this.message = msg;\n  }\n  MissingPDFException.prototype = new Error();\n  MissingPDFException.constructor = MissingPDFException;\n  return MissingPDFException;\n}();\nvar UnexpectedResponseException = function UnexpectedResponseExceptionClosure() {\n  function UnexpectedResponseException(msg, status) {\n    this.name = 'UnexpectedResponseException';\n    this.message = msg;\n    this.status = status;\n  }\n  UnexpectedResponseException.prototype = new Error();\n  UnexpectedResponseException.constructor = UnexpectedResponseException;\n  return UnexpectedResponseException;\n}();\nvar NotImplementedException = function NotImplementedExceptionClosure() {\n  function NotImplementedException(msg) {\n    this.message = msg;\n  }\n  NotImplementedException.prototype = new Error();\n  NotImplementedException.prototype.name = 'NotImplementedException';\n  NotImplementedException.constructor = NotImplementedException;\n  return NotImplementedException;\n}();\nvar MissingDataException = function MissingDataExceptionClosure() {\n  function MissingDataException(begin, end) {\n    this.begin = begin;\n    this.end = end;\n    this.message = 'Missing data [' + begin + ', ' + end + ')';\n  }\n  MissingDataException.prototype = new Error();\n  MissingDataException.prototype.name = 'MissingDataException';\n  MissingDataException.constructor = MissingDataException;\n  return MissingDataException;\n}();\nvar XRefParseException = function XRefParseExceptionClosure() {\n  function XRefParseException(msg) {\n    this.message = msg;\n  }\n  XRefParseException.prototype = new Error();\n  XRefParseException.prototype.name = 'XRefParseException';\n  XRefParseException.constructor = XRefParseException;\n  return XRefParseException;\n}();\nvar FormatError = function FormatErrorClosure() {\n  function FormatError(msg) {\n    this.message = msg;\n  }\n  FormatError.prototype = new Error();\n  FormatError.prototype.name = 'FormatError';\n  FormatError.constructor = FormatError;\n  return FormatError;\n}();\nvar AbortException = function AbortExceptionClosure() {\n  function AbortException(msg) {\n    this.name = 'AbortException';\n    this.message = msg;\n  }\n  AbortException.prototype = new Error();\n  AbortException.constructor = AbortException;\n  return AbortException;\n}();\nvar NullCharactersRegExp = /\\x00/g;\nfunction removeNullCharacters(str) {\n  if (typeof str !== 'string') {\n    warn('The argument for removeNullCharacters must be a string.');\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, '');\n}\nfunction bytesToString(bytes) {\n  assert(bytes !== null && (typeof bytes === 'undefined' ? 'undefined' : _typeof(bytes)) === 'object' && bytes.length !== undefined, 'Invalid argument for bytesToString');\n  var length = bytes.length;\n  var MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  var strBuf = [];\n  for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    var chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join('');\n}\nfunction stringToBytes(str) {\n  assert(typeof str === 'string', 'Invalid argument for stringToBytes');\n  var length = str.length;\n  var bytes = new Uint8Array(length);\n  for (var i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xFF;\n  }\n  return bytes;\n}\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined);\n  return arr.byteLength;\n}\nfunction arraysToBytes(arr) {\n  if (arr.length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  var resultLength = 0;\n  var i,\n      ii = arr.length;\n  var item, itemLength;\n  for (i = 0; i < ii; i++) {\n    item = arr[i];\n    itemLength = arrayByteLength(item);\n    resultLength += itemLength;\n  }\n  var pos = 0;\n  var data = new Uint8Array(resultLength);\n  for (i = 0; i < ii; i++) {\n    item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === 'string') {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\nfunction string32(value) {\n  return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n}\nfunction log2(x) {\n  var n = 1,\n      i = 0;\n  while (x > n) {\n    n <<= 1;\n    i++;\n  }\n  return i;\n}\nfunction readInt8(data, start) {\n  return data[start] << 24 >> 24;\n}\nfunction readUint16(data, offset) {\n  return data[offset] << 8 | data[offset + 1];\n}\nfunction readUint32(data, offset) {\n  return (data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3]) >>> 0;\n}\nfunction isLittleEndian() {\n  var buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  var view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nfunction isEvalSupported() {\n  try {\n    new Function('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nvar Util = function UtilClosure() {\n  function Util() {}\n  var rgbBuf = ['rgb(', 0, ',', 0, ',', 0, ')'];\n  Util.makeCssRgb = function Util_makeCssRgb(r, g, b) {\n    rgbBuf[1] = r;\n    rgbBuf[3] = g;\n    rgbBuf[5] = b;\n    return rgbBuf.join('');\n  };\n  Util.transform = function Util_transform(m1, m2) {\n    return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n  };\n  Util.applyTransform = function Util_applyTransform(p, m) {\n    var xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    var yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  };\n  Util.applyInverseTransform = function Util_applyInverseTransform(p, m) {\n    var d = m[0] * m[3] - m[1] * m[2];\n    var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  };\n  Util.getAxialAlignedBoundingBox = function Util_getAxialAlignedBoundingBox(r, m) {\n    var p1 = Util.applyTransform(r, m);\n    var p2 = Util.applyTransform(r.slice(2, 4), m);\n    var p3 = Util.applyTransform([r[0], r[3]], m);\n    var p4 = Util.applyTransform([r[2], r[1]], m);\n    return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n  };\n  Util.inverseTransform = function Util_inverseTransform(m) {\n    var d = m[0] * m[3] - m[1] * m[2];\n    return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n  };\n  Util.apply3dTransform = function Util_apply3dTransform(m, v) {\n    return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n  };\n  Util.singularValueDecompose2dScale = function Util_singularValueDecompose2dScale(m) {\n    var transpose = [m[0], m[2], m[1], m[3]];\n    var a = m[0] * transpose[0] + m[1] * transpose[2];\n    var b = m[0] * transpose[1] + m[1] * transpose[3];\n    var c = m[2] * transpose[0] + m[3] * transpose[2];\n    var d = m[2] * transpose[1] + m[3] * transpose[3];\n    var first = (a + d) / 2;\n    var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n    var sx = first + second || 1;\n    var sy = first - second || 1;\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  };\n  Util.normalizeRect = function Util_normalizeRect(rect) {\n    var r = rect.slice(0);\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  };\n  Util.intersect = function Util_intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n    var orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare),\n        orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare),\n        result = [];\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n    if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return false;\n    }\n    if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return false;\n    }\n    return result;\n  };\n  var ROMAN_NUMBER_MAP = ['', 'C', 'CC', 'CCC', 'CD', 'D', 'DC', 'DCC', 'DCCC', 'CM', '', 'X', 'XX', 'XXX', 'XL', 'L', 'LX', 'LXX', 'LXXX', 'XC', '', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX'];\n  Util.toRoman = function Util_toRoman(number, lowerCase) {\n    assert(Number.isInteger(number) && number > 0, 'The number should be a positive integer.');\n    var pos,\n        romanBuf = [];\n    while (number >= 1000) {\n      number -= 1000;\n      romanBuf.push('M');\n    }\n    pos = number / 100 | 0;\n    number %= 100;\n    romanBuf.push(ROMAN_NUMBER_MAP[pos]);\n    pos = number / 10 | 0;\n    number %= 10;\n    romanBuf.push(ROMAN_NUMBER_MAP[10 + pos]);\n    romanBuf.push(ROMAN_NUMBER_MAP[20 + number]);\n    var romanStr = romanBuf.join('');\n    return lowerCase ? romanStr.toLowerCase() : romanStr;\n  };\n  Util.appendToArray = function Util_appendToArray(arr1, arr2) {\n    Array.prototype.push.apply(arr1, arr2);\n  };\n  Util.prependToArray = function Util_prependToArray(arr1, arr2) {\n    Array.prototype.unshift.apply(arr1, arr2);\n  };\n  Util.extendObj = function extendObj(obj1, obj2) {\n    for (var key in obj2) {\n      obj1[key] = obj2[key];\n    }\n  };\n  Util.getInheritableProperty = function Util_getInheritableProperty(dict, name, getArray) {\n    while (dict && !dict.has(name)) {\n      dict = dict.get('Parent');\n    }\n    if (!dict) {\n      return null;\n    }\n    return getArray ? dict.getArray(name) : dict.get(name);\n  };\n  Util.inherit = function Util_inherit(sub, base, prototype) {\n    sub.prototype = Object.create(base.prototype);\n    sub.prototype.constructor = sub;\n    for (var prop in prototype) {\n      sub.prototype[prop] = prototype[prop];\n    }\n  };\n  Util.loadScript = function Util_loadScript(src, callback) {\n    var script = document.createElement('script');\n    var loaded = false;\n    script.setAttribute('src', src);\n    if (callback) {\n      script.onload = function () {\n        if (!loaded) {\n          callback();\n        }\n        loaded = true;\n      };\n    }\n    document.getElementsByTagName('head')[0].appendChild(script);\n  };\n  return Util;\n}();\nvar PageViewport = function PageViewportClosure() {\n  function PageViewport(viewBox, scale, rotation, offsetX, offsetY, dontFlip) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n    var centerX = (viewBox[2] + viewBox[0]) / 2;\n    var centerY = (viewBox[3] + viewBox[1]) / 2;\n    var rotateA, rotateB, rotateC, rotateD;\n    rotation = rotation % 360;\n    rotation = rotation < 0 ? rotation + 360 : rotation;\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      default:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n    }\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n    var offsetCanvasX, offsetCanvasY;\n    var width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n    this.width = width;\n    this.height = height;\n    this.fontScale = scale;\n  }\n  PageViewport.prototype = {\n    clone: function PageViewPort_clone(args) {\n      args = args || {};\n      var scale = 'scale' in args ? args.scale : this.scale;\n      var rotation = 'rotation' in args ? args.rotation : this.rotation;\n      return new PageViewport(this.viewBox.slice(), scale, rotation, this.offsetX, this.offsetY, args.dontFlip);\n    },\n    convertToViewportPoint: function PageViewport_convertToViewportPoint(x, y) {\n      return Util.applyTransform([x, y], this.transform);\n    },\n    convertToViewportRectangle: function PageViewport_convertToViewportRectangle(rect) {\n      var tl = Util.applyTransform([rect[0], rect[1]], this.transform);\n      var br = Util.applyTransform([rect[2], rect[3]], this.transform);\n      return [tl[0], tl[1], br[0], br[1]];\n    },\n    convertToPdfPoint: function PageViewport_convertToPdfPoint(x, y) {\n      return Util.applyInverseTransform([x, y], this.transform);\n    }\n  };\n  return PageViewport;\n}();\nvar PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];\nfunction stringToPDFString(str) {\n  var i,\n      n = str.length,\n      strBuf = [];\n  if (str[0] === '\\xFE' && str[1] === '\\xFF') {\n    for (i = 2; i < n; i += 2) {\n      strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n    }\n  } else {\n    for (i = 0; i < n; ++i) {\n      var code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join('');\n}\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\nfunction isEmptyObj(obj) {\n  for (var key in obj) {\n    return false;\n  }\n  return true;\n}\nfunction isBool(v) {\n  return typeof v === 'boolean';\n}\nfunction isNum(v) {\n  return typeof v === 'number';\n}\nfunction isString(v) {\n  return typeof v === 'string';\n}\nfunction isArrayBuffer(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.byteLength !== undefined;\n}\nfunction isSpace(ch) {\n  return ch === 0x20 || ch === 0x09 || ch === 0x0D || ch === 0x0A;\n}\nfunction isNodeJS() {\n  return (typeof process === 'undefined' ? 'undefined' : _typeof(process)) === 'object' && process + '' === '[object process]';\n}\nfunction createPromiseCapability() {\n  var capability = {};\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = resolve;\n    capability.reject = reject;\n  });\n  return capability;\n}\nvar StatTimer = function StatTimerClosure() {\n  function rpad(str, pad, length) {\n    while (str.length < length) {\n      str += pad;\n    }\n    return str;\n  }\n  function StatTimer() {\n    this.started = Object.create(null);\n    this.times = [];\n    this.enabled = true;\n  }\n  StatTimer.prototype = {\n    time: function StatTimer_time(name) {\n      if (!this.enabled) {\n        return;\n      }\n      if (name in this.started) {\n        warn('Timer is already running for ' + name);\n      }\n      this.started[name] = Date.now();\n    },\n    timeEnd: function StatTimer_timeEnd(name) {\n      if (!this.enabled) {\n        return;\n      }\n      if (!(name in this.started)) {\n        warn('Timer has not been started for ' + name);\n      }\n      this.times.push({\n        'name': name,\n        'start': this.started[name],\n        'end': Date.now()\n      });\n      delete this.started[name];\n    },\n    toString: function StatTimer_toString() {\n      var i, ii;\n      var times = this.times;\n      var out = '';\n      var longest = 0;\n      for (i = 0, ii = times.length; i < ii; ++i) {\n        var name = times[i]['name'];\n        if (name.length > longest) {\n          longest = name.length;\n        }\n      }\n      for (i = 0, ii = times.length; i < ii; ++i) {\n        var span = times[i];\n        var duration = span.end - span.start;\n        out += rpad(span['name'], ' ', longest) + ' ' + duration + 'ms\\n';\n      }\n      return out;\n    }\n  };\n  return StatTimer;\n}();\nvar createBlob = function createBlob(data, contentType) {\n  if (typeof Blob !== 'undefined') {\n    return new Blob([data], { type: contentType });\n  }\n  throw new Error('The \"Blob\" constructor is not supported.');\n};\nvar createObjectURL = function createObjectURLClosure() {\n  var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  return function createObjectURL(data, contentType) {\n    var forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (!forceDataSchema && URL.createObjectURL) {\n      var blob = createBlob(data, contentType);\n      return URL.createObjectURL(blob);\n    }\n    var buffer = 'data:' + contentType + ';base64,';\n    for (var i = 0, ii = data.length; i < ii; i += 3) {\n      var b1 = data[i] & 0xFF;\n      var b2 = data[i + 1] & 0xFF;\n      var b3 = data[i + 2] & 0xFF;\n      var d1 = b1 >> 2,\n          d2 = (b1 & 3) << 4 | b2 >> 4;\n      var d3 = i + 1 < ii ? (b2 & 0xF) << 2 | b3 >> 6 : 64;\n      var d4 = i + 2 < ii ? b3 & 0x3F : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n}();\nfunction resolveCall(fn, args) {\n  var thisArg = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  if (!fn) {\n    return Promise.resolve(undefined);\n  }\n  return new Promise(function (resolve, reject) {\n    resolve(fn.apply(thisArg, args));\n  });\n}\nfunction wrapReason(reason) {\n  if ((typeof reason === 'undefined' ? 'undefined' : _typeof(reason)) !== 'object') {\n    return reason;\n  }\n  switch (reason.name) {\n    case 'AbortException':\n      return new AbortException(reason.message);\n    case 'MissingPDFException':\n      return new MissingPDFException(reason.message);\n    case 'UnexpectedResponseException':\n      return new UnexpectedResponseException(reason.message, reason.status);\n    default:\n      return new UnknownErrorException(reason.message, reason.details);\n  }\n}\nfunction makeReasonSerializable(reason) {\n  if (!(reason instanceof Error) || reason instanceof AbortException || reason instanceof MissingPDFException || reason instanceof UnexpectedResponseException || reason instanceof UnknownErrorException) {\n    return reason;\n  }\n  return new UnknownErrorException(reason.message, reason.toString());\n}\nfunction resolveOrReject(capability, success, reason) {\n  if (success) {\n    capability.resolve();\n  } else {\n    capability.reject(reason);\n  }\n}\nfunction finalize(promise) {\n  return Promise.resolve(promise).catch(function () {});\n}\nfunction MessageHandler(sourceName, targetName, comObj) {\n  var _this = this;\n\n  this.sourceName = sourceName;\n  this.targetName = targetName;\n  this.comObj = comObj;\n  this.callbackId = 1;\n  this.streamId = 1;\n  this.postMessageTransfers = true;\n  this.streamSinks = Object.create(null);\n  this.streamControllers = Object.create(null);\n  var callbacksCapabilities = this.callbacksCapabilities = Object.create(null);\n  var ah = this.actionHandler = Object.create(null);\n  this._onComObjOnMessage = function (event) {\n    var data = event.data;\n    if (data.targetName !== _this.sourceName) {\n      return;\n    }\n    if (data.stream) {\n      _this._processStreamMessage(data);\n    } else if (data.isReply) {\n      var callbackId = data.callbackId;\n      if (data.callbackId in callbacksCapabilities) {\n        var callback = callbacksCapabilities[callbackId];\n        delete callbacksCapabilities[callbackId];\n        if ('error' in data) {\n          callback.reject(wrapReason(data.error));\n        } else {\n          callback.resolve(data.data);\n        }\n      } else {\n        throw new Error('Cannot resolve callback ' + callbackId);\n      }\n    } else if (data.action in ah) {\n      var action = ah[data.action];\n      if (data.callbackId) {\n        var _sourceName = _this.sourceName;\n        var _targetName = data.sourceName;\n        Promise.resolve().then(function () {\n          return action[0].call(action[1], data.data);\n        }).then(function (result) {\n          comObj.postMessage({\n            sourceName: _sourceName,\n            targetName: _targetName,\n            isReply: true,\n            callbackId: data.callbackId,\n            data: result\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            sourceName: _sourceName,\n            targetName: _targetName,\n            isReply: true,\n            callbackId: data.callbackId,\n            error: makeReasonSerializable(reason)\n          });\n        });\n      } else if (data.streamId) {\n        _this._createStreamSink(data);\n      } else {\n        action[0].call(action[1], data.data);\n      }\n    } else {\n      throw new Error('Unknown action from worker: ' + data.action);\n    }\n  };\n  comObj.addEventListener('message', this._onComObjOnMessage);\n}\nMessageHandler.prototype = {\n  on: function on(actionName, handler, scope) {\n    var ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error('There is already an actionName called \"' + actionName + '\"');\n    }\n    ah[actionName] = [handler, scope];\n  },\n  send: function send(actionName, data, transfers) {\n    var message = {\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data: data\n    };\n    this.postMessage(message, transfers);\n  },\n  sendWithPromise: function sendWithPromise(actionName, data, transfers) {\n    var callbackId = this.callbackId++;\n    var message = {\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data: data,\n      callbackId: callbackId\n    };\n    var capability = createPromiseCapability();\n    this.callbacksCapabilities[callbackId] = capability;\n    try {\n      this.postMessage(message, transfers);\n    } catch (e) {\n      capability.reject(e);\n    }\n    return capability.promise;\n  },\n  sendWithStream: function sendWithStream(actionName, data, queueingStrategy, transfers) {\n    var _this2 = this;\n\n    var streamId = this.streamId++;\n    var sourceName = this.sourceName;\n    var targetName = this.targetName;\n    return new _streams_polyfill.ReadableStream({\n      start: function start(controller) {\n        var startCapability = createPromiseCapability();\n        _this2.streamControllers[streamId] = {\n          controller: controller,\n          startCall: startCapability,\n          isClosed: false\n        };\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          action: actionName,\n          streamId: streamId,\n          data: data,\n          desiredSize: controller.desiredSize\n        });\n        return startCapability.promise;\n      },\n      pull: function pull(controller) {\n        var pullCapability = createPromiseCapability();\n        _this2.streamControllers[streamId].pullCall = pullCapability;\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          stream: 'pull',\n          streamId: streamId,\n          desiredSize: controller.desiredSize\n        });\n        return pullCapability.promise;\n      },\n      cancel: function cancel(reason) {\n        var cancelCapability = createPromiseCapability();\n        _this2.streamControllers[streamId].cancelCall = cancelCapability;\n        _this2.streamControllers[streamId].isClosed = true;\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          stream: 'cancel',\n          reason: reason,\n          streamId: streamId\n        });\n        return cancelCapability.promise;\n      }\n    }, queueingStrategy);\n  },\n  _createStreamSink: function _createStreamSink(data) {\n    var _this3 = this;\n\n    var self = this;\n    var action = this.actionHandler[data.action];\n    var streamId = data.streamId;\n    var desiredSize = data.desiredSize;\n    var sourceName = this.sourceName;\n    var targetName = data.sourceName;\n    var capability = createPromiseCapability();\n    var sendStreamRequest = function sendStreamRequest(_ref) {\n      var stream = _ref.stream,\n          chunk = _ref.chunk,\n          transfers = _ref.transfers,\n          success = _ref.success,\n          reason = _ref.reason;\n\n      _this3.postMessage({\n        sourceName: sourceName,\n        targetName: targetName,\n        stream: stream,\n        streamId: streamId,\n        chunk: chunk,\n        success: success,\n        reason: reason\n      }, transfers);\n    };\n    var streamSink = {\n      enqueue: function enqueue(chunk) {\n        var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n        var transfers = arguments[2];\n\n        if (this.isCancelled) {\n          return;\n        }\n        var lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        sendStreamRequest({\n          stream: 'enqueue',\n          chunk: chunk,\n          transfers: transfers\n        });\n      },\n      close: function close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        sendStreamRequest({ stream: 'close' });\n        delete self.streamSinks[streamId];\n      },\n      error: function error(reason) {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        sendStreamRequest({\n          stream: 'error',\n          reason: reason\n        });\n      },\n\n      sinkCapability: capability,\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: desiredSize,\n      ready: null\n    };\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    resolveCall(action[0], [data.data, streamSink], action[1]).then(function () {\n      sendStreamRequest({\n        stream: 'start_complete',\n        success: true\n      });\n    }, function (reason) {\n      sendStreamRequest({\n        stream: 'start_complete',\n        success: false,\n        reason: reason\n      });\n    });\n  },\n  _processStreamMessage: function _processStreamMessage(data) {\n    var _this4 = this;\n\n    var sourceName = this.sourceName;\n    var targetName = data.sourceName;\n    var streamId = data.streamId;\n    var sendStreamResponse = function sendStreamResponse(_ref2) {\n      var stream = _ref2.stream,\n          success = _ref2.success,\n          reason = _ref2.reason;\n\n      _this4.comObj.postMessage({\n        sourceName: sourceName,\n        targetName: targetName,\n        stream: stream,\n        success: success,\n        streamId: streamId,\n        reason: reason\n      });\n    };\n    var deleteStreamController = function deleteStreamController() {\n      Promise.all([_this4.streamControllers[data.streamId].startCall, _this4.streamControllers[data.streamId].pullCall, _this4.streamControllers[data.streamId].cancelCall].map(function (capability) {\n        return capability && finalize(capability.promise);\n      })).then(function () {\n        delete _this4.streamControllers[data.streamId];\n      });\n    };\n    switch (data.stream) {\n      case 'start_complete':\n        resolveOrReject(this.streamControllers[data.streamId].startCall, data.success, wrapReason(data.reason));\n        break;\n      case 'pull_complete':\n        resolveOrReject(this.streamControllers[data.streamId].pullCall, data.success, wrapReason(data.reason));\n        break;\n      case 'pull':\n        if (!this.streamSinks[data.streamId]) {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: true\n          });\n          break;\n        }\n        if (this.streamSinks[data.streamId].desiredSize <= 0 && data.desiredSize > 0) {\n          this.streamSinks[data.streamId].sinkCapability.resolve();\n        }\n        this.streamSinks[data.streamId].desiredSize = data.desiredSize;\n        resolveCall(this.streamSinks[data.streamId].onPull).then(function () {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: true\n          });\n        }, function (reason) {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: false,\n            reason: reason\n          });\n        });\n        break;\n      case 'enqueue':\n        assert(this.streamControllers[data.streamId], 'enqueue should have stream controller');\n        if (!this.streamControllers[data.streamId].isClosed) {\n          this.streamControllers[data.streamId].controller.enqueue(data.chunk);\n        }\n        break;\n      case 'close':\n        assert(this.streamControllers[data.streamId], 'close should have stream controller');\n        if (this.streamControllers[data.streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[data.streamId].isClosed = true;\n        this.streamControllers[data.streamId].controller.close();\n        deleteStreamController();\n        break;\n      case 'error':\n        assert(this.streamControllers[data.streamId], 'error should have stream controller');\n        this.streamControllers[data.streamId].controller.error(wrapReason(data.reason));\n        deleteStreamController();\n        break;\n      case 'cancel_complete':\n        resolveOrReject(this.streamControllers[data.streamId].cancelCall, data.success, wrapReason(data.reason));\n        deleteStreamController();\n        break;\n      case 'cancel':\n        if (!this.streamSinks[data.streamId]) {\n          break;\n        }\n        resolveCall(this.streamSinks[data.streamId].onCancel, [wrapReason(data.reason)]).then(function () {\n          sendStreamResponse({\n            stream: 'cancel_complete',\n            success: true\n          });\n        }, function (reason) {\n          sendStreamResponse({\n            stream: 'cancel_complete',\n            success: false,\n            reason: reason\n          });\n        });\n        this.streamSinks[data.streamId].sinkCapability.reject(wrapReason(data.reason));\n        this.streamSinks[data.streamId].isCancelled = true;\n        delete this.streamSinks[data.streamId];\n        break;\n      default:\n        throw new Error('Unexpected stream case');\n    }\n  },\n  postMessage: function postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  },\n  destroy: function destroy() {\n    this.comObj.removeEventListener('message', this._onComObjOnMessage);\n  }\n};\nfunction loadJpegStream(id, imageUrl, objs) {\n  var img = new Image();\n  img.onload = function loadJpegStream_onloadClosure() {\n    objs.resolve(id, img);\n  };\n  img.onerror = function loadJpegStream_onerrorClosure() {\n    objs.resolve(id, null);\n    warn('Error during JPEG image loading');\n  };\n  img.src = imageUrl;\n}\nexports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\nexports.IDENTITY_MATRIX = IDENTITY_MATRIX;\nexports.OPS = OPS;\nexports.VERBOSITY_LEVELS = VERBOSITY_LEVELS;\nexports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\nexports.AnnotationBorderStyleType = AnnotationBorderStyleType;\nexports.AnnotationFieldFlag = AnnotationFieldFlag;\nexports.AnnotationFlag = AnnotationFlag;\nexports.AnnotationType = AnnotationType;\nexports.FontType = FontType;\nexports.ImageKind = ImageKind;\nexports.CMapCompressionType = CMapCompressionType;\nexports.AbortException = AbortException;\nexports.InvalidPDFException = InvalidPDFException;\nexports.MessageHandler = MessageHandler;\nexports.MissingDataException = MissingDataException;\nexports.MissingPDFException = MissingPDFException;\nexports.NativeImageDecoding = NativeImageDecoding;\nexports.NotImplementedException = NotImplementedException;\nexports.PageViewport = PageViewport;\nexports.PasswordException = PasswordException;\nexports.PasswordResponses = PasswordResponses;\nexports.StatTimer = StatTimer;\nexports.StreamType = StreamType;\nexports.TextRenderingMode = TextRenderingMode;\nexports.UnexpectedResponseException = UnexpectedResponseException;\nexports.UnknownErrorException = UnknownErrorException;\nexports.Util = Util;\nexports.XRefParseException = XRefParseException;\nexports.FormatError = FormatError;\nexports.arrayByteLength = arrayByteLength;\nexports.arraysToBytes = arraysToBytes;\nexports.assert = assert;\nexports.bytesToString = bytesToString;\nexports.createBlob = createBlob;\nexports.createPromiseCapability = createPromiseCapability;\nexports.createObjectURL = createObjectURL;\nexports.deprecated = deprecated;\nexports.getLookupTableFactory = getLookupTableFactory;\nexports.getVerbosityLevel = getVerbosityLevel;\nexports.info = info;\nexports.isArrayBuffer = isArrayBuffer;\nexports.isBool = isBool;\nexports.isEmptyObj = isEmptyObj;\nexports.isNum = isNum;\nexports.isString = isString;\nexports.isSpace = isSpace;\nexports.isNodeJS = isNodeJS;\nexports.isSameOrigin = isSameOrigin;\nexports.createValidAbsoluteUrl = createValidAbsoluteUrl;\nexports.isLittleEndian = isLittleEndian;\nexports.isEvalSupported = isEvalSupported;\nexports.loadJpegStream = loadJpegStream;\nexports.log2 = log2;\nexports.readInt8 = readInt8;\nexports.readUint16 = readUint16;\nexports.readUint32 = readUint32;\nexports.removeNullCharacters = removeNullCharacters;\nexports.ReadableStream = _streams_polyfill.ReadableStream;\nexports.setVerbosityLevel = setVerbosityLevel;\nexports.shadow = shadow;\nexports.string32 = string32;\nexports.stringToBytes = stringToBytes;\nexports.stringToPDFString = stringToPDFString;\nexports.stringToUTF8String = stringToUTF8String;\nexports.utf8StringToString = utf8StringToString;\nexports.warn = warn;\nexports.unreachable = unreachable;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif (typeof __g == 'number') __g = global;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar EOF = {};\nvar Name = function NameClosure() {\n  function Name(name) {\n    this.name = name;\n  }\n  Name.prototype = {};\n  var nameCache = Object.create(null);\n  Name.get = function Name_get(name) {\n    var nameValue = nameCache[name];\n    return nameValue ? nameValue : nameCache[name] = new Name(name);\n  };\n  return Name;\n}();\nvar Cmd = function CmdClosure() {\n  function Cmd(cmd) {\n    this.cmd = cmd;\n  }\n  Cmd.prototype = {};\n  var cmdCache = Object.create(null);\n  Cmd.get = function Cmd_get(cmd) {\n    var cmdValue = cmdCache[cmd];\n    return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n  };\n  return Cmd;\n}();\nvar Dict = function DictClosure() {\n  var nonSerializable = function nonSerializableClosure() {\n    return nonSerializable;\n  };\n  function Dict(xref) {\n    this._map = Object.create(null);\n    this.xref = xref;\n    this.objId = null;\n    this.suppressEncryption = false;\n    this.__nonSerializable__ = nonSerializable;\n  }\n  Dict.prototype = {\n    assignXref: function Dict_assignXref(newXref) {\n      this.xref = newXref;\n    },\n    get: function Dict_get(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      value = this._map[key3] || null;\n      return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n    },\n    getAsync: function Dict_getAsync(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      value = this._map[key3] || null;\n      if (xref) {\n        return xref.fetchIfRefAsync(value, suppressEncryption);\n      }\n      return Promise.resolve(value);\n    },\n    getArray: function Dict_getArray(key1, key2, key3) {\n      var value = this.get(key1, key2, key3);\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (!Array.isArray(value) || !xref) {\n        return value;\n      }\n      value = value.slice();\n      for (var i = 0, ii = value.length; i < ii; i++) {\n        if (!isRef(value[i])) {\n          continue;\n        }\n        value[i] = xref.fetch(value[i], suppressEncryption);\n      }\n      return value;\n    },\n    getRaw: function Dict_getRaw(key) {\n      return this._map[key];\n    },\n    getKeys: function Dict_getKeys() {\n      return Object.keys(this._map);\n    },\n    set: function Dict_set(key, value) {\n      this._map[key] = value;\n    },\n    has: function Dict_has(key) {\n      return key in this._map;\n    },\n    forEach: function Dict_forEach(callback) {\n      for (var key in this._map) {\n        callback(key, this.get(key));\n      }\n    }\n  };\n  Dict.empty = new Dict(null);\n  Dict.merge = function (xref, dictArray) {\n    var mergedDict = new Dict(xref);\n    for (var i = 0, ii = dictArray.length; i < ii; i++) {\n      var dict = dictArray[i];\n      if (!isDict(dict)) {\n        continue;\n      }\n      for (var keyName in dict._map) {\n        if (mergedDict._map[keyName] !== undefined) {\n          continue;\n        }\n        mergedDict._map[keyName] = dict._map[keyName];\n      }\n    }\n    return mergedDict;\n  };\n  return Dict;\n}();\nvar Ref = function RefClosure() {\n  function Ref(num, gen) {\n    this.num = num;\n    this.gen = gen;\n  }\n  Ref.prototype = {\n    toString: function Ref_toString() {\n      var str = this.num + 'R';\n      if (this.gen !== 0) {\n        str += this.gen;\n      }\n      return str;\n    }\n  };\n  return Ref;\n}();\nvar RefSet = function RefSetClosure() {\n  function RefSet() {\n    this.dict = Object.create(null);\n  }\n  RefSet.prototype = {\n    has: function RefSet_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSet_put(ref) {\n      this.dict[ref.toString()] = true;\n    },\n    remove: function RefSet_remove(ref) {\n      delete this.dict[ref.toString()];\n    }\n  };\n  return RefSet;\n}();\nvar RefSetCache = function RefSetCacheClosure() {\n  function RefSetCache() {\n    this.dict = Object.create(null);\n  }\n  RefSetCache.prototype = {\n    get: function RefSetCache_get(ref) {\n      return this.dict[ref.toString()];\n    },\n    has: function RefSetCache_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSetCache_put(ref, obj) {\n      this.dict[ref.toString()] = obj;\n    },\n    putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n      this.dict[ref.toString()] = this.get(aliasRef);\n    },\n    forEach: function RefSetCache_forEach(fn, thisArg) {\n      for (var i in this.dict) {\n        fn.call(thisArg, this.dict[i]);\n      }\n    },\n    clear: function RefSetCache_clear() {\n      this.dict = Object.create(null);\n    }\n  };\n  return RefSetCache;\n}();\nfunction isEOF(v) {\n  return v === EOF;\n}\nfunction isName(v, name) {\n  return v instanceof Name && (name === undefined || v.name === name);\n}\nfunction isCmd(v, cmd) {\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\nfunction isDict(v, type) {\n  return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\n}\nfunction isRef(v) {\n  return v instanceof Ref;\n}\nfunction isRefsEqual(v1, v2) {\n  return v1.num === v2.num && v1.gen === v2.gen;\n}\nfunction isStream(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.getBytes !== undefined;\n}\nexports.EOF = EOF;\nexports.Cmd = Cmd;\nexports.Dict = Dict;\nexports.Name = Name;\nexports.Ref = Ref;\nexports.RefSet = RefSet;\nexports.RefSetCache = RefSetCache;\nexports.isEOF = isEOF;\nexports.isCmd = isCmd;\nexports.isDict = isDict;\nexports.isName = isName;\nexports.isRef = isRef;\nexports.isRefsEqual = isRefsEqual;\nexports.isStream = isStream;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nmodule.exports = function (it) {\n  return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) === 'object' ? it !== null : typeof it === 'function';\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar store = __w_pdfjs_require__(54)('wks');\nvar uid = __w_pdfjs_require__(17);\nvar _Symbol = __w_pdfjs_require__(1).Symbol;\nvar USE_SYMBOL = typeof _Symbol == 'function';\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] = USE_SYMBOL && _Symbol[name] || (USE_SYMBOL ? _Symbol : uid)('Symbol.' + name));\n};\n$exports.store = store;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LZWStream = exports.StringStream = exports.StreamsSequenceStream = exports.Stream = exports.RunLengthStream = exports.PredictorStream = exports.NullStream = exports.JpxStream = exports.JpegStream = exports.FlateStream = exports.DecodeStream = exports.DecryptStream = exports.AsciiHexStream = exports.Ascii85Stream = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _jpg = __w_pdfjs_require__(128);\n\nvar _jpx = __w_pdfjs_require__(74);\n\nvar Stream = function StreamClosure() {\n  function Stream(arrayBuffer, start, length, dict) {\n    this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n    this.start = start || 0;\n    this.pos = this.start;\n    this.end = start + length || this.bytes.length;\n    this.dict = dict;\n  }\n  Stream.prototype = {\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function Stream_getByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.bytes[this.pos++];\n    },\n    getUint16: function Stream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function Stream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function Stream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function Stream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function Stream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    skip: function Stream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function Stream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function Stream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function Stream_makeSubStream(start, length, dict) {\n      return new Stream(this.bytes.buffer, start, length, dict);\n    }\n  };\n  return Stream;\n}();\nvar StringStream = function StringStreamClosure() {\n  function StringStream(str) {\n    var bytes = (0, _util.stringToBytes)(str);\n    Stream.call(this, bytes);\n  }\n  StringStream.prototype = Stream.prototype;\n  return StringStream;\n}();\nvar DecodeStream = function DecodeStreamClosure() {\n  var emptyBuffer = new Uint8Array(0);\n  function DecodeStream(maybeMinBufferLength) {\n    this.pos = 0;\n    this.bufferLength = 0;\n    this.eof = false;\n    this.buffer = emptyBuffer;\n    this.minBufferLength = 512;\n    if (maybeMinBufferLength) {\n      while (this.minBufferLength < maybeMinBufferLength) {\n        this.minBufferLength *= 2;\n      }\n    }\n  }\n  DecodeStream.prototype = {\n    get isEmpty() {\n      while (!this.eof && this.bufferLength === 0) {\n        this.readBlock();\n      }\n      return this.bufferLength === 0;\n    },\n    ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n      var buffer = this.buffer;\n      if (requested <= buffer.byteLength) {\n        return buffer;\n      }\n      var size = this.minBufferLength;\n      while (size < requested) {\n        size *= 2;\n      }\n      var buffer2 = new Uint8Array(size);\n      buffer2.set(buffer);\n      return this.buffer = buffer2;\n    },\n    getByte: function DecodeStream_getByte() {\n      var pos = this.pos;\n      while (this.bufferLength <= pos) {\n        if (this.eof) {\n          return -1;\n        }\n        this.readBlock();\n      }\n      return this.buffer[this.pos++];\n    },\n    getUint16: function DecodeStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function DecodeStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function DecodeStream_getBytes(length) {\n      var end,\n          pos = this.pos;\n      if (length) {\n        this.ensureBuffer(pos + length);\n        end = pos + length;\n        while (!this.eof && this.bufferLength < end) {\n          this.readBlock();\n        }\n        var bufEnd = this.bufferLength;\n        if (end > bufEnd) {\n          end = bufEnd;\n        }\n      } else {\n        while (!this.eof) {\n          this.readBlock();\n        }\n        end = this.bufferLength;\n      }\n      this.pos = end;\n      return this.buffer.subarray(pos, end);\n    },\n    peekByte: function DecodeStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function DecodeStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n      var end = start + length;\n      while (this.bufferLength <= end && !this.eof) {\n        this.readBlock();\n      }\n      return new Stream(this.buffer, start, length, dict);\n    },\n    skip: function DecodeStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function DecodeStream_reset() {\n      this.pos = 0;\n    },\n    getBaseStreams: function DecodeStream_getBaseStreams() {\n      if (this.str && this.str.getBaseStreams) {\n        return this.str.getBaseStreams();\n      }\n      return [];\n    }\n  };\n  return DecodeStream;\n}();\nvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n  function StreamsSequenceStream(streams) {\n    this.streams = streams;\n    DecodeStream.call(this, null);\n  }\n  StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n  StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n    var streams = this.streams;\n    if (streams.length === 0) {\n      this.eof = true;\n      return;\n    }\n    var stream = streams.shift();\n    var chunk = stream.getBytes();\n    var bufferLength = this.bufferLength;\n    var newLength = bufferLength + chunk.length;\n    var buffer = this.ensureBuffer(newLength);\n    buffer.set(chunk, bufferLength);\n    this.bufferLength = newLength;\n  };\n  StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n    var baseStreams = [];\n    for (var i = 0, ii = this.streams.length; i < ii; i++) {\n      var stream = this.streams[i];\n      if (stream.getBaseStreams) {\n        _util.Util.appendToArray(baseStreams, stream.getBaseStreams());\n      }\n    }\n    return baseStreams;\n  };\n  return StreamsSequenceStream;\n}();\nvar FlateStream = function FlateStreamClosure() {\n  var codeLenCodeMap = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n  var lengthDecode = new Int32Array([0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a, 0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f, 0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073, 0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102]);\n  var distDecode = new Int32Array([0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d, 0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1, 0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01, 0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001]);\n  var fixedLitCodeTab = [new Int32Array([0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0, 0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0, 0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0, 0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8, 0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8, 0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8, 0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4, 0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4, 0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4, 0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc, 0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec, 0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc, 0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2, 0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2, 0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2, 0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca, 0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea, 0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da, 0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6, 0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6, 0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6, 0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce, 0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee, 0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de, 0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe, 0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1, 0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1, 0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1, 0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9, 0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9, 0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9, 0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5, 0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5, 0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5, 0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd, 0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed, 0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd, 0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3, 0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3, 0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3, 0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb, 0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb, 0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db, 0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7, 0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7, 0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7, 0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf, 0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef, 0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df, 0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff]), 9];\n  var fixedDistCodeTab = [new Int32Array([0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c, 0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000, 0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d, 0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000]), 5];\n  function FlateStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    var cmf = str.getByte();\n    var flg = str.getByte();\n    if (cmf === -1 || flg === -1) {\n      throw new _util.FormatError('Invalid header in flate stream: ' + cmf + ', ' + flg);\n    }\n    if ((cmf & 0x0f) !== 0x08) {\n      throw new _util.FormatError('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (((cmf << 8) + flg) % 31 !== 0) {\n      throw new _util.FormatError('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (flg & 0x20) {\n      throw new _util.FormatError('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n    }\n    this.codeSize = 0;\n    this.codeBuf = 0;\n    DecodeStream.call(this, maybeLength);\n  }\n  FlateStream.prototype = Object.create(DecodeStream.prototype);\n  FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n    var str = this.str;\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < bits) {\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad encoding in flate stream');\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    b = codeBuf & (1 << bits) - 1;\n    this.codeBuf = codeBuf >> bits;\n    this.codeSize = codeSize -= bits;\n    return b;\n  };\n  FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n    var str = this.str;\n    var codes = table[0];\n    var maxLen = table[1];\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < maxLen) {\n      if ((b = str.getByte()) === -1) {\n        break;\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    var code = codes[codeBuf & (1 << maxLen) - 1];\n    var codeLen = code >> 16;\n    var codeVal = code & 0xffff;\n    if (codeLen < 1 || codeSize < codeLen) {\n      throw new _util.FormatError('Bad encoding in flate stream');\n    }\n    this.codeBuf = codeBuf >> codeLen;\n    this.codeSize = codeSize - codeLen;\n    return codeVal;\n  };\n  FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n    var n = lengths.length;\n    var maxLen = 0;\n    var i;\n    for (i = 0; i < n; ++i) {\n      if (lengths[i] > maxLen) {\n        maxLen = lengths[i];\n      }\n    }\n    var size = 1 << maxLen;\n    var codes = new Int32Array(size);\n    for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n      for (var val = 0; val < n; ++val) {\n        if (lengths[val] === len) {\n          var code2 = 0;\n          var t = code;\n          for (i = 0; i < len; ++i) {\n            code2 = code2 << 1 | t & 1;\n            t >>= 1;\n          }\n          for (i = code2; i < size; i += skip) {\n            codes[i] = len << 16 | val;\n          }\n          ++code;\n        }\n      }\n    }\n    return [codes, maxLen];\n  };\n  FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n    var buffer, len;\n    var str = this.str;\n    var hdr = this.getBits(3);\n    if (hdr & 1) {\n      this.eof = true;\n    }\n    hdr >>= 1;\n    if (hdr === 0) {\n      var b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var blockLen = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      blockLen |= b << 8;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var check = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      check |= b << 8;\n      if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n        throw new _util.FormatError('Bad uncompressed block length in flate stream');\n      }\n      this.codeBuf = 0;\n      this.codeSize = 0;\n      var bufferLength = this.bufferLength;\n      buffer = this.ensureBuffer(bufferLength + blockLen);\n      var end = bufferLength + blockLen;\n      this.bufferLength = end;\n      if (blockLen === 0) {\n        if (str.peekByte() === -1) {\n          this.eof = true;\n        }\n      } else {\n        for (var n = bufferLength; n < end; ++n) {\n          if ((b = str.getByte()) === -1) {\n            this.eof = true;\n            break;\n          }\n          buffer[n] = b;\n        }\n      }\n      return;\n    }\n    var litCodeTable;\n    var distCodeTable;\n    if (hdr === 1) {\n      litCodeTable = fixedLitCodeTab;\n      distCodeTable = fixedDistCodeTab;\n    } else if (hdr === 2) {\n      var numLitCodes = this.getBits(5) + 257;\n      var numDistCodes = this.getBits(5) + 1;\n      var numCodeLenCodes = this.getBits(4) + 4;\n      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n      var i;\n      for (i = 0; i < numCodeLenCodes; ++i) {\n        codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n      }\n      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n      len = 0;\n      i = 0;\n      var codes = numLitCodes + numDistCodes;\n      var codeLengths = new Uint8Array(codes);\n      var bitsLength, bitsOffset, what;\n      while (i < codes) {\n        var code = this.getCode(codeLenCodeTab);\n        if (code === 16) {\n          bitsLength = 2;\n          bitsOffset = 3;\n          what = len;\n        } else if (code === 17) {\n          bitsLength = 3;\n          bitsOffset = 3;\n          what = len = 0;\n        } else if (code === 18) {\n          bitsLength = 7;\n          bitsOffset = 11;\n          what = len = 0;\n        } else {\n          codeLengths[i++] = len = code;\n          continue;\n        }\n        var repeatLength = this.getBits(bitsLength) + bitsOffset;\n        while (repeatLength-- > 0) {\n          codeLengths[i++] = what;\n        }\n      }\n      litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n      distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n    } else {\n      throw new _util.FormatError('Unknown block type in flate stream');\n    }\n    buffer = this.buffer;\n    var limit = buffer ? buffer.length : 0;\n    var pos = this.bufferLength;\n    while (true) {\n      var code1 = this.getCode(litCodeTable);\n      if (code1 < 256) {\n        if (pos + 1 >= limit) {\n          buffer = this.ensureBuffer(pos + 1);\n          limit = buffer.length;\n        }\n        buffer[pos++] = code1;\n        continue;\n      }\n      if (code1 === 256) {\n        this.bufferLength = pos;\n        return;\n      }\n      code1 -= 257;\n      code1 = lengthDecode[code1];\n      var code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      len = (code1 & 0xffff) + code2;\n      code1 = this.getCode(distCodeTable);\n      code1 = distDecode[code1];\n      code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      var dist = (code1 & 0xffff) + code2;\n      if (pos + len >= limit) {\n        buffer = this.ensureBuffer(pos + len);\n        limit = buffer.length;\n      }\n      for (var k = 0; k < len; ++k, ++pos) {\n        buffer[pos] = buffer[pos - dist];\n      }\n    }\n  };\n  return FlateStream;\n}();\nvar PredictorStream = function PredictorStreamClosure() {\n  function PredictorStream(str, maybeLength, params) {\n    if (!(0, _primitives.isDict)(params)) {\n      return str;\n    }\n    var predictor = this.predictor = params.get('Predictor') || 1;\n    if (predictor <= 1) {\n      return str;\n    }\n    if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n      throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    if (predictor === 2) {\n      this.readBlock = this.readBlockTiff;\n    } else {\n      this.readBlock = this.readBlockPng;\n    }\n    this.str = str;\n    this.dict = str.dict;\n    var colors = this.colors = params.get('Colors') || 1;\n    var bits = this.bits = params.get('BitsPerComponent') || 8;\n    var columns = this.columns = params.get('Columns') || 1;\n    this.pixBytes = colors * bits + 7 >> 3;\n    this.rowBytes = columns * colors * bits + 7 >> 3;\n    DecodeStream.call(this, maybeLength);\n    return this;\n  }\n  PredictorStream.prototype = Object.create(DecodeStream.prototype);\n  PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n    var rowBytes = this.rowBytes;\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var bits = this.bits;\n    var colors = this.colors;\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var inbuf = 0,\n        outbuf = 0;\n    var inbits = 0,\n        outbits = 0;\n    var pos = bufferLength;\n    var i;\n    if (bits === 1 && colors === 1) {\n      for (i = 0; i < rowBytes; ++i) {\n        var c = rawBytes[i] ^ inbuf;\n        c ^= c >> 1;\n        c ^= c >> 2;\n        c ^= c >> 4;\n        inbuf = (c & 1) << 7;\n        buffer[pos++] = c;\n      }\n    } else if (bits === 8) {\n      for (i = 0; i < colors; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; ++i) {\n        buffer[pos] = buffer[pos - colors] + rawBytes[i];\n        pos++;\n      }\n    } else if (bits === 16) {\n      var bytesPerPixel = colors * 2;\n      for (i = 0; i < bytesPerPixel; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; i += 2) {\n        var sum = ((rawBytes[i] & 0xFF) << 8) + (rawBytes[i + 1] & 0xFF) + ((buffer[pos - bytesPerPixel] & 0xFF) << 8) + (buffer[pos - bytesPerPixel + 1] & 0xFF);\n        buffer[pos++] = sum >> 8 & 0xFF;\n        buffer[pos++] = sum & 0xFF;\n      }\n    } else {\n      var compArray = new Uint8Array(colors + 1);\n      var bitMask = (1 << bits) - 1;\n      var j = 0,\n          k = bufferLength;\n      var columns = this.columns;\n      for (i = 0; i < columns; ++i) {\n        for (var kk = 0; kk < colors; ++kk) {\n          if (inbits < bits) {\n            inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\n            inbits += 8;\n          }\n          compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n          inbits -= bits;\n          outbuf = outbuf << bits | compArray[kk];\n          outbits += bits;\n          if (outbits >= 8) {\n            buffer[k++] = outbuf >> outbits - 8 & 0xFF;\n            outbits -= 8;\n          }\n        }\n      }\n      if (outbits > 0) {\n        buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n      }\n    }\n    this.bufferLength += rowBytes;\n  };\n  PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n    var rowBytes = this.rowBytes;\n    var pixBytes = this.pixBytes;\n    var predictor = this.str.getByte();\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n    if (prevRow.length === 0) {\n      prevRow = new Uint8Array(rowBytes);\n    }\n    var i,\n        j = bufferLength,\n        up,\n        c;\n    switch (predictor) {\n      case 0:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        break;\n      case 1:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 2:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\n        }\n        break;\n      case 3:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 4:\n        for (i = 0; i < pixBytes; ++i) {\n          up = prevRow[i];\n          c = rawBytes[i];\n          buffer[j++] = up + c;\n        }\n        for (; i < rowBytes; ++i) {\n          up = prevRow[i];\n          var upLeft = prevRow[i - pixBytes];\n          var left = buffer[j - pixBytes];\n          var p = left + up - upLeft;\n          var pa = p - left;\n          if (pa < 0) {\n            pa = -pa;\n          }\n          var pb = p - up;\n          if (pb < 0) {\n            pb = -pb;\n          }\n          var pc = p - upLeft;\n          if (pc < 0) {\n            pc = -pc;\n          }\n          c = rawBytes[i];\n          if (pa <= pb && pa <= pc) {\n            buffer[j++] = left + c;\n          } else if (pb <= pc) {\n            buffer[j++] = up + c;\n          } else {\n            buffer[j++] = upLeft + c;\n          }\n        }\n        break;\n      default:\n        throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    this.bufferLength += rowBytes;\n  };\n  return PredictorStream;\n}();\nvar JpegStream = function JpegStreamClosure() {\n  function JpegStream(stream, maybeLength, dict, params) {\n    var ch;\n    while ((ch = stream.getByte()) !== -1) {\n      if (ch === 0xFF) {\n        stream.skip(-1);\n        break;\n      }\n    }\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    DecodeStream.call(this, maybeLength);\n  }\n  JpegStream.prototype = Object.create(DecodeStream.prototype);\n  Object.defineProperty(JpegStream.prototype, 'bytes', {\n    get: function JpegStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpegStream.prototype.ensureBuffer = function JpegStream_ensureBuffer(req) {\n    if (this.bufferLength) {\n      return;\n    }\n    var jpegImage = new _jpg.JpegImage();\n    var decodeArr = this.dict.getArray('Decode', 'D');\n    if (this.forceRGB && Array.isArray(decodeArr)) {\n      var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n      var decodeArrLength = decodeArr.length;\n      var transform = new Int32Array(decodeArrLength);\n      var transformNeeded = false;\n      var maxValue = (1 << bitsPerComponent) - 1;\n      for (var i = 0; i < decodeArrLength; i += 2) {\n        transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n        transform[i + 1] = decodeArr[i] * maxValue | 0;\n        if (transform[i] !== 256 || transform[i + 1] !== 0) {\n          transformNeeded = true;\n        }\n      }\n      if (transformNeeded) {\n        jpegImage.decodeTransform = transform;\n      }\n    }\n    if ((0, _primitives.isDict)(this.params)) {\n      var colorTransform = this.params.get('ColorTransform');\n      if (Number.isInteger(colorTransform)) {\n        jpegImage.colorTransform = colorTransform;\n      }\n    }\n    jpegImage.parse(this.bytes);\n    var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\n    this.buffer = data;\n    this.bufferLength = data.length;\n    this.eof = true;\n  };\n  JpegStream.prototype.getBytes = function JpegStream_getBytes(length) {\n    this.ensureBuffer();\n    return this.buffer;\n  };\n  JpegStream.prototype.getIR = function JpegStream_getIR(forceDataSchema) {\n    return (0, _util.createObjectURL)(this.bytes, 'image/jpeg', forceDataSchema);\n  };\n  return JpegStream;\n}();\nvar JpxStream = function JpxStreamClosure() {\n  function JpxStream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    DecodeStream.call(this, maybeLength);\n  }\n  JpxStream.prototype = Object.create(DecodeStream.prototype);\n  Object.defineProperty(JpxStream.prototype, 'bytes', {\n    get: function JpxStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpxStream.prototype.ensureBuffer = function JpxStream_ensureBuffer(req) {\n    if (this.bufferLength) {\n      return;\n    }\n    var jpxImage = new _jpx.JpxImage();\n    jpxImage.parse(this.bytes);\n    var width = jpxImage.width;\n    var height = jpxImage.height;\n    var componentsCount = jpxImage.componentsCount;\n    var tileCount = jpxImage.tiles.length;\n    if (tileCount === 1) {\n      this.buffer = jpxImage.tiles[0].items;\n    } else {\n      var data = new Uint8ClampedArray(width * height * componentsCount);\n      for (var k = 0; k < tileCount; k++) {\n        var tileComponents = jpxImage.tiles[k];\n        var tileWidth = tileComponents.width;\n        var tileHeight = tileComponents.height;\n        var tileLeft = tileComponents.left;\n        var tileTop = tileComponents.top;\n        var src = tileComponents.items;\n        var srcPosition = 0;\n        var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n        var imgRowSize = width * componentsCount;\n        var tileRowSize = tileWidth * componentsCount;\n        for (var j = 0; j < tileHeight; j++) {\n          var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n          data.set(rowBytes, dataPosition);\n          srcPosition += tileRowSize;\n          dataPosition += imgRowSize;\n        }\n      }\n      this.buffer = data;\n    }\n    this.bufferLength = this.buffer.length;\n    this.eof = true;\n  };\n  return JpxStream;\n}();\nvar DecryptStream = function DecryptStreamClosure() {\n  function DecryptStream(str, maybeLength, decrypt) {\n    this.str = str;\n    this.dict = str.dict;\n    this.decrypt = decrypt;\n    this.nextChunk = null;\n    this.initialized = false;\n    DecodeStream.call(this, maybeLength);\n  }\n  var chunkSize = 512;\n  DecryptStream.prototype = Object.create(DecodeStream.prototype);\n  DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n    var chunk;\n    if (this.initialized) {\n      chunk = this.nextChunk;\n    } else {\n      chunk = this.str.getBytes(chunkSize);\n      this.initialized = true;\n    }\n    if (!chunk || chunk.length === 0) {\n      this.eof = true;\n      return;\n    }\n    this.nextChunk = this.str.getBytes(chunkSize);\n    var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n    var decrypt = this.decrypt;\n    chunk = decrypt(chunk, !hasMoreData);\n    var bufferLength = this.bufferLength;\n    var i,\n        n = chunk.length;\n    var buffer = this.ensureBuffer(bufferLength + n);\n    for (i = 0; i < n; i++) {\n      buffer[bufferLength++] = chunk[i];\n    }\n    this.bufferLength = bufferLength;\n  };\n  return DecryptStream;\n}();\nvar Ascii85Stream = function Ascii85StreamClosure() {\n  function Ascii85Stream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.input = new Uint8Array(5);\n    if (maybeLength) {\n      maybeLength = 0.8 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n  Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n    var TILDA_CHAR = 0x7E;\n    var Z_LOWER_CHAR = 0x7A;\n    var EOF = -1;\n    var str = this.str;\n    var c = str.getByte();\n    while ((0, _util.isSpace)(c)) {\n      c = str.getByte();\n    }\n    if (c === EOF || c === TILDA_CHAR) {\n      this.eof = true;\n      return;\n    }\n    var bufferLength = this.bufferLength,\n        buffer;\n    var i;\n    if (c === Z_LOWER_CHAR) {\n      buffer = this.ensureBuffer(bufferLength + 4);\n      for (i = 0; i < 4; ++i) {\n        buffer[bufferLength + i] = 0;\n      }\n      this.bufferLength += 4;\n    } else {\n      var input = this.input;\n      input[0] = c;\n      for (i = 1; i < 5; ++i) {\n        c = str.getByte();\n        while ((0, _util.isSpace)(c)) {\n          c = str.getByte();\n        }\n        input[i] = c;\n        if (c === EOF || c === TILDA_CHAR) {\n          break;\n        }\n      }\n      buffer = this.ensureBuffer(bufferLength + i - 1);\n      this.bufferLength += i - 1;\n      if (i < 5) {\n        for (; i < 5; ++i) {\n          input[i] = 0x21 + 84;\n        }\n        this.eof = true;\n      }\n      var t = 0;\n      for (i = 0; i < 5; ++i) {\n        t = t * 85 + (input[i] - 0x21);\n      }\n      for (i = 3; i >= 0; --i) {\n        buffer[bufferLength + i] = t & 0xFF;\n        t >>= 8;\n      }\n    }\n  };\n  return Ascii85Stream;\n}();\nvar AsciiHexStream = function AsciiHexStreamClosure() {\n  function AsciiHexStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.firstDigit = -1;\n    if (maybeLength) {\n      maybeLength = 0.5 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n  AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n    var UPSTREAM_BLOCK_SIZE = 8000;\n    var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n    if (!bytes.length) {\n      this.eof = true;\n      return;\n    }\n    var maxDecodeLength = bytes.length + 1 >> 1;\n    var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n    var bufferLength = this.bufferLength;\n    var firstDigit = this.firstDigit;\n    for (var i = 0, ii = bytes.length; i < ii; i++) {\n      var ch = bytes[i],\n          digit;\n      if (ch >= 0x30 && ch <= 0x39) {\n        digit = ch & 0x0F;\n      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n        digit = (ch & 0x0F) + 9;\n      } else if (ch === 0x3E) {\n        this.eof = true;\n        break;\n      } else {\n        continue;\n      }\n      if (firstDigit < 0) {\n        firstDigit = digit;\n      } else {\n        buffer[bufferLength++] = firstDigit << 4 | digit;\n        firstDigit = -1;\n      }\n    }\n    if (firstDigit >= 0 && this.eof) {\n      buffer[bufferLength++] = firstDigit << 4;\n      firstDigit = -1;\n    }\n    this.firstDigit = firstDigit;\n    this.bufferLength = bufferLength;\n  };\n  return AsciiHexStream;\n}();\nvar RunLengthStream = function RunLengthStreamClosure() {\n  function RunLengthStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    DecodeStream.call(this, maybeLength);\n  }\n  RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n  RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n    var repeatHeader = this.str.getBytes(2);\n    if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n      this.eof = true;\n      return;\n    }\n    var buffer;\n    var bufferLength = this.bufferLength;\n    var n = repeatHeader[0];\n    if (n < 128) {\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      buffer[bufferLength++] = repeatHeader[1];\n      if (n > 0) {\n        var source = this.str.getBytes(n);\n        buffer.set(source, bufferLength);\n        bufferLength += n;\n      }\n    } else {\n      n = 257 - n;\n      var b = repeatHeader[1];\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      for (var i = 0; i < n; i++) {\n        buffer[bufferLength++] = b;\n      }\n    }\n    this.bufferLength = bufferLength;\n  };\n  return RunLengthStream;\n}();\nvar LZWStream = function LZWStreamClosure() {\n  function LZWStream(str, maybeLength, earlyChange) {\n    this.str = str;\n    this.dict = str.dict;\n    this.cachedData = 0;\n    this.bitsCached = 0;\n    var maxLzwDictionarySize = 4096;\n    var lzwState = {\n      earlyChange: earlyChange,\n      codeLength: 9,\n      nextCode: 258,\n      dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n      currentSequence: new Uint8Array(maxLzwDictionarySize),\n      currentSequenceLength: 0\n    };\n    for (var i = 0; i < 256; ++i) {\n      lzwState.dictionaryValues[i] = i;\n      lzwState.dictionaryLengths[i] = 1;\n    }\n    this.lzwState = lzwState;\n    DecodeStream.call(this, maybeLength);\n  }\n  LZWStream.prototype = Object.create(DecodeStream.prototype);\n  LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n    var bitsCached = this.bitsCached;\n    var cachedData = this.cachedData;\n    while (bitsCached < n) {\n      var c = this.str.getByte();\n      if (c === -1) {\n        this.eof = true;\n        return null;\n      }\n      cachedData = cachedData << 8 | c;\n      bitsCached += 8;\n    }\n    this.bitsCached = bitsCached -= n;\n    this.cachedData = cachedData;\n    this.lastCode = null;\n    return cachedData >>> bitsCached & (1 << n) - 1;\n  };\n  LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n    var blockSize = 512;\n    var estimatedDecodedSize = blockSize * 2,\n        decodedSizeDelta = blockSize;\n    var i, j, q;\n    var lzwState = this.lzwState;\n    if (!lzwState) {\n      return;\n    }\n    var earlyChange = lzwState.earlyChange;\n    var nextCode = lzwState.nextCode;\n    var dictionaryValues = lzwState.dictionaryValues;\n    var dictionaryLengths = lzwState.dictionaryLengths;\n    var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n    var codeLength = lzwState.codeLength;\n    var prevCode = lzwState.prevCode;\n    var currentSequence = lzwState.currentSequence;\n    var currentSequenceLength = lzwState.currentSequenceLength;\n    var decodedLength = 0;\n    var currentBufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n    for (i = 0; i < blockSize; i++) {\n      var code = this.readBits(codeLength);\n      var hasPrev = currentSequenceLength > 0;\n      if (code < 256) {\n        currentSequence[0] = code;\n        currentSequenceLength = 1;\n      } else if (code >= 258) {\n        if (code < nextCode) {\n          currentSequenceLength = dictionaryLengths[code];\n          for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n            currentSequence[j] = dictionaryValues[q];\n            q = dictionaryPrevCodes[q];\n          }\n        } else {\n          currentSequence[currentSequenceLength++] = currentSequence[0];\n        }\n      } else if (code === 256) {\n        codeLength = 9;\n        nextCode = 258;\n        currentSequenceLength = 0;\n        continue;\n      } else {\n        this.eof = true;\n        delete this.lzwState;\n        break;\n      }\n      if (hasPrev) {\n        dictionaryPrevCodes[nextCode] = prevCode;\n        dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n        dictionaryValues[nextCode] = currentSequence[0];\n        nextCode++;\n        codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n      }\n      prevCode = code;\n      decodedLength += currentSequenceLength;\n      if (estimatedDecodedSize < decodedLength) {\n        do {\n          estimatedDecodedSize += decodedSizeDelta;\n        } while (estimatedDecodedSize < decodedLength);\n        buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n      }\n      for (j = 0; j < currentSequenceLength; j++) {\n        buffer[currentBufferLength++] = currentSequence[j];\n      }\n    }\n    lzwState.nextCode = nextCode;\n    lzwState.codeLength = codeLength;\n    lzwState.prevCode = prevCode;\n    lzwState.currentSequenceLength = currentSequenceLength;\n    this.bufferLength = currentBufferLength;\n  };\n  return LZWStream;\n}();\nvar NullStream = function NullStreamClosure() {\n  function NullStream() {\n    Stream.call(this, new Uint8Array(0));\n  }\n  NullStream.prototype = Stream.prototype;\n  return NullStream;\n}();\nexports.Ascii85Stream = Ascii85Stream;\nexports.AsciiHexStream = AsciiHexStream;\nexports.DecryptStream = DecryptStream;\nexports.DecodeStream = DecodeStream;\nexports.FlateStream = FlateStream;\nexports.JpegStream = JpegStream;\nexports.JpxStream = JpxStream;\nexports.NullStream = NullStream;\nexports.PredictorStream = PredictorStream;\nexports.RunLengthStream = RunLengthStream;\nexports.Stream = Stream;\nexports.StreamsSequenceStream = StreamsSequenceStream;\nexports.StringStream = StringStream;\nexports.LZWStream = LZWStream;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(1);\nvar core = __w_pdfjs_require__(7);\nvar hide = __w_pdfjs_require__(8);\nvar redefine = __w_pdfjs_require__(16);\nvar ctx = __w_pdfjs_require__(13);\nvar PROTOTYPE = 'prototype';\nvar $export = function $export(type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    own = !IS_FORCED && target && target[key] !== undefined;\n    out = (own ? target : source)[key];\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    if (target) redefine(target, key, out, type & $export.U);\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n$export.F = 1;\n$export.G = 2;\n$export.S = 4;\n$export.P = 8;\n$export.B = 16;\n$export.W = 32;\n$export.U = 64;\n$export.R = 128;\nmodule.exports = $export;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar core = module.exports = { version: '2.5.1' };\nif (typeof __e == 'number') __e = core;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar dP = __w_pdfjs_require__(15);\nvar createDesc = __w_pdfjs_require__(29);\nmodule.exports = __w_pdfjs_require__(11) ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = !__w_pdfjs_require__(12)(function () {\n  return Object.defineProperty({}, 'a', {\n    get: function get() {\n      return 7;\n    }\n  }).a != 7;\n});\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar aFunction = __w_pdfjs_require__(21);\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1:\n      return function (a) {\n        return fn.call(that, a);\n      };\n    case 2:\n      return function (a, b) {\n        return fn.call(that, a, b);\n      };\n    case 3:\n      return function (a, b, c) {\n        return fn.call(that, a, b, c);\n      };\n  }\n  return function () {\n    return fn.apply(that, arguments);\n  };\n};\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(18);\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0;\n};\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(9);\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(48);\nvar toPrimitive = __w_pdfjs_require__(36);\nvar dP = Object.defineProperty;\nexports.f = __w_pdfjs_require__(11) ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) {}\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(1);\nvar hide = __w_pdfjs_require__(8);\nvar has = __w_pdfjs_require__(10);\nvar SRC = __w_pdfjs_require__(17)('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n__w_pdfjs_require__(7).inspectSource = function (it) {\n  return $toString.call(it);\n};\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar defined = __w_pdfjs_require__(38);\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {};\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar redefine = __w_pdfjs_require__(16);\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    redefine(target, key, src[key], safe);\n  }return target;\n};\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || forbiddenField !== undefined && forbiddenField in it) {\n    throw TypeError(name + ': incorrect invocation!');\n  }\n  return it;\n};\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toString = {}.toString;\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar def = __w_pdfjs_require__(15).f;\nvar has = __w_pdfjs_require__(10);\nvar TAG = __w_pdfjs_require__(4)('toStringTag');\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {\n    configurable: true,\n    value: tag\n  });\n};\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorSpace = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar ColorSpace = function ColorSpaceClosure() {\n  function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\n    var COMPONENTS = 3;\n    alpha01 = alpha01 !== 1 ? 0 : alpha01;\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1 * COMPONENTS;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        newIndex += alpha01;\n      }\n    }\n  }\n  function ColorSpace() {\n    throw new Error('should not call ColorSpace constructor');\n  }\n  ColorSpace.prototype = {\n    getRgb: function ColorSpace_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      this.getRgbItem(src, srcOffset, rgb, 0);\n      return rgb;\n    },\n    getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\n      throw new Error('Should not call ColorSpace.getRgbItem');\n    },\n    getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      throw new Error('Should not call ColorSpace.getRgbBuffer');\n    },\n    getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\n      throw new Error('Should not call ColorSpace.getOutputLength');\n    },\n    isPassthrough: function ColorSpace_isPassthrough(bits) {\n      return false;\n    },\n    fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n      var count = originalWidth * originalHeight;\n      var rgbBuf = null;\n      var numComponentColors = 1 << bpc;\n      var needsResizing = originalHeight !== height || originalWidth !== width;\n      var i, ii;\n      if (this.isPassthrough(bpc)) {\n        rgbBuf = comps;\n      } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n        var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n        var key;\n        for (i = 0; i < numComponentColors; i++) {\n          allColors[i] = i;\n        }\n        var colorMap = new Uint8Array(numComponentColors * 3);\n        this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n        var destPos, rgbPos;\n        if (!needsResizing) {\n          destPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            dest[destPos++] = colorMap[key];\n            dest[destPos++] = colorMap[key + 1];\n            dest[destPos++] = colorMap[key + 2];\n            destPos += alpha01;\n          }\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          rgbPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            rgbBuf[rgbPos++] = colorMap[key];\n            rgbBuf[rgbPos++] = colorMap[key + 1];\n            rgbBuf[rgbPos++] = colorMap[key + 2];\n          }\n        }\n      } else {\n        if (!needsResizing) {\n          this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n        }\n      }\n      if (rgbBuf) {\n        if (needsResizing) {\n          resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\n        } else {\n          rgbPos = 0;\n          destPos = 0;\n          for (i = 0, ii = width * actualHeight; i < ii; i++) {\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            destPos += alpha01;\n          }\n        }\n      }\n    },\n    usesZeroToOneRange: true\n  };\n  ColorSpace.parse = function (cs, xref, res, pdfFunctionFactory) {\n    var IR = ColorSpace.parseToIR(cs, xref, res, pdfFunctionFactory);\n    return ColorSpace.fromIR(IR, pdfFunctionFactory);\n  };\n  ColorSpace.fromIR = function (IR, pdfFunctionFactory) {\n    var name = Array.isArray(IR) ? IR[0] : IR;\n    var whitePoint, blackPoint, gamma;\n    switch (name) {\n      case 'DeviceGrayCS':\n        return this.singletons.gray;\n      case 'DeviceRgbCS':\n        return this.singletons.rgb;\n      case 'DeviceCmykCS':\n        return this.singletons.cmyk;\n      case 'CalGrayCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        return new CalGrayCS(whitePoint, blackPoint, gamma);\n      case 'CalRGBCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        var matrix = IR[4];\n        return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n      case 'PatternCS':\n        var basePatternCS = IR[1];\n        if (basePatternCS) {\n          basePatternCS = ColorSpace.fromIR(basePatternCS, pdfFunctionFactory);\n        }\n        return new PatternCS(basePatternCS);\n      case 'IndexedCS':\n        var baseIndexedCS = IR[1];\n        var hiVal = IR[2];\n        var lookup = IR[3];\n        return new IndexedCS(ColorSpace.fromIR(baseIndexedCS, pdfFunctionFactory), hiVal, lookup);\n      case 'AlternateCS':\n        var numComps = IR[1];\n        var alt = IR[2];\n        var tintFnIR = IR[3];\n        return new AlternateCS(numComps, ColorSpace.fromIR(alt, pdfFunctionFactory), pdfFunctionFactory.createFromIR(tintFnIR));\n      case 'LabCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        var range = IR[3];\n        return new LabCS(whitePoint, blackPoint, range);\n      default:\n        throw new _util.FormatError('Unknown colorspace name: ' + name);\n    }\n  };\n  ColorSpace.parseToIR = function (cs, xref, res, pdfFunctionFactory) {\n    if ((0, _primitives.isName)(cs)) {\n      var colorSpaces = res.get('ColorSpace');\n      if ((0, _primitives.isDict)(colorSpaces)) {\n        var refcs = colorSpaces.get(cs.name);\n        if (refcs) {\n          cs = refcs;\n        }\n      }\n    }\n    cs = xref.fetchIfRef(cs);\n    if ((0, _primitives.isName)(cs)) {\n      switch (cs.name) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'Pattern':\n          return ['PatternCS', null];\n        default:\n          throw new _util.FormatError('unrecognized colorspace ' + cs.name);\n      }\n    }\n    if (Array.isArray(cs)) {\n      var mode = xref.fetchIfRef(cs[0]).name;\n      var numComps, params, alt, whitePoint, blackPoint, gamma;\n      switch (mode) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'CalGray':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.get('Gamma');\n          return ['CalGrayCS', whitePoint, blackPoint, gamma];\n        case 'CalRGB':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.getArray('Gamma');\n          var matrix = params.getArray('Matrix');\n          return ['CalRGBCS', whitePoint, blackPoint, gamma, matrix];\n        case 'ICCBased':\n          var stream = xref.fetchIfRef(cs[1]);\n          var dict = stream.dict;\n          numComps = dict.get('N');\n          alt = dict.get('Alternate');\n          if (alt) {\n            var altIR = ColorSpace.parseToIR(alt, xref, res, pdfFunctionFactory);\n            var altCS = ColorSpace.fromIR(altIR, pdfFunctionFactory);\n            if (altCS.numComps === numComps) {\n              return altIR;\n            }\n            (0, _util.warn)('ICCBased color space: Ignoring incorrect /Alternate entry.');\n          }\n          if (numComps === 1) {\n            return 'DeviceGrayCS';\n          } else if (numComps === 3) {\n            return 'DeviceRgbCS';\n          } else if (numComps === 4) {\n            return 'DeviceCmykCS';\n          }\n          break;\n        case 'Pattern':\n          var basePatternCS = cs[1] || null;\n          if (basePatternCS) {\n            basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res, pdfFunctionFactory);\n          }\n          return ['PatternCS', basePatternCS];\n        case 'Indexed':\n        case 'I':\n          var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res, pdfFunctionFactory);\n          var hiVal = xref.fetchIfRef(cs[2]) + 1;\n          var lookup = xref.fetchIfRef(cs[3]);\n          if ((0, _primitives.isStream)(lookup)) {\n            lookup = lookup.getBytes();\n          }\n          return ['IndexedCS', baseIndexedCS, hiVal, lookup];\n        case 'Separation':\n        case 'DeviceN':\n          var name = xref.fetchIfRef(cs[1]);\n          numComps = Array.isArray(name) ? name.length : 1;\n          alt = ColorSpace.parseToIR(cs[2], xref, res, pdfFunctionFactory);\n          var tintFnIR = pdfFunctionFactory.createIR(xref.fetchIfRef(cs[3]));\n          return ['AlternateCS', numComps, alt, tintFnIR];\n        case 'Lab':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          var range = params.getArray('Range');\n          return ['LabCS', whitePoint, blackPoint, range];\n        default:\n          throw new _util.FormatError('unimplemented color space object \"' + mode + '\"');\n      }\n    }\n    throw new _util.FormatError('unrecognized color space object: \"' + cs + '\"');\n  };\n  ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n    if (!Array.isArray(decode)) {\n      return true;\n    }\n    if (n * 2 !== decode.length) {\n      (0, _util.warn)('The decode map is not the correct length');\n      return true;\n    }\n    for (var i = 0, ii = decode.length; i < ii; i += 2) {\n      if (decode[i] !== 0 || decode[i + 1] !== 1) {\n        return false;\n      }\n    }\n    return true;\n  };\n  ColorSpace.singletons = {\n    get gray() {\n      return (0, _util.shadow)(this, 'gray', new DeviceGrayCS());\n    },\n    get rgb() {\n      return (0, _util.shadow)(this, 'rgb', new DeviceRgbCS());\n    },\n    get cmyk() {\n      return (0, _util.shadow)(this, 'cmyk', new DeviceCmykCS());\n    }\n  };\n  return ColorSpace;\n}();\nvar AlternateCS = function AlternateCSClosure() {\n  function AlternateCS(numComps, base, tintFn) {\n    this.name = 'Alternate';\n    this.numComps = numComps;\n    this.defaultColor = new Float32Array(numComps);\n    for (var i = 0; i < numComps; ++i) {\n      this.defaultColor[i] = 1;\n    }\n    this.base = base;\n    this.tintFn = tintFn;\n    this.tmpBuf = new Float32Array(base.numComps);\n  }\n  AlternateCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var tmpBuf = this.tmpBuf;\n      this.tintFn(src, srcOffset, tmpBuf, 0);\n      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n    },\n    getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var tintFn = this.tintFn;\n      var base = this.base;\n      var scale = 1 / ((1 << bits) - 1);\n      var baseNumComps = base.numComps;\n      var usesZeroToOneRange = base.usesZeroToOneRange;\n      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n      var pos = isPassthrough ? destOffset : 0;\n      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n      var numComps = this.numComps;\n      var scaled = new Float32Array(numComps);\n      var tinted = new Float32Array(baseNumComps);\n      var i, j;\n      for (i = 0; i < count; i++) {\n        for (j = 0; j < numComps; j++) {\n          scaled[j] = src[srcOffset++] * scale;\n        }\n        tintFn(scaled, 0, tinted, 0);\n        if (usesZeroToOneRange) {\n          for (j = 0; j < baseNumComps; j++) {\n            baseBuf[pos++] = tinted[j] * 255;\n          }\n        } else {\n          base.getRgbItem(tinted, 0, baseBuf, pos);\n          pos += baseNumComps;\n        }\n      }\n      if (!isPassthrough) {\n        base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n      }\n    },\n    getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return AlternateCS;\n}();\nvar PatternCS = function PatternCSClosure() {\n  function PatternCS(baseCS) {\n    this.name = 'Pattern';\n    this.base = baseCS;\n  }\n  PatternCS.prototype = {};\n  return PatternCS;\n}();\nvar IndexedCS = function IndexedCSClosure() {\n  function IndexedCS(base, highVal, lookup) {\n    this.name = 'Indexed';\n    this.numComps = 1;\n    this.defaultColor = new Uint8Array(this.numComps);\n    this.base = base;\n    this.highVal = highVal;\n    var baseNumComps = base.numComps;\n    var length = baseNumComps * highVal;\n    if ((0, _primitives.isStream)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      var bytes = lookup.getBytes(length);\n      this.lookup.set(bytes);\n    } else if ((0, _util.isString)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      for (var i = 0; i < length; ++i) {\n        this.lookup[i] = lookup.charCodeAt(i);\n      }\n    } else if (lookup instanceof Uint8Array || lookup instanceof Array) {\n      this.lookup = lookup;\n    } else {\n      throw new _util.FormatError('Unrecognized lookup table: ' + lookup);\n    }\n  }\n  IndexedCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var numComps = this.base.numComps;\n      var start = src[srcOffset] * numComps;\n      this.base.getRgbBuffer(this.lookup, start, 1, dest, destOffset, 8, 0);\n    },\n    getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var base = this.base;\n      var numComps = base.numComps;\n      var outputDelta = base.getOutputLength(numComps, alpha01);\n      var lookup = this.lookup;\n      for (var i = 0; i < count; ++i) {\n        var lookupPos = src[srcOffset++] * numComps;\n        base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n        destOffset += outputDelta;\n      }\n    },\n    getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: true\n  };\n  return IndexedCS;\n}();\nvar DeviceGrayCS = function DeviceGrayCSClosure() {\n  function DeviceGrayCS() {\n    this.name = 'DeviceGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var c = src[srcOffset] * 255 | 0;\n      c = c < 0 ? 0 : c > 255 ? 255 : c;\n      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n    },\n    getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        var c = scale * src[j++] | 0;\n        dest[q++] = c;\n        dest[q++] = c;\n        dest[q++] = c;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceGrayCS;\n}();\nvar DeviceRgbCS = function DeviceRgbCSClosure() {\n  function DeviceRgbCS() {\n    this.name = 'DeviceRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceRgbCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var r = src[srcOffset] * 255 | 0;\n      var g = src[srcOffset + 1] * 255 | 0;\n      var b = src[srcOffset + 2] * 255 | 0;\n      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n    },\n    getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      if (bits === 8 && alpha01 === 0) {\n        dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n        return;\n      }\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n      return bits === 8;\n    },\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceRgbCS;\n}();\nvar DeviceCmykCS = function DeviceCmykCSClosure() {\n  function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n    var c = src[srcOffset + 0] * srcScale;\n    var m = src[srcOffset + 1] * srcScale;\n    var y = src[srcOffset + 2] * srcScale;\n    var k = src[srcOffset + 3] * srcScale;\n    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\n    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\n    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\n    dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n    dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n    dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n  }\n  function DeviceCmykCS() {\n    this.name = 'DeviceCMYK';\n    this.numComps = 4;\n    this.defaultColor = new Float32Array(this.numComps);\n    this.defaultColor[3] = 1;\n  }\n  DeviceCmykCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(src, srcOffset, 1, dest, destOffset);\n    },\n    getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; i++) {\n        convertToRgb(src, srcOffset, scale, dest, destOffset);\n        srcOffset += 4;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\n      return inputLength / 4 * (3 + alpha01) | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceCmykCS;\n}();\nvar CalGrayCS = function CalGrayCSClosure() {\n  function CalGrayCS(whitePoint, blackPoint, gamma) {\n    this.name = 'CalGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalGray');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    gamma = gamma || 1;\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    this.G = gamma;\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ', falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n      (0, _util.warn)(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\n    }\n    if (this.G < 1) {\n      (0, _util.info)('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\n      this.G = 1;\n    }\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = src[srcOffset] * scale;\n    var AG = Math.pow(A, cs.G);\n    var L = cs.YW * AG;\n    var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n    dest[destOffset] = val;\n    dest[destOffset + 1] = val;\n    dest[destOffset + 2] = val;\n  }\n  CalGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 1;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalGrayCS;\n}();\nvar CalRGBCS = function CalRGBCSClosure() {\n  var BRADFORD_SCALE_MATRIX = new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296]);\n  var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -0.0085287, 0.0400428, 0.9684867]);\n  var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.9692660, 1.8760108, 0.0415560, 0.0556434, -0.2040259, 1.0572252]);\n  var FLAT_WHITEPOINT_MATRIX = new Float32Array([1, 1, 1]);\n  var tempNormalizeMatrix = new Float32Array(3);\n  var tempConvertMatrix1 = new Float32Array(3);\n  var tempConvertMatrix2 = new Float32Array(3);\n  var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n  function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n    this.name = 'CalRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalRGB');\n    }\n    blackPoint = blackPoint || new Float32Array(3);\n    gamma = gamma || new Float32Array([1, 1, 1]);\n    matrix = matrix || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n    var XW = whitePoint[0];\n    var YW = whitePoint[1];\n    var ZW = whitePoint[2];\n    this.whitePoint = whitePoint;\n    var XB = blackPoint[0];\n    var YB = blackPoint[1];\n    var ZB = blackPoint[2];\n    this.blackPoint = blackPoint;\n    this.GR = gamma[0];\n    this.GG = gamma[1];\n    this.GB = gamma[2];\n    this.MXA = matrix[0];\n    this.MYA = matrix[1];\n    this.MZA = matrix[2];\n    this.MXB = matrix[3];\n    this.MYB = matrix[4];\n    this.MZB = matrix[5];\n    this.MXC = matrix[6];\n    this.MYC = matrix[7];\n    this.MZC = matrix[8];\n    if (XW < 0 || ZW < 0 || YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (XB < 0 || YB < 0 || ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\n      this.blackPoint = new Float32Array(3);\n    }\n    if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n      (0, _util.info)('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\n      this.GR = this.GG = this.GB = 1;\n    }\n    if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n      (0, _util.info)('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\n      this.MXA = this.MYB = this.MZC = 1;\n      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n    }\n  }\n  function matrixProduct(a, b, result) {\n    result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n    result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n    result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n  }\n  function convertToFlat(sourceWhitePoint, LMS, result) {\n    result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n    result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n    result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n  }\n  function convertToD65(sourceWhitePoint, LMS, result) {\n    var D65X = 0.95047;\n    var D65Y = 1;\n    var D65Z = 1.08883;\n    result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n    result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n    result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n  }\n  function sRGBTransferFunction(color) {\n    if (color <= 0.0031308) {\n      return adjustToRange(0, 1, 12.92 * color);\n    }\n    return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n  }\n  function adjustToRange(min, max, value) {\n    return Math.max(min, Math.min(max, value));\n  }\n  function decodeL(L) {\n    if (L < 0) {\n      return -decodeL(-L);\n    }\n    if (L > 8.0) {\n      return Math.pow((L + 16) / 116, 3);\n    }\n    return L * DECODE_L_CONSTANT;\n  }\n  function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n    if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n      result[0] = XYZ_Flat[0];\n      result[1] = XYZ_Flat[1];\n      result[2] = XYZ_Flat[2];\n      return;\n    }\n    var zeroDecodeL = decodeL(0);\n    var X_DST = zeroDecodeL;\n    var X_SRC = decodeL(sourceBlackPoint[0]);\n    var Y_DST = zeroDecodeL;\n    var Y_SRC = decodeL(sourceBlackPoint[1]);\n    var Z_DST = zeroDecodeL;\n    var Z_SRC = decodeL(sourceBlackPoint[2]);\n    var X_Scale = (1 - X_DST) / (1 - X_SRC);\n    var X_Offset = 1 - X_Scale;\n    var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n    var Y_Offset = 1 - Y_Scale;\n    var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n    var Z_Offset = 1 - Z_Scale;\n    result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n    result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n    result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n  }\n  function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n    if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n      result[0] = XYZ_In[0];\n      result[1] = XYZ_In[1];\n      result[2] = XYZ_In[2];\n      return;\n    }\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_Flat = tempNormalizeMatrix;\n    convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n  }\n  function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_D65 = tempNormalizeMatrix;\n    convertToD65(sourceWhitePoint, LMS, LMS_D65);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = adjustToRange(0, 1, src[srcOffset] * scale);\n    var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n    var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n    var AGR = Math.pow(A, cs.GR);\n    var BGG = Math.pow(B, cs.GG);\n    var CGB = Math.pow(C, cs.GB);\n    var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n    var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n    var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n    var XYZ = tempConvertMatrix1;\n    XYZ[0] = X;\n    XYZ[1] = Y;\n    XYZ[2] = Z;\n    var XYZ_Flat = tempConvertMatrix2;\n    normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n    var XYZ_Black = tempConvertMatrix1;\n    compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n    var XYZ_D65 = tempConvertMatrix2;\n    normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n    var SRGB = tempConvertMatrix1;\n    matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n    var sR = sRGBTransferFunction(SRGB[0]);\n    var sG = sRGBTransferFunction(SRGB[1]);\n    var sB = sRGBTransferFunction(SRGB[2]);\n    dest[destOffset] = Math.round(sR * 255);\n    dest[destOffset + 1] = Math.round(sG * 255);\n    dest[destOffset + 2] = Math.round(sB * 255);\n  }\n  CalRGBCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalRGBCS;\n}();\nvar LabCS = function LabCSClosure() {\n  function LabCS(whitePoint, blackPoint, range) {\n    this.name = 'Lab';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space Lab');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    range = range || [-100, 100, -100, 100];\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.amin = range[0];\n    this.amax = range[1];\n    this.bmin = range[2];\n    this.bmax = range[3];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components, no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint, falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.amin > this.amax || this.bmin > this.bmax) {\n      (0, _util.info)('Invalid Range, falling back to defaults');\n      this.amin = -100;\n      this.amax = 100;\n      this.bmin = -100;\n      this.bmax = 100;\n    }\n  }\n  function fn_g(x) {\n    var result;\n    if (x >= 6 / 29) {\n      result = x * x * x;\n    } else {\n      result = 108 / 841 * (x - 4 / 29);\n    }\n    return result;\n  }\n  function decode(value, high1, low2, high2) {\n    return low2 + value * (high2 - low2) / high1;\n  }\n  function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n    var Ls = src[srcOffset];\n    var as = src[srcOffset + 1];\n    var bs = src[srcOffset + 2];\n    if (maxVal !== false) {\n      Ls = decode(Ls, maxVal, 0, 100);\n      as = decode(as, maxVal, cs.amin, cs.amax);\n      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n    }\n    as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n    bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n    var M = (Ls + 16) / 116;\n    var L = M + as / 500;\n    var N = M - bs / 200;\n    var X = cs.XW * fn_g(L);\n    var Y = cs.YW * fn_g(M);\n    var Z = cs.ZW * fn_g(N);\n    var r, g, b;\n    if (cs.ZW < 1) {\n      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n    } else {\n      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n    }\n    dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n    dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n    dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n  }\n  LabCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, false, dest, destOffset);\n    },\n    getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var maxVal = (1 << bits) - 1;\n      for (var i = 0; i < count; i++) {\n        convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: false\n  };\n  return LabCS;\n}();\nexports.ColorSpace = ColorSpace;\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar MacExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', 'centoldstyle', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', '', 'threequartersemdash', '', 'questionsmall', '', '', '', '', 'Ethsmall', '', '', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', '', '', '', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hypheninferior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', 'asuperior', 'centsuperior', '', '', '', '', 'Aacutesmall', 'Agravesmall', 'Acircumflexsmall', 'Adieresissmall', 'Atildesmall', 'Aringsmall', 'Ccedillasmall', 'Eacutesmall', 'Egravesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Iacutesmall', 'Igravesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ntildesmall', 'Oacutesmall', 'Ogravesmall', 'Ocircumflexsmall', 'Odieresissmall', 'Otildesmall', 'Uacutesmall', 'Ugravesmall', 'Ucircumflexsmall', 'Udieresissmall', '', 'eightsuperior', 'fourinferior', 'threeinferior', 'sixinferior', 'eightinferior', 'seveninferior', 'Scaronsmall', '', 'centinferior', 'twoinferior', '', 'Dieresissmall', '', 'Caronsmall', 'osuperior', 'fiveinferior', '', 'commainferior', 'periodinferior', 'Yacutesmall', '', 'dollarinferior', '', 'Thornsmall', '', 'nineinferior', 'zeroinferior', 'Zcaronsmall', 'AEsmall', 'Oslashsmall', 'questiondownsmall', 'oneinferior', 'Lslashsmall', '', '', '', '', '', '', 'Cedillasmall', '', '', '', '', '', 'OEsmall', 'figuredash', 'hyphensuperior', '', '', '', '', 'exclamdownsmall', '', 'Ydieresissmall', '', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'ninesuperior', 'zerosuperior', '', 'esuperior', 'rsuperior', 'tsuperior', '', '', 'isuperior', 'ssuperior', 'dsuperior', '', '', '', '', '', 'lsuperior', 'Ogoneksmall', 'Brevesmall', 'Macronsmall', 'bsuperior', 'nsuperior', 'msuperior', 'commasuperior', 'periodsuperior', 'Dotaccentsmall', 'Ringsmall'];\nvar MacRomanEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'space', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron'];\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls'];\nvar WinAnsiEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'bullet', 'Euro', 'bullet', 'quotesinglbase', 'florin', 'quotedblbase', 'ellipsis', 'dagger', 'daggerdbl', 'circumflex', 'perthousand', 'Scaron', 'guilsinglleft', 'OE', 'bullet', 'Zcaron', 'bullet', 'bullet', 'quoteleft', 'quoteright', 'quotedblleft', 'quotedblright', 'bullet', 'endash', 'emdash', 'tilde', 'trademark', 'scaron', 'guilsinglright', 'oe', 'bullet', 'zcaron', 'Ydieresis', 'space', 'exclamdown', 'cent', 'sterling', 'currency', 'yen', 'brokenbar', 'section', 'dieresis', 'copyright', 'ordfeminine', 'guillemotleft', 'logicalnot', 'hyphen', 'registered', 'macron', 'degree', 'plusminus', 'twosuperior', 'threesuperior', 'acute', 'mu', 'paragraph', 'periodcentered', 'cedilla', 'onesuperior', 'ordmasculine', 'guillemotright', 'onequarter', 'onehalf', 'threequarters', 'questiondown', 'Agrave', 'Aacute', 'Acircumflex', 'Atilde', 'Adieresis', 'Aring', 'AE', 'Ccedilla', 'Egrave', 'Eacute', 'Ecircumflex', 'Edieresis', 'Igrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Eth', 'Ntilde', 'Ograve', 'Oacute', 'Ocircumflex', 'Otilde', 'Odieresis', 'multiply', 'Oslash', 'Ugrave', 'Uacute', 'Ucircumflex', 'Udieresis', 'Yacute', 'Thorn', 'germandbls', 'agrave', 'aacute', 'acircumflex', 'atilde', 'adieresis', 'aring', 'ae', 'ccedilla', 'egrave', 'eacute', 'ecircumflex', 'edieresis', 'igrave', 'iacute', 'icircumflex', 'idieresis', 'eth', 'ntilde', 'ograve', 'oacute', 'ocircumflex', 'otilde', 'odieresis', 'divide', 'oslash', 'ugrave', 'uacute', 'ucircumflex', 'udieresis', 'yacute', 'thorn', 'ydieresis'];\nvar SymbolSetEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'universal', 'numbersign', 'existential', 'percent', 'ampersand', 'suchthat', 'parenleft', 'parenright', 'asteriskmath', 'plus', 'comma', 'minus', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'congruent', 'Alpha', 'Beta', 'Chi', 'Delta', 'Epsilon', 'Phi', 'Gamma', 'Eta', 'Iota', 'theta1', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Omicron', 'Pi', 'Theta', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'sigma1', 'Omega', 'Xi', 'Psi', 'Zeta', 'bracketleft', 'therefore', 'bracketright', 'perpendicular', 'underscore', 'radicalex', 'alpha', 'beta', 'chi', 'delta', 'epsilon', 'phi', 'gamma', 'eta', 'iota', 'phi1', 'kappa', 'lambda', 'mu', 'nu', 'omicron', 'pi', 'theta', 'rho', 'sigma', 'tau', 'upsilon', 'omega1', 'omega', 'xi', 'psi', 'zeta', 'braceleft', 'bar', 'braceright', 'similar', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'Euro', 'Upsilon1', 'minute', 'lessequal', 'fraction', 'infinity', 'florin', 'club', 'diamond', 'heart', 'spade', 'arrowboth', 'arrowleft', 'arrowup', 'arrowright', 'arrowdown', 'degree', 'plusminus', 'second', 'greaterequal', 'multiply', 'proportional', 'partialdiff', 'bullet', 'divide', 'notequal', 'equivalence', 'approxequal', 'ellipsis', 'arrowvertex', 'arrowhorizex', 'carriagereturn', 'aleph', 'Ifraktur', 'Rfraktur', 'weierstrass', 'circlemultiply', 'circleplus', 'emptyset', 'intersection', 'union', 'propersuperset', 'reflexsuperset', 'notsubset', 'propersubset', 'reflexsubset', 'element', 'notelement', 'angle', 'gradient', 'registerserif', 'copyrightserif', 'trademarkserif', 'product', 'radical', 'dotmath', 'logicalnot', 'logicaland', 'logicalor', 'arrowdblboth', 'arrowdblleft', 'arrowdblup', 'arrowdblright', 'arrowdbldown', 'lozenge', 'angleleft', 'registersans', 'copyrightsans', 'trademarksans', 'summation', 'parenlefttp', 'parenleftex', 'parenleftbt', 'bracketlefttp', 'bracketleftex', 'bracketleftbt', 'bracelefttp', 'braceleftmid', 'braceleftbt', 'braceex', '', 'angleright', 'integral', 'integraltp', 'integralex', 'integralbt', 'parenrighttp', 'parenrightex', 'parenrightbt', 'bracketrighttp', 'bracketrightex', 'bracketrightbt', 'bracerighttp', 'bracerightmid', 'bracerightbt'];\nvar ZapfDingbatsEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'a1', 'a2', 'a202', 'a3', 'a4', 'a5', 'a119', 'a118', 'a117', 'a11', 'a12', 'a13', 'a14', 'a15', 'a16', 'a105', 'a17', 'a18', 'a19', 'a20', 'a21', 'a22', 'a23', 'a24', 'a25', 'a26', 'a27', 'a28', 'a6', 'a7', 'a8', 'a9', 'a10', 'a29', 'a30', 'a31', 'a32', 'a33', 'a34', 'a35', 'a36', 'a37', 'a38', 'a39', 'a40', 'a41', 'a42', 'a43', 'a44', 'a45', 'a46', 'a47', 'a48', 'a49', 'a50', 'a51', 'a52', 'a53', 'a54', 'a55', 'a56', 'a57', 'a58', 'a59', 'a60', 'a61', 'a62', 'a63', 'a64', 'a65', 'a66', 'a67', 'a68', 'a69', 'a70', 'a71', 'a72', 'a73', 'a74', 'a203', 'a75', 'a204', 'a76', 'a77', 'a78', 'a79', 'a81', 'a82', 'a83', 'a84', 'a97', 'a98', 'a99', 'a100', '', 'a89', 'a90', 'a93', 'a94', 'a91', 'a92', 'a205', 'a85', 'a206', 'a86', 'a87', 'a88', 'a95', 'a96', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'a101', 'a102', 'a103', 'a104', 'a106', 'a107', 'a108', 'a112', 'a111', 'a110', 'a109', 'a120', 'a121', 'a122', 'a123', 'a124', 'a125', 'a126', 'a127', 'a128', 'a129', 'a130', 'a131', 'a132', 'a133', 'a134', 'a135', 'a136', 'a137', 'a138', 'a139', 'a140', 'a141', 'a142', 'a143', 'a144', 'a145', 'a146', 'a147', 'a148', 'a149', 'a150', 'a151', 'a152', 'a153', 'a154', 'a155', 'a156', 'a157', 'a158', 'a159', 'a160', 'a161', 'a163', 'a164', 'a196', 'a165', 'a192', 'a166', 'a167', 'a168', 'a169', 'a170', 'a171', 'a172', 'a173', 'a162', 'a174', 'a175', 'a176', 'a177', 'a178', 'a179', 'a193', 'a180', 'a199', 'a181', 'a200', 'a182', '', 'a201', 'a183', 'a184', 'a197', 'a185', 'a194', 'a198', 'a186', 'a195', 'a187', 'a188', 'a189', 'a190', 'a191'];\nfunction getEncoding(encodingName) {\n  switch (encodingName) {\n    case 'WinAnsiEncoding':\n      return WinAnsiEncoding;\n    case 'StandardEncoding':\n      return StandardEncoding;\n    case 'MacRomanEncoding':\n      return MacRomanEncoding;\n    case 'SymbolSetEncoding':\n      return SymbolSetEncoding;\n    case 'ZapfDingbatsEncoding':\n      return ZapfDingbatsEncoding;\n    case 'ExpertEncoding':\n      return ExpertEncoding;\n    case 'MacExpertEncoding':\n      return MacExpertEncoding;\n    default:\n      return null;\n  }\n}\nexports.WinAnsiEncoding = WinAnsiEncoding;\nexports.StandardEncoding = StandardEncoding;\nexports.MacRomanEncoding = MacRomanEncoding;\nexports.SymbolSetEncoding = SymbolSetEncoding;\nexports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\nexports.ExpertEncoding = ExpertEncoding;\nexports.getEncoding = getEncoding;\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = false;\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar IObject = __w_pdfjs_require__(37);\nvar defined = __w_pdfjs_require__(38);\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(18);\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(24);\nvar TAG = __w_pdfjs_require__(4)('toStringTag');\nvar ARG = cof(function () {\n  return arguments;\n}()) == 'Arguments';\nvar tryGet = function tryGet(it, key) {\n  try {\n    return it[key];\n  } catch (e) {}\n};\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null' : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T : ARG ? cof(O) : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(13);\nvar call = __w_pdfjs_require__(107);\nvar isArrayIter = __w_pdfjs_require__(56);\nvar anObject = __w_pdfjs_require__(9);\nvar toLength = __w_pdfjs_require__(14);\nvar getIterFn = __w_pdfjs_require__(60);\nvar BREAK = {};\nvar RETURN = {};\nvar _exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () {\n    return iterable;\n  } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\n_exports.BREAK = BREAK;\n_exports.RETURN = RETURN;\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parser = exports.Linearization = exports.Lexer = undefined;\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _ccitt_stream = __w_pdfjs_require__(129);\n\nvar _jbig2_stream = __w_pdfjs_require__(131);\n\nvar MAX_LENGTH_TO_CACHE = 1000;\nvar Parser = function ParserClosure() {\n  function Parser(lexer, allowStreams, xref, recoveryMode) {\n    this.lexer = lexer;\n    this.allowStreams = allowStreams;\n    this.xref = xref;\n    this.recoveryMode = recoveryMode || false;\n    this.imageCache = Object.create(null);\n    this.refill();\n  }\n  Parser.prototype = {\n    refill: function Parser_refill() {\n      this.buf1 = this.lexer.getObj();\n      this.buf2 = this.lexer.getObj();\n    },\n    shift: function Parser_shift() {\n      if ((0, _primitives.isCmd)(this.buf2, 'ID')) {\n        this.buf1 = this.buf2;\n        this.buf2 = null;\n      } else {\n        this.buf1 = this.buf2;\n        this.buf2 = this.lexer.getObj();\n      }\n    },\n    tryShift: function Parser_tryShift() {\n      try {\n        this.shift();\n        return true;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        return false;\n      }\n    },\n    getObj: function Parser_getObj(cipherTransform) {\n      var buf1 = this.buf1;\n      this.shift();\n      if (buf1 instanceof _primitives.Cmd) {\n        switch (buf1.cmd) {\n          case 'BI':\n            return this.makeInlineImage(cipherTransform);\n          case '[':\n            var array = [];\n            while (!(0, _primitives.isCmd)(this.buf1, ']') && !(0, _primitives.isEOF)(this.buf1)) {\n              array.push(this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside array');\n              }\n              return array;\n            }\n            this.shift();\n            return array;\n          case '<<':\n            var dict = new _primitives.Dict(this.xref);\n            while (!(0, _primitives.isCmd)(this.buf1, '>>') && !(0, _primitives.isEOF)(this.buf1)) {\n              if (!(0, _primitives.isName)(this.buf1)) {\n                (0, _util.info)('Malformed dictionary: key must be a name object');\n                this.shift();\n                continue;\n              }\n              var key = this.buf1.name;\n              this.shift();\n              if ((0, _primitives.isEOF)(this.buf1)) {\n                break;\n              }\n              dict.set(key, this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside dictionary');\n              }\n              return dict;\n            }\n            if ((0, _primitives.isCmd)(this.buf2, 'stream')) {\n              return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n            }\n            this.shift();\n            return dict;\n          default:\n            return buf1;\n        }\n      }\n      if (Number.isInteger(buf1)) {\n        var num = buf1;\n        if (Number.isInteger(this.buf1) && (0, _primitives.isCmd)(this.buf2, 'R')) {\n          var ref = new _primitives.Ref(num, this.buf1);\n          this.shift();\n          this.shift();\n          return ref;\n        }\n        return num;\n      }\n      if ((0, _util.isString)(buf1)) {\n        var str = buf1;\n        if (cipherTransform) {\n          str = cipherTransform.decryptString(str);\n        }\n        return str;\n      }\n      return buf1;\n    },\n    findDefaultInlineStreamEnd: function findDefaultInlineStreamEnd(stream) {\n      var E = 0x45,\n          I = 0x49,\n          SPACE = 0x20,\n          LF = 0xA,\n          CR = 0xD;\n      var n = 10,\n          NUL = 0x0;\n      var startPos = stream.pos,\n          state = 0,\n          ch = void 0,\n          maybeEIPos = void 0;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else {\n          (0, _util.assert)(state === 2);\n          if (ch === SPACE || ch === LF || ch === CR) {\n            maybeEIPos = stream.pos;\n            var followingBytes = stream.peekBytes(n);\n            for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n              ch = followingBytes[i];\n              if (ch === NUL && followingBytes[i + 1] !== NUL) {\n                continue;\n              }\n              if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n                state = 0;\n                break;\n              }\n            }\n            if (state === 2) {\n              break;\n            }\n          } else {\n            state = 0;\n          }\n        }\n      }\n      if (ch === -1) {\n        (0, _util.warn)('findDefaultInlineStreamEnd: ' + 'Reached the end of the stream without finding a valid EI marker');\n        if (maybeEIPos) {\n          (0, _util.warn)('... trying to recover by using the last \"EI\" occurrence.');\n          stream.skip(-(stream.pos - maybeEIPos));\n        }\n      }\n      return stream.pos - 4 - startPos;\n    },\n\n    findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\n      var startPos = stream.pos,\n          foundEOI = false,\n          b,\n          markerLength,\n          length;\n      while ((b = stream.getByte()) !== -1) {\n        if (b !== 0xFF) {\n          continue;\n        }\n        switch (stream.getByte()) {\n          case 0x00:\n            break;\n          case 0xFF:\n            stream.skip(-1);\n            break;\n          case 0xD9:\n            foundEOI = true;\n            break;\n          case 0xC0:\n          case 0xC1:\n          case 0xC2:\n          case 0xC3:\n          case 0xC5:\n          case 0xC6:\n          case 0xC7:\n          case 0xC9:\n          case 0xCA:\n          case 0xCB:\n          case 0xCD:\n          case 0xCE:\n          case 0xCF:\n          case 0xC4:\n          case 0xCC:\n          case 0xDA:\n          case 0xDB:\n          case 0xDC:\n          case 0xDD:\n          case 0xDE:\n          case 0xDF:\n          case 0xE0:\n          case 0xE1:\n          case 0xE2:\n          case 0xE3:\n          case 0xE4:\n          case 0xE5:\n          case 0xE6:\n          case 0xE7:\n          case 0xE8:\n          case 0xE9:\n          case 0xEA:\n          case 0xEB:\n          case 0xEC:\n          case 0xED:\n          case 0xEE:\n          case 0xEF:\n          case 0xFE:\n            markerLength = stream.getUint16();\n            if (markerLength > 2) {\n              stream.skip(markerLength - 2);\n            } else {\n              stream.skip(-2);\n            }\n            break;\n        }\n        if (foundEOI) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (b === -1) {\n        (0, _util.warn)('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n      var TILDE = 0x7E,\n          GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === TILDE && stream.peekByte() === GT) {\n          stream.skip();\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n      var GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === GT) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n      var E = 0x45,\n          I = 0x49;\n      var state = 0,\n          ch;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else if (state === 2) {\n          break;\n        }\n      }\n    },\n    makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      var dict = new _primitives.Dict(this.xref);\n      while (!(0, _primitives.isCmd)(this.buf1, 'ID') && !(0, _primitives.isEOF)(this.buf1)) {\n        if (!(0, _primitives.isName)(this.buf1)) {\n          throw new _util.FormatError('Dictionary key must be a name object');\n        }\n        var key = this.buf1.name;\n        this.shift();\n        if ((0, _primitives.isEOF)(this.buf1)) {\n          break;\n        }\n        dict.set(key, this.getObj(cipherTransform));\n      }\n      var filter = dict.get('Filter', 'F'),\n          filterName;\n      if ((0, _primitives.isName)(filter)) {\n        filterName = filter.name;\n      } else if (Array.isArray(filter)) {\n        var filterZero = this.xref.fetchIfRef(filter[0]);\n        if ((0, _primitives.isName)(filterZero)) {\n          filterName = filterZero.name;\n        }\n      }\n      var startPos = stream.pos,\n          length,\n          i,\n          ii;\n      if (filterName === 'DCTDecode' || filterName === 'DCT') {\n        length = this.findDCTDecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCII85Decode' || filterName === 'A85') {\n        length = this.findASCII85DecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n        length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n      } else {\n        length = this.findDefaultInlineStreamEnd(stream);\n      }\n      var imageStream = stream.makeSubStream(startPos, length, dict);\n      var adler32;\n      if (length < MAX_LENGTH_TO_CACHE) {\n        var imageBytes = imageStream.getBytes();\n        imageStream.reset();\n        var a = 1;\n        var b = 0;\n        for (i = 0, ii = imageBytes.length; i < ii; ++i) {\n          a += imageBytes[i] & 0xff;\n          b += a;\n        }\n        adler32 = b % 65521 << 16 | a % 65521;\n        var cacheEntry = this.imageCache[adler32];\n        if (cacheEntry !== undefined) {\n          this.buf2 = _primitives.Cmd.get('EI');\n          this.shift();\n          cacheEntry.reset();\n          return cacheEntry;\n        }\n      }\n      if (cipherTransform) {\n        imageStream = cipherTransform.createStream(imageStream, length);\n      }\n      imageStream = this.filter(imageStream, dict, length);\n      imageStream.dict = dict;\n      if (adler32 !== undefined) {\n        imageStream.cacheKey = 'inline_' + length + '_' + adler32;\n        this.imageCache[adler32] = imageStream;\n      }\n      this.buf2 = _primitives.Cmd.get('EI');\n      this.shift();\n      return imageStream;\n    },\n    makeStream: function Parser_makeStream(dict, cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      lexer.skipToNextLine();\n      var pos = stream.pos - 1;\n      var length = dict.get('Length');\n      if (!Number.isInteger(length)) {\n        (0, _util.info)('Bad ' + length + ' attribute in stream');\n        length = 0;\n      }\n      stream.pos = pos + length;\n      lexer.nextChar();\n      if (this.tryShift() && (0, _primitives.isCmd)(this.buf2, 'endstream')) {\n        this.shift();\n      } else {\n        stream.pos = pos;\n        var SCAN_BLOCK_SIZE = 2048;\n        var ENDSTREAM_SIGNATURE_LENGTH = 9;\n        var ENDSTREAM_SIGNATURE = [0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D];\n        var skipped = 0,\n            found = false,\n            i,\n            j;\n        while (stream.pos < stream.end) {\n          var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n          var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n          if (scanLength <= 0) {\n            break;\n          }\n          found = false;\n          i = 0;\n          while (i < scanLength) {\n            j = 0;\n            while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\n              j++;\n            }\n            if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n              found = true;\n              break;\n            }\n            i++;\n          }\n          if (found) {\n            skipped += i;\n            stream.pos += i;\n            break;\n          }\n          skipped += scanLength;\n          stream.pos += scanLength;\n        }\n        if (!found) {\n          throw new _util.FormatError('Missing endstream');\n        }\n        length = skipped;\n        lexer.nextChar();\n        this.shift();\n        this.shift();\n      }\n      this.shift();\n      stream = stream.makeSubStream(pos, length, dict);\n      if (cipherTransform) {\n        stream = cipherTransform.createStream(stream, length);\n      }\n      stream = this.filter(stream, dict, length);\n      stream.dict = dict;\n      return stream;\n    },\n    filter: function Parser_filter(stream, dict, length) {\n      var filter = dict.get('Filter', 'F');\n      var params = dict.get('DecodeParms', 'DP');\n      if ((0, _primitives.isName)(filter)) {\n        if (Array.isArray(params)) {\n          (0, _util.warn)('/DecodeParms should not contain an Array, ' + 'when /Filter contains a Name.');\n        }\n        return this.makeFilter(stream, filter.name, length, params);\n      }\n      var maybeLength = length;\n      if (Array.isArray(filter)) {\n        var filterArray = filter;\n        var paramsArray = params;\n        for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n          filter = this.xref.fetchIfRef(filterArray[i]);\n          if (!(0, _primitives.isName)(filter)) {\n            throw new _util.FormatError('Bad filter name: ' + filter);\n          }\n          params = null;\n          if (Array.isArray(paramsArray) && i in paramsArray) {\n            params = this.xref.fetchIfRef(paramsArray[i]);\n          }\n          stream = this.makeFilter(stream, filter.name, maybeLength, params);\n          maybeLength = null;\n        }\n      }\n      return stream;\n    },\n    makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n      if (maybeLength === 0) {\n        (0, _util.warn)('Empty \"' + name + '\" stream.');\n        return new _stream.NullStream(stream);\n      }\n      try {\n        var xrefStreamStats = this.xref.stats.streamTypes;\n        if (name === 'FlateDecode' || name === 'Fl') {\n          xrefStreamStats[_util.StreamType.FLATE] = true;\n          if (params) {\n            return new _stream.PredictorStream(new _stream.FlateStream(stream, maybeLength), maybeLength, params);\n          }\n          return new _stream.FlateStream(stream, maybeLength);\n        }\n        if (name === 'LZWDecode' || name === 'LZW') {\n          xrefStreamStats[_util.StreamType.LZW] = true;\n          var earlyChange = 1;\n          if (params) {\n            if (params.has('EarlyChange')) {\n              earlyChange = params.get('EarlyChange');\n            }\n            return new _stream.PredictorStream(new _stream.LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n          }\n          return new _stream.LZWStream(stream, maybeLength, earlyChange);\n        }\n        if (name === 'DCTDecode' || name === 'DCT') {\n          xrefStreamStats[_util.StreamType.DCT] = true;\n          return new _stream.JpegStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'JPXDecode' || name === 'JPX') {\n          xrefStreamStats[_util.StreamType.JPX] = true;\n          return new _stream.JpxStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'ASCII85Decode' || name === 'A85') {\n          xrefStreamStats[_util.StreamType.A85] = true;\n          return new _stream.Ascii85Stream(stream, maybeLength);\n        }\n        if (name === 'ASCIIHexDecode' || name === 'AHx') {\n          xrefStreamStats[_util.StreamType.AHX] = true;\n          return new _stream.AsciiHexStream(stream, maybeLength);\n        }\n        if (name === 'CCITTFaxDecode' || name === 'CCF') {\n          xrefStreamStats[_util.StreamType.CCF] = true;\n          return new _ccitt_stream.CCITTFaxStream(stream, maybeLength, params);\n        }\n        if (name === 'RunLengthDecode' || name === 'RL') {\n          xrefStreamStats[_util.StreamType.RL] = true;\n          return new _stream.RunLengthStream(stream, maybeLength);\n        }\n        if (name === 'JBIG2Decode') {\n          xrefStreamStats[_util.StreamType.JBIG] = true;\n          return new _jbig2_stream.Jbig2Stream(stream, maybeLength, stream.dict, params);\n        }\n        (0, _util.warn)('filter \"' + name + '\" not supported yet');\n        return stream;\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid stream: \\\"' + ex + '\\\"');\n        return new _stream.NullStream(stream);\n      }\n    }\n  };\n  return Parser;\n}();\nvar Lexer = function LexerClosure() {\n  function Lexer(stream, knownCommands) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n    this.knownCommands = knownCommands;\n  }\n  var specialChars = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  function toHexDigit(ch) {\n    if (ch >= 0x30 && ch <= 0x39) {\n      return ch & 0x0F;\n    }\n    if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n      return (ch & 0x0F) + 9;\n    }\n    return -1;\n  }\n  Lexer.prototype = {\n    nextChar: function Lexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    peekChar: function Lexer_peekChar() {\n      return this.stream.peekByte();\n    },\n    getNumber: function Lexer_getNumber() {\n      var ch = this.currentChar;\n      var eNotation = false;\n      var divideBy = 0;\n      var sign = 1;\n      if (ch === 0x2D) {\n        sign = -1;\n        ch = this.nextChar();\n        if (ch === 0x2D) {\n          ch = this.nextChar();\n        }\n      } else if (ch === 0x2B) {\n        ch = this.nextChar();\n      }\n      if (ch === 0x2E) {\n        divideBy = 10;\n        ch = this.nextChar();\n      }\n      if (ch === 0x0A || ch === 0x0D) {\n        do {\n          ch = this.nextChar();\n        } while (ch === 0x0A || ch === 0x0D);\n      }\n      if (ch < 0x30 || ch > 0x39) {\n        throw new _util.FormatError('Invalid number: ' + String.fromCharCode(ch) + ' (charCode ' + ch + ')');\n      }\n      var baseValue = ch - 0x30;\n      var powerValue = 0;\n      var powerValueSign = 1;\n      while ((ch = this.nextChar()) >= 0) {\n        if (0x30 <= ch && ch <= 0x39) {\n          var currentDigit = ch - 0x30;\n          if (eNotation) {\n            powerValue = powerValue * 10 + currentDigit;\n          } else {\n            if (divideBy !== 0) {\n              divideBy *= 10;\n            }\n            baseValue = baseValue * 10 + currentDigit;\n          }\n        } else if (ch === 0x2E) {\n          if (divideBy === 0) {\n            divideBy = 1;\n          } else {\n            break;\n          }\n        } else if (ch === 0x2D) {\n          (0, _util.warn)('Badly formatted number');\n        } else if (ch === 0x45 || ch === 0x65) {\n          ch = this.peekChar();\n          if (ch === 0x2B || ch === 0x2D) {\n            powerValueSign = ch === 0x2D ? -1 : 1;\n            this.nextChar();\n          } else if (ch < 0x30 || ch > 0x39) {\n            break;\n          }\n          eNotation = true;\n        } else {\n          break;\n        }\n      }\n      if (divideBy !== 0) {\n        baseValue /= divideBy;\n      }\n      if (eNotation) {\n        baseValue *= Math.pow(10, powerValueSign * powerValue);\n      }\n      return sign * baseValue;\n    },\n    getString: function Lexer_getString() {\n      var numParen = 1;\n      var done = false;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.nextChar();\n      while (true) {\n        var charBuffered = false;\n        switch (ch | 0) {\n          case -1:\n            (0, _util.warn)('Unterminated string');\n            done = true;\n            break;\n          case 0x28:\n            ++numParen;\n            strBuf.push('(');\n            break;\n          case 0x29:\n            if (--numParen === 0) {\n              this.nextChar();\n              done = true;\n            } else {\n              strBuf.push(')');\n            }\n            break;\n          case 0x5C:\n            ch = this.nextChar();\n            switch (ch) {\n              case -1:\n                (0, _util.warn)('Unterminated string');\n                done = true;\n                break;\n              case 0x6E:\n                strBuf.push('\\n');\n                break;\n              case 0x72:\n                strBuf.push('\\r');\n                break;\n              case 0x74:\n                strBuf.push('\\t');\n                break;\n              case 0x62:\n                strBuf.push('\\b');\n                break;\n              case 0x66:\n                strBuf.push('\\f');\n                break;\n              case 0x5C:\n              case 0x28:\n              case 0x29:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n              case 0x30:\n              case 0x31:\n              case 0x32:\n              case 0x33:\n              case 0x34:\n              case 0x35:\n              case 0x36:\n              case 0x37:\n                var x = ch & 0x0F;\n                ch = this.nextChar();\n                charBuffered = true;\n                if (ch >= 0x30 && ch <= 0x37) {\n                  x = (x << 3) + (ch & 0x0F);\n                  ch = this.nextChar();\n                  if (ch >= 0x30 && ch <= 0x37) {\n                    charBuffered = false;\n                    x = (x << 3) + (ch & 0x0F);\n                  }\n                }\n                strBuf.push(String.fromCharCode(x));\n                break;\n              case 0x0D:\n                if (this.peekChar() === 0x0A) {\n                  this.nextChar();\n                }\n                break;\n              case 0x0A:\n                break;\n              default:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n            }\n            break;\n          default:\n            strBuf.push(String.fromCharCode(ch));\n            break;\n        }\n        if (done) {\n          break;\n        }\n        if (!charBuffered) {\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getName: function Lexer_getName() {\n      var ch, previousCh;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        if (ch === 0x23) {\n          ch = this.nextChar();\n          if (specialChars[ch]) {\n            (0, _util.warn)('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\n            strBuf.push('#');\n            break;\n          }\n          var x = toHexDigit(ch);\n          if (x !== -1) {\n            previousCh = ch;\n            ch = this.nextChar();\n            var x2 = toHexDigit(ch);\n            if (x2 === -1) {\n              (0, _util.warn)('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\n              strBuf.push('#', String.fromCharCode(previousCh));\n              if (specialChars[ch]) {\n                break;\n              }\n              strBuf.push(String.fromCharCode(ch));\n              continue;\n            }\n            strBuf.push(String.fromCharCode(x << 4 | x2));\n          } else {\n            strBuf.push('#', String.fromCharCode(ch));\n          }\n        } else {\n          strBuf.push(String.fromCharCode(ch));\n        }\n      }\n      if (strBuf.length > 127) {\n        (0, _util.warn)('name token is longer than allowed by the spec: ' + strBuf.length);\n      }\n      return _primitives.Name.get(strBuf.join(''));\n    },\n    getHexString: function Lexer_getHexString() {\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.currentChar;\n      var isFirstHex = true;\n      var firstDigit;\n      var secondDigit;\n      while (true) {\n        if (ch < 0) {\n          (0, _util.warn)('Unterminated hex string');\n          break;\n        } else if (ch === 0x3E) {\n          this.nextChar();\n          break;\n        } else if (specialChars[ch] === 1) {\n          ch = this.nextChar();\n          continue;\n        } else {\n          if (isFirstHex) {\n            firstDigit = toHexDigit(ch);\n            if (firstDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n          } else {\n            secondDigit = toHexDigit(ch);\n            if (secondDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n            strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n          }\n          isFirstHex = !isFirstHex;\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getObj: function Lexer_getObj() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (specialChars[ch] !== 1) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return this.getNumber();\n        case 0x28:\n          return this.getString();\n        case 0x2F:\n          return this.getName();\n        case 0x5B:\n          this.nextChar();\n          return _primitives.Cmd.get('[');\n        case 0x5D:\n          this.nextChar();\n          return _primitives.Cmd.get(']');\n        case 0x3C:\n          ch = this.nextChar();\n          if (ch === 0x3C) {\n            this.nextChar();\n            return _primitives.Cmd.get('<<');\n          }\n          return this.getHexString();\n        case 0x3E:\n          ch = this.nextChar();\n          if (ch === 0x3E) {\n            this.nextChar();\n            return _primitives.Cmd.get('>>');\n          }\n          return _primitives.Cmd.get('>');\n        case 0x7B:\n          this.nextChar();\n          return _primitives.Cmd.get('{');\n        case 0x7D:\n          this.nextChar();\n          return _primitives.Cmd.get('}');\n        case 0x29:\n          this.nextChar();\n          throw new _util.FormatError('Illegal character: ' + ch);\n      }\n      var str = String.fromCharCode(ch);\n      var knownCommands = this.knownCommands;\n      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        var possibleCommand = str + String.fromCharCode(ch);\n        if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n          break;\n        }\n        if (str.length === 128) {\n          throw new _util.FormatError('Command token too long: ' + str.length);\n        }\n        str = possibleCommand;\n        knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      }\n      if (str === 'true') {\n        return true;\n      }\n      if (str === 'false') {\n        return false;\n      }\n      if (str === 'null') {\n        return null;\n      }\n      return _primitives.Cmd.get(str);\n    },\n    skipToNextLine: function Lexer_skipToNextLine() {\n      var ch = this.currentChar;\n      while (ch >= 0) {\n        if (ch === 0x0D) {\n          ch = this.nextChar();\n          if (ch === 0x0A) {\n            this.nextChar();\n          }\n          break;\n        } else if (ch === 0x0A) {\n          this.nextChar();\n          break;\n        }\n        ch = this.nextChar();\n      }\n    }\n  };\n  return Lexer;\n}();\nvar Linearization = {\n  create: function LinearizationCreate(stream) {\n    function getInt(name, allowZeroValue) {\n      var obj = linDict.get(name);\n      if (Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n        return obj;\n      }\n      throw new Error('The \"' + name + '\" parameter in the linearization ' + 'dictionary is invalid.');\n    }\n    function getHints() {\n      var hints = linDict.get('H'),\n          hintsLength,\n          item;\n      if (Array.isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n        for (var index = 0; index < hintsLength; index++) {\n          if (!(Number.isInteger(item = hints[index]) && item > 0)) {\n            throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\n          }\n        }\n        return hints;\n      }\n      throw new Error('Hint array in the linearization dictionary is invalid.');\n    }\n    var parser = new Parser(new Lexer(stream), false, null);\n    var obj1 = parser.getObj();\n    var obj2 = parser.getObj();\n    var obj3 = parser.getObj();\n    var linDict = parser.getObj();\n    var obj, length;\n    if (!(Number.isInteger(obj1) && Number.isInteger(obj2) && (0, _primitives.isCmd)(obj3, 'obj') && (0, _primitives.isDict)(linDict) && (0, _util.isNum)(obj = linDict.get('Linearized')) && obj > 0)) {\n      return null;\n    } else if ((length = getInt('L')) !== stream.length) {\n      throw new Error('The \"L\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\n    }\n    return {\n      length: length,\n      hints: getHints(),\n      objectNumberFirst: getInt('O'),\n      endFirst: getInt('E'),\n      numPages: getInt('N'),\n      mainXRefEntriesOffset: getInt('T'),\n      pageFirst: linDict.has('P') ? getInt('P', true) : 0\n    };\n  }\n};\nexports.Lexer = Lexer;\nexports.Linearization = Linearization;\nexports.Parser = Parser;\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar document = __w_pdfjs_require__(1).document;\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(24);\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar shared = __w_pdfjs_require__(54)('keys');\nvar uid = __w_pdfjs_require__(17);\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $keys = __w_pdfjs_require__(52);\nvar enumBugKeys = __w_pdfjs_require__(40);\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(13);\nvar IObject = __w_pdfjs_require__(37);\nvar toObject = __w_pdfjs_require__(19);\nvar toLength = __w_pdfjs_require__(14);\nvar asc = __w_pdfjs_require__(91);\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (; length > index; index++) {\n      if (NO_HOLES || index in self) {\n        val = self[index];\n        res = f(val, index, O);\n        if (TYPE) {\n          if (IS_MAP) result[index] = res;else if (res) switch (TYPE) {\n            case 3:\n              return true;\n            case 5:\n              return val;\n            case 6:\n              return index;\n            case 2:\n              result.push(val);\n          } else if (IS_EVERY) return false;\n        }\n      }\n    }return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(9);\nvar aFunction = __w_pdfjs_require__(21);\nvar SPECIES = __w_pdfjs_require__(4)('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\nvar SAFE_CLOSING = false;\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () {\n    SAFE_CLOSING = true;\n  };\n  Array.from(riter, function () {\n    throw 2;\n  });\n} catch (e) {}\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () {\n      return { done: safe = true };\n    };\n    arr[ITERATOR] = function () {\n      return iter;\n    };\n    exec(arr);\n  } catch (e) {}\n  return safe;\n};\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar aFunction = __w_pdfjs_require__(21);\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar META = __w_pdfjs_require__(17)('meta');\nvar isObject = __w_pdfjs_require__(3);\nvar has = __w_pdfjs_require__(10);\nvar setDesc = __w_pdfjs_require__(15).f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !__w_pdfjs_require__(12)(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function setMeta(it) {\n  setDesc(it, META, {\n    value: {\n      i: 'O' + ++id,\n      w: {}\n    }\n  });\n};\nvar fastKey = function fastKey(it, create) {\n  if (!isObject(it)) return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    if (!isExtensible(it)) return 'F';\n    if (!create) return 'E';\n    setMeta(it);\n  }\n  return it[META].i;\n};\nvar getWeak = function getWeak(it, create) {\n  if (!has(it, META)) {\n    if (!isExtensible(it)) return true;\n    if (!create) return false;\n    setMeta(it);\n  }\n  return it[META].w;\n};\nvar onFreeze = function onFreeze(it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getLookupTableFactory = __w_pdfjs_require__(0).getLookupTableFactory;\nvar getGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['A'] = 0x0041;\n  t['AE'] = 0x00C6;\n  t['AEacute'] = 0x01FC;\n  t['AEmacron'] = 0x01E2;\n  t['AEsmall'] = 0xF7E6;\n  t['Aacute'] = 0x00C1;\n  t['Aacutesmall'] = 0xF7E1;\n  t['Abreve'] = 0x0102;\n  t['Abreveacute'] = 0x1EAE;\n  t['Abrevecyrillic'] = 0x04D0;\n  t['Abrevedotbelow'] = 0x1EB6;\n  t['Abrevegrave'] = 0x1EB0;\n  t['Abrevehookabove'] = 0x1EB2;\n  t['Abrevetilde'] = 0x1EB4;\n  t['Acaron'] = 0x01CD;\n  t['Acircle'] = 0x24B6;\n  t['Acircumflex'] = 0x00C2;\n  t['Acircumflexacute'] = 0x1EA4;\n  t['Acircumflexdotbelow'] = 0x1EAC;\n  t['Acircumflexgrave'] = 0x1EA6;\n  t['Acircumflexhookabove'] = 0x1EA8;\n  t['Acircumflexsmall'] = 0xF7E2;\n  t['Acircumflextilde'] = 0x1EAA;\n  t['Acute'] = 0xF6C9;\n  t['Acutesmall'] = 0xF7B4;\n  t['Acyrillic'] = 0x0410;\n  t['Adblgrave'] = 0x0200;\n  t['Adieresis'] = 0x00C4;\n  t['Adieresiscyrillic'] = 0x04D2;\n  t['Adieresismacron'] = 0x01DE;\n  t['Adieresissmall'] = 0xF7E4;\n  t['Adotbelow'] = 0x1EA0;\n  t['Adotmacron'] = 0x01E0;\n  t['Agrave'] = 0x00C0;\n  t['Agravesmall'] = 0xF7E0;\n  t['Ahookabove'] = 0x1EA2;\n  t['Aiecyrillic'] = 0x04D4;\n  t['Ainvertedbreve'] = 0x0202;\n  t['Alpha'] = 0x0391;\n  t['Alphatonos'] = 0x0386;\n  t['Amacron'] = 0x0100;\n  t['Amonospace'] = 0xFF21;\n  t['Aogonek'] = 0x0104;\n  t['Aring'] = 0x00C5;\n  t['Aringacute'] = 0x01FA;\n  t['Aringbelow'] = 0x1E00;\n  t['Aringsmall'] = 0xF7E5;\n  t['Asmall'] = 0xF761;\n  t['Atilde'] = 0x00C3;\n  t['Atildesmall'] = 0xF7E3;\n  t['Aybarmenian'] = 0x0531;\n  t['B'] = 0x0042;\n  t['Bcircle'] = 0x24B7;\n  t['Bdotaccent'] = 0x1E02;\n  t['Bdotbelow'] = 0x1E04;\n  t['Becyrillic'] = 0x0411;\n  t['Benarmenian'] = 0x0532;\n  t['Beta'] = 0x0392;\n  t['Bhook'] = 0x0181;\n  t['Blinebelow'] = 0x1E06;\n  t['Bmonospace'] = 0xFF22;\n  t['Brevesmall'] = 0xF6F4;\n  t['Bsmall'] = 0xF762;\n  t['Btopbar'] = 0x0182;\n  t['C'] = 0x0043;\n  t['Caarmenian'] = 0x053E;\n  t['Cacute'] = 0x0106;\n  t['Caron'] = 0xF6CA;\n  t['Caronsmall'] = 0xF6F5;\n  t['Ccaron'] = 0x010C;\n  t['Ccedilla'] = 0x00C7;\n  t['Ccedillaacute'] = 0x1E08;\n  t['Ccedillasmall'] = 0xF7E7;\n  t['Ccircle'] = 0x24B8;\n  t['Ccircumflex'] = 0x0108;\n  t['Cdot'] = 0x010A;\n  t['Cdotaccent'] = 0x010A;\n  t['Cedillasmall'] = 0xF7B8;\n  t['Chaarmenian'] = 0x0549;\n  t['Cheabkhasiancyrillic'] = 0x04BC;\n  t['Checyrillic'] = 0x0427;\n  t['Chedescenderabkhasiancyrillic'] = 0x04BE;\n  t['Chedescendercyrillic'] = 0x04B6;\n  t['Chedieresiscyrillic'] = 0x04F4;\n  t['Cheharmenian'] = 0x0543;\n  t['Chekhakassiancyrillic'] = 0x04CB;\n  t['Cheverticalstrokecyrillic'] = 0x04B8;\n  t['Chi'] = 0x03A7;\n  t['Chook'] = 0x0187;\n  t['Circumflexsmall'] = 0xF6F6;\n  t['Cmonospace'] = 0xFF23;\n  t['Coarmenian'] = 0x0551;\n  t['Csmall'] = 0xF763;\n  t['D'] = 0x0044;\n  t['DZ'] = 0x01F1;\n  t['DZcaron'] = 0x01C4;\n  t['Daarmenian'] = 0x0534;\n  t['Dafrican'] = 0x0189;\n  t['Dcaron'] = 0x010E;\n  t['Dcedilla'] = 0x1E10;\n  t['Dcircle'] = 0x24B9;\n  t['Dcircumflexbelow'] = 0x1E12;\n  t['Dcroat'] = 0x0110;\n  t['Ddotaccent'] = 0x1E0A;\n  t['Ddotbelow'] = 0x1E0C;\n  t['Decyrillic'] = 0x0414;\n  t['Deicoptic'] = 0x03EE;\n  t['Delta'] = 0x2206;\n  t['Deltagreek'] = 0x0394;\n  t['Dhook'] = 0x018A;\n  t['Dieresis'] = 0xF6CB;\n  t['DieresisAcute'] = 0xF6CC;\n  t['DieresisGrave'] = 0xF6CD;\n  t['Dieresissmall'] = 0xF7A8;\n  t['Digammagreek'] = 0x03DC;\n  t['Djecyrillic'] = 0x0402;\n  t['Dlinebelow'] = 0x1E0E;\n  t['Dmonospace'] = 0xFF24;\n  t['Dotaccentsmall'] = 0xF6F7;\n  t['Dslash'] = 0x0110;\n  t['Dsmall'] = 0xF764;\n  t['Dtopbar'] = 0x018B;\n  t['Dz'] = 0x01F2;\n  t['Dzcaron'] = 0x01C5;\n  t['Dzeabkhasiancyrillic'] = 0x04E0;\n  t['Dzecyrillic'] = 0x0405;\n  t['Dzhecyrillic'] = 0x040F;\n  t['E'] = 0x0045;\n  t['Eacute'] = 0x00C9;\n  t['Eacutesmall'] = 0xF7E9;\n  t['Ebreve'] = 0x0114;\n  t['Ecaron'] = 0x011A;\n  t['Ecedillabreve'] = 0x1E1C;\n  t['Echarmenian'] = 0x0535;\n  t['Ecircle'] = 0x24BA;\n  t['Ecircumflex'] = 0x00CA;\n  t['Ecircumflexacute'] = 0x1EBE;\n  t['Ecircumflexbelow'] = 0x1E18;\n  t['Ecircumflexdotbelow'] = 0x1EC6;\n  t['Ecircumflexgrave'] = 0x1EC0;\n  t['Ecircumflexhookabove'] = 0x1EC2;\n  t['Ecircumflexsmall'] = 0xF7EA;\n  t['Ecircumflextilde'] = 0x1EC4;\n  t['Ecyrillic'] = 0x0404;\n  t['Edblgrave'] = 0x0204;\n  t['Edieresis'] = 0x00CB;\n  t['Edieresissmall'] = 0xF7EB;\n  t['Edot'] = 0x0116;\n  t['Edotaccent'] = 0x0116;\n  t['Edotbelow'] = 0x1EB8;\n  t['Efcyrillic'] = 0x0424;\n  t['Egrave'] = 0x00C8;\n  t['Egravesmall'] = 0xF7E8;\n  t['Eharmenian'] = 0x0537;\n  t['Ehookabove'] = 0x1EBA;\n  t['Eightroman'] = 0x2167;\n  t['Einvertedbreve'] = 0x0206;\n  t['Eiotifiedcyrillic'] = 0x0464;\n  t['Elcyrillic'] = 0x041B;\n  t['Elevenroman'] = 0x216A;\n  t['Emacron'] = 0x0112;\n  t['Emacronacute'] = 0x1E16;\n  t['Emacrongrave'] = 0x1E14;\n  t['Emcyrillic'] = 0x041C;\n  t['Emonospace'] = 0xFF25;\n  t['Encyrillic'] = 0x041D;\n  t['Endescendercyrillic'] = 0x04A2;\n  t['Eng'] = 0x014A;\n  t['Enghecyrillic'] = 0x04A4;\n  t['Enhookcyrillic'] = 0x04C7;\n  t['Eogonek'] = 0x0118;\n  t['Eopen'] = 0x0190;\n  t['Epsilon'] = 0x0395;\n  t['Epsilontonos'] = 0x0388;\n  t['Ercyrillic'] = 0x0420;\n  t['Ereversed'] = 0x018E;\n  t['Ereversedcyrillic'] = 0x042D;\n  t['Escyrillic'] = 0x0421;\n  t['Esdescendercyrillic'] = 0x04AA;\n  t['Esh'] = 0x01A9;\n  t['Esmall'] = 0xF765;\n  t['Eta'] = 0x0397;\n  t['Etarmenian'] = 0x0538;\n  t['Etatonos'] = 0x0389;\n  t['Eth'] = 0x00D0;\n  t['Ethsmall'] = 0xF7F0;\n  t['Etilde'] = 0x1EBC;\n  t['Etildebelow'] = 0x1E1A;\n  t['Euro'] = 0x20AC;\n  t['Ezh'] = 0x01B7;\n  t['Ezhcaron'] = 0x01EE;\n  t['Ezhreversed'] = 0x01B8;\n  t['F'] = 0x0046;\n  t['Fcircle'] = 0x24BB;\n  t['Fdotaccent'] = 0x1E1E;\n  t['Feharmenian'] = 0x0556;\n  t['Feicoptic'] = 0x03E4;\n  t['Fhook'] = 0x0191;\n  t['Fitacyrillic'] = 0x0472;\n  t['Fiveroman'] = 0x2164;\n  t['Fmonospace'] = 0xFF26;\n  t['Fourroman'] = 0x2163;\n  t['Fsmall'] = 0xF766;\n  t['G'] = 0x0047;\n  t['GBsquare'] = 0x3387;\n  t['Gacute'] = 0x01F4;\n  t['Gamma'] = 0x0393;\n  t['Gammaafrican'] = 0x0194;\n  t['Gangiacoptic'] = 0x03EA;\n  t['Gbreve'] = 0x011E;\n  t['Gcaron'] = 0x01E6;\n  t['Gcedilla'] = 0x0122;\n  t['Gcircle'] = 0x24BC;\n  t['Gcircumflex'] = 0x011C;\n  t['Gcommaaccent'] = 0x0122;\n  t['Gdot'] = 0x0120;\n  t['Gdotaccent'] = 0x0120;\n  t['Gecyrillic'] = 0x0413;\n  t['Ghadarmenian'] = 0x0542;\n  t['Ghemiddlehookcyrillic'] = 0x0494;\n  t['Ghestrokecyrillic'] = 0x0492;\n  t['Gheupturncyrillic'] = 0x0490;\n  t['Ghook'] = 0x0193;\n  t['Gimarmenian'] = 0x0533;\n  t['Gjecyrillic'] = 0x0403;\n  t['Gmacron'] = 0x1E20;\n  t['Gmonospace'] = 0xFF27;\n  t['Grave'] = 0xF6CE;\n  t['Gravesmall'] = 0xF760;\n  t['Gsmall'] = 0xF767;\n  t['Gsmallhook'] = 0x029B;\n  t['Gstroke'] = 0x01E4;\n  t['H'] = 0x0048;\n  t['H18533'] = 0x25CF;\n  t['H18543'] = 0x25AA;\n  t['H18551'] = 0x25AB;\n  t['H22073'] = 0x25A1;\n  t['HPsquare'] = 0x33CB;\n  t['Haabkhasiancyrillic'] = 0x04A8;\n  t['Hadescendercyrillic'] = 0x04B2;\n  t['Hardsigncyrillic'] = 0x042A;\n  t['Hbar'] = 0x0126;\n  t['Hbrevebelow'] = 0x1E2A;\n  t['Hcedilla'] = 0x1E28;\n  t['Hcircle'] = 0x24BD;\n  t['Hcircumflex'] = 0x0124;\n  t['Hdieresis'] = 0x1E26;\n  t['Hdotaccent'] = 0x1E22;\n  t['Hdotbelow'] = 0x1E24;\n  t['Hmonospace'] = 0xFF28;\n  t['Hoarmenian'] = 0x0540;\n  t['Horicoptic'] = 0x03E8;\n  t['Hsmall'] = 0xF768;\n  t['Hungarumlaut'] = 0xF6CF;\n  t['Hungarumlautsmall'] = 0xF6F8;\n  t['Hzsquare'] = 0x3390;\n  t['I'] = 0x0049;\n  t['IAcyrillic'] = 0x042F;\n  t['IJ'] = 0x0132;\n  t['IUcyrillic'] = 0x042E;\n  t['Iacute'] = 0x00CD;\n  t['Iacutesmall'] = 0xF7ED;\n  t['Ibreve'] = 0x012C;\n  t['Icaron'] = 0x01CF;\n  t['Icircle'] = 0x24BE;\n  t['Icircumflex'] = 0x00CE;\n  t['Icircumflexsmall'] = 0xF7EE;\n  t['Icyrillic'] = 0x0406;\n  t['Idblgrave'] = 0x0208;\n  t['Idieresis'] = 0x00CF;\n  t['Idieresisacute'] = 0x1E2E;\n  t['Idieresiscyrillic'] = 0x04E4;\n  t['Idieresissmall'] = 0xF7EF;\n  t['Idot'] = 0x0130;\n  t['Idotaccent'] = 0x0130;\n  t['Idotbelow'] = 0x1ECA;\n  t['Iebrevecyrillic'] = 0x04D6;\n  t['Iecyrillic'] = 0x0415;\n  t['Ifraktur'] = 0x2111;\n  t['Igrave'] = 0x00CC;\n  t['Igravesmall'] = 0xF7EC;\n  t['Ihookabove'] = 0x1EC8;\n  t['Iicyrillic'] = 0x0418;\n  t['Iinvertedbreve'] = 0x020A;\n  t['Iishortcyrillic'] = 0x0419;\n  t['Imacron'] = 0x012A;\n  t['Imacroncyrillic'] = 0x04E2;\n  t['Imonospace'] = 0xFF29;\n  t['Iniarmenian'] = 0x053B;\n  t['Iocyrillic'] = 0x0401;\n  t['Iogonek'] = 0x012E;\n  t['Iota'] = 0x0399;\n  t['Iotaafrican'] = 0x0196;\n  t['Iotadieresis'] = 0x03AA;\n  t['Iotatonos'] = 0x038A;\n  t['Ismall'] = 0xF769;\n  t['Istroke'] = 0x0197;\n  t['Itilde'] = 0x0128;\n  t['Itildebelow'] = 0x1E2C;\n  t['Izhitsacyrillic'] = 0x0474;\n  t['Izhitsadblgravecyrillic'] = 0x0476;\n  t['J'] = 0x004A;\n  t['Jaarmenian'] = 0x0541;\n  t['Jcircle'] = 0x24BF;\n  t['Jcircumflex'] = 0x0134;\n  t['Jecyrillic'] = 0x0408;\n  t['Jheharmenian'] = 0x054B;\n  t['Jmonospace'] = 0xFF2A;\n  t['Jsmall'] = 0xF76A;\n  t['K'] = 0x004B;\n  t['KBsquare'] = 0x3385;\n  t['KKsquare'] = 0x33CD;\n  t['Kabashkircyrillic'] = 0x04A0;\n  t['Kacute'] = 0x1E30;\n  t['Kacyrillic'] = 0x041A;\n  t['Kadescendercyrillic'] = 0x049A;\n  t['Kahookcyrillic'] = 0x04C3;\n  t['Kappa'] = 0x039A;\n  t['Kastrokecyrillic'] = 0x049E;\n  t['Kaverticalstrokecyrillic'] = 0x049C;\n  t['Kcaron'] = 0x01E8;\n  t['Kcedilla'] = 0x0136;\n  t['Kcircle'] = 0x24C0;\n  t['Kcommaaccent'] = 0x0136;\n  t['Kdotbelow'] = 0x1E32;\n  t['Keharmenian'] = 0x0554;\n  t['Kenarmenian'] = 0x053F;\n  t['Khacyrillic'] = 0x0425;\n  t['Kheicoptic'] = 0x03E6;\n  t['Khook'] = 0x0198;\n  t['Kjecyrillic'] = 0x040C;\n  t['Klinebelow'] = 0x1E34;\n  t['Kmonospace'] = 0xFF2B;\n  t['Koppacyrillic'] = 0x0480;\n  t['Koppagreek'] = 0x03DE;\n  t['Ksicyrillic'] = 0x046E;\n  t['Ksmall'] = 0xF76B;\n  t['L'] = 0x004C;\n  t['LJ'] = 0x01C7;\n  t['LL'] = 0xF6BF;\n  t['Lacute'] = 0x0139;\n  t['Lambda'] = 0x039B;\n  t['Lcaron'] = 0x013D;\n  t['Lcedilla'] = 0x013B;\n  t['Lcircle'] = 0x24C1;\n  t['Lcircumflexbelow'] = 0x1E3C;\n  t['Lcommaaccent'] = 0x013B;\n  t['Ldot'] = 0x013F;\n  t['Ldotaccent'] = 0x013F;\n  t['Ldotbelow'] = 0x1E36;\n  t['Ldotbelowmacron'] = 0x1E38;\n  t['Liwnarmenian'] = 0x053C;\n  t['Lj'] = 0x01C8;\n  t['Ljecyrillic'] = 0x0409;\n  t['Llinebelow'] = 0x1E3A;\n  t['Lmonospace'] = 0xFF2C;\n  t['Lslash'] = 0x0141;\n  t['Lslashsmall'] = 0xF6F9;\n  t['Lsmall'] = 0xF76C;\n  t['M'] = 0x004D;\n  t['MBsquare'] = 0x3386;\n  t['Macron'] = 0xF6D0;\n  t['Macronsmall'] = 0xF7AF;\n  t['Macute'] = 0x1E3E;\n  t['Mcircle'] = 0x24C2;\n  t['Mdotaccent'] = 0x1E40;\n  t['Mdotbelow'] = 0x1E42;\n  t['Menarmenian'] = 0x0544;\n  t['Mmonospace'] = 0xFF2D;\n  t['Msmall'] = 0xF76D;\n  t['Mturned'] = 0x019C;\n  t['Mu'] = 0x039C;\n  t['N'] = 0x004E;\n  t['NJ'] = 0x01CA;\n  t['Nacute'] = 0x0143;\n  t['Ncaron'] = 0x0147;\n  t['Ncedilla'] = 0x0145;\n  t['Ncircle'] = 0x24C3;\n  t['Ncircumflexbelow'] = 0x1E4A;\n  t['Ncommaaccent'] = 0x0145;\n  t['Ndotaccent'] = 0x1E44;\n  t['Ndotbelow'] = 0x1E46;\n  t['Nhookleft'] = 0x019D;\n  t['Nineroman'] = 0x2168;\n  t['Nj'] = 0x01CB;\n  t['Njecyrillic'] = 0x040A;\n  t['Nlinebelow'] = 0x1E48;\n  t['Nmonospace'] = 0xFF2E;\n  t['Nowarmenian'] = 0x0546;\n  t['Nsmall'] = 0xF76E;\n  t['Ntilde'] = 0x00D1;\n  t['Ntildesmall'] = 0xF7F1;\n  t['Nu'] = 0x039D;\n  t['O'] = 0x004F;\n  t['OE'] = 0x0152;\n  t['OEsmall'] = 0xF6FA;\n  t['Oacute'] = 0x00D3;\n  t['Oacutesmall'] = 0xF7F3;\n  t['Obarredcyrillic'] = 0x04E8;\n  t['Obarreddieresiscyrillic'] = 0x04EA;\n  t['Obreve'] = 0x014E;\n  t['Ocaron'] = 0x01D1;\n  t['Ocenteredtilde'] = 0x019F;\n  t['Ocircle'] = 0x24C4;\n  t['Ocircumflex'] = 0x00D4;\n  t['Ocircumflexacute'] = 0x1ED0;\n  t['Ocircumflexdotbelow'] = 0x1ED8;\n  t['Ocircumflexgrave'] = 0x1ED2;\n  t['Ocircumflexhookabove'] = 0x1ED4;\n  t['Ocircumflexsmall'] = 0xF7F4;\n  t['Ocircumflextilde'] = 0x1ED6;\n  t['Ocyrillic'] = 0x041E;\n  t['Odblacute'] = 0x0150;\n  t['Odblgrave'] = 0x020C;\n  t['Odieresis'] = 0x00D6;\n  t['Odieresiscyrillic'] = 0x04E6;\n  t['Odieresissmall'] = 0xF7F6;\n  t['Odotbelow'] = 0x1ECC;\n  t['Ogoneksmall'] = 0xF6FB;\n  t['Ograve'] = 0x00D2;\n  t['Ogravesmall'] = 0xF7F2;\n  t['Oharmenian'] = 0x0555;\n  t['Ohm'] = 0x2126;\n  t['Ohookabove'] = 0x1ECE;\n  t['Ohorn'] = 0x01A0;\n  t['Ohornacute'] = 0x1EDA;\n  t['Ohorndotbelow'] = 0x1EE2;\n  t['Ohorngrave'] = 0x1EDC;\n  t['Ohornhookabove'] = 0x1EDE;\n  t['Ohorntilde'] = 0x1EE0;\n  t['Ohungarumlaut'] = 0x0150;\n  t['Oi'] = 0x01A2;\n  t['Oinvertedbreve'] = 0x020E;\n  t['Omacron'] = 0x014C;\n  t['Omacronacute'] = 0x1E52;\n  t['Omacrongrave'] = 0x1E50;\n  t['Omega'] = 0x2126;\n  t['Omegacyrillic'] = 0x0460;\n  t['Omegagreek'] = 0x03A9;\n  t['Omegaroundcyrillic'] = 0x047A;\n  t['Omegatitlocyrillic'] = 0x047C;\n  t['Omegatonos'] = 0x038F;\n  t['Omicron'] = 0x039F;\n  t['Omicrontonos'] = 0x038C;\n  t['Omonospace'] = 0xFF2F;\n  t['Oneroman'] = 0x2160;\n  t['Oogonek'] = 0x01EA;\n  t['Oogonekmacron'] = 0x01EC;\n  t['Oopen'] = 0x0186;\n  t['Oslash'] = 0x00D8;\n  t['Oslashacute'] = 0x01FE;\n  t['Oslashsmall'] = 0xF7F8;\n  t['Osmall'] = 0xF76F;\n  t['Ostrokeacute'] = 0x01FE;\n  t['Otcyrillic'] = 0x047E;\n  t['Otilde'] = 0x00D5;\n  t['Otildeacute'] = 0x1E4C;\n  t['Otildedieresis'] = 0x1E4E;\n  t['Otildesmall'] = 0xF7F5;\n  t['P'] = 0x0050;\n  t['Pacute'] = 0x1E54;\n  t['Pcircle'] = 0x24C5;\n  t['Pdotaccent'] = 0x1E56;\n  t['Pecyrillic'] = 0x041F;\n  t['Peharmenian'] = 0x054A;\n  t['Pemiddlehookcyrillic'] = 0x04A6;\n  t['Phi'] = 0x03A6;\n  t['Phook'] = 0x01A4;\n  t['Pi'] = 0x03A0;\n  t['Piwrarmenian'] = 0x0553;\n  t['Pmonospace'] = 0xFF30;\n  t['Psi'] = 0x03A8;\n  t['Psicyrillic'] = 0x0470;\n  t['Psmall'] = 0xF770;\n  t['Q'] = 0x0051;\n  t['Qcircle'] = 0x24C6;\n  t['Qmonospace'] = 0xFF31;\n  t['Qsmall'] = 0xF771;\n  t['R'] = 0x0052;\n  t['Raarmenian'] = 0x054C;\n  t['Racute'] = 0x0154;\n  t['Rcaron'] = 0x0158;\n  t['Rcedilla'] = 0x0156;\n  t['Rcircle'] = 0x24C7;\n  t['Rcommaaccent'] = 0x0156;\n  t['Rdblgrave'] = 0x0210;\n  t['Rdotaccent'] = 0x1E58;\n  t['Rdotbelow'] = 0x1E5A;\n  t['Rdotbelowmacron'] = 0x1E5C;\n  t['Reharmenian'] = 0x0550;\n  t['Rfraktur'] = 0x211C;\n  t['Rho'] = 0x03A1;\n  t['Ringsmall'] = 0xF6FC;\n  t['Rinvertedbreve'] = 0x0212;\n  t['Rlinebelow'] = 0x1E5E;\n  t['Rmonospace'] = 0xFF32;\n  t['Rsmall'] = 0xF772;\n  t['Rsmallinverted'] = 0x0281;\n  t['Rsmallinvertedsuperior'] = 0x02B6;\n  t['S'] = 0x0053;\n  t['SF010000'] = 0x250C;\n  t['SF020000'] = 0x2514;\n  t['SF030000'] = 0x2510;\n  t['SF040000'] = 0x2518;\n  t['SF050000'] = 0x253C;\n  t['SF060000'] = 0x252C;\n  t['SF070000'] = 0x2534;\n  t['SF080000'] = 0x251C;\n  t['SF090000'] = 0x2524;\n  t['SF100000'] = 0x2500;\n  t['SF110000'] = 0x2502;\n  t['SF190000'] = 0x2561;\n  t['SF200000'] = 0x2562;\n  t['SF210000'] = 0x2556;\n  t['SF220000'] = 0x2555;\n  t['SF230000'] = 0x2563;\n  t['SF240000'] = 0x2551;\n  t['SF250000'] = 0x2557;\n  t['SF260000'] = 0x255D;\n  t['SF270000'] = 0x255C;\n  t['SF280000'] = 0x255B;\n  t['SF360000'] = 0x255E;\n  t['SF370000'] = 0x255F;\n  t['SF380000'] = 0x255A;\n  t['SF390000'] = 0x2554;\n  t['SF400000'] = 0x2569;\n  t['SF410000'] = 0x2566;\n  t['SF420000'] = 0x2560;\n  t['SF430000'] = 0x2550;\n  t['SF440000'] = 0x256C;\n  t['SF450000'] = 0x2567;\n  t['SF460000'] = 0x2568;\n  t['SF470000'] = 0x2564;\n  t['SF480000'] = 0x2565;\n  t['SF490000'] = 0x2559;\n  t['SF500000'] = 0x2558;\n  t['SF510000'] = 0x2552;\n  t['SF520000'] = 0x2553;\n  t['SF530000'] = 0x256B;\n  t['SF540000'] = 0x256A;\n  t['Sacute'] = 0x015A;\n  t['Sacutedotaccent'] = 0x1E64;\n  t['Sampigreek'] = 0x03E0;\n  t['Scaron'] = 0x0160;\n  t['Scarondotaccent'] = 0x1E66;\n  t['Scaronsmall'] = 0xF6FD;\n  t['Scedilla'] = 0x015E;\n  t['Schwa'] = 0x018F;\n  t['Schwacyrillic'] = 0x04D8;\n  t['Schwadieresiscyrillic'] = 0x04DA;\n  t['Scircle'] = 0x24C8;\n  t['Scircumflex'] = 0x015C;\n  t['Scommaaccent'] = 0x0218;\n  t['Sdotaccent'] = 0x1E60;\n  t['Sdotbelow'] = 0x1E62;\n  t['Sdotbelowdotaccent'] = 0x1E68;\n  t['Seharmenian'] = 0x054D;\n  t['Sevenroman'] = 0x2166;\n  t['Shaarmenian'] = 0x0547;\n  t['Shacyrillic'] = 0x0428;\n  t['Shchacyrillic'] = 0x0429;\n  t['Sheicoptic'] = 0x03E2;\n  t['Shhacyrillic'] = 0x04BA;\n  t['Shimacoptic'] = 0x03EC;\n  t['Sigma'] = 0x03A3;\n  t['Sixroman'] = 0x2165;\n  t['Smonospace'] = 0xFF33;\n  t['Softsigncyrillic'] = 0x042C;\n  t['Ssmall'] = 0xF773;\n  t['Stigmagreek'] = 0x03DA;\n  t['T'] = 0x0054;\n  t['Tau'] = 0x03A4;\n  t['Tbar'] = 0x0166;\n  t['Tcaron'] = 0x0164;\n  t['Tcedilla'] = 0x0162;\n  t['Tcircle'] = 0x24C9;\n  t['Tcircumflexbelow'] = 0x1E70;\n  t['Tcommaaccent'] = 0x0162;\n  t['Tdotaccent'] = 0x1E6A;\n  t['Tdotbelow'] = 0x1E6C;\n  t['Tecyrillic'] = 0x0422;\n  t['Tedescendercyrillic'] = 0x04AC;\n  t['Tenroman'] = 0x2169;\n  t['Tetsecyrillic'] = 0x04B4;\n  t['Theta'] = 0x0398;\n  t['Thook'] = 0x01AC;\n  t['Thorn'] = 0x00DE;\n  t['Thornsmall'] = 0xF7FE;\n  t['Threeroman'] = 0x2162;\n  t['Tildesmall'] = 0xF6FE;\n  t['Tiwnarmenian'] = 0x054F;\n  t['Tlinebelow'] = 0x1E6E;\n  t['Tmonospace'] = 0xFF34;\n  t['Toarmenian'] = 0x0539;\n  t['Tonefive'] = 0x01BC;\n  t['Tonesix'] = 0x0184;\n  t['Tonetwo'] = 0x01A7;\n  t['Tretroflexhook'] = 0x01AE;\n  t['Tsecyrillic'] = 0x0426;\n  t['Tshecyrillic'] = 0x040B;\n  t['Tsmall'] = 0xF774;\n  t['Twelveroman'] = 0x216B;\n  t['Tworoman'] = 0x2161;\n  t['U'] = 0x0055;\n  t['Uacute'] = 0x00DA;\n  t['Uacutesmall'] = 0xF7FA;\n  t['Ubreve'] = 0x016C;\n  t['Ucaron'] = 0x01D3;\n  t['Ucircle'] = 0x24CA;\n  t['Ucircumflex'] = 0x00DB;\n  t['Ucircumflexbelow'] = 0x1E76;\n  t['Ucircumflexsmall'] = 0xF7FB;\n  t['Ucyrillic'] = 0x0423;\n  t['Udblacute'] = 0x0170;\n  t['Udblgrave'] = 0x0214;\n  t['Udieresis'] = 0x00DC;\n  t['Udieresisacute'] = 0x01D7;\n  t['Udieresisbelow'] = 0x1E72;\n  t['Udieresiscaron'] = 0x01D9;\n  t['Udieresiscyrillic'] = 0x04F0;\n  t['Udieresisgrave'] = 0x01DB;\n  t['Udieresismacron'] = 0x01D5;\n  t['Udieresissmall'] = 0xF7FC;\n  t['Udotbelow'] = 0x1EE4;\n  t['Ugrave'] = 0x00D9;\n  t['Ugravesmall'] = 0xF7F9;\n  t['Uhookabove'] = 0x1EE6;\n  t['Uhorn'] = 0x01AF;\n  t['Uhornacute'] = 0x1EE8;\n  t['Uhorndotbelow'] = 0x1EF0;\n  t['Uhorngrave'] = 0x1EEA;\n  t['Uhornhookabove'] = 0x1EEC;\n  t['Uhorntilde'] = 0x1EEE;\n  t['Uhungarumlaut'] = 0x0170;\n  t['Uhungarumlautcyrillic'] = 0x04F2;\n  t['Uinvertedbreve'] = 0x0216;\n  t['Ukcyrillic'] = 0x0478;\n  t['Umacron'] = 0x016A;\n  t['Umacroncyrillic'] = 0x04EE;\n  t['Umacrondieresis'] = 0x1E7A;\n  t['Umonospace'] = 0xFF35;\n  t['Uogonek'] = 0x0172;\n  t['Upsilon'] = 0x03A5;\n  t['Upsilon1'] = 0x03D2;\n  t['Upsilonacutehooksymbolgreek'] = 0x03D3;\n  t['Upsilonafrican'] = 0x01B1;\n  t['Upsilondieresis'] = 0x03AB;\n  t['Upsilondieresishooksymbolgreek'] = 0x03D4;\n  t['Upsilonhooksymbol'] = 0x03D2;\n  t['Upsilontonos'] = 0x038E;\n  t['Uring'] = 0x016E;\n  t['Ushortcyrillic'] = 0x040E;\n  t['Usmall'] = 0xF775;\n  t['Ustraightcyrillic'] = 0x04AE;\n  t['Ustraightstrokecyrillic'] = 0x04B0;\n  t['Utilde'] = 0x0168;\n  t['Utildeacute'] = 0x1E78;\n  t['Utildebelow'] = 0x1E74;\n  t['V'] = 0x0056;\n  t['Vcircle'] = 0x24CB;\n  t['Vdotbelow'] = 0x1E7E;\n  t['Vecyrillic'] = 0x0412;\n  t['Vewarmenian'] = 0x054E;\n  t['Vhook'] = 0x01B2;\n  t['Vmonospace'] = 0xFF36;\n  t['Voarmenian'] = 0x0548;\n  t['Vsmall'] = 0xF776;\n  t['Vtilde'] = 0x1E7C;\n  t['W'] = 0x0057;\n  t['Wacute'] = 0x1E82;\n  t['Wcircle'] = 0x24CC;\n  t['Wcircumflex'] = 0x0174;\n  t['Wdieresis'] = 0x1E84;\n  t['Wdotaccent'] = 0x1E86;\n  t['Wdotbelow'] = 0x1E88;\n  t['Wgrave'] = 0x1E80;\n  t['Wmonospace'] = 0xFF37;\n  t['Wsmall'] = 0xF777;\n  t['X'] = 0x0058;\n  t['Xcircle'] = 0x24CD;\n  t['Xdieresis'] = 0x1E8C;\n  t['Xdotaccent'] = 0x1E8A;\n  t['Xeharmenian'] = 0x053D;\n  t['Xi'] = 0x039E;\n  t['Xmonospace'] = 0xFF38;\n  t['Xsmall'] = 0xF778;\n  t['Y'] = 0x0059;\n  t['Yacute'] = 0x00DD;\n  t['Yacutesmall'] = 0xF7FD;\n  t['Yatcyrillic'] = 0x0462;\n  t['Ycircle'] = 0x24CE;\n  t['Ycircumflex'] = 0x0176;\n  t['Ydieresis'] = 0x0178;\n  t['Ydieresissmall'] = 0xF7FF;\n  t['Ydotaccent'] = 0x1E8E;\n  t['Ydotbelow'] = 0x1EF4;\n  t['Yericyrillic'] = 0x042B;\n  t['Yerudieresiscyrillic'] = 0x04F8;\n  t['Ygrave'] = 0x1EF2;\n  t['Yhook'] = 0x01B3;\n  t['Yhookabove'] = 0x1EF6;\n  t['Yiarmenian'] = 0x0545;\n  t['Yicyrillic'] = 0x0407;\n  t['Yiwnarmenian'] = 0x0552;\n  t['Ymonospace'] = 0xFF39;\n  t['Ysmall'] = 0xF779;\n  t['Ytilde'] = 0x1EF8;\n  t['Yusbigcyrillic'] = 0x046A;\n  t['Yusbigiotifiedcyrillic'] = 0x046C;\n  t['Yuslittlecyrillic'] = 0x0466;\n  t['Yuslittleiotifiedcyrillic'] = 0x0468;\n  t['Z'] = 0x005A;\n  t['Zaarmenian'] = 0x0536;\n  t['Zacute'] = 0x0179;\n  t['Zcaron'] = 0x017D;\n  t['Zcaronsmall'] = 0xF6FF;\n  t['Zcircle'] = 0x24CF;\n  t['Zcircumflex'] = 0x1E90;\n  t['Zdot'] = 0x017B;\n  t['Zdotaccent'] = 0x017B;\n  t['Zdotbelow'] = 0x1E92;\n  t['Zecyrillic'] = 0x0417;\n  t['Zedescendercyrillic'] = 0x0498;\n  t['Zedieresiscyrillic'] = 0x04DE;\n  t['Zeta'] = 0x0396;\n  t['Zhearmenian'] = 0x053A;\n  t['Zhebrevecyrillic'] = 0x04C1;\n  t['Zhecyrillic'] = 0x0416;\n  t['Zhedescendercyrillic'] = 0x0496;\n  t['Zhedieresiscyrillic'] = 0x04DC;\n  t['Zlinebelow'] = 0x1E94;\n  t['Zmonospace'] = 0xFF3A;\n  t['Zsmall'] = 0xF77A;\n  t['Zstroke'] = 0x01B5;\n  t['a'] = 0x0061;\n  t['aabengali'] = 0x0986;\n  t['aacute'] = 0x00E1;\n  t['aadeva'] = 0x0906;\n  t['aagujarati'] = 0x0A86;\n  t['aagurmukhi'] = 0x0A06;\n  t['aamatragurmukhi'] = 0x0A3E;\n  t['aarusquare'] = 0x3303;\n  t['aavowelsignbengali'] = 0x09BE;\n  t['aavowelsigndeva'] = 0x093E;\n  t['aavowelsigngujarati'] = 0x0ABE;\n  t['abbreviationmarkarmenian'] = 0x055F;\n  t['abbreviationsigndeva'] = 0x0970;\n  t['abengali'] = 0x0985;\n  t['abopomofo'] = 0x311A;\n  t['abreve'] = 0x0103;\n  t['abreveacute'] = 0x1EAF;\n  t['abrevecyrillic'] = 0x04D1;\n  t['abrevedotbelow'] = 0x1EB7;\n  t['abrevegrave'] = 0x1EB1;\n  t['abrevehookabove'] = 0x1EB3;\n  t['abrevetilde'] = 0x1EB5;\n  t['acaron'] = 0x01CE;\n  t['acircle'] = 0x24D0;\n  t['acircumflex'] = 0x00E2;\n  t['acircumflexacute'] = 0x1EA5;\n  t['acircumflexdotbelow'] = 0x1EAD;\n  t['acircumflexgrave'] = 0x1EA7;\n  t['acircumflexhookabove'] = 0x1EA9;\n  t['acircumflextilde'] = 0x1EAB;\n  t['acute'] = 0x00B4;\n  t['acutebelowcmb'] = 0x0317;\n  t['acutecmb'] = 0x0301;\n  t['acutecomb'] = 0x0301;\n  t['acutedeva'] = 0x0954;\n  t['acutelowmod'] = 0x02CF;\n  t['acutetonecmb'] = 0x0341;\n  t['acyrillic'] = 0x0430;\n  t['adblgrave'] = 0x0201;\n  t['addakgurmukhi'] = 0x0A71;\n  t['adeva'] = 0x0905;\n  t['adieresis'] = 0x00E4;\n  t['adieresiscyrillic'] = 0x04D3;\n  t['adieresismacron'] = 0x01DF;\n  t['adotbelow'] = 0x1EA1;\n  t['adotmacron'] = 0x01E1;\n  t['ae'] = 0x00E6;\n  t['aeacute'] = 0x01FD;\n  t['aekorean'] = 0x3150;\n  t['aemacron'] = 0x01E3;\n  t['afii00208'] = 0x2015;\n  t['afii08941'] = 0x20A4;\n  t['afii10017'] = 0x0410;\n  t['afii10018'] = 0x0411;\n  t['afii10019'] = 0x0412;\n  t['afii10020'] = 0x0413;\n  t['afii10021'] = 0x0414;\n  t['afii10022'] = 0x0415;\n  t['afii10023'] = 0x0401;\n  t['afii10024'] = 0x0416;\n  t['afii10025'] = 0x0417;\n  t['afii10026'] = 0x0418;\n  t['afii10027'] = 0x0419;\n  t['afii10028'] = 0x041A;\n  t['afii10029'] = 0x041B;\n  t['afii10030'] = 0x041C;\n  t['afii10031'] = 0x041D;\n  t['afii10032'] = 0x041E;\n  t['afii10033'] = 0x041F;\n  t['afii10034'] = 0x0420;\n  t['afii10035'] = 0x0421;\n  t['afii10036'] = 0x0422;\n  t['afii10037'] = 0x0423;\n  t['afii10038'] = 0x0424;\n  t['afii10039'] = 0x0425;\n  t['afii10040'] = 0x0426;\n  t['afii10041'] = 0x0427;\n  t['afii10042'] = 0x0428;\n  t['afii10043'] = 0x0429;\n  t['afii10044'] = 0x042A;\n  t['afii10045'] = 0x042B;\n  t['afii10046'] = 0x042C;\n  t['afii10047'] = 0x042D;\n  t['afii10048'] = 0x042E;\n  t['afii10049'] = 0x042F;\n  t['afii10050'] = 0x0490;\n  t['afii10051'] = 0x0402;\n  t['afii10052'] = 0x0403;\n  t['afii10053'] = 0x0404;\n  t['afii10054'] = 0x0405;\n  t['afii10055'] = 0x0406;\n  t['afii10056'] = 0x0407;\n  t['afii10057'] = 0x0408;\n  t['afii10058'] = 0x0409;\n  t['afii10059'] = 0x040A;\n  t['afii10060'] = 0x040B;\n  t['afii10061'] = 0x040C;\n  t['afii10062'] = 0x040E;\n  t['afii10063'] = 0xF6C4;\n  t['afii10064'] = 0xF6C5;\n  t['afii10065'] = 0x0430;\n  t['afii10066'] = 0x0431;\n  t['afii10067'] = 0x0432;\n  t['afii10068'] = 0x0433;\n  t['afii10069'] = 0x0434;\n  t['afii10070'] = 0x0435;\n  t['afii10071'] = 0x0451;\n  t['afii10072'] = 0x0436;\n  t['afii10073'] = 0x0437;\n  t['afii10074'] = 0x0438;\n  t['afii10075'] = 0x0439;\n  t['afii10076'] = 0x043A;\n  t['afii10077'] = 0x043B;\n  t['afii10078'] = 0x043C;\n  t['afii10079'] = 0x043D;\n  t['afii10080'] = 0x043E;\n  t['afii10081'] = 0x043F;\n  t['afii10082'] = 0x0440;\n  t['afii10083'] = 0x0441;\n  t['afii10084'] = 0x0442;\n  t['afii10085'] = 0x0443;\n  t['afii10086'] = 0x0444;\n  t['afii10087'] = 0x0445;\n  t['afii10088'] = 0x0446;\n  t['afii10089'] = 0x0447;\n  t['afii10090'] = 0x0448;\n  t['afii10091'] = 0x0449;\n  t['afii10092'] = 0x044A;\n  t['afii10093'] = 0x044B;\n  t['afii10094'] = 0x044C;\n  t['afii10095'] = 0x044D;\n  t['afii10096'] = 0x044E;\n  t['afii10097'] = 0x044F;\n  t['afii10098'] = 0x0491;\n  t['afii10099'] = 0x0452;\n  t['afii10100'] = 0x0453;\n  t['afii10101'] = 0x0454;\n  t['afii10102'] = 0x0455;\n  t['afii10103'] = 0x0456;\n  t['afii10104'] = 0x0457;\n  t['afii10105'] = 0x0458;\n  t['afii10106'] = 0x0459;\n  t['afii10107'] = 0x045A;\n  t['afii10108'] = 0x045B;\n  t['afii10109'] = 0x045C;\n  t['afii10110'] = 0x045E;\n  t['afii10145'] = 0x040F;\n  t['afii10146'] = 0x0462;\n  t['afii10147'] = 0x0472;\n  t['afii10148'] = 0x0474;\n  t['afii10192'] = 0xF6C6;\n  t['afii10193'] = 0x045F;\n  t['afii10194'] = 0x0463;\n  t['afii10195'] = 0x0473;\n  t['afii10196'] = 0x0475;\n  t['afii10831'] = 0xF6C7;\n  t['afii10832'] = 0xF6C8;\n  t['afii10846'] = 0x04D9;\n  t['afii299'] = 0x200E;\n  t['afii300'] = 0x200F;\n  t['afii301'] = 0x200D;\n  t['afii57381'] = 0x066A;\n  t['afii57388'] = 0x060C;\n  t['afii57392'] = 0x0660;\n  t['afii57393'] = 0x0661;\n  t['afii57394'] = 0x0662;\n  t['afii57395'] = 0x0663;\n  t['afii57396'] = 0x0664;\n  t['afii57397'] = 0x0665;\n  t['afii57398'] = 0x0666;\n  t['afii57399'] = 0x0667;\n  t['afii57400'] = 0x0668;\n  t['afii57401'] = 0x0669;\n  t['afii57403'] = 0x061B;\n  t['afii57407'] = 0x061F;\n  t['afii57409'] = 0x0621;\n  t['afii57410'] = 0x0622;\n  t['afii57411'] = 0x0623;\n  t['afii57412'] = 0x0624;\n  t['afii57413'] = 0x0625;\n  t['afii57414'] = 0x0626;\n  t['afii57415'] = 0x0627;\n  t['afii57416'] = 0x0628;\n  t['afii57417'] = 0x0629;\n  t['afii57418'] = 0x062A;\n  t['afii57419'] = 0x062B;\n  t['afii57420'] = 0x062C;\n  t['afii57421'] = 0x062D;\n  t['afii57422'] = 0x062E;\n  t['afii57423'] = 0x062F;\n  t['afii57424'] = 0x0630;\n  t['afii57425'] = 0x0631;\n  t['afii57426'] = 0x0632;\n  t['afii57427'] = 0x0633;\n  t['afii57428'] = 0x0634;\n  t['afii57429'] = 0x0635;\n  t['afii57430'] = 0x0636;\n  t['afii57431'] = 0x0637;\n  t['afii57432'] = 0x0638;\n  t['afii57433'] = 0x0639;\n  t['afii57434'] = 0x063A;\n  t['afii57440'] = 0x0640;\n  t['afii57441'] = 0x0641;\n  t['afii57442'] = 0x0642;\n  t['afii57443'] = 0x0643;\n  t['afii57444'] = 0x0644;\n  t['afii57445'] = 0x0645;\n  t['afii57446'] = 0x0646;\n  t['afii57448'] = 0x0648;\n  t['afii57449'] = 0x0649;\n  t['afii57450'] = 0x064A;\n  t['afii57451'] = 0x064B;\n  t['afii57452'] = 0x064C;\n  t['afii57453'] = 0x064D;\n  t['afii57454'] = 0x064E;\n  t['afii57455'] = 0x064F;\n  t['afii57456'] = 0x0650;\n  t['afii57457'] = 0x0651;\n  t['afii57458'] = 0x0652;\n  t['afii57470'] = 0x0647;\n  t['afii57505'] = 0x06A4;\n  t['afii57506'] = 0x067E;\n  t['afii57507'] = 0x0686;\n  t['afii57508'] = 0x0698;\n  t['afii57509'] = 0x06AF;\n  t['afii57511'] = 0x0679;\n  t['afii57512'] = 0x0688;\n  t['afii57513'] = 0x0691;\n  t['afii57514'] = 0x06BA;\n  t['afii57519'] = 0x06D2;\n  t['afii57534'] = 0x06D5;\n  t['afii57636'] = 0x20AA;\n  t['afii57645'] = 0x05BE;\n  t['afii57658'] = 0x05C3;\n  t['afii57664'] = 0x05D0;\n  t['afii57665'] = 0x05D1;\n  t['afii57666'] = 0x05D2;\n  t['afii57667'] = 0x05D3;\n  t['afii57668'] = 0x05D4;\n  t['afii57669'] = 0x05D5;\n  t['afii57670'] = 0x05D6;\n  t['afii57671'] = 0x05D7;\n  t['afii57672'] = 0x05D8;\n  t['afii57673'] = 0x05D9;\n  t['afii57674'] = 0x05DA;\n  t['afii57675'] = 0x05DB;\n  t['afii57676'] = 0x05DC;\n  t['afii57677'] = 0x05DD;\n  t['afii57678'] = 0x05DE;\n  t['afii57679'] = 0x05DF;\n  t['afii57680'] = 0x05E0;\n  t['afii57681'] = 0x05E1;\n  t['afii57682'] = 0x05E2;\n  t['afii57683'] = 0x05E3;\n  t['afii57684'] = 0x05E4;\n  t['afii57685'] = 0x05E5;\n  t['afii57686'] = 0x05E6;\n  t['afii57687'] = 0x05E7;\n  t['afii57688'] = 0x05E8;\n  t['afii57689'] = 0x05E9;\n  t['afii57690'] = 0x05EA;\n  t['afii57694'] = 0xFB2A;\n  t['afii57695'] = 0xFB2B;\n  t['afii57700'] = 0xFB4B;\n  t['afii57705'] = 0xFB1F;\n  t['afii57716'] = 0x05F0;\n  t['afii57717'] = 0x05F1;\n  t['afii57718'] = 0x05F2;\n  t['afii57723'] = 0xFB35;\n  t['afii57793'] = 0x05B4;\n  t['afii57794'] = 0x05B5;\n  t['afii57795'] = 0x05B6;\n  t['afii57796'] = 0x05BB;\n  t['afii57797'] = 0x05B8;\n  t['afii57798'] = 0x05B7;\n  t['afii57799'] = 0x05B0;\n  t['afii57800'] = 0x05B2;\n  t['afii57801'] = 0x05B1;\n  t['afii57802'] = 0x05B3;\n  t['afii57803'] = 0x05C2;\n  t['afii57804'] = 0x05C1;\n  t['afii57806'] = 0x05B9;\n  t['afii57807'] = 0x05BC;\n  t['afii57839'] = 0x05BD;\n  t['afii57841'] = 0x05BF;\n  t['afii57842'] = 0x05C0;\n  t['afii57929'] = 0x02BC;\n  t['afii61248'] = 0x2105;\n  t['afii61289'] = 0x2113;\n  t['afii61352'] = 0x2116;\n  t['afii61573'] = 0x202C;\n  t['afii61574'] = 0x202D;\n  t['afii61575'] = 0x202E;\n  t['afii61664'] = 0x200C;\n  t['afii63167'] = 0x066D;\n  t['afii64937'] = 0x02BD;\n  t['agrave'] = 0x00E0;\n  t['agujarati'] = 0x0A85;\n  t['agurmukhi'] = 0x0A05;\n  t['ahiragana'] = 0x3042;\n  t['ahookabove'] = 0x1EA3;\n  t['aibengali'] = 0x0990;\n  t['aibopomofo'] = 0x311E;\n  t['aideva'] = 0x0910;\n  t['aiecyrillic'] = 0x04D5;\n  t['aigujarati'] = 0x0A90;\n  t['aigurmukhi'] = 0x0A10;\n  t['aimatragurmukhi'] = 0x0A48;\n  t['ainarabic'] = 0x0639;\n  t['ainfinalarabic'] = 0xFECA;\n  t['aininitialarabic'] = 0xFECB;\n  t['ainmedialarabic'] = 0xFECC;\n  t['ainvertedbreve'] = 0x0203;\n  t['aivowelsignbengali'] = 0x09C8;\n  t['aivowelsigndeva'] = 0x0948;\n  t['aivowelsigngujarati'] = 0x0AC8;\n  t['akatakana'] = 0x30A2;\n  t['akatakanahalfwidth'] = 0xFF71;\n  t['akorean'] = 0x314F;\n  t['alef'] = 0x05D0;\n  t['alefarabic'] = 0x0627;\n  t['alefdageshhebrew'] = 0xFB30;\n  t['aleffinalarabic'] = 0xFE8E;\n  t['alefhamzaabovearabic'] = 0x0623;\n  t['alefhamzaabovefinalarabic'] = 0xFE84;\n  t['alefhamzabelowarabic'] = 0x0625;\n  t['alefhamzabelowfinalarabic'] = 0xFE88;\n  t['alefhebrew'] = 0x05D0;\n  t['aleflamedhebrew'] = 0xFB4F;\n  t['alefmaddaabovearabic'] = 0x0622;\n  t['alefmaddaabovefinalarabic'] = 0xFE82;\n  t['alefmaksuraarabic'] = 0x0649;\n  t['alefmaksurafinalarabic'] = 0xFEF0;\n  t['alefmaksurainitialarabic'] = 0xFEF3;\n  t['alefmaksuramedialarabic'] = 0xFEF4;\n  t['alefpatahhebrew'] = 0xFB2E;\n  t['alefqamatshebrew'] = 0xFB2F;\n  t['aleph'] = 0x2135;\n  t['allequal'] = 0x224C;\n  t['alpha'] = 0x03B1;\n  t['alphatonos'] = 0x03AC;\n  t['amacron'] = 0x0101;\n  t['amonospace'] = 0xFF41;\n  t['ampersand'] = 0x0026;\n  t['ampersandmonospace'] = 0xFF06;\n  t['ampersandsmall'] = 0xF726;\n  t['amsquare'] = 0x33C2;\n  t['anbopomofo'] = 0x3122;\n  t['angbopomofo'] = 0x3124;\n  t['angbracketleft'] = 0x3008;\n  t['angbracketright'] = 0x3009;\n  t['angkhankhuthai'] = 0x0E5A;\n  t['angle'] = 0x2220;\n  t['anglebracketleft'] = 0x3008;\n  t['anglebracketleftvertical'] = 0xFE3F;\n  t['anglebracketright'] = 0x3009;\n  t['anglebracketrightvertical'] = 0xFE40;\n  t['angleleft'] = 0x2329;\n  t['angleright'] = 0x232A;\n  t['angstrom'] = 0x212B;\n  t['anoteleia'] = 0x0387;\n  t['anudattadeva'] = 0x0952;\n  t['anusvarabengali'] = 0x0982;\n  t['anusvaradeva'] = 0x0902;\n  t['anusvaragujarati'] = 0x0A82;\n  t['aogonek'] = 0x0105;\n  t['apaatosquare'] = 0x3300;\n  t['aparen'] = 0x249C;\n  t['apostrophearmenian'] = 0x055A;\n  t['apostrophemod'] = 0x02BC;\n  t['apple'] = 0xF8FF;\n  t['approaches'] = 0x2250;\n  t['approxequal'] = 0x2248;\n  t['approxequalorimage'] = 0x2252;\n  t['approximatelyequal'] = 0x2245;\n  t['araeaekorean'] = 0x318E;\n  t['araeakorean'] = 0x318D;\n  t['arc'] = 0x2312;\n  t['arighthalfring'] = 0x1E9A;\n  t['aring'] = 0x00E5;\n  t['aringacute'] = 0x01FB;\n  t['aringbelow'] = 0x1E01;\n  t['arrowboth'] = 0x2194;\n  t['arrowdashdown'] = 0x21E3;\n  t['arrowdashleft'] = 0x21E0;\n  t['arrowdashright'] = 0x21E2;\n  t['arrowdashup'] = 0x21E1;\n  t['arrowdblboth'] = 0x21D4;\n  t['arrowdbldown'] = 0x21D3;\n  t['arrowdblleft'] = 0x21D0;\n  t['arrowdblright'] = 0x21D2;\n  t['arrowdblup'] = 0x21D1;\n  t['arrowdown'] = 0x2193;\n  t['arrowdownleft'] = 0x2199;\n  t['arrowdownright'] = 0x2198;\n  t['arrowdownwhite'] = 0x21E9;\n  t['arrowheaddownmod'] = 0x02C5;\n  t['arrowheadleftmod'] = 0x02C2;\n  t['arrowheadrightmod'] = 0x02C3;\n  t['arrowheadupmod'] = 0x02C4;\n  t['arrowhorizex'] = 0xF8E7;\n  t['arrowleft'] = 0x2190;\n  t['arrowleftdbl'] = 0x21D0;\n  t['arrowleftdblstroke'] = 0x21CD;\n  t['arrowleftoverright'] = 0x21C6;\n  t['arrowleftwhite'] = 0x21E6;\n  t['arrowright'] = 0x2192;\n  t['arrowrightdblstroke'] = 0x21CF;\n  t['arrowrightheavy'] = 0x279E;\n  t['arrowrightoverleft'] = 0x21C4;\n  t['arrowrightwhite'] = 0x21E8;\n  t['arrowtableft'] = 0x21E4;\n  t['arrowtabright'] = 0x21E5;\n  t['arrowup'] = 0x2191;\n  t['arrowupdn'] = 0x2195;\n  t['arrowupdnbse'] = 0x21A8;\n  t['arrowupdownbase'] = 0x21A8;\n  t['arrowupleft'] = 0x2196;\n  t['arrowupleftofdown'] = 0x21C5;\n  t['arrowupright'] = 0x2197;\n  t['arrowupwhite'] = 0x21E7;\n  t['arrowvertex'] = 0xF8E6;\n  t['asciicircum'] = 0x005E;\n  t['asciicircummonospace'] = 0xFF3E;\n  t['asciitilde'] = 0x007E;\n  t['asciitildemonospace'] = 0xFF5E;\n  t['ascript'] = 0x0251;\n  t['ascriptturned'] = 0x0252;\n  t['asmallhiragana'] = 0x3041;\n  t['asmallkatakana'] = 0x30A1;\n  t['asmallkatakanahalfwidth'] = 0xFF67;\n  t['asterisk'] = 0x002A;\n  t['asteriskaltonearabic'] = 0x066D;\n  t['asteriskarabic'] = 0x066D;\n  t['asteriskmath'] = 0x2217;\n  t['asteriskmonospace'] = 0xFF0A;\n  t['asterisksmall'] = 0xFE61;\n  t['asterism'] = 0x2042;\n  t['asuperior'] = 0xF6E9;\n  t['asymptoticallyequal'] = 0x2243;\n  t['at'] = 0x0040;\n  t['atilde'] = 0x00E3;\n  t['atmonospace'] = 0xFF20;\n  t['atsmall'] = 0xFE6B;\n  t['aturned'] = 0x0250;\n  t['aubengali'] = 0x0994;\n  t['aubopomofo'] = 0x3120;\n  t['audeva'] = 0x0914;\n  t['augujarati'] = 0x0A94;\n  t['augurmukhi'] = 0x0A14;\n  t['aulengthmarkbengali'] = 0x09D7;\n  t['aumatragurmukhi'] = 0x0A4C;\n  t['auvowelsignbengali'] = 0x09CC;\n  t['auvowelsigndeva'] = 0x094C;\n  t['auvowelsigngujarati'] = 0x0ACC;\n  t['avagrahadeva'] = 0x093D;\n  t['aybarmenian'] = 0x0561;\n  t['ayin'] = 0x05E2;\n  t['ayinaltonehebrew'] = 0xFB20;\n  t['ayinhebrew'] = 0x05E2;\n  t['b'] = 0x0062;\n  t['babengali'] = 0x09AC;\n  t['backslash'] = 0x005C;\n  t['backslashmonospace'] = 0xFF3C;\n  t['badeva'] = 0x092C;\n  t['bagujarati'] = 0x0AAC;\n  t['bagurmukhi'] = 0x0A2C;\n  t['bahiragana'] = 0x3070;\n  t['bahtthai'] = 0x0E3F;\n  t['bakatakana'] = 0x30D0;\n  t['bar'] = 0x007C;\n  t['barmonospace'] = 0xFF5C;\n  t['bbopomofo'] = 0x3105;\n  t['bcircle'] = 0x24D1;\n  t['bdotaccent'] = 0x1E03;\n  t['bdotbelow'] = 0x1E05;\n  t['beamedsixteenthnotes'] = 0x266C;\n  t['because'] = 0x2235;\n  t['becyrillic'] = 0x0431;\n  t['beharabic'] = 0x0628;\n  t['behfinalarabic'] = 0xFE90;\n  t['behinitialarabic'] = 0xFE91;\n  t['behiragana'] = 0x3079;\n  t['behmedialarabic'] = 0xFE92;\n  t['behmeeminitialarabic'] = 0xFC9F;\n  t['behmeemisolatedarabic'] = 0xFC08;\n  t['behnoonfinalarabic'] = 0xFC6D;\n  t['bekatakana'] = 0x30D9;\n  t['benarmenian'] = 0x0562;\n  t['bet'] = 0x05D1;\n  t['beta'] = 0x03B2;\n  t['betasymbolgreek'] = 0x03D0;\n  t['betdagesh'] = 0xFB31;\n  t['betdageshhebrew'] = 0xFB31;\n  t['bethebrew'] = 0x05D1;\n  t['betrafehebrew'] = 0xFB4C;\n  t['bhabengali'] = 0x09AD;\n  t['bhadeva'] = 0x092D;\n  t['bhagujarati'] = 0x0AAD;\n  t['bhagurmukhi'] = 0x0A2D;\n  t['bhook'] = 0x0253;\n  t['bihiragana'] = 0x3073;\n  t['bikatakana'] = 0x30D3;\n  t['bilabialclick'] = 0x0298;\n  t['bindigurmukhi'] = 0x0A02;\n  t['birusquare'] = 0x3331;\n  t['blackcircle'] = 0x25CF;\n  t['blackdiamond'] = 0x25C6;\n  t['blackdownpointingtriangle'] = 0x25BC;\n  t['blackleftpointingpointer'] = 0x25C4;\n  t['blackleftpointingtriangle'] = 0x25C0;\n  t['blacklenticularbracketleft'] = 0x3010;\n  t['blacklenticularbracketleftvertical'] = 0xFE3B;\n  t['blacklenticularbracketright'] = 0x3011;\n  t['blacklenticularbracketrightvertical'] = 0xFE3C;\n  t['blacklowerlefttriangle'] = 0x25E3;\n  t['blacklowerrighttriangle'] = 0x25E2;\n  t['blackrectangle'] = 0x25AC;\n  t['blackrightpointingpointer'] = 0x25BA;\n  t['blackrightpointingtriangle'] = 0x25B6;\n  t['blacksmallsquare'] = 0x25AA;\n  t['blacksmilingface'] = 0x263B;\n  t['blacksquare'] = 0x25A0;\n  t['blackstar'] = 0x2605;\n  t['blackupperlefttriangle'] = 0x25E4;\n  t['blackupperrighttriangle'] = 0x25E5;\n  t['blackuppointingsmalltriangle'] = 0x25B4;\n  t['blackuppointingtriangle'] = 0x25B2;\n  t['blank'] = 0x2423;\n  t['blinebelow'] = 0x1E07;\n  t['block'] = 0x2588;\n  t['bmonospace'] = 0xFF42;\n  t['bobaimaithai'] = 0x0E1A;\n  t['bohiragana'] = 0x307C;\n  t['bokatakana'] = 0x30DC;\n  t['bparen'] = 0x249D;\n  t['bqsquare'] = 0x33C3;\n  t['braceex'] = 0xF8F4;\n  t['braceleft'] = 0x007B;\n  t['braceleftbt'] = 0xF8F3;\n  t['braceleftmid'] = 0xF8F2;\n  t['braceleftmonospace'] = 0xFF5B;\n  t['braceleftsmall'] = 0xFE5B;\n  t['bracelefttp'] = 0xF8F1;\n  t['braceleftvertical'] = 0xFE37;\n  t['braceright'] = 0x007D;\n  t['bracerightbt'] = 0xF8FE;\n  t['bracerightmid'] = 0xF8FD;\n  t['bracerightmonospace'] = 0xFF5D;\n  t['bracerightsmall'] = 0xFE5C;\n  t['bracerighttp'] = 0xF8FC;\n  t['bracerightvertical'] = 0xFE38;\n  t['bracketleft'] = 0x005B;\n  t['bracketleftbt'] = 0xF8F0;\n  t['bracketleftex'] = 0xF8EF;\n  t['bracketleftmonospace'] = 0xFF3B;\n  t['bracketlefttp'] = 0xF8EE;\n  t['bracketright'] = 0x005D;\n  t['bracketrightbt'] = 0xF8FB;\n  t['bracketrightex'] = 0xF8FA;\n  t['bracketrightmonospace'] = 0xFF3D;\n  t['bracketrighttp'] = 0xF8F9;\n  t['breve'] = 0x02D8;\n  t['brevebelowcmb'] = 0x032E;\n  t['brevecmb'] = 0x0306;\n  t['breveinvertedbelowcmb'] = 0x032F;\n  t['breveinvertedcmb'] = 0x0311;\n  t['breveinverteddoublecmb'] = 0x0361;\n  t['bridgebelowcmb'] = 0x032A;\n  t['bridgeinvertedbelowcmb'] = 0x033A;\n  t['brokenbar'] = 0x00A6;\n  t['bstroke'] = 0x0180;\n  t['bsuperior'] = 0xF6EA;\n  t['btopbar'] = 0x0183;\n  t['buhiragana'] = 0x3076;\n  t['bukatakana'] = 0x30D6;\n  t['bullet'] = 0x2022;\n  t['bulletinverse'] = 0x25D8;\n  t['bulletoperator'] = 0x2219;\n  t['bullseye'] = 0x25CE;\n  t['c'] = 0x0063;\n  t['caarmenian'] = 0x056E;\n  t['cabengali'] = 0x099A;\n  t['cacute'] = 0x0107;\n  t['cadeva'] = 0x091A;\n  t['cagujarati'] = 0x0A9A;\n  t['cagurmukhi'] = 0x0A1A;\n  t['calsquare'] = 0x3388;\n  t['candrabindubengali'] = 0x0981;\n  t['candrabinducmb'] = 0x0310;\n  t['candrabindudeva'] = 0x0901;\n  t['candrabindugujarati'] = 0x0A81;\n  t['capslock'] = 0x21EA;\n  t['careof'] = 0x2105;\n  t['caron'] = 0x02C7;\n  t['caronbelowcmb'] = 0x032C;\n  t['caroncmb'] = 0x030C;\n  t['carriagereturn'] = 0x21B5;\n  t['cbopomofo'] = 0x3118;\n  t['ccaron'] = 0x010D;\n  t['ccedilla'] = 0x00E7;\n  t['ccedillaacute'] = 0x1E09;\n  t['ccircle'] = 0x24D2;\n  t['ccircumflex'] = 0x0109;\n  t['ccurl'] = 0x0255;\n  t['cdot'] = 0x010B;\n  t['cdotaccent'] = 0x010B;\n  t['cdsquare'] = 0x33C5;\n  t['cedilla'] = 0x00B8;\n  t['cedillacmb'] = 0x0327;\n  t['cent'] = 0x00A2;\n  t['centigrade'] = 0x2103;\n  t['centinferior'] = 0xF6DF;\n  t['centmonospace'] = 0xFFE0;\n  t['centoldstyle'] = 0xF7A2;\n  t['centsuperior'] = 0xF6E0;\n  t['chaarmenian'] = 0x0579;\n  t['chabengali'] = 0x099B;\n  t['chadeva'] = 0x091B;\n  t['chagujarati'] = 0x0A9B;\n  t['chagurmukhi'] = 0x0A1B;\n  t['chbopomofo'] = 0x3114;\n  t['cheabkhasiancyrillic'] = 0x04BD;\n  t['checkmark'] = 0x2713;\n  t['checyrillic'] = 0x0447;\n  t['chedescenderabkhasiancyrillic'] = 0x04BF;\n  t['chedescendercyrillic'] = 0x04B7;\n  t['chedieresiscyrillic'] = 0x04F5;\n  t['cheharmenian'] = 0x0573;\n  t['chekhakassiancyrillic'] = 0x04CC;\n  t['cheverticalstrokecyrillic'] = 0x04B9;\n  t['chi'] = 0x03C7;\n  t['chieuchacirclekorean'] = 0x3277;\n  t['chieuchaparenkorean'] = 0x3217;\n  t['chieuchcirclekorean'] = 0x3269;\n  t['chieuchkorean'] = 0x314A;\n  t['chieuchparenkorean'] = 0x3209;\n  t['chochangthai'] = 0x0E0A;\n  t['chochanthai'] = 0x0E08;\n  t['chochingthai'] = 0x0E09;\n  t['chochoethai'] = 0x0E0C;\n  t['chook'] = 0x0188;\n  t['cieucacirclekorean'] = 0x3276;\n  t['cieucaparenkorean'] = 0x3216;\n  t['cieuccirclekorean'] = 0x3268;\n  t['cieuckorean'] = 0x3148;\n  t['cieucparenkorean'] = 0x3208;\n  t['cieucuparenkorean'] = 0x321C;\n  t['circle'] = 0x25CB;\n  t['circlecopyrt'] = 0x00A9;\n  t['circlemultiply'] = 0x2297;\n  t['circleot'] = 0x2299;\n  t['circleplus'] = 0x2295;\n  t['circlepostalmark'] = 0x3036;\n  t['circlewithlefthalfblack'] = 0x25D0;\n  t['circlewithrighthalfblack'] = 0x25D1;\n  t['circumflex'] = 0x02C6;\n  t['circumflexbelowcmb'] = 0x032D;\n  t['circumflexcmb'] = 0x0302;\n  t['clear'] = 0x2327;\n  t['clickalveolar'] = 0x01C2;\n  t['clickdental'] = 0x01C0;\n  t['clicklateral'] = 0x01C1;\n  t['clickretroflex'] = 0x01C3;\n  t['club'] = 0x2663;\n  t['clubsuitblack'] = 0x2663;\n  t['clubsuitwhite'] = 0x2667;\n  t['cmcubedsquare'] = 0x33A4;\n  t['cmonospace'] = 0xFF43;\n  t['cmsquaredsquare'] = 0x33A0;\n  t['coarmenian'] = 0x0581;\n  t['colon'] = 0x003A;\n  t['colonmonetary'] = 0x20A1;\n  t['colonmonospace'] = 0xFF1A;\n  t['colonsign'] = 0x20A1;\n  t['colonsmall'] = 0xFE55;\n  t['colontriangularhalfmod'] = 0x02D1;\n  t['colontriangularmod'] = 0x02D0;\n  t['comma'] = 0x002C;\n  t['commaabovecmb'] = 0x0313;\n  t['commaaboverightcmb'] = 0x0315;\n  t['commaaccent'] = 0xF6C3;\n  t['commaarabic'] = 0x060C;\n  t['commaarmenian'] = 0x055D;\n  t['commainferior'] = 0xF6E1;\n  t['commamonospace'] = 0xFF0C;\n  t['commareversedabovecmb'] = 0x0314;\n  t['commareversedmod'] = 0x02BD;\n  t['commasmall'] = 0xFE50;\n  t['commasuperior'] = 0xF6E2;\n  t['commaturnedabovecmb'] = 0x0312;\n  t['commaturnedmod'] = 0x02BB;\n  t['compass'] = 0x263C;\n  t['congruent'] = 0x2245;\n  t['contourintegral'] = 0x222E;\n  t['control'] = 0x2303;\n  t['controlACK'] = 0x0006;\n  t['controlBEL'] = 0x0007;\n  t['controlBS'] = 0x0008;\n  t['controlCAN'] = 0x0018;\n  t['controlCR'] = 0x000D;\n  t['controlDC1'] = 0x0011;\n  t['controlDC2'] = 0x0012;\n  t['controlDC3'] = 0x0013;\n  t['controlDC4'] = 0x0014;\n  t['controlDEL'] = 0x007F;\n  t['controlDLE'] = 0x0010;\n  t['controlEM'] = 0x0019;\n  t['controlENQ'] = 0x0005;\n  t['controlEOT'] = 0x0004;\n  t['controlESC'] = 0x001B;\n  t['controlETB'] = 0x0017;\n  t['controlETX'] = 0x0003;\n  t['controlFF'] = 0x000C;\n  t['controlFS'] = 0x001C;\n  t['controlGS'] = 0x001D;\n  t['controlHT'] = 0x0009;\n  t['controlLF'] = 0x000A;\n  t['controlNAK'] = 0x0015;\n  t['controlNULL'] = 0x0000;\n  t['controlRS'] = 0x001E;\n  t['controlSI'] = 0x000F;\n  t['controlSO'] = 0x000E;\n  t['controlSOT'] = 0x0002;\n  t['controlSTX'] = 0x0001;\n  t['controlSUB'] = 0x001A;\n  t['controlSYN'] = 0x0016;\n  t['controlUS'] = 0x001F;\n  t['controlVT'] = 0x000B;\n  t['copyright'] = 0x00A9;\n  t['copyrightsans'] = 0xF8E9;\n  t['copyrightserif'] = 0xF6D9;\n  t['cornerbracketleft'] = 0x300C;\n  t['cornerbracketlefthalfwidth'] = 0xFF62;\n  t['cornerbracketleftvertical'] = 0xFE41;\n  t['cornerbracketright'] = 0x300D;\n  t['cornerbracketrighthalfwidth'] = 0xFF63;\n  t['cornerbracketrightvertical'] = 0xFE42;\n  t['corporationsquare'] = 0x337F;\n  t['cosquare'] = 0x33C7;\n  t['coverkgsquare'] = 0x33C6;\n  t['cparen'] = 0x249E;\n  t['cruzeiro'] = 0x20A2;\n  t['cstretched'] = 0x0297;\n  t['curlyand'] = 0x22CF;\n  t['curlyor'] = 0x22CE;\n  t['currency'] = 0x00A4;\n  t['cyrBreve'] = 0xF6D1;\n  t['cyrFlex'] = 0xF6D2;\n  t['cyrbreve'] = 0xF6D4;\n  t['cyrflex'] = 0xF6D5;\n  t['d'] = 0x0064;\n  t['daarmenian'] = 0x0564;\n  t['dabengali'] = 0x09A6;\n  t['dadarabic'] = 0x0636;\n  t['dadeva'] = 0x0926;\n  t['dadfinalarabic'] = 0xFEBE;\n  t['dadinitialarabic'] = 0xFEBF;\n  t['dadmedialarabic'] = 0xFEC0;\n  t['dagesh'] = 0x05BC;\n  t['dageshhebrew'] = 0x05BC;\n  t['dagger'] = 0x2020;\n  t['daggerdbl'] = 0x2021;\n  t['dagujarati'] = 0x0AA6;\n  t['dagurmukhi'] = 0x0A26;\n  t['dahiragana'] = 0x3060;\n  t['dakatakana'] = 0x30C0;\n  t['dalarabic'] = 0x062F;\n  t['dalet'] = 0x05D3;\n  t['daletdagesh'] = 0xFB33;\n  t['daletdageshhebrew'] = 0xFB33;\n  t['dalethebrew'] = 0x05D3;\n  t['dalfinalarabic'] = 0xFEAA;\n  t['dammaarabic'] = 0x064F;\n  t['dammalowarabic'] = 0x064F;\n  t['dammatanaltonearabic'] = 0x064C;\n  t['dammatanarabic'] = 0x064C;\n  t['danda'] = 0x0964;\n  t['dargahebrew'] = 0x05A7;\n  t['dargalefthebrew'] = 0x05A7;\n  t['dasiapneumatacyrilliccmb'] = 0x0485;\n  t['dblGrave'] = 0xF6D3;\n  t['dblanglebracketleft'] = 0x300A;\n  t['dblanglebracketleftvertical'] = 0xFE3D;\n  t['dblanglebracketright'] = 0x300B;\n  t['dblanglebracketrightvertical'] = 0xFE3E;\n  t['dblarchinvertedbelowcmb'] = 0x032B;\n  t['dblarrowleft'] = 0x21D4;\n  t['dblarrowright'] = 0x21D2;\n  t['dbldanda'] = 0x0965;\n  t['dblgrave'] = 0xF6D6;\n  t['dblgravecmb'] = 0x030F;\n  t['dblintegral'] = 0x222C;\n  t['dbllowline'] = 0x2017;\n  t['dbllowlinecmb'] = 0x0333;\n  t['dbloverlinecmb'] = 0x033F;\n  t['dblprimemod'] = 0x02BA;\n  t['dblverticalbar'] = 0x2016;\n  t['dblverticallineabovecmb'] = 0x030E;\n  t['dbopomofo'] = 0x3109;\n  t['dbsquare'] = 0x33C8;\n  t['dcaron'] = 0x010F;\n  t['dcedilla'] = 0x1E11;\n  t['dcircle'] = 0x24D3;\n  t['dcircumflexbelow'] = 0x1E13;\n  t['dcroat'] = 0x0111;\n  t['ddabengali'] = 0x09A1;\n  t['ddadeva'] = 0x0921;\n  t['ddagujarati'] = 0x0AA1;\n  t['ddagurmukhi'] = 0x0A21;\n  t['ddalarabic'] = 0x0688;\n  t['ddalfinalarabic'] = 0xFB89;\n  t['dddhadeva'] = 0x095C;\n  t['ddhabengali'] = 0x09A2;\n  t['ddhadeva'] = 0x0922;\n  t['ddhagujarati'] = 0x0AA2;\n  t['ddhagurmukhi'] = 0x0A22;\n  t['ddotaccent'] = 0x1E0B;\n  t['ddotbelow'] = 0x1E0D;\n  t['decimalseparatorarabic'] = 0x066B;\n  t['decimalseparatorpersian'] = 0x066B;\n  t['decyrillic'] = 0x0434;\n  t['degree'] = 0x00B0;\n  t['dehihebrew'] = 0x05AD;\n  t['dehiragana'] = 0x3067;\n  t['deicoptic'] = 0x03EF;\n  t['dekatakana'] = 0x30C7;\n  t['deleteleft'] = 0x232B;\n  t['deleteright'] = 0x2326;\n  t['delta'] = 0x03B4;\n  t['deltaturned'] = 0x018D;\n  t['denominatorminusonenumeratorbengali'] = 0x09F8;\n  t['dezh'] = 0x02A4;\n  t['dhabengali'] = 0x09A7;\n  t['dhadeva'] = 0x0927;\n  t['dhagujarati'] = 0x0AA7;\n  t['dhagurmukhi'] = 0x0A27;\n  t['dhook'] = 0x0257;\n  t['dialytikatonos'] = 0x0385;\n  t['dialytikatonoscmb'] = 0x0344;\n  t['diamond'] = 0x2666;\n  t['diamondsuitwhite'] = 0x2662;\n  t['dieresis'] = 0x00A8;\n  t['dieresisacute'] = 0xF6D7;\n  t['dieresisbelowcmb'] = 0x0324;\n  t['dieresiscmb'] = 0x0308;\n  t['dieresisgrave'] = 0xF6D8;\n  t['dieresistonos'] = 0x0385;\n  t['dihiragana'] = 0x3062;\n  t['dikatakana'] = 0x30C2;\n  t['dittomark'] = 0x3003;\n  t['divide'] = 0x00F7;\n  t['divides'] = 0x2223;\n  t['divisionslash'] = 0x2215;\n  t['djecyrillic'] = 0x0452;\n  t['dkshade'] = 0x2593;\n  t['dlinebelow'] = 0x1E0F;\n  t['dlsquare'] = 0x3397;\n  t['dmacron'] = 0x0111;\n  t['dmonospace'] = 0xFF44;\n  t['dnblock'] = 0x2584;\n  t['dochadathai'] = 0x0E0E;\n  t['dodekthai'] = 0x0E14;\n  t['dohiragana'] = 0x3069;\n  t['dokatakana'] = 0x30C9;\n  t['dollar'] = 0x0024;\n  t['dollarinferior'] = 0xF6E3;\n  t['dollarmonospace'] = 0xFF04;\n  t['dollaroldstyle'] = 0xF724;\n  t['dollarsmall'] = 0xFE69;\n  t['dollarsuperior'] = 0xF6E4;\n  t['dong'] = 0x20AB;\n  t['dorusquare'] = 0x3326;\n  t['dotaccent'] = 0x02D9;\n  t['dotaccentcmb'] = 0x0307;\n  t['dotbelowcmb'] = 0x0323;\n  t['dotbelowcomb'] = 0x0323;\n  t['dotkatakana'] = 0x30FB;\n  t['dotlessi'] = 0x0131;\n  t['dotlessj'] = 0xF6BE;\n  t['dotlessjstrokehook'] = 0x0284;\n  t['dotmath'] = 0x22C5;\n  t['dottedcircle'] = 0x25CC;\n  t['doubleyodpatah'] = 0xFB1F;\n  t['doubleyodpatahhebrew'] = 0xFB1F;\n  t['downtackbelowcmb'] = 0x031E;\n  t['downtackmod'] = 0x02D5;\n  t['dparen'] = 0x249F;\n  t['dsuperior'] = 0xF6EB;\n  t['dtail'] = 0x0256;\n  t['dtopbar'] = 0x018C;\n  t['duhiragana'] = 0x3065;\n  t['dukatakana'] = 0x30C5;\n  t['dz'] = 0x01F3;\n  t['dzaltone'] = 0x02A3;\n  t['dzcaron'] = 0x01C6;\n  t['dzcurl'] = 0x02A5;\n  t['dzeabkhasiancyrillic'] = 0x04E1;\n  t['dzecyrillic'] = 0x0455;\n  t['dzhecyrillic'] = 0x045F;\n  t['e'] = 0x0065;\n  t['eacute'] = 0x00E9;\n  t['earth'] = 0x2641;\n  t['ebengali'] = 0x098F;\n  t['ebopomofo'] = 0x311C;\n  t['ebreve'] = 0x0115;\n  t['ecandradeva'] = 0x090D;\n  t['ecandragujarati'] = 0x0A8D;\n  t['ecandravowelsigndeva'] = 0x0945;\n  t['ecandravowelsigngujarati'] = 0x0AC5;\n  t['ecaron'] = 0x011B;\n  t['ecedillabreve'] = 0x1E1D;\n  t['echarmenian'] = 0x0565;\n  t['echyiwnarmenian'] = 0x0587;\n  t['ecircle'] = 0x24D4;\n  t['ecircumflex'] = 0x00EA;\n  t['ecircumflexacute'] = 0x1EBF;\n  t['ecircumflexbelow'] = 0x1E19;\n  t['ecircumflexdotbelow'] = 0x1EC7;\n  t['ecircumflexgrave'] = 0x1EC1;\n  t['ecircumflexhookabove'] = 0x1EC3;\n  t['ecircumflextilde'] = 0x1EC5;\n  t['ecyrillic'] = 0x0454;\n  t['edblgrave'] = 0x0205;\n  t['edeva'] = 0x090F;\n  t['edieresis'] = 0x00EB;\n  t['edot'] = 0x0117;\n  t['edotaccent'] = 0x0117;\n  t['edotbelow'] = 0x1EB9;\n  t['eegurmukhi'] = 0x0A0F;\n  t['eematragurmukhi'] = 0x0A47;\n  t['efcyrillic'] = 0x0444;\n  t['egrave'] = 0x00E8;\n  t['egujarati'] = 0x0A8F;\n  t['eharmenian'] = 0x0567;\n  t['ehbopomofo'] = 0x311D;\n  t['ehiragana'] = 0x3048;\n  t['ehookabove'] = 0x1EBB;\n  t['eibopomofo'] = 0x311F;\n  t['eight'] = 0x0038;\n  t['eightarabic'] = 0x0668;\n  t['eightbengali'] = 0x09EE;\n  t['eightcircle'] = 0x2467;\n  t['eightcircleinversesansserif'] = 0x2791;\n  t['eightdeva'] = 0x096E;\n  t['eighteencircle'] = 0x2471;\n  t['eighteenparen'] = 0x2485;\n  t['eighteenperiod'] = 0x2499;\n  t['eightgujarati'] = 0x0AEE;\n  t['eightgurmukhi'] = 0x0A6E;\n  t['eighthackarabic'] = 0x0668;\n  t['eighthangzhou'] = 0x3028;\n  t['eighthnotebeamed'] = 0x266B;\n  t['eightideographicparen'] = 0x3227;\n  t['eightinferior'] = 0x2088;\n  t['eightmonospace'] = 0xFF18;\n  t['eightoldstyle'] = 0xF738;\n  t['eightparen'] = 0x247B;\n  t['eightperiod'] = 0x248F;\n  t['eightpersian'] = 0x06F8;\n  t['eightroman'] = 0x2177;\n  t['eightsuperior'] = 0x2078;\n  t['eightthai'] = 0x0E58;\n  t['einvertedbreve'] = 0x0207;\n  t['eiotifiedcyrillic'] = 0x0465;\n  t['ekatakana'] = 0x30A8;\n  t['ekatakanahalfwidth'] = 0xFF74;\n  t['ekonkargurmukhi'] = 0x0A74;\n  t['ekorean'] = 0x3154;\n  t['elcyrillic'] = 0x043B;\n  t['element'] = 0x2208;\n  t['elevencircle'] = 0x246A;\n  t['elevenparen'] = 0x247E;\n  t['elevenperiod'] = 0x2492;\n  t['elevenroman'] = 0x217A;\n  t['ellipsis'] = 0x2026;\n  t['ellipsisvertical'] = 0x22EE;\n  t['emacron'] = 0x0113;\n  t['emacronacute'] = 0x1E17;\n  t['emacrongrave'] = 0x1E15;\n  t['emcyrillic'] = 0x043C;\n  t['emdash'] = 0x2014;\n  t['emdashvertical'] = 0xFE31;\n  t['emonospace'] = 0xFF45;\n  t['emphasismarkarmenian'] = 0x055B;\n  t['emptyset'] = 0x2205;\n  t['enbopomofo'] = 0x3123;\n  t['encyrillic'] = 0x043D;\n  t['endash'] = 0x2013;\n  t['endashvertical'] = 0xFE32;\n  t['endescendercyrillic'] = 0x04A3;\n  t['eng'] = 0x014B;\n  t['engbopomofo'] = 0x3125;\n  t['enghecyrillic'] = 0x04A5;\n  t['enhookcyrillic'] = 0x04C8;\n  t['enspace'] = 0x2002;\n  t['eogonek'] = 0x0119;\n  t['eokorean'] = 0x3153;\n  t['eopen'] = 0x025B;\n  t['eopenclosed'] = 0x029A;\n  t['eopenreversed'] = 0x025C;\n  t['eopenreversedclosed'] = 0x025E;\n  t['eopenreversedhook'] = 0x025D;\n  t['eparen'] = 0x24A0;\n  t['epsilon'] = 0x03B5;\n  t['epsilontonos'] = 0x03AD;\n  t['equal'] = 0x003D;\n  t['equalmonospace'] = 0xFF1D;\n  t['equalsmall'] = 0xFE66;\n  t['equalsuperior'] = 0x207C;\n  t['equivalence'] = 0x2261;\n  t['erbopomofo'] = 0x3126;\n  t['ercyrillic'] = 0x0440;\n  t['ereversed'] = 0x0258;\n  t['ereversedcyrillic'] = 0x044D;\n  t['escyrillic'] = 0x0441;\n  t['esdescendercyrillic'] = 0x04AB;\n  t['esh'] = 0x0283;\n  t['eshcurl'] = 0x0286;\n  t['eshortdeva'] = 0x090E;\n  t['eshortvowelsigndeva'] = 0x0946;\n  t['eshreversedloop'] = 0x01AA;\n  t['eshsquatreversed'] = 0x0285;\n  t['esmallhiragana'] = 0x3047;\n  t['esmallkatakana'] = 0x30A7;\n  t['esmallkatakanahalfwidth'] = 0xFF6A;\n  t['estimated'] = 0x212E;\n  t['esuperior'] = 0xF6EC;\n  t['eta'] = 0x03B7;\n  t['etarmenian'] = 0x0568;\n  t['etatonos'] = 0x03AE;\n  t['eth'] = 0x00F0;\n  t['etilde'] = 0x1EBD;\n  t['etildebelow'] = 0x1E1B;\n  t['etnahtafoukhhebrew'] = 0x0591;\n  t['etnahtafoukhlefthebrew'] = 0x0591;\n  t['etnahtahebrew'] = 0x0591;\n  t['etnahtalefthebrew'] = 0x0591;\n  t['eturned'] = 0x01DD;\n  t['eukorean'] = 0x3161;\n  t['euro'] = 0x20AC;\n  t['evowelsignbengali'] = 0x09C7;\n  t['evowelsigndeva'] = 0x0947;\n  t['evowelsigngujarati'] = 0x0AC7;\n  t['exclam'] = 0x0021;\n  t['exclamarmenian'] = 0x055C;\n  t['exclamdbl'] = 0x203C;\n  t['exclamdown'] = 0x00A1;\n  t['exclamdownsmall'] = 0xF7A1;\n  t['exclammonospace'] = 0xFF01;\n  t['exclamsmall'] = 0xF721;\n  t['existential'] = 0x2203;\n  t['ezh'] = 0x0292;\n  t['ezhcaron'] = 0x01EF;\n  t['ezhcurl'] = 0x0293;\n  t['ezhreversed'] = 0x01B9;\n  t['ezhtail'] = 0x01BA;\n  t['f'] = 0x0066;\n  t['fadeva'] = 0x095E;\n  t['fagurmukhi'] = 0x0A5E;\n  t['fahrenheit'] = 0x2109;\n  t['fathaarabic'] = 0x064E;\n  t['fathalowarabic'] = 0x064E;\n  t['fathatanarabic'] = 0x064B;\n  t['fbopomofo'] = 0x3108;\n  t['fcircle'] = 0x24D5;\n  t['fdotaccent'] = 0x1E1F;\n  t['feharabic'] = 0x0641;\n  t['feharmenian'] = 0x0586;\n  t['fehfinalarabic'] = 0xFED2;\n  t['fehinitialarabic'] = 0xFED3;\n  t['fehmedialarabic'] = 0xFED4;\n  t['feicoptic'] = 0x03E5;\n  t['female'] = 0x2640;\n  t['ff'] = 0xFB00;\n  t['ffi'] = 0xFB03;\n  t['ffl'] = 0xFB04;\n  t['fi'] = 0xFB01;\n  t['fifteencircle'] = 0x246E;\n  t['fifteenparen'] = 0x2482;\n  t['fifteenperiod'] = 0x2496;\n  t['figuredash'] = 0x2012;\n  t['filledbox'] = 0x25A0;\n  t['filledrect'] = 0x25AC;\n  t['finalkaf'] = 0x05DA;\n  t['finalkafdagesh'] = 0xFB3A;\n  t['finalkafdageshhebrew'] = 0xFB3A;\n  t['finalkafhebrew'] = 0x05DA;\n  t['finalmem'] = 0x05DD;\n  t['finalmemhebrew'] = 0x05DD;\n  t['finalnun'] = 0x05DF;\n  t['finalnunhebrew'] = 0x05DF;\n  t['finalpe'] = 0x05E3;\n  t['finalpehebrew'] = 0x05E3;\n  t['finaltsadi'] = 0x05E5;\n  t['finaltsadihebrew'] = 0x05E5;\n  t['firsttonechinese'] = 0x02C9;\n  t['fisheye'] = 0x25C9;\n  t['fitacyrillic'] = 0x0473;\n  t['five'] = 0x0035;\n  t['fivearabic'] = 0x0665;\n  t['fivebengali'] = 0x09EB;\n  t['fivecircle'] = 0x2464;\n  t['fivecircleinversesansserif'] = 0x278E;\n  t['fivedeva'] = 0x096B;\n  t['fiveeighths'] = 0x215D;\n  t['fivegujarati'] = 0x0AEB;\n  t['fivegurmukhi'] = 0x0A6B;\n  t['fivehackarabic'] = 0x0665;\n  t['fivehangzhou'] = 0x3025;\n  t['fiveideographicparen'] = 0x3224;\n  t['fiveinferior'] = 0x2085;\n  t['fivemonospace'] = 0xFF15;\n  t['fiveoldstyle'] = 0xF735;\n  t['fiveparen'] = 0x2478;\n  t['fiveperiod'] = 0x248C;\n  t['fivepersian'] = 0x06F5;\n  t['fiveroman'] = 0x2174;\n  t['fivesuperior'] = 0x2075;\n  t['fivethai'] = 0x0E55;\n  t['fl'] = 0xFB02;\n  t['florin'] = 0x0192;\n  t['fmonospace'] = 0xFF46;\n  t['fmsquare'] = 0x3399;\n  t['fofanthai'] = 0x0E1F;\n  t['fofathai'] = 0x0E1D;\n  t['fongmanthai'] = 0x0E4F;\n  t['forall'] = 0x2200;\n  t['four'] = 0x0034;\n  t['fourarabic'] = 0x0664;\n  t['fourbengali'] = 0x09EA;\n  t['fourcircle'] = 0x2463;\n  t['fourcircleinversesansserif'] = 0x278D;\n  t['fourdeva'] = 0x096A;\n  t['fourgujarati'] = 0x0AEA;\n  t['fourgurmukhi'] = 0x0A6A;\n  t['fourhackarabic'] = 0x0664;\n  t['fourhangzhou'] = 0x3024;\n  t['fourideographicparen'] = 0x3223;\n  t['fourinferior'] = 0x2084;\n  t['fourmonospace'] = 0xFF14;\n  t['fournumeratorbengali'] = 0x09F7;\n  t['fouroldstyle'] = 0xF734;\n  t['fourparen'] = 0x2477;\n  t['fourperiod'] = 0x248B;\n  t['fourpersian'] = 0x06F4;\n  t['fourroman'] = 0x2173;\n  t['foursuperior'] = 0x2074;\n  t['fourteencircle'] = 0x246D;\n  t['fourteenparen'] = 0x2481;\n  t['fourteenperiod'] = 0x2495;\n  t['fourthai'] = 0x0E54;\n  t['fourthtonechinese'] = 0x02CB;\n  t['fparen'] = 0x24A1;\n  t['fraction'] = 0x2044;\n  t['franc'] = 0x20A3;\n  t['g'] = 0x0067;\n  t['gabengali'] = 0x0997;\n  t['gacute'] = 0x01F5;\n  t['gadeva'] = 0x0917;\n  t['gafarabic'] = 0x06AF;\n  t['gaffinalarabic'] = 0xFB93;\n  t['gafinitialarabic'] = 0xFB94;\n  t['gafmedialarabic'] = 0xFB95;\n  t['gagujarati'] = 0x0A97;\n  t['gagurmukhi'] = 0x0A17;\n  t['gahiragana'] = 0x304C;\n  t['gakatakana'] = 0x30AC;\n  t['gamma'] = 0x03B3;\n  t['gammalatinsmall'] = 0x0263;\n  t['gammasuperior'] = 0x02E0;\n  t['gangiacoptic'] = 0x03EB;\n  t['gbopomofo'] = 0x310D;\n  t['gbreve'] = 0x011F;\n  t['gcaron'] = 0x01E7;\n  t['gcedilla'] = 0x0123;\n  t['gcircle'] = 0x24D6;\n  t['gcircumflex'] = 0x011D;\n  t['gcommaaccent'] = 0x0123;\n  t['gdot'] = 0x0121;\n  t['gdotaccent'] = 0x0121;\n  t['gecyrillic'] = 0x0433;\n  t['gehiragana'] = 0x3052;\n  t['gekatakana'] = 0x30B2;\n  t['geometricallyequal'] = 0x2251;\n  t['gereshaccenthebrew'] = 0x059C;\n  t['gereshhebrew'] = 0x05F3;\n  t['gereshmuqdamhebrew'] = 0x059D;\n  t['germandbls'] = 0x00DF;\n  t['gershayimaccenthebrew'] = 0x059E;\n  t['gershayimhebrew'] = 0x05F4;\n  t['getamark'] = 0x3013;\n  t['ghabengali'] = 0x0998;\n  t['ghadarmenian'] = 0x0572;\n  t['ghadeva'] = 0x0918;\n  t['ghagujarati'] = 0x0A98;\n  t['ghagurmukhi'] = 0x0A18;\n  t['ghainarabic'] = 0x063A;\n  t['ghainfinalarabic'] = 0xFECE;\n  t['ghaininitialarabic'] = 0xFECF;\n  t['ghainmedialarabic'] = 0xFED0;\n  t['ghemiddlehookcyrillic'] = 0x0495;\n  t['ghestrokecyrillic'] = 0x0493;\n  t['gheupturncyrillic'] = 0x0491;\n  t['ghhadeva'] = 0x095A;\n  t['ghhagurmukhi'] = 0x0A5A;\n  t['ghook'] = 0x0260;\n  t['ghzsquare'] = 0x3393;\n  t['gihiragana'] = 0x304E;\n  t['gikatakana'] = 0x30AE;\n  t['gimarmenian'] = 0x0563;\n  t['gimel'] = 0x05D2;\n  t['gimeldagesh'] = 0xFB32;\n  t['gimeldageshhebrew'] = 0xFB32;\n  t['gimelhebrew'] = 0x05D2;\n  t['gjecyrillic'] = 0x0453;\n  t['glottalinvertedstroke'] = 0x01BE;\n  t['glottalstop'] = 0x0294;\n  t['glottalstopinverted'] = 0x0296;\n  t['glottalstopmod'] = 0x02C0;\n  t['glottalstopreversed'] = 0x0295;\n  t['glottalstopreversedmod'] = 0x02C1;\n  t['glottalstopreversedsuperior'] = 0x02E4;\n  t['glottalstopstroke'] = 0x02A1;\n  t['glottalstopstrokereversed'] = 0x02A2;\n  t['gmacron'] = 0x1E21;\n  t['gmonospace'] = 0xFF47;\n  t['gohiragana'] = 0x3054;\n  t['gokatakana'] = 0x30B4;\n  t['gparen'] = 0x24A2;\n  t['gpasquare'] = 0x33AC;\n  t['gradient'] = 0x2207;\n  t['grave'] = 0x0060;\n  t['gravebelowcmb'] = 0x0316;\n  t['gravecmb'] = 0x0300;\n  t['gravecomb'] = 0x0300;\n  t['gravedeva'] = 0x0953;\n  t['gravelowmod'] = 0x02CE;\n  t['gravemonospace'] = 0xFF40;\n  t['gravetonecmb'] = 0x0340;\n  t['greater'] = 0x003E;\n  t['greaterequal'] = 0x2265;\n  t['greaterequalorless'] = 0x22DB;\n  t['greatermonospace'] = 0xFF1E;\n  t['greaterorequivalent'] = 0x2273;\n  t['greaterorless'] = 0x2277;\n  t['greateroverequal'] = 0x2267;\n  t['greatersmall'] = 0xFE65;\n  t['gscript'] = 0x0261;\n  t['gstroke'] = 0x01E5;\n  t['guhiragana'] = 0x3050;\n  t['guillemotleft'] = 0x00AB;\n  t['guillemotright'] = 0x00BB;\n  t['guilsinglleft'] = 0x2039;\n  t['guilsinglright'] = 0x203A;\n  t['gukatakana'] = 0x30B0;\n  t['guramusquare'] = 0x3318;\n  t['gysquare'] = 0x33C9;\n  t['h'] = 0x0068;\n  t['haabkhasiancyrillic'] = 0x04A9;\n  t['haaltonearabic'] = 0x06C1;\n  t['habengali'] = 0x09B9;\n  t['hadescendercyrillic'] = 0x04B3;\n  t['hadeva'] = 0x0939;\n  t['hagujarati'] = 0x0AB9;\n  t['hagurmukhi'] = 0x0A39;\n  t['haharabic'] = 0x062D;\n  t['hahfinalarabic'] = 0xFEA2;\n  t['hahinitialarabic'] = 0xFEA3;\n  t['hahiragana'] = 0x306F;\n  t['hahmedialarabic'] = 0xFEA4;\n  t['haitusquare'] = 0x332A;\n  t['hakatakana'] = 0x30CF;\n  t['hakatakanahalfwidth'] = 0xFF8A;\n  t['halantgurmukhi'] = 0x0A4D;\n  t['hamzaarabic'] = 0x0621;\n  t['hamzalowarabic'] = 0x0621;\n  t['hangulfiller'] = 0x3164;\n  t['hardsigncyrillic'] = 0x044A;\n  t['harpoonleftbarbup'] = 0x21BC;\n  t['harpoonrightbarbup'] = 0x21C0;\n  t['hasquare'] = 0x33CA;\n  t['hatafpatah'] = 0x05B2;\n  t['hatafpatah16'] = 0x05B2;\n  t['hatafpatah23'] = 0x05B2;\n  t['hatafpatah2f'] = 0x05B2;\n  t['hatafpatahhebrew'] = 0x05B2;\n  t['hatafpatahnarrowhebrew'] = 0x05B2;\n  t['hatafpatahquarterhebrew'] = 0x05B2;\n  t['hatafpatahwidehebrew'] = 0x05B2;\n  t['hatafqamats'] = 0x05B3;\n  t['hatafqamats1b'] = 0x05B3;\n  t['hatafqamats28'] = 0x05B3;\n  t['hatafqamats34'] = 0x05B3;\n  t['hatafqamatshebrew'] = 0x05B3;\n  t['hatafqamatsnarrowhebrew'] = 0x05B3;\n  t['hatafqamatsquarterhebrew'] = 0x05B3;\n  t['hatafqamatswidehebrew'] = 0x05B3;\n  t['hatafsegol'] = 0x05B1;\n  t['hatafsegol17'] = 0x05B1;\n  t['hatafsegol24'] = 0x05B1;\n  t['hatafsegol30'] = 0x05B1;\n  t['hatafsegolhebrew'] = 0x05B1;\n  t['hatafsegolnarrowhebrew'] = 0x05B1;\n  t['hatafsegolquarterhebrew'] = 0x05B1;\n  t['hatafsegolwidehebrew'] = 0x05B1;\n  t['hbar'] = 0x0127;\n  t['hbopomofo'] = 0x310F;\n  t['hbrevebelow'] = 0x1E2B;\n  t['hcedilla'] = 0x1E29;\n  t['hcircle'] = 0x24D7;\n  t['hcircumflex'] = 0x0125;\n  t['hdieresis'] = 0x1E27;\n  t['hdotaccent'] = 0x1E23;\n  t['hdotbelow'] = 0x1E25;\n  t['he'] = 0x05D4;\n  t['heart'] = 0x2665;\n  t['heartsuitblack'] = 0x2665;\n  t['heartsuitwhite'] = 0x2661;\n  t['hedagesh'] = 0xFB34;\n  t['hedageshhebrew'] = 0xFB34;\n  t['hehaltonearabic'] = 0x06C1;\n  t['heharabic'] = 0x0647;\n  t['hehebrew'] = 0x05D4;\n  t['hehfinalaltonearabic'] = 0xFBA7;\n  t['hehfinalalttwoarabic'] = 0xFEEA;\n  t['hehfinalarabic'] = 0xFEEA;\n  t['hehhamzaabovefinalarabic'] = 0xFBA5;\n  t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\n  t['hehinitialaltonearabic'] = 0xFBA8;\n  t['hehinitialarabic'] = 0xFEEB;\n  t['hehiragana'] = 0x3078;\n  t['hehmedialaltonearabic'] = 0xFBA9;\n  t['hehmedialarabic'] = 0xFEEC;\n  t['heiseierasquare'] = 0x337B;\n  t['hekatakana'] = 0x30D8;\n  t['hekatakanahalfwidth'] = 0xFF8D;\n  t['hekutaarusquare'] = 0x3336;\n  t['henghook'] = 0x0267;\n  t['herutusquare'] = 0x3339;\n  t['het'] = 0x05D7;\n  t['hethebrew'] = 0x05D7;\n  t['hhook'] = 0x0266;\n  t['hhooksuperior'] = 0x02B1;\n  t['hieuhacirclekorean'] = 0x327B;\n  t['hieuhaparenkorean'] = 0x321B;\n  t['hieuhcirclekorean'] = 0x326D;\n  t['hieuhkorean'] = 0x314E;\n  t['hieuhparenkorean'] = 0x320D;\n  t['hihiragana'] = 0x3072;\n  t['hikatakana'] = 0x30D2;\n  t['hikatakanahalfwidth'] = 0xFF8B;\n  t['hiriq'] = 0x05B4;\n  t['hiriq14'] = 0x05B4;\n  t['hiriq21'] = 0x05B4;\n  t['hiriq2d'] = 0x05B4;\n  t['hiriqhebrew'] = 0x05B4;\n  t['hiriqnarrowhebrew'] = 0x05B4;\n  t['hiriqquarterhebrew'] = 0x05B4;\n  t['hiriqwidehebrew'] = 0x05B4;\n  t['hlinebelow'] = 0x1E96;\n  t['hmonospace'] = 0xFF48;\n  t['hoarmenian'] = 0x0570;\n  t['hohipthai'] = 0x0E2B;\n  t['hohiragana'] = 0x307B;\n  t['hokatakana'] = 0x30DB;\n  t['hokatakanahalfwidth'] = 0xFF8E;\n  t['holam'] = 0x05B9;\n  t['holam19'] = 0x05B9;\n  t['holam26'] = 0x05B9;\n  t['holam32'] = 0x05B9;\n  t['holamhebrew'] = 0x05B9;\n  t['holamnarrowhebrew'] = 0x05B9;\n  t['holamquarterhebrew'] = 0x05B9;\n  t['holamwidehebrew'] = 0x05B9;\n  t['honokhukthai'] = 0x0E2E;\n  t['hookabovecomb'] = 0x0309;\n  t['hookcmb'] = 0x0309;\n  t['hookpalatalizedbelowcmb'] = 0x0321;\n  t['hookretroflexbelowcmb'] = 0x0322;\n  t['hoonsquare'] = 0x3342;\n  t['horicoptic'] = 0x03E9;\n  t['horizontalbar'] = 0x2015;\n  t['horncmb'] = 0x031B;\n  t['hotsprings'] = 0x2668;\n  t['house'] = 0x2302;\n  t['hparen'] = 0x24A3;\n  t['hsuperior'] = 0x02B0;\n  t['hturned'] = 0x0265;\n  t['huhiragana'] = 0x3075;\n  t['huiitosquare'] = 0x3333;\n  t['hukatakana'] = 0x30D5;\n  t['hukatakanahalfwidth'] = 0xFF8C;\n  t['hungarumlaut'] = 0x02DD;\n  t['hungarumlautcmb'] = 0x030B;\n  t['hv'] = 0x0195;\n  t['hyphen'] = 0x002D;\n  t['hypheninferior'] = 0xF6E5;\n  t['hyphenmonospace'] = 0xFF0D;\n  t['hyphensmall'] = 0xFE63;\n  t['hyphensuperior'] = 0xF6E6;\n  t['hyphentwo'] = 0x2010;\n  t['i'] = 0x0069;\n  t['iacute'] = 0x00ED;\n  t['iacyrillic'] = 0x044F;\n  t['ibengali'] = 0x0987;\n  t['ibopomofo'] = 0x3127;\n  t['ibreve'] = 0x012D;\n  t['icaron'] = 0x01D0;\n  t['icircle'] = 0x24D8;\n  t['icircumflex'] = 0x00EE;\n  t['icyrillic'] = 0x0456;\n  t['idblgrave'] = 0x0209;\n  t['ideographearthcircle'] = 0x328F;\n  t['ideographfirecircle'] = 0x328B;\n  t['ideographicallianceparen'] = 0x323F;\n  t['ideographiccallparen'] = 0x323A;\n  t['ideographiccentrecircle'] = 0x32A5;\n  t['ideographicclose'] = 0x3006;\n  t['ideographiccomma'] = 0x3001;\n  t['ideographiccommaleft'] = 0xFF64;\n  t['ideographiccongratulationparen'] = 0x3237;\n  t['ideographiccorrectcircle'] = 0x32A3;\n  t['ideographicearthparen'] = 0x322F;\n  t['ideographicenterpriseparen'] = 0x323D;\n  t['ideographicexcellentcircle'] = 0x329D;\n  t['ideographicfestivalparen'] = 0x3240;\n  t['ideographicfinancialcircle'] = 0x3296;\n  t['ideographicfinancialparen'] = 0x3236;\n  t['ideographicfireparen'] = 0x322B;\n  t['ideographichaveparen'] = 0x3232;\n  t['ideographichighcircle'] = 0x32A4;\n  t['ideographiciterationmark'] = 0x3005;\n  t['ideographiclaborcircle'] = 0x3298;\n  t['ideographiclaborparen'] = 0x3238;\n  t['ideographicleftcircle'] = 0x32A7;\n  t['ideographiclowcircle'] = 0x32A6;\n  t['ideographicmedicinecircle'] = 0x32A9;\n  t['ideographicmetalparen'] = 0x322E;\n  t['ideographicmoonparen'] = 0x322A;\n  t['ideographicnameparen'] = 0x3234;\n  t['ideographicperiod'] = 0x3002;\n  t['ideographicprintcircle'] = 0x329E;\n  t['ideographicreachparen'] = 0x3243;\n  t['ideographicrepresentparen'] = 0x3239;\n  t['ideographicresourceparen'] = 0x323E;\n  t['ideographicrightcircle'] = 0x32A8;\n  t['ideographicsecretcircle'] = 0x3299;\n  t['ideographicselfparen'] = 0x3242;\n  t['ideographicsocietyparen'] = 0x3233;\n  t['ideographicspace'] = 0x3000;\n  t['ideographicspecialparen'] = 0x3235;\n  t['ideographicstockparen'] = 0x3231;\n  t['ideographicstudyparen'] = 0x323B;\n  t['ideographicsunparen'] = 0x3230;\n  t['ideographicsuperviseparen'] = 0x323C;\n  t['ideographicwaterparen'] = 0x322C;\n  t['ideographicwoodparen'] = 0x322D;\n  t['ideographiczero'] = 0x3007;\n  t['ideographmetalcircle'] = 0x328E;\n  t['ideographmooncircle'] = 0x328A;\n  t['ideographnamecircle'] = 0x3294;\n  t['ideographsuncircle'] = 0x3290;\n  t['ideographwatercircle'] = 0x328C;\n  t['ideographwoodcircle'] = 0x328D;\n  t['ideva'] = 0x0907;\n  t['idieresis'] = 0x00EF;\n  t['idieresisacute'] = 0x1E2F;\n  t['idieresiscyrillic'] = 0x04E5;\n  t['idotbelow'] = 0x1ECB;\n  t['iebrevecyrillic'] = 0x04D7;\n  t['iecyrillic'] = 0x0435;\n  t['ieungacirclekorean'] = 0x3275;\n  t['ieungaparenkorean'] = 0x3215;\n  t['ieungcirclekorean'] = 0x3267;\n  t['ieungkorean'] = 0x3147;\n  t['ieungparenkorean'] = 0x3207;\n  t['igrave'] = 0x00EC;\n  t['igujarati'] = 0x0A87;\n  t['igurmukhi'] = 0x0A07;\n  t['ihiragana'] = 0x3044;\n  t['ihookabove'] = 0x1EC9;\n  t['iibengali'] = 0x0988;\n  t['iicyrillic'] = 0x0438;\n  t['iideva'] = 0x0908;\n  t['iigujarati'] = 0x0A88;\n  t['iigurmukhi'] = 0x0A08;\n  t['iimatragurmukhi'] = 0x0A40;\n  t['iinvertedbreve'] = 0x020B;\n  t['iishortcyrillic'] = 0x0439;\n  t['iivowelsignbengali'] = 0x09C0;\n  t['iivowelsigndeva'] = 0x0940;\n  t['iivowelsigngujarati'] = 0x0AC0;\n  t['ij'] = 0x0133;\n  t['ikatakana'] = 0x30A4;\n  t['ikatakanahalfwidth'] = 0xFF72;\n  t['ikorean'] = 0x3163;\n  t['ilde'] = 0x02DC;\n  t['iluyhebrew'] = 0x05AC;\n  t['imacron'] = 0x012B;\n  t['imacroncyrillic'] = 0x04E3;\n  t['imageorapproximatelyequal'] = 0x2253;\n  t['imatragurmukhi'] = 0x0A3F;\n  t['imonospace'] = 0xFF49;\n  t['increment'] = 0x2206;\n  t['infinity'] = 0x221E;\n  t['iniarmenian'] = 0x056B;\n  t['integral'] = 0x222B;\n  t['integralbottom'] = 0x2321;\n  t['integralbt'] = 0x2321;\n  t['integralex'] = 0xF8F5;\n  t['integraltop'] = 0x2320;\n  t['integraltp'] = 0x2320;\n  t['intersection'] = 0x2229;\n  t['intisquare'] = 0x3305;\n  t['invbullet'] = 0x25D8;\n  t['invcircle'] = 0x25D9;\n  t['invsmileface'] = 0x263B;\n  t['iocyrillic'] = 0x0451;\n  t['iogonek'] = 0x012F;\n  t['iota'] = 0x03B9;\n  t['iotadieresis'] = 0x03CA;\n  t['iotadieresistonos'] = 0x0390;\n  t['iotalatin'] = 0x0269;\n  t['iotatonos'] = 0x03AF;\n  t['iparen'] = 0x24A4;\n  t['irigurmukhi'] = 0x0A72;\n  t['ismallhiragana'] = 0x3043;\n  t['ismallkatakana'] = 0x30A3;\n  t['ismallkatakanahalfwidth'] = 0xFF68;\n  t['issharbengali'] = 0x09FA;\n  t['istroke'] = 0x0268;\n  t['isuperior'] = 0xF6ED;\n  t['iterationhiragana'] = 0x309D;\n  t['iterationkatakana'] = 0x30FD;\n  t['itilde'] = 0x0129;\n  t['itildebelow'] = 0x1E2D;\n  t['iubopomofo'] = 0x3129;\n  t['iucyrillic'] = 0x044E;\n  t['ivowelsignbengali'] = 0x09BF;\n  t['ivowelsigndeva'] = 0x093F;\n  t['ivowelsigngujarati'] = 0x0ABF;\n  t['izhitsacyrillic'] = 0x0475;\n  t['izhitsadblgravecyrillic'] = 0x0477;\n  t['j'] = 0x006A;\n  t['jaarmenian'] = 0x0571;\n  t['jabengali'] = 0x099C;\n  t['jadeva'] = 0x091C;\n  t['jagujarati'] = 0x0A9C;\n  t['jagurmukhi'] = 0x0A1C;\n  t['jbopomofo'] = 0x3110;\n  t['jcaron'] = 0x01F0;\n  t['jcircle'] = 0x24D9;\n  t['jcircumflex'] = 0x0135;\n  t['jcrossedtail'] = 0x029D;\n  t['jdotlessstroke'] = 0x025F;\n  t['jecyrillic'] = 0x0458;\n  t['jeemarabic'] = 0x062C;\n  t['jeemfinalarabic'] = 0xFE9E;\n  t['jeeminitialarabic'] = 0xFE9F;\n  t['jeemmedialarabic'] = 0xFEA0;\n  t['jeharabic'] = 0x0698;\n  t['jehfinalarabic'] = 0xFB8B;\n  t['jhabengali'] = 0x099D;\n  t['jhadeva'] = 0x091D;\n  t['jhagujarati'] = 0x0A9D;\n  t['jhagurmukhi'] = 0x0A1D;\n  t['jheharmenian'] = 0x057B;\n  t['jis'] = 0x3004;\n  t['jmonospace'] = 0xFF4A;\n  t['jparen'] = 0x24A5;\n  t['jsuperior'] = 0x02B2;\n  t['k'] = 0x006B;\n  t['kabashkircyrillic'] = 0x04A1;\n  t['kabengali'] = 0x0995;\n  t['kacute'] = 0x1E31;\n  t['kacyrillic'] = 0x043A;\n  t['kadescendercyrillic'] = 0x049B;\n  t['kadeva'] = 0x0915;\n  t['kaf'] = 0x05DB;\n  t['kafarabic'] = 0x0643;\n  t['kafdagesh'] = 0xFB3B;\n  t['kafdageshhebrew'] = 0xFB3B;\n  t['kaffinalarabic'] = 0xFEDA;\n  t['kafhebrew'] = 0x05DB;\n  t['kafinitialarabic'] = 0xFEDB;\n  t['kafmedialarabic'] = 0xFEDC;\n  t['kafrafehebrew'] = 0xFB4D;\n  t['kagujarati'] = 0x0A95;\n  t['kagurmukhi'] = 0x0A15;\n  t['kahiragana'] = 0x304B;\n  t['kahookcyrillic'] = 0x04C4;\n  t['kakatakana'] = 0x30AB;\n  t['kakatakanahalfwidth'] = 0xFF76;\n  t['kappa'] = 0x03BA;\n  t['kappasymbolgreek'] = 0x03F0;\n  t['kapyeounmieumkorean'] = 0x3171;\n  t['kapyeounphieuphkorean'] = 0x3184;\n  t['kapyeounpieupkorean'] = 0x3178;\n  t['kapyeounssangpieupkorean'] = 0x3179;\n  t['karoriisquare'] = 0x330D;\n  t['kashidaautoarabic'] = 0x0640;\n  t['kashidaautonosidebearingarabic'] = 0x0640;\n  t['kasmallkatakana'] = 0x30F5;\n  t['kasquare'] = 0x3384;\n  t['kasraarabic'] = 0x0650;\n  t['kasratanarabic'] = 0x064D;\n  t['kastrokecyrillic'] = 0x049F;\n  t['katahiraprolongmarkhalfwidth'] = 0xFF70;\n  t['kaverticalstrokecyrillic'] = 0x049D;\n  t['kbopomofo'] = 0x310E;\n  t['kcalsquare'] = 0x3389;\n  t['kcaron'] = 0x01E9;\n  t['kcedilla'] = 0x0137;\n  t['kcircle'] = 0x24DA;\n  t['kcommaaccent'] = 0x0137;\n  t['kdotbelow'] = 0x1E33;\n  t['keharmenian'] = 0x0584;\n  t['kehiragana'] = 0x3051;\n  t['kekatakana'] = 0x30B1;\n  t['kekatakanahalfwidth'] = 0xFF79;\n  t['kenarmenian'] = 0x056F;\n  t['kesmallkatakana'] = 0x30F6;\n  t['kgreenlandic'] = 0x0138;\n  t['khabengali'] = 0x0996;\n  t['khacyrillic'] = 0x0445;\n  t['khadeva'] = 0x0916;\n  t['khagujarati'] = 0x0A96;\n  t['khagurmukhi'] = 0x0A16;\n  t['khaharabic'] = 0x062E;\n  t['khahfinalarabic'] = 0xFEA6;\n  t['khahinitialarabic'] = 0xFEA7;\n  t['khahmedialarabic'] = 0xFEA8;\n  t['kheicoptic'] = 0x03E7;\n  t['khhadeva'] = 0x0959;\n  t['khhagurmukhi'] = 0x0A59;\n  t['khieukhacirclekorean'] = 0x3278;\n  t['khieukhaparenkorean'] = 0x3218;\n  t['khieukhcirclekorean'] = 0x326A;\n  t['khieukhkorean'] = 0x314B;\n  t['khieukhparenkorean'] = 0x320A;\n  t['khokhaithai'] = 0x0E02;\n  t['khokhonthai'] = 0x0E05;\n  t['khokhuatthai'] = 0x0E03;\n  t['khokhwaithai'] = 0x0E04;\n  t['khomutthai'] = 0x0E5B;\n  t['khook'] = 0x0199;\n  t['khorakhangthai'] = 0x0E06;\n  t['khzsquare'] = 0x3391;\n  t['kihiragana'] = 0x304D;\n  t['kikatakana'] = 0x30AD;\n  t['kikatakanahalfwidth'] = 0xFF77;\n  t['kiroguramusquare'] = 0x3315;\n  t['kiromeetorusquare'] = 0x3316;\n  t['kirosquare'] = 0x3314;\n  t['kiyeokacirclekorean'] = 0x326E;\n  t['kiyeokaparenkorean'] = 0x320E;\n  t['kiyeokcirclekorean'] = 0x3260;\n  t['kiyeokkorean'] = 0x3131;\n  t['kiyeokparenkorean'] = 0x3200;\n  t['kiyeoksioskorean'] = 0x3133;\n  t['kjecyrillic'] = 0x045C;\n  t['klinebelow'] = 0x1E35;\n  t['klsquare'] = 0x3398;\n  t['kmcubedsquare'] = 0x33A6;\n  t['kmonospace'] = 0xFF4B;\n  t['kmsquaredsquare'] = 0x33A2;\n  t['kohiragana'] = 0x3053;\n  t['kohmsquare'] = 0x33C0;\n  t['kokaithai'] = 0x0E01;\n  t['kokatakana'] = 0x30B3;\n  t['kokatakanahalfwidth'] = 0xFF7A;\n  t['kooposquare'] = 0x331E;\n  t['koppacyrillic'] = 0x0481;\n  t['koreanstandardsymbol'] = 0x327F;\n  t['koroniscmb'] = 0x0343;\n  t['kparen'] = 0x24A6;\n  t['kpasquare'] = 0x33AA;\n  t['ksicyrillic'] = 0x046F;\n  t['ktsquare'] = 0x33CF;\n  t['kturned'] = 0x029E;\n  t['kuhiragana'] = 0x304F;\n  t['kukatakana'] = 0x30AF;\n  t['kukatakanahalfwidth'] = 0xFF78;\n  t['kvsquare'] = 0x33B8;\n  t['kwsquare'] = 0x33BE;\n  t['l'] = 0x006C;\n  t['labengali'] = 0x09B2;\n  t['lacute'] = 0x013A;\n  t['ladeva'] = 0x0932;\n  t['lagujarati'] = 0x0AB2;\n  t['lagurmukhi'] = 0x0A32;\n  t['lakkhangyaothai'] = 0x0E45;\n  t['lamaleffinalarabic'] = 0xFEFC;\n  t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\n  t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\n  t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\n  t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\n  t['lamalefisolatedarabic'] = 0xFEFB;\n  t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\n  t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\n  t['lamarabic'] = 0x0644;\n  t['lambda'] = 0x03BB;\n  t['lambdastroke'] = 0x019B;\n  t['lamed'] = 0x05DC;\n  t['lameddagesh'] = 0xFB3C;\n  t['lameddageshhebrew'] = 0xFB3C;\n  t['lamedhebrew'] = 0x05DC;\n  t['lamfinalarabic'] = 0xFEDE;\n  t['lamhahinitialarabic'] = 0xFCCA;\n  t['laminitialarabic'] = 0xFEDF;\n  t['lamjeeminitialarabic'] = 0xFCC9;\n  t['lamkhahinitialarabic'] = 0xFCCB;\n  t['lamlamhehisolatedarabic'] = 0xFDF2;\n  t['lammedialarabic'] = 0xFEE0;\n  t['lammeemhahinitialarabic'] = 0xFD88;\n  t['lammeeminitialarabic'] = 0xFCCC;\n  t['largecircle'] = 0x25EF;\n  t['lbar'] = 0x019A;\n  t['lbelt'] = 0x026C;\n  t['lbopomofo'] = 0x310C;\n  t['lcaron'] = 0x013E;\n  t['lcedilla'] = 0x013C;\n  t['lcircle'] = 0x24DB;\n  t['lcircumflexbelow'] = 0x1E3D;\n  t['lcommaaccent'] = 0x013C;\n  t['ldot'] = 0x0140;\n  t['ldotaccent'] = 0x0140;\n  t['ldotbelow'] = 0x1E37;\n  t['ldotbelowmacron'] = 0x1E39;\n  t['leftangleabovecmb'] = 0x031A;\n  t['lefttackbelowcmb'] = 0x0318;\n  t['less'] = 0x003C;\n  t['lessequal'] = 0x2264;\n  t['lessequalorgreater'] = 0x22DA;\n  t['lessmonospace'] = 0xFF1C;\n  t['lessorequivalent'] = 0x2272;\n  t['lessorgreater'] = 0x2276;\n  t['lessoverequal'] = 0x2266;\n  t['lesssmall'] = 0xFE64;\n  t['lezh'] = 0x026E;\n  t['lfblock'] = 0x258C;\n  t['lhookretroflex'] = 0x026D;\n  t['lira'] = 0x20A4;\n  t['liwnarmenian'] = 0x056C;\n  t['lj'] = 0x01C9;\n  t['ljecyrillic'] = 0x0459;\n  t['ll'] = 0xF6C0;\n  t['lladeva'] = 0x0933;\n  t['llagujarati'] = 0x0AB3;\n  t['llinebelow'] = 0x1E3B;\n  t['llladeva'] = 0x0934;\n  t['llvocalicbengali'] = 0x09E1;\n  t['llvocalicdeva'] = 0x0961;\n  t['llvocalicvowelsignbengali'] = 0x09E3;\n  t['llvocalicvowelsigndeva'] = 0x0963;\n  t['lmiddletilde'] = 0x026B;\n  t['lmonospace'] = 0xFF4C;\n  t['lmsquare'] = 0x33D0;\n  t['lochulathai'] = 0x0E2C;\n  t['logicaland'] = 0x2227;\n  t['logicalnot'] = 0x00AC;\n  t['logicalnotreversed'] = 0x2310;\n  t['logicalor'] = 0x2228;\n  t['lolingthai'] = 0x0E25;\n  t['longs'] = 0x017F;\n  t['lowlinecenterline'] = 0xFE4E;\n  t['lowlinecmb'] = 0x0332;\n  t['lowlinedashed'] = 0xFE4D;\n  t['lozenge'] = 0x25CA;\n  t['lparen'] = 0x24A7;\n  t['lslash'] = 0x0142;\n  t['lsquare'] = 0x2113;\n  t['lsuperior'] = 0xF6EE;\n  t['ltshade'] = 0x2591;\n  t['luthai'] = 0x0E26;\n  t['lvocalicbengali'] = 0x098C;\n  t['lvocalicdeva'] = 0x090C;\n  t['lvocalicvowelsignbengali'] = 0x09E2;\n  t['lvocalicvowelsigndeva'] = 0x0962;\n  t['lxsquare'] = 0x33D3;\n  t['m'] = 0x006D;\n  t['mabengali'] = 0x09AE;\n  t['macron'] = 0x00AF;\n  t['macronbelowcmb'] = 0x0331;\n  t['macroncmb'] = 0x0304;\n  t['macronlowmod'] = 0x02CD;\n  t['macronmonospace'] = 0xFFE3;\n  t['macute'] = 0x1E3F;\n  t['madeva'] = 0x092E;\n  t['magujarati'] = 0x0AAE;\n  t['magurmukhi'] = 0x0A2E;\n  t['mahapakhhebrew'] = 0x05A4;\n  t['mahapakhlefthebrew'] = 0x05A4;\n  t['mahiragana'] = 0x307E;\n  t['maichattawalowleftthai'] = 0xF895;\n  t['maichattawalowrightthai'] = 0xF894;\n  t['maichattawathai'] = 0x0E4B;\n  t['maichattawaupperleftthai'] = 0xF893;\n  t['maieklowleftthai'] = 0xF88C;\n  t['maieklowrightthai'] = 0xF88B;\n  t['maiekthai'] = 0x0E48;\n  t['maiekupperleftthai'] = 0xF88A;\n  t['maihanakatleftthai'] = 0xF884;\n  t['maihanakatthai'] = 0x0E31;\n  t['maitaikhuleftthai'] = 0xF889;\n  t['maitaikhuthai'] = 0x0E47;\n  t['maitholowleftthai'] = 0xF88F;\n  t['maitholowrightthai'] = 0xF88E;\n  t['maithothai'] = 0x0E49;\n  t['maithoupperleftthai'] = 0xF88D;\n  t['maitrilowleftthai'] = 0xF892;\n  t['maitrilowrightthai'] = 0xF891;\n  t['maitrithai'] = 0x0E4A;\n  t['maitriupperleftthai'] = 0xF890;\n  t['maiyamokthai'] = 0x0E46;\n  t['makatakana'] = 0x30DE;\n  t['makatakanahalfwidth'] = 0xFF8F;\n  t['male'] = 0x2642;\n  t['mansyonsquare'] = 0x3347;\n  t['maqafhebrew'] = 0x05BE;\n  t['mars'] = 0x2642;\n  t['masoracirclehebrew'] = 0x05AF;\n  t['masquare'] = 0x3383;\n  t['mbopomofo'] = 0x3107;\n  t['mbsquare'] = 0x33D4;\n  t['mcircle'] = 0x24DC;\n  t['mcubedsquare'] = 0x33A5;\n  t['mdotaccent'] = 0x1E41;\n  t['mdotbelow'] = 0x1E43;\n  t['meemarabic'] = 0x0645;\n  t['meemfinalarabic'] = 0xFEE2;\n  t['meeminitialarabic'] = 0xFEE3;\n  t['meemmedialarabic'] = 0xFEE4;\n  t['meemmeeminitialarabic'] = 0xFCD1;\n  t['meemmeemisolatedarabic'] = 0xFC48;\n  t['meetorusquare'] = 0x334D;\n  t['mehiragana'] = 0x3081;\n  t['meizierasquare'] = 0x337E;\n  t['mekatakana'] = 0x30E1;\n  t['mekatakanahalfwidth'] = 0xFF92;\n  t['mem'] = 0x05DE;\n  t['memdagesh'] = 0xFB3E;\n  t['memdageshhebrew'] = 0xFB3E;\n  t['memhebrew'] = 0x05DE;\n  t['menarmenian'] = 0x0574;\n  t['merkhahebrew'] = 0x05A5;\n  t['merkhakefulahebrew'] = 0x05A6;\n  t['merkhakefulalefthebrew'] = 0x05A6;\n  t['merkhalefthebrew'] = 0x05A5;\n  t['mhook'] = 0x0271;\n  t['mhzsquare'] = 0x3392;\n  t['middledotkatakanahalfwidth'] = 0xFF65;\n  t['middot'] = 0x00B7;\n  t['mieumacirclekorean'] = 0x3272;\n  t['mieumaparenkorean'] = 0x3212;\n  t['mieumcirclekorean'] = 0x3264;\n  t['mieumkorean'] = 0x3141;\n  t['mieumpansioskorean'] = 0x3170;\n  t['mieumparenkorean'] = 0x3204;\n  t['mieumpieupkorean'] = 0x316E;\n  t['mieumsioskorean'] = 0x316F;\n  t['mihiragana'] = 0x307F;\n  t['mikatakana'] = 0x30DF;\n  t['mikatakanahalfwidth'] = 0xFF90;\n  t['minus'] = 0x2212;\n  t['minusbelowcmb'] = 0x0320;\n  t['minuscircle'] = 0x2296;\n  t['minusmod'] = 0x02D7;\n  t['minusplus'] = 0x2213;\n  t['minute'] = 0x2032;\n  t['miribaarusquare'] = 0x334A;\n  t['mirisquare'] = 0x3349;\n  t['mlonglegturned'] = 0x0270;\n  t['mlsquare'] = 0x3396;\n  t['mmcubedsquare'] = 0x33A3;\n  t['mmonospace'] = 0xFF4D;\n  t['mmsquaredsquare'] = 0x339F;\n  t['mohiragana'] = 0x3082;\n  t['mohmsquare'] = 0x33C1;\n  t['mokatakana'] = 0x30E2;\n  t['mokatakanahalfwidth'] = 0xFF93;\n  t['molsquare'] = 0x33D6;\n  t['momathai'] = 0x0E21;\n  t['moverssquare'] = 0x33A7;\n  t['moverssquaredsquare'] = 0x33A8;\n  t['mparen'] = 0x24A8;\n  t['mpasquare'] = 0x33AB;\n  t['mssquare'] = 0x33B3;\n  t['msuperior'] = 0xF6EF;\n  t['mturned'] = 0x026F;\n  t['mu'] = 0x00B5;\n  t['mu1'] = 0x00B5;\n  t['muasquare'] = 0x3382;\n  t['muchgreater'] = 0x226B;\n  t['muchless'] = 0x226A;\n  t['mufsquare'] = 0x338C;\n  t['mugreek'] = 0x03BC;\n  t['mugsquare'] = 0x338D;\n  t['muhiragana'] = 0x3080;\n  t['mukatakana'] = 0x30E0;\n  t['mukatakanahalfwidth'] = 0xFF91;\n  t['mulsquare'] = 0x3395;\n  t['multiply'] = 0x00D7;\n  t['mumsquare'] = 0x339B;\n  t['munahhebrew'] = 0x05A3;\n  t['munahlefthebrew'] = 0x05A3;\n  t['musicalnote'] = 0x266A;\n  t['musicalnotedbl'] = 0x266B;\n  t['musicflatsign'] = 0x266D;\n  t['musicsharpsign'] = 0x266F;\n  t['mussquare'] = 0x33B2;\n  t['muvsquare'] = 0x33B6;\n  t['muwsquare'] = 0x33BC;\n  t['mvmegasquare'] = 0x33B9;\n  t['mvsquare'] = 0x33B7;\n  t['mwmegasquare'] = 0x33BF;\n  t['mwsquare'] = 0x33BD;\n  t['n'] = 0x006E;\n  t['nabengali'] = 0x09A8;\n  t['nabla'] = 0x2207;\n  t['nacute'] = 0x0144;\n  t['nadeva'] = 0x0928;\n  t['nagujarati'] = 0x0AA8;\n  t['nagurmukhi'] = 0x0A28;\n  t['nahiragana'] = 0x306A;\n  t['nakatakana'] = 0x30CA;\n  t['nakatakanahalfwidth'] = 0xFF85;\n  t['napostrophe'] = 0x0149;\n  t['nasquare'] = 0x3381;\n  t['nbopomofo'] = 0x310B;\n  t['nbspace'] = 0x00A0;\n  t['ncaron'] = 0x0148;\n  t['ncedilla'] = 0x0146;\n  t['ncircle'] = 0x24DD;\n  t['ncircumflexbelow'] = 0x1E4B;\n  t['ncommaaccent'] = 0x0146;\n  t['ndotaccent'] = 0x1E45;\n  t['ndotbelow'] = 0x1E47;\n  t['nehiragana'] = 0x306D;\n  t['nekatakana'] = 0x30CD;\n  t['nekatakanahalfwidth'] = 0xFF88;\n  t['newsheqelsign'] = 0x20AA;\n  t['nfsquare'] = 0x338B;\n  t['ngabengali'] = 0x0999;\n  t['ngadeva'] = 0x0919;\n  t['ngagujarati'] = 0x0A99;\n  t['ngagurmukhi'] = 0x0A19;\n  t['ngonguthai'] = 0x0E07;\n  t['nhiragana'] = 0x3093;\n  t['nhookleft'] = 0x0272;\n  t['nhookretroflex'] = 0x0273;\n  t['nieunacirclekorean'] = 0x326F;\n  t['nieunaparenkorean'] = 0x320F;\n  t['nieuncieuckorean'] = 0x3135;\n  t['nieuncirclekorean'] = 0x3261;\n  t['nieunhieuhkorean'] = 0x3136;\n  t['nieunkorean'] = 0x3134;\n  t['nieunpansioskorean'] = 0x3168;\n  t['nieunparenkorean'] = 0x3201;\n  t['nieunsioskorean'] = 0x3167;\n  t['nieuntikeutkorean'] = 0x3166;\n  t['nihiragana'] = 0x306B;\n  t['nikatakana'] = 0x30CB;\n  t['nikatakanahalfwidth'] = 0xFF86;\n  t['nikhahitleftthai'] = 0xF899;\n  t['nikhahitthai'] = 0x0E4D;\n  t['nine'] = 0x0039;\n  t['ninearabic'] = 0x0669;\n  t['ninebengali'] = 0x09EF;\n  t['ninecircle'] = 0x2468;\n  t['ninecircleinversesansserif'] = 0x2792;\n  t['ninedeva'] = 0x096F;\n  t['ninegujarati'] = 0x0AEF;\n  t['ninegurmukhi'] = 0x0A6F;\n  t['ninehackarabic'] = 0x0669;\n  t['ninehangzhou'] = 0x3029;\n  t['nineideographicparen'] = 0x3228;\n  t['nineinferior'] = 0x2089;\n  t['ninemonospace'] = 0xFF19;\n  t['nineoldstyle'] = 0xF739;\n  t['nineparen'] = 0x247C;\n  t['nineperiod'] = 0x2490;\n  t['ninepersian'] = 0x06F9;\n  t['nineroman'] = 0x2178;\n  t['ninesuperior'] = 0x2079;\n  t['nineteencircle'] = 0x2472;\n  t['nineteenparen'] = 0x2486;\n  t['nineteenperiod'] = 0x249A;\n  t['ninethai'] = 0x0E59;\n  t['nj'] = 0x01CC;\n  t['njecyrillic'] = 0x045A;\n  t['nkatakana'] = 0x30F3;\n  t['nkatakanahalfwidth'] = 0xFF9D;\n  t['nlegrightlong'] = 0x019E;\n  t['nlinebelow'] = 0x1E49;\n  t['nmonospace'] = 0xFF4E;\n  t['nmsquare'] = 0x339A;\n  t['nnabengali'] = 0x09A3;\n  t['nnadeva'] = 0x0923;\n  t['nnagujarati'] = 0x0AA3;\n  t['nnagurmukhi'] = 0x0A23;\n  t['nnnadeva'] = 0x0929;\n  t['nohiragana'] = 0x306E;\n  t['nokatakana'] = 0x30CE;\n  t['nokatakanahalfwidth'] = 0xFF89;\n  t['nonbreakingspace'] = 0x00A0;\n  t['nonenthai'] = 0x0E13;\n  t['nonuthai'] = 0x0E19;\n  t['noonarabic'] = 0x0646;\n  t['noonfinalarabic'] = 0xFEE6;\n  t['noonghunnaarabic'] = 0x06BA;\n  t['noonghunnafinalarabic'] = 0xFB9F;\n  t['nooninitialarabic'] = 0xFEE7;\n  t['noonjeeminitialarabic'] = 0xFCD2;\n  t['noonjeemisolatedarabic'] = 0xFC4B;\n  t['noonmedialarabic'] = 0xFEE8;\n  t['noonmeeminitialarabic'] = 0xFCD5;\n  t['noonmeemisolatedarabic'] = 0xFC4E;\n  t['noonnoonfinalarabic'] = 0xFC8D;\n  t['notcontains'] = 0x220C;\n  t['notelement'] = 0x2209;\n  t['notelementof'] = 0x2209;\n  t['notequal'] = 0x2260;\n  t['notgreater'] = 0x226F;\n  t['notgreaternorequal'] = 0x2271;\n  t['notgreaternorless'] = 0x2279;\n  t['notidentical'] = 0x2262;\n  t['notless'] = 0x226E;\n  t['notlessnorequal'] = 0x2270;\n  t['notparallel'] = 0x2226;\n  t['notprecedes'] = 0x2280;\n  t['notsubset'] = 0x2284;\n  t['notsucceeds'] = 0x2281;\n  t['notsuperset'] = 0x2285;\n  t['nowarmenian'] = 0x0576;\n  t['nparen'] = 0x24A9;\n  t['nssquare'] = 0x33B1;\n  t['nsuperior'] = 0x207F;\n  t['ntilde'] = 0x00F1;\n  t['nu'] = 0x03BD;\n  t['nuhiragana'] = 0x306C;\n  t['nukatakana'] = 0x30CC;\n  t['nukatakanahalfwidth'] = 0xFF87;\n  t['nuktabengali'] = 0x09BC;\n  t['nuktadeva'] = 0x093C;\n  t['nuktagujarati'] = 0x0ABC;\n  t['nuktagurmukhi'] = 0x0A3C;\n  t['numbersign'] = 0x0023;\n  t['numbersignmonospace'] = 0xFF03;\n  t['numbersignsmall'] = 0xFE5F;\n  t['numeralsigngreek'] = 0x0374;\n  t['numeralsignlowergreek'] = 0x0375;\n  t['numero'] = 0x2116;\n  t['nun'] = 0x05E0;\n  t['nundagesh'] = 0xFB40;\n  t['nundageshhebrew'] = 0xFB40;\n  t['nunhebrew'] = 0x05E0;\n  t['nvsquare'] = 0x33B5;\n  t['nwsquare'] = 0x33BB;\n  t['nyabengali'] = 0x099E;\n  t['nyadeva'] = 0x091E;\n  t['nyagujarati'] = 0x0A9E;\n  t['nyagurmukhi'] = 0x0A1E;\n  t['o'] = 0x006F;\n  t['oacute'] = 0x00F3;\n  t['oangthai'] = 0x0E2D;\n  t['obarred'] = 0x0275;\n  t['obarredcyrillic'] = 0x04E9;\n  t['obarreddieresiscyrillic'] = 0x04EB;\n  t['obengali'] = 0x0993;\n  t['obopomofo'] = 0x311B;\n  t['obreve'] = 0x014F;\n  t['ocandradeva'] = 0x0911;\n  t['ocandragujarati'] = 0x0A91;\n  t['ocandravowelsigndeva'] = 0x0949;\n  t['ocandravowelsigngujarati'] = 0x0AC9;\n  t['ocaron'] = 0x01D2;\n  t['ocircle'] = 0x24DE;\n  t['ocircumflex'] = 0x00F4;\n  t['ocircumflexacute'] = 0x1ED1;\n  t['ocircumflexdotbelow'] = 0x1ED9;\n  t['ocircumflexgrave'] = 0x1ED3;\n  t['ocircumflexhookabove'] = 0x1ED5;\n  t['ocircumflextilde'] = 0x1ED7;\n  t['ocyrillic'] = 0x043E;\n  t['odblacute'] = 0x0151;\n  t['odblgrave'] = 0x020D;\n  t['odeva'] = 0x0913;\n  t['odieresis'] = 0x00F6;\n  t['odieresiscyrillic'] = 0x04E7;\n  t['odotbelow'] = 0x1ECD;\n  t['oe'] = 0x0153;\n  t['oekorean'] = 0x315A;\n  t['ogonek'] = 0x02DB;\n  t['ogonekcmb'] = 0x0328;\n  t['ograve'] = 0x00F2;\n  t['ogujarati'] = 0x0A93;\n  t['oharmenian'] = 0x0585;\n  t['ohiragana'] = 0x304A;\n  t['ohookabove'] = 0x1ECF;\n  t['ohorn'] = 0x01A1;\n  t['ohornacute'] = 0x1EDB;\n  t['ohorndotbelow'] = 0x1EE3;\n  t['ohorngrave'] = 0x1EDD;\n  t['ohornhookabove'] = 0x1EDF;\n  t['ohorntilde'] = 0x1EE1;\n  t['ohungarumlaut'] = 0x0151;\n  t['oi'] = 0x01A3;\n  t['oinvertedbreve'] = 0x020F;\n  t['okatakana'] = 0x30AA;\n  t['okatakanahalfwidth'] = 0xFF75;\n  t['okorean'] = 0x3157;\n  t['olehebrew'] = 0x05AB;\n  t['omacron'] = 0x014D;\n  t['omacronacute'] = 0x1E53;\n  t['omacrongrave'] = 0x1E51;\n  t['omdeva'] = 0x0950;\n  t['omega'] = 0x03C9;\n  t['omega1'] = 0x03D6;\n  t['omegacyrillic'] = 0x0461;\n  t['omegalatinclosed'] = 0x0277;\n  t['omegaroundcyrillic'] = 0x047B;\n  t['omegatitlocyrillic'] = 0x047D;\n  t['omegatonos'] = 0x03CE;\n  t['omgujarati'] = 0x0AD0;\n  t['omicron'] = 0x03BF;\n  t['omicrontonos'] = 0x03CC;\n  t['omonospace'] = 0xFF4F;\n  t['one'] = 0x0031;\n  t['onearabic'] = 0x0661;\n  t['onebengali'] = 0x09E7;\n  t['onecircle'] = 0x2460;\n  t['onecircleinversesansserif'] = 0x278A;\n  t['onedeva'] = 0x0967;\n  t['onedotenleader'] = 0x2024;\n  t['oneeighth'] = 0x215B;\n  t['onefitted'] = 0xF6DC;\n  t['onegujarati'] = 0x0AE7;\n  t['onegurmukhi'] = 0x0A67;\n  t['onehackarabic'] = 0x0661;\n  t['onehalf'] = 0x00BD;\n  t['onehangzhou'] = 0x3021;\n  t['oneideographicparen'] = 0x3220;\n  t['oneinferior'] = 0x2081;\n  t['onemonospace'] = 0xFF11;\n  t['onenumeratorbengali'] = 0x09F4;\n  t['oneoldstyle'] = 0xF731;\n  t['oneparen'] = 0x2474;\n  t['oneperiod'] = 0x2488;\n  t['onepersian'] = 0x06F1;\n  t['onequarter'] = 0x00BC;\n  t['oneroman'] = 0x2170;\n  t['onesuperior'] = 0x00B9;\n  t['onethai'] = 0x0E51;\n  t['onethird'] = 0x2153;\n  t['oogonek'] = 0x01EB;\n  t['oogonekmacron'] = 0x01ED;\n  t['oogurmukhi'] = 0x0A13;\n  t['oomatragurmukhi'] = 0x0A4B;\n  t['oopen'] = 0x0254;\n  t['oparen'] = 0x24AA;\n  t['openbullet'] = 0x25E6;\n  t['option'] = 0x2325;\n  t['ordfeminine'] = 0x00AA;\n  t['ordmasculine'] = 0x00BA;\n  t['orthogonal'] = 0x221F;\n  t['oshortdeva'] = 0x0912;\n  t['oshortvowelsigndeva'] = 0x094A;\n  t['oslash'] = 0x00F8;\n  t['oslashacute'] = 0x01FF;\n  t['osmallhiragana'] = 0x3049;\n  t['osmallkatakana'] = 0x30A9;\n  t['osmallkatakanahalfwidth'] = 0xFF6B;\n  t['ostrokeacute'] = 0x01FF;\n  t['osuperior'] = 0xF6F0;\n  t['otcyrillic'] = 0x047F;\n  t['otilde'] = 0x00F5;\n  t['otildeacute'] = 0x1E4D;\n  t['otildedieresis'] = 0x1E4F;\n  t['oubopomofo'] = 0x3121;\n  t['overline'] = 0x203E;\n  t['overlinecenterline'] = 0xFE4A;\n  t['overlinecmb'] = 0x0305;\n  t['overlinedashed'] = 0xFE49;\n  t['overlinedblwavy'] = 0xFE4C;\n  t['overlinewavy'] = 0xFE4B;\n  t['overscore'] = 0x00AF;\n  t['ovowelsignbengali'] = 0x09CB;\n  t['ovowelsigndeva'] = 0x094B;\n  t['ovowelsigngujarati'] = 0x0ACB;\n  t['p'] = 0x0070;\n  t['paampssquare'] = 0x3380;\n  t['paasentosquare'] = 0x332B;\n  t['pabengali'] = 0x09AA;\n  t['pacute'] = 0x1E55;\n  t['padeva'] = 0x092A;\n  t['pagedown'] = 0x21DF;\n  t['pageup'] = 0x21DE;\n  t['pagujarati'] = 0x0AAA;\n  t['pagurmukhi'] = 0x0A2A;\n  t['pahiragana'] = 0x3071;\n  t['paiyannoithai'] = 0x0E2F;\n  t['pakatakana'] = 0x30D1;\n  t['palatalizationcyrilliccmb'] = 0x0484;\n  t['palochkacyrillic'] = 0x04C0;\n  t['pansioskorean'] = 0x317F;\n  t['paragraph'] = 0x00B6;\n  t['parallel'] = 0x2225;\n  t['parenleft'] = 0x0028;\n  t['parenleftaltonearabic'] = 0xFD3E;\n  t['parenleftbt'] = 0xF8ED;\n  t['parenleftex'] = 0xF8EC;\n  t['parenleftinferior'] = 0x208D;\n  t['parenleftmonospace'] = 0xFF08;\n  t['parenleftsmall'] = 0xFE59;\n  t['parenleftsuperior'] = 0x207D;\n  t['parenlefttp'] = 0xF8EB;\n  t['parenleftvertical'] = 0xFE35;\n  t['parenright'] = 0x0029;\n  t['parenrightaltonearabic'] = 0xFD3F;\n  t['parenrightbt'] = 0xF8F8;\n  t['parenrightex'] = 0xF8F7;\n  t['parenrightinferior'] = 0x208E;\n  t['parenrightmonospace'] = 0xFF09;\n  t['parenrightsmall'] = 0xFE5A;\n  t['parenrightsuperior'] = 0x207E;\n  t['parenrighttp'] = 0xF8F6;\n  t['parenrightvertical'] = 0xFE36;\n  t['partialdiff'] = 0x2202;\n  t['paseqhebrew'] = 0x05C0;\n  t['pashtahebrew'] = 0x0599;\n  t['pasquare'] = 0x33A9;\n  t['patah'] = 0x05B7;\n  t['patah11'] = 0x05B7;\n  t['patah1d'] = 0x05B7;\n  t['patah2a'] = 0x05B7;\n  t['patahhebrew'] = 0x05B7;\n  t['patahnarrowhebrew'] = 0x05B7;\n  t['patahquarterhebrew'] = 0x05B7;\n  t['patahwidehebrew'] = 0x05B7;\n  t['pazerhebrew'] = 0x05A1;\n  t['pbopomofo'] = 0x3106;\n  t['pcircle'] = 0x24DF;\n  t['pdotaccent'] = 0x1E57;\n  t['pe'] = 0x05E4;\n  t['pecyrillic'] = 0x043F;\n  t['pedagesh'] = 0xFB44;\n  t['pedageshhebrew'] = 0xFB44;\n  t['peezisquare'] = 0x333B;\n  t['pefinaldageshhebrew'] = 0xFB43;\n  t['peharabic'] = 0x067E;\n  t['peharmenian'] = 0x057A;\n  t['pehebrew'] = 0x05E4;\n  t['pehfinalarabic'] = 0xFB57;\n  t['pehinitialarabic'] = 0xFB58;\n  t['pehiragana'] = 0x307A;\n  t['pehmedialarabic'] = 0xFB59;\n  t['pekatakana'] = 0x30DA;\n  t['pemiddlehookcyrillic'] = 0x04A7;\n  t['perafehebrew'] = 0xFB4E;\n  t['percent'] = 0x0025;\n  t['percentarabic'] = 0x066A;\n  t['percentmonospace'] = 0xFF05;\n  t['percentsmall'] = 0xFE6A;\n  t['period'] = 0x002E;\n  t['periodarmenian'] = 0x0589;\n  t['periodcentered'] = 0x00B7;\n  t['periodhalfwidth'] = 0xFF61;\n  t['periodinferior'] = 0xF6E7;\n  t['periodmonospace'] = 0xFF0E;\n  t['periodsmall'] = 0xFE52;\n  t['periodsuperior'] = 0xF6E8;\n  t['perispomenigreekcmb'] = 0x0342;\n  t['perpendicular'] = 0x22A5;\n  t['perthousand'] = 0x2030;\n  t['peseta'] = 0x20A7;\n  t['pfsquare'] = 0x338A;\n  t['phabengali'] = 0x09AB;\n  t['phadeva'] = 0x092B;\n  t['phagujarati'] = 0x0AAB;\n  t['phagurmukhi'] = 0x0A2B;\n  t['phi'] = 0x03C6;\n  t['phi1'] = 0x03D5;\n  t['phieuphacirclekorean'] = 0x327A;\n  t['phieuphaparenkorean'] = 0x321A;\n  t['phieuphcirclekorean'] = 0x326C;\n  t['phieuphkorean'] = 0x314D;\n  t['phieuphparenkorean'] = 0x320C;\n  t['philatin'] = 0x0278;\n  t['phinthuthai'] = 0x0E3A;\n  t['phisymbolgreek'] = 0x03D5;\n  t['phook'] = 0x01A5;\n  t['phophanthai'] = 0x0E1E;\n  t['phophungthai'] = 0x0E1C;\n  t['phosamphaothai'] = 0x0E20;\n  t['pi'] = 0x03C0;\n  t['pieupacirclekorean'] = 0x3273;\n  t['pieupaparenkorean'] = 0x3213;\n  t['pieupcieuckorean'] = 0x3176;\n  t['pieupcirclekorean'] = 0x3265;\n  t['pieupkiyeokkorean'] = 0x3172;\n  t['pieupkorean'] = 0x3142;\n  t['pieupparenkorean'] = 0x3205;\n  t['pieupsioskiyeokkorean'] = 0x3174;\n  t['pieupsioskorean'] = 0x3144;\n  t['pieupsiostikeutkorean'] = 0x3175;\n  t['pieupthieuthkorean'] = 0x3177;\n  t['pieuptikeutkorean'] = 0x3173;\n  t['pihiragana'] = 0x3074;\n  t['pikatakana'] = 0x30D4;\n  t['pisymbolgreek'] = 0x03D6;\n  t['piwrarmenian'] = 0x0583;\n  t['plus'] = 0x002B;\n  t['plusbelowcmb'] = 0x031F;\n  t['pluscircle'] = 0x2295;\n  t['plusminus'] = 0x00B1;\n  t['plusmod'] = 0x02D6;\n  t['plusmonospace'] = 0xFF0B;\n  t['plussmall'] = 0xFE62;\n  t['plussuperior'] = 0x207A;\n  t['pmonospace'] = 0xFF50;\n  t['pmsquare'] = 0x33D8;\n  t['pohiragana'] = 0x307D;\n  t['pointingindexdownwhite'] = 0x261F;\n  t['pointingindexleftwhite'] = 0x261C;\n  t['pointingindexrightwhite'] = 0x261E;\n  t['pointingindexupwhite'] = 0x261D;\n  t['pokatakana'] = 0x30DD;\n  t['poplathai'] = 0x0E1B;\n  t['postalmark'] = 0x3012;\n  t['postalmarkface'] = 0x3020;\n  t['pparen'] = 0x24AB;\n  t['precedes'] = 0x227A;\n  t['prescription'] = 0x211E;\n  t['primemod'] = 0x02B9;\n  t['primereversed'] = 0x2035;\n  t['product'] = 0x220F;\n  t['projective'] = 0x2305;\n  t['prolongedkana'] = 0x30FC;\n  t['propellor'] = 0x2318;\n  t['propersubset'] = 0x2282;\n  t['propersuperset'] = 0x2283;\n  t['proportion'] = 0x2237;\n  t['proportional'] = 0x221D;\n  t['psi'] = 0x03C8;\n  t['psicyrillic'] = 0x0471;\n  t['psilipneumatacyrilliccmb'] = 0x0486;\n  t['pssquare'] = 0x33B0;\n  t['puhiragana'] = 0x3077;\n  t['pukatakana'] = 0x30D7;\n  t['pvsquare'] = 0x33B4;\n  t['pwsquare'] = 0x33BA;\n  t['q'] = 0x0071;\n  t['qadeva'] = 0x0958;\n  t['qadmahebrew'] = 0x05A8;\n  t['qafarabic'] = 0x0642;\n  t['qaffinalarabic'] = 0xFED6;\n  t['qafinitialarabic'] = 0xFED7;\n  t['qafmedialarabic'] = 0xFED8;\n  t['qamats'] = 0x05B8;\n  t['qamats10'] = 0x05B8;\n  t['qamats1a'] = 0x05B8;\n  t['qamats1c'] = 0x05B8;\n  t['qamats27'] = 0x05B8;\n  t['qamats29'] = 0x05B8;\n  t['qamats33'] = 0x05B8;\n  t['qamatsde'] = 0x05B8;\n  t['qamatshebrew'] = 0x05B8;\n  t['qamatsnarrowhebrew'] = 0x05B8;\n  t['qamatsqatanhebrew'] = 0x05B8;\n  t['qamatsqatannarrowhebrew'] = 0x05B8;\n  t['qamatsqatanquarterhebrew'] = 0x05B8;\n  t['qamatsqatanwidehebrew'] = 0x05B8;\n  t['qamatsquarterhebrew'] = 0x05B8;\n  t['qamatswidehebrew'] = 0x05B8;\n  t['qarneyparahebrew'] = 0x059F;\n  t['qbopomofo'] = 0x3111;\n  t['qcircle'] = 0x24E0;\n  t['qhook'] = 0x02A0;\n  t['qmonospace'] = 0xFF51;\n  t['qof'] = 0x05E7;\n  t['qofdagesh'] = 0xFB47;\n  t['qofdageshhebrew'] = 0xFB47;\n  t['qofhebrew'] = 0x05E7;\n  t['qparen'] = 0x24AC;\n  t['quarternote'] = 0x2669;\n  t['qubuts'] = 0x05BB;\n  t['qubuts18'] = 0x05BB;\n  t['qubuts25'] = 0x05BB;\n  t['qubuts31'] = 0x05BB;\n  t['qubutshebrew'] = 0x05BB;\n  t['qubutsnarrowhebrew'] = 0x05BB;\n  t['qubutsquarterhebrew'] = 0x05BB;\n  t['qubutswidehebrew'] = 0x05BB;\n  t['question'] = 0x003F;\n  t['questionarabic'] = 0x061F;\n  t['questionarmenian'] = 0x055E;\n  t['questiondown'] = 0x00BF;\n  t['questiondownsmall'] = 0xF7BF;\n  t['questiongreek'] = 0x037E;\n  t['questionmonospace'] = 0xFF1F;\n  t['questionsmall'] = 0xF73F;\n  t['quotedbl'] = 0x0022;\n  t['quotedblbase'] = 0x201E;\n  t['quotedblleft'] = 0x201C;\n  t['quotedblmonospace'] = 0xFF02;\n  t['quotedblprime'] = 0x301E;\n  t['quotedblprimereversed'] = 0x301D;\n  t['quotedblright'] = 0x201D;\n  t['quoteleft'] = 0x2018;\n  t['quoteleftreversed'] = 0x201B;\n  t['quotereversed'] = 0x201B;\n  t['quoteright'] = 0x2019;\n  t['quoterightn'] = 0x0149;\n  t['quotesinglbase'] = 0x201A;\n  t['quotesingle'] = 0x0027;\n  t['quotesinglemonospace'] = 0xFF07;\n  t['r'] = 0x0072;\n  t['raarmenian'] = 0x057C;\n  t['rabengali'] = 0x09B0;\n  t['racute'] = 0x0155;\n  t['radeva'] = 0x0930;\n  t['radical'] = 0x221A;\n  t['radicalex'] = 0xF8E5;\n  t['radoverssquare'] = 0x33AE;\n  t['radoverssquaredsquare'] = 0x33AF;\n  t['radsquare'] = 0x33AD;\n  t['rafe'] = 0x05BF;\n  t['rafehebrew'] = 0x05BF;\n  t['ragujarati'] = 0x0AB0;\n  t['ragurmukhi'] = 0x0A30;\n  t['rahiragana'] = 0x3089;\n  t['rakatakana'] = 0x30E9;\n  t['rakatakanahalfwidth'] = 0xFF97;\n  t['ralowerdiagonalbengali'] = 0x09F1;\n  t['ramiddlediagonalbengali'] = 0x09F0;\n  t['ramshorn'] = 0x0264;\n  t['ratio'] = 0x2236;\n  t['rbopomofo'] = 0x3116;\n  t['rcaron'] = 0x0159;\n  t['rcedilla'] = 0x0157;\n  t['rcircle'] = 0x24E1;\n  t['rcommaaccent'] = 0x0157;\n  t['rdblgrave'] = 0x0211;\n  t['rdotaccent'] = 0x1E59;\n  t['rdotbelow'] = 0x1E5B;\n  t['rdotbelowmacron'] = 0x1E5D;\n  t['referencemark'] = 0x203B;\n  t['reflexsubset'] = 0x2286;\n  t['reflexsuperset'] = 0x2287;\n  t['registered'] = 0x00AE;\n  t['registersans'] = 0xF8E8;\n  t['registerserif'] = 0xF6DA;\n  t['reharabic'] = 0x0631;\n  t['reharmenian'] = 0x0580;\n  t['rehfinalarabic'] = 0xFEAE;\n  t['rehiragana'] = 0x308C;\n  t['rekatakana'] = 0x30EC;\n  t['rekatakanahalfwidth'] = 0xFF9A;\n  t['resh'] = 0x05E8;\n  t['reshdageshhebrew'] = 0xFB48;\n  t['reshhebrew'] = 0x05E8;\n  t['reversedtilde'] = 0x223D;\n  t['reviahebrew'] = 0x0597;\n  t['reviamugrashhebrew'] = 0x0597;\n  t['revlogicalnot'] = 0x2310;\n  t['rfishhook'] = 0x027E;\n  t['rfishhookreversed'] = 0x027F;\n  t['rhabengali'] = 0x09DD;\n  t['rhadeva'] = 0x095D;\n  t['rho'] = 0x03C1;\n  t['rhook'] = 0x027D;\n  t['rhookturned'] = 0x027B;\n  t['rhookturnedsuperior'] = 0x02B5;\n  t['rhosymbolgreek'] = 0x03F1;\n  t['rhotichookmod'] = 0x02DE;\n  t['rieulacirclekorean'] = 0x3271;\n  t['rieulaparenkorean'] = 0x3211;\n  t['rieulcirclekorean'] = 0x3263;\n  t['rieulhieuhkorean'] = 0x3140;\n  t['rieulkiyeokkorean'] = 0x313A;\n  t['rieulkiyeoksioskorean'] = 0x3169;\n  t['rieulkorean'] = 0x3139;\n  t['rieulmieumkorean'] = 0x313B;\n  t['rieulpansioskorean'] = 0x316C;\n  t['rieulparenkorean'] = 0x3203;\n  t['rieulphieuphkorean'] = 0x313F;\n  t['rieulpieupkorean'] = 0x313C;\n  t['rieulpieupsioskorean'] = 0x316B;\n  t['rieulsioskorean'] = 0x313D;\n  t['rieulthieuthkorean'] = 0x313E;\n  t['rieultikeutkorean'] = 0x316A;\n  t['rieulyeorinhieuhkorean'] = 0x316D;\n  t['rightangle'] = 0x221F;\n  t['righttackbelowcmb'] = 0x0319;\n  t['righttriangle'] = 0x22BF;\n  t['rihiragana'] = 0x308A;\n  t['rikatakana'] = 0x30EA;\n  t['rikatakanahalfwidth'] = 0xFF98;\n  t['ring'] = 0x02DA;\n  t['ringbelowcmb'] = 0x0325;\n  t['ringcmb'] = 0x030A;\n  t['ringhalfleft'] = 0x02BF;\n  t['ringhalfleftarmenian'] = 0x0559;\n  t['ringhalfleftbelowcmb'] = 0x031C;\n  t['ringhalfleftcentered'] = 0x02D3;\n  t['ringhalfright'] = 0x02BE;\n  t['ringhalfrightbelowcmb'] = 0x0339;\n  t['ringhalfrightcentered'] = 0x02D2;\n  t['rinvertedbreve'] = 0x0213;\n  t['rittorusquare'] = 0x3351;\n  t['rlinebelow'] = 0x1E5F;\n  t['rlongleg'] = 0x027C;\n  t['rlonglegturned'] = 0x027A;\n  t['rmonospace'] = 0xFF52;\n  t['rohiragana'] = 0x308D;\n  t['rokatakana'] = 0x30ED;\n  t['rokatakanahalfwidth'] = 0xFF9B;\n  t['roruathai'] = 0x0E23;\n  t['rparen'] = 0x24AD;\n  t['rrabengali'] = 0x09DC;\n  t['rradeva'] = 0x0931;\n  t['rragurmukhi'] = 0x0A5C;\n  t['rreharabic'] = 0x0691;\n  t['rrehfinalarabic'] = 0xFB8D;\n  t['rrvocalicbengali'] = 0x09E0;\n  t['rrvocalicdeva'] = 0x0960;\n  t['rrvocalicgujarati'] = 0x0AE0;\n  t['rrvocalicvowelsignbengali'] = 0x09C4;\n  t['rrvocalicvowelsigndeva'] = 0x0944;\n  t['rrvocalicvowelsigngujarati'] = 0x0AC4;\n  t['rsuperior'] = 0xF6F1;\n  t['rtblock'] = 0x2590;\n  t['rturned'] = 0x0279;\n  t['rturnedsuperior'] = 0x02B4;\n  t['ruhiragana'] = 0x308B;\n  t['rukatakana'] = 0x30EB;\n  t['rukatakanahalfwidth'] = 0xFF99;\n  t['rupeemarkbengali'] = 0x09F2;\n  t['rupeesignbengali'] = 0x09F3;\n  t['rupiah'] = 0xF6DD;\n  t['ruthai'] = 0x0E24;\n  t['rvocalicbengali'] = 0x098B;\n  t['rvocalicdeva'] = 0x090B;\n  t['rvocalicgujarati'] = 0x0A8B;\n  t['rvocalicvowelsignbengali'] = 0x09C3;\n  t['rvocalicvowelsigndeva'] = 0x0943;\n  t['rvocalicvowelsigngujarati'] = 0x0AC3;\n  t['s'] = 0x0073;\n  t['sabengali'] = 0x09B8;\n  t['sacute'] = 0x015B;\n  t['sacutedotaccent'] = 0x1E65;\n  t['sadarabic'] = 0x0635;\n  t['sadeva'] = 0x0938;\n  t['sadfinalarabic'] = 0xFEBA;\n  t['sadinitialarabic'] = 0xFEBB;\n  t['sadmedialarabic'] = 0xFEBC;\n  t['sagujarati'] = 0x0AB8;\n  t['sagurmukhi'] = 0x0A38;\n  t['sahiragana'] = 0x3055;\n  t['sakatakana'] = 0x30B5;\n  t['sakatakanahalfwidth'] = 0xFF7B;\n  t['sallallahoualayhewasallamarabic'] = 0xFDFA;\n  t['samekh'] = 0x05E1;\n  t['samekhdagesh'] = 0xFB41;\n  t['samekhdageshhebrew'] = 0xFB41;\n  t['samekhhebrew'] = 0x05E1;\n  t['saraaathai'] = 0x0E32;\n  t['saraaethai'] = 0x0E41;\n  t['saraaimaimalaithai'] = 0x0E44;\n  t['saraaimaimuanthai'] = 0x0E43;\n  t['saraamthai'] = 0x0E33;\n  t['saraathai'] = 0x0E30;\n  t['saraethai'] = 0x0E40;\n  t['saraiileftthai'] = 0xF886;\n  t['saraiithai'] = 0x0E35;\n  t['saraileftthai'] = 0xF885;\n  t['saraithai'] = 0x0E34;\n  t['saraothai'] = 0x0E42;\n  t['saraueeleftthai'] = 0xF888;\n  t['saraueethai'] = 0x0E37;\n  t['saraueleftthai'] = 0xF887;\n  t['sarauethai'] = 0x0E36;\n  t['sarauthai'] = 0x0E38;\n  t['sarauuthai'] = 0x0E39;\n  t['sbopomofo'] = 0x3119;\n  t['scaron'] = 0x0161;\n  t['scarondotaccent'] = 0x1E67;\n  t['scedilla'] = 0x015F;\n  t['schwa'] = 0x0259;\n  t['schwacyrillic'] = 0x04D9;\n  t['schwadieresiscyrillic'] = 0x04DB;\n  t['schwahook'] = 0x025A;\n  t['scircle'] = 0x24E2;\n  t['scircumflex'] = 0x015D;\n  t['scommaaccent'] = 0x0219;\n  t['sdotaccent'] = 0x1E61;\n  t['sdotbelow'] = 0x1E63;\n  t['sdotbelowdotaccent'] = 0x1E69;\n  t['seagullbelowcmb'] = 0x033C;\n  t['second'] = 0x2033;\n  t['secondtonechinese'] = 0x02CA;\n  t['section'] = 0x00A7;\n  t['seenarabic'] = 0x0633;\n  t['seenfinalarabic'] = 0xFEB2;\n  t['seeninitialarabic'] = 0xFEB3;\n  t['seenmedialarabic'] = 0xFEB4;\n  t['segol'] = 0x05B6;\n  t['segol13'] = 0x05B6;\n  t['segol1f'] = 0x05B6;\n  t['segol2c'] = 0x05B6;\n  t['segolhebrew'] = 0x05B6;\n  t['segolnarrowhebrew'] = 0x05B6;\n  t['segolquarterhebrew'] = 0x05B6;\n  t['segoltahebrew'] = 0x0592;\n  t['segolwidehebrew'] = 0x05B6;\n  t['seharmenian'] = 0x057D;\n  t['sehiragana'] = 0x305B;\n  t['sekatakana'] = 0x30BB;\n  t['sekatakanahalfwidth'] = 0xFF7E;\n  t['semicolon'] = 0x003B;\n  t['semicolonarabic'] = 0x061B;\n  t['semicolonmonospace'] = 0xFF1B;\n  t['semicolonsmall'] = 0xFE54;\n  t['semivoicedmarkkana'] = 0x309C;\n  t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\n  t['sentisquare'] = 0x3322;\n  t['sentosquare'] = 0x3323;\n  t['seven'] = 0x0037;\n  t['sevenarabic'] = 0x0667;\n  t['sevenbengali'] = 0x09ED;\n  t['sevencircle'] = 0x2466;\n  t['sevencircleinversesansserif'] = 0x2790;\n  t['sevendeva'] = 0x096D;\n  t['seveneighths'] = 0x215E;\n  t['sevengujarati'] = 0x0AED;\n  t['sevengurmukhi'] = 0x0A6D;\n  t['sevenhackarabic'] = 0x0667;\n  t['sevenhangzhou'] = 0x3027;\n  t['sevenideographicparen'] = 0x3226;\n  t['seveninferior'] = 0x2087;\n  t['sevenmonospace'] = 0xFF17;\n  t['sevenoldstyle'] = 0xF737;\n  t['sevenparen'] = 0x247A;\n  t['sevenperiod'] = 0x248E;\n  t['sevenpersian'] = 0x06F7;\n  t['sevenroman'] = 0x2176;\n  t['sevensuperior'] = 0x2077;\n  t['seventeencircle'] = 0x2470;\n  t['seventeenparen'] = 0x2484;\n  t['seventeenperiod'] = 0x2498;\n  t['seventhai'] = 0x0E57;\n  t['sfthyphen'] = 0x00AD;\n  t['shaarmenian'] = 0x0577;\n  t['shabengali'] = 0x09B6;\n  t['shacyrillic'] = 0x0448;\n  t['shaddaarabic'] = 0x0651;\n  t['shaddadammaarabic'] = 0xFC61;\n  t['shaddadammatanarabic'] = 0xFC5E;\n  t['shaddafathaarabic'] = 0xFC60;\n  t['shaddakasraarabic'] = 0xFC62;\n  t['shaddakasratanarabic'] = 0xFC5F;\n  t['shade'] = 0x2592;\n  t['shadedark'] = 0x2593;\n  t['shadelight'] = 0x2591;\n  t['shademedium'] = 0x2592;\n  t['shadeva'] = 0x0936;\n  t['shagujarati'] = 0x0AB6;\n  t['shagurmukhi'] = 0x0A36;\n  t['shalshelethebrew'] = 0x0593;\n  t['shbopomofo'] = 0x3115;\n  t['shchacyrillic'] = 0x0449;\n  t['sheenarabic'] = 0x0634;\n  t['sheenfinalarabic'] = 0xFEB6;\n  t['sheeninitialarabic'] = 0xFEB7;\n  t['sheenmedialarabic'] = 0xFEB8;\n  t['sheicoptic'] = 0x03E3;\n  t['sheqel'] = 0x20AA;\n  t['sheqelhebrew'] = 0x20AA;\n  t['sheva'] = 0x05B0;\n  t['sheva115'] = 0x05B0;\n  t['sheva15'] = 0x05B0;\n  t['sheva22'] = 0x05B0;\n  t['sheva2e'] = 0x05B0;\n  t['shevahebrew'] = 0x05B0;\n  t['shevanarrowhebrew'] = 0x05B0;\n  t['shevaquarterhebrew'] = 0x05B0;\n  t['shevawidehebrew'] = 0x05B0;\n  t['shhacyrillic'] = 0x04BB;\n  t['shimacoptic'] = 0x03ED;\n  t['shin'] = 0x05E9;\n  t['shindagesh'] = 0xFB49;\n  t['shindageshhebrew'] = 0xFB49;\n  t['shindageshshindot'] = 0xFB2C;\n  t['shindageshshindothebrew'] = 0xFB2C;\n  t['shindageshsindot'] = 0xFB2D;\n  t['shindageshsindothebrew'] = 0xFB2D;\n  t['shindothebrew'] = 0x05C1;\n  t['shinhebrew'] = 0x05E9;\n  t['shinshindot'] = 0xFB2A;\n  t['shinshindothebrew'] = 0xFB2A;\n  t['shinsindot'] = 0xFB2B;\n  t['shinsindothebrew'] = 0xFB2B;\n  t['shook'] = 0x0282;\n  t['sigma'] = 0x03C3;\n  t['sigma1'] = 0x03C2;\n  t['sigmafinal'] = 0x03C2;\n  t['sigmalunatesymbolgreek'] = 0x03F2;\n  t['sihiragana'] = 0x3057;\n  t['sikatakana'] = 0x30B7;\n  t['sikatakanahalfwidth'] = 0xFF7C;\n  t['siluqhebrew'] = 0x05BD;\n  t['siluqlefthebrew'] = 0x05BD;\n  t['similar'] = 0x223C;\n  t['sindothebrew'] = 0x05C2;\n  t['siosacirclekorean'] = 0x3274;\n  t['siosaparenkorean'] = 0x3214;\n  t['sioscieuckorean'] = 0x317E;\n  t['sioscirclekorean'] = 0x3266;\n  t['sioskiyeokkorean'] = 0x317A;\n  t['sioskorean'] = 0x3145;\n  t['siosnieunkorean'] = 0x317B;\n  t['siosparenkorean'] = 0x3206;\n  t['siospieupkorean'] = 0x317D;\n  t['siostikeutkorean'] = 0x317C;\n  t['six'] = 0x0036;\n  t['sixarabic'] = 0x0666;\n  t['sixbengali'] = 0x09EC;\n  t['sixcircle'] = 0x2465;\n  t['sixcircleinversesansserif'] = 0x278F;\n  t['sixdeva'] = 0x096C;\n  t['sixgujarati'] = 0x0AEC;\n  t['sixgurmukhi'] = 0x0A6C;\n  t['sixhackarabic'] = 0x0666;\n  t['sixhangzhou'] = 0x3026;\n  t['sixideographicparen'] = 0x3225;\n  t['sixinferior'] = 0x2086;\n  t['sixmonospace'] = 0xFF16;\n  t['sixoldstyle'] = 0xF736;\n  t['sixparen'] = 0x2479;\n  t['sixperiod'] = 0x248D;\n  t['sixpersian'] = 0x06F6;\n  t['sixroman'] = 0x2175;\n  t['sixsuperior'] = 0x2076;\n  t['sixteencircle'] = 0x246F;\n  t['sixteencurrencydenominatorbengali'] = 0x09F9;\n  t['sixteenparen'] = 0x2483;\n  t['sixteenperiod'] = 0x2497;\n  t['sixthai'] = 0x0E56;\n  t['slash'] = 0x002F;\n  t['slashmonospace'] = 0xFF0F;\n  t['slong'] = 0x017F;\n  t['slongdotaccent'] = 0x1E9B;\n  t['smileface'] = 0x263A;\n  t['smonospace'] = 0xFF53;\n  t['sofpasuqhebrew'] = 0x05C3;\n  t['softhyphen'] = 0x00AD;\n  t['softsigncyrillic'] = 0x044C;\n  t['sohiragana'] = 0x305D;\n  t['sokatakana'] = 0x30BD;\n  t['sokatakanahalfwidth'] = 0xFF7F;\n  t['soliduslongoverlaycmb'] = 0x0338;\n  t['solidusshortoverlaycmb'] = 0x0337;\n  t['sorusithai'] = 0x0E29;\n  t['sosalathai'] = 0x0E28;\n  t['sosothai'] = 0x0E0B;\n  t['sosuathai'] = 0x0E2A;\n  t['space'] = 0x0020;\n  t['spacehackarabic'] = 0x0020;\n  t['spade'] = 0x2660;\n  t['spadesuitblack'] = 0x2660;\n  t['spadesuitwhite'] = 0x2664;\n  t['sparen'] = 0x24AE;\n  t['squarebelowcmb'] = 0x033B;\n  t['squarecc'] = 0x33C4;\n  t['squarecm'] = 0x339D;\n  t['squarediagonalcrosshatchfill'] = 0x25A9;\n  t['squarehorizontalfill'] = 0x25A4;\n  t['squarekg'] = 0x338F;\n  t['squarekm'] = 0x339E;\n  t['squarekmcapital'] = 0x33CE;\n  t['squareln'] = 0x33D1;\n  t['squarelog'] = 0x33D2;\n  t['squaremg'] = 0x338E;\n  t['squaremil'] = 0x33D5;\n  t['squaremm'] = 0x339C;\n  t['squaremsquared'] = 0x33A1;\n  t['squareorthogonalcrosshatchfill'] = 0x25A6;\n  t['squareupperlefttolowerrightfill'] = 0x25A7;\n  t['squareupperrighttolowerleftfill'] = 0x25A8;\n  t['squareverticalfill'] = 0x25A5;\n  t['squarewhitewithsmallblack'] = 0x25A3;\n  t['srsquare'] = 0x33DB;\n  t['ssabengali'] = 0x09B7;\n  t['ssadeva'] = 0x0937;\n  t['ssagujarati'] = 0x0AB7;\n  t['ssangcieuckorean'] = 0x3149;\n  t['ssanghieuhkorean'] = 0x3185;\n  t['ssangieungkorean'] = 0x3180;\n  t['ssangkiyeokkorean'] = 0x3132;\n  t['ssangnieunkorean'] = 0x3165;\n  t['ssangpieupkorean'] = 0x3143;\n  t['ssangsioskorean'] = 0x3146;\n  t['ssangtikeutkorean'] = 0x3138;\n  t['ssuperior'] = 0xF6F2;\n  t['sterling'] = 0x00A3;\n  t['sterlingmonospace'] = 0xFFE1;\n  t['strokelongoverlaycmb'] = 0x0336;\n  t['strokeshortoverlaycmb'] = 0x0335;\n  t['subset'] = 0x2282;\n  t['subsetnotequal'] = 0x228A;\n  t['subsetorequal'] = 0x2286;\n  t['succeeds'] = 0x227B;\n  t['suchthat'] = 0x220B;\n  t['suhiragana'] = 0x3059;\n  t['sukatakana'] = 0x30B9;\n  t['sukatakanahalfwidth'] = 0xFF7D;\n  t['sukunarabic'] = 0x0652;\n  t['summation'] = 0x2211;\n  t['sun'] = 0x263C;\n  t['superset'] = 0x2283;\n  t['supersetnotequal'] = 0x228B;\n  t['supersetorequal'] = 0x2287;\n  t['svsquare'] = 0x33DC;\n  t['syouwaerasquare'] = 0x337C;\n  t['t'] = 0x0074;\n  t['tabengali'] = 0x09A4;\n  t['tackdown'] = 0x22A4;\n  t['tackleft'] = 0x22A3;\n  t['tadeva'] = 0x0924;\n  t['tagujarati'] = 0x0AA4;\n  t['tagurmukhi'] = 0x0A24;\n  t['taharabic'] = 0x0637;\n  t['tahfinalarabic'] = 0xFEC2;\n  t['tahinitialarabic'] = 0xFEC3;\n  t['tahiragana'] = 0x305F;\n  t['tahmedialarabic'] = 0xFEC4;\n  t['taisyouerasquare'] = 0x337D;\n  t['takatakana'] = 0x30BF;\n  t['takatakanahalfwidth'] = 0xFF80;\n  t['tatweelarabic'] = 0x0640;\n  t['tau'] = 0x03C4;\n  t['tav'] = 0x05EA;\n  t['tavdages'] = 0xFB4A;\n  t['tavdagesh'] = 0xFB4A;\n  t['tavdageshhebrew'] = 0xFB4A;\n  t['tavhebrew'] = 0x05EA;\n  t['tbar'] = 0x0167;\n  t['tbopomofo'] = 0x310A;\n  t['tcaron'] = 0x0165;\n  t['tccurl'] = 0x02A8;\n  t['tcedilla'] = 0x0163;\n  t['tcheharabic'] = 0x0686;\n  t['tchehfinalarabic'] = 0xFB7B;\n  t['tchehinitialarabic'] = 0xFB7C;\n  t['tchehmedialarabic'] = 0xFB7D;\n  t['tcircle'] = 0x24E3;\n  t['tcircumflexbelow'] = 0x1E71;\n  t['tcommaaccent'] = 0x0163;\n  t['tdieresis'] = 0x1E97;\n  t['tdotaccent'] = 0x1E6B;\n  t['tdotbelow'] = 0x1E6D;\n  t['tecyrillic'] = 0x0442;\n  t['tedescendercyrillic'] = 0x04AD;\n  t['teharabic'] = 0x062A;\n  t['tehfinalarabic'] = 0xFE96;\n  t['tehhahinitialarabic'] = 0xFCA2;\n  t['tehhahisolatedarabic'] = 0xFC0C;\n  t['tehinitialarabic'] = 0xFE97;\n  t['tehiragana'] = 0x3066;\n  t['tehjeeminitialarabic'] = 0xFCA1;\n  t['tehjeemisolatedarabic'] = 0xFC0B;\n  t['tehmarbutaarabic'] = 0x0629;\n  t['tehmarbutafinalarabic'] = 0xFE94;\n  t['tehmedialarabic'] = 0xFE98;\n  t['tehmeeminitialarabic'] = 0xFCA4;\n  t['tehmeemisolatedarabic'] = 0xFC0E;\n  t['tehnoonfinalarabic'] = 0xFC73;\n  t['tekatakana'] = 0x30C6;\n  t['tekatakanahalfwidth'] = 0xFF83;\n  t['telephone'] = 0x2121;\n  t['telephoneblack'] = 0x260E;\n  t['telishagedolahebrew'] = 0x05A0;\n  t['telishaqetanahebrew'] = 0x05A9;\n  t['tencircle'] = 0x2469;\n  t['tenideographicparen'] = 0x3229;\n  t['tenparen'] = 0x247D;\n  t['tenperiod'] = 0x2491;\n  t['tenroman'] = 0x2179;\n  t['tesh'] = 0x02A7;\n  t['tet'] = 0x05D8;\n  t['tetdagesh'] = 0xFB38;\n  t['tetdageshhebrew'] = 0xFB38;\n  t['tethebrew'] = 0x05D8;\n  t['tetsecyrillic'] = 0x04B5;\n  t['tevirhebrew'] = 0x059B;\n  t['tevirlefthebrew'] = 0x059B;\n  t['thabengali'] = 0x09A5;\n  t['thadeva'] = 0x0925;\n  t['thagujarati'] = 0x0AA5;\n  t['thagurmukhi'] = 0x0A25;\n  t['thalarabic'] = 0x0630;\n  t['thalfinalarabic'] = 0xFEAC;\n  t['thanthakhatlowleftthai'] = 0xF898;\n  t['thanthakhatlowrightthai'] = 0xF897;\n  t['thanthakhatthai'] = 0x0E4C;\n  t['thanthakhatupperleftthai'] = 0xF896;\n  t['theharabic'] = 0x062B;\n  t['thehfinalarabic'] = 0xFE9A;\n  t['thehinitialarabic'] = 0xFE9B;\n  t['thehmedialarabic'] = 0xFE9C;\n  t['thereexists'] = 0x2203;\n  t['therefore'] = 0x2234;\n  t['theta'] = 0x03B8;\n  t['theta1'] = 0x03D1;\n  t['thetasymbolgreek'] = 0x03D1;\n  t['thieuthacirclekorean'] = 0x3279;\n  t['thieuthaparenkorean'] = 0x3219;\n  t['thieuthcirclekorean'] = 0x326B;\n  t['thieuthkorean'] = 0x314C;\n  t['thieuthparenkorean'] = 0x320B;\n  t['thirteencircle'] = 0x246C;\n  t['thirteenparen'] = 0x2480;\n  t['thirteenperiod'] = 0x2494;\n  t['thonangmonthothai'] = 0x0E11;\n  t['thook'] = 0x01AD;\n  t['thophuthaothai'] = 0x0E12;\n  t['thorn'] = 0x00FE;\n  t['thothahanthai'] = 0x0E17;\n  t['thothanthai'] = 0x0E10;\n  t['thothongthai'] = 0x0E18;\n  t['thothungthai'] = 0x0E16;\n  t['thousandcyrillic'] = 0x0482;\n  t['thousandsseparatorarabic'] = 0x066C;\n  t['thousandsseparatorpersian'] = 0x066C;\n  t['three'] = 0x0033;\n  t['threearabic'] = 0x0663;\n  t['threebengali'] = 0x09E9;\n  t['threecircle'] = 0x2462;\n  t['threecircleinversesansserif'] = 0x278C;\n  t['threedeva'] = 0x0969;\n  t['threeeighths'] = 0x215C;\n  t['threegujarati'] = 0x0AE9;\n  t['threegurmukhi'] = 0x0A69;\n  t['threehackarabic'] = 0x0663;\n  t['threehangzhou'] = 0x3023;\n  t['threeideographicparen'] = 0x3222;\n  t['threeinferior'] = 0x2083;\n  t['threemonospace'] = 0xFF13;\n  t['threenumeratorbengali'] = 0x09F6;\n  t['threeoldstyle'] = 0xF733;\n  t['threeparen'] = 0x2476;\n  t['threeperiod'] = 0x248A;\n  t['threepersian'] = 0x06F3;\n  t['threequarters'] = 0x00BE;\n  t['threequartersemdash'] = 0xF6DE;\n  t['threeroman'] = 0x2172;\n  t['threesuperior'] = 0x00B3;\n  t['threethai'] = 0x0E53;\n  t['thzsquare'] = 0x3394;\n  t['tihiragana'] = 0x3061;\n  t['tikatakana'] = 0x30C1;\n  t['tikatakanahalfwidth'] = 0xFF81;\n  t['tikeutacirclekorean'] = 0x3270;\n  t['tikeutaparenkorean'] = 0x3210;\n  t['tikeutcirclekorean'] = 0x3262;\n  t['tikeutkorean'] = 0x3137;\n  t['tikeutparenkorean'] = 0x3202;\n  t['tilde'] = 0x02DC;\n  t['tildebelowcmb'] = 0x0330;\n  t['tildecmb'] = 0x0303;\n  t['tildecomb'] = 0x0303;\n  t['tildedoublecmb'] = 0x0360;\n  t['tildeoperator'] = 0x223C;\n  t['tildeoverlaycmb'] = 0x0334;\n  t['tildeverticalcmb'] = 0x033E;\n  t['timescircle'] = 0x2297;\n  t['tipehahebrew'] = 0x0596;\n  t['tipehalefthebrew'] = 0x0596;\n  t['tippigurmukhi'] = 0x0A70;\n  t['titlocyrilliccmb'] = 0x0483;\n  t['tiwnarmenian'] = 0x057F;\n  t['tlinebelow'] = 0x1E6F;\n  t['tmonospace'] = 0xFF54;\n  t['toarmenian'] = 0x0569;\n  t['tohiragana'] = 0x3068;\n  t['tokatakana'] = 0x30C8;\n  t['tokatakanahalfwidth'] = 0xFF84;\n  t['tonebarextrahighmod'] = 0x02E5;\n  t['tonebarextralowmod'] = 0x02E9;\n  t['tonebarhighmod'] = 0x02E6;\n  t['tonebarlowmod'] = 0x02E8;\n  t['tonebarmidmod'] = 0x02E7;\n  t['tonefive'] = 0x01BD;\n  t['tonesix'] = 0x0185;\n  t['tonetwo'] = 0x01A8;\n  t['tonos'] = 0x0384;\n  t['tonsquare'] = 0x3327;\n  t['topatakthai'] = 0x0E0F;\n  t['tortoiseshellbracketleft'] = 0x3014;\n  t['tortoiseshellbracketleftsmall'] = 0xFE5D;\n  t['tortoiseshellbracketleftvertical'] = 0xFE39;\n  t['tortoiseshellbracketright'] = 0x3015;\n  t['tortoiseshellbracketrightsmall'] = 0xFE5E;\n  t['tortoiseshellbracketrightvertical'] = 0xFE3A;\n  t['totaothai'] = 0x0E15;\n  t['tpalatalhook'] = 0x01AB;\n  t['tparen'] = 0x24AF;\n  t['trademark'] = 0x2122;\n  t['trademarksans'] = 0xF8EA;\n  t['trademarkserif'] = 0xF6DB;\n  t['tretroflexhook'] = 0x0288;\n  t['triagdn'] = 0x25BC;\n  t['triaglf'] = 0x25C4;\n  t['triagrt'] = 0x25BA;\n  t['triagup'] = 0x25B2;\n  t['ts'] = 0x02A6;\n  t['tsadi'] = 0x05E6;\n  t['tsadidagesh'] = 0xFB46;\n  t['tsadidageshhebrew'] = 0xFB46;\n  t['tsadihebrew'] = 0x05E6;\n  t['tsecyrillic'] = 0x0446;\n  t['tsere'] = 0x05B5;\n  t['tsere12'] = 0x05B5;\n  t['tsere1e'] = 0x05B5;\n  t['tsere2b'] = 0x05B5;\n  t['tserehebrew'] = 0x05B5;\n  t['tserenarrowhebrew'] = 0x05B5;\n  t['tserequarterhebrew'] = 0x05B5;\n  t['tserewidehebrew'] = 0x05B5;\n  t['tshecyrillic'] = 0x045B;\n  t['tsuperior'] = 0xF6F3;\n  t['ttabengali'] = 0x099F;\n  t['ttadeva'] = 0x091F;\n  t['ttagujarati'] = 0x0A9F;\n  t['ttagurmukhi'] = 0x0A1F;\n  t['tteharabic'] = 0x0679;\n  t['ttehfinalarabic'] = 0xFB67;\n  t['ttehinitialarabic'] = 0xFB68;\n  t['ttehmedialarabic'] = 0xFB69;\n  t['tthabengali'] = 0x09A0;\n  t['tthadeva'] = 0x0920;\n  t['tthagujarati'] = 0x0AA0;\n  t['tthagurmukhi'] = 0x0A20;\n  t['tturned'] = 0x0287;\n  t['tuhiragana'] = 0x3064;\n  t['tukatakana'] = 0x30C4;\n  t['tukatakanahalfwidth'] = 0xFF82;\n  t['tusmallhiragana'] = 0x3063;\n  t['tusmallkatakana'] = 0x30C3;\n  t['tusmallkatakanahalfwidth'] = 0xFF6F;\n  t['twelvecircle'] = 0x246B;\n  t['twelveparen'] = 0x247F;\n  t['twelveperiod'] = 0x2493;\n  t['twelveroman'] = 0x217B;\n  t['twentycircle'] = 0x2473;\n  t['twentyhangzhou'] = 0x5344;\n  t['twentyparen'] = 0x2487;\n  t['twentyperiod'] = 0x249B;\n  t['two'] = 0x0032;\n  t['twoarabic'] = 0x0662;\n  t['twobengali'] = 0x09E8;\n  t['twocircle'] = 0x2461;\n  t['twocircleinversesansserif'] = 0x278B;\n  t['twodeva'] = 0x0968;\n  t['twodotenleader'] = 0x2025;\n  t['twodotleader'] = 0x2025;\n  t['twodotleadervertical'] = 0xFE30;\n  t['twogujarati'] = 0x0AE8;\n  t['twogurmukhi'] = 0x0A68;\n  t['twohackarabic'] = 0x0662;\n  t['twohangzhou'] = 0x3022;\n  t['twoideographicparen'] = 0x3221;\n  t['twoinferior'] = 0x2082;\n  t['twomonospace'] = 0xFF12;\n  t['twonumeratorbengali'] = 0x09F5;\n  t['twooldstyle'] = 0xF732;\n  t['twoparen'] = 0x2475;\n  t['twoperiod'] = 0x2489;\n  t['twopersian'] = 0x06F2;\n  t['tworoman'] = 0x2171;\n  t['twostroke'] = 0x01BB;\n  t['twosuperior'] = 0x00B2;\n  t['twothai'] = 0x0E52;\n  t['twothirds'] = 0x2154;\n  t['u'] = 0x0075;\n  t['uacute'] = 0x00FA;\n  t['ubar'] = 0x0289;\n  t['ubengali'] = 0x0989;\n  t['ubopomofo'] = 0x3128;\n  t['ubreve'] = 0x016D;\n  t['ucaron'] = 0x01D4;\n  t['ucircle'] = 0x24E4;\n  t['ucircumflex'] = 0x00FB;\n  t['ucircumflexbelow'] = 0x1E77;\n  t['ucyrillic'] = 0x0443;\n  t['udattadeva'] = 0x0951;\n  t['udblacute'] = 0x0171;\n  t['udblgrave'] = 0x0215;\n  t['udeva'] = 0x0909;\n  t['udieresis'] = 0x00FC;\n  t['udieresisacute'] = 0x01D8;\n  t['udieresisbelow'] = 0x1E73;\n  t['udieresiscaron'] = 0x01DA;\n  t['udieresiscyrillic'] = 0x04F1;\n  t['udieresisgrave'] = 0x01DC;\n  t['udieresismacron'] = 0x01D6;\n  t['udotbelow'] = 0x1EE5;\n  t['ugrave'] = 0x00F9;\n  t['ugujarati'] = 0x0A89;\n  t['ugurmukhi'] = 0x0A09;\n  t['uhiragana'] = 0x3046;\n  t['uhookabove'] = 0x1EE7;\n  t['uhorn'] = 0x01B0;\n  t['uhornacute'] = 0x1EE9;\n  t['uhorndotbelow'] = 0x1EF1;\n  t['uhorngrave'] = 0x1EEB;\n  t['uhornhookabove'] = 0x1EED;\n  t['uhorntilde'] = 0x1EEF;\n  t['uhungarumlaut'] = 0x0171;\n  t['uhungarumlautcyrillic'] = 0x04F3;\n  t['uinvertedbreve'] = 0x0217;\n  t['ukatakana'] = 0x30A6;\n  t['ukatakanahalfwidth'] = 0xFF73;\n  t['ukcyrillic'] = 0x0479;\n  t['ukorean'] = 0x315C;\n  t['umacron'] = 0x016B;\n  t['umacroncyrillic'] = 0x04EF;\n  t['umacrondieresis'] = 0x1E7B;\n  t['umatragurmukhi'] = 0x0A41;\n  t['umonospace'] = 0xFF55;\n  t['underscore'] = 0x005F;\n  t['underscoredbl'] = 0x2017;\n  t['underscoremonospace'] = 0xFF3F;\n  t['underscorevertical'] = 0xFE33;\n  t['underscorewavy'] = 0xFE4F;\n  t['union'] = 0x222A;\n  t['universal'] = 0x2200;\n  t['uogonek'] = 0x0173;\n  t['uparen'] = 0x24B0;\n  t['upblock'] = 0x2580;\n  t['upperdothebrew'] = 0x05C4;\n  t['upsilon'] = 0x03C5;\n  t['upsilondieresis'] = 0x03CB;\n  t['upsilondieresistonos'] = 0x03B0;\n  t['upsilonlatin'] = 0x028A;\n  t['upsilontonos'] = 0x03CD;\n  t['uptackbelowcmb'] = 0x031D;\n  t['uptackmod'] = 0x02D4;\n  t['uragurmukhi'] = 0x0A73;\n  t['uring'] = 0x016F;\n  t['ushortcyrillic'] = 0x045E;\n  t['usmallhiragana'] = 0x3045;\n  t['usmallkatakana'] = 0x30A5;\n  t['usmallkatakanahalfwidth'] = 0xFF69;\n  t['ustraightcyrillic'] = 0x04AF;\n  t['ustraightstrokecyrillic'] = 0x04B1;\n  t['utilde'] = 0x0169;\n  t['utildeacute'] = 0x1E79;\n  t['utildebelow'] = 0x1E75;\n  t['uubengali'] = 0x098A;\n  t['uudeva'] = 0x090A;\n  t['uugujarati'] = 0x0A8A;\n  t['uugurmukhi'] = 0x0A0A;\n  t['uumatragurmukhi'] = 0x0A42;\n  t['uuvowelsignbengali'] = 0x09C2;\n  t['uuvowelsigndeva'] = 0x0942;\n  t['uuvowelsigngujarati'] = 0x0AC2;\n  t['uvowelsignbengali'] = 0x09C1;\n  t['uvowelsigndeva'] = 0x0941;\n  t['uvowelsigngujarati'] = 0x0AC1;\n  t['v'] = 0x0076;\n  t['vadeva'] = 0x0935;\n  t['vagujarati'] = 0x0AB5;\n  t['vagurmukhi'] = 0x0A35;\n  t['vakatakana'] = 0x30F7;\n  t['vav'] = 0x05D5;\n  t['vavdagesh'] = 0xFB35;\n  t['vavdagesh65'] = 0xFB35;\n  t['vavdageshhebrew'] = 0xFB35;\n  t['vavhebrew'] = 0x05D5;\n  t['vavholam'] = 0xFB4B;\n  t['vavholamhebrew'] = 0xFB4B;\n  t['vavvavhebrew'] = 0x05F0;\n  t['vavyodhebrew'] = 0x05F1;\n  t['vcircle'] = 0x24E5;\n  t['vdotbelow'] = 0x1E7F;\n  t['vecyrillic'] = 0x0432;\n  t['veharabic'] = 0x06A4;\n  t['vehfinalarabic'] = 0xFB6B;\n  t['vehinitialarabic'] = 0xFB6C;\n  t['vehmedialarabic'] = 0xFB6D;\n  t['vekatakana'] = 0x30F9;\n  t['venus'] = 0x2640;\n  t['verticalbar'] = 0x007C;\n  t['verticallineabovecmb'] = 0x030D;\n  t['verticallinebelowcmb'] = 0x0329;\n  t['verticallinelowmod'] = 0x02CC;\n  t['verticallinemod'] = 0x02C8;\n  t['vewarmenian'] = 0x057E;\n  t['vhook'] = 0x028B;\n  t['vikatakana'] = 0x30F8;\n  t['viramabengali'] = 0x09CD;\n  t['viramadeva'] = 0x094D;\n  t['viramagujarati'] = 0x0ACD;\n  t['visargabengali'] = 0x0983;\n  t['visargadeva'] = 0x0903;\n  t['visargagujarati'] = 0x0A83;\n  t['vmonospace'] = 0xFF56;\n  t['voarmenian'] = 0x0578;\n  t['voicediterationhiragana'] = 0x309E;\n  t['voicediterationkatakana'] = 0x30FE;\n  t['voicedmarkkana'] = 0x309B;\n  t['voicedmarkkanahalfwidth'] = 0xFF9E;\n  t['vokatakana'] = 0x30FA;\n  t['vparen'] = 0x24B1;\n  t['vtilde'] = 0x1E7D;\n  t['vturned'] = 0x028C;\n  t['vuhiragana'] = 0x3094;\n  t['vukatakana'] = 0x30F4;\n  t['w'] = 0x0077;\n  t['wacute'] = 0x1E83;\n  t['waekorean'] = 0x3159;\n  t['wahiragana'] = 0x308F;\n  t['wakatakana'] = 0x30EF;\n  t['wakatakanahalfwidth'] = 0xFF9C;\n  t['wakorean'] = 0x3158;\n  t['wasmallhiragana'] = 0x308E;\n  t['wasmallkatakana'] = 0x30EE;\n  t['wattosquare'] = 0x3357;\n  t['wavedash'] = 0x301C;\n  t['wavyunderscorevertical'] = 0xFE34;\n  t['wawarabic'] = 0x0648;\n  t['wawfinalarabic'] = 0xFEEE;\n  t['wawhamzaabovearabic'] = 0x0624;\n  t['wawhamzaabovefinalarabic'] = 0xFE86;\n  t['wbsquare'] = 0x33DD;\n  t['wcircle'] = 0x24E6;\n  t['wcircumflex'] = 0x0175;\n  t['wdieresis'] = 0x1E85;\n  t['wdotaccent'] = 0x1E87;\n  t['wdotbelow'] = 0x1E89;\n  t['wehiragana'] = 0x3091;\n  t['weierstrass'] = 0x2118;\n  t['wekatakana'] = 0x30F1;\n  t['wekorean'] = 0x315E;\n  t['weokorean'] = 0x315D;\n  t['wgrave'] = 0x1E81;\n  t['whitebullet'] = 0x25E6;\n  t['whitecircle'] = 0x25CB;\n  t['whitecircleinverse'] = 0x25D9;\n  t['whitecornerbracketleft'] = 0x300E;\n  t['whitecornerbracketleftvertical'] = 0xFE43;\n  t['whitecornerbracketright'] = 0x300F;\n  t['whitecornerbracketrightvertical'] = 0xFE44;\n  t['whitediamond'] = 0x25C7;\n  t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\n  t['whitedownpointingsmalltriangle'] = 0x25BF;\n  t['whitedownpointingtriangle'] = 0x25BD;\n  t['whiteleftpointingsmalltriangle'] = 0x25C3;\n  t['whiteleftpointingtriangle'] = 0x25C1;\n  t['whitelenticularbracketleft'] = 0x3016;\n  t['whitelenticularbracketright'] = 0x3017;\n  t['whiterightpointingsmalltriangle'] = 0x25B9;\n  t['whiterightpointingtriangle'] = 0x25B7;\n  t['whitesmallsquare'] = 0x25AB;\n  t['whitesmilingface'] = 0x263A;\n  t['whitesquare'] = 0x25A1;\n  t['whitestar'] = 0x2606;\n  t['whitetelephone'] = 0x260F;\n  t['whitetortoiseshellbracketleft'] = 0x3018;\n  t['whitetortoiseshellbracketright'] = 0x3019;\n  t['whiteuppointingsmalltriangle'] = 0x25B5;\n  t['whiteuppointingtriangle'] = 0x25B3;\n  t['wihiragana'] = 0x3090;\n  t['wikatakana'] = 0x30F0;\n  t['wikorean'] = 0x315F;\n  t['wmonospace'] = 0xFF57;\n  t['wohiragana'] = 0x3092;\n  t['wokatakana'] = 0x30F2;\n  t['wokatakanahalfwidth'] = 0xFF66;\n  t['won'] = 0x20A9;\n  t['wonmonospace'] = 0xFFE6;\n  t['wowaenthai'] = 0x0E27;\n  t['wparen'] = 0x24B2;\n  t['wring'] = 0x1E98;\n  t['wsuperior'] = 0x02B7;\n  t['wturned'] = 0x028D;\n  t['wynn'] = 0x01BF;\n  t['x'] = 0x0078;\n  t['xabovecmb'] = 0x033D;\n  t['xbopomofo'] = 0x3112;\n  t['xcircle'] = 0x24E7;\n  t['xdieresis'] = 0x1E8D;\n  t['xdotaccent'] = 0x1E8B;\n  t['xeharmenian'] = 0x056D;\n  t['xi'] = 0x03BE;\n  t['xmonospace'] = 0xFF58;\n  t['xparen'] = 0x24B3;\n  t['xsuperior'] = 0x02E3;\n  t['y'] = 0x0079;\n  t['yaadosquare'] = 0x334E;\n  t['yabengali'] = 0x09AF;\n  t['yacute'] = 0x00FD;\n  t['yadeva'] = 0x092F;\n  t['yaekorean'] = 0x3152;\n  t['yagujarati'] = 0x0AAF;\n  t['yagurmukhi'] = 0x0A2F;\n  t['yahiragana'] = 0x3084;\n  t['yakatakana'] = 0x30E4;\n  t['yakatakanahalfwidth'] = 0xFF94;\n  t['yakorean'] = 0x3151;\n  t['yamakkanthai'] = 0x0E4E;\n  t['yasmallhiragana'] = 0x3083;\n  t['yasmallkatakana'] = 0x30E3;\n  t['yasmallkatakanahalfwidth'] = 0xFF6C;\n  t['yatcyrillic'] = 0x0463;\n  t['ycircle'] = 0x24E8;\n  t['ycircumflex'] = 0x0177;\n  t['ydieresis'] = 0x00FF;\n  t['ydotaccent'] = 0x1E8F;\n  t['ydotbelow'] = 0x1EF5;\n  t['yeharabic'] = 0x064A;\n  t['yehbarreearabic'] = 0x06D2;\n  t['yehbarreefinalarabic'] = 0xFBAF;\n  t['yehfinalarabic'] = 0xFEF2;\n  t['yehhamzaabovearabic'] = 0x0626;\n  t['yehhamzaabovefinalarabic'] = 0xFE8A;\n  t['yehhamzaaboveinitialarabic'] = 0xFE8B;\n  t['yehhamzaabovemedialarabic'] = 0xFE8C;\n  t['yehinitialarabic'] = 0xFEF3;\n  t['yehmedialarabic'] = 0xFEF4;\n  t['yehmeeminitialarabic'] = 0xFCDD;\n  t['yehmeemisolatedarabic'] = 0xFC58;\n  t['yehnoonfinalarabic'] = 0xFC94;\n  t['yehthreedotsbelowarabic'] = 0x06D1;\n  t['yekorean'] = 0x3156;\n  t['yen'] = 0x00A5;\n  t['yenmonospace'] = 0xFFE5;\n  t['yeokorean'] = 0x3155;\n  t['yeorinhieuhkorean'] = 0x3186;\n  t['yerahbenyomohebrew'] = 0x05AA;\n  t['yerahbenyomolefthebrew'] = 0x05AA;\n  t['yericyrillic'] = 0x044B;\n  t['yerudieresiscyrillic'] = 0x04F9;\n  t['yesieungkorean'] = 0x3181;\n  t['yesieungpansioskorean'] = 0x3183;\n  t['yesieungsioskorean'] = 0x3182;\n  t['yetivhebrew'] = 0x059A;\n  t['ygrave'] = 0x1EF3;\n  t['yhook'] = 0x01B4;\n  t['yhookabove'] = 0x1EF7;\n  t['yiarmenian'] = 0x0575;\n  t['yicyrillic'] = 0x0457;\n  t['yikorean'] = 0x3162;\n  t['yinyang'] = 0x262F;\n  t['yiwnarmenian'] = 0x0582;\n  t['ymonospace'] = 0xFF59;\n  t['yod'] = 0x05D9;\n  t['yoddagesh'] = 0xFB39;\n  t['yoddageshhebrew'] = 0xFB39;\n  t['yodhebrew'] = 0x05D9;\n  t['yodyodhebrew'] = 0x05F2;\n  t['yodyodpatahhebrew'] = 0xFB1F;\n  t['yohiragana'] = 0x3088;\n  t['yoikorean'] = 0x3189;\n  t['yokatakana'] = 0x30E8;\n  t['yokatakanahalfwidth'] = 0xFF96;\n  t['yokorean'] = 0x315B;\n  t['yosmallhiragana'] = 0x3087;\n  t['yosmallkatakana'] = 0x30E7;\n  t['yosmallkatakanahalfwidth'] = 0xFF6E;\n  t['yotgreek'] = 0x03F3;\n  t['yoyaekorean'] = 0x3188;\n  t['yoyakorean'] = 0x3187;\n  t['yoyakthai'] = 0x0E22;\n  t['yoyingthai'] = 0x0E0D;\n  t['yparen'] = 0x24B4;\n  t['ypogegrammeni'] = 0x037A;\n  t['ypogegrammenigreekcmb'] = 0x0345;\n  t['yr'] = 0x01A6;\n  t['yring'] = 0x1E99;\n  t['ysuperior'] = 0x02B8;\n  t['ytilde'] = 0x1EF9;\n  t['yturned'] = 0x028E;\n  t['yuhiragana'] = 0x3086;\n  t['yuikorean'] = 0x318C;\n  t['yukatakana'] = 0x30E6;\n  t['yukatakanahalfwidth'] = 0xFF95;\n  t['yukorean'] = 0x3160;\n  t['yusbigcyrillic'] = 0x046B;\n  t['yusbigiotifiedcyrillic'] = 0x046D;\n  t['yuslittlecyrillic'] = 0x0467;\n  t['yuslittleiotifiedcyrillic'] = 0x0469;\n  t['yusmallhiragana'] = 0x3085;\n  t['yusmallkatakana'] = 0x30E5;\n  t['yusmallkatakanahalfwidth'] = 0xFF6D;\n  t['yuyekorean'] = 0x318B;\n  t['yuyeokorean'] = 0x318A;\n  t['yyabengali'] = 0x09DF;\n  t['yyadeva'] = 0x095F;\n  t['z'] = 0x007A;\n  t['zaarmenian'] = 0x0566;\n  t['zacute'] = 0x017A;\n  t['zadeva'] = 0x095B;\n  t['zagurmukhi'] = 0x0A5B;\n  t['zaharabic'] = 0x0638;\n  t['zahfinalarabic'] = 0xFEC6;\n  t['zahinitialarabic'] = 0xFEC7;\n  t['zahiragana'] = 0x3056;\n  t['zahmedialarabic'] = 0xFEC8;\n  t['zainarabic'] = 0x0632;\n  t['zainfinalarabic'] = 0xFEB0;\n  t['zakatakana'] = 0x30B6;\n  t['zaqefgadolhebrew'] = 0x0595;\n  t['zaqefqatanhebrew'] = 0x0594;\n  t['zarqahebrew'] = 0x0598;\n  t['zayin'] = 0x05D6;\n  t['zayindagesh'] = 0xFB36;\n  t['zayindageshhebrew'] = 0xFB36;\n  t['zayinhebrew'] = 0x05D6;\n  t['zbopomofo'] = 0x3117;\n  t['zcaron'] = 0x017E;\n  t['zcircle'] = 0x24E9;\n  t['zcircumflex'] = 0x1E91;\n  t['zcurl'] = 0x0291;\n  t['zdot'] = 0x017C;\n  t['zdotaccent'] = 0x017C;\n  t['zdotbelow'] = 0x1E93;\n  t['zecyrillic'] = 0x0437;\n  t['zedescendercyrillic'] = 0x0499;\n  t['zedieresiscyrillic'] = 0x04DF;\n  t['zehiragana'] = 0x305C;\n  t['zekatakana'] = 0x30BC;\n  t['zero'] = 0x0030;\n  t['zeroarabic'] = 0x0660;\n  t['zerobengali'] = 0x09E6;\n  t['zerodeva'] = 0x0966;\n  t['zerogujarati'] = 0x0AE6;\n  t['zerogurmukhi'] = 0x0A66;\n  t['zerohackarabic'] = 0x0660;\n  t['zeroinferior'] = 0x2080;\n  t['zeromonospace'] = 0xFF10;\n  t['zerooldstyle'] = 0xF730;\n  t['zeropersian'] = 0x06F0;\n  t['zerosuperior'] = 0x2070;\n  t['zerothai'] = 0x0E50;\n  t['zerowidthjoiner'] = 0xFEFF;\n  t['zerowidthnonjoiner'] = 0x200C;\n  t['zerowidthspace'] = 0x200B;\n  t['zeta'] = 0x03B6;\n  t['zhbopomofo'] = 0x3113;\n  t['zhearmenian'] = 0x056A;\n  t['zhebrevecyrillic'] = 0x04C2;\n  t['zhecyrillic'] = 0x0436;\n  t['zhedescendercyrillic'] = 0x0497;\n  t['zhedieresiscyrillic'] = 0x04DD;\n  t['zihiragana'] = 0x3058;\n  t['zikatakana'] = 0x30B8;\n  t['zinorhebrew'] = 0x05AE;\n  t['zlinebelow'] = 0x1E95;\n  t['zmonospace'] = 0xFF5A;\n  t['zohiragana'] = 0x305E;\n  t['zokatakana'] = 0x30BE;\n  t['zparen'] = 0x24B5;\n  t['zretroflexhook'] = 0x0290;\n  t['zstroke'] = 0x01B6;\n  t['zuhiragana'] = 0x305A;\n  t['zukatakana'] = 0x30BA;\n  t['.notdef'] = 0x0000;\n  t['angbracketleftbig'] = 0x2329;\n  t['angbracketleftBig'] = 0x2329;\n  t['angbracketleftbigg'] = 0x2329;\n  t['angbracketleftBigg'] = 0x2329;\n  t['angbracketrightBig'] = 0x232A;\n  t['angbracketrightbig'] = 0x232A;\n  t['angbracketrightBigg'] = 0x232A;\n  t['angbracketrightbigg'] = 0x232A;\n  t['arrowhookleft'] = 0x21AA;\n  t['arrowhookright'] = 0x21A9;\n  t['arrowlefttophalf'] = 0x21BC;\n  t['arrowleftbothalf'] = 0x21BD;\n  t['arrownortheast'] = 0x2197;\n  t['arrownorthwest'] = 0x2196;\n  t['arrowrighttophalf'] = 0x21C0;\n  t['arrowrightbothalf'] = 0x21C1;\n  t['arrowsoutheast'] = 0x2198;\n  t['arrowsouthwest'] = 0x2199;\n  t['backslashbig'] = 0x2216;\n  t['backslashBig'] = 0x2216;\n  t['backslashBigg'] = 0x2216;\n  t['backslashbigg'] = 0x2216;\n  t['bardbl'] = 0x2016;\n  t['bracehtipdownleft'] = 0xFE37;\n  t['bracehtipdownright'] = 0xFE37;\n  t['bracehtipupleft'] = 0xFE38;\n  t['bracehtipupright'] = 0xFE38;\n  t['braceleftBig'] = 0x007B;\n  t['braceleftbig'] = 0x007B;\n  t['braceleftbigg'] = 0x007B;\n  t['braceleftBigg'] = 0x007B;\n  t['bracerightBig'] = 0x007D;\n  t['bracerightbig'] = 0x007D;\n  t['bracerightbigg'] = 0x007D;\n  t['bracerightBigg'] = 0x007D;\n  t['bracketleftbig'] = 0x005B;\n  t['bracketleftBig'] = 0x005B;\n  t['bracketleftbigg'] = 0x005B;\n  t['bracketleftBigg'] = 0x005B;\n  t['bracketrightBig'] = 0x005D;\n  t['bracketrightbig'] = 0x005D;\n  t['bracketrightbigg'] = 0x005D;\n  t['bracketrightBigg'] = 0x005D;\n  t['ceilingleftbig'] = 0x2308;\n  t['ceilingleftBig'] = 0x2308;\n  t['ceilingleftBigg'] = 0x2308;\n  t['ceilingleftbigg'] = 0x2308;\n  t['ceilingrightbig'] = 0x2309;\n  t['ceilingrightBig'] = 0x2309;\n  t['ceilingrightbigg'] = 0x2309;\n  t['ceilingrightBigg'] = 0x2309;\n  t['circledotdisplay'] = 0x2299;\n  t['circledottext'] = 0x2299;\n  t['circlemultiplydisplay'] = 0x2297;\n  t['circlemultiplytext'] = 0x2297;\n  t['circleplusdisplay'] = 0x2295;\n  t['circleplustext'] = 0x2295;\n  t['contintegraldisplay'] = 0x222E;\n  t['contintegraltext'] = 0x222E;\n  t['coproductdisplay'] = 0x2210;\n  t['coproducttext'] = 0x2210;\n  t['floorleftBig'] = 0x230A;\n  t['floorleftbig'] = 0x230A;\n  t['floorleftbigg'] = 0x230A;\n  t['floorleftBigg'] = 0x230A;\n  t['floorrightbig'] = 0x230B;\n  t['floorrightBig'] = 0x230B;\n  t['floorrightBigg'] = 0x230B;\n  t['floorrightbigg'] = 0x230B;\n  t['hatwide'] = 0x0302;\n  t['hatwider'] = 0x0302;\n  t['hatwidest'] = 0x0302;\n  t['intercal'] = 0x1D40;\n  t['integraldisplay'] = 0x222B;\n  t['integraltext'] = 0x222B;\n  t['intersectiondisplay'] = 0x22C2;\n  t['intersectiontext'] = 0x22C2;\n  t['logicalanddisplay'] = 0x2227;\n  t['logicalandtext'] = 0x2227;\n  t['logicalordisplay'] = 0x2228;\n  t['logicalortext'] = 0x2228;\n  t['parenleftBig'] = 0x0028;\n  t['parenleftbig'] = 0x0028;\n  t['parenleftBigg'] = 0x0028;\n  t['parenleftbigg'] = 0x0028;\n  t['parenrightBig'] = 0x0029;\n  t['parenrightbig'] = 0x0029;\n  t['parenrightBigg'] = 0x0029;\n  t['parenrightbigg'] = 0x0029;\n  t['prime'] = 0x2032;\n  t['productdisplay'] = 0x220F;\n  t['producttext'] = 0x220F;\n  t['radicalbig'] = 0x221A;\n  t['radicalBig'] = 0x221A;\n  t['radicalBigg'] = 0x221A;\n  t['radicalbigg'] = 0x221A;\n  t['radicalbt'] = 0x221A;\n  t['radicaltp'] = 0x221A;\n  t['radicalvertex'] = 0x221A;\n  t['slashbig'] = 0x002F;\n  t['slashBig'] = 0x002F;\n  t['slashBigg'] = 0x002F;\n  t['slashbigg'] = 0x002F;\n  t['summationdisplay'] = 0x2211;\n  t['summationtext'] = 0x2211;\n  t['tildewide'] = 0x02DC;\n  t['tildewider'] = 0x02DC;\n  t['tildewidest'] = 0x02DC;\n  t['uniondisplay'] = 0x22C3;\n  t['unionmultidisplay'] = 0x228E;\n  t['unionmultitext'] = 0x228E;\n  t['unionsqdisplay'] = 0x2294;\n  t['unionsqtext'] = 0x2294;\n  t['uniontext'] = 0x22C3;\n  t['vextenddouble'] = 0x2225;\n  t['vextendsingle'] = 0x2223;\n});\nvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['space'] = 0x0020;\n  t['a1'] = 0x2701;\n  t['a2'] = 0x2702;\n  t['a202'] = 0x2703;\n  t['a3'] = 0x2704;\n  t['a4'] = 0x260E;\n  t['a5'] = 0x2706;\n  t['a119'] = 0x2707;\n  t['a118'] = 0x2708;\n  t['a117'] = 0x2709;\n  t['a11'] = 0x261B;\n  t['a12'] = 0x261E;\n  t['a13'] = 0x270C;\n  t['a14'] = 0x270D;\n  t['a15'] = 0x270E;\n  t['a16'] = 0x270F;\n  t['a105'] = 0x2710;\n  t['a17'] = 0x2711;\n  t['a18'] = 0x2712;\n  t['a19'] = 0x2713;\n  t['a20'] = 0x2714;\n  t['a21'] = 0x2715;\n  t['a22'] = 0x2716;\n  t['a23'] = 0x2717;\n  t['a24'] = 0x2718;\n  t['a25'] = 0x2719;\n  t['a26'] = 0x271A;\n  t['a27'] = 0x271B;\n  t['a28'] = 0x271C;\n  t['a6'] = 0x271D;\n  t['a7'] = 0x271E;\n  t['a8'] = 0x271F;\n  t['a9'] = 0x2720;\n  t['a10'] = 0x2721;\n  t['a29'] = 0x2722;\n  t['a30'] = 0x2723;\n  t['a31'] = 0x2724;\n  t['a32'] = 0x2725;\n  t['a33'] = 0x2726;\n  t['a34'] = 0x2727;\n  t['a35'] = 0x2605;\n  t['a36'] = 0x2729;\n  t['a37'] = 0x272A;\n  t['a38'] = 0x272B;\n  t['a39'] = 0x272C;\n  t['a40'] = 0x272D;\n  t['a41'] = 0x272E;\n  t['a42'] = 0x272F;\n  t['a43'] = 0x2730;\n  t['a44'] = 0x2731;\n  t['a45'] = 0x2732;\n  t['a46'] = 0x2733;\n  t['a47'] = 0x2734;\n  t['a48'] = 0x2735;\n  t['a49'] = 0x2736;\n  t['a50'] = 0x2737;\n  t['a51'] = 0x2738;\n  t['a52'] = 0x2739;\n  t['a53'] = 0x273A;\n  t['a54'] = 0x273B;\n  t['a55'] = 0x273C;\n  t['a56'] = 0x273D;\n  t['a57'] = 0x273E;\n  t['a58'] = 0x273F;\n  t['a59'] = 0x2740;\n  t['a60'] = 0x2741;\n  t['a61'] = 0x2742;\n  t['a62'] = 0x2743;\n  t['a63'] = 0x2744;\n  t['a64'] = 0x2745;\n  t['a65'] = 0x2746;\n  t['a66'] = 0x2747;\n  t['a67'] = 0x2748;\n  t['a68'] = 0x2749;\n  t['a69'] = 0x274A;\n  t['a70'] = 0x274B;\n  t['a71'] = 0x25CF;\n  t['a72'] = 0x274D;\n  t['a73'] = 0x25A0;\n  t['a74'] = 0x274F;\n  t['a203'] = 0x2750;\n  t['a75'] = 0x2751;\n  t['a204'] = 0x2752;\n  t['a76'] = 0x25B2;\n  t['a77'] = 0x25BC;\n  t['a78'] = 0x25C6;\n  t['a79'] = 0x2756;\n  t['a81'] = 0x25D7;\n  t['a82'] = 0x2758;\n  t['a83'] = 0x2759;\n  t['a84'] = 0x275A;\n  t['a97'] = 0x275B;\n  t['a98'] = 0x275C;\n  t['a99'] = 0x275D;\n  t['a100'] = 0x275E;\n  t['a101'] = 0x2761;\n  t['a102'] = 0x2762;\n  t['a103'] = 0x2763;\n  t['a104'] = 0x2764;\n  t['a106'] = 0x2765;\n  t['a107'] = 0x2766;\n  t['a108'] = 0x2767;\n  t['a112'] = 0x2663;\n  t['a111'] = 0x2666;\n  t['a110'] = 0x2665;\n  t['a109'] = 0x2660;\n  t['a120'] = 0x2460;\n  t['a121'] = 0x2461;\n  t['a122'] = 0x2462;\n  t['a123'] = 0x2463;\n  t['a124'] = 0x2464;\n  t['a125'] = 0x2465;\n  t['a126'] = 0x2466;\n  t['a127'] = 0x2467;\n  t['a128'] = 0x2468;\n  t['a129'] = 0x2469;\n  t['a130'] = 0x2776;\n  t['a131'] = 0x2777;\n  t['a132'] = 0x2778;\n  t['a133'] = 0x2779;\n  t['a134'] = 0x277A;\n  t['a135'] = 0x277B;\n  t['a136'] = 0x277C;\n  t['a137'] = 0x277D;\n  t['a138'] = 0x277E;\n  t['a139'] = 0x277F;\n  t['a140'] = 0x2780;\n  t['a141'] = 0x2781;\n  t['a142'] = 0x2782;\n  t['a143'] = 0x2783;\n  t['a144'] = 0x2784;\n  t['a145'] = 0x2785;\n  t['a146'] = 0x2786;\n  t['a147'] = 0x2787;\n  t['a148'] = 0x2788;\n  t['a149'] = 0x2789;\n  t['a150'] = 0x278A;\n  t['a151'] = 0x278B;\n  t['a152'] = 0x278C;\n  t['a153'] = 0x278D;\n  t['a154'] = 0x278E;\n  t['a155'] = 0x278F;\n  t['a156'] = 0x2790;\n  t['a157'] = 0x2791;\n  t['a158'] = 0x2792;\n  t['a159'] = 0x2793;\n  t['a160'] = 0x2794;\n  t['a161'] = 0x2192;\n  t['a163'] = 0x2194;\n  t['a164'] = 0x2195;\n  t['a196'] = 0x2798;\n  t['a165'] = 0x2799;\n  t['a192'] = 0x279A;\n  t['a166'] = 0x279B;\n  t['a167'] = 0x279C;\n  t['a168'] = 0x279D;\n  t['a169'] = 0x279E;\n  t['a170'] = 0x279F;\n  t['a171'] = 0x27A0;\n  t['a172'] = 0x27A1;\n  t['a173'] = 0x27A2;\n  t['a162'] = 0x27A3;\n  t['a174'] = 0x27A4;\n  t['a175'] = 0x27A5;\n  t['a176'] = 0x27A6;\n  t['a177'] = 0x27A7;\n  t['a178'] = 0x27A8;\n  t['a179'] = 0x27A9;\n  t['a193'] = 0x27AA;\n  t['a180'] = 0x27AB;\n  t['a199'] = 0x27AC;\n  t['a181'] = 0x27AD;\n  t['a200'] = 0x27AE;\n  t['a182'] = 0x27AF;\n  t['a201'] = 0x27B1;\n  t['a183'] = 0x27B2;\n  t['a184'] = 0x27B3;\n  t['a197'] = 0x27B4;\n  t['a185'] = 0x27B5;\n  t['a194'] = 0x27B6;\n  t['a198'] = 0x27B7;\n  t['a186'] = 0x27B8;\n  t['a195'] = 0x27B9;\n  t['a187'] = 0x27BA;\n  t['a188'] = 0x27BB;\n  t['a189'] = 0x27BC;\n  t['a190'] = 0x27BD;\n  t['a191'] = 0x27BE;\n  t['a89'] = 0x2768;\n  t['a90'] = 0x2769;\n  t['a93'] = 0x276A;\n  t['a94'] = 0x276B;\n  t['a91'] = 0x276C;\n  t['a92'] = 0x276D;\n  t['a205'] = 0x276E;\n  t['a85'] = 0x276F;\n  t['a206'] = 0x2770;\n  t['a86'] = 0x2771;\n  t['a87'] = 0x2772;\n  t['a88'] = 0x2773;\n  t['a95'] = 0x2774;\n  t['a96'] = 0x2775;\n  t['.notdef'] = 0x0000;\n});\nexports.getGlyphsUnicode = getGlyphsUnicode;\nexports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = !__w_pdfjs_require__(11) && !__w_pdfjs_require__(12)(function () {\n  return Object.defineProperty(__w_pdfjs_require__(35)('div'), 'a', {\n    get: function get() {\n      return 7;\n    }\n  }).a != 7;\n});\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(1);\nvar hide = __w_pdfjs_require__(8);\nvar uid = __w_pdfjs_require__(17);\nvar TYPED = uid('typed_array');\nvar VIEW = uid('view');\nvar ABV = !!(global.ArrayBuffer && global.DataView);\nvar CONSTR = ABV;\nvar i = 0;\nvar l = 9;\nvar Typed;\nvar TypedArrayConstructors = 'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'.split(',');\nwhile (i < l) {\n  if (Typed = global[TypedArrayConstructors[i++]]) {\n    hide(Typed.prototype, TYPED, true);\n    hide(Typed.prototype, VIEW, true);\n  } else CONSTR = false;\n}\nmodule.exports = {\n  ABV: ABV,\n  CONSTR: CONSTR,\n  TYPED: TYPED,\n  VIEW: VIEW\n};\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(18);\nvar toLength = __w_pdfjs_require__(14);\nmodule.exports = function (it) {\n  if (it === undefined) return 0;\n  var number = toInteger(it);\n  var length = toLength(number);\n  if (number !== length) throw RangeError('Wrong length!');\n  return length;\n};\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $keys = __w_pdfjs_require__(52);\nvar hiddenKeys = __w_pdfjs_require__(40).concat('length', 'prototype');\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar has = __w_pdfjs_require__(10);\nvar toIObject = __w_pdfjs_require__(30);\nvar arrayIndexOf = __w_pdfjs_require__(53)(false);\nvar IE_PROTO = __w_pdfjs_require__(39)('IE_PROTO');\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) {\n    if (key != IE_PROTO) has(O, key) && result.push(key);\n  }while (names.length > i) {\n    if (has(O, key = names[i++])) {\n      ~arrayIndexOf(result, key) || result.push(key);\n    }\n  }return result;\n};\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toIObject = __w_pdfjs_require__(30);\nvar toLength = __w_pdfjs_require__(14);\nvar toAbsoluteIndex = __w_pdfjs_require__(31);\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      if (value != value) return true;\n    } else for (; length > index; index++) {\n      if (IS_INCLUDES || index in O) {\n        if (O[index] === el) return IS_INCLUDES || index || 0;\n      }\n    }return !IS_INCLUDES && -1;\n  };\n};\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(1);\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toObject = __w_pdfjs_require__(19);\nvar toAbsoluteIndex = __w_pdfjs_require__(31);\nvar toLength = __w_pdfjs_require__(14);\nmodule.exports = function fill(value) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) {\n    O[index++] = value;\n  }return O;\n};\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar Iterators = __w_pdfjs_require__(20);\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\nvar ArrayProto = Array.prototype;\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(9);\nvar dPs = __w_pdfjs_require__(90);\nvar enumBugKeys = __w_pdfjs_require__(40);\nvar IE_PROTO = __w_pdfjs_require__(39)('IE_PROTO');\nvar Empty = function Empty() {};\nvar PROTOTYPE = 'prototype';\nvar _createDict = function createDict() {\n  var iframe = __w_pdfjs_require__(35)('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  __w_pdfjs_require__(58).appendChild(iframe);\n  iframe.src = 'javascript:';\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  _createDict = iframeDocument.F;\n  while (i--) {\n    delete _createDict[PROTOTYPE][enumBugKeys[i]];\n  }return _createDict();\n};\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    result[IE_PROTO] = O;\n  } else result = _createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar document = __w_pdfjs_require__(1).document;\nmodule.exports = document && document.documentElement;\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar has = __w_pdfjs_require__(10);\nvar toObject = __w_pdfjs_require__(19);\nvar IE_PROTO = __w_pdfjs_require__(39)('IE_PROTO');\nvar ObjectProto = Object.prototype;\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  }\n  return O instanceof Object ? ObjectProto : null;\n};\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar classof = __w_pdfjs_require__(32);\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\nvar Iterators = __w_pdfjs_require__(20);\nmodule.exports = __w_pdfjs_require__(7).getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];\n};\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar addToUnscopables = __w_pdfjs_require__(94);\nvar step = __w_pdfjs_require__(95);\nvar Iterators = __w_pdfjs_require__(20);\nvar toIObject = __w_pdfjs_require__(30);\nmodule.exports = __w_pdfjs_require__(62)(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated);\n  this._i = 0;\n  this._k = kind;\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\nIterators.Arguments = Iterators.Array;\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar LIBRARY = __w_pdfjs_require__(28);\nvar $export = __w_pdfjs_require__(6);\nvar redefine = __w_pdfjs_require__(16);\nvar hide = __w_pdfjs_require__(8);\nvar has = __w_pdfjs_require__(10);\nvar Iterators = __w_pdfjs_require__(20);\nvar $iterCreate = __w_pdfjs_require__(96);\nvar setToStringTag = __w_pdfjs_require__(25);\nvar getPrototypeOf = __w_pdfjs_require__(59);\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys());\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar returnThis = function returnThis() {\n  return this;\n};\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function getMethod(kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS:\n        return function keys() {\n          return new Constructor(this, kind);\n        };\n      case VALUES:\n        return function values() {\n          return new Constructor(this, kind);\n        };\n    }\n    return function entries() {\n      return new Constructor(this, kind);\n    };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      setToStringTag(IteratorPrototype, TAG, true);\n      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() {\n      return $native.call(this);\n    };\n  }\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(1);\nvar dP = __w_pdfjs_require__(15);\nvar DESCRIPTORS = __w_pdfjs_require__(11);\nvar SPECIES = __w_pdfjs_require__(4)('species');\nmodule.exports = function (KEY) {\n  var C = global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function get() {\n      return this;\n    }\n  });\n};\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar pIE = __w_pdfjs_require__(65);\nvar createDesc = __w_pdfjs_require__(29);\nvar toIObject = __w_pdfjs_require__(30);\nvar toPrimitive = __w_pdfjs_require__(36);\nvar has = __w_pdfjs_require__(10);\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(48);\nvar gOPD = Object.getOwnPropertyDescriptor;\nexports.f = __w_pdfjs_require__(11) ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) {}\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nexports.f = {}.propertyIsEnumerable;\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar classof = __w_pdfjs_require__(32);\nvar test = {};\ntest[__w_pdfjs_require__(4)('toStringTag')] = 'z';\nif (test + '' != '[object z]') {\n  __w_pdfjs_require__(16)(Object.prototype, 'toString', function toString() {\n    return '[object ' + classof(this) + ']';\n  }, true);\n}\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $iterators = __w_pdfjs_require__(61);\nvar getKeys = __w_pdfjs_require__(41);\nvar redefine = __w_pdfjs_require__(16);\nvar global = __w_pdfjs_require__(1);\nvar hide = __w_pdfjs_require__(8);\nvar Iterators = __w_pdfjs_require__(20);\nvar wks = __w_pdfjs_require__(4);\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\nvar DOMIterables = {\n  CSSRuleList: true,\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true,\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true,\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) {\n      if (!proto[key]) redefine(proto, key, $iterators[key], true);\n    }\n  }\n}\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(13);\nvar invoke = __w_pdfjs_require__(108);\nvar html = __w_pdfjs_require__(58);\nvar cel = __w_pdfjs_require__(35);\nvar global = __w_pdfjs_require__(1);\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function run() {\n  var id = +this;\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function listener(event) {\n  run.call(event.data);\n};\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) {\n      args.push(arguments[i++]);\n    }queue[++counter] = function () {\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  if (__w_pdfjs_require__(24)(process) == 'process') {\n    defer = function defer(id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  } else if (Dispatch && Dispatch.now) {\n    defer = function defer(id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function defer(id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function defer(id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  } else {\n    defer = function defer(id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (exec) {\n  try {\n    return {\n      e: false,\n      v: exec()\n    };\n  } catch (e) {\n    return {\n      e: true,\n      v: e\n    };\n  }\n};\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(9);\nvar isObject = __w_pdfjs_require__(3);\nvar newPromiseCapability = __w_pdfjs_require__(45);\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it, TYPE) {\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n  return it;\n};\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChunkedStreamManager = exports.ChunkedStream = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar ChunkedStream = function ChunkedStreamClosure() {\n  function ChunkedStream(length, chunkSize, manager) {\n    this.bytes = new Uint8Array(length);\n    this.start = 0;\n    this.pos = 0;\n    this.end = length;\n    this.chunkSize = chunkSize;\n    this.loadedChunks = [];\n    this.numChunksLoaded = 0;\n    this.numChunks = Math.ceil(length / chunkSize);\n    this.manager = manager;\n    this.progressiveDataLength = 0;\n    this.lastSuccessfulEnsureByteChunk = -1;\n  }\n  ChunkedStream.prototype = {\n    getMissingChunks: function ChunkedStream_getMissingChunks() {\n      var chunks = [];\n      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          chunks.push(chunk);\n        }\n      }\n      return chunks;\n    },\n    getBaseStreams: function ChunkedStream_getBaseStreams() {\n      return [this];\n    },\n    allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n      return this.numChunksLoaded === this.numChunks;\n    },\n    onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n      var end = begin + chunk.byteLength;\n      if (begin % this.chunkSize !== 0) {\n        throw new Error('Bad begin offset: ' + begin);\n      }\n      var length = this.bytes.length;\n      if (end % this.chunkSize !== 0 && end !== length) {\n        throw new Error('Bad end offset: ' + end);\n      }\n      this.bytes.set(new Uint8Array(chunk), begin);\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\n      var position = this.progressiveDataLength;\n      var beginChunk = Math.floor(position / this.chunkSize);\n      this.bytes.set(new Uint8Array(data), position);\n      position += data.byteLength;\n      this.progressiveDataLength = position;\n      var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    ensureByte: function ChunkedStream_ensureByte(pos) {\n      var chunk = Math.floor(pos / this.chunkSize);\n      if (chunk === this.lastSuccessfulEnsureByteChunk) {\n        return;\n      }\n      if (!this.loadedChunks[chunk]) {\n        throw new _util.MissingDataException(pos, pos + 1);\n      }\n      this.lastSuccessfulEnsureByteChunk = chunk;\n    },\n    ensureRange: function ChunkedStream_ensureRange(begin, end) {\n      if (begin >= end) {\n        return;\n      }\n      if (end <= this.progressiveDataLength) {\n        return;\n      }\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          throw new _util.MissingDataException(begin, end);\n        }\n      }\n    },\n    nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n      var chunk,\n          numChunks = this.numChunks;\n      for (var i = 0; i < numChunks; ++i) {\n        chunk = (beginChunk + i) % numChunks;\n        if (!this.loadedChunks[chunk]) {\n          return chunk;\n        }\n      }\n      return null;\n    },\n    hasChunk: function ChunkedStream_hasChunk(chunk) {\n      return !!this.loadedChunks[chunk];\n    },\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function ChunkedStream_getByte() {\n      var pos = this.pos;\n      if (pos >= this.end) {\n        return -1;\n      }\n      this.ensureByte(pos);\n      return this.bytes[this.pos++];\n    },\n    getUint16: function ChunkedStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function ChunkedStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function ChunkedStream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        this.ensureRange(pos, strEnd);\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.ensureRange(pos, end);\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function ChunkedStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function ChunkedStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    getByteRange: function ChunkedStream_getBytes(begin, end) {\n      this.ensureRange(begin, end);\n      return this.bytes.subarray(begin, end);\n    },\n    skip: function ChunkedStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function ChunkedStream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function ChunkedStream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n      this.ensureRange(start, start + length);\n      function ChunkedStreamSubstream() {}\n      ChunkedStreamSubstream.prototype = Object.create(this);\n      ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n        var chunkSize = this.chunkSize;\n        var beginChunk = Math.floor(this.start / chunkSize);\n        var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n        var missingChunks = [];\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!this.loadedChunks[chunk]) {\n            missingChunks.push(chunk);\n          }\n        }\n        return missingChunks;\n      };\n      var subStream = new ChunkedStreamSubstream();\n      subStream.pos = subStream.start = start;\n      subStream.end = start + length || this.end;\n      subStream.dict = dict;\n      return subStream;\n    }\n  };\n  return ChunkedStream;\n}();\nvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\n  function ChunkedStreamManager(pdfNetworkStream, args) {\n    var chunkSize = args.rangeChunkSize;\n    var length = args.length;\n    this.stream = new ChunkedStream(length, chunkSize, this);\n    this.length = length;\n    this.chunkSize = chunkSize;\n    this.pdfNetworkStream = pdfNetworkStream;\n    this.url = args.url;\n    this.disableAutoFetch = args.disableAutoFetch;\n    this.msgHandler = args.msgHandler;\n    this.currRequestId = 0;\n    this.chunksNeededByRequest = Object.create(null);\n    this.requestsByChunk = Object.create(null);\n    this.promisesByRequest = Object.create(null);\n    this.progressiveDataLength = 0;\n    this.aborted = false;\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n  }\n  ChunkedStreamManager.prototype = {\n    onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\n      var _this = this;\n\n      var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n      if (!rangeReader.isStreamingSupported) {\n        rangeReader.onProgress = this.onProgress.bind(this);\n      }\n      var chunks = [],\n          loaded = 0;\n      var manager = this;\n      var promise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            if (!chunk.done) {\n              var data = chunk.value;\n              chunks.push(data);\n              loaded += (0, _util.arrayByteLength)(data);\n              if (rangeReader.isStreamingSupported) {\n                manager.onProgress({ loaded: loaded });\n              }\n              rangeReader.read().then(readChunk, reject);\n              return;\n            }\n            var chunkData = (0, _util.arraysToBytes)(chunks);\n            chunks = null;\n            resolve(chunkData);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        rangeReader.read().then(readChunk, reject);\n      });\n      promise.then(function (data) {\n        if (_this.aborted) {\n          return;\n        }\n        _this.onReceiveData({\n          chunk: data,\n          begin: begin\n        });\n      });\n    },\n    requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n      var missingChunks = this.stream.getMissingChunks();\n      this._requestChunks(missingChunks);\n      return this._loadedStreamCapability.promise;\n    },\n    _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\n      var requestId = this.currRequestId++;\n      var i, ii;\n      var chunksNeeded = Object.create(null);\n      this.chunksNeededByRequest[requestId] = chunksNeeded;\n      for (i = 0, ii = chunks.length; i < ii; i++) {\n        if (!this.stream.hasChunk(chunks[i])) {\n          chunksNeeded[chunks[i]] = true;\n        }\n      }\n      if ((0, _util.isEmptyObj)(chunksNeeded)) {\n        return Promise.resolve();\n      }\n      var capability = (0, _util.createPromiseCapability)();\n      this.promisesByRequest[requestId] = capability;\n      var chunksToRequest = [];\n      for (var chunk in chunksNeeded) {\n        chunk = chunk | 0;\n        if (!(chunk in this.requestsByChunk)) {\n          this.requestsByChunk[chunk] = [];\n          chunksToRequest.push(chunk);\n        }\n        this.requestsByChunk[chunk].push(requestId);\n      }\n      if (!chunksToRequest.length) {\n        return capability.promise;\n      }\n      var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n      for (i = 0; i < groupedChunksToRequest.length; ++i) {\n        var groupedChunk = groupedChunksToRequest[i];\n        var begin = groupedChunk.beginChunk * this.chunkSize;\n        var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n        this.sendRequest(begin, end);\n      }\n      return capability.promise;\n    },\n    getStream: function ChunkedStreamManager_getStream() {\n      return this.stream;\n    },\n    requestRange: function ChunkedStreamManager_requestRange(begin, end) {\n      end = Math.min(end, this.length);\n      var beginChunk = this.getBeginChunk(begin);\n      var endChunk = this.getEndChunk(end);\n      var chunks = [];\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        chunks.push(chunk);\n      }\n      return this._requestChunks(chunks);\n    },\n    requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\n      ranges = ranges || [];\n      var chunksToRequest = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var beginChunk = this.getBeginChunk(ranges[i].begin);\n        var endChunk = this.getEndChunk(ranges[i].end);\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (chunksToRequest.indexOf(chunk) < 0) {\n            chunksToRequest.push(chunk);\n          }\n        }\n      }\n      chunksToRequest.sort(function (a, b) {\n        return a - b;\n      });\n      return this._requestChunks(chunksToRequest);\n    },\n    groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n      var groupedChunks = [];\n      var beginChunk = -1;\n      var prevChunk = -1;\n      for (var i = 0; i < chunks.length; ++i) {\n        var chunk = chunks[i];\n        if (beginChunk < 0) {\n          beginChunk = chunk;\n        }\n        if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: prevChunk + 1\n          });\n          beginChunk = chunk;\n        }\n        if (i + 1 === chunks.length) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: chunk + 1\n          });\n        }\n        prevChunk = chunk;\n      }\n      return groupedChunks;\n    },\n    onProgress: function ChunkedStreamManager_onProgress(args) {\n      var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\n      this.msgHandler.send('DocProgress', {\n        loaded: bytesLoaded,\n        total: this.length\n      });\n    },\n    onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n      var chunk = args.chunk;\n      var isProgressive = args.begin === undefined;\n      var begin = isProgressive ? this.progressiveDataLength : args.begin;\n      var end = begin + chunk.byteLength;\n      var beginChunk = Math.floor(begin / this.chunkSize);\n      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n      if (isProgressive) {\n        this.stream.onReceiveProgressiveData(chunk);\n        this.progressiveDataLength = end;\n      } else {\n        this.stream.onReceiveData(begin, chunk);\n      }\n      if (this.stream.allChunksLoaded()) {\n        this._loadedStreamCapability.resolve(this.stream);\n      }\n      var loadedRequests = [];\n      var i, requestId;\n      for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n        var requestIds = this.requestsByChunk[chunk] || [];\n        delete this.requestsByChunk[chunk];\n        for (i = 0; i < requestIds.length; ++i) {\n          requestId = requestIds[i];\n          var chunksNeeded = this.chunksNeededByRequest[requestId];\n          if (chunk in chunksNeeded) {\n            delete chunksNeeded[chunk];\n          }\n          if (!(0, _util.isEmptyObj)(chunksNeeded)) {\n            continue;\n          }\n          loadedRequests.push(requestId);\n        }\n      }\n      if (!this.disableAutoFetch && (0, _util.isEmptyObj)(this.requestsByChunk)) {\n        var nextEmptyChunk;\n        if (this.stream.numChunksLoaded === 1) {\n          var lastChunk = this.stream.numChunks - 1;\n          if (!this.stream.hasChunk(lastChunk)) {\n            nextEmptyChunk = lastChunk;\n          }\n        } else {\n          nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n        }\n        if (Number.isInteger(nextEmptyChunk)) {\n          this._requestChunks([nextEmptyChunk]);\n        }\n      }\n      for (i = 0; i < loadedRequests.length; ++i) {\n        requestId = loadedRequests[i];\n        var capability = this.promisesByRequest[requestId];\n        delete this.promisesByRequest[requestId];\n        capability.resolve();\n      }\n      this.msgHandler.send('DocProgress', {\n        loaded: this.stream.numChunksLoaded * this.chunkSize,\n        total: this.length\n      });\n    },\n    onError: function ChunkedStreamManager_onError(err) {\n      this._loadedStreamCapability.reject(err);\n    },\n    getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n      var chunk = Math.floor(begin / this.chunkSize);\n      return chunk;\n    },\n    getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n      return chunk;\n    },\n    abort: function ChunkedStreamManager_abort() {\n      this.aborted = true;\n      if (this.pdfNetworkStream) {\n        this.pdfNetworkStream.cancelAllRequests('abort');\n      }\n      for (var requestId in this.promisesByRequest) {\n        var capability = this.promisesByRequest[requestId];\n        capability.reject(new Error('Request was aborted'));\n      }\n    }\n  };\n  return ChunkedStreamManager;\n}();\nexports.ChunkedStream = ChunkedStream;\nexports.ChunkedStreamManager = ChunkedStreamManager;\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FileSpec = exports.XRef = exports.ObjectLoader = exports.Catalog = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _parser = __w_pdfjs_require__(34);\n\nvar _chunked_stream = __w_pdfjs_require__(72);\n\nvar _crypto = __w_pdfjs_require__(76);\n\nvar _colorspace = __w_pdfjs_require__(26);\n\nvar Catalog = function CatalogClosure() {\n  function Catalog(pdfManager, xref, pageFactory) {\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.catDict = xref.getCatalogObj();\n    if (!(0, _primitives.isDict)(this.catDict)) {\n      throw new _util.FormatError('catalog object is not a dictionary');\n    }\n    this.fontCache = new _primitives.RefSetCache();\n    this.builtInCMapCache = Object.create(null);\n    this.pageKidsCountCache = new _primitives.RefSetCache();\n    this.pageFactory = pageFactory;\n    this.pagePromises = [];\n  }\n  Catalog.prototype = {\n    get metadata() {\n      var streamRef = this.catDict.getRaw('Metadata');\n      if (!(0, _primitives.isRef)(streamRef)) {\n        return (0, _util.shadow)(this, 'metadata', null);\n      }\n      var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\n      var stream = this.xref.fetch(streamRef, !encryptMetadata);\n      var metadata;\n      if (stream && (0, _primitives.isDict)(stream.dict)) {\n        var type = stream.dict.get('Type');\n        var subtype = stream.dict.get('Subtype');\n        if ((0, _primitives.isName)(type, 'Metadata') && (0, _primitives.isName)(subtype, 'XML')) {\n          try {\n            metadata = (0, _util.stringToUTF8String)((0, _util.bytesToString)(stream.getBytes()));\n          } catch (e) {\n            if (e instanceof _util.MissingDataException) {\n              throw e;\n            }\n            (0, _util.info)('Skipping invalid metadata.');\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'metadata', metadata);\n    },\n    get toplevelPagesDict() {\n      var pagesObj = this.catDict.get('Pages');\n      if (!(0, _primitives.isDict)(pagesObj)) {\n        throw new _util.FormatError('invalid top-level pages dictionary');\n      }\n      return (0, _util.shadow)(this, 'toplevelPagesDict', pagesObj);\n    },\n    get documentOutline() {\n      var obj = null;\n      try {\n        obj = this.readDocumentOutline();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read document outline');\n      }\n      return (0, _util.shadow)(this, 'documentOutline', obj);\n    },\n    readDocumentOutline: function Catalog_readDocumentOutline() {\n      var obj = this.catDict.get('Outlines');\n      if (!(0, _primitives.isDict)(obj)) {\n        return null;\n      }\n      obj = obj.getRaw('First');\n      if (!(0, _primitives.isRef)(obj)) {\n        return null;\n      }\n      var root = { items: [] };\n      var queue = [{\n        obj: obj,\n        parent: root\n      }];\n      var processed = new _primitives.RefSet();\n      processed.put(obj);\n      var xref = this.xref,\n          blackColor = new Uint8Array(3);\n      while (queue.length > 0) {\n        var i = queue.shift();\n        var outlineDict = xref.fetchIfRef(i.obj);\n        if (outlineDict === null) {\n          continue;\n        }\n        if (!outlineDict.has('Title')) {\n          throw new _util.FormatError('Invalid outline item');\n        }\n        var data = {\n          url: null,\n          dest: null\n        };\n        Catalog.parseDestDictionary({\n          destDict: outlineDict,\n          resultObj: data,\n          docBaseUrl: this.pdfManager.docBaseUrl\n        });\n        var title = outlineDict.get('Title');\n        var flags = outlineDict.get('F') || 0;\n        var color = outlineDict.getArray('C'),\n            rgbColor = blackColor;\n        if (Array.isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n          rgbColor = _colorspace.ColorSpace.singletons.rgb.getRgb(color, 0);\n        }\n        var outlineItem = {\n          dest: data.dest,\n          url: data.url,\n          unsafeUrl: data.unsafeUrl,\n          newWindow: data.newWindow,\n          title: (0, _util.stringToPDFString)(title),\n          color: rgbColor,\n          count: outlineDict.get('Count'),\n          bold: !!(flags & 2),\n          italic: !!(flags & 1),\n          items: []\n        };\n        i.parent.items.push(outlineItem);\n        obj = outlineDict.getRaw('First');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: outlineItem\n          });\n          processed.put(obj);\n        }\n        obj = outlineDict.getRaw('Next');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: i.parent\n          });\n          processed.put(obj);\n        }\n      }\n      return root.items.length > 0 ? root.items : null;\n    },\n    get numPages() {\n      var obj = this.toplevelPagesDict.get('Count');\n      if (!Number.isInteger(obj)) {\n        throw new _util.FormatError('page count in top level pages object is not an integer');\n      }\n      return (0, _util.shadow)(this, 'numPages', obj);\n    },\n    get destinations() {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dests = {},\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        obj = nameDictionaryRef;\n        obj.forEach(function catalogForEach(key, value) {\n          if (!value) {\n            return;\n          }\n          dests[key] = fetchDestination(value);\n        });\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          dests[name] = fetchDestination(names[name]);\n        }\n      }\n      return (0, _util.shadow)(this, 'destinations', dests);\n    },\n    getDestination: function Catalog_getDestination(destinationId) {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dest = null,\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        var value = nameDictionaryRef.get(destinationId);\n        if (value) {\n          dest = fetchDestination(value);\n        }\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        dest = fetchDestination(nameTree.get(destinationId));\n      }\n      return dest;\n    },\n    get pageLabels() {\n      var obj = null;\n      try {\n        obj = this.readPageLabels();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read page labels.');\n      }\n      return (0, _util.shadow)(this, 'pageLabels', obj);\n    },\n    readPageLabels: function Catalog_readPageLabels() {\n      var obj = this.catDict.getRaw('PageLabels');\n      if (!obj) {\n        return null;\n      }\n      var pageLabels = new Array(this.numPages);\n      var style = null;\n      var prefix = '';\n      var numberTree = new NumberTree(obj, this.xref);\n      var nums = numberTree.getAll();\n      var currentLabel = '',\n          currentIndex = 1;\n      for (var i = 0, ii = this.numPages; i < ii; i++) {\n        if (i in nums) {\n          var labelDict = nums[i];\n          if (!(0, _primitives.isDict)(labelDict)) {\n            throw new _util.FormatError('The PageLabel is not a dictionary.');\n          }\n          var type = labelDict.get('Type');\n          if (type && !(0, _primitives.isName)(type, 'PageLabel')) {\n            throw new _util.FormatError('Invalid type in PageLabel dictionary.');\n          }\n          var s = labelDict.get('S');\n          if (s && !(0, _primitives.isName)(s)) {\n            throw new _util.FormatError('Invalid style in PageLabel dictionary.');\n          }\n          style = s ? s.name : null;\n          var p = labelDict.get('P');\n          if (p && !(0, _util.isString)(p)) {\n            throw new _util.FormatError('Invalid prefix in PageLabel dictionary.');\n          }\n          prefix = p ? (0, _util.stringToPDFString)(p) : '';\n          var st = labelDict.get('St');\n          if (st && !(Number.isInteger(st) && st >= 1)) {\n            throw new _util.FormatError('Invalid start in PageLabel dictionary.');\n          }\n          currentIndex = st || 1;\n        }\n        switch (style) {\n          case 'D':\n            currentLabel = currentIndex;\n            break;\n          case 'R':\n          case 'r':\n            currentLabel = _util.Util.toRoman(currentIndex, style === 'r');\n            break;\n          case 'A':\n          case 'a':\n            var LIMIT = 26;\n            var A_UPPER_CASE = 0x41,\n                A_LOWER_CASE = 0x61;\n            var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\n            var letterIndex = currentIndex - 1;\n            var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n            var charBuf = [];\n            for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n              charBuf.push(character);\n            }\n            currentLabel = charBuf.join('');\n            break;\n          default:\n            if (style) {\n              throw new _util.FormatError('Invalid style \"' + style + '\" in PageLabel dictionary.');\n            }\n        }\n        pageLabels[i] = prefix + currentLabel;\n        currentLabel = '';\n        currentIndex++;\n      }\n      return pageLabels;\n    },\n    get pageMode() {\n      var obj = this.catDict.get('PageMode');\n      var pageMode = 'UseNone';\n      if ((0, _primitives.isName)(obj)) {\n        switch (obj.name) {\n          case 'UseNone':\n          case 'UseOutlines':\n          case 'UseThumbs':\n          case 'FullScreen':\n          case 'UseOC':\n          case 'UseAttachments':\n            pageMode = obj.name;\n        }\n      }\n      return (0, _util.shadow)(this, 'pageMode', pageMode);\n    },\n    get attachments() {\n      var xref = this.xref;\n      var attachments = null,\n          nameTreeRef;\n      var obj = this.catDict.get('Names');\n      if (obj) {\n        nameTreeRef = obj.getRaw('EmbeddedFiles');\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var fs = new FileSpec(names[name], xref);\n          if (!attachments) {\n            attachments = Object.create(null);\n          }\n          attachments[(0, _util.stringToPDFString)(name)] = fs.serializable;\n        }\n      }\n      return (0, _util.shadow)(this, 'attachments', attachments);\n    },\n    get javaScript() {\n      var xref = this.xref;\n      var obj = this.catDict.get('Names');\n      var javaScript = [];\n      function appendIfJavaScriptDict(jsDict) {\n        var type = jsDict.get('S');\n        if (!(0, _primitives.isName)(type, 'JavaScript')) {\n          return;\n        }\n        var js = jsDict.get('JS');\n        if ((0, _primitives.isStream)(js)) {\n          js = (0, _util.bytesToString)(js.getBytes());\n        } else if (!(0, _util.isString)(js)) {\n          return;\n        }\n        javaScript.push((0, _util.stringToPDFString)(js));\n      }\n      if (obj && obj.has('JavaScript')) {\n        var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var jsDict = names[name];\n          if ((0, _primitives.isDict)(jsDict)) {\n            appendIfJavaScriptDict(jsDict);\n          }\n        }\n      }\n      var openactionDict = this.catDict.get('OpenAction');\n      if ((0, _primitives.isDict)(openactionDict, 'Action')) {\n        var actionType = openactionDict.get('S');\n        if ((0, _primitives.isName)(actionType, 'Named')) {\n          var action = openactionDict.get('N');\n          if ((0, _primitives.isName)(action, 'Print')) {\n            javaScript.push('print({});');\n          }\n        } else {\n          appendIfJavaScriptDict(openactionDict);\n        }\n      }\n      return (0, _util.shadow)(this, 'javaScript', javaScript);\n    },\n    cleanup: function Catalog_cleanup() {\n      var _this = this;\n\n      this.pageKidsCountCache.clear();\n      var promises = [];\n      this.fontCache.forEach(function (promise) {\n        promises.push(promise);\n      });\n      return Promise.all(promises).then(function (translatedFonts) {\n        for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n          var font = translatedFonts[i].dict;\n          delete font.translated;\n        }\n        _this.fontCache.clear();\n        _this.builtInCMapCache = Object.create(null);\n      });\n    },\n    getPage: function Catalog_getPage(pageIndex) {\n      var _this2 = this;\n\n      if (!(pageIndex in this.pagePromises)) {\n        this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              dict = _ref2[0],\n              ref = _ref2[1];\n\n          return _this2.pageFactory.createPage(pageIndex, dict, ref, _this2.fontCache, _this2.builtInCMapCache);\n        });\n      }\n      return this.pagePromises[pageIndex];\n    },\n    getPageDict: function Catalog_getPageDict(pageIndex) {\n      var capability = (0, _util.createPromiseCapability)();\n      var nodesToVisit = [this.catDict.getRaw('Pages')];\n      var count,\n          currentPageIndex = 0;\n      var xref = this.xref,\n          pageKidsCountCache = this.pageKidsCountCache;\n      function next() {\n        while (nodesToVisit.length) {\n          var currentNode = nodesToVisit.pop();\n          if ((0, _primitives.isRef)(currentNode)) {\n            count = pageKidsCountCache.get(currentNode);\n            if (count > 0 && currentPageIndex + count < pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n            xref.fetchAsync(currentNode).then(function (obj) {\n              if ((0, _primitives.isDict)(obj, 'Page') || (0, _primitives.isDict)(obj) && !obj.has('Kids')) {\n                if (pageIndex === currentPageIndex) {\n                  if (currentNode && !pageKidsCountCache.has(currentNode)) {\n                    pageKidsCountCache.put(currentNode, 1);\n                  }\n                  capability.resolve([obj, currentNode]);\n                } else {\n                  currentPageIndex++;\n                  next();\n                }\n                return;\n              }\n              nodesToVisit.push(obj);\n              next();\n            }, capability.reject);\n            return;\n          }\n          if (!(0, _primitives.isDict)(currentNode)) {\n            capability.reject(new _util.FormatError('page dictionary kid reference points to wrong type of object'));\n            return;\n          }\n          count = currentNode.get('Count');\n          var objId = currentNode.objId;\n          if (objId && !pageKidsCountCache.has(objId)) {\n            pageKidsCountCache.put(objId, count);\n          }\n          if (currentPageIndex + count <= pageIndex) {\n            currentPageIndex += count;\n            continue;\n          }\n          var kids = currentNode.get('Kids');\n          if (!Array.isArray(kids)) {\n            capability.reject(new _util.FormatError('page dictionary kids object is not an array'));\n            return;\n          }\n          for (var last = kids.length - 1; last >= 0; last--) {\n            nodesToVisit.push(kids[last]);\n          }\n        }\n        capability.reject(new Error('Page index ' + pageIndex + ' not found.'));\n      }\n      next();\n      return capability.promise;\n    },\n    getPageIndex: function Catalog_getPageIndex(pageRef) {\n      var xref = this.xref;\n      function pagesBeforeRef(kidRef) {\n        var total = 0;\n        var parentRef;\n        return xref.fetchAsync(kidRef).then(function (node) {\n          if ((0, _primitives.isRefsEqual)(kidRef, pageRef) && !(0, _primitives.isDict)(node, 'Page') && !((0, _primitives.isDict)(node) && !node.has('Type') && node.has('Contents'))) {\n            throw new _util.FormatError('The reference does not point to a /Page Dict.');\n          }\n          if (!node) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(node)) {\n            throw new _util.FormatError('node must be a Dict.');\n          }\n          parentRef = node.getRaw('Parent');\n          return node.getAsync('Parent');\n        }).then(function (parent) {\n          if (!parent) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(parent)) {\n            throw new _util.FormatError('parent must be a Dict.');\n          }\n          return parent.getAsync('Kids');\n        }).then(function (kids) {\n          if (!kids) {\n            return null;\n          }\n          var kidPromises = [];\n          var found = false;\n          for (var i = 0; i < kids.length; i++) {\n            var kid = kids[i];\n            if (!(0, _primitives.isRef)(kid)) {\n              throw new _util.FormatError('kid must be a Ref.');\n            }\n            if (kid.num === kidRef.num) {\n              found = true;\n              break;\n            }\n            kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n              if (kid.has('Count')) {\n                var count = kid.get('Count');\n                total += count;\n              } else {\n                total++;\n              }\n            }));\n          }\n          if (!found) {\n            throw new _util.FormatError('kid ref not found in parents kids');\n          }\n          return Promise.all(kidPromises).then(function () {\n            return [total, parentRef];\n          });\n        });\n      }\n      var total = 0;\n      function next(ref) {\n        return pagesBeforeRef(ref).then(function (args) {\n          if (!args) {\n            return total;\n          }\n          var count = args[0];\n          var parentRef = args[1];\n          total += count;\n          return next(parentRef);\n        });\n      }\n      return next(pageRef);\n    }\n  };\n  Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\n    function addDefaultProtocolToUrl(url) {\n      if (url.indexOf('www.') === 0) {\n        return 'http://' + url;\n      }\n      return url;\n    }\n    function tryConvertUrlEncoding(url) {\n      try {\n        return (0, _util.stringToUTF8String)(url);\n      } catch (e) {\n        return url;\n      }\n    }\n    var destDict = params.destDict;\n    if (!(0, _primitives.isDict)(destDict)) {\n      (0, _util.warn)('parseDestDictionary: \"destDict\" must be a dictionary.');\n      return;\n    }\n    var resultObj = params.resultObj;\n    if ((typeof resultObj === 'undefined' ? 'undefined' : _typeof(resultObj)) !== 'object') {\n      (0, _util.warn)('parseDestDictionary: \"resultObj\" must be an object.');\n      return;\n    }\n    var docBaseUrl = params.docBaseUrl || null;\n    var action = destDict.get('A'),\n        url,\n        dest;\n    if (!(0, _primitives.isDict)(action) && destDict.has('Dest')) {\n      action = destDict.get('Dest');\n    }\n    if ((0, _primitives.isDict)(action)) {\n      var actionType = action.get('S');\n      if (!(0, _primitives.isName)(actionType)) {\n        (0, _util.warn)('parseDestDictionary: Invalid type in Action dictionary.');\n        return;\n      }\n      var actionName = actionType.name;\n      switch (actionName) {\n        case 'URI':\n          url = action.get('URI');\n          if ((0, _primitives.isName)(url)) {\n            url = '/' + url.name;\n          } else if ((0, _util.isString)(url)) {\n            url = addDefaultProtocolToUrl(url);\n          }\n          break;\n        case 'GoTo':\n          dest = action.get('D');\n          break;\n        case 'Launch':\n        case 'GoToR':\n          var urlDict = action.get('F');\n          if ((0, _primitives.isDict)(urlDict)) {\n            url = urlDict.get('F') || null;\n          } else if ((0, _util.isString)(urlDict)) {\n            url = urlDict;\n          }\n          var remoteDest = action.get('D');\n          if (remoteDest) {\n            if ((0, _primitives.isName)(remoteDest)) {\n              remoteDest = remoteDest.name;\n            }\n            if ((0, _util.isString)(url)) {\n              var baseUrl = url.split('#')[0];\n              if ((0, _util.isString)(remoteDest)) {\n                url = baseUrl + '#' + remoteDest;\n              } else if (Array.isArray(remoteDest)) {\n                url = baseUrl + '#' + JSON.stringify(remoteDest);\n              }\n            }\n          }\n          var newWindow = action.get('NewWindow');\n          if ((0, _util.isBool)(newWindow)) {\n            resultObj.newWindow = newWindow;\n          }\n          break;\n        case 'Named':\n          var namedAction = action.get('N');\n          if ((0, _primitives.isName)(namedAction)) {\n            resultObj.action = namedAction.name;\n          }\n          break;\n        case 'JavaScript':\n          var jsAction = action.get('JS'),\n              js;\n          if ((0, _primitives.isStream)(jsAction)) {\n            js = (0, _util.bytesToString)(jsAction.getBytes());\n          } else if ((0, _util.isString)(jsAction)) {\n            js = jsAction;\n          }\n          if (js) {\n            var URL_OPEN_METHODS = ['app.launchURL', 'window.open'];\n            var regex = new RegExp('^\\\\s*(' + URL_OPEN_METHODS.join('|').split('.').join('\\\\.') + ')\\\\((?:\\'|\\\")([^\\'\\\"]*)(?:\\'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))', 'i');\n            var jsUrl = regex.exec((0, _util.stringToPDFString)(js));\n            if (jsUrl && jsUrl[2]) {\n              url = jsUrl[2];\n              if (jsUrl[3] === 'true' && jsUrl[1] === 'app.launchURL') {\n                resultObj.newWindow = true;\n              }\n              break;\n            }\n          }\n        default:\n          (0, _util.warn)('parseDestDictionary: Unsupported Action type \"' + actionName + '\".');\n          break;\n      }\n    } else if (destDict.has('Dest')) {\n      dest = destDict.get('Dest');\n    }\n    if ((0, _util.isString)(url)) {\n      url = tryConvertUrlEncoding(url);\n      var absoluteUrl = (0, _util.createValidAbsoluteUrl)(url, docBaseUrl);\n      if (absoluteUrl) {\n        resultObj.url = absoluteUrl.href;\n      }\n      resultObj.unsafeUrl = url;\n    }\n    if (dest) {\n      if ((0, _primitives.isName)(dest)) {\n        dest = dest.name;\n      }\n      if ((0, _util.isString)(dest) || Array.isArray(dest)) {\n        resultObj.dest = dest;\n      }\n    }\n  };\n  return Catalog;\n}();\nvar XRef = function XRefClosure() {\n  function XRef(stream, pdfManager) {\n    this.stream = stream;\n    this.pdfManager = pdfManager;\n    this.entries = [];\n    this.xrefstms = Object.create(null);\n    this.cache = [];\n    this.stats = {\n      streamTypes: [],\n      fontTypes: []\n    };\n  }\n  XRef.prototype = {\n    setStartXRef: function XRef_setStartXRef(startXRef) {\n      this.startXRefQueue = [startXRef];\n    },\n    parse: function XRef_parse(recoveryMode) {\n      var trailerDict;\n      if (!recoveryMode) {\n        trailerDict = this.readXRef();\n      } else {\n        (0, _util.warn)('Indexing all PDF objects');\n        trailerDict = this.indexObjects();\n      }\n      trailerDict.assignXref(this);\n      this.trailer = trailerDict;\n      var encrypt = trailerDict.get('Encrypt');\n      if ((0, _primitives.isDict)(encrypt)) {\n        var ids = trailerDict.get('ID');\n        var fileId = ids && ids.length ? ids[0] : '';\n        encrypt.suppressEncryption = true;\n        this.encrypt = new _crypto.CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n      }\n      if (!(this.root = trailerDict.get('Root'))) {\n        throw new _util.FormatError('Invalid root reference');\n      }\n    },\n    processXRefTable: function XRef_processXRefTable(parser) {\n      if (!('tableState' in this)) {\n        this.tableState = {\n          entryNum: 0,\n          streamPos: parser.lexer.stream.pos,\n          parserBuf1: parser.buf1,\n          parserBuf2: parser.buf2\n        };\n      }\n      var obj = this.readXRefTable(parser);\n      if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n        throw new _util.FormatError('Invalid XRef table: could not find trailer dictionary');\n      }\n      var dict = parser.getObj();\n      if (!(0, _primitives.isDict)(dict) && dict.dict) {\n        dict = dict.dict;\n      }\n      if (!(0, _primitives.isDict)(dict)) {\n        throw new _util.FormatError('Invalid XRef table: could not parse trailer dictionary');\n      }\n      delete this.tableState;\n      return dict;\n    },\n    readXRefTable: function XRef_readXRefTable(parser) {\n      var stream = parser.lexer.stream;\n      var tableState = this.tableState;\n      stream.pos = tableState.streamPos;\n      parser.buf1 = tableState.parserBuf1;\n      parser.buf2 = tableState.parserBuf2;\n      var obj;\n      while (true) {\n        if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n          if ((0, _primitives.isCmd)(obj = parser.getObj(), 'trailer')) {\n            break;\n          }\n          tableState.firstEntryNum = obj;\n          tableState.entryCount = parser.getObj();\n        }\n        var first = tableState.firstEntryNum;\n        var count = tableState.entryCount;\n        if (!Number.isInteger(first) || !Number.isInteger(count)) {\n          throw new _util.FormatError('Invalid XRef table: wrong types in subsection header');\n        }\n        for (var i = tableState.entryNum; i < count; i++) {\n          tableState.streamPos = stream.pos;\n          tableState.entryNum = i;\n          tableState.parserBuf1 = parser.buf1;\n          tableState.parserBuf2 = parser.buf2;\n          var entry = {};\n          entry.offset = parser.getObj();\n          entry.gen = parser.getObj();\n          var type = parser.getObj();\n          if ((0, _primitives.isCmd)(type, 'f')) {\n            entry.free = true;\n          } else if ((0, _primitives.isCmd)(type, 'n')) {\n            entry.uncompressed = true;\n          }\n          if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n            throw new _util.FormatError('Invalid entry in XRef subsection: ' + first + ', ' + count);\n          }\n          if (i === 0 && entry.free && first === 1) {\n            first = 0;\n          }\n          if (!this.entries[i + first]) {\n            this.entries[i + first] = entry;\n          }\n        }\n        tableState.entryNum = 0;\n        tableState.streamPos = stream.pos;\n        tableState.parserBuf1 = parser.buf1;\n        tableState.parserBuf2 = parser.buf2;\n        delete tableState.firstEntryNum;\n        delete tableState.entryCount;\n      }\n      if (this.entries[0] && !this.entries[0].free) {\n        throw new _util.FormatError('Invalid XRef table: unexpected first object');\n      }\n      return obj;\n    },\n    processXRefStream: function XRef_processXRefStream(stream) {\n      if (!('streamState' in this)) {\n        var streamParameters = stream.dict;\n        var byteWidths = streamParameters.get('W');\n        var range = streamParameters.get('Index');\n        if (!range) {\n          range = [0, streamParameters.get('Size')];\n        }\n        this.streamState = {\n          entryRanges: range,\n          byteWidths: byteWidths,\n          entryNum: 0,\n          streamPos: stream.pos\n        };\n      }\n      this.readXRefStream(stream);\n      delete this.streamState;\n      return stream.dict;\n    },\n    readXRefStream: function XRef_readXRefStream(stream) {\n      var i, j;\n      var streamState = this.streamState;\n      stream.pos = streamState.streamPos;\n      var byteWidths = streamState.byteWidths;\n      var typeFieldWidth = byteWidths[0];\n      var offsetFieldWidth = byteWidths[1];\n      var generationFieldWidth = byteWidths[2];\n      var entryRanges = streamState.entryRanges;\n      while (entryRanges.length > 0) {\n        var first = entryRanges[0];\n        var n = entryRanges[1];\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n          throw new _util.FormatError('Invalid XRef range fields: ' + first + ', ' + n);\n        }\n        if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n          throw new _util.FormatError('Invalid XRef entry fields length: ' + first + ', ' + n);\n        }\n        for (i = streamState.entryNum; i < n; ++i) {\n          streamState.entryNum = i;\n          streamState.streamPos = stream.pos;\n          var type = 0,\n              offset = 0,\n              generation = 0;\n          for (j = 0; j < typeFieldWidth; ++j) {\n            type = type << 8 | stream.getByte();\n          }\n          if (typeFieldWidth === 0) {\n            type = 1;\n          }\n          for (j = 0; j < offsetFieldWidth; ++j) {\n            offset = offset << 8 | stream.getByte();\n          }\n          for (j = 0; j < generationFieldWidth; ++j) {\n            generation = generation << 8 | stream.getByte();\n          }\n          var entry = {};\n          entry.offset = offset;\n          entry.gen = generation;\n          switch (type) {\n            case 0:\n              entry.free = true;\n              break;\n            case 1:\n              entry.uncompressed = true;\n              break;\n            case 2:\n              break;\n            default:\n              throw new _util.FormatError('Invalid XRef entry type: ' + type);\n          }\n          if (!this.entries[first + i]) {\n            this.entries[first + i] = entry;\n          }\n        }\n        streamState.entryNum = 0;\n        streamState.streamPos = stream.pos;\n        entryRanges.splice(0, 2);\n      }\n    },\n    indexObjects: function XRef_indexObjects() {\n      var TAB = 0x9,\n          LF = 0xA,\n          CR = 0xD,\n          SPACE = 0x20;\n      var PERCENT = 0x25,\n          LT = 0x3C;\n      function readToken(data, offset) {\n        var token = '',\n            ch = data[offset];\n        while (ch !== LF && ch !== CR && ch !== LT) {\n          if (++offset >= data.length) {\n            break;\n          }\n          token += String.fromCharCode(ch);\n          ch = data[offset];\n        }\n        return token;\n      }\n      function skipUntil(data, offset, what) {\n        var length = what.length,\n            dataLength = data.length;\n        var skipped = 0;\n        while (offset < dataLength) {\n          var i = 0;\n          while (i < length && data[offset + i] === what[i]) {\n            ++i;\n          }\n          if (i >= length) {\n            break;\n          }\n          offset++;\n          skipped++;\n        }\n        return skipped;\n      }\n      var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n      var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n      var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n      var endobjBytes = new Uint8Array([101, 110, 100, 111, 98, 106]);\n      var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n      this.entries.length = 0;\n      var stream = this.stream;\n      stream.pos = 0;\n      var buffer = stream.getBytes();\n      var position = stream.start,\n          length = buffer.length;\n      var trailers = [],\n          xrefStms = [];\n      while (position < length) {\n        var ch = buffer[position];\n        if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n          ++position;\n          continue;\n        }\n        if (ch === PERCENT) {\n          do {\n            ++position;\n            if (position >= length) {\n              break;\n            }\n            ch = buffer[position];\n          } while (ch !== LF && ch !== CR);\n          continue;\n        }\n        var token = readToken(buffer, position);\n        var m;\n        if (token.indexOf('xref') === 0 && (token.length === 4 || /\\s/.test(token[4]))) {\n          position += skipUntil(buffer, position, trailerBytes);\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else if (m = objRegExp.exec(token)) {\n          if (typeof this.entries[m[1]] === 'undefined') {\n            this.entries[m[1]] = {\n              offset: position - stream.start,\n              gen: m[2] | 0,\n              uncompressed: true\n            };\n          }\n          var contentLength = skipUntil(buffer, position, endobjBytes) + 7;\n          var content = buffer.subarray(position, position + contentLength);\n          var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n          if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n            xrefStms.push(position - stream.start);\n            this.xrefstms[position - stream.start] = 1;\n          }\n          position += contentLength;\n        } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\s/.test(token[7]))) {\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else {\n          position += token.length + 1;\n        }\n      }\n      var i, ii;\n      for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n        this.startXRefQueue.push(xrefStms[i]);\n        this.readXRef(true);\n      }\n      var dict;\n      for (i = 0, ii = trailers.length; i < ii; ++i) {\n        stream.pos = trailers[i];\n        var parser = new _parser.Parser(new _parser.Lexer(stream), true, this, true);\n        var obj = parser.getObj();\n        if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n          continue;\n        }\n        dict = parser.getObj();\n        if (!(0, _primitives.isDict)(dict)) {\n          continue;\n        }\n        if (dict.has('ID')) {\n          return dict;\n        }\n      }\n      if (dict) {\n        return dict;\n      }\n      throw new _util.InvalidPDFException('Invalid PDF structure');\n    },\n    readXRef: function XRef_readXRef(recoveryMode) {\n      var stream = this.stream;\n      var startXRefParsedCache = Object.create(null);\n      try {\n        while (this.startXRefQueue.length) {\n          var startXRef = this.startXRefQueue[0];\n          if (startXRefParsedCache[startXRef]) {\n            (0, _util.warn)('readXRef - skipping XRef table since it was already parsed.');\n            this.startXRefQueue.shift();\n            continue;\n          }\n          startXRefParsedCache[startXRef] = true;\n          stream.pos = startXRef + stream.start;\n          var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n          var obj = parser.getObj();\n          var dict;\n          if ((0, _primitives.isCmd)(obj, 'xref')) {\n            dict = this.processXRefTable(parser);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            obj = dict.get('XRefStm');\n            if (Number.isInteger(obj)) {\n              var pos = obj;\n              if (!(pos in this.xrefstms)) {\n                this.xrefstms[pos] = 1;\n                this.startXRefQueue.push(pos);\n              }\n            }\n          } else if (Number.isInteger(obj)) {\n            if (!Number.isInteger(parser.getObj()) || !(0, _primitives.isCmd)(parser.getObj(), 'obj') || !(0, _primitives.isStream)(obj = parser.getObj())) {\n              throw new _util.FormatError('Invalid XRef stream');\n            }\n            dict = this.processXRefStream(obj);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            if (!dict) {\n              throw new _util.FormatError('Failed to read XRef stream');\n            }\n          } else {\n            throw new _util.FormatError('Invalid XRef stream header');\n          }\n          obj = dict.get('Prev');\n          if (Number.isInteger(obj)) {\n            this.startXRefQueue.push(obj);\n          } else if ((0, _primitives.isRef)(obj)) {\n            this.startXRefQueue.push(obj.num);\n          }\n          this.startXRefQueue.shift();\n        }\n        return this.topDict;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        (0, _util.info)('(while reading XRef): ' + e);\n      }\n      if (recoveryMode) {\n        return;\n      }\n      throw new _util.XRefParseException();\n    },\n    getEntry: function XRef_getEntry(i) {\n      var xrefEntry = this.entries[i];\n      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n        return xrefEntry;\n      }\n      return null;\n    },\n    fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return obj;\n      }\n      return this.fetch(obj, suppressEncryption);\n    },\n    fetch: function XRef_fetch(ref, suppressEncryption) {\n      if (!(0, _primitives.isRef)(ref)) {\n        throw new Error('ref object is not a reference');\n      }\n      var num = ref.num;\n      if (num in this.cache) {\n        var cacheEntry = this.cache[num];\n        if (cacheEntry instanceof _primitives.Dict && !cacheEntry.objId) {\n          cacheEntry.objId = ref.toString();\n        }\n        return cacheEntry;\n      }\n      var xrefEntry = this.getEntry(num);\n      if (xrefEntry === null) {\n        return this.cache[num] = null;\n      }\n      if (xrefEntry.uncompressed) {\n        xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n      } else {\n        xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n      }\n      if ((0, _primitives.isDict)(xrefEntry)) {\n        xrefEntry.objId = ref.toString();\n      } else if ((0, _primitives.isStream)(xrefEntry)) {\n        xrefEntry.dict.objId = ref.toString();\n      }\n      return xrefEntry;\n    },\n    fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\n      var gen = ref.gen;\n      var num = ref.num;\n      if (xrefEntry.gen !== gen) {\n        throw new _util.FormatError('inconsistent generation in XRef');\n      }\n      var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n      var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n      var obj1 = parser.getObj();\n      var obj2 = parser.getObj();\n      var obj3 = parser.getObj();\n      if (!Number.isInteger(obj1)) {\n        obj1 = parseInt(obj1, 10);\n      }\n      if (!Number.isInteger(obj2)) {\n        obj2 = parseInt(obj2, 10);\n      }\n      if (obj1 !== num || obj2 !== gen || !(0, _primitives.isCmd)(obj3)) {\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (obj3.cmd !== 'obj') {\n        if (obj3.cmd.indexOf('obj') === 0) {\n          num = parseInt(obj3.cmd.substring(3), 10);\n          if (!Number.isNaN(num)) {\n            return num;\n          }\n        }\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (this.encrypt && !suppressEncryption) {\n        xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n      } else {\n        xrefEntry = parser.getObj();\n      }\n      if (!(0, _primitives.isStream)(xrefEntry)) {\n        this.cache[num] = xrefEntry;\n      }\n      return xrefEntry;\n    },\n    fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\n      var tableOffset = xrefEntry.offset;\n      var stream = this.fetch(new _primitives.Ref(tableOffset, 0));\n      if (!(0, _primitives.isStream)(stream)) {\n        throw new _util.FormatError('bad ObjStm stream');\n      }\n      var first = stream.dict.get('First');\n      var n = stream.dict.get('N');\n      if (!Number.isInteger(first) || !Number.isInteger(n)) {\n        throw new _util.FormatError('invalid first and n parameters for ObjStm stream');\n      }\n      var parser = new _parser.Parser(new _parser.Lexer(stream), false, this);\n      parser.allowStreams = true;\n      var i,\n          entries = [],\n          num,\n          nums = [];\n      for (i = 0; i < n; ++i) {\n        num = parser.getObj();\n        if (!Number.isInteger(num)) {\n          throw new _util.FormatError('invalid object number in the ObjStm stream: ' + num);\n        }\n        nums.push(num);\n        var offset = parser.getObj();\n        if (!Number.isInteger(offset)) {\n          throw new _util.FormatError('invalid object offset in the ObjStm stream: ' + offset);\n        }\n      }\n      for (i = 0; i < n; ++i) {\n        entries.push(parser.getObj());\n        if ((0, _primitives.isCmd)(parser.buf1, 'endobj')) {\n          parser.shift();\n        }\n        num = nums[i];\n        var entry = this.entries[num];\n        if (entry && entry.offset === tableOffset && entry.gen === i) {\n          this.cache[num] = entries[i];\n        }\n      }\n      xrefEntry = entries[xrefEntry.gen];\n      if (xrefEntry === undefined) {\n        throw new _util.FormatError('bad XRef entry for compressed object');\n      }\n      return xrefEntry;\n    },\n    fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return Promise.resolve(obj);\n      }\n      return this.fetchAsync(obj, suppressEncryption);\n    },\n    fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n      var streamManager = this.stream.manager;\n      var xref = this;\n      return new Promise(function tryFetch(resolve, reject) {\n        try {\n          resolve(xref.fetch(ref, suppressEncryption));\n        } catch (e) {\n          if (e instanceof _util.MissingDataException) {\n            streamManager.requestRange(e.begin, e.end).then(function () {\n              tryFetch(resolve, reject);\n            }, reject);\n            return;\n          }\n          reject(e);\n        }\n      });\n    },\n    getCatalogObj: function XRef_getCatalogObj() {\n      return this.root;\n    }\n  };\n  return XRef;\n}();\nvar NameOrNumberTree = function NameOrNumberTreeClosure() {\n  function NameOrNumberTree(root, xref) {\n    throw new Error('Cannot initialize NameOrNumberTree.');\n  }\n  NameOrNumberTree.prototype = {\n    getAll: function NameOrNumberTree_getAll() {\n      var dict = Object.create(null);\n      if (!this.root) {\n        return dict;\n      }\n      var xref = this.xref;\n      var processed = new _primitives.RefSet();\n      processed.put(this.root);\n      var queue = [this.root];\n      while (queue.length > 0) {\n        var i, n;\n        var obj = xref.fetchIfRef(queue.shift());\n        if (!(0, _primitives.isDict)(obj)) {\n          continue;\n        }\n        if (obj.has('Kids')) {\n          var kids = obj.get('Kids');\n          for (i = 0, n = kids.length; i < n; i++) {\n            var kid = kids[i];\n            if (processed.has(kid)) {\n              throw new _util.FormatError('Duplicate entry in \"' + this._type + '\" tree.');\n            }\n            queue.push(kid);\n            processed.put(kid);\n          }\n          continue;\n        }\n        var entries = obj.get(this._type);\n        if (Array.isArray(entries)) {\n          for (i = 0, n = entries.length; i < n; i += 2) {\n            dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\n          }\n        }\n      }\n      return dict;\n    },\n    get: function NameOrNumberTree_get(key) {\n      if (!this.root) {\n        return null;\n      }\n      var xref = this.xref;\n      var kidsOrEntries = xref.fetchIfRef(this.root);\n      var loopCount = 0;\n      var MAX_LEVELS = 10;\n      var l, r, m;\n      while (kidsOrEntries.has('Kids')) {\n        if (++loopCount > MAX_LEVELS) {\n          (0, _util.warn)('Search depth limit reached for \"' + this._type + '\" tree.');\n          return null;\n        }\n        var kids = kidsOrEntries.get('Kids');\n        if (!Array.isArray(kids)) {\n          return null;\n        }\n        l = 0;\n        r = kids.length - 1;\n        while (l <= r) {\n          m = l + r >> 1;\n          var kid = xref.fetchIfRef(kids[m]);\n          var limits = kid.get('Limits');\n          if (key < xref.fetchIfRef(limits[0])) {\n            r = m - 1;\n          } else if (key > xref.fetchIfRef(limits[1])) {\n            l = m + 1;\n          } else {\n            kidsOrEntries = xref.fetchIfRef(kids[m]);\n            break;\n          }\n        }\n        if (l > r) {\n          return null;\n        }\n      }\n      var entries = kidsOrEntries.get(this._type);\n      if (Array.isArray(entries)) {\n        l = 0;\n        r = entries.length - 2;\n        while (l <= r) {\n          m = l + r & ~1;\n          var currentKey = xref.fetchIfRef(entries[m]);\n          if (key < currentKey) {\n            r = m - 2;\n          } else if (key > currentKey) {\n            l = m + 2;\n          } else {\n            return xref.fetchIfRef(entries[m + 1]);\n          }\n        }\n      }\n      return null;\n    }\n  };\n  return NameOrNumberTree;\n}();\nvar NameTree = function NameTreeClosure() {\n  function NameTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Names';\n  }\n  _util.Util.inherit(NameTree, NameOrNumberTree, {});\n  return NameTree;\n}();\nvar NumberTree = function NumberTreeClosure() {\n  function NumberTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Nums';\n  }\n  _util.Util.inherit(NumberTree, NameOrNumberTree, {});\n  return NumberTree;\n}();\nvar FileSpec = function FileSpecClosure() {\n  function FileSpec(root, xref) {\n    if (!root || !(0, _primitives.isDict)(root)) {\n      return;\n    }\n    this.xref = xref;\n    this.root = root;\n    if (root.has('FS')) {\n      this.fs = root.get('FS');\n    }\n    this.description = root.has('Desc') ? (0, _util.stringToPDFString)(root.get('Desc')) : '';\n    if (root.has('RF')) {\n      (0, _util.warn)('Related file specifications are not supported');\n    }\n    this.contentAvailable = true;\n    if (!root.has('EF')) {\n      this.contentAvailable = false;\n      (0, _util.warn)('Non-embedded file specifications are not supported');\n    }\n  }\n  function pickPlatformItem(dict) {\n    if (dict.has('UF')) {\n      return dict.get('UF');\n    } else if (dict.has('F')) {\n      return dict.get('F');\n    } else if (dict.has('Unix')) {\n      return dict.get('Unix');\n    } else if (dict.has('Mac')) {\n      return dict.get('Mac');\n    } else if (dict.has('DOS')) {\n      return dict.get('DOS');\n    }\n    return null;\n  }\n  FileSpec.prototype = {\n    get filename() {\n      if (!this._filename && this.root) {\n        var filename = pickPlatformItem(this.root) || 'unnamed';\n        this._filename = (0, _util.stringToPDFString)(filename).replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\//g, '/').replace(/\\\\/g, '/');\n      }\n      return this._filename;\n    },\n    get content() {\n      if (!this.contentAvailable) {\n        return null;\n      }\n      if (!this.contentRef && this.root) {\n        this.contentRef = pickPlatformItem(this.root.get('EF'));\n      }\n      var content = null;\n      if (this.contentRef) {\n        var xref = this.xref;\n        var fileObj = xref.fetchIfRef(this.contentRef);\n        if (fileObj && (0, _primitives.isStream)(fileObj)) {\n          content = fileObj.getBytes();\n        } else {\n          (0, _util.warn)('Embedded file specification points to non-existing/invalid ' + 'content');\n        }\n      } else {\n        (0, _util.warn)('Embedded file specification does not have a content');\n      }\n      return content;\n    },\n    get serializable() {\n      return {\n        filename: this.filename,\n        content: this.content\n      };\n    }\n  };\n  return FileSpec;\n}();\nvar ObjectLoader = function () {\n  function mayHaveChildren(value) {\n    return (0, _primitives.isRef)(value) || (0, _primitives.isDict)(value) || Array.isArray(value) || (0, _primitives.isStream)(value);\n  }\n  function addChildren(node, nodesToVisit) {\n    if ((0, _primitives.isDict)(node) || (0, _primitives.isStream)(node)) {\n      var dict = (0, _primitives.isDict)(node) ? node : node.dict;\n      var dictKeys = dict.getKeys();\n      for (var i = 0, ii = dictKeys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(dictKeys[i]);\n        if (mayHaveChildren(rawValue)) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n    } else if (Array.isArray(node)) {\n      for (var _i = 0, _ii = node.length; _i < _ii; _i++) {\n        var value = node[_i];\n        if (mayHaveChildren(value)) {\n          nodesToVisit.push(value);\n        }\n      }\n    }\n  }\n  function ObjectLoader(dict, keys, xref) {\n    this.dict = dict;\n    this.keys = keys;\n    this.xref = xref;\n    this.refSet = null;\n    this.capability = null;\n  }\n  ObjectLoader.prototype = {\n    load: function load() {\n      this.capability = (0, _util.createPromiseCapability)();\n      if (!(this.xref.stream instanceof _chunked_stream.ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\n        this.capability.resolve();\n        return this.capability.promise;\n      }\n      var keys = this.keys,\n          dict = this.dict;\n\n      this.refSet = new _primitives.RefSet();\n      var nodesToVisit = [];\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(keys[i]);\n        if (rawValue !== undefined) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n      this._walk(nodesToVisit);\n      return this.capability.promise;\n    },\n    _walk: function _walk(nodesToVisit) {\n      var _this3 = this;\n\n      var nodesToRevisit = [];\n      var pendingRequests = [];\n      while (nodesToVisit.length) {\n        var currentNode = nodesToVisit.pop();\n        if ((0, _primitives.isRef)(currentNode)) {\n          if (this.refSet.has(currentNode)) {\n            continue;\n          }\n          try {\n            this.refSet.put(currentNode);\n            currentNode = this.xref.fetch(currentNode);\n          } catch (ex) {\n            if (!(ex instanceof _util.MissingDataException)) {\n              throw ex;\n            }\n            nodesToRevisit.push(currentNode);\n            pendingRequests.push({\n              begin: ex.begin,\n              end: ex.end\n            });\n          }\n        }\n        if (currentNode && currentNode.getBaseStreams) {\n          var baseStreams = currentNode.getBaseStreams();\n          var foundMissingData = false;\n          for (var i = 0, ii = baseStreams.length; i < ii; i++) {\n            var stream = baseStreams[i];\n            if (stream.getMissingChunks && stream.getMissingChunks().length) {\n              foundMissingData = true;\n              pendingRequests.push({\n                begin: stream.start,\n                end: stream.end\n              });\n            }\n          }\n          if (foundMissingData) {\n            nodesToRevisit.push(currentNode);\n          }\n        }\n        addChildren(currentNode, nodesToVisit);\n      }\n      if (pendingRequests.length) {\n        this.xref.stream.manager.requestRanges(pendingRequests).then(function () {\n          for (var _i2 = 0, _ii2 = nodesToRevisit.length; _i2 < _ii2; _i2++) {\n            var node = nodesToRevisit[_i2];\n            if ((0, _primitives.isRef)(node)) {\n              _this3.refSet.remove(node);\n            }\n          }\n          _this3._walk(nodesToRevisit);\n        }, this.capability.reject);\n        return;\n      }\n      this.refSet = null;\n      this.capability.resolve();\n    }\n  };\n  return ObjectLoader;\n}();\nexports.Catalog = Catalog;\nexports.ObjectLoader = ObjectLoader;\nexports.XRef = XRef;\nexports.FileSpec = FileSpec;\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxImage = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _arithmetic_decoder = __w_pdfjs_require__(75);\n\nvar JpxError = function JpxErrorClosure() {\n  function JpxError(msg) {\n    this.message = 'JPX error: ' + msg;\n  }\n  JpxError.prototype = new Error();\n  JpxError.prototype.name = 'JpxError';\n  JpxError.constructor = JpxError;\n  return JpxError;\n}();\nvar JpxImage = function JpxImageClosure() {\n  var SubbandsGainLog2 = {\n    'LL': 0,\n    'LH': 1,\n    'HL': 1,\n    'HH': 2\n  };\n  function JpxImage() {\n    this.failOnCorruptedImage = false;\n  }\n  JpxImage.prototype = {\n    parse: function JpxImage_parse(data) {\n      var head = (0, _util.readUint16)(data, 0);\n      if (head === 0xFF4F) {\n        this.parseCodestream(data, 0, data.length);\n        return;\n      }\n      var position = 0,\n          length = data.length;\n      while (position < length) {\n        var headerSize = 8;\n        var lbox = (0, _util.readUint32)(data, position);\n        var tbox = (0, _util.readUint32)(data, position + 4);\n        position += headerSize;\n        if (lbox === 1) {\n          lbox = (0, _util.readUint32)(data, position) * 4294967296 + (0, _util.readUint32)(data, position + 4);\n          position += 8;\n          headerSize += 8;\n        }\n        if (lbox === 0) {\n          lbox = length - position + headerSize;\n        }\n        if (lbox < headerSize) {\n          throw new JpxError('Invalid box field size');\n        }\n        var dataLength = lbox - headerSize;\n        var jumpDataLength = true;\n        switch (tbox) {\n          case 0x6A703268:\n            jumpDataLength = false;\n            break;\n          case 0x636F6C72:\n            var method = data[position];\n            if (method === 1) {\n              var colorspace = (0, _util.readUint32)(data, position + 3);\n              switch (colorspace) {\n                case 16:\n                case 17:\n                case 18:\n                  break;\n                default:\n                  (0, _util.warn)('Unknown colorspace ' + colorspace);\n                  break;\n              }\n            } else if (method === 2) {\n              (0, _util.info)('ICC profile not supported');\n            }\n            break;\n          case 0x6A703263:\n            this.parseCodestream(data, position, position + dataLength);\n            break;\n          case 0x6A502020:\n            if ((0, _util.readUint32)(data, position) !== 0x0d0a870a) {\n              (0, _util.warn)('Invalid JP2 signature');\n            }\n            break;\n          case 0x6A501A1A:\n          case 0x66747970:\n          case 0x72726571:\n          case 0x72657320:\n          case 0x69686472:\n            break;\n          default:\n            var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\n            (0, _util.warn)('Unsupported header type ' + tbox + ' (' + headerType + ')');\n            break;\n        }\n        if (jumpDataLength) {\n          position += dataLength;\n        }\n      }\n    },\n    parseImageProperties: function JpxImage_parseImageProperties(stream) {\n      var newByte = stream.getByte();\n      while (newByte >= 0) {\n        var oldByte = newByte;\n        newByte = stream.getByte();\n        var code = oldByte << 8 | newByte;\n        if (code === 0xFF51) {\n          stream.skip(4);\n          var Xsiz = stream.getInt32() >>> 0;\n          var Ysiz = stream.getInt32() >>> 0;\n          var XOsiz = stream.getInt32() >>> 0;\n          var YOsiz = stream.getInt32() >>> 0;\n          stream.skip(16);\n          var Csiz = stream.getUint16();\n          this.width = Xsiz - XOsiz;\n          this.height = Ysiz - YOsiz;\n          this.componentsCount = Csiz;\n          this.bitsPerComponent = 8;\n          return;\n        }\n      }\n      throw new JpxError('No size marker found in JPX stream');\n    },\n    parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n      var context = {};\n      var doNotRecover = false;\n      try {\n        var position = start;\n        while (position + 1 < end) {\n          var code = (0, _util.readUint16)(data, position);\n          position += 2;\n          var length = 0,\n              j,\n              sqcd,\n              spqcds,\n              spqcdSize,\n              scalarExpounded,\n              tile;\n          switch (code) {\n            case 0xFF4F:\n              context.mainHeader = true;\n              break;\n            case 0xFFD9:\n              break;\n            case 0xFF51:\n              length = (0, _util.readUint16)(data, position);\n              var siz = {};\n              siz.Xsiz = (0, _util.readUint32)(data, position + 4);\n              siz.Ysiz = (0, _util.readUint32)(data, position + 8);\n              siz.XOsiz = (0, _util.readUint32)(data, position + 12);\n              siz.YOsiz = (0, _util.readUint32)(data, position + 16);\n              siz.XTsiz = (0, _util.readUint32)(data, position + 20);\n              siz.YTsiz = (0, _util.readUint32)(data, position + 24);\n              siz.XTOsiz = (0, _util.readUint32)(data, position + 28);\n              siz.YTOsiz = (0, _util.readUint32)(data, position + 32);\n              var componentsCount = (0, _util.readUint16)(data, position + 36);\n              siz.Csiz = componentsCount;\n              var components = [];\n              j = position + 38;\n              for (var i = 0; i < componentsCount; i++) {\n                var component = {\n                  precision: (data[j] & 0x7F) + 1,\n                  isSigned: !!(data[j] & 0x80),\n                  XRsiz: data[j + 1],\n                  YRsiz: data[j + 1]\n                };\n                calculateComponentDimensions(component, siz);\n                components.push(component);\n              }\n              context.SIZ = siz;\n              context.components = components;\n              calculateTileGrids(context, components);\n              context.QCC = [];\n              context.COC = [];\n              break;\n            case 0xFF5C:\n              length = (0, _util.readUint16)(data, position);\n              var qcd = {};\n              j = position + 2;\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcd.noQuantization = spqcdSize === 8;\n              qcd.scalarExpounded = scalarExpounded;\n              qcd.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                var spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcd.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCD = qcd;\n              } else {\n                context.currentTile.QCD = qcd;\n                context.currentTile.QCC = [];\n              }\n              break;\n            case 0xFF5D:\n              length = (0, _util.readUint16)(data, position);\n              var qcc = {};\n              j = position + 2;\n              var cqcc;\n              if (context.SIZ.Csiz < 257) {\n                cqcc = data[j++];\n              } else {\n                cqcc = (0, _util.readUint16)(data, j);\n                j += 2;\n              }\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcc.noQuantization = spqcdSize === 8;\n              qcc.scalarExpounded = scalarExpounded;\n              qcc.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcc.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCC[cqcc] = qcc;\n              } else {\n                context.currentTile.QCC[cqcc] = qcc;\n              }\n              break;\n            case 0xFF52:\n              length = (0, _util.readUint16)(data, position);\n              var cod = {};\n              j = position + 2;\n              var scod = data[j++];\n              cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n              cod.sopMarkerUsed = !!(scod & 2);\n              cod.ephMarkerUsed = !!(scod & 4);\n              cod.progressionOrder = data[j++];\n              cod.layersCount = (0, _util.readUint16)(data, j);\n              j += 2;\n              cod.multipleComponentTransform = data[j++];\n              cod.decompositionLevelsCount = data[j++];\n              cod.xcb = (data[j++] & 0xF) + 2;\n              cod.ycb = (data[j++] & 0xF) + 2;\n              var blockStyle = data[j++];\n              cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n              cod.resetContextProbabilities = !!(blockStyle & 2);\n              cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n              cod.verticalyStripe = !!(blockStyle & 8);\n              cod.predictableTermination = !!(blockStyle & 16);\n              cod.segmentationSymbolUsed = !!(blockStyle & 32);\n              cod.reversibleTransformation = data[j++];\n              if (cod.entropyCoderWithCustomPrecincts) {\n                var precinctsSizes = [];\n                while (j < length + position) {\n                  var precinctsSize = data[j++];\n                  precinctsSizes.push({\n                    PPx: precinctsSize & 0xF,\n                    PPy: precinctsSize >> 4\n                  });\n                }\n                cod.precinctsSizes = precinctsSizes;\n              }\n              var unsupported = [];\n              if (cod.selectiveArithmeticCodingBypass) {\n                unsupported.push('selectiveArithmeticCodingBypass');\n              }\n              if (cod.resetContextProbabilities) {\n                unsupported.push('resetContextProbabilities');\n              }\n              if (cod.terminationOnEachCodingPass) {\n                unsupported.push('terminationOnEachCodingPass');\n              }\n              if (cod.verticalyStripe) {\n                unsupported.push('verticalyStripe');\n              }\n              if (cod.predictableTermination) {\n                unsupported.push('predictableTermination');\n              }\n              if (unsupported.length > 0) {\n                doNotRecover = true;\n                throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\n              }\n              if (context.mainHeader) {\n                context.COD = cod;\n              } else {\n                context.currentTile.COD = cod;\n                context.currentTile.COC = [];\n              }\n              break;\n            case 0xFF90:\n              length = (0, _util.readUint16)(data, position);\n              tile = {};\n              tile.index = (0, _util.readUint16)(data, position + 2);\n              tile.length = (0, _util.readUint32)(data, position + 4);\n              tile.dataEnd = tile.length + position - 2;\n              tile.partIndex = data[position + 8];\n              tile.partsCount = data[position + 9];\n              context.mainHeader = false;\n              if (tile.partIndex === 0) {\n                tile.COD = context.COD;\n                tile.COC = context.COC.slice(0);\n                tile.QCD = context.QCD;\n                tile.QCC = context.QCC.slice(0);\n              }\n              context.currentTile = tile;\n              break;\n            case 0xFF93:\n              tile = context.currentTile;\n              if (tile.partIndex === 0) {\n                initializeTile(context, tile.index);\n                buildPackets(context);\n              }\n              length = tile.dataEnd - position;\n              parseTilePackets(context, data, position, length);\n              break;\n            case 0xFF55:\n            case 0xFF57:\n            case 0xFF58:\n            case 0xFF64:\n              length = (0, _util.readUint16)(data, position);\n              break;\n            case 0xFF53:\n              throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\n            default:\n              throw new Error('Unknown codestream code: ' + code.toString(16));\n          }\n          position += length;\n        }\n      } catch (e) {\n        if (doNotRecover || this.failOnCorruptedImage) {\n          throw new JpxError(e.message);\n        } else {\n          (0, _util.warn)('JPX: Trying to recover from: ' + e.message);\n        }\n      }\n      this.tiles = transformComponents(context);\n      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n      this.componentsCount = context.SIZ.Csiz;\n    }\n  };\n  function calculateComponentDimensions(component, siz) {\n    component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n    component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n    component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n    component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n    component.width = component.x1 - component.x0;\n    component.height = component.y1 - component.y0;\n  }\n  function calculateTileGrids(context, components) {\n    var siz = context.SIZ;\n    var tile,\n        tiles = [];\n    var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n    var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n    for (var q = 0; q < numYtiles; q++) {\n      for (var p = 0; p < numXtiles; p++) {\n        tile = {};\n        tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n        tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n        tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n        tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n        tile.width = tile.tx1 - tile.tx0;\n        tile.height = tile.ty1 - tile.ty0;\n        tile.components = [];\n        tiles.push(tile);\n      }\n    }\n    context.tiles = tiles;\n    var componentsCount = siz.Csiz;\n    for (var i = 0, ii = componentsCount; i < ii; i++) {\n      var component = components[i];\n      for (var j = 0, jj = tiles.length; j < jj; j++) {\n        var tileComponent = {};\n        tile = tiles[j];\n        tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n        tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n        tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n        tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n        tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n        tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n        tile.components[i] = tileComponent;\n      }\n    }\n  }\n  function getBlocksDimensions(context, component, r) {\n    var codOrCoc = component.codingStyleParameters;\n    var result = {};\n    if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n      result.PPx = 15;\n      result.PPy = 15;\n    } else {\n      result.PPx = codOrCoc.precinctsSizes[r].PPx;\n      result.PPy = codOrCoc.precinctsSizes[r].PPy;\n    }\n    result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n    result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n    return result;\n  }\n  function buildPrecincts(context, resolution, dimensions) {\n    var precinctWidth = 1 << dimensions.PPx;\n    var precinctHeight = 1 << dimensions.PPy;\n    var isZeroRes = resolution.resLevel === 0;\n    var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n    var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n    var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n    var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n    var numprecincts = numprecinctswide * numprecinctshigh;\n    resolution.precinctParameters = {\n      precinctWidth: precinctWidth,\n      precinctHeight: precinctHeight,\n      numprecinctswide: numprecinctswide,\n      numprecinctshigh: numprecinctshigh,\n      numprecincts: numprecincts,\n      precinctWidthInSubband: precinctWidthInSubband,\n      precinctHeightInSubband: precinctHeightInSubband\n    };\n  }\n  function buildCodeblocks(context, subband, dimensions) {\n    var xcb_ = dimensions.xcb_;\n    var ycb_ = dimensions.ycb_;\n    var codeblockWidth = 1 << xcb_;\n    var codeblockHeight = 1 << ycb_;\n    var cbx0 = subband.tbx0 >> xcb_;\n    var cby0 = subband.tby0 >> ycb_;\n    var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n    var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n    var precinctParameters = subband.resolution.precinctParameters;\n    var codeblocks = [];\n    var precincts = [];\n    var i, j, codeblock, precinctNumber;\n    for (j = cby0; j < cby1; j++) {\n      for (i = cbx0; i < cbx1; i++) {\n        codeblock = {\n          cbx: i,\n          cby: j,\n          tbx0: codeblockWidth * i,\n          tby0: codeblockHeight * j,\n          tbx1: codeblockWidth * (i + 1),\n          tby1: codeblockHeight * (j + 1)\n        };\n        codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n        codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n        codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n        codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n        var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n        var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n        precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n        codeblock.precinctNumber = precinctNumber;\n        codeblock.subbandType = subband.type;\n        codeblock.Lblock = 3;\n        if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n          continue;\n        }\n        codeblocks.push(codeblock);\n        var precinct = precincts[precinctNumber];\n        if (precinct !== undefined) {\n          if (i < precinct.cbxMin) {\n            precinct.cbxMin = i;\n          } else if (i > precinct.cbxMax) {\n            precinct.cbxMax = i;\n          }\n          if (j < precinct.cbyMin) {\n            precinct.cbxMin = j;\n          } else if (j > precinct.cbyMax) {\n            precinct.cbyMax = j;\n          }\n        } else {\n          precincts[precinctNumber] = precinct = {\n            cbxMin: i,\n            cbyMin: j,\n            cbxMax: i,\n            cbyMax: j\n          };\n        }\n        codeblock.precinct = precinct;\n      }\n    }\n    subband.codeblockParameters = {\n      codeblockWidth: xcb_,\n      codeblockHeight: ycb_,\n      numcodeblockwide: cbx1 - cbx0 + 1,\n      numcodeblockhigh: cby1 - cby0 + 1\n    };\n    subband.codeblocks = codeblocks;\n    subband.precincts = precincts;\n  }\n  function createPacket(resolution, precinctNumber, layerNumber) {\n    var precinctCodeblocks = [];\n    var subbands = resolution.subbands;\n    for (var i = 0, ii = subbands.length; i < ii; i++) {\n      var subband = subbands[i];\n      var codeblocks = subband.codeblocks;\n      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n        var codeblock = codeblocks[j];\n        if (codeblock.precinctNumber !== precinctNumber) {\n          continue;\n        }\n        precinctCodeblocks.push(codeblock);\n      }\n    }\n    return {\n      layerNumber: layerNumber,\n      codeblocks: precinctCodeblocks\n    };\n  }\n  function LayerResolutionComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var l = 0,\n        r = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; l < layersCount; l++) {\n        for (; r <= maxDecompositionLevelsCount; r++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        r = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionLayerComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var r = 0,\n        l = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; l < layersCount; l++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        l = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionPositionComponentLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var l, r, c, p;\n    var maxDecompositionLevelsCount = 0;\n    for (c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n    }\n    var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n    for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n      var maxNumPrecincts = 0;\n      for (c = 0; c < componentsCount; ++c) {\n        var resolutions = tile.components[c].resolutions;\n        if (r < resolutions.length) {\n          maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n        }\n      }\n      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n    }\n    l = 0;\n    r = 0;\n    c = 0;\n    p = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; p < maxNumPrecinctsInLevel[r]; p++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            if (p >= numprecincts) {\n              continue;\n            }\n            for (; l < layersCount;) {\n              var packet = createPacket(resolution, p, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          c = 0;\n        }\n        p = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function PositionComponentResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var precinctsIterationSizes = precinctsSizes;\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          c = 0;\n        }\n        px = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ComponentPositionResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; c < componentsCount; ++c) {\n        var component = tile.components[c];\n        var precinctsIterationSizes = precinctsSizes.components[c];\n        var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n          for (; px < precinctsIterationSizes.maxNumWide; px++) {\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          px = 0;\n        }\n        py = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n    var posX = pxIndex * precinctIterationSizes.minWidth;\n    var posY = pyIndex * precinctIterationSizes.minHeight;\n    if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n      return null;\n    }\n    var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n    return posX / sizeInImageScale.height + startPrecinctRowIndex;\n  }\n  function getPrecinctSizesInImageScale(tile) {\n    var componentsCount = tile.components.length;\n    var minWidth = Number.MAX_VALUE;\n    var minHeight = Number.MAX_VALUE;\n    var maxNumWide = 0;\n    var maxNumHigh = 0;\n    var sizePerComponent = new Array(componentsCount);\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var sizePerResolution = new Array(decompositionLevelsCount + 1);\n      var minWidthCurrentComponent = Number.MAX_VALUE;\n      var minHeightCurrentComponent = Number.MAX_VALUE;\n      var maxNumWideCurrentComponent = 0;\n      var maxNumHighCurrentComponent = 0;\n      var scale = 1;\n      for (var r = decompositionLevelsCount; r >= 0; --r) {\n        var resolution = component.resolutions[r];\n        var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n        var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n        minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n        minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n        maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n        maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n        sizePerResolution[r] = {\n          width: widthCurrentResolution,\n          height: heightCurrentResolution\n        };\n        scale <<= 1;\n      }\n      minWidth = Math.min(minWidth, minWidthCurrentComponent);\n      minHeight = Math.min(minHeight, minHeightCurrentComponent);\n      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n      sizePerComponent[c] = {\n        resolutions: sizePerResolution,\n        minWidth: minWidthCurrentComponent,\n        minHeight: minHeightCurrentComponent,\n        maxNumWide: maxNumWideCurrentComponent,\n        maxNumHigh: maxNumHighCurrentComponent\n      };\n    }\n    return {\n      components: sizePerComponent,\n      minWidth: minWidth,\n      minHeight: minHeight,\n      maxNumWide: maxNumWide,\n      maxNumHigh: maxNumHigh\n    };\n  }\n  function buildPackets(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var componentsCount = siz.Csiz;\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var resolutions = [];\n      var subbands = [];\n      for (var r = 0; r <= decompositionLevelsCount; r++) {\n        var blocksDimensions = getBlocksDimensions(context, component, r);\n        var resolution = {};\n        var scale = 1 << decompositionLevelsCount - r;\n        resolution.trx0 = Math.ceil(component.tcx0 / scale);\n        resolution.try0 = Math.ceil(component.tcy0 / scale);\n        resolution.trx1 = Math.ceil(component.tcx1 / scale);\n        resolution.try1 = Math.ceil(component.tcy1 / scale);\n        resolution.resLevel = r;\n        buildPrecincts(context, resolution, blocksDimensions);\n        resolutions.push(resolution);\n        var subband;\n        if (r === 0) {\n          subband = {};\n          subband.type = 'LL';\n          subband.tbx0 = Math.ceil(component.tcx0 / scale);\n          subband.tby0 = Math.ceil(component.tcy0 / scale);\n          subband.tbx1 = Math.ceil(component.tcx1 / scale);\n          subband.tby1 = Math.ceil(component.tcy1 / scale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolution.subbands = [subband];\n        } else {\n          var bscale = 1 << decompositionLevelsCount - r + 1;\n          var resolutionSubbands = [];\n          subband = {};\n          subband.type = 'HL';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'LH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'HH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          resolution.subbands = resolutionSubbands;\n        }\n      }\n      component.resolutions = resolutions;\n      component.subbands = subbands;\n    }\n    var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n    switch (progressionOrder) {\n      case 0:\n        tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n        break;\n      case 1:\n        tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n        break;\n      case 2:\n        tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n        break;\n      case 3:\n        tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n        break;\n      case 4:\n        tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n        break;\n      default:\n        throw new JpxError('Unsupported progression order ' + progressionOrder);\n    }\n  }\n  function parseTilePackets(context, data, offset, dataLength) {\n    var position = 0;\n    var buffer,\n        bufferSize = 0,\n        skipNextBit = false;\n    function readBits(count) {\n      while (bufferSize < count) {\n        var b = data[offset + position];\n        position++;\n        if (skipNextBit) {\n          buffer = buffer << 7 | b;\n          bufferSize += 7;\n          skipNextBit = false;\n        } else {\n          buffer = buffer << 8 | b;\n          bufferSize += 8;\n        }\n        if (b === 0xFF) {\n          skipNextBit = true;\n        }\n      }\n      bufferSize -= count;\n      return buffer >>> bufferSize & (1 << count) - 1;\n    }\n    function skipMarkerIfEqual(value) {\n      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\n        skipBytes(1);\n        return true;\n      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\n        skipBytes(2);\n        return true;\n      }\n      return false;\n    }\n    function skipBytes(count) {\n      position += count;\n    }\n    function alignToByte() {\n      bufferSize = 0;\n      if (skipNextBit) {\n        position++;\n        skipNextBit = false;\n      }\n    }\n    function readCodingpasses() {\n      if (readBits(1) === 0) {\n        return 1;\n      }\n      if (readBits(1) === 0) {\n        return 2;\n      }\n      var value = readBits(2);\n      if (value < 3) {\n        return value + 3;\n      }\n      value = readBits(5);\n      if (value < 31) {\n        return value + 6;\n      }\n      value = readBits(7);\n      return value + 37;\n    }\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var sopMarkerUsed = context.COD.sopMarkerUsed;\n    var ephMarkerUsed = context.COD.ephMarkerUsed;\n    var packetsIterator = tile.packetsIterator;\n    while (position < dataLength) {\n      alignToByte();\n      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n        skipBytes(4);\n      }\n      var packet = packetsIterator.nextPacket();\n      if (!readBits(1)) {\n        continue;\n      }\n      var layerNumber = packet.layerNumber;\n      var queue = [],\n          codeblock;\n      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n        codeblock = packet.codeblocks[i];\n        var precinct = codeblock.precinct;\n        var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n        var codeblockRow = codeblock.cby - precinct.cbyMin;\n        var codeblockIncluded = false;\n        var firstTimeInclusion = false;\n        var valueReady;\n        if (codeblock['included'] !== undefined) {\n          codeblockIncluded = !!readBits(1);\n        } else {\n          precinct = codeblock.precinct;\n          var inclusionTree, zeroBitPlanesTree;\n          if (precinct['inclusionTree'] !== undefined) {\n            inclusionTree = precinct.inclusionTree;\n          } else {\n            var width = precinct.cbxMax - precinct.cbxMin + 1;\n            var height = precinct.cbyMax - precinct.cbyMin + 1;\n            inclusionTree = new InclusionTree(width, height, layerNumber);\n            zeroBitPlanesTree = new TagTree(width, height);\n            precinct.inclusionTree = inclusionTree;\n            precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n          }\n          if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n            while (true) {\n              if (readBits(1)) {\n                valueReady = !inclusionTree.nextLevel();\n                if (valueReady) {\n                  codeblock.included = true;\n                  codeblockIncluded = firstTimeInclusion = true;\n                  break;\n                }\n              } else {\n                inclusionTree.incrementValue(layerNumber);\n                break;\n              }\n            }\n          }\n        }\n        if (!codeblockIncluded) {\n          continue;\n        }\n        if (firstTimeInclusion) {\n          zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n          zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n          while (true) {\n            if (readBits(1)) {\n              valueReady = !zeroBitPlanesTree.nextLevel();\n              if (valueReady) {\n                break;\n              }\n            } else {\n              zeroBitPlanesTree.incrementValue();\n            }\n          }\n          codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n        }\n        var codingpasses = readCodingpasses();\n        while (readBits(1)) {\n          codeblock.Lblock++;\n        }\n        var codingpassesLog2 = (0, _util.log2)(codingpasses);\n        var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n        var codedDataLength = readBits(bits);\n        queue.push({\n          codeblock: codeblock,\n          codingpasses: codingpasses,\n          dataLength: codedDataLength\n        });\n      }\n      alignToByte();\n      if (ephMarkerUsed) {\n        skipMarkerIfEqual(0x92);\n      }\n      while (queue.length > 0) {\n        var packetItem = queue.shift();\n        codeblock = packetItem.codeblock;\n        if (codeblock['data'] === undefined) {\n          codeblock.data = [];\n        }\n        codeblock.data.push({\n          data: data,\n          start: offset + position,\n          end: offset + position + packetItem.dataLength,\n          codingpasses: packetItem.codingpasses\n        });\n        position += packetItem.dataLength;\n      }\n    }\n    return position;\n  }\n  function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n    var x0 = subband.tbx0;\n    var y0 = subband.tby0;\n    var width = subband.tbx1 - subband.tbx0;\n    var codeblocks = subband.codeblocks;\n    var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n    var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n    for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n      var codeblock = codeblocks[i];\n      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n      if (blockWidth === 0 || blockHeight === 0) {\n        continue;\n      }\n      if (codeblock['data'] === undefined) {\n        continue;\n      }\n      var bitModel, currentCodingpassType;\n      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n      currentCodingpassType = 2;\n      var data = codeblock.data,\n          totalLength = 0,\n          codingpasses = 0;\n      var j, jj, dataItem;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        totalLength += dataItem.end - dataItem.start;\n        codingpasses += dataItem.codingpasses;\n      }\n      var encodedData = new Uint8Array(totalLength);\n      var position = 0;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n        encodedData.set(chunk, position);\n        position += chunk.length;\n      }\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(encodedData, 0, totalLength);\n      bitModel.setDecoder(decoder);\n      for (j = 0; j < codingpasses; j++) {\n        switch (currentCodingpassType) {\n          case 0:\n            bitModel.runSignificancePropagationPass();\n            break;\n          case 1:\n            bitModel.runMagnitudeRefinementPass();\n            break;\n          case 2:\n            bitModel.runCleanupPass();\n            if (segmentationSymbolUsed) {\n              bitModel.checkSegmentationSymbol();\n            }\n            break;\n        }\n        currentCodingpassType = (currentCodingpassType + 1) % 3;\n      }\n      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n      var sign = bitModel.coefficentsSign;\n      var magnitude = bitModel.coefficentsMagnitude;\n      var bitsDecoded = bitModel.bitsDecoded;\n      var magnitudeCorrection = reversible ? 0 : 0.5;\n      var k, n, nb;\n      position = 0;\n      var interleave = subband.type !== 'LL';\n      for (j = 0; j < blockHeight; j++) {\n        var row = offset / width | 0;\n        var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n        for (k = 0; k < blockWidth; k++) {\n          n = magnitude[position];\n          if (n !== 0) {\n            n = (n + magnitudeCorrection) * delta;\n            if (sign[position] !== 0) {\n              n = -n;\n            }\n            nb = bitsDecoded[position];\n            var pos = interleave ? levelOffset + (offset << 1) : offset;\n            if (reversible && nb >= mb) {\n              coefficients[pos] = n;\n            } else {\n              coefficients[pos] = n * (1 << mb - nb);\n            }\n          }\n          offset++;\n          position++;\n        }\n        offset += width - blockWidth;\n      }\n    }\n  }\n  function transformTile(context, tile, c) {\n    var component = tile.components[c];\n    var codingStyleParameters = component.codingStyleParameters;\n    var quantizationParameters = component.quantizationParameters;\n    var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n    var spqcds = quantizationParameters.SPqcds;\n    var scalarExpounded = quantizationParameters.scalarExpounded;\n    var guardBits = quantizationParameters.guardBits;\n    var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n    var precision = context.components[c].precision;\n    var reversible = codingStyleParameters.reversibleTransformation;\n    var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n    var subbandCoefficients = [];\n    var b = 0;\n    for (var i = 0; i <= decompositionLevelsCount; i++) {\n      var resolution = component.resolutions[i];\n      var width = resolution.trx1 - resolution.trx0;\n      var height = resolution.try1 - resolution.try0;\n      var coefficients = new Float32Array(width * height);\n      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n        var mu, epsilon;\n        if (!scalarExpounded) {\n          mu = spqcds[0].mu;\n          epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n        } else {\n          mu = spqcds[b].mu;\n          epsilon = spqcds[b].epsilon;\n          b++;\n        }\n        var subband = resolution.subbands[j];\n        var gainLog2 = SubbandsGainLog2[subband.type];\n        var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n        var mb = guardBits + epsilon - 1;\n        copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n      }\n      subbandCoefficients.push({\n        width: width,\n        height: height,\n        items: coefficients\n      });\n    }\n    var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n    return {\n      left: component.tcx0,\n      top: component.tcy0,\n      width: result.width,\n      height: result.height,\n      items: result.items\n    };\n  }\n  function transformComponents(context) {\n    var siz = context.SIZ;\n    var components = context.components;\n    var componentsCount = siz.Csiz;\n    var resultImages = [];\n    for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n      var tile = context.tiles[i];\n      var transformedTiles = [];\n      var c;\n      for (c = 0; c < componentsCount; c++) {\n        transformedTiles[c] = transformTile(context, tile, c);\n      }\n      var tile0 = transformedTiles[0];\n      var out = new Uint8ClampedArray(tile0.items.length * componentsCount);\n      var result = {\n        left: tile0.left,\n        top: tile0.top,\n        width: tile0.width,\n        height: tile0.height,\n        items: out\n      };\n      var shift, offset;\n      var pos = 0,\n          j,\n          jj,\n          y0,\n          y1,\n          y2;\n      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n        var fourComponents = componentsCount === 4;\n        var y0items = transformedTiles[0].items;\n        var y1items = transformedTiles[1].items;\n        var y2items = transformedTiles[2].items;\n        var y3items = fourComponents ? transformedTiles[3].items : null;\n        shift = components[0].precision - 8;\n        offset = (128 << shift) + 0.5;\n        var component0 = tile.components[0];\n        var alpha01 = componentsCount - 3;\n        jj = y0items.length;\n        if (!component0.codingStyleParameters.reversibleTransformation) {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            out[pos++] = y0 + 1.402 * y2 >> shift;\n            out[pos++] = y0 - 0.34413 * y1 - 0.71414 * y2 >> shift;\n            out[pos++] = y0 + 1.772 * y1 >> shift;\n          }\n        } else {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            var g = y0 - (y2 + y1 >> 2);\n            out[pos++] = g + y2 >> shift;\n            out[pos++] = g >> shift;\n            out[pos++] = g + y1 >> shift;\n          }\n        }\n        if (fourComponents) {\n          for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n            out[pos] = y3items[j] + offset >> shift;\n          }\n        }\n      } else {\n        for (c = 0; c < componentsCount; c++) {\n          var items = transformedTiles[c].items;\n          shift = components[c].precision - 8;\n          offset = (128 << shift) + 0.5;\n          for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n            out[pos] = items[j] + offset >> shift;\n            pos += componentsCount;\n          }\n        }\n      }\n      resultImages.push(result);\n    }\n    return resultImages;\n  }\n  function initializeTile(context, tileIndex) {\n    var siz = context.SIZ;\n    var componentsCount = siz.Csiz;\n    var tile = context.tiles[tileIndex];\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n      component.quantizationParameters = qcdOrQcc;\n      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n      component.codingStyleParameters = codOrCoc;\n    }\n    tile.codingStyleDefaultParameters = context.currentTile.COD;\n  }\n  var TagTree = function TagTreeClosure() {\n    function TagTree(width, height) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var level = {\n          width: width,\n          height: height,\n          items: []\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    TagTree.prototype = {\n      reset: function TagTree_reset(i, j) {\n        var currentLevel = 0,\n            value = 0,\n            level;\n        while (currentLevel < this.levels.length) {\n          level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          if (level.items[index] !== undefined) {\n            value = level.items[index];\n            break;\n          }\n          level.index = index;\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        currentLevel--;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        this.currentLevel = currentLevel;\n        delete this.value;\n      },\n      incrementValue: function TagTree_incrementValue() {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index]++;\n      },\n      nextLevel: function TagTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        currentLevel--;\n        if (currentLevel < 0) {\n          this.value = value;\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return TagTree;\n  }();\n  var InclusionTree = function InclusionTreeClosure() {\n    function InclusionTree(width, height, defaultValue) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var items = new Uint8Array(width * height);\n        for (var j = 0, jj = items.length; j < jj; j++) {\n          items[j] = defaultValue;\n        }\n        var level = {\n          width: width,\n          height: height,\n          items: items\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    InclusionTree.prototype = {\n      reset: function InclusionTree_reset(i, j, stopValue) {\n        var currentLevel = 0;\n        while (currentLevel < this.levels.length) {\n          var level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          level.index = index;\n          var value = level.items[index];\n          if (value === 0xFF) {\n            break;\n          }\n          if (value > stopValue) {\n            this.currentLevel = currentLevel;\n            this.propagateValues();\n            return false;\n          }\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        this.currentLevel = currentLevel - 1;\n        return true;\n      },\n      incrementValue: function InclusionTree_incrementValue(stopValue) {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index] = stopValue + 1;\n        this.propagateValues();\n      },\n      propagateValues: function InclusionTree_propagateValues() {\n        var levelIndex = this.currentLevel;\n        var level = this.levels[levelIndex];\n        var currentValue = level.items[level.index];\n        while (--levelIndex >= 0) {\n          level = this.levels[levelIndex];\n          level.items[level.index] = currentValue;\n        }\n      },\n      nextLevel: function InclusionTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        level.items[level.index] = 0xFF;\n        currentLevel--;\n        if (currentLevel < 0) {\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return InclusionTree;\n  }();\n  var BitModel = function BitModelClosure() {\n    var UNIFORM_CONTEXT = 17;\n    var RUNLENGTH_CONTEXT = 18;\n    var LLAndLHContextsLabel = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]);\n    var HLContextLabel = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]);\n    var HHContextLabel = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);\n    function BitModel(width, height, subband, zeroBitPlanes, mb) {\n      this.width = width;\n      this.height = height;\n      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\n      var coefficientCount = width * height;\n      this.neighborsSignificance = new Uint8Array(coefficientCount);\n      this.coefficentsSign = new Uint8Array(coefficientCount);\n      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\n      this.processingFlags = new Uint8Array(coefficientCount);\n      var bitsDecoded = new Uint8Array(coefficientCount);\n      if (zeroBitPlanes !== 0) {\n        for (var i = 0; i < coefficientCount; i++) {\n          bitsDecoded[i] = zeroBitPlanes;\n        }\n      }\n      this.bitsDecoded = bitsDecoded;\n      this.reset();\n    }\n    BitModel.prototype = {\n      setDecoder: function BitModel_setDecoder(decoder) {\n        this.decoder = decoder;\n      },\n      reset: function BitModel_reset() {\n        this.contexts = new Int8Array(19);\n        this.contexts[0] = 4 << 1 | 0;\n        this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n        this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n      },\n      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n        var neighborsSignificance = this.neighborsSignificance;\n        var width = this.width,\n            height = this.height;\n        var left = column > 0;\n        var right = column + 1 < width;\n        var i;\n        if (row > 0) {\n          i = index - width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (row + 1 < height) {\n          i = index + width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (left) {\n          neighborsSignificance[index - 1] += 0x01;\n        }\n        if (right) {\n          neighborsSignificance[index + 1] += 0x01;\n        }\n        neighborsSignificance[index] |= 0x80;\n      },\n      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var neighborsSignificance = this.neighborsSignificance;\n        var processingFlags = this.processingFlags;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processedInverseMask = ~1;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        for (var i0 = 0; i0 < height; i0 += 4) {\n          for (var j = 0; j < width; j++) {\n            var index = i0 * width + j;\n            for (var i1 = 0; i1 < 4; i1++, index += width) {\n              var i = i0 + i1;\n              if (i >= height) {\n                break;\n              }\n              processingFlags[index] &= processedInverseMask;\n              if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision) {\n                var sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contribution, sign0, sign1, significance1;\n        var contextLabel, decoded;\n        significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n        if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n          sign1 = coefficentsSign[index + 1];\n          if (significance1) {\n            sign0 = coefficentsSign[index - 1];\n            contribution = 1 - sign1 - sign0;\n          } else {\n            contribution = 1 - sign1 - sign1;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - 1];\n          contribution = 1 - sign0 - sign0;\n        } else {\n          contribution = 0;\n        }\n        var horizontalContribution = 3 * contribution;\n        significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n        if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n          sign1 = coefficentsSign[index + width];\n          if (significance1) {\n            sign0 = coefficentsSign[index - width];\n            contribution = 1 - sign1 - sign0 + horizontalContribution;\n          } else {\n            contribution = 1 - sign1 - sign1 + horizontalContribution;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - width];\n          contribution = 1 - sign0 - sign0 + horizontalContribution;\n        } else {\n          contribution = horizontalContribution;\n        }\n        if (contribution >= 0) {\n          contextLabel = 9 + contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel);\n        } else {\n          contextLabel = 9 - contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n        }\n        return decoded;\n      },\n      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var neighborsSignificance = this.neighborsSignificance;\n        var contexts = this.contexts;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var length = width * height;\n        var width4 = width * 4;\n        for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n          indexNext = Math.min(length, index0 + width4);\n          for (var j = 0; j < width; j++) {\n            for (var index = index0 + j; index < indexNext; index += width) {\n              if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = 16;\n              if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n                processingFlags[index] ^= firstMagnitudeBitMask;\n                var significance = neighborsSignificance[index] & 127;\n                contextLabel = significance === 0 ? 15 : 14;\n              }\n              var bit = decoder.readBit(contexts, contextLabel);\n              coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      runCleanupPass: function BitModel_runCleanupPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var neighborsSignificance = this.neighborsSignificance;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var oneRowDown = width;\n        var twoRowsDown = width * 2;\n        var threeRowsDown = width * 3;\n        var iNext;\n        for (var i0 = 0; i0 < height; i0 = iNext) {\n          iNext = Math.min(i0 + 4, height);\n          var indexBase = i0 * width;\n          var checkAllEmpty = i0 + 3 < height;\n          for (var j = 0; j < width; j++) {\n            var index0 = indexBase + j;\n            var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n            var i1 = 0,\n                index = index0;\n            var i = i0,\n                sign;\n            if (allEmpty) {\n              var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n              if (!hasSignificantCoefficent) {\n                bitsDecoded[index0]++;\n                bitsDecoded[index0 + oneRowDown]++;\n                bitsDecoded[index0 + twoRowsDown]++;\n                bitsDecoded[index0 + threeRowsDown]++;\n                continue;\n              }\n              i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n              if (i1 !== 0) {\n                i = i0 + i1;\n                index += i1 * width;\n              }\n              sign = this.decodeSignBit(i, j, index);\n              coefficentsSign[index] = sign;\n              coefficentsMagnitude[index] = 1;\n              this.setNeighborsSignificance(i, j, index);\n              processingFlags[index] |= firstMagnitudeBitMask;\n              index = index0;\n              for (var i2 = i0; i2 <= i; i2++, index += width) {\n                bitsDecoded[index]++;\n              }\n              i1++;\n            }\n            for (i = i0 + i1; i < iNext; i++, index += width) {\n              if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision === 1) {\n                sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n            }\n          }\n        }\n      },\n      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n        var decoder = this.decoder;\n        var contexts = this.contexts;\n        var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n        if (symbol !== 0xA) {\n          throw new JpxError('Invalid segmentation symbol');\n        }\n      }\n    };\n    return BitModel;\n  }();\n  var Transform = function TransformClosure() {\n    function Transform() {}\n    Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n      var ll = subbands[0];\n      for (var i = 1, ii = subbands.length; i < ii; i++) {\n        ll = this.iterate(ll, subbands[i], u0, v0);\n      }\n      return ll;\n    };\n    Transform.prototype.extend = function extend(buffer, offset, size) {\n      var i1 = offset - 1,\n          j1 = offset + 1;\n      var i2 = offset + size - 2,\n          j2 = offset + size;\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1] = buffer[j1];\n      buffer[j2] = buffer[i2];\n    };\n    Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n      var llWidth = ll.width,\n          llHeight = ll.height,\n          llItems = ll.items;\n      var width = hl_lh_hh.width;\n      var height = hl_lh_hh.height;\n      var items = hl_lh_hh.items;\n      var i, j, k, l, u, v;\n      for (k = 0, i = 0; i < llHeight; i++) {\n        l = i * 2 * width;\n        for (j = 0; j < llWidth; j++, k++, l += 2) {\n          items[l] = llItems[k];\n        }\n      }\n      llItems = ll.items = null;\n      var bufferPadding = 4;\n      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n      if (width === 1) {\n        if ((u0 & 1) !== 0) {\n          for (v = 0, k = 0; v < height; v++, k += width) {\n            items[k] *= 0.5;\n          }\n        }\n      } else {\n        for (v = 0, k = 0; v < height; v++, k += width) {\n          rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n          this.extend(rowBuffer, bufferPadding, width);\n          this.filter(rowBuffer, bufferPadding, width);\n          items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n        }\n      }\n      var numBuffers = 16;\n      var colBuffers = [];\n      for (i = 0; i < numBuffers; i++) {\n        colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n      }\n      var b,\n          currentBuffer = 0;\n      ll = bufferPadding + height;\n      if (height === 1) {\n        if ((v0 & 1) !== 0) {\n          for (u = 0; u < width; u++) {\n            items[u] *= 0.5;\n          }\n        }\n      } else {\n        for (u = 0; u < width; u++) {\n          if (currentBuffer === 0) {\n            numBuffers = Math.min(width - u, numBuffers);\n            for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                colBuffers[b][l] = items[k + b];\n              }\n            }\n            currentBuffer = numBuffers;\n          }\n          currentBuffer--;\n          var buffer = colBuffers[currentBuffer];\n          this.extend(buffer, bufferPadding, height);\n          this.filter(buffer, bufferPadding, height);\n          if (currentBuffer === 0) {\n            k = u - numBuffers + 1;\n            for (l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                items[k + b] = colBuffers[b][l];\n              }\n            }\n          }\n        }\n      }\n      return {\n        width: width,\n        height: height,\n        items: items\n      };\n    };\n    return Transform;\n  }();\n  var IrreversibleTransform = function IrreversibleTransformClosure() {\n    function IrreversibleTransform() {\n      Transform.call(this);\n    }\n    IrreversibleTransform.prototype = Object.create(Transform.prototype);\n    IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n, current, next;\n      var alpha = -1.586134342059924;\n      var beta = -0.052980118572961;\n      var gamma = 0.882911075530934;\n      var delta = 0.443506852043971;\n      var K = 1.230174104914001;\n      var K_ = 1 / K;\n      j = offset - 3;\n      for (n = len + 4; n--; j += 2) {\n        x[j] *= K_;\n      }\n      j = offset - 2;\n      current = delta * x[j - 1];\n      for (n = len + 3; n--; j += 2) {\n        next = delta * x[j + 1];\n        x[j] = K * x[j] - current - next;\n        if (n--) {\n          j += 2;\n          current = delta * x[j + 1];\n          x[j] = K * x[j] - current - next;\n        } else {\n          break;\n        }\n      }\n      j = offset - 1;\n      current = gamma * x[j - 1];\n      for (n = len + 2; n--; j += 2) {\n        next = gamma * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = gamma * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      j = offset;\n      current = beta * x[j - 1];\n      for (n = len + 1; n--; j += 2) {\n        next = beta * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = beta * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      if (len !== 0) {\n        j = offset + 1;\n        current = alpha * x[j - 1];\n        for (n = len; n--; j += 2) {\n          next = alpha * x[j + 1];\n          x[j] -= current + next;\n          if (n--) {\n            j += 2;\n            current = alpha * x[j + 1];\n            x[j] -= current + next;\n          } else {\n            break;\n          }\n        }\n      }\n    };\n    return IrreversibleTransform;\n  }();\n  var ReversibleTransform = function ReversibleTransformClosure() {\n    function ReversibleTransform() {\n      Transform.call(this);\n    }\n    ReversibleTransform.prototype = Object.create(Transform.prototype);\n    ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n;\n      for (j = offset, n = len + 1; n--; j += 2) {\n        x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n      }\n      for (j = offset + 1, n = len; n--; j += 2) {\n        x[j] += x[j - 1] + x[j + 1] >> 1;\n      }\n    };\n    return ReversibleTransform;\n  }();\n  return JpxImage;\n}();\nexports.JpxImage = JpxImage;\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\n  var QeTable = [{\n    qe: 0x5601,\n    nmps: 1,\n    nlps: 1,\n    switchFlag: 1\n  }, {\n    qe: 0x3401,\n    nmps: 2,\n    nlps: 6,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 3,\n    nlps: 9,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 4,\n    nlps: 12,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 5,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 38,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 7,\n    nlps: 6,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 8,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 9,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 10,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 11,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 12,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 13,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 29,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 15,\n    nlps: 14,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 16,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x5101,\n    nmps: 17,\n    nlps: 15,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 18,\n    nlps: 16,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 19,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x3401,\n    nmps: 20,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 21,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2801,\n    nmps: 22,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 23,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x2201,\n    nmps: 24,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 25,\n    nlps: 22,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 26,\n    nlps: 23,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 27,\n    nlps: 24,\n    switchFlag: 0\n  }, {\n    qe: 0x1401,\n    nmps: 28,\n    nlps: 25,\n    switchFlag: 0\n  }, {\n    qe: 0x1201,\n    nmps: 29,\n    nlps: 26,\n    switchFlag: 0\n  }, {\n    qe: 0x1101,\n    nmps: 30,\n    nlps: 27,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 31,\n    nlps: 28,\n    switchFlag: 0\n  }, {\n    qe: 0x09C1,\n    nmps: 32,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x08A1,\n    nmps: 33,\n    nlps: 30,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 34,\n    nlps: 31,\n    switchFlag: 0\n  }, {\n    qe: 0x0441,\n    nmps: 35,\n    nlps: 32,\n    switchFlag: 0\n  }, {\n    qe: 0x02A1,\n    nmps: 36,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 37,\n    nlps: 34,\n    switchFlag: 0\n  }, {\n    qe: 0x0141,\n    nmps: 38,\n    nlps: 35,\n    switchFlag: 0\n  }, {\n    qe: 0x0111,\n    nmps: 39,\n    nlps: 36,\n    switchFlag: 0\n  }, {\n    qe: 0x0085,\n    nmps: 40,\n    nlps: 37,\n    switchFlag: 0\n  }, {\n    qe: 0x0049,\n    nmps: 41,\n    nlps: 38,\n    switchFlag: 0\n  }, {\n    qe: 0x0025,\n    nmps: 42,\n    nlps: 39,\n    switchFlag: 0\n  }, {\n    qe: 0x0015,\n    nmps: 43,\n    nlps: 40,\n    switchFlag: 0\n  }, {\n    qe: 0x0009,\n    nmps: 44,\n    nlps: 41,\n    switchFlag: 0\n  }, {\n    qe: 0x0005,\n    nmps: 45,\n    nlps: 42,\n    switchFlag: 0\n  }, {\n    qe: 0x0001,\n    nmps: 45,\n    nlps: 43,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 46,\n    nlps: 46,\n    switchFlag: 0\n  }];\n  function ArithmeticDecoder(data, start, end) {\n    this.data = data;\n    this.bp = start;\n    this.dataEnd = end;\n    this.chigh = data[start];\n    this.clow = 0;\n    this.byteIn();\n    this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\n    this.clow = this.clow << 7 & 0xFFFF;\n    this.ct -= 7;\n    this.a = 0x8000;\n  }\n  ArithmeticDecoder.prototype = {\n    byteIn: function ArithmeticDecoder_byteIn() {\n      var data = this.data;\n      var bp = this.bp;\n      if (data[bp] === 0xFF) {\n        var b1 = data[bp + 1];\n        if (b1 > 0x8F) {\n          this.clow += 0xFF00;\n          this.ct = 8;\n        } else {\n          bp++;\n          this.clow += data[bp] << 9;\n          this.ct = 7;\n          this.bp = bp;\n        }\n      } else {\n        bp++;\n        this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\n        this.ct = 8;\n        this.bp = bp;\n      }\n      if (this.clow > 0xFFFF) {\n        this.chigh += this.clow >> 16;\n        this.clow &= 0xFFFF;\n      }\n    },\n    readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n      var cx_index = contexts[pos] >> 1,\n          cx_mps = contexts[pos] & 1;\n      var qeTableIcx = QeTable[cx_index];\n      var qeIcx = qeTableIcx.qe;\n      var d;\n      var a = this.a - qeIcx;\n      if (this.chigh < qeIcx) {\n        if (a < qeIcx) {\n          a = qeIcx;\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        } else {\n          a = qeIcx;\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        }\n      } else {\n        this.chigh -= qeIcx;\n        if ((a & 0x8000) !== 0) {\n          this.a = a;\n          return cx_mps;\n        }\n        if (a < qeIcx) {\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        } else {\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        }\n      }\n      do {\n        if (this.ct === 0) {\n          this.byteIn();\n        }\n        a <<= 1;\n        this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\n        this.clow = this.clow << 1 & 0xFFFF;\n        this.ct--;\n      } while ((a & 0x8000) === 0);\n      this.a = a;\n      contexts[pos] = cx_index << 1 | cx_mps;\n      return d;\n    }\n  };\n  return ArithmeticDecoder;\n}();\nexports.ArithmeticDecoder = ArithmeticDecoder;\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateSHA512 = exports.calculateSHA384 = exports.calculateSHA256 = exports.calculateMD5 = exports.PDF20 = exports.PDF17 = exports.CipherTransformFactory = exports.ARCFourCipher = exports.AES256Cipher = exports.AES128Cipher = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar ARCFourCipher = function ARCFourCipherClosure() {\n  function ARCFourCipher(key) {\n    this.a = 0;\n    this.b = 0;\n    var s = new Uint8Array(256);\n    var i,\n        j = 0,\n        tmp,\n        keyLength = key.length;\n    for (i = 0; i < 256; ++i) {\n      s[i] = i;\n    }\n    for (i = 0; i < 256; ++i) {\n      tmp = s[i];\n      j = j + tmp + key[i % keyLength] & 0xFF;\n      s[i] = s[j];\n      s[j] = tmp;\n    }\n    this.s = s;\n  }\n  ARCFourCipher.prototype = {\n    encryptBlock: function ARCFourCipher_encryptBlock(data) {\n      var i,\n          n = data.length,\n          tmp,\n          tmp2;\n      var a = this.a,\n          b = this.b,\n          s = this.s;\n      var output = new Uint8Array(n);\n      for (i = 0; i < n; ++i) {\n        a = a + 1 & 0xFF;\n        tmp = s[a];\n        b = b + tmp & 0xFF;\n        tmp2 = s[b];\n        s[a] = tmp2;\n        s[b] = tmp;\n        output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\n      }\n      this.a = a;\n      this.b = b;\n      return output;\n    }\n  };\n  ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n  return ARCFourCipher;\n}();\nvar calculateMD5 = function calculateMD5Closure() {\n  var r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n  var k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n  function hash(data, offset, length) {\n    var h0 = 1732584193,\n        h1 = -271733879,\n        h2 = -1732584194,\n        h3 = 271733878;\n    var paddedLength = length + 72 & ~63;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = length << 3 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    var w = new Int32Array(16);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j, i += 4) {\n        w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          f,\n          g;\n      for (j = 0; j < 64; ++j) {\n        if (j < 16) {\n          f = b & c | ~b & d;\n          g = j;\n        } else if (j < 32) {\n          f = d & b | ~d & c;\n          g = 5 * j + 1 & 15;\n        } else if (j < 48) {\n          f = b ^ c ^ d;\n          g = 3 * j + 5 & 15;\n        } else {\n          f = c ^ (b | ~d);\n          g = 7 * j & 15;\n        }\n        var tmp = d,\n            rotateArg = a + f + k[j] + w[g] | 0,\n            rotate = r[j];\n        d = c;\n        c = b;\n        b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n        a = tmp;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n    }\n    return new Uint8Array([h0 & 0xFF, h0 >> 8 & 0xFF, h0 >> 16 & 0xFF, h0 >>> 24 & 0xFF, h1 & 0xFF, h1 >> 8 & 0xFF, h1 >> 16 & 0xFF, h1 >>> 24 & 0xFF, h2 & 0xFF, h2 >> 8 & 0xFF, h2 >> 16 & 0xFF, h2 >>> 24 & 0xFF, h3 & 0xFF, h3 >> 8 & 0xFF, h3 >> 16 & 0xFF, h3 >>> 24 & 0xFF]);\n  }\n  return hash;\n}();\nvar Word64 = function Word64Closure() {\n  function Word64(highInteger, lowInteger) {\n    this.high = highInteger | 0;\n    this.low = lowInteger | 0;\n  }\n  Word64.prototype = {\n    and: function Word64_and(word) {\n      this.high &= word.high;\n      this.low &= word.low;\n    },\n    xor: function Word64_xor(word) {\n      this.high ^= word.high;\n      this.low ^= word.low;\n    },\n    or: function Word64_or(word) {\n      this.high |= word.high;\n      this.low |= word.low;\n    },\n    shiftRight: function Word64_shiftRight(places) {\n      if (places >= 32) {\n        this.low = this.high >>> places - 32 | 0;\n        this.high = 0;\n      } else {\n        this.low = this.low >>> places | this.high << 32 - places;\n        this.high = this.high >>> places | 0;\n      }\n    },\n    shiftLeft: function Word64_shiftLeft(places) {\n      if (places >= 32) {\n        this.high = this.low << places - 32;\n        this.low = 0;\n      } else {\n        this.high = this.high << places | this.low >>> 32 - places;\n        this.low = this.low << places;\n      }\n    },\n    rotateRight: function Word64_rotateRight(places) {\n      var low, high;\n      if (places & 32) {\n        high = this.low;\n        low = this.high;\n      } else {\n        low = this.low;\n        high = this.high;\n      }\n      places &= 31;\n      this.low = low >>> places | high << 32 - places;\n      this.high = high >>> places | low << 32 - places;\n    },\n    not: function Word64_not() {\n      this.high = ~this.high;\n      this.low = ~this.low;\n    },\n    add: function Word64_add(word) {\n      var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n      var highAdd = (this.high >>> 0) + (word.high >>> 0);\n      if (lowAdd > 0xFFFFFFFF) {\n        highAdd += 1;\n      }\n      this.low = lowAdd | 0;\n      this.high = highAdd | 0;\n    },\n    copyTo: function Word64_copyTo(bytes, offset) {\n      bytes[offset] = this.high >>> 24 & 0xFF;\n      bytes[offset + 1] = this.high >> 16 & 0xFF;\n      bytes[offset + 2] = this.high >> 8 & 0xFF;\n      bytes[offset + 3] = this.high & 0xFF;\n      bytes[offset + 4] = this.low >>> 24 & 0xFF;\n      bytes[offset + 5] = this.low >> 16 & 0xFF;\n      bytes[offset + 6] = this.low >> 8 & 0xFF;\n      bytes[offset + 7] = this.low & 0xFF;\n    },\n    assign: function Word64_assign(word) {\n      this.high = word.high;\n      this.low = word.low;\n    }\n  };\n  return Word64;\n}();\nvar calculateSHA256 = function calculateSHA256Closure() {\n  function rotr(x, n) {\n    return x >>> n | x << 32 - n;\n  }\n  function ch(x, y, z) {\n    return x & y ^ ~x & z;\n  }\n  function maj(x, y, z) {\n    return x & y ^ x & z ^ y & z;\n  }\n  function sigma(x) {\n    return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n  }\n  function sigmaPrime(x) {\n    return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n  }\n  function littleSigma(x) {\n    return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n  }\n  function littleSigmaPrime(x) {\n    return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n  }\n  var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n  function hash(data, offset, length) {\n    var h0 = 0x6a09e667,\n        h1 = 0xbb67ae85,\n        h2 = 0x3c6ef372,\n        h3 = 0xa54ff53a,\n        h4 = 0x510e527f,\n        h5 = 0x9b05688c,\n        h6 = 0x1f83d9ab,\n        h7 = 0x5be0cd19;\n    var paddedLength = Math.ceil((length + 9) / 64) * 64;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Uint32Array(64);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        i += 4;\n      }\n      for (j = 16; j < 64; ++j) {\n        w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          e = h4,\n          f = h5,\n          g = h6,\n          h = h7,\n          t1,\n          t2;\n      for (j = 0; j < 64; ++j) {\n        t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n        t2 = sigma(a) + maj(a, b, c);\n        h = g;\n        g = f;\n        f = e;\n        e = d + t1 | 0;\n        d = c;\n        c = b;\n        b = a;\n        a = t1 + t2 | 0;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n      h4 = h4 + e | 0;\n      h5 = h5 + f | 0;\n      h6 = h6 + g | 0;\n      h7 = h7 + h | 0;\n    }\n    return new Uint8Array([h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF, h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF]);\n  }\n  return hash;\n}();\nvar calculateSHA512 = function calculateSHA512Closure() {\n  function ch(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.not();\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function maj(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.and(z);\n    result.xor(tmp);\n    tmp.assign(y);\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function sigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(28);\n    tmp.assign(x);\n    tmp.rotateRight(34);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(39);\n    result.xor(tmp);\n  }\n  function sigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(14);\n    tmp.assign(x);\n    tmp.rotateRight(18);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(41);\n    result.xor(tmp);\n  }\n  function littleSigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(1);\n    tmp.assign(x);\n    tmp.rotateRight(8);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(7);\n    result.xor(tmp);\n  }\n  function littleSigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(19);\n    tmp.assign(x);\n    tmp.rotateRight(61);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(6);\n    result.xor(tmp);\n  }\n  var k = [new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd), new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc), new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019), new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118), new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe), new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2), new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1), new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694), new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3), new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65), new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483), new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5), new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210), new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4), new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725), new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70), new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926), new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df), new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8), new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b), new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001), new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30), new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910), new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8), new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53), new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8), new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb), new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3), new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60), new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec), new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9), new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b), new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207), new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178), new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6), new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b), new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493), new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c), new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a), new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817)];\n  function hash(data, offset, length, mode384) {\n    mode384 = !!mode384;\n    var h0, h1, h2, h3, h4, h5, h6, h7;\n    if (!mode384) {\n      h0 = new Word64(0x6a09e667, 0xf3bcc908);\n      h1 = new Word64(0xbb67ae85, 0x84caa73b);\n      h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n      h4 = new Word64(0x510e527f, 0xade682d1);\n      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n      h7 = new Word64(0x5be0cd19, 0x137e2179);\n    } else {\n      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n      h1 = new Word64(0x629a292a, 0x367cd507);\n      h2 = new Word64(0x9159015a, 0x3070dd17);\n      h3 = new Word64(0x152fecd8, 0xf70e5939);\n      h4 = new Word64(0x67332667, 0xffc00b31);\n      h5 = new Word64(0x8eb44a87, 0x68581511);\n      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n      h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n    }\n    var paddedLength = Math.ceil((length + 17) / 128) * 128;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 16;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Array(80);\n    for (i = 0; i < 80; i++) {\n      w[i] = new Word64(0, 0);\n    }\n    var a = new Word64(0, 0),\n        b = new Word64(0, 0),\n        c = new Word64(0, 0);\n    var d = new Word64(0, 0),\n        e = new Word64(0, 0),\n        f = new Word64(0, 0);\n    var g = new Word64(0, 0),\n        h = new Word64(0, 0);\n    var t1 = new Word64(0, 0),\n        t2 = new Word64(0, 0);\n    var tmp1 = new Word64(0, 0),\n        tmp2 = new Word64(0, 0),\n        tmp3;\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n        i += 8;\n      }\n      for (j = 16; j < 80; ++j) {\n        tmp3 = w[j];\n        littleSigmaPrime(tmp3, w[j - 2], tmp2);\n        tmp3.add(w[j - 7]);\n        littleSigma(tmp1, w[j - 15], tmp2);\n        tmp3.add(tmp1);\n        tmp3.add(w[j - 16]);\n      }\n      a.assign(h0);\n      b.assign(h1);\n      c.assign(h2);\n      d.assign(h3);\n      e.assign(h4);\n      f.assign(h5);\n      g.assign(h6);\n      h.assign(h7);\n      for (j = 0; j < 80; ++j) {\n        t1.assign(h);\n        sigmaPrime(tmp1, e, tmp2);\n        t1.add(tmp1);\n        ch(tmp1, e, f, g, tmp2);\n        t1.add(tmp1);\n        t1.add(k[j]);\n        t1.add(w[j]);\n        sigma(t2, a, tmp2);\n        maj(tmp1, a, b, c, tmp2);\n        t2.add(tmp1);\n        tmp3 = h;\n        h = g;\n        g = f;\n        f = e;\n        d.add(t1);\n        e = d;\n        d = c;\n        c = b;\n        b = a;\n        tmp3.assign(t1);\n        tmp3.add(t2);\n        a = tmp3;\n      }\n      h0.add(a);\n      h1.add(b);\n      h2.add(c);\n      h3.add(d);\n      h4.add(e);\n      h5.add(f);\n      h6.add(g);\n      h7.add(h);\n    }\n    var result;\n    if (!mode384) {\n      result = new Uint8Array(64);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n      h6.copyTo(result, 48);\n      h7.copyTo(result, 56);\n    } else {\n      result = new Uint8Array(48);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n    }\n    return result;\n  }\n  return hash;\n}();\nvar calculateSHA384 = function calculateSHA384Closure() {\n  function hash(data, offset, length) {\n    return calculateSHA512(data, offset, length, true);\n  }\n  return hash;\n}();\nvar NullCipher = function NullCipherClosure() {\n  function NullCipher() {}\n  NullCipher.prototype = {\n    decryptBlock: function NullCipher_decryptBlock(data) {\n      return data;\n    }\n  };\n  return NullCipher;\n}();\nvar AES128Cipher = function AES128CipherClosure() {\n  var rcon = new Uint8Array([0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d]);\n  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n  var mixCol = new Uint8Array(256);\n  for (var i = 0; i < 256; i++) {\n    if (i < 128) {\n      mixCol[i] = i << 1;\n    } else {\n      mixCol[i] = i << 1 ^ 0x1b;\n    }\n  }\n  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n  function expandKey128(cipherKey) {\n    var b = 176,\n        result = new Uint8Array(b);\n    result.set(cipherKey);\n    for (var j = 16, i = 1; j < b; ++i) {\n      var t1 = result[j - 3],\n          t2 = result[j - 2],\n          t3 = result[j - 1],\n          t4 = result[j - 4];\n      t1 = s[t1];\n      t2 = s[t2];\n      t3 = s[t3];\n      t4 = s[t4];\n      t1 = t1 ^ rcon[i];\n      for (var n = 0; n < 4; ++n) {\n        result[j] = t1 ^= result[j - 16];\n        j++;\n        result[j] = t2 ^= result[j - 16];\n        j++;\n        result[j] = t3 ^= result[j - 16];\n        j++;\n        result[j] = t4 ^= result[j - 16];\n        j++;\n      }\n    }\n    return result;\n  }\n  function decrypt128(input, key) {\n    var state = new Uint8Array(16);\n    state.set(input);\n    var i, j, k;\n    var t, u, v;\n    for (j = 0, k = 160; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    for (i = 9; i >= 1; --i) {\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (j = 0; j < 16; ++j) {\n        state[j] = inv_s[state[j]];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (j = 0; j < 16; j += 4) {\n        var s0 = mix[state[j]],\n            s1 = mix[state[j + 1]],\n            s2 = mix[state[j + 2]],\n            s3 = mix[state[j + 3]];\n        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n        state[j] = t >>> 24 & 0xFF;\n        state[j + 1] = t >> 16 & 0xFF;\n        state[j + 2] = t >> 8 & 0xFF;\n        state[j + 3] = t & 0xFF;\n      }\n    }\n    t = state[13];\n    state[13] = state[9];\n    state[9] = state[5];\n    state[5] = state[1];\n    state[1] = t;\n    t = state[14];\n    u = state[10];\n    state[14] = state[6];\n    state[10] = state[2];\n    state[6] = t;\n    state[2] = u;\n    t = state[15];\n    u = state[11];\n    v = state[7];\n    state[15] = state[3];\n    state[11] = t;\n    state[7] = u;\n    state[3] = v;\n    for (j = 0; j < 16; ++j) {\n      state[j] = inv_s[state[j]];\n      state[j] ^= key[j];\n    }\n    return state;\n  }\n  function encrypt128(input, key) {\n    var t, u, v, k;\n    var state = new Uint8Array(16);\n    state.set(input);\n    for (j = 0; j < 16; ++j) {\n      state[j] ^= key[j];\n    }\n    for (i = 1; i < 10; i++) {\n      for (j = 0; j < 16; ++j) {\n        state[j] = s[state[j]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (var j = 0; j < 16; j += 4) {\n        var s0 = state[j + 0],\n            s1 = state[j + 1];\n        var s2 = state[j + 2],\n            s3 = state[j + 3];\n        t = s0 ^ s1 ^ s2 ^ s3;\n        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n    }\n    for (j = 0; j < 16; ++j) {\n      state[j] = s[state[j]];\n    }\n    v = state[1];\n    state[1] = state[5];\n    state[5] = state[9];\n    state[9] = state[13];\n    state[13] = v;\n    v = state[2];\n    u = state[6];\n    state[2] = state[10];\n    state[6] = state[14];\n    state[10] = v;\n    state[14] = u;\n    v = state[3];\n    u = state[7];\n    t = state[11];\n    state[3] = state[15];\n    state[7] = v;\n    state[11] = u;\n    state[15] = t;\n    for (j = 0, k = 160; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    return state;\n  }\n  function AES128Cipher(key) {\n    this.key = expandKey128(key);\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n  function decryptBlock2(data, finalize) {\n    var i,\n        j,\n        ii,\n        sourceLength = data.length,\n        buffer = this.buffer,\n        bufferLength = this.bufferPosition,\n        result = [],\n        iv = this.iv;\n    for (i = 0; i < sourceLength; ++i) {\n      buffer[bufferLength] = data[i];\n      ++bufferLength;\n      if (bufferLength < 16) {\n        continue;\n      }\n      var plain = decrypt128(buffer, this.key);\n      for (j = 0; j < 16; ++j) {\n        plain[j] ^= iv[j];\n      }\n      iv = buffer;\n      result.push(plain);\n      buffer = new Uint8Array(16);\n      bufferLength = 0;\n    }\n    this.buffer = buffer;\n    this.bufferLength = bufferLength;\n    this.iv = iv;\n    if (result.length === 0) {\n      return new Uint8Array([]);\n    }\n    var outputLength = 16 * result.length;\n    if (finalize) {\n      var lastBlock = result[result.length - 1];\n      var psLen = lastBlock[15];\n      if (psLen <= 16) {\n        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n          if (lastBlock[i] !== psLen) {\n            psLen = 0;\n            break;\n          }\n        }\n        outputLength -= psLen;\n        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n      }\n    }\n    var output = new Uint8Array(outputLength);\n    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n      output.set(result[i], j);\n    }\n    return output;\n  }\n  AES128Cipher.prototype = {\n    decryptBlock: function AES128Cipher_decryptBlock(data, finalize) {\n      var i,\n          sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n        buffer[bufferLength] = data[i];\n      }\n      if (bufferLength < 16) {\n        this.bufferLength = bufferLength;\n        return new Uint8Array([]);\n      }\n      this.iv = buffer;\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = decryptBlock2;\n      return this.decryptBlock(data.subarray(16), finalize);\n    },\n    encrypt: function AES128Cipher_encrypt(data, iv) {\n      var i,\n          j,\n          ii,\n          sourceLength = data.length,\n          buffer = this.buffer,\n          bufferLength = this.bufferPosition,\n          result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = encrypt128(buffer, this.key);\n        iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array([]);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n        output.set(result[i], j);\n      }\n      return output;\n    }\n  };\n  return AES128Cipher;\n}();\nvar AES256Cipher = function AES256CipherClosure() {\n  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n  var mixCol = new Uint8Array(256);\n  for (var i = 0; i < 256; i++) {\n    if (i < 128) {\n      mixCol[i] = i << 1;\n    } else {\n      mixCol[i] = i << 1 ^ 0x1b;\n    }\n  }\n  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n  function expandKey256(cipherKey) {\n    var b = 240,\n        result = new Uint8Array(b);\n    var r = 1;\n    result.set(cipherKey);\n    for (var j = 32, i = 1; j < b; ++i) {\n      if (j % 32 === 16) {\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n      } else if (j % 32 === 0) {\n        var t1 = result[j - 3],\n            t2 = result[j - 2],\n            t3 = result[j - 1],\n            t4 = result[j - 4];\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n        t1 = t1 ^ r;\n        if ((r <<= 1) >= 256) {\n          r = (r ^ 0x1b) & 0xFF;\n        }\n      }\n      for (var n = 0; n < 4; ++n) {\n        result[j] = t1 ^= result[j - 32];\n        j++;\n        result[j] = t2 ^= result[j - 32];\n        j++;\n        result[j] = t3 ^= result[j - 32];\n        j++;\n        result[j] = t4 ^= result[j - 32];\n        j++;\n      }\n    }\n    return result;\n  }\n  function decrypt256(input, key) {\n    var state = new Uint8Array(16);\n    state.set(input);\n    var i, j, k;\n    var t, u, v;\n    for (j = 0, k = 224; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    for (i = 13; i >= 1; --i) {\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (j = 0; j < 16; ++j) {\n        state[j] = inv_s[state[j]];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (j = 0; j < 16; j += 4) {\n        var s0 = mix[state[j]],\n            s1 = mix[state[j + 1]],\n            s2 = mix[state[j + 2]],\n            s3 = mix[state[j + 3]];\n        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n        state[j] = t >>> 24 & 0xFF;\n        state[j + 1] = t >> 16 & 0xFF;\n        state[j + 2] = t >> 8 & 0xFF;\n        state[j + 3] = t & 0xFF;\n      }\n    }\n    t = state[13];\n    state[13] = state[9];\n    state[9] = state[5];\n    state[5] = state[1];\n    state[1] = t;\n    t = state[14];\n    u = state[10];\n    state[14] = state[6];\n    state[10] = state[2];\n    state[6] = t;\n    state[2] = u;\n    t = state[15];\n    u = state[11];\n    v = state[7];\n    state[15] = state[3];\n    state[11] = t;\n    state[7] = u;\n    state[3] = v;\n    for (j = 0; j < 16; ++j) {\n      state[j] = inv_s[state[j]];\n      state[j] ^= key[j];\n    }\n    return state;\n  }\n  function encrypt256(input, key) {\n    var t, u, v, k;\n    var state = new Uint8Array(16);\n    state.set(input);\n    for (j = 0; j < 16; ++j) {\n      state[j] ^= key[j];\n    }\n    for (i = 1; i < 14; i++) {\n      for (j = 0; j < 16; ++j) {\n        state[j] = s[state[j]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (var j = 0; j < 16; j += 4) {\n        var s0 = state[j + 0],\n            s1 = state[j + 1];\n        var s2 = state[j + 2],\n            s3 = state[j + 3];\n        t = s0 ^ s1 ^ s2 ^ s3;\n        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n    }\n    for (j = 0; j < 16; ++j) {\n      state[j] = s[state[j]];\n    }\n    v = state[1];\n    state[1] = state[5];\n    state[5] = state[9];\n    state[9] = state[13];\n    state[13] = v;\n    v = state[2];\n    u = state[6];\n    state[2] = state[10];\n    state[6] = state[14];\n    state[10] = v;\n    state[14] = u;\n    v = state[3];\n    u = state[7];\n    t = state[11];\n    state[3] = state[15];\n    state[7] = v;\n    state[11] = u;\n    state[15] = t;\n    for (j = 0, k = 224; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    return state;\n  }\n  function AES256Cipher(key) {\n    this.key = expandKey256(key);\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n  function decryptBlock2(data, finalize) {\n    var i,\n        j,\n        ii,\n        sourceLength = data.length,\n        buffer = this.buffer,\n        bufferLength = this.bufferPosition,\n        result = [],\n        iv = this.iv;\n    for (i = 0; i < sourceLength; ++i) {\n      buffer[bufferLength] = data[i];\n      ++bufferLength;\n      if (bufferLength < 16) {\n        continue;\n      }\n      var plain = decrypt256(buffer, this.key);\n      for (j = 0; j < 16; ++j) {\n        plain[j] ^= iv[j];\n      }\n      iv = buffer;\n      result.push(plain);\n      buffer = new Uint8Array(16);\n      bufferLength = 0;\n    }\n    this.buffer = buffer;\n    this.bufferLength = bufferLength;\n    this.iv = iv;\n    if (result.length === 0) {\n      return new Uint8Array([]);\n    }\n    var outputLength = 16 * result.length;\n    if (finalize) {\n      var lastBlock = result[result.length - 1];\n      var psLen = lastBlock[15];\n      if (psLen <= 16) {\n        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n          if (lastBlock[i] !== psLen) {\n            psLen = 0;\n            break;\n          }\n        }\n        outputLength -= psLen;\n        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n      }\n    }\n    var output = new Uint8Array(outputLength);\n    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n      output.set(result[i], j);\n    }\n    return output;\n  }\n  AES256Cipher.prototype = {\n    decryptBlock: function AES256Cipher_decryptBlock(data, finalize, iv) {\n      var i,\n          sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      if (iv) {\n        this.iv = iv;\n      } else {\n        for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n          buffer[bufferLength] = data[i];\n        }\n        if (bufferLength < 16) {\n          this.bufferLength = bufferLength;\n          return new Uint8Array([]);\n        }\n        this.iv = buffer;\n        data = data.subarray(16);\n      }\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = decryptBlock2;\n      return this.decryptBlock(data, finalize);\n    },\n    encrypt: function AES256Cipher_encrypt(data, iv) {\n      var i,\n          j,\n          ii,\n          sourceLength = data.length,\n          buffer = this.buffer,\n          bufferLength = this.bufferPosition,\n          result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = encrypt256(buffer, this.key);\n        this.iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array([]);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n        output.set(result[i], j);\n      }\n      return output;\n    }\n  };\n  return AES256Cipher;\n}();\nvar PDF17 = function PDF17Closure() {\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function PDF17() {}\n  PDF17.prototype = {\n    checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF17;\n}();\nvar PDF20 = function PDF20Closure() {\n  function concatArrays(array1, array2) {\n    var t = new Uint8Array(array1.length + array2.length);\n    t.set(array1, 0);\n    t.set(array2, array1.length);\n    return t;\n  }\n  function calculatePDF20Hash(password, input, userBytes) {\n    var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n    var e = [0];\n    var i = 0;\n    while (i < 64 || e[e.length - 1] > i - 32) {\n      var arrayLength = password.length + k.length + userBytes.length;\n      var k1 = new Uint8Array(arrayLength * 64);\n      var array = concatArrays(password, k);\n      array = concatArrays(array, userBytes);\n      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n        k1.set(array, pos);\n      }\n      var cipher = new AES128Cipher(k.subarray(0, 16));\n      e = cipher.encrypt(k1, k.subarray(16, 32));\n      var remainder = 0;\n      for (var z = 0; z < 16; z++) {\n        remainder *= 256 % 3;\n        remainder %= 3;\n        remainder += (e[z] >>> 0) % 3;\n        remainder %= 3;\n      }\n      if (remainder === 0) {\n        k = calculateSHA256(e, 0, e.length);\n      } else if (remainder === 1) {\n        k = calculateSHA384(e, 0, e.length);\n      } else if (remainder === 2) {\n        k = calculateSHA512(e, 0, e.length);\n      }\n      i++;\n    }\n    return k.subarray(0, 32);\n  }\n  function PDF20() {}\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  PDF20.prototype = {\n    hash: function PDF20_hash(password, concatBytes, userBytes) {\n      return calculatePDF20Hash(password, concatBytes, userBytes);\n    },\n    checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculatePDF20Hash(password, hashData, userBytes);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculatePDF20Hash(password, hashData, []);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculatePDF20Hash(password, hashData, userBytes);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculatePDF20Hash(password, hashData, []);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF20;\n}();\nvar CipherTransform = function CipherTransformClosure() {\n  function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n    this.StringCipherConstructor = stringCipherConstructor;\n    this.StreamCipherConstructor = streamCipherConstructor;\n  }\n  CipherTransform.prototype = {\n    createStream: function CipherTransform_createStream(stream, length) {\n      var cipher = new this.StreamCipherConstructor();\n      return new _stream.DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n        return cipher.decryptBlock(data, finalize);\n      });\n    },\n    decryptString: function CipherTransform_decryptString(s) {\n      var cipher = new this.StringCipherConstructor();\n      var data = (0, _util.stringToBytes)(s);\n      data = cipher.decryptBlock(data, true);\n      return (0, _util.bytesToString)(data);\n    }\n  };\n  return CipherTransform;\n}();\nvar CipherTransformFactory = function CipherTransformFactoryClosure() {\n  var defaultPasswordBytes = new Uint8Array([0x28, 0xBF, 0x4E, 0x5E, 0x4E, 0x75, 0x8A, 0x41, 0x64, 0x00, 0x4E, 0x56, 0xFF, 0xFA, 0x01, 0x08, 0x2E, 0x2E, 0x00, 0xB6, 0xD0, 0x68, 0x3E, 0x80, 0x2F, 0x0C, 0xA9, 0xFE, 0x64, 0x53, 0x69, 0x7A]);\n  function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n    if (password) {\n      var passwordLength = Math.min(127, password.length);\n      password = password.subarray(0, passwordLength);\n    } else {\n      password = [];\n    }\n    var pdfAlgorithm;\n    if (revision === 6) {\n      pdfAlgorithm = new PDF20();\n    } else {\n      pdfAlgorithm = new PDF17();\n    }\n    if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n      return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n    } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n      return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n    }\n    return null;\n  }\n  function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n    var hashDataSize = 40 + ownerPassword.length + fileId.length;\n    var hashData = new Uint8Array(hashDataSize),\n        i = 0,\n        j,\n        n;\n    if (password) {\n      n = Math.min(32, password.length);\n      for (; i < n; ++i) {\n        hashData[i] = password[i];\n      }\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    for (j = 0, n = ownerPassword.length; j < n; ++j) {\n      hashData[i++] = ownerPassword[j];\n    }\n    hashData[i++] = flags & 0xFF;\n    hashData[i++] = flags >> 8 & 0xFF;\n    hashData[i++] = flags >> 16 & 0xFF;\n    hashData[i++] = flags >>> 24 & 0xFF;\n    for (j = 0, n = fileId.length; j < n; ++j) {\n      hashData[i++] = fileId[j];\n    }\n    if (revision >= 4 && !encryptMetadata) {\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, keyLengthInBytes);\n      }\n    }\n    var encryptionKey = hash.subarray(0, keyLengthInBytes);\n    var cipher, checkData;\n    if (revision >= 3) {\n      for (i = 0; i < 32; ++i) {\n        hashData[i] = defaultPasswordBytes[i];\n      }\n      for (j = 0, n = fileId.length; j < n; ++j) {\n        hashData[i++] = fileId[j];\n      }\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n      n = encryptionKey.length;\n      var derivedKey = new Uint8Array(n),\n          k;\n      for (j = 1; j <= 19; ++j) {\n        for (k = 0; k < n; ++k) {\n          derivedKey[k] = encryptionKey[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        checkData = cipher.encryptBlock(checkData);\n      }\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    } else {\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(defaultPasswordBytes);\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    }\n    return encryptionKey;\n  }\n  function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n    var hashData = new Uint8Array(32),\n        i = 0,\n        j,\n        n;\n    n = Math.min(32, password.length);\n    for (; i < n; ++i) {\n      hashData[i] = password[i];\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, hash.length);\n      }\n    }\n    var cipher, userPassword;\n    if (revision >= 3) {\n      userPassword = ownerPassword;\n      var derivedKey = new Uint8Array(keyLengthInBytes),\n          k;\n      for (j = 19; j >= 0; j--) {\n        for (k = 0; k < keyLengthInBytes; ++k) {\n          derivedKey[k] = hash[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        userPassword = cipher.encryptBlock(userPassword);\n      }\n    } else {\n      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n      userPassword = cipher.encryptBlock(ownerPassword);\n    }\n    return userPassword;\n  }\n  var identityName = _primitives.Name.get('Identity');\n  function CipherTransformFactory(dict, fileId, password) {\n    var filter = dict.get('Filter');\n    if (!(0, _primitives.isName)(filter, 'Standard')) {\n      throw new _util.FormatError('unknown encryption method');\n    }\n    this.dict = dict;\n    var algorithm = dict.get('V');\n    if (!Number.isInteger(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n      throw new _util.FormatError('unsupported encryption algorithm');\n    }\n    this.algorithm = algorithm;\n    var keyLength = dict.get('Length');\n    if (!keyLength) {\n      if (algorithm <= 3) {\n        keyLength = 40;\n      } else {\n        var cfDict = dict.get('CF');\n        var streamCryptoName = dict.get('StmF');\n        if ((0, _primitives.isDict)(cfDict) && (0, _primitives.isName)(streamCryptoName)) {\n          cfDict.suppressEncryption = true;\n          var handlerDict = cfDict.get(streamCryptoName.name);\n          keyLength = handlerDict && handlerDict.get('Length') || 128;\n          if (keyLength < 40) {\n            keyLength <<= 3;\n          }\n        }\n      }\n    }\n    if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n      throw new _util.FormatError('invalid key length');\n    }\n    var ownerPassword = (0, _util.stringToBytes)(dict.get('O')).subarray(0, 32);\n    var userPassword = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 32);\n    var flags = dict.get('P');\n    var revision = dict.get('R');\n    var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\n    this.encryptMetadata = encryptMetadata;\n    var fileIdBytes = (0, _util.stringToBytes)(fileId);\n    var passwordBytes;\n    if (password) {\n      if (revision === 6) {\n        try {\n          password = (0, _util.utf8StringToString)(password);\n        } catch (ex) {\n          (0, _util.warn)('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\n        }\n      }\n      passwordBytes = (0, _util.stringToBytes)(password);\n    }\n    var encryptionKey;\n    if (algorithm !== 5) {\n      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    } else {\n      var ownerValidationSalt = (0, _util.stringToBytes)(dict.get('O')).subarray(32, 40);\n      var ownerKeySalt = (0, _util.stringToBytes)(dict.get('O')).subarray(40, 48);\n      var uBytes = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 48);\n      var userValidationSalt = (0, _util.stringToBytes)(dict.get('U')).subarray(32, 40);\n      var userKeySalt = (0, _util.stringToBytes)(dict.get('U')).subarray(40, 48);\n      var ownerEncryption = (0, _util.stringToBytes)(dict.get('OE'));\n      var userEncryption = (0, _util.stringToBytes)(dict.get('UE'));\n      var perms = (0, _util.stringToBytes)(dict.get('Perms'));\n      encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n    }\n    if (!encryptionKey && !password) {\n      throw new _util.PasswordException('No password given', _util.PasswordResponses.NEED_PASSWORD);\n    } else if (!encryptionKey && password) {\n      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    }\n    if (!encryptionKey) {\n      throw new _util.PasswordException('Incorrect Password', _util.PasswordResponses.INCORRECT_PASSWORD);\n    }\n    this.encryptionKey = encryptionKey;\n    if (algorithm >= 4) {\n      var cf = dict.get('CF');\n      if ((0, _primitives.isDict)(cf)) {\n        cf.suppressEncryption = true;\n      }\n      this.cf = cf;\n      this.stmf = dict.get('StmF') || identityName;\n      this.strf = dict.get('StrF') || identityName;\n      this.eff = dict.get('EFF') || this.stmf;\n    }\n  }\n  function buildObjectKey(num, gen, encryptionKey, isAes) {\n    var key = new Uint8Array(encryptionKey.length + 9),\n        i,\n        n;\n    for (i = 0, n = encryptionKey.length; i < n; ++i) {\n      key[i] = encryptionKey[i];\n    }\n    key[i++] = num & 0xFF;\n    key[i++] = num >> 8 & 0xFF;\n    key[i++] = num >> 16 & 0xFF;\n    key[i++] = gen & 0xFF;\n    key[i++] = gen >> 8 & 0xFF;\n    if (isAes) {\n      key[i++] = 0x73;\n      key[i++] = 0x41;\n      key[i++] = 0x6C;\n      key[i++] = 0x54;\n    }\n    var hash = calculateMD5(key, 0, i);\n    return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n  }\n  function buildCipherConstructor(cf, name, num, gen, key) {\n    if (!(0, _primitives.isName)(name)) {\n      throw new _util.FormatError('Invalid crypt filter name.');\n    }\n    var cryptFilter = cf.get(name.name);\n    var cfm;\n    if (cryptFilter !== null && cryptFilter !== undefined) {\n      cfm = cryptFilter.get('CFM');\n    }\n    if (!cfm || cfm.name === 'None') {\n      return function cipherTransformFactoryBuildCipherConstructorNone() {\n        return new NullCipher();\n      };\n    }\n    if (cfm.name === 'V2') {\n      return function cipherTransformFactoryBuildCipherConstructorV2() {\n        return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n      };\n    }\n    if (cfm.name === 'AESV2') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n        return new AES128Cipher(buildObjectKey(num, gen, key, true));\n      };\n    }\n    if (cfm.name === 'AESV3') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n        return new AES256Cipher(key);\n      };\n    }\n    throw new _util.FormatError('Unknown crypto method');\n  }\n  CipherTransformFactory.prototype = {\n    createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n      if (this.algorithm === 4 || this.algorithm === 5) {\n        return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n      }\n      var key = buildObjectKey(num, gen, this.encryptionKey, false);\n      var cipherConstructor = function buildCipherCipherConstructor() {\n        return new ARCFourCipher(key);\n      };\n      return new CipherTransform(cipherConstructor, cipherConstructor);\n    }\n  };\n  return CipherTransformFactory;\n}();\nexports.AES128Cipher = AES128Cipher;\nexports.AES256Cipher = AES256Cipher;\nexports.ARCFourCipher = ARCFourCipher;\nexports.CipherTransformFactory = CipherTransformFactory;\nexports.PDF17 = PDF17;\nexports.PDF20 = PDF20;\nexports.calculateMD5 = calculateMD5;\nexports.calculateSHA256 = calculateSHA256;\nexports.calculateSHA384 = calculateSHA384;\nexports.calculateSHA512 = calculateSHA512;\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PartialEvaluator = exports.OperatorList = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cmap = __w_pdfjs_require__(133);\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _fonts = __w_pdfjs_require__(134);\n\nvar _encodings = __w_pdfjs_require__(27);\n\nvar _unicode = __w_pdfjs_require__(80);\n\nvar _standard_fonts = __w_pdfjs_require__(79);\n\nvar _pattern = __w_pdfjs_require__(138);\n\nvar _parser = __w_pdfjs_require__(34);\n\nvar _bidi = __w_pdfjs_require__(139);\n\nvar _colorspace = __w_pdfjs_require__(26);\n\nvar _glyphlist = __w_pdfjs_require__(47);\n\nvar _metrics = __w_pdfjs_require__(140);\n\nvar _function = __w_pdfjs_require__(81);\n\nvar _murmurhash = __w_pdfjs_require__(142);\n\nvar _image = __w_pdfjs_require__(143);\n\nvar PartialEvaluator = function PartialEvaluatorClosure() {\n  var DefaultPartialEvaluatorOptions = {\n    forceDataSchema: false,\n    maxImageSize: -1,\n    disableFontFace: false,\n    nativeImageDecoderSupport: _util.NativeImageDecoding.DECODE,\n    ignoreErrors: false,\n    isEvalSupported: true\n  };\n  function NativeImageDecoder(_ref) {\n    var xref = _ref.xref,\n        resources = _ref.resources,\n        handler = _ref.handler,\n        _ref$forceDataSchema = _ref.forceDataSchema,\n        forceDataSchema = _ref$forceDataSchema === undefined ? false : _ref$forceDataSchema,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.xref = xref;\n    this.resources = resources;\n    this.handler = handler;\n    this.forceDataSchema = forceDataSchema;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n  }\n  NativeImageDecoder.prototype = {\n    canDecode: function canDecode(image) {\n      return image instanceof _stream.JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources, this.pdfFunctionFactory);\n    },\n    decode: function decode(image) {\n      var dict = image.dict;\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      colorSpace = _colorspace.ColorSpace.parse(colorSpace, this.xref, this.resources, this.pdfFunctionFactory);\n      var numComps = colorSpace.numComps;\n      var decodePromise = this.handler.sendWithPromise('JpegDecode', [image.getIR(this.forceDataSchema), numComps]);\n      return decodePromise.then(function (message) {\n        var data = message.data;\n        return new _stream.Stream(data, 0, data.length, image.dict);\n      });\n    }\n  };\n  NativeImageDecoder.isSupported = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  NativeImageDecoder.isDecodable = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  function PartialEvaluator(_ref2) {\n    var _this = this;\n\n    var pdfManager = _ref2.pdfManager,\n        xref = _ref2.xref,\n        handler = _ref2.handler,\n        pageIndex = _ref2.pageIndex,\n        idFactory = _ref2.idFactory,\n        fontCache = _ref2.fontCache,\n        builtInCMapCache = _ref2.builtInCMapCache,\n        _ref2$options = _ref2.options,\n        options = _ref2$options === undefined ? null : _ref2$options,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.handler = handler;\n    this.pageIndex = pageIndex;\n    this.idFactory = idFactory;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.options = options || DefaultPartialEvaluatorOptions;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.fetchBuiltInCMap = function (name) {\n      var cachedCMap = _this.builtInCMapCache[name];\n      if (cachedCMap) {\n        return Promise.resolve(cachedCMap);\n      }\n      return _this.handler.sendWithPromise('FetchBuiltInCMap', { name: name }).then(function (data) {\n        if (data.compressionType !== _util.CMapCompressionType.NONE) {\n          _this.builtInCMapCache[name] = data;\n        }\n        return data;\n      });\n    };\n  }\n  var TIME_SLOT_DURATION_MS = 20;\n  var CHECK_TIME_EVERY = 100;\n  function TimeSlotManager() {\n    this.reset();\n  }\n  TimeSlotManager.prototype = {\n    check: function TimeSlotManager_check() {\n      if (++this.checked < CHECK_TIME_EVERY) {\n        return false;\n      }\n      this.checked = 0;\n      return this.endTime <= Date.now();\n    },\n    reset: function TimeSlotManager_reset() {\n      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n      this.checked = 0;\n    }\n  };\n  function normalizeBlendMode(value) {\n    if (!(0, _primitives.isName)(value)) {\n      return 'source-over';\n    }\n    switch (value.name) {\n      case 'Normal':\n      case 'Compatible':\n        return 'source-over';\n      case 'Multiply':\n        return 'multiply';\n      case 'Screen':\n        return 'screen';\n      case 'Overlay':\n        return 'overlay';\n      case 'Darken':\n        return 'darken';\n      case 'Lighten':\n        return 'lighten';\n      case 'ColorDodge':\n        return 'color-dodge';\n      case 'ColorBurn':\n        return 'color-burn';\n      case 'HardLight':\n        return 'hard-light';\n      case 'SoftLight':\n        return 'soft-light';\n      case 'Difference':\n        return 'difference';\n      case 'Exclusion':\n        return 'exclusion';\n      case 'Hue':\n        return 'hue';\n      case 'Saturation':\n        return 'saturation';\n      case 'Color':\n        return 'color';\n      case 'Luminosity':\n        return 'luminosity';\n    }\n    (0, _util.warn)('Unsupported blend mode: ' + value.name);\n    return 'source-over';\n  }\n  var deferred = Promise.resolve();\n  var TILING_PATTERN = 1,\n      SHADING_PATTERN = 2;\n  PartialEvaluator.prototype = {\n    clone: function clone() {\n      var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultPartialEvaluatorOptions;\n\n      var newEvaluator = Object.create(this);\n      newEvaluator.options = newOptions;\n      return newEvaluator;\n    },\n\n    hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n      if (!(0, _primitives.isDict)(resources)) {\n        return false;\n      }\n      var processed = Object.create(null);\n      if (resources.objId) {\n        processed[resources.objId] = true;\n      }\n      var nodes = [resources],\n          xref = this.xref;\n      while (nodes.length) {\n        var key, i, ii;\n        var node = nodes.shift();\n        var graphicStates = node.get('ExtGState');\n        if ((0, _primitives.isDict)(graphicStates)) {\n          var graphicStatesKeys = graphicStates.getKeys();\n          for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\n            key = graphicStatesKeys[i];\n            var graphicState = graphicStates.get(key);\n            var bm = graphicState.get('BM');\n            if ((0, _primitives.isName)(bm) && bm.name !== 'Normal') {\n              return true;\n            }\n          }\n        }\n        var xObjects = node.get('XObject');\n        if (!(0, _primitives.isDict)(xObjects)) {\n          continue;\n        }\n        var xObjectsKeys = xObjects.getKeys();\n        for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\n          key = xObjectsKeys[i];\n          var xObject = xObjects.getRaw(key);\n          if ((0, _primitives.isRef)(xObject)) {\n            if (processed[xObject.toString()]) {\n              continue;\n            }\n            xObject = xref.fetch(xObject);\n          }\n          if (!(0, _primitives.isStream)(xObject)) {\n            continue;\n          }\n          if (xObject.dict.objId) {\n            if (processed[xObject.dict.objId]) {\n              continue;\n            }\n            processed[xObject.dict.objId] = true;\n          }\n          var xResources = xObject.dict.get('Resources');\n          if ((0, _primitives.isDict)(xResources) && (!xResources.objId || !processed[xResources.objId])) {\n            nodes.push(xResources);\n            if (xResources.objId) {\n              processed[xResources.objId] = true;\n            }\n          }\n        }\n      }\n      return false;\n    },\n    buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\n      var dict = xobj.dict;\n      var matrix = dict.getArray('Matrix');\n      var bbox = dict.getArray('BBox');\n      var group = dict.get('Group');\n      if (group) {\n        var groupOptions = {\n          matrix: matrix,\n          bbox: bbox,\n          smask: smask,\n          isolated: false,\n          knockout: false\n        };\n        var groupSubtype = group.get('S');\n        var colorSpace = null;\n        if ((0, _primitives.isName)(groupSubtype, 'Transparency')) {\n          groupOptions.isolated = group.get('I') || false;\n          groupOptions.knockout = group.get('K') || false;\n          if (group.has('CS')) {\n            colorSpace = _colorspace.ColorSpace.parse(group.get('CS'), this.xref, resources, this.pdfFunctionFactory);\n          }\n        }\n        if (smask && smask.backdrop) {\n          colorSpace = colorSpace || _colorspace.ColorSpace.singletons.rgb;\n          smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n        }\n        operatorList.addOp(_util.OPS.beginGroup, [groupOptions]);\n      }\n      operatorList.addOp(_util.OPS.paintFormXObjectBegin, [matrix, bbox]);\n      return this.getOperatorList({\n        stream: xobj,\n        task: task,\n        resources: dict.get('Resources') || resources,\n        operatorList: operatorList,\n        initialState: initialState\n      }).then(function () {\n        operatorList.addOp(_util.OPS.paintFormXObjectEnd, []);\n        if (group) {\n          operatorList.addOp(_util.OPS.endGroup, [groupOptions]);\n        }\n      });\n    },\n    buildPaintImageXObject: function PartialEvaluator_buildPaintImageXObject(resources, image, inline, operatorList, cacheKey, imageCache) {\n      var _this2 = this;\n\n      var dict = image.dict;\n      var w = dict.get('Width', 'W');\n      var h = dict.get('Height', 'H');\n      if (!(w && (0, _util.isNum)(w)) || !(h && (0, _util.isNum)(h))) {\n        (0, _util.warn)('Image dimensions are missing, or not numbers.');\n        return;\n      }\n      var maxImageSize = this.options.maxImageSize;\n      if (maxImageSize !== -1 && w * h > maxImageSize) {\n        (0, _util.warn)('Image exceeded maximum allowed size and was removed.');\n        return;\n      }\n      var imageMask = dict.get('ImageMask', 'IM') || false;\n      var imgData, args;\n      if (imageMask) {\n        var width = dict.get('Width', 'W');\n        var height = dict.get('Height', 'H');\n        var bitStrideLength = width + 7 >> 3;\n        var imgArray = image.getBytes(bitStrideLength * height);\n        var decode = dict.getArray('Decode', 'D');\n        imgData = _image.PDFImage.createMask({\n          imgArray: imgArray,\n          width: width,\n          height: height,\n          imageIsFromDecodeStream: image instanceof _stream.DecodeStream,\n          inverseDecode: !!decode && decode[0] > 0\n        });\n        imgData.cached = true;\n        args = [imgData];\n        operatorList.addOp(_util.OPS.paintImageMaskXObject, args);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintImageMaskXObject,\n            args: args\n          };\n        }\n        return;\n      }\n      var softMask = dict.get('SMask', 'SM') || false;\n      var mask = dict.get('Mask') || false;\n      var SMALL_IMAGE_DIMENSIONS = 200;\n      if (inline && !softMask && !mask && !(image instanceof _stream.JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\n        var imageObj = new _image.PDFImage({\n          xref: this.xref,\n          res: resources,\n          image: image,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n        imgData = imageObj.createImageData(true);\n        operatorList.addOp(_util.OPS.paintInlineImageXObject, [imgData]);\n        return;\n      }\n      var nativeImageDecoderSupport = this.options.nativeImageDecoderSupport;\n      var objId = 'img_' + this.idFactory.createObjId();\n      operatorList.addDependency(objId);\n      args = [objId, w, h];\n      if (nativeImageDecoderSupport !== _util.NativeImageDecoding.NONE && !softMask && !mask && image instanceof _stream.JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources, this.pdfFunctionFactory)) {\n        operatorList.addOp(_util.OPS.paintJpegXObject, args);\n        this.handler.send('obj', [objId, this.pageIndex, 'JpegStream', image.getIR(this.options.forceDataSchema)]);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintJpegXObject,\n            args: args\n          };\n        }\n        return;\n      }\n      var nativeImageDecoder = null;\n      if (nativeImageDecoderSupport === _util.NativeImageDecoding.DECODE && (image instanceof _stream.JpegStream || mask instanceof _stream.JpegStream || softMask instanceof _stream.JpegStream)) {\n        nativeImageDecoder = new NativeImageDecoder({\n          xref: this.xref,\n          resources: resources,\n          handler: this.handler,\n          forceDataSchema: this.options.forceDataSchema,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n      }\n      _image.PDFImage.buildImage({\n        handler: this.handler,\n        xref: this.xref,\n        res: resources,\n        image: image,\n        nativeDecoder: nativeImageDecoder,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      }).then(function (imageObj) {\n        var imgData = imageObj.createImageData(false);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', imgData], [imgData.data.buffer]);\n      }).catch(function (reason) {\n        (0, _util.warn)('Unable to decode image: ' + reason);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', null]);\n      });\n      operatorList.addOp(_util.OPS.paintImageXObject, args);\n      if (cacheKey) {\n        imageCache[cacheKey] = {\n          fn: _util.OPS.paintImageXObject,\n          args: args\n        };\n      }\n    },\n    handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\n      var smaskContent = smask.get('G');\n      var smaskOptions = {\n        subtype: smask.get('S').name,\n        backdrop: smask.get('BC')\n      };\n      var transferObj = smask.get('TR');\n      if ((0, _function.isPDFFunction)(transferObj)) {\n        var transferFn = this.pdfFunctionFactory.create(transferObj);\n        var transferMap = new Uint8Array(256);\n        var tmp = new Float32Array(1);\n        for (var i = 0; i < 256; i++) {\n          tmp[0] = i / 255;\n          transferFn(tmp, 0, tmp, 0);\n          transferMap[i] = tmp[0] * 255 | 0;\n        }\n        smaskOptions.transferMap = transferMap;\n      }\n      return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\n    },\n    handleTilingType: function handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n      var _this3 = this;\n\n      var tilingOpList = new OperatorList();\n      var resourcesArray = [patternDict.get('Resources'), resources];\n      var patternResources = _primitives.Dict.merge(this.xref, resourcesArray);\n      return this.getOperatorList({\n        stream: pattern,\n        task: task,\n        resources: patternResources,\n        operatorList: tilingOpList\n      }).then(function () {\n        return (0, _pattern.getTilingPatternIR)({\n          fnArray: tilingOpList.fnArray,\n          argsArray: tilingOpList.argsArray\n        }, patternDict, args);\n      }).then(function (tilingPatternIR) {\n        operatorList.addDependencies(tilingOpList.dependencies);\n        operatorList.addOp(fn, tilingPatternIR);\n      }, function (reason) {\n        if (_this3.options.ignoreErrors) {\n          _this3.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('handleTilingType - ignoring pattern: \"' + reason + '\".');\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n      var _this4 = this;\n\n      var fontName;\n      if (fontArgs) {\n        fontArgs = fontArgs.slice();\n        fontName = fontArgs[0].name;\n      }\n      return this.loadFont(fontName, fontRef, resources).then(function (translated) {\n        if (!translated.font.isType3Font) {\n          return translated;\n        }\n        return translated.loadType3Data(_this4, resources, operatorList, task).then(function () {\n          return translated;\n        }).catch(function (reason) {\n          _this4.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n          return new TranslatedFont('g_font_error', new _fonts.ErrorFont('Type3 font load error: ' + reason), translated.font);\n        });\n      }).then(function (translated) {\n        state.font = translated.font;\n        translated.send(_this4.handler);\n        return translated.loadedName;\n      });\n    },\n    handleText: function PartialEvaluator_handleText(chars, state) {\n      var _this5 = this;\n\n      var font = state.font;\n      var glyphs = font.charsToGlyphs(chars);\n      var isAddToPathSet = !!(state.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n      if (font.data && (isAddToPathSet || this.options.disableFontFace)) {\n        var buildPath = function buildPath(fontChar) {\n          if (!font.renderer.hasBuiltPath(fontChar)) {\n            var path = font.renderer.getPathJs(fontChar);\n            _this5.handler.send('commonobj', [font.loadedName + '_path_' + fontChar, 'FontPath', path]);\n          }\n        };\n        for (var i = 0, ii = glyphs.length; i < ii; i++) {\n          var glyph = glyphs[i];\n          buildPath(glyph.fontChar);\n          var accent = glyph.accent;\n          if (accent && accent.fontChar) {\n            buildPath(accent.fontChar);\n          }\n        }\n      }\n      return glyphs;\n    },\n    setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, stateManager) {\n      var _this6 = this;\n\n      var gStateObj = [];\n      var gStateKeys = gState.getKeys();\n      var promise = Promise.resolve();\n\n      var _loop = function _loop() {\n        var key = gStateKeys[i];\n        var value = gState.get(key);\n        switch (key) {\n          case 'Type':\n            break;\n          case 'LW':\n          case 'LC':\n          case 'LJ':\n          case 'ML':\n          case 'D':\n          case 'RI':\n          case 'FL':\n          case 'CA':\n          case 'ca':\n            gStateObj.push([key, value]);\n            break;\n          case 'Font':\n            promise = promise.then(function () {\n              return _this6.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                gStateObj.push([key, [loadedName, value[1]]]);\n              });\n            });\n            break;\n          case 'BM':\n            gStateObj.push([key, normalizeBlendMode(value)]);\n            break;\n          case 'SMask':\n            if ((0, _primitives.isName)(value, 'None')) {\n              gStateObj.push([key, false]);\n              break;\n            }\n            if ((0, _primitives.isDict)(value)) {\n              promise = promise.then(function () {\n                return _this6.handleSMask(value, resources, operatorList, task, stateManager);\n              });\n              gStateObj.push([key, true]);\n            } else {\n              (0, _util.warn)('Unsupported SMask type');\n            }\n            break;\n          case 'OP':\n          case 'op':\n          case 'OPM':\n          case 'BG':\n          case 'BG2':\n          case 'UCR':\n          case 'UCR2':\n          case 'TR':\n          case 'TR2':\n          case 'HT':\n          case 'SM':\n          case 'SA':\n          case 'AIS':\n          case 'TK':\n            (0, _util.info)('graphic state operator ' + key);\n            break;\n          default:\n            (0, _util.info)('Unknown graphic state operator ' + key);\n            break;\n        }\n      };\n\n      for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\n        _loop();\n      }\n      return promise.then(function () {\n        if (gStateObj.length > 0) {\n          operatorList.addOp(_util.OPS.setGState, [gStateObj]);\n        }\n      });\n    },\n    loadFont: function PartialEvaluator_loadFont(fontName, font, resources) {\n      var _this7 = this;\n\n      function errorFont() {\n        return Promise.resolve(new TranslatedFont('g_font_error', new _fonts.ErrorFont('Font ' + fontName + ' is not available'), font));\n      }\n      var fontRef,\n          xref = this.xref;\n      if (font) {\n        if (!(0, _primitives.isRef)(font)) {\n          throw new Error('The \"font\" object should be a reference.');\n        }\n        fontRef = font;\n      } else {\n        var fontRes = resources.get('Font');\n        if (fontRes) {\n          fontRef = fontRes.getRaw(fontName);\n        } else {\n          (0, _util.warn)('fontRes not available');\n          return errorFont();\n        }\n      }\n      if (!fontRef) {\n        (0, _util.warn)('fontRef not available');\n        return errorFont();\n      }\n      if (this.fontCache.has(fontRef)) {\n        return this.fontCache.get(fontRef);\n      }\n      font = xref.fetchIfRef(fontRef);\n      if (!(0, _primitives.isDict)(font)) {\n        return errorFont();\n      }\n      if (font.translated) {\n        return font.translated;\n      }\n      var fontCapability = (0, _util.createPromiseCapability)();\n      var preEvaluatedFont = this.preEvaluateFont(font);\n      var descriptor = preEvaluatedFont.descriptor;\n      var fontRefIsRef = (0, _primitives.isRef)(fontRef),\n          fontID;\n      if (fontRefIsRef) {\n        fontID = fontRef.toString();\n      }\n      if ((0, _primitives.isDict)(descriptor)) {\n        if (!descriptor.fontAliases) {\n          descriptor.fontAliases = Object.create(null);\n        }\n        var fontAliases = descriptor.fontAliases;\n        var hash = preEvaluatedFont.hash;\n        if (fontAliases[hash]) {\n          var aliasFontRef = fontAliases[hash].aliasRef;\n          if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n            this.fontCache.putAlias(fontRef, aliasFontRef);\n            return this.fontCache.get(fontRef);\n          }\n        } else {\n          fontAliases[hash] = { fontID: _fonts.Font.getFontID() };\n        }\n        if (fontRefIsRef) {\n          fontAliases[hash].aliasRef = fontRef;\n        }\n        fontID = fontAliases[hash].fontID;\n      }\n      if (fontRefIsRef) {\n        this.fontCache.put(fontRef, fontCapability.promise);\n      } else {\n        if (!fontID) {\n          fontID = this.idFactory.createObjId();\n        }\n        this.fontCache.put('id_' + fontID, fontCapability.promise);\n      }\n      (0, _util.assert)(fontID, 'The \"fontID\" must be defined.');\n      font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\n      font.translated = fontCapability.promise;\n      var translatedPromise;\n      try {\n        translatedPromise = this.translateFont(preEvaluatedFont);\n      } catch (e) {\n        translatedPromise = Promise.reject(e);\n      }\n      translatedPromise.then(function (translatedFont) {\n        if (translatedFont.fontType !== undefined) {\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[translatedFont.fontType] = true;\n        }\n        fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\n      }).catch(function (reason) {\n        _this7.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n        try {\n          var descriptor = preEvaluatedFont.descriptor;\n          var fontFile3 = descriptor && descriptor.get('FontFile3');\n          var subtype = fontFile3 && fontFile3.get('Subtype');\n          var fontType = (0, _fonts.getFontType)(preEvaluatedFont.type, subtype && subtype.name);\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[fontType] = true;\n        } catch (ex) {}\n        fontCapability.resolve(new TranslatedFont(font.loadedName, new _fonts.ErrorFont(reason instanceof Error ? reason.message : reason), font));\n      });\n      return fontCapability.promise;\n    },\n    buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n      var lastIndex = operatorList.length - 1;\n      if (!args) {\n        args = [];\n      }\n      if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== _util.OPS.constructPath) {\n        operatorList.addOp(_util.OPS.constructPath, [[fn], args]);\n      } else {\n        var opArgs = operatorList.argsArray[lastIndex];\n        opArgs[0].push(fn);\n        Array.prototype.push.apply(opArgs[1], args);\n      }\n    },\n    handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task) {\n      var patternName = args[args.length - 1];\n      var pattern;\n      if ((0, _primitives.isName)(patternName) && (pattern = patterns.get(patternName.name))) {\n        var dict = (0, _primitives.isStream)(pattern) ? pattern.dict : pattern;\n        var typeNum = dict.get('PatternType');\n        if (typeNum === TILING_PATTERN) {\n          var color = cs.base ? cs.base.getRgb(args, 0) : null;\n          return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\n        } else if (typeNum === SHADING_PATTERN) {\n          var shading = dict.get('Shading');\n          var matrix = dict.getArray('Matrix');\n          pattern = _pattern.Pattern.parseShading(shading, matrix, this.xref, resources, this.handler, this.pdfFunctionFactory);\n          operatorList.addOp(fn, pattern.getIR());\n          return Promise.resolve();\n        }\n        return Promise.reject(new Error('Unknown PatternType: ' + typeNum));\n      }\n      operatorList.addOp(fn, args);\n      return Promise.resolve();\n    },\n    getOperatorList: function getOperatorList(_ref3) {\n      var _this8 = this;\n\n      var stream = _ref3.stream,\n          task = _ref3.task,\n          resources = _ref3.resources,\n          operatorList = _ref3.operatorList,\n          _ref3$initialState = _ref3.initialState,\n          initialState = _ref3$initialState === undefined ? null : _ref3$initialState;\n\n      resources = resources || _primitives.Dict.empty;\n      initialState = initialState || new EvalState();\n      if (!operatorList) {\n        throw new Error('getOperatorList: missing \"operatorList\" parameter');\n      }\n      var self = this;\n      var xref = this.xref;\n      var imageCache = Object.create(null);\n      var xobjs = resources.get('XObject') || _primitives.Dict.empty;\n      var patterns = resources.get('Pattern') || _primitives.Dict.empty;\n      var stateManager = new StateManager(initialState);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var timeSlotManager = new TimeSlotManager();\n      function closePendingRestoreOPS(argument) {\n        for (var i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n          operatorList.addOp(_util.OPS.restore, []);\n        }\n      }\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          promise.then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            i,\n            ii,\n            cs;\n        while (!(stop = timeSlotManager.check())) {\n          operation.args = null;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          var args = operation.args;\n          var fn = operation.fn;\n          switch (fn | 0) {\n            case _util.OPS.paintXObject:\n              var name = args[0].name;\n              if (name && imageCache[name] !== undefined) {\n                operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n                args = null;\n                continue;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  operatorList.addOp(fn, args);\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name === 'Form') {\n                  stateManager.save();\n                  self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\n                    stateManager.restore();\n                    resolveXObject();\n                  }, rejectXObject);\n                  return;\n                } else if (type.name === 'Image') {\n                  self.buildPaintImageXObject(resources, xobj, false, operatorList, name, imageCache);\n                } else if (type.name === 'PS') {\n                  (0, _util.info)('Ignored XObject subtype PS');\n                } else {\n                  throw new _util.FormatError('Unhandled XObject subtype ' + type.name);\n                }\n                resolveXObject();\n              }).catch(function (reason) {\n                if (self.options.ignoreErrors) {\n                  self.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n                  (0, _util.warn)('getOperatorList - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setFont:\n              var fontSize = args[1];\n              next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                operatorList.addOp(_util.OPS.setFont, [loadedName, fontSize]);\n              }));\n              return;\n            case _util.OPS.endInlineImage:\n              var cacheKey = args[0].cacheKey;\n              if (cacheKey) {\n                var cacheEntry = imageCache[cacheKey];\n                if (cacheEntry !== undefined) {\n                  operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n                  args = null;\n                  continue;\n                }\n              }\n              self.buildPaintImageXObject(resources, args[0], true, operatorList, cacheKey, imageCache);\n              args = null;\n              continue;\n            case _util.OPS.showText:\n              args[0] = self.handleText(args[0], stateManager.state);\n              break;\n            case _util.OPS.showSpacedText:\n              var arr = args[0];\n              var combinedGlyphs = [];\n              var arrLength = arr.length;\n              var state = stateManager.state;\n              for (i = 0; i < arrLength; ++i) {\n                var arrItem = arr[i];\n                if ((0, _util.isString)(arrItem)) {\n                  Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n                } else if ((0, _util.isNum)(arrItem)) {\n                  combinedGlyphs.push(arrItem);\n                }\n              }\n              args[0] = combinedGlyphs;\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              operatorList.addOp(_util.OPS.setWordSpacing, [args.shift()]);\n              operatorList.addOp(_util.OPS.setCharSpacing, [args.shift()]);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.setTextRenderingMode:\n              stateManager.state.textRenderingMode = args[0];\n              break;\n            case _util.OPS.setFillColorSpace:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setStrokeColorSpace:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setFillColor:\n              cs = stateManager.state.fillColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColor:\n              cs = stateManager.state.strokeColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillGray:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeGray:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillCMYKColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeCMYKColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillRGBColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setStrokeRGBColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setFillColorN:\n              cs = stateManager.state.fillColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setFillColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColorN:\n              cs = stateManager.state.strokeColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setStrokeColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.shadingFill:\n              var shadingRes = resources.get('Shading');\n              if (!shadingRes) {\n                throw new _util.FormatError('No shading resource found');\n              }\n              var shading = shadingRes.get(args[0].name);\n              if (!shading) {\n                throw new _util.FormatError('No shading object found');\n              }\n              var shadingFill = _pattern.Pattern.parseShading(shading, null, xref, resources, self.handler, self.pdfFunctionFactory);\n              var patternIR = shadingFill.getIR();\n              args = [patternIR];\n              fn = _util.OPS.shadingFill;\n              break;\n            case _util.OPS.setGState:\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !extGState.has(dictName.name)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              next(self.setGState(resources, gState, operatorList, task, stateManager));\n              return;\n            case _util.OPS.moveTo:\n            case _util.OPS.lineTo:\n            case _util.OPS.curveTo:\n            case _util.OPS.curveTo2:\n            case _util.OPS.curveTo3:\n            case _util.OPS.closePath:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.rectangle:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.markPoint:\n            case _util.OPS.markPointProps:\n            case _util.OPS.beginMarkedContent:\n            case _util.OPS.beginMarkedContentProps:\n            case _util.OPS.endMarkedContent:\n            case _util.OPS.beginCompat:\n            case _util.OPS.endCompat:\n              continue;\n            default:\n              if (args !== null) {\n                for (i = 0, ii = args.length; i < ii; i++) {\n                  if (args[i] instanceof _primitives.Dict) {\n                    break;\n                  }\n                }\n                if (i < ii) {\n                  (0, _util.warn)('getOperatorList - ignoring operator: ' + fn);\n                  continue;\n                }\n              }\n          }\n          operatorList.addOp(fn, args);\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        closePendingRestoreOPS();\n        resolve();\n      }).catch(function (reason) {\n        if (_this8.options.ignoreErrors) {\n          _this8.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('getOperatorList - ignoring errors during task: ' + task.name);\n          closePendingRestoreOPS();\n          return;\n        }\n        throw reason;\n      });\n    },\n    getTextContent: function getTextContent(_ref4) {\n      var _this9 = this;\n\n      var stream = _ref4.stream,\n          task = _ref4.task,\n          resources = _ref4.resources,\n          _ref4$stateManager = _ref4.stateManager,\n          stateManager = _ref4$stateManager === undefined ? null : _ref4$stateManager,\n          _ref4$normalizeWhites = _ref4.normalizeWhitespace,\n          normalizeWhitespace = _ref4$normalizeWhites === undefined ? false : _ref4$normalizeWhites,\n          _ref4$combineTextItem = _ref4.combineTextItems,\n          combineTextItems = _ref4$combineTextItem === undefined ? false : _ref4$combineTextItem,\n          sink = _ref4.sink,\n          _ref4$seenStyles = _ref4.seenStyles,\n          seenStyles = _ref4$seenStyles === undefined ? Object.create(null) : _ref4$seenStyles;\n\n      resources = resources || _primitives.Dict.empty;\n      stateManager = stateManager || new StateManager(new TextState());\n      var WhitespaceRegexp = /\\s/g;\n      var textContent = {\n        items: [],\n        styles: Object.create(null)\n      };\n      var textContentItem = {\n        initialized: false,\n        str: [],\n        width: 0,\n        height: 0,\n        vertical: false,\n        lastAdvanceWidth: 0,\n        lastAdvanceHeight: 0,\n        textAdvanceScale: 0,\n        spaceWidth: 0,\n        fakeSpaceMin: Infinity,\n        fakeMultiSpaceMin: Infinity,\n        fakeMultiSpaceMax: -0,\n        textRunBreakAllowed: false,\n        transform: null,\n        fontName: null\n      };\n      var SPACE_FACTOR = 0.3;\n      var MULTI_SPACE_FACTOR = 1.5;\n      var MULTI_SPACE_FACTOR_MAX = 4;\n      var self = this;\n      var xref = this.xref;\n      var xobjs = null;\n      var skipEmptyXObjs = Object.create(null);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var textState;\n      function ensureTextContentItem() {\n        if (textContentItem.initialized) {\n          return textContentItem;\n        }\n        var font = textState.font;\n        if (!(font.loadedName in seenStyles)) {\n          seenStyles[font.loadedName] = true;\n          textContent.styles[font.loadedName] = {\n            fontFamily: font.fallbackName,\n            ascent: font.ascent,\n            descent: font.descent,\n            vertical: font.vertical\n          };\n        }\n        textContentItem.fontName = font.loadedName;\n        var tsm = [textState.fontSize * textState.textHScale, 0, 0, textState.fontSize, 0, textState.textRise];\n        if (font.isType3Font && textState.fontMatrix !== _util.FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\n          var glyphHeight = font.bbox[3] - font.bbox[1];\n          if (glyphHeight > 0) {\n            glyphHeight = glyphHeight * textState.fontMatrix[3];\n            tsm[3] *= glyphHeight;\n          }\n        }\n        var trm = _util.Util.transform(textState.ctm, _util.Util.transform(textState.textMatrix, tsm));\n        textContentItem.transform = trm;\n        if (!font.vertical) {\n          textContentItem.width = 0;\n          textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n          textContentItem.vertical = false;\n        } else {\n          textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n          textContentItem.height = 0;\n          textContentItem.vertical = true;\n        }\n        var a = textState.textLineMatrix[0];\n        var b = textState.textLineMatrix[1];\n        var scaleLineX = Math.sqrt(a * a + b * b);\n        a = textState.ctm[0];\n        b = textState.ctm[1];\n        var scaleCtmX = Math.sqrt(a * a + b * b);\n        textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n        textContentItem.lastAdvanceWidth = 0;\n        textContentItem.lastAdvanceHeight = 0;\n        var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n        if (spaceWidth) {\n          textContentItem.spaceWidth = spaceWidth;\n          textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n          textContentItem.textRunBreakAllowed = !font.isMonospace;\n        } else {\n          textContentItem.spaceWidth = 0;\n          textContentItem.fakeSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMax = 0;\n          textContentItem.textRunBreakAllowed = false;\n        }\n        textContentItem.initialized = true;\n        return textContentItem;\n      }\n      function replaceWhitespace(str) {\n        var i = 0,\n            ii = str.length,\n            code;\n        while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\n          i++;\n        }\n        return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\n      }\n      function runBidiTransform(textChunk) {\n        var str = textChunk.str.join('');\n        var bidiResult = (0, _bidi.bidi)(str, -1, textChunk.vertical);\n        return {\n          str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n          dir: bidiResult.dir,\n          width: textChunk.width,\n          height: textChunk.height,\n          transform: textChunk.transform,\n          fontName: textChunk.fontName\n        };\n      }\n      function handleSetFont(fontName, fontRef) {\n        return self.loadFont(fontName, fontRef, resources).then(function (translated) {\n          textState.font = translated.font;\n          textState.fontMatrix = translated.font.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        });\n      }\n      function buildTextContentItem(chars) {\n        var font = textState.font;\n        var textChunk = ensureTextContentItem();\n        var width = 0;\n        var height = 0;\n        var glyphs = font.charsToGlyphs(chars);\n        for (var i = 0; i < glyphs.length; i++) {\n          var glyph = glyphs[i];\n          var glyphWidth = null;\n          if (font.vertical && glyph.vmetric) {\n            glyphWidth = glyph.vmetric[0];\n          } else {\n            glyphWidth = glyph.width;\n          }\n          var glyphUnicode = glyph.unicode;\n          var NormalizedUnicodes = (0, _unicode.getNormalizedUnicodes)();\n          if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n            glyphUnicode = NormalizedUnicodes[glyphUnicode];\n          }\n          glyphUnicode = (0, _unicode.reverseIfRtl)(glyphUnicode);\n          var charSpacing = textState.charSpacing;\n          if (glyph.isSpace) {\n            var wordSpacing = textState.wordSpacing;\n            charSpacing += wordSpacing;\n            if (wordSpacing > 0) {\n              addFakeSpaces(wordSpacing, textChunk.str);\n            }\n          }\n          var tx = 0;\n          var ty = 0;\n          if (!font.vertical) {\n            var w0 = glyphWidth * textState.fontMatrix[0];\n            tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n            width += tx;\n          } else {\n            var w1 = glyphWidth * textState.fontMatrix[0];\n            ty = w1 * textState.fontSize + charSpacing;\n            height += ty;\n          }\n          textState.translateTextMatrix(tx, ty);\n          textChunk.str.push(glyphUnicode);\n        }\n        if (!font.vertical) {\n          textChunk.lastAdvanceWidth = width;\n          textChunk.width += width;\n        } else {\n          textChunk.lastAdvanceHeight = height;\n          textChunk.height += Math.abs(height);\n        }\n        return textChunk;\n      }\n      function addFakeSpaces(width, strBuf) {\n        if (width < textContentItem.fakeSpaceMin) {\n          return;\n        }\n        if (width < textContentItem.fakeMultiSpaceMin) {\n          strBuf.push(' ');\n          return;\n        }\n        var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n        while (fakeSpaces-- > 0) {\n          strBuf.push(' ');\n        }\n      }\n      function flushTextContentItem() {\n        if (!textContentItem.initialized) {\n          return;\n        }\n        textContentItem.width *= textContentItem.textAdvanceScale;\n        textContentItem.height *= textContentItem.textAdvanceScale;\n        textContent.items.push(runBidiTransform(textContentItem));\n        textContentItem.initialized = false;\n        textContentItem.str.length = 0;\n      }\n      function enqueueChunk() {\n        var length = textContent.items.length;\n        if (length > 0) {\n          sink.enqueue(textContent, length);\n          textContent.items = [];\n          textContent.styles = Object.create(null);\n        }\n      }\n      var timeSlotManager = new TimeSlotManager();\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          enqueueChunk();\n          Promise.all([promise, sink.ready]).then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            args = [];\n        while (!(stop = timeSlotManager.check())) {\n          args.length = 0;\n          operation.args = args;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          textState = stateManager.state;\n          var fn = operation.fn;\n          args = operation.args;\n          var advance, diff;\n          switch (fn | 0) {\n            case _util.OPS.setFont:\n              var fontNameArg = args[0].name,\n                  fontSizeArg = args[1];\n              if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n                break;\n              }\n              flushTextContentItem();\n              textState.fontName = fontNameArg;\n              textState.fontSize = fontSizeArg;\n              next(handleSetFont(fontNameArg, null));\n              return;\n            case _util.OPS.setTextRise:\n              flushTextContentItem();\n              textState.textRise = args[0];\n              break;\n            case _util.OPS.setHScale:\n              flushTextContentItem();\n              textState.textHScale = args[0] / 100;\n              break;\n            case _util.OPS.setLeading:\n              flushTextContentItem();\n              textState.leading = args[0];\n              break;\n            case _util.OPS.moveText:\n              var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n              advance = args[0] - args[1];\n              if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(args[0], args[1]);\n                textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n                textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n                diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.setLeadingMoveText:\n              flushTextContentItem();\n              textState.leading = -args[1];\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.nextLine:\n              flushTextContentItem();\n              textState.carriageReturn();\n              break;\n            case _util.OPS.setTextMatrix:\n              advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n              if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(advance.width, advance.height);\n                textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n                textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n                diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              break;\n            case _util.OPS.setCharSpacing:\n              textState.charSpacing = args[0];\n              break;\n            case _util.OPS.setWordSpacing:\n              textState.wordSpacing = args[0];\n              break;\n            case _util.OPS.beginText:\n              flushTextContentItem();\n              textState.textMatrix = _util.IDENTITY_MATRIX.slice();\n              textState.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n              break;\n            case _util.OPS.showSpacedText:\n              var items = args[0];\n              var offset;\n              for (var j = 0, jj = items.length; j < jj; j++) {\n                if (typeof items[j] === 'string') {\n                  buildTextContentItem(items[j]);\n                } else if ((0, _util.isNum)(items[j])) {\n                  ensureTextContentItem();\n                  advance = items[j] * textState.fontSize / 1000;\n                  var breakTextRun = false;\n                  if (textState.font.vertical) {\n                    offset = advance;\n                    textState.translateTextMatrix(0, offset);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.height += offset;\n                    }\n                  } else {\n                    advance = -advance;\n                    offset = advance * textState.textHScale;\n                    textState.translateTextMatrix(offset, 0);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.width += offset;\n                    }\n                  }\n                  if (breakTextRun) {\n                    flushTextContentItem();\n                  } else if (advance > 0) {\n                    addFakeSpaces(advance, textContentItem.str);\n                  }\n                }\n              }\n              break;\n            case _util.OPS.showText:\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineShowText:\n              flushTextContentItem();\n              textState.carriageReturn();\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              flushTextContentItem();\n              textState.wordSpacing = args[0];\n              textState.charSpacing = args[1];\n              textState.carriageReturn();\n              buildTextContentItem(args[2]);\n              break;\n            case _util.OPS.paintXObject:\n              flushTextContentItem();\n              if (!xobjs) {\n                xobjs = resources.get('XObject') || _primitives.Dict.empty;\n              }\n              var name = args[0].name;\n              if (name && skipEmptyXObjs[name] !== undefined) {\n                break;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name !== 'Form') {\n                  skipEmptyXObjs[name] = true;\n                  resolveXObject();\n                  return;\n                }\n                var currentState = stateManager.state.clone();\n                var xObjStateManager = new StateManager(currentState);\n                var matrix = xobj.dict.getArray('Matrix');\n                if (Array.isArray(matrix) && matrix.length === 6) {\n                  xObjStateManager.transform(matrix);\n                }\n                enqueueChunk();\n                var sinkWrapper = {\n                  enqueueInvoked: false,\n                  enqueue: function enqueue(chunk, size) {\n                    this.enqueueInvoked = true;\n                    sink.enqueue(chunk, size);\n                  },\n\n                  get desiredSize() {\n                    return sink.desiredSize;\n                  },\n                  get ready() {\n                    return sink.ready;\n                  }\n                };\n                self.getTextContent({\n                  stream: xobj,\n                  task: task,\n                  resources: xobj.dict.get('Resources') || resources,\n                  stateManager: xObjStateManager,\n                  normalizeWhitespace: normalizeWhitespace,\n                  combineTextItems: combineTextItems,\n                  sink: sinkWrapper,\n                  seenStyles: seenStyles\n                }).then(function () {\n                  if (!sinkWrapper.enqueueInvoked) {\n                    skipEmptyXObjs[name] = true;\n                  }\n                  resolveXObject();\n                }, rejectXObject);\n              }).catch(function (reason) {\n                if (reason instanceof _util.AbortException) {\n                  return;\n                }\n                if (self.options.ignoreErrors) {\n                  (0, _util.warn)('getTextContent - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setGState:\n              flushTextContentItem();\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !(0, _primitives.isName)(dictName)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              if (!(0, _primitives.isDict)(gState)) {\n                break;\n              }\n              var gStateFont = gState.get('Font');\n              if (gStateFont) {\n                textState.fontName = null;\n                textState.fontSize = gStateFont[1];\n                next(handleSetFont(null, gStateFont[0]));\n                return;\n              }\n              break;\n          }\n          if (textContent.items.length >= sink.desiredSize) {\n            stop = true;\n            break;\n          }\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        flushTextContentItem();\n        enqueueChunk();\n        resolve();\n      }).catch(function (reason) {\n        if (reason instanceof _util.AbortException) {\n          return;\n        }\n        if (_this9.options.ignoreErrors) {\n          (0, _util.warn)('getTextContent - ignoring errors during task: ' + task.name);\n          flushTextContentItem();\n          enqueueChunk();\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, properties) {\n      var _this10 = this;\n\n      var xref = this.xref;\n      var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n      var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n      if (properties.composite) {\n        var cidSystemInfo = dict.get('CIDSystemInfo');\n        if ((0, _primitives.isDict)(cidSystemInfo)) {\n          properties.cidSystemInfo = {\n            registry: cidSystemInfo.get('Registry'),\n            ordering: cidSystemInfo.get('Ordering'),\n            supplement: cidSystemInfo.get('Supplement')\n          };\n        }\n        var cidToGidMap = dict.get('CIDToGIDMap');\n        if ((0, _primitives.isStream)(cidToGidMap)) {\n          properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n        }\n      }\n      var differences = [];\n      var baseEncodingName = null;\n      var encoding;\n      if (dict.has('Encoding')) {\n        encoding = dict.get('Encoding');\n        if ((0, _primitives.isDict)(encoding)) {\n          baseEncodingName = encoding.get('BaseEncoding');\n          baseEncodingName = (0, _primitives.isName)(baseEncodingName) ? baseEncodingName.name : null;\n          if (encoding.has('Differences')) {\n            var diffEncoding = encoding.get('Differences');\n            var index = 0;\n            for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n              var data = xref.fetchIfRef(diffEncoding[j]);\n              if ((0, _util.isNum)(data)) {\n                index = data;\n              } else if ((0, _primitives.isName)(data)) {\n                differences[index++] = data.name;\n              } else {\n                throw new _util.FormatError('Invalid entry in \\'Differences\\' array: ' + data);\n              }\n            }\n          }\n        } else if ((0, _primitives.isName)(encoding)) {\n          baseEncodingName = encoding.name;\n        } else {\n          throw new _util.FormatError('Encoding is not a Name nor a Dict');\n        }\n        if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\n          baseEncodingName = null;\n        }\n      }\n      if (baseEncodingName) {\n        properties.defaultEncoding = (0, _encodings.getEncoding)(baseEncodingName).slice();\n      } else {\n        var isSymbolicFont = !!(properties.flags & _fonts.FontFlags.Symbolic);\n        var isNonsymbolicFont = !!(properties.flags & _fonts.FontFlags.Nonsymbolic);\n        encoding = _encodings.StandardEncoding;\n        if (properties.type === 'TrueType' && !isNonsymbolicFont) {\n          encoding = _encodings.WinAnsiEncoding;\n        }\n        if (isSymbolicFont) {\n          encoding = _encodings.MacRomanEncoding;\n          if (!properties.file) {\n            if (/Symbol/i.test(properties.name)) {\n              encoding = _encodings.SymbolSetEncoding;\n            } else if (/Dingbats/i.test(properties.name)) {\n              encoding = _encodings.ZapfDingbatsEncoding;\n            }\n          }\n        }\n        properties.defaultEncoding = encoding;\n      }\n      properties.differences = differences;\n      properties.baseEncodingName = baseEncodingName;\n      properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n      properties.dict = dict;\n      return toUnicodePromise.then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return _this10.buildToUnicode(properties);\n      }).then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return properties;\n      });\n    },\n    buildToUnicode: function PartialEvaluator_buildToUnicode(properties) {\n      properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n      if (properties.hasIncludedToUnicodeMap) {\n        return Promise.resolve(properties.toUnicode);\n      }\n      var toUnicode, charcode, glyphName;\n      if (!properties.composite) {\n        toUnicode = [];\n        var encoding = properties.defaultEncoding.slice();\n        var baseEncodingName = properties.baseEncodingName;\n        var differences = properties.differences;\n        for (charcode in differences) {\n          glyphName = differences[charcode];\n          if (glyphName === '.notdef') {\n            continue;\n          }\n          encoding[charcode] = glyphName;\n        }\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        for (charcode in encoding) {\n          glyphName = encoding[charcode];\n          if (glyphName === '') {\n            continue;\n          } else if (glyphsUnicodeMap[glyphName] === undefined) {\n            var code = 0;\n            switch (glyphName[0]) {\n              case 'G':\n                if (glyphName.length === 3) {\n                  code = parseInt(glyphName.substr(1), 16);\n                }\n                break;\n              case 'g':\n                if (glyphName.length === 5) {\n                  code = parseInt(glyphName.substr(1), 16);\n                }\n                break;\n              case 'C':\n              case 'c':\n                if (glyphName.length >= 3) {\n                  code = +glyphName.substr(1);\n                }\n                break;\n              default:\n                var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n                if (unicode !== -1) {\n                  code = unicode;\n                }\n            }\n            if (code) {\n              if (baseEncodingName && code === +charcode) {\n                var baseEncoding = (0, _encodings.getEncoding)(baseEncodingName);\n                if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n                  toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n                  continue;\n                }\n              }\n              toUnicode[charcode] = String.fromCharCode(code);\n            }\n            continue;\n          }\n          toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n        }\n        return Promise.resolve(new _fonts.ToUnicodeMap(toUnicode));\n      }\n      if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof _cmap.IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\n        var registry = properties.cidSystemInfo.registry;\n        var ordering = properties.cidSystemInfo.ordering;\n        var ucs2CMapName = _primitives.Name.get(registry + '-' + ordering + '-UCS2');\n        return _cmap.CMapFactory.create({\n          encoding: ucs2CMapName,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (ucs2CMap) {\n          var cMap = properties.cMap;\n          toUnicode = [];\n          cMap.forEach(function (charcode, cid) {\n            if (cid > 0xffff) {\n              throw new _util.FormatError('Max size of CID is 65,535');\n            }\n            var ucs2 = ucs2CMap.lookup(cid);\n            if (ucs2) {\n              toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n            }\n          });\n          return new _fonts.ToUnicodeMap(toUnicode);\n        });\n      }\n      return Promise.resolve(new _fonts.IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n    },\n    readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n      var cmapObj = toUnicode;\n      if ((0, _primitives.isName)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          return new _fonts.ToUnicodeMap(cmap.getMap());\n        });\n      } else if ((0, _primitives.isStream)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          var map = new Array(cmap.length);\n          cmap.forEach(function (charCode, token) {\n            var str = [];\n            for (var k = 0; k < token.length; k += 2) {\n              var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              if ((w1 & 0xF800) !== 0xD800) {\n                str.push(w1);\n                continue;\n              }\n              k += 2;\n              var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n            }\n            map[charCode] = String.fromCharCode.apply(String, str);\n          });\n          return new _fonts.ToUnicodeMap(map);\n        });\n      }\n      return Promise.resolve(null);\n    },\n    readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n      var glyphsData = cidToGidStream.getBytes();\n      var result = [];\n      for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n        var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n        if (glyphID === 0) {\n          continue;\n        }\n        var code = j >> 1;\n        result[code] = glyphID;\n      }\n      return result;\n    },\n    extractWidths: function PartialEvaluator_extractWidths(dict, descriptor, properties) {\n      var xref = this.xref;\n      var glyphsWidths = [];\n      var defaultWidth = 0;\n      var glyphsVMetrics = [];\n      var defaultVMetrics;\n      var i, ii, j, jj, start, code, widths;\n      if (properties.composite) {\n        defaultWidth = dict.has('DW') ? dict.get('DW') : 1000;\n        widths = dict.get('W');\n        if (widths) {\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            start = xref.fetchIfRef(widths[i++]);\n            code = xref.fetchIfRef(widths[i]);\n            if (Array.isArray(code)) {\n              for (j = 0, jj = code.length; j < jj; j++) {\n                glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n              }\n            } else {\n              var width = xref.fetchIfRef(widths[++i]);\n              for (j = start; j <= code; j++) {\n                glyphsWidths[j] = width;\n              }\n            }\n          }\n        }\n        if (properties.vertical) {\n          var vmetrics = dict.getArray('DW2') || [880, -1000];\n          defaultVMetrics = [vmetrics[1], defaultWidth * 0.5, vmetrics[0]];\n          vmetrics = dict.get('W2');\n          if (vmetrics) {\n            for (i = 0, ii = vmetrics.length; i < ii; i++) {\n              start = xref.fetchIfRef(vmetrics[i++]);\n              code = xref.fetchIfRef(vmetrics[i]);\n              if (Array.isArray(code)) {\n                for (j = 0, jj = code.length; j < jj; j++) {\n                  glyphsVMetrics[start++] = [xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j])];\n                }\n              } else {\n                var vmetric = [xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i])];\n                for (j = start; j <= code; j++) {\n                  glyphsVMetrics[j] = vmetric;\n                }\n              }\n            }\n          }\n        }\n      } else {\n        var firstChar = properties.firstChar;\n        widths = dict.get('Widths');\n        if (widths) {\n          j = firstChar;\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n          }\n          defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if ((0, _primitives.isName)(baseFontName)) {\n            var metrics = this.getBaseFontMetrics(baseFontName.name);\n            glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n            defaultWidth = metrics.defaultWidth;\n          }\n        }\n      }\n      var isMonospace = true;\n      var firstWidth = defaultWidth;\n      for (var glyph in glyphsWidths) {\n        var glyphWidth = glyphsWidths[glyph];\n        if (!glyphWidth) {\n          continue;\n        }\n        if (!firstWidth) {\n          firstWidth = glyphWidth;\n          continue;\n        }\n        if (firstWidth !== glyphWidth) {\n          isMonospace = false;\n          break;\n        }\n      }\n      if (isMonospace) {\n        properties.flags |= _fonts.FontFlags.FixedPitch;\n      }\n      properties.defaultWidth = defaultWidth;\n      properties.widths = glyphsWidths;\n      properties.defaultVMetrics = defaultVMetrics;\n      properties.vmetrics = glyphsVMetrics;\n    },\n    isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n      var fontNameWoStyle = baseFontName.split('-')[0];\n      return fontNameWoStyle in (0, _standard_fonts.getSerifFonts)() || fontNameWoStyle.search(/serif/gi) !== -1;\n    },\n    getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n      var defaultWidth = 0;\n      var widths = [];\n      var monospace = false;\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)();\n      var lookupName = stdFontMap[name] || name;\n      var Metrics = (0, _metrics.getMetrics)();\n      if (!(lookupName in Metrics)) {\n        if (this.isSerifFont(name)) {\n          lookupName = 'Times-Roman';\n        } else {\n          lookupName = 'Helvetica';\n        }\n      }\n      var glyphWidths = Metrics[lookupName];\n      if ((0, _util.isNum)(glyphWidths)) {\n        defaultWidth = glyphWidths;\n        monospace = true;\n      } else {\n        widths = glyphWidths();\n      }\n      return {\n        defaultWidth: defaultWidth,\n        monospace: monospace,\n        widths: widths\n      };\n    },\n    buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\n      var widths = Object.create(null);\n      var differences = properties.differences;\n      var encoding = properties.defaultEncoding;\n      for (var charCode = 0; charCode < 256; charCode++) {\n        if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n          widths[charCode] = widthsByGlyphName[differences[charCode]];\n          continue;\n        }\n        if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n          widths[charCode] = widthsByGlyphName[encoding[charCode]];\n          continue;\n        }\n      }\n      return widths;\n    },\n    preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict) {\n      var baseDict = dict;\n      var type = dict.get('Subtype');\n      if (!(0, _primitives.isName)(type)) {\n        throw new _util.FormatError('invalid font Subtype');\n      }\n      var composite = false;\n      var uint8array;\n      if (type.name === 'Type0') {\n        var df = dict.get('DescendantFonts');\n        if (!df) {\n          throw new _util.FormatError('Descendant fonts are not specified');\n        }\n        dict = Array.isArray(df) ? this.xref.fetchIfRef(df[0]) : df;\n        type = dict.get('Subtype');\n        if (!(0, _primitives.isName)(type)) {\n          throw new _util.FormatError('invalid font Subtype');\n        }\n        composite = true;\n      }\n      var descriptor = dict.get('FontDescriptor');\n      if (descriptor) {\n        var hash = new _murmurhash.MurmurHash3_64();\n        var encoding = baseDict.getRaw('Encoding');\n        if ((0, _primitives.isName)(encoding)) {\n          hash.update(encoding.name);\n        } else if ((0, _primitives.isRef)(encoding)) {\n          hash.update(encoding.toString());\n        } else if ((0, _primitives.isDict)(encoding)) {\n          var keys = encoding.getKeys();\n          for (var i = 0, ii = keys.length; i < ii; i++) {\n            var entry = encoding.getRaw(keys[i]);\n            if ((0, _primitives.isName)(entry)) {\n              hash.update(entry.name);\n            } else if ((0, _primitives.isRef)(entry)) {\n              hash.update(entry.toString());\n            } else if (Array.isArray(entry)) {\n              var diffLength = entry.length,\n                  diffBuf = new Array(diffLength);\n              for (var j = 0; j < diffLength; j++) {\n                var diffEntry = entry[j];\n                if ((0, _primitives.isName)(diffEntry)) {\n                  diffBuf[j] = diffEntry.name;\n                } else if ((0, _util.isNum)(diffEntry) || (0, _primitives.isRef)(diffEntry)) {\n                  diffBuf[j] = diffEntry.toString();\n                }\n              }\n              hash.update(diffBuf.join());\n            }\n          }\n        }\n        var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n        if ((0, _primitives.isStream)(toUnicode)) {\n          var stream = toUnicode.str || toUnicode;\n          uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n          hash.update(uint8array);\n        } else if ((0, _primitives.isName)(toUnicode)) {\n          hash.update(toUnicode.name);\n        }\n        var widths = dict.get('Widths') || baseDict.get('Widths');\n        if (widths) {\n          uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n          hash.update(uint8array);\n        }\n      }\n      return {\n        descriptor: descriptor,\n        dict: dict,\n        baseDict: baseDict,\n        composite: composite,\n        type: type.name,\n        hash: hash ? hash.hexdigest() : ''\n      };\n    },\n    translateFont: function PartialEvaluator_translateFont(preEvaluatedFont) {\n      var _this11 = this;\n\n      var baseDict = preEvaluatedFont.baseDict;\n      var dict = preEvaluatedFont.dict;\n      var composite = preEvaluatedFont.composite;\n      var descriptor = preEvaluatedFont.descriptor;\n      var type = preEvaluatedFont.type;\n      var maxCharIndex = composite ? 0xFFFF : 0xFF;\n      var properties;\n      if (!descriptor) {\n        if (type === 'Type3') {\n          descriptor = new _primitives.Dict(null);\n          descriptor.set('FontName', _primitives.Name.get(type));\n          descriptor.set('FontBBox', dict.getArray('FontBBox'));\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if (!(0, _primitives.isName)(baseFontName)) {\n            throw new _util.FormatError('Base font is not specified');\n          }\n          baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n          var metrics = this.getBaseFontMetrics(baseFontName);\n          var fontNameWoStyle = baseFontName.split('-')[0];\n          var flags = (this.isSerifFont(fontNameWoStyle) ? _fonts.FontFlags.Serif : 0) | (metrics.monospace ? _fonts.FontFlags.FixedPitch : 0) | ((0, _standard_fonts.getSymbolsFonts)()[fontNameWoStyle] ? _fonts.FontFlags.Symbolic : _fonts.FontFlags.Nonsymbolic);\n          properties = {\n            type: type,\n            name: baseFontName,\n            widths: metrics.widths,\n            defaultWidth: metrics.defaultWidth,\n            flags: flags,\n            firstChar: 0,\n            lastChar: maxCharIndex\n          };\n          return this.extractDataStructures(dict, dict, properties).then(function (properties) {\n            properties.widths = _this11.buildCharCodeToWidth(metrics.widths, properties);\n            return new _fonts.Font(baseFontName, null, properties);\n          });\n        }\n      }\n      var firstChar = dict.get('FirstChar') || 0;\n      var lastChar = dict.get('LastChar') || maxCharIndex;\n      var fontName = descriptor.get('FontName');\n      var baseFont = dict.get('BaseFont');\n      if ((0, _util.isString)(fontName)) {\n        fontName = _primitives.Name.get(fontName);\n      }\n      if ((0, _util.isString)(baseFont)) {\n        baseFont = _primitives.Name.get(baseFont);\n      }\n      if (type !== 'Type3') {\n        var fontNameStr = fontName && fontName.name;\n        var baseFontStr = baseFont && baseFont.name;\n        if (fontNameStr !== baseFontStr) {\n          (0, _util.info)('The FontDescriptor\\'s FontName is \"' + fontNameStr + '\" but should be the same as the Font\\'s BaseFont \"' + baseFontStr + '\"');\n          if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\n            fontName = baseFont;\n          }\n        }\n      }\n      fontName = fontName || baseFont;\n      if (!(0, _primitives.isName)(fontName)) {\n        throw new _util.FormatError('invalid font name');\n      }\n      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n      if (fontFile) {\n        if (fontFile.dict) {\n          var subtype = fontFile.dict.get('Subtype');\n          if (subtype) {\n            subtype = subtype.name;\n          }\n          var length1 = fontFile.dict.get('Length1');\n          var length2 = fontFile.dict.get('Length2');\n          var length3 = fontFile.dict.get('Length3');\n        }\n      }\n      properties = {\n        type: type,\n        name: fontName.name,\n        subtype: subtype,\n        file: fontFile,\n        length1: length1,\n        length2: length2,\n        length3: length3,\n        loadedName: baseDict.loadedName,\n        composite: composite,\n        wideChars: composite,\n        fixedPitch: false,\n        fontMatrix: dict.getArray('FontMatrix') || _util.FONT_IDENTITY_MATRIX,\n        firstChar: firstChar || 0,\n        lastChar: lastChar || maxCharIndex,\n        bbox: descriptor.getArray('FontBBox'),\n        ascent: descriptor.get('Ascent'),\n        descent: descriptor.get('Descent'),\n        xHeight: descriptor.get('XHeight'),\n        capHeight: descriptor.get('CapHeight'),\n        flags: descriptor.get('Flags'),\n        italicAngle: descriptor.get('ItalicAngle'),\n        isType3Font: false\n      };\n      var cMapPromise;\n      if (composite) {\n        var cidEncoding = baseDict.get('Encoding');\n        if ((0, _primitives.isName)(cidEncoding)) {\n          properties.cidEncoding = cidEncoding.name;\n        }\n        cMapPromise = _cmap.CMapFactory.create({\n          encoding: cidEncoding,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cMap) {\n          properties.cMap = cMap;\n          properties.vertical = properties.cMap.vertical;\n        });\n      } else {\n        cMapPromise = Promise.resolve(undefined);\n      }\n      return cMapPromise.then(function () {\n        return _this11.extractDataStructures(dict, baseDict, properties);\n      }).then(function (properties) {\n        _this11.extractWidths(dict, descriptor, properties);\n        if (type === 'Type3') {\n          properties.isType3Font = true;\n        }\n        return new _fonts.Font(fontName.name, fontFile, properties);\n      });\n    }\n  };\n  return PartialEvaluator;\n}();\nvar TranslatedFont = function TranslatedFontClosure() {\n  function TranslatedFont(loadedName, font, dict) {\n    this.loadedName = loadedName;\n    this.font = font;\n    this.dict = dict;\n    this.type3Loaded = null;\n    this.sent = false;\n  }\n  TranslatedFont.prototype = {\n    send: function send(handler) {\n      if (this.sent) {\n        return;\n      }\n      var fontData = this.font.exportData();\n      handler.send('commonobj', [this.loadedName, 'Font', fontData]);\n      this.sent = true;\n    },\n    loadType3Data: function loadType3Data(evaluator, resources, parentOperatorList, task) {\n      if (!this.font.isType3Font) {\n        throw new Error('Must be a Type3 font.');\n      }\n      if (this.type3Loaded) {\n        return this.type3Loaded;\n      }\n      var type3Options = Object.create(evaluator.options);\n      type3Options.ignoreErrors = false;\n      var type3Evaluator = evaluator.clone(type3Options);\n      var translatedFont = this.font;\n      var loadCharProcsPromise = Promise.resolve();\n      var charProcs = this.dict.get('CharProcs');\n      var fontResources = this.dict.get('Resources') || resources;\n      var charProcKeys = charProcs.getKeys();\n      var charProcOperatorList = Object.create(null);\n\n      var _loop2 = function _loop2() {\n        var key = charProcKeys[i];\n        loadCharProcsPromise = loadCharProcsPromise.then(function () {\n          var glyphStream = charProcs.get(key);\n          var operatorList = new OperatorList();\n          return type3Evaluator.getOperatorList({\n            stream: glyphStream,\n            task: task,\n            resources: fontResources,\n            operatorList: operatorList\n          }).then(function () {\n            charProcOperatorList[key] = operatorList.getIR();\n            parentOperatorList.addDependencies(operatorList.dependencies);\n          }).catch(function (reason) {\n            (0, _util.warn)('Type3 font resource \"' + key + '\" is not available.');\n            var operatorList = new OperatorList();\n            charProcOperatorList[key] = operatorList.getIR();\n          });\n        });\n      };\n\n      for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n        _loop2();\n      }\n      this.type3Loaded = loadCharProcsPromise.then(function () {\n        translatedFont.charProcOperatorList = charProcOperatorList;\n      });\n      return this.type3Loaded;\n    }\n  };\n  return TranslatedFont;\n}();\nvar OperatorList = function OperatorListClosure() {\n  var CHUNK_SIZE = 1000;\n  var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n  function getTransfers(queue) {\n    var transfers = [];\n    var fnArray = queue.fnArray,\n        argsArray = queue.argsArray;\n    for (var i = 0, ii = queue.length; i < ii; i++) {\n      switch (fnArray[i]) {\n        case _util.OPS.paintInlineImageXObject:\n        case _util.OPS.paintInlineImageXObjectGroup:\n        case _util.OPS.paintImageMaskXObject:\n          var arg = argsArray[i][0];\n          if (!arg.cached) {\n            transfers.push(arg.data.buffer);\n          }\n          break;\n      }\n    }\n    return transfers;\n  }\n  function OperatorList(intent, messageHandler, pageIndex) {\n    this.messageHandler = messageHandler;\n    this.fnArray = [];\n    this.argsArray = [];\n    this.dependencies = Object.create(null);\n    this._totalLength = 0;\n    this.pageIndex = pageIndex;\n    this.intent = intent;\n  }\n  OperatorList.prototype = {\n    get length() {\n      return this.argsArray.length;\n    },\n    get totalLength() {\n      return this._totalLength + this.length;\n    },\n    addOp: function addOp(fn, args) {\n      this.fnArray.push(fn);\n      this.argsArray.push(args);\n      if (this.messageHandler) {\n        if (this.fnArray.length >= CHUNK_SIZE) {\n          this.flush();\n        } else if (this.fnArray.length >= CHUNK_SIZE_ABOUT && (fn === _util.OPS.restore || fn === _util.OPS.endText)) {\n          this.flush();\n        }\n      }\n    },\n    addDependency: function addDependency(dependency) {\n      if (dependency in this.dependencies) {\n        return;\n      }\n      this.dependencies[dependency] = true;\n      this.addOp(_util.OPS.dependency, [dependency]);\n    },\n    addDependencies: function addDependencies(dependencies) {\n      for (var key in dependencies) {\n        this.addDependency(key);\n      }\n    },\n    addOpList: function addOpList(opList) {\n      _util.Util.extendObj(this.dependencies, opList.dependencies);\n      for (var i = 0, ii = opList.length; i < ii; i++) {\n        this.addOp(opList.fnArray[i], opList.argsArray[i]);\n      }\n    },\n    getIR: function getIR() {\n      return {\n        fnArray: this.fnArray,\n        argsArray: this.argsArray,\n        length: this.length\n      };\n    },\n    flush: function flush(lastChunk) {\n      if (this.intent !== 'oplist') {\n        new QueueOptimizer().optimize(this);\n      }\n      var transfers = getTransfers(this);\n      var length = this.length;\n      this._totalLength += length;\n      this.messageHandler.send('RenderPageChunk', {\n        operatorList: {\n          fnArray: this.fnArray,\n          argsArray: this.argsArray,\n          lastChunk: lastChunk,\n          length: length\n        },\n        pageIndex: this.pageIndex,\n        intent: this.intent\n      }, transfers);\n      this.dependencies = Object.create(null);\n      this.fnArray.length = 0;\n      this.argsArray.length = 0;\n    }\n  };\n  return OperatorList;\n}();\nvar StateManager = function StateManagerClosure() {\n  function StateManager(initialState) {\n    this.state = initialState;\n    this.stateStack = [];\n  }\n  StateManager.prototype = {\n    save: function save() {\n      var old = this.state;\n      this.stateStack.push(this.state);\n      this.state = old.clone();\n    },\n    restore: function restore() {\n      var prev = this.stateStack.pop();\n      if (prev) {\n        this.state = prev;\n      }\n    },\n    transform: function transform(args) {\n      this.state.ctm = _util.Util.transform(this.state.ctm, args);\n    }\n  };\n  return StateManager;\n}();\nvar TextState = function TextStateClosure() {\n  function TextState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.fontName = null;\n    this.fontSize = 0;\n    this.font = null;\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n    this.textMatrix = _util.IDENTITY_MATRIX.slice();\n    this.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.leading = 0;\n    this.textHScale = 1;\n    this.textRise = 0;\n  }\n  TextState.prototype = {\n    setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textLineMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textLineMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n      var font = this.font;\n      if (!font) {\n        return null;\n      }\n      var m = this.textLineMatrix;\n      if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n        return null;\n      }\n      var txDiff = e - m[4],\n          tyDiff = f - m[5];\n      if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n        return null;\n      }\n      var tx,\n          ty,\n          denominator = a * d - b * c;\n      if (font.vertical) {\n        tx = -tyDiff * c / denominator;\n        ty = tyDiff * a / denominator;\n      } else {\n        tx = txDiff * d / denominator;\n        ty = -txDiff * b / denominator;\n      }\n      return {\n        width: tx,\n        height: ty,\n        value: font.vertical ? ty : tx\n      };\n    },\n    calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n      var tsm = [this.fontSize * this.textHScale, 0, 0, this.fontSize, 0, this.textRise];\n      return _util.Util.transform(ctm, _util.Util.transform(this.textMatrix, tsm));\n    },\n    carriageReturn: function TextState_carriageReturn() {\n      this.translateTextLineMatrix(0, -this.leading);\n      this.textMatrix = this.textLineMatrix.slice();\n    },\n    clone: function TextState_clone() {\n      var clone = Object.create(this);\n      clone.textMatrix = this.textMatrix.slice();\n      clone.textLineMatrix = this.textLineMatrix.slice();\n      clone.fontMatrix = this.fontMatrix.slice();\n      return clone;\n    }\n  };\n  return TextState;\n}();\nvar EvalState = function EvalStateClosure() {\n  function EvalState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.font = null;\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\n    this.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n    this.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n  }\n  EvalState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    }\n  };\n  return EvalState;\n}();\nvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\n  var getOPMap = (0, _util.getLookupTableFactory)(function (t) {\n    t['w'] = {\n      id: _util.OPS.setLineWidth,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['J'] = {\n      id: _util.OPS.setLineCap,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['j'] = {\n      id: _util.OPS.setLineJoin,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['M'] = {\n      id: _util.OPS.setMiterLimit,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['d'] = {\n      id: _util.OPS.setDash,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['ri'] = {\n      id: _util.OPS.setRenderingIntent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['i'] = {\n      id: _util.OPS.setFlatness,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['gs'] = {\n      id: _util.OPS.setGState,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['q'] = {\n      id: _util.OPS.save,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Q'] = {\n      id: _util.OPS.restore,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['cm'] = {\n      id: _util.OPS.transform,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['m'] = {\n      id: _util.OPS.moveTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['l'] = {\n      id: _util.OPS.lineTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['c'] = {\n      id: _util.OPS.curveTo,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['v'] = {\n      id: _util.OPS.curveTo2,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['y'] = {\n      id: _util.OPS.curveTo3,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['h'] = {\n      id: _util.OPS.closePath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['re'] = {\n      id: _util.OPS.rectangle,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['S'] = {\n      id: _util.OPS.stroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['s'] = {\n      id: _util.OPS.closeStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['F'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f*'] = {\n      id: _util.OPS.eoFill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B'] = {\n      id: _util.OPS.fillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B*'] = {\n      id: _util.OPS.eoFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b'] = {\n      id: _util.OPS.closeFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b*'] = {\n      id: _util.OPS.closeEOFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['n'] = {\n      id: _util.OPS.endPath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W'] = {\n      id: _util.OPS.clip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W*'] = {\n      id: _util.OPS.eoClip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BT'] = {\n      id: _util.OPS.beginText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ET'] = {\n      id: _util.OPS.endText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tc'] = {\n      id: _util.OPS.setCharSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tw'] = {\n      id: _util.OPS.setWordSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tz'] = {\n      id: _util.OPS.setHScale,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TL'] = {\n      id: _util.OPS.setLeading,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tf'] = {\n      id: _util.OPS.setFont,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tr'] = {\n      id: _util.OPS.setTextRenderingMode,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Ts'] = {\n      id: _util.OPS.setTextRise,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Td'] = {\n      id: _util.OPS.moveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['TD'] = {\n      id: _util.OPS.setLeadingMoveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tm'] = {\n      id: _util.OPS.setTextMatrix,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['T*'] = {\n      id: _util.OPS.nextLine,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tj'] = {\n      id: _util.OPS.showText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TJ'] = {\n      id: _util.OPS.showSpacedText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\\''] = {\n      id: _util.OPS.nextLineShowText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\"'] = {\n      id: _util.OPS.nextLineSetSpacingShowText,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['d0'] = {\n      id: _util.OPS.setCharWidth,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['d1'] = {\n      id: _util.OPS.setCharWidthAndBounds,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['CS'] = {\n      id: _util.OPS.setStrokeColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['cs'] = {\n      id: _util.OPS.setFillColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['SC'] = {\n      id: _util.OPS.setStrokeColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['SCN'] = {\n      id: _util.OPS.setStrokeColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['sc'] = {\n      id: _util.OPS.setFillColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['scn'] = {\n      id: _util.OPS.setFillColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['G'] = {\n      id: _util.OPS.setStrokeGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['g'] = {\n      id: _util.OPS.setFillGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['RG'] = {\n      id: _util.OPS.setStrokeRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['rg'] = {\n      id: _util.OPS.setFillRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['K'] = {\n      id: _util.OPS.setStrokeCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['k'] = {\n      id: _util.OPS.setFillCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['sh'] = {\n      id: _util.OPS.shadingFill,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BI'] = {\n      id: _util.OPS.beginInlineImage,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ID'] = {\n      id: _util.OPS.beginImageData,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EI'] = {\n      id: _util.OPS.endInlineImage,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Do'] = {\n      id: _util.OPS.paintXObject,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['MP'] = {\n      id: _util.OPS.markPoint,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['DP'] = {\n      id: _util.OPS.markPointProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['BMC'] = {\n      id: _util.OPS.beginMarkedContent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BDC'] = {\n      id: _util.OPS.beginMarkedContentProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['EMC'] = {\n      id: _util.OPS.endMarkedContent,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BX'] = {\n      id: _util.OPS.beginCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EX'] = {\n      id: _util.OPS.endCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BM'] = null;\n    t['BD'] = null;\n    t['true'] = null;\n    t['fa'] = null;\n    t['fal'] = null;\n    t['fals'] = null;\n    t['false'] = null;\n    t['nu'] = null;\n    t['nul'] = null;\n    t['null'] = null;\n  });\n  function EvaluatorPreprocessor(stream, xref, stateManager) {\n    this.opMap = getOPMap();\n    this.parser = new _parser.Parser(new _parser.Lexer(stream, this.opMap), false, xref);\n    this.stateManager = stateManager;\n    this.nonProcessedArgs = [];\n  }\n  EvaluatorPreprocessor.prototype = {\n    get savedStatesDepth() {\n      return this.stateManager.stateStack.length;\n    },\n    read: function EvaluatorPreprocessor_read(operation) {\n      var args = operation.args;\n      while (true) {\n        var obj = this.parser.getObj();\n        if ((0, _primitives.isCmd)(obj)) {\n          var cmd = obj.cmd;\n          var opSpec = this.opMap[cmd];\n          if (!opSpec) {\n            (0, _util.warn)('Unknown command \"' + cmd + '\"');\n            continue;\n          }\n          var fn = opSpec.id;\n          var numArgs = opSpec.numArgs;\n          var argsLength = args !== null ? args.length : 0;\n          if (!opSpec.variableArgs) {\n            if (argsLength !== numArgs) {\n              var nonProcessedArgs = this.nonProcessedArgs;\n              while (argsLength > numArgs) {\n                nonProcessedArgs.push(args.shift());\n                argsLength--;\n              }\n              while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n                if (args === null) {\n                  args = [];\n                }\n                args.unshift(nonProcessedArgs.pop());\n                argsLength++;\n              }\n            }\n            if (argsLength < numArgs) {\n              (0, _util.warn)('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\n              if (args !== null) {\n                args.length = 0;\n              }\n              continue;\n            }\n          } else if (argsLength > numArgs) {\n            (0, _util.info)('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\n          }\n          this.preprocessCommand(fn, args);\n          operation.fn = fn;\n          operation.args = args;\n          return true;\n        }\n        if ((0, _primitives.isEOF)(obj)) {\n          return false;\n        }\n        if (obj !== null) {\n          if (args === null) {\n            args = [];\n          }\n          args.push(obj);\n          if (args.length > 33) {\n            throw new _util.FormatError('Too many arguments');\n          }\n        }\n      }\n    },\n    preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n      switch (fn | 0) {\n        case _util.OPS.save:\n          this.stateManager.save();\n          break;\n        case _util.OPS.restore:\n          this.stateManager.restore();\n          break;\n        case _util.OPS.transform:\n          this.stateManager.transform(args);\n          break;\n      }\n    }\n  };\n  return EvaluatorPreprocessor;\n}();\nvar QueueOptimizer = function QueueOptimizerClosure() {\n  function addState(parentState, pattern, fn) {\n    var state = parentState;\n    for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n      var item = pattern[i];\n      state = state[item] || (state[item] = []);\n    }\n    state[pattern[pattern.length - 1]] = fn;\n  }\n  function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n    var iFirstPIMXO = iFirstSave + 2;\n    for (var i = 0; i < count; i++) {\n      var arg = argsArray[iFirstPIMXO + 4 * i];\n      var imageMask = arg.length === 1 && arg[0];\n      if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n        fnArray[iFirstPIMXO + 4 * i] = _util.OPS.paintSolidColorImageMask;\n        continue;\n      }\n      break;\n    }\n    return count - i;\n  }\n  var InitialState = [];\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintInlineImageXObject, _util.OPS.restore], function foundInlineImageGroup(context) {\n    var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n    var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n    var MAX_WIDTH = 1000;\n    var IMAGE_PADDING = 1;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIIXO = curr - 1;\n    var i = iFirstSave + 4;\n    var ii = fnArray.length;\n    while (i + 3 < ii) {\n      if (fnArray[i] !== _util.OPS.save || fnArray[i + 1] !== _util.OPS.transform || fnArray[i + 2] !== _util.OPS.paintInlineImageXObject || fnArray[i + 3] !== _util.OPS.restore) {\n        break;\n      }\n      i += 4;\n    }\n    var count = Math.min((i - iFirstSave) / 4, MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n    if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n      return i;\n    }\n    var maxX = 0;\n    var map = [],\n        maxLineHeight = 0;\n    var currentX = IMAGE_PADDING,\n        currentY = IMAGE_PADDING;\n    var q;\n    for (q = 0; q < count; q++) {\n      var transform = argsArray[iFirstTransform + (q << 2)];\n      var img = argsArray[iFirstPIIXO + (q << 2)][0];\n      if (currentX + img.width > MAX_WIDTH) {\n        maxX = Math.max(maxX, currentX);\n        currentY += maxLineHeight + 2 * IMAGE_PADDING;\n        currentX = 0;\n        maxLineHeight = 0;\n      }\n      map.push({\n        transform: transform,\n        x: currentX,\n        y: currentY,\n        w: img.width,\n        h: img.height\n      });\n      currentX += img.width + 2 * IMAGE_PADDING;\n      maxLineHeight = Math.max(maxLineHeight, img.height);\n    }\n    var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n    var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n    var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n    var imgRowSize = imgWidth << 2;\n    for (q = 0; q < count; q++) {\n      var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n      var rowSize = map[q].w << 2;\n      var dataOffset = 0;\n      var offset = map[q].x + map[q].y * imgWidth << 2;\n      imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n      for (var k = 0, kk = map[q].h; k < kk; k++) {\n        imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n        dataOffset += rowSize;\n        offset += imgRowSize;\n      }\n      imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n      while (offset >= 0) {\n        data[offset - 4] = data[offset];\n        data[offset - 3] = data[offset + 1];\n        data[offset - 2] = data[offset + 2];\n        data[offset - 1] = data[offset + 3];\n        data[offset + rowSize] = data[offset + rowSize - 4];\n        data[offset + rowSize + 1] = data[offset + rowSize - 3];\n        data[offset + rowSize + 2] = data[offset + rowSize - 2];\n        data[offset + rowSize + 3] = data[offset + rowSize - 1];\n        offset -= imgRowSize;\n      }\n    }\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintInlineImageXObjectGroup);\n    argsArray.splice(iFirstSave, count * 4, [{\n      width: imgWidth,\n      height: imgHeight,\n      kind: _util.ImageKind.RGBA_32BPP,\n      data: imgData\n    }, map]);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageMaskXObject, _util.OPS.restore], function foundImageMaskGroup(context) {\n    var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n    var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n    var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIMXO = curr - 1;\n    var i = iFirstSave + 4;\n    var ii = fnArray.length;\n    while (i + 3 < ii) {\n      if (fnArray[i] !== _util.OPS.save || fnArray[i + 1] !== _util.OPS.transform || fnArray[i + 2] !== _util.OPS.paintImageMaskXObject || fnArray[i + 3] !== _util.OPS.restore) {\n        break;\n      }\n      i += 4;\n    }\n    var count = (i - iFirstSave) / 4;\n    count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n    if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n      return i;\n    }\n    var q;\n    var isSameImage = false;\n    var iTransform, transformArgs;\n    var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n    if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\n      isSameImage = true;\n      var firstTransformArg0 = argsArray[iFirstTransform][0];\n      var firstTransformArg3 = argsArray[iFirstTransform][3];\n      iTransform = iFirstTransform + 4;\n      var iPIMXO = iFirstPIMXO + 4;\n      for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n        transformArgs = argsArray[iTransform];\n        if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\n          if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n            isSameImage = false;\n          } else {\n            count = q;\n          }\n          break;\n        }\n      }\n    }\n    if (isSameImage) {\n      count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n      var positions = new Float32Array(count * 2);\n      iTransform = iFirstTransform;\n      for (q = 0; q < count; q++, iTransform += 4) {\n        transformArgs = argsArray[iTransform];\n        positions[q << 1] = transformArgs[4];\n        positions[(q << 1) + 1] = transformArgs[5];\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectRepeat);\n      argsArray.splice(iFirstSave, count * 4, [firstPIMXOArg0, firstTransformArg0, firstTransformArg3, positions]);\n    } else {\n      count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n      var images = [];\n      for (q = 0; q < count; q++) {\n        transformArgs = argsArray[iFirstTransform + (q << 2)];\n        var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n        images.push({\n          data: maskParams.data,\n          width: maskParams.width,\n          height: maskParams.height,\n          transform: transformArgs\n        });\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectGroup);\n      argsArray.splice(iFirstSave, count * 4, [images]);\n    }\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageXObject, _util.OPS.restore], function (context) {\n    var MIN_IMAGES_IN_BLOCK = 3;\n    var MAX_IMAGES_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIXO = curr - 1;\n    var iFirstRestore = curr;\n    if (argsArray[iFirstTransform][1] !== 0 || argsArray[iFirstTransform][2] !== 0) {\n      return iFirstRestore + 1;\n    }\n    var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n    var firstTransformArg0 = argsArray[iFirstTransform][0];\n    var firstTransformArg3 = argsArray[iFirstTransform][3];\n    var i = iFirstSave + 4;\n    var ii = fnArray.length;\n    while (i + 3 < ii) {\n      if (fnArray[i] !== _util.OPS.save || fnArray[i + 1] !== _util.OPS.transform || fnArray[i + 2] !== _util.OPS.paintImageXObject || fnArray[i + 3] !== _util.OPS.restore) {\n        break;\n      }\n      if (argsArray[i + 1][0] !== firstTransformArg0 || argsArray[i + 1][1] !== 0 || argsArray[i + 1][2] !== 0 || argsArray[i + 1][3] !== firstTransformArg3) {\n        break;\n      }\n      if (argsArray[i + 2][0] !== firstPIXOArg0) {\n        break;\n      }\n      i += 4;\n    }\n    var count = Math.min((i - iFirstSave) / 4, MAX_IMAGES_IN_BLOCK);\n    if (count < MIN_IMAGES_IN_BLOCK) {\n      return i;\n    }\n    var positions = new Float32Array(count * 2);\n    var iTransform = iFirstTransform;\n    for (var q = 0; q < count; q++, iTransform += 4) {\n      var transformArgs = argsArray[iTransform];\n      positions[q << 1] = transformArgs[4];\n      positions[(q << 1) + 1] = transformArgs[5];\n    }\n    var args = [firstPIXOArg0, firstTransformArg0, firstTransformArg3, positions];\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageXObjectRepeat);\n    argsArray.splice(iFirstSave, count * 4, args);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.beginText, _util.OPS.setFont, _util.OPS.setTextMatrix, _util.OPS.showText, _util.OPS.endText], function (context) {\n    var MIN_CHARS_IN_BLOCK = 3;\n    var MAX_CHARS_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstBeginText = curr - 4;\n    var iFirstSetFont = curr - 3;\n    var iFirstSetTextMatrix = curr - 2;\n    var iFirstShowText = curr - 1;\n    var iFirstEndText = curr;\n    var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n    var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n    var i = iFirstBeginText + 5;\n    var ii = fnArray.length;\n    while (i + 4 < ii) {\n      if (fnArray[i] !== _util.OPS.beginText || fnArray[i + 1] !== _util.OPS.setFont || fnArray[i + 2] !== _util.OPS.setTextMatrix || fnArray[i + 3] !== _util.OPS.showText || fnArray[i + 4] !== _util.OPS.endText) {\n        break;\n      }\n      if (argsArray[i + 1][0] !== firstSetFontArg0 || argsArray[i + 1][1] !== firstSetFontArg1) {\n        break;\n      }\n      i += 5;\n    }\n    var count = Math.min((i - iFirstBeginText) / 5, MAX_CHARS_IN_BLOCK);\n    if (count < MIN_CHARS_IN_BLOCK) {\n      return i;\n    }\n    var iFirst = iFirstBeginText;\n    if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n      count++;\n      iFirst -= 5;\n    }\n    var iEndText = iFirst + 4;\n    for (var q = 1; q < count; q++) {\n      fnArray.splice(iEndText, 3);\n      argsArray.splice(iEndText, 3);\n      iEndText += 2;\n    }\n    return iEndText + 1;\n  });\n  function QueueOptimizer() {}\n  QueueOptimizer.prototype = {\n    optimize: function QueueOptimizer_optimize(queue) {\n      var fnArray = queue.fnArray,\n          argsArray = queue.argsArray;\n      var context = {\n        iCurr: 0,\n        fnArray: fnArray,\n        argsArray: argsArray\n      };\n      var state;\n      var i = 0,\n          ii = fnArray.length;\n      while (i < ii) {\n        state = (state || InitialState)[fnArray[i]];\n        if (typeof state === 'function') {\n          context.iCurr = i;\n          i = state(context);\n          state = undefined;\n          ii = context.fnArray.length;\n        } else {\n          i++;\n        }\n      }\n    }\n  };\n  return QueueOptimizer;\n}();\nexports.OperatorList = OperatorList;\nexports.PartialEvaluator = PartialEvaluator;\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CFFCompiler = exports.CFFPrivateDict = exports.CFFTopDict = exports.CFFCharset = exports.CFFIndex = exports.CFFStrings = exports.CFFHeader = exports.CFF = exports.CFFParser = exports.CFFStandardStrings = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _charsets = __w_pdfjs_require__(135);\n\nvar _encodings = __w_pdfjs_require__(27);\n\nvar MAX_SUBR_NESTING = 10;\nvar CFFStandardStrings = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000', '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\nvar CFFParser = function CFFParserClosure() {\n  var CharstringValidationData = [null, {\n    id: 'hstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, null, {\n    id: 'vstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'vmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'rlineto',\n    min: 2,\n    resetStack: true\n  }, {\n    id: 'hlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'vlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'rrcurveto',\n    min: 6,\n    resetStack: true\n  }, null, {\n    id: 'callsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'return',\n    min: 0,\n    undefStack: true\n  }, null, null, {\n    id: 'endchar',\n    min: 0,\n    stackClearing: true\n  }, null, null, null, {\n    id: 'hstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'hintmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'cntrmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'rmoveto',\n    min: 2,\n    stackClearing: true\n  }, {\n    id: 'hmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'vstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'rcurveline',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'rlinecurve',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'vvcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hhcurveto',\n    min: 4,\n    resetStack: true\n  }, null, {\n    id: 'callgsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'vhcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hvcurveto',\n    min: 4,\n    resetStack: true\n  }];\n  var CharstringValidationData12 = [null, null, null, {\n    id: 'and',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'or',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'not',\n    min: 1,\n    stackDelta: 0\n  }, null, null, null, {\n    id: 'abs',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'add',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] + stack[index - 1];\n    }\n  }, {\n    id: 'sub',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] - stack[index - 1];\n    }\n  }, {\n    id: 'div',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] / stack[index - 1];\n    }\n  }, null, {\n    id: 'neg',\n    min: 1,\n    stackDelta: 0,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 1] = -stack[index - 1];\n    }\n  }, {\n    id: 'eq',\n    min: 2,\n    stackDelta: -1\n  }, null, null, {\n    id: 'drop',\n    min: 1,\n    stackDelta: -1\n  }, null, {\n    id: 'put',\n    min: 2,\n    stackDelta: -2\n  }, {\n    id: 'get',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'ifelse',\n    min: 4,\n    stackDelta: -3\n  }, {\n    id: 'random',\n    min: 0,\n    stackDelta: 1\n  }, {\n    id: 'mul',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] * stack[index - 1];\n    }\n  }, null, {\n    id: 'sqrt',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'dup',\n    min: 1,\n    stackDelta: 1\n  }, {\n    id: 'exch',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'index',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'roll',\n    min: 3,\n    stackDelta: -2\n  }, null, null, null, {\n    id: 'hflex',\n    min: 7,\n    resetStack: true\n  }, {\n    id: 'flex',\n    min: 13,\n    resetStack: true\n  }, {\n    id: 'hflex1',\n    min: 9,\n    resetStack: true\n  }, {\n    id: 'flex1',\n    min: 11,\n    resetStack: true\n  }];\n  function CFFParser(file, properties, seacAnalysisEnabled) {\n    this.bytes = file.getBytes();\n    this.properties = properties;\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n  }\n  CFFParser.prototype = {\n    parse: function CFFParser_parse() {\n      var properties = this.properties;\n      var cff = new CFF();\n      this.cff = cff;\n      var header = this.parseHeader();\n      var nameIndex = this.parseIndex(header.endPos);\n      var topDictIndex = this.parseIndex(nameIndex.endPos);\n      var stringIndex = this.parseIndex(topDictIndex.endPos);\n      var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n      cff.header = header.obj;\n      cff.names = this.parseNameIndex(nameIndex.obj);\n      cff.strings = this.parseStringIndex(stringIndex.obj);\n      cff.topDict = topDict;\n      cff.globalSubrIndex = globalSubrIndex.obj;\n      this.parsePrivateDict(cff.topDict);\n      cff.isCIDFont = topDict.hasName('ROS');\n      var charStringOffset = topDict.getByName('CharStrings');\n      var charStringIndex = this.parseIndex(charStringOffset).obj;\n      var fontMatrix = topDict.getByName('FontMatrix');\n      if (fontMatrix) {\n        properties.fontMatrix = fontMatrix;\n      }\n      var fontBBox = topDict.getByName('FontBBox');\n      if (fontBBox) {\n        properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n        properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n        properties.ascentScaled = true;\n      }\n      var charset, encoding;\n      if (cff.isCIDFont) {\n        var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n        for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n          var dictRaw = fdArrayIndex.get(i);\n          var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n          this.parsePrivateDict(fontDict);\n          cff.fdArray.push(fontDict);\n        }\n        encoding = null;\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\n        cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\n      } else {\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\n        encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\n      }\n      cff.charset = charset;\n      cff.encoding = encoding;\n      var charStringsAndSeacs = this.parseCharStrings({\n        charStrings: charStringIndex,\n        localSubrIndex: topDict.privateDict.subrsIndex,\n        globalSubrIndex: globalSubrIndex.obj,\n        fdSelect: cff.fdSelect,\n        fdArray: cff.fdArray,\n        privateDict: topDict.privateDict\n      });\n      cff.charStrings = charStringsAndSeacs.charStrings;\n      cff.seacs = charStringsAndSeacs.seacs;\n      cff.widths = charStringsAndSeacs.widths;\n      return cff;\n    },\n    parseHeader: function CFFParser_parseHeader() {\n      var bytes = this.bytes;\n      var bytesLength = bytes.length;\n      var offset = 0;\n      while (offset < bytesLength && bytes[offset] !== 1) {\n        ++offset;\n      }\n      if (offset >= bytesLength) {\n        throw new _util.FormatError('Invalid CFF header');\n      }\n      if (offset !== 0) {\n        (0, _util.info)('cff data is shifted');\n        bytes = bytes.subarray(offset);\n        this.bytes = bytes;\n      }\n      var major = bytes[0];\n      var minor = bytes[1];\n      var hdrSize = bytes[2];\n      var offSize = bytes[3];\n      var header = new CFFHeader(major, minor, hdrSize, offSize);\n      return {\n        obj: header,\n        endPos: hdrSize\n      };\n    },\n    parseDict: function CFFParser_parseDict(dict) {\n      var pos = 0;\n      function parseOperand() {\n        var value = dict[pos++];\n        if (value === 30) {\n          return parseFloatOperand();\n        } else if (value === 28) {\n          value = dict[pos++];\n          value = (value << 24 | dict[pos++] << 16) >> 16;\n          return value;\n        } else if (value === 29) {\n          value = dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          return value;\n        } else if (value >= 32 && value <= 246) {\n          return value - 139;\n        } else if (value >= 247 && value <= 250) {\n          return (value - 247) * 256 + dict[pos++] + 108;\n        } else if (value >= 251 && value <= 254) {\n          return -((value - 251) * 256) - dict[pos++] - 108;\n        }\n        (0, _util.warn)('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n        return NaN;\n      }\n      function parseFloatOperand() {\n        var str = '';\n        var eof = 15;\n        var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n        var length = dict.length;\n        while (pos < length) {\n          var b = dict[pos++];\n          var b1 = b >> 4;\n          var b2 = b & 15;\n          if (b1 === eof) {\n            break;\n          }\n          str += lookup[b1];\n          if (b2 === eof) {\n            break;\n          }\n          str += lookup[b2];\n        }\n        return parseFloat(str);\n      }\n      var operands = [];\n      var entries = [];\n      pos = 0;\n      var end = dict.length;\n      while (pos < end) {\n        var b = dict[pos];\n        if (b <= 21) {\n          if (b === 12) {\n            b = b << 8 | dict[++pos];\n          }\n          entries.push([b, operands]);\n          operands = [];\n          ++pos;\n        } else {\n          operands.push(parseOperand());\n        }\n      }\n      return entries;\n    },\n    parseIndex: function CFFParser_parseIndex(pos) {\n      var cffIndex = new CFFIndex();\n      var bytes = this.bytes;\n      var count = bytes[pos++] << 8 | bytes[pos++];\n      var offsets = [];\n      var end = pos;\n      var i, ii;\n      if (count !== 0) {\n        var offsetSize = bytes[pos++];\n        var startPos = pos + (count + 1) * offsetSize - 1;\n        for (i = 0, ii = count + 1; i < ii; ++i) {\n          var offset = 0;\n          for (var j = 0; j < offsetSize; ++j) {\n            offset <<= 8;\n            offset += bytes[pos++];\n          }\n          offsets.push(startPos + offset);\n        }\n        end = offsets[count];\n      }\n      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n        var offsetStart = offsets[i];\n        var offsetEnd = offsets[i + 1];\n        cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n      }\n      return {\n        obj: cffIndex,\n        endPos: end\n      };\n    },\n    parseNameIndex: function CFFParser_parseNameIndex(index) {\n      var names = [];\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var name = index.get(i);\n        names.push((0, _util.bytesToString)(name));\n      }\n      return names;\n    },\n    parseStringIndex: function CFFParser_parseStringIndex(index) {\n      var strings = new CFFStrings();\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var data = index.get(i);\n        strings.add((0, _util.bytesToString)(data));\n      }\n      return strings;\n    },\n    createDict: function CFFParser_createDict(Type, dict, strings) {\n      var cffDict = new Type(strings);\n      for (var i = 0, ii = dict.length; i < ii; ++i) {\n        var pair = dict[i];\n        var key = pair[0];\n        var value = pair[1];\n        cffDict.setByKey(key, value);\n      }\n      return cffDict;\n    },\n    parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n      if (!data || state.callDepth > MAX_SUBR_NESTING) {\n        return false;\n      }\n      var stackSize = state.stackSize;\n      var stack = state.stack;\n      var length = data.length;\n      for (var j = 0; j < length;) {\n        var value = data[j++];\n        var validationCommand = null;\n        if (value === 12) {\n          var q = data[j++];\n          if (q === 0) {\n            data[j - 2] = 139;\n            data[j - 1] = 22;\n            stackSize = 0;\n          } else {\n            validationCommand = CharstringValidationData12[q];\n          }\n        } else if (value === 28) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n          j += 2;\n          stackSize++;\n        } else if (value === 14) {\n          if (stackSize >= 4) {\n            stackSize -= 4;\n            if (this.seacAnalysisEnabled) {\n              state.seac = stack.slice(stackSize, stackSize + 4);\n              return false;\n            }\n          }\n          validationCommand = CharstringValidationData[value];\n        } else if (value >= 32 && value <= 246) {\n          stack[stackSize] = value - 139;\n          stackSize++;\n        } else if (value >= 247 && value <= 254) {\n          stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n          j++;\n          stackSize++;\n        } else if (value === 255) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n          j += 4;\n          stackSize++;\n        } else if (value === 19 || value === 20) {\n          state.hints += stackSize >> 1;\n          j += state.hints + 7 >> 3;\n          stackSize %= 2;\n          validationCommand = CharstringValidationData[value];\n        } else if (value === 10 || value === 29) {\n          var subrsIndex;\n          if (value === 10) {\n            subrsIndex = localSubrIndex;\n          } else {\n            subrsIndex = globalSubrIndex;\n          }\n          if (!subrsIndex) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Missing subrsIndex for ' + validationCommand.id);\n            return false;\n          }\n          var bias = 32768;\n          if (subrsIndex.count < 1240) {\n            bias = 107;\n          } else if (subrsIndex.count < 33900) {\n            bias = 1131;\n          }\n          var subrNumber = stack[--stackSize] + bias;\n          if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Out of bounds subrIndex for ' + validationCommand.id);\n            return false;\n          }\n          state.stackSize = stackSize;\n          state.callDepth++;\n          var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n          if (!valid) {\n            return false;\n          }\n          state.callDepth--;\n          stackSize = state.stackSize;\n          continue;\n        } else if (value === 11) {\n          state.stackSize = stackSize;\n          return true;\n        } else {\n          validationCommand = CharstringValidationData[value];\n        }\n        if (validationCommand) {\n          if (validationCommand.stem) {\n            state.hints += stackSize >> 1;\n          }\n          if ('min' in validationCommand) {\n            if (!state.undefStack && stackSize < validationCommand.min) {\n              (0, _util.warn)('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\n              return false;\n            }\n          }\n          if (state.firstStackClearing && validationCommand.stackClearing) {\n            state.firstStackClearing = false;\n            stackSize -= validationCommand.min;\n            if (stackSize >= 2 && validationCommand.stem) {\n              stackSize %= 2;\n            } else if (stackSize > 1) {\n              (0, _util.warn)('Found too many parameters for stack-clearing command');\n            }\n            if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n              state.width = stack[stackSize - 1];\n            }\n          }\n          if ('stackDelta' in validationCommand) {\n            if ('stackFn' in validationCommand) {\n              validationCommand.stackFn(stack, stackSize);\n            }\n            stackSize += validationCommand.stackDelta;\n          } else if (validationCommand.stackClearing) {\n            stackSize = 0;\n          } else if (validationCommand.resetStack) {\n            stackSize = 0;\n            state.undefStack = false;\n          } else if (validationCommand.undefStack) {\n            stackSize = 0;\n            state.undefStack = true;\n            state.firstStackClearing = false;\n          }\n        }\n      }\n      state.stackSize = stackSize;\n      return true;\n    },\n    parseCharStrings: function parseCharStrings(_ref) {\n      var charStrings = _ref.charStrings,\n          localSubrIndex = _ref.localSubrIndex,\n          globalSubrIndex = _ref.globalSubrIndex,\n          fdSelect = _ref.fdSelect,\n          fdArray = _ref.fdArray,\n          privateDict = _ref.privateDict;\n\n      var seacs = [];\n      var widths = [];\n      var count = charStrings.count;\n      for (var i = 0; i < count; i++) {\n        var charstring = charStrings.get(i);\n        var state = {\n          callDepth: 0,\n          stackSize: 0,\n          stack: [],\n          undefStack: true,\n          hints: 0,\n          firstStackClearing: true,\n          seac: null,\n          width: null\n        };\n        var valid = true;\n        var localSubrToUse = null;\n        var privateDictToUse = privateDict;\n        if (fdSelect && fdArray.length) {\n          var fdIndex = fdSelect.getFDIndex(i);\n          if (fdIndex === -1) {\n            (0, _util.warn)('Glyph index is not in fd select.');\n            valid = false;\n          }\n          if (fdIndex >= fdArray.length) {\n            (0, _util.warn)('Invalid fd index for glyph index.');\n            valid = false;\n          }\n          if (valid) {\n            privateDictToUse = fdArray[fdIndex].privateDict;\n            localSubrToUse = privateDictToUse.subrsIndex;\n          }\n        } else if (localSubrIndex) {\n          localSubrToUse = localSubrIndex;\n        }\n        if (valid) {\n          valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n        }\n        if (state.width !== null) {\n          var nominalWidth = privateDictToUse.getByName('nominalWidthX');\n          widths[i] = nominalWidth + state.width;\n        } else {\n          var defaultWidth = privateDictToUse.getByName('defaultWidthX');\n          widths[i] = defaultWidth;\n        }\n        if (state.seac !== null) {\n          seacs[i] = state.seac;\n        }\n        if (!valid) {\n          charStrings.set(i, new Uint8Array([14]));\n        }\n      }\n      return {\n        charStrings: charStrings,\n        seacs: seacs,\n        widths: widths\n      };\n    },\n\n    emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\n      var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n      parentDict.setByKey(18, [0, 0]);\n      parentDict.privateDict = privateDict;\n    },\n    parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n      if (!parentDict.hasName('Private')) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateOffset = parentDict.getByName('Private');\n      if (!Array.isArray(privateOffset) || privateOffset.length !== 2) {\n        parentDict.removeByName('Private');\n        return;\n      }\n      var size = privateOffset[0];\n      var offset = privateOffset[1];\n      if (size === 0 || offset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateDictEnd = offset + size;\n      var dictData = this.bytes.subarray(offset, privateDictEnd);\n      var dict = this.parseDict(dictData);\n      var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n      parentDict.privateDict = privateDict;\n      if (!privateDict.getByName('Subrs')) {\n        return;\n      }\n      var subrsOffset = privateDict.getByName('Subrs');\n      var relativeOffset = offset + subrsOffset;\n      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var subrsIndex = this.parseIndex(relativeOffset);\n      privateDict.subrsIndex = subrsIndex.obj;\n    },\n    parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n      if (pos === 0) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, _charsets.ISOAdobeCharset);\n      } else if (pos === 1) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, _charsets.ExpertCharset);\n      } else if (pos === 2) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, _charsets.ExpertSubsetCharset);\n      }\n      var bytes = this.bytes;\n      var start = pos;\n      var format = bytes[pos++];\n      var charset = ['.notdef'];\n      var id, count, i;\n      length -= 1;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; i++) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            charset.push(cid ? id : strings.get(id));\n          }\n          break;\n        case 1:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        case 2:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++] << 8 | bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        default:\n          throw new _util.FormatError('Unknown charset format');\n      }\n      var end = pos;\n      var raw = bytes.subarray(start, end);\n      return new CFFCharset(false, format, charset, raw);\n    },\n    parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\n      var encoding = Object.create(null);\n      var bytes = this.bytes;\n      var predefined = false;\n      var format, i, ii;\n      var raw = null;\n      function readSupplement() {\n        var supplementsCount = bytes[pos++];\n        for (i = 0; i < supplementsCount; i++) {\n          var code = bytes[pos++];\n          var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n          encoding[code] = charset.indexOf(strings.get(sid));\n        }\n      }\n      if (pos === 0 || pos === 1) {\n        predefined = true;\n        format = pos;\n        var baseEncoding = pos ? _encodings.ExpertEncoding : _encodings.StandardEncoding;\n        for (i = 0, ii = charset.length; i < ii; i++) {\n          var index = baseEncoding.indexOf(charset[i]);\n          if (index !== -1) {\n            encoding[index] = i;\n          }\n        }\n      } else {\n        var dataStart = pos;\n        format = bytes[pos++];\n        switch (format & 0x7f) {\n          case 0:\n            var glyphsCount = bytes[pos++];\n            for (i = 1; i <= glyphsCount; i++) {\n              encoding[bytes[pos++]] = i;\n            }\n            break;\n          case 1:\n            var rangesCount = bytes[pos++];\n            var gid = 1;\n            for (i = 0; i < rangesCount; i++) {\n              var start = bytes[pos++];\n              var left = bytes[pos++];\n              for (var j = start; j <= start + left; j++) {\n                encoding[j] = gid++;\n              }\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown encoding format: ' + format + ' in CFF');\n        }\n        var dataEnd = pos;\n        if (format & 0x80) {\n          bytes[dataStart] &= 0x7f;\n          readSupplement();\n        }\n        raw = bytes.subarray(dataStart, dataEnd);\n      }\n      format = format & 0x7f;\n      return new CFFEncoding(predefined, format, encoding, raw);\n    },\n    parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n      var start = pos;\n      var bytes = this.bytes;\n      var format = bytes[pos++];\n      var fdSelect = [],\n          rawBytes;\n      var i,\n          invalidFirstGID = false;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; ++i) {\n            var id = bytes[pos++];\n            fdSelect.push(id);\n          }\n          rawBytes = bytes.subarray(start, pos);\n          break;\n        case 3:\n          var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n          for (i = 0; i < rangesCount; ++i) {\n            var first = bytes[pos++] << 8 | bytes[pos++];\n            if (i === 0 && first !== 0) {\n              (0, _util.warn)('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\n              invalidFirstGID = true;\n              first = 0;\n            }\n            var fdIndex = bytes[pos++];\n            var next = bytes[pos] << 8 | bytes[pos + 1];\n            for (var j = first; j < next; ++j) {\n              fdSelect.push(fdIndex);\n            }\n          }\n          pos += 2;\n          rawBytes = bytes.subarray(start, pos);\n          if (invalidFirstGID) {\n            rawBytes[3] = rawBytes[4] = 0;\n          }\n          break;\n        default:\n          throw new _util.FormatError('parseFDSelect: Unknown format \"' + format + '\".');\n      }\n      if (fdSelect.length !== length) {\n        throw new _util.FormatError('parseFDSelect: Invalid font data.');\n      }\n      return new CFFFDSelect(fdSelect, rawBytes);\n    }\n  };\n  return CFFParser;\n}();\nvar CFF = function CFFClosure() {\n  function CFF() {\n    this.header = null;\n    this.names = [];\n    this.topDict = null;\n    this.strings = new CFFStrings();\n    this.globalSubrIndex = null;\n    this.encoding = null;\n    this.charset = null;\n    this.charStrings = null;\n    this.fdArray = [];\n    this.fdSelect = null;\n    this.isCIDFont = false;\n  }\n  return CFF;\n}();\nvar CFFHeader = function CFFHeaderClosure() {\n  function CFFHeader(major, minor, hdrSize, offSize) {\n    this.major = major;\n    this.minor = minor;\n    this.hdrSize = hdrSize;\n    this.offSize = offSize;\n  }\n  return CFFHeader;\n}();\nvar CFFStrings = function CFFStringsClosure() {\n  function CFFStrings() {\n    this.strings = [];\n  }\n  CFFStrings.prototype = {\n    get: function CFFStrings_get(index) {\n      if (index >= 0 && index <= 390) {\n        return CFFStandardStrings[index];\n      }\n      if (index - 391 <= this.strings.length) {\n        return this.strings[index - 391];\n      }\n      return CFFStandardStrings[0];\n    },\n    add: function CFFStrings_add(value) {\n      this.strings.push(value);\n    },\n    get count() {\n      return this.strings.length;\n    }\n  };\n  return CFFStrings;\n}();\nvar CFFIndex = function CFFIndexClosure() {\n  function CFFIndex() {\n    this.objects = [];\n    this.length = 0;\n  }\n  CFFIndex.prototype = {\n    add: function CFFIndex_add(data) {\n      this.length += data.length;\n      this.objects.push(data);\n    },\n    set: function CFFIndex_set(index, data) {\n      this.length += data.length - this.objects[index].length;\n      this.objects[index] = data;\n    },\n    get: function CFFIndex_get(index) {\n      return this.objects[index];\n    },\n    get count() {\n      return this.objects.length;\n    }\n  };\n  return CFFIndex;\n}();\nvar CFFDict = function CFFDictClosure() {\n  function CFFDict(tables, strings) {\n    this.keyToNameMap = tables.keyToNameMap;\n    this.nameToKeyMap = tables.nameToKeyMap;\n    this.defaults = tables.defaults;\n    this.types = tables.types;\n    this.opcodes = tables.opcodes;\n    this.order = tables.order;\n    this.strings = strings;\n    this.values = Object.create(null);\n  }\n  CFFDict.prototype = {\n    setByKey: function CFFDict_setByKey(key, value) {\n      if (!(key in this.keyToNameMap)) {\n        return false;\n      }\n      var valueLength = value.length;\n      if (valueLength === 0) {\n        return true;\n      }\n      for (var i = 0; i < valueLength; i++) {\n        if (isNaN(value[i])) {\n          (0, _util.warn)('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n          return true;\n        }\n      }\n      var type = this.types[key];\n      if (type === 'num' || type === 'sid' || type === 'offset') {\n        value = value[0];\n      }\n      this.values[key] = value;\n      return true;\n    },\n    setByName: function CFFDict_setByName(name, value) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name \"' + name + '\"');\n      }\n      this.values[this.nameToKeyMap[name]] = value;\n    },\n    hasName: function CFFDict_hasName(name) {\n      return this.nameToKeyMap[name] in this.values;\n    },\n    getByName: function CFFDict_getByName(name) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name ' + name + '\"');\n      }\n      var key = this.nameToKeyMap[name];\n      if (!(key in this.values)) {\n        return this.defaults[key];\n      }\n      return this.values[key];\n    },\n    removeByName: function CFFDict_removeByName(name) {\n      delete this.values[this.nameToKeyMap[name]];\n    }\n  };\n  CFFDict.createTables = function CFFDict_createTables(layout) {\n    var tables = {\n      keyToNameMap: {},\n      nameToKeyMap: {},\n      defaults: {},\n      types: {},\n      opcodes: {},\n      order: []\n    };\n    for (var i = 0, ii = layout.length; i < ii; ++i) {\n      var entry = layout[i];\n      var key = Array.isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n      tables.keyToNameMap[key] = entry[1];\n      tables.nameToKeyMap[entry[1]] = key;\n      tables.types[key] = entry[2];\n      tables.defaults[key] = entry[3];\n      tables.opcodes[key] = Array.isArray(entry[0]) ? entry[0] : [entry[0]];\n      tables.order.push(key);\n    }\n    return tables;\n  };\n  return CFFDict;\n}();\nvar CFFTopDict = function CFFTopDictClosure() {\n  var layout = [[[12, 30], 'ROS', ['sid', 'sid', 'num'], null], [[12, 20], 'SyntheticBase', 'num', null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'num', 0], [[12, 2], 'ItalicAngle', 'num', 0], [[12, 3], 'UnderlinePosition', 'num', -100], [[12, 4], 'UnderlineThickness', 'num', 50], [[12, 5], 'PaintType', 'num', 0], [[12, 6], 'CharstringType', 'num', 2], [[12, 7], 'FontMatrix', ['num', 'num', 'num', 'num', 'num', 'num'], [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'num', null], [5, 'FontBBox', ['num', 'num', 'num', 'num'], [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'num', 0], [14, 'XUID', 'array', null], [15, 'charset', 'offset', 0], [16, 'Encoding', 'offset', 0], [17, 'CharStrings', 'offset', 0], [18, 'Private', ['offset', 'offset'], null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], [[12, 31], 'CIDFontVersion', 'num', 0], [[12, 32], 'CIDFontRevision', 'num', 0], [[12, 33], 'CIDFontType', 'num', 0], [[12, 34], 'CIDCount', 'num', 8720], [[12, 35], 'UIDBase', 'num', null], [[12, 37], 'FDSelect', 'offset', null], [[12, 36], 'FDArray', 'offset', null], [[12, 38], 'FontName', 'sid', null]];\n  var tables = null;\n  function CFFTopDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.privateDict = null;\n  }\n  CFFTopDict.prototype = Object.create(CFFDict.prototype);\n  return CFFTopDict;\n}();\nvar CFFPrivateDict = function CFFPrivateDictClosure() {\n  var layout = [[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'num', 0.039625], [[12, 10], 'BlueShift', 'num', 7], [[12, 11], 'BlueFuzz', 'num', 1], [10, 'StdHW', 'num', null], [11, 'StdVW', 'num', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'num', 0], [[12, 17], 'LanguageGroup', 'num', 0], [[12, 18], 'ExpansionFactor', 'num', 0.06], [[12, 19], 'initialRandomSeed', 'num', 0], [20, 'defaultWidthX', 'num', 0], [21, 'nominalWidthX', 'num', 0], [19, 'Subrs', 'offset', null]];\n  var tables = null;\n  function CFFPrivateDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.subrsIndex = null;\n  }\n  CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n  return CFFPrivateDict;\n}();\nvar CFFCharsetPredefinedTypes = {\n  ISO_ADOBE: 0,\n  EXPERT: 1,\n  EXPERT_SUBSET: 2\n};\nvar CFFCharset = function CFFCharsetClosure() {\n  function CFFCharset(predefined, format, charset, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.charset = charset;\n    this.raw = raw;\n  }\n  return CFFCharset;\n}();\nvar CFFEncoding = function CFFEncodingClosure() {\n  function CFFEncoding(predefined, format, encoding, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.encoding = encoding;\n    this.raw = raw;\n  }\n  return CFFEncoding;\n}();\nvar CFFFDSelect = function CFFFDSelectClosure() {\n  function CFFFDSelect(fdSelect, raw) {\n    this.fdSelect = fdSelect;\n    this.raw = raw;\n  }\n  CFFFDSelect.prototype = {\n    getFDIndex: function CFFFDSelect_get(glyphIndex) {\n      if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n        return -1;\n      }\n      return this.fdSelect[glyphIndex];\n    }\n  };\n  return CFFFDSelect;\n}();\nvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\n  function CFFOffsetTracker() {\n    this.offsets = Object.create(null);\n  }\n  CFFOffsetTracker.prototype = {\n    isTracking: function CFFOffsetTracker_isTracking(key) {\n      return key in this.offsets;\n    },\n    track: function CFFOffsetTracker_track(key, location) {\n      if (key in this.offsets) {\n        throw new _util.FormatError('Already tracking location of ' + key);\n      }\n      this.offsets[key] = location;\n    },\n    offset: function CFFOffsetTracker_offset(value) {\n      for (var key in this.offsets) {\n        this.offsets[key] += value;\n      }\n    },\n    setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\n      if (!(key in this.offsets)) {\n        throw new _util.FormatError('Not tracking location of ' + key);\n      }\n      var data = output.data;\n      var dataOffset = this.offsets[key];\n      var size = 5;\n      for (var i = 0, ii = values.length; i < ii; ++i) {\n        var offset0 = i * size + dataOffset;\n        var offset1 = offset0 + 1;\n        var offset2 = offset0 + 2;\n        var offset3 = offset0 + 3;\n        var offset4 = offset0 + 4;\n        if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n          throw new _util.FormatError('writing to an offset that is not empty');\n        }\n        var value = values[i];\n        data[offset0] = 0x1d;\n        data[offset1] = value >> 24 & 0xFF;\n        data[offset2] = value >> 16 & 0xFF;\n        data[offset3] = value >> 8 & 0xFF;\n        data[offset4] = value & 0xFF;\n      }\n    }\n  };\n  return CFFOffsetTracker;\n}();\nvar CFFCompiler = function CFFCompilerClosure() {\n  function CFFCompiler(cff) {\n    this.cff = cff;\n  }\n  CFFCompiler.prototype = {\n    compile: function CFFCompiler_compile() {\n      var cff = this.cff;\n      var output = {\n        data: [],\n        length: 0,\n        add: function CFFCompiler_add(data) {\n          this.data = this.data.concat(data);\n          this.length = this.data.length;\n        }\n      };\n      var header = this.compileHeader(cff.header);\n      output.add(header);\n      var nameIndex = this.compileNameIndex(cff.names);\n      output.add(nameIndex);\n      if (cff.isCIDFont) {\n        if (cff.topDict.hasName('FontMatrix')) {\n          var base = cff.topDict.getByName('FontMatrix');\n          cff.topDict.removeByName('FontMatrix');\n          for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n            var subDict = cff.fdArray[i];\n            var matrix = base.slice(0);\n            if (subDict.hasName('FontMatrix')) {\n              matrix = _util.Util.transform(matrix, subDict.getByName('FontMatrix'));\n            }\n            subDict.setByName('FontMatrix', matrix);\n          }\n        }\n      }\n      var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n      output.add(compiled.output);\n      var topDictTracker = compiled.trackers[0];\n      var stringIndex = this.compileStringIndex(cff.strings.strings);\n      output.add(stringIndex);\n      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n      output.add(globalSubrIndex);\n      if (cff.encoding && cff.topDict.hasName('Encoding')) {\n        if (cff.encoding.predefined) {\n          topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\n        } else {\n          var encoding = this.compileEncoding(cff.encoding);\n          topDictTracker.setEntryLocation('Encoding', [output.length], output);\n          output.add(encoding);\n        }\n      }\n      if (cff.charset && cff.topDict.hasName('charset')) {\n        if (cff.charset.predefined) {\n          topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\n        } else {\n          var charset = this.compileCharset(cff.charset);\n          topDictTracker.setEntryLocation('charset', [output.length], output);\n          output.add(charset);\n        }\n      }\n      var charStrings = this.compileCharStrings(cff.charStrings);\n      topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n      output.add(charStrings);\n      if (cff.isCIDFont) {\n        topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n        var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n        output.add(fdSelect);\n        compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n        topDictTracker.setEntryLocation('FDArray', [output.length], output);\n        output.add(compiled.output);\n        var fontDictTrackers = compiled.trackers;\n        this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n      }\n      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n      output.add([0]);\n      return output.data;\n    },\n    encodeNumber: function CFFCompiler_encodeNumber(value) {\n      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\n        return this.encodeInteger(value);\n      }\n      return this.encodeFloat(value);\n    },\n    encodeFloat: function CFFCompiler_encodeFloat(num) {\n      var value = num.toString();\n      var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n      if (m) {\n        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(num * epsilon) / epsilon).toString();\n      }\n      var nibbles = '';\n      var i, ii;\n      for (i = 0, ii = value.length; i < ii; ++i) {\n        var a = value[i];\n        if (a === 'e') {\n          nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (a === '.') {\n          nibbles += 'a';\n        } else if (a === '-') {\n          nibbles += 'e';\n        } else {\n          nibbles += a;\n        }\n      }\n      nibbles += nibbles.length & 1 ? 'f' : 'ff';\n      var out = [30];\n      for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n      }\n      return out;\n    },\n    encodeInteger: function CFFCompiler_encodeInteger(value) {\n      var code;\n      if (value >= -107 && value <= 107) {\n        code = [value + 139];\n      } else if (value >= 108 && value <= 1131) {\n        value = value - 108;\n        code = [(value >> 8) + 247, value & 0xFF];\n      } else if (value >= -1131 && value <= -108) {\n        value = -value - 108;\n        code = [(value >> 8) + 251, value & 0xFF];\n      } else if (value >= -32768 && value <= 32767) {\n        code = [0x1c, value >> 8 & 0xFF, value & 0xFF];\n      } else {\n        code = [0x1d, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF];\n      }\n      return code;\n    },\n    compileHeader: function CFFCompiler_compileHeader(header) {\n      return [header.major, header.minor, header.hdrSize, header.offSize];\n    },\n    compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n      var nameIndex = new CFFIndex();\n      for (var i = 0, ii = names.length; i < ii; ++i) {\n        var name = names[i];\n        var length = Math.min(name.length, 127);\n        var sanitizedName = new Array(length);\n        for (var j = 0; j < length; j++) {\n          var char = name[j];\n          if (char < '!' || char > '~' || char === '[' || char === ']' || char === '(' || char === ')' || char === '{' || char === '}' || char === '<' || char === '>' || char === '/' || char === '%') {\n            char = '_';\n          }\n          sanitizedName[j] = char;\n        }\n        sanitizedName = sanitizedName.join('');\n        if (sanitizedName === '') {\n          sanitizedName = 'Bad_Font_Name';\n        }\n        nameIndex.add((0, _util.stringToBytes)(sanitizedName));\n      }\n      return this.compileIndex(nameIndex);\n    },\n    compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\n      var fontDictTrackers = [];\n      var fdArrayIndex = new CFFIndex();\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        if (removeCidKeys) {\n          fontDict.removeByName('CIDFontVersion');\n          fontDict.removeByName('CIDFontRevision');\n          fontDict.removeByName('CIDFontType');\n          fontDict.removeByName('CIDCount');\n          fontDict.removeByName('UIDBase');\n        }\n        var fontDictTracker = new CFFOffsetTracker();\n        var fontDictData = this.compileDict(fontDict, fontDictTracker);\n        fontDictTrackers.push(fontDictTracker);\n        fdArrayIndex.add(fontDictData);\n        fontDictTracker.offset(length);\n      }\n      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n      return {\n        trackers: fontDictTrackers,\n        output: fdArrayIndex\n      };\n    },\n    compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        var privateDict = fontDict.privateDict;\n        if (!privateDict || !fontDict.hasName('Private')) {\n          throw new _util.FormatError('There must be a private dictionary.');\n        }\n        var privateDictTracker = new CFFOffsetTracker();\n        var privateDictData = this.compileDict(privateDict, privateDictTracker);\n        var outputLength = output.length;\n        privateDictTracker.offset(outputLength);\n        if (!privateDictData.length) {\n          outputLength = 0;\n        }\n        trackers[i].setEntryLocation('Private', [privateDictData.length, outputLength], output);\n        output.add(privateDictData);\n        if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n          var subrs = this.compileIndex(privateDict.subrsIndex);\n          privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\n          output.add(subrs);\n        }\n      }\n    },\n    compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n      var out = [];\n      var order = dict.order;\n      for (var i = 0; i < order.length; ++i) {\n        var key = order[i];\n        if (!(key in dict.values)) {\n          continue;\n        }\n        var values = dict.values[key];\n        var types = dict.types[key];\n        if (!Array.isArray(types)) {\n          types = [types];\n        }\n        if (!Array.isArray(values)) {\n          values = [values];\n        }\n        if (values.length === 0) {\n          continue;\n        }\n        for (var j = 0, jj = types.length; j < jj; ++j) {\n          var type = types[j];\n          var value = values[j];\n          switch (type) {\n            case 'num':\n            case 'sid':\n              out = out.concat(this.encodeNumber(value));\n              break;\n            case 'offset':\n              var name = dict.keyToNameMap[key];\n              if (!offsetTracker.isTracking(name)) {\n                offsetTracker.track(name, out.length);\n              }\n              out = out.concat([0x1d, 0, 0, 0, 0]);\n              break;\n            case 'array':\n            case 'delta':\n              out = out.concat(this.encodeNumber(value));\n              for (var k = 1, kk = values.length; k < kk; ++k) {\n                out = out.concat(this.encodeNumber(values[k]));\n              }\n              break;\n            default:\n              throw new _util.FormatError('Unknown data type of ' + type);\n          }\n        }\n        out = out.concat(dict.opcodes[key]);\n      }\n      return out;\n    },\n    compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n      var stringIndex = new CFFIndex();\n      for (var i = 0, ii = strings.length; i < ii; ++i) {\n        stringIndex.add((0, _util.stringToBytes)(strings[i]));\n      }\n      return this.compileIndex(stringIndex);\n    },\n    compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n      var globalSubrIndex = this.cff.globalSubrIndex;\n      this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n    },\n    compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n      return this.compileIndex(charStrings);\n    },\n    compileCharset: function CFFCompiler_compileCharset(charset) {\n      return this.compileTypedArray(charset.raw);\n    },\n    compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n      return this.compileTypedArray(encoding.raw);\n    },\n    compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n      return this.compileTypedArray(fdSelect);\n    },\n    compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n      var out = [];\n      for (var i = 0, ii = data.length; i < ii; ++i) {\n        out[i] = data[i];\n      }\n      return out;\n    },\n    compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n      trackers = trackers || [];\n      var objects = index.objects;\n      var count = objects.length;\n      if (count === 0) {\n        return [0, 0, 0];\n      }\n      var data = [count >> 8 & 0xFF, count & 0xff];\n      var lastOffset = 1,\n          i;\n      for (i = 0; i < count; ++i) {\n        lastOffset += objects[i].length;\n      }\n      var offsetSize;\n      if (lastOffset < 0x100) {\n        offsetSize = 1;\n      } else if (lastOffset < 0x10000) {\n        offsetSize = 2;\n      } else if (lastOffset < 0x1000000) {\n        offsetSize = 3;\n      } else {\n        offsetSize = 4;\n      }\n      data.push(offsetSize);\n      var relativeOffset = 1;\n      for (i = 0; i < count + 1; i++) {\n        if (offsetSize === 1) {\n          data.push(relativeOffset & 0xFF);\n        } else if (offsetSize === 2) {\n          data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else if (offsetSize === 3) {\n          data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else {\n          data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        }\n        if (objects[i]) {\n          relativeOffset += objects[i].length;\n        }\n      }\n      for (i = 0; i < count; i++) {\n        if (trackers[i]) {\n          trackers[i].offset(data.length);\n        }\n        for (var j = 0, jj = objects[i].length; j < jj; j++) {\n          data.push(objects[i][j]);\n        }\n      }\n      return data;\n    }\n  };\n  return CFFCompiler;\n}();\nexports.CFFStandardStrings = CFFStandardStrings;\nexports.CFFParser = CFFParser;\nexports.CFF = CFF;\nexports.CFFHeader = CFFHeader;\nexports.CFFStrings = CFFStrings;\nexports.CFFIndex = CFFIndex;\nexports.CFFCharset = CFFCharset;\nexports.CFFTopDict = CFFTopDict;\nexports.CFFPrivateDict = CFFPrivateDict;\nexports.CFFCompiler = CFFCompiler;\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSupplementalGlyphMapForArialBlack = exports.getGlyphMapForStandardFonts = exports.getSymbolsFonts = exports.getSerifFonts = exports.getNonStdFontMap = exports.getStdFontMap = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar getStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['ArialNarrow'] = 'Helvetica';\n  t['ArialNarrow-Bold'] = 'Helvetica-Bold';\n  t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\n  t['ArialBlack'] = 'Helvetica';\n  t['ArialBlack-Bold'] = 'Helvetica-Bold';\n  t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialBlack-Italic'] = 'Helvetica-Oblique';\n  t['Arial-Black'] = 'Helvetica';\n  t['Arial-Black-Bold'] = 'Helvetica-Bold';\n  t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Black-Italic'] = 'Helvetica-Oblique';\n  t['Arial'] = 'Helvetica';\n  t['Arial-Bold'] = 'Helvetica-Bold';\n  t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Italic'] = 'Helvetica-Oblique';\n  t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\n  t['Arial-BoldMT'] = 'Helvetica-Bold';\n  t['Arial-ItalicMT'] = 'Helvetica-Oblique';\n  t['ArialMT'] = 'Helvetica';\n  t['Courier-Bold'] = 'Courier-Bold';\n  t['Courier-BoldItalic'] = 'Courier-BoldOblique';\n  t['Courier-Italic'] = 'Courier-Oblique';\n  t['CourierNew'] = 'Courier';\n  t['CourierNew-Bold'] = 'Courier-Bold';\n  t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\n  t['CourierNew-Italic'] = 'Courier-Oblique';\n  t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\n  t['CourierNewPS-BoldMT'] = 'Courier-Bold';\n  t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\n  t['CourierNewPSMT'] = 'Courier';\n  t['Helvetica'] = 'Helvetica';\n  t['Helvetica-Bold'] = 'Helvetica-Bold';\n  t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\n  t['Helvetica-Italic'] = 'Helvetica-Oblique';\n  t['Helvetica-Oblique'] = 'Helvetica-Oblique';\n  t['SegoeUISymbol'] = 'Helvetica';\n  t['Symbol-Bold'] = 'Symbol';\n  t['Symbol-BoldItalic'] = 'Symbol';\n  t['Symbol-Italic'] = 'Symbol';\n  t['TimesNewRoman'] = 'Times-Roman';\n  t['TimesNewRoman-Bold'] = 'Times-Bold';\n  t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRoman-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS'] = 'Times-Roman';\n  t['TimesNewRomanPS-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\n  t['TimesNewRomanPS-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\n  t['TimesNewRomanPSMT'] = 'Times-Roman';\n  t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\n});\nvar getNonStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['CenturyGothic'] = 'Helvetica';\n  t['CenturyGothic-Bold'] = 'Helvetica-Bold';\n  t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\n  t['ComicSansMS'] = 'Comic Sans MS';\n  t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\n  t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\n  t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\n  t['LucidaConsole'] = 'Courier';\n  t['LucidaConsole-Bold'] = 'Courier-Bold';\n  t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\n  t['LucidaConsole-Italic'] = 'Courier-Oblique';\n  t['MS-Gothic'] = 'MS Gothic';\n  t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\n  t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\n  t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\n  t['MS-Mincho'] = 'MS Mincho';\n  t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\n  t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\n  t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\n  t['MS-PGothic'] = 'MS PGothic';\n  t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\n  t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\n  t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\n  t['MS-PMincho'] = 'MS PMincho';\n  t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\n  t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\n  t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\n  t['NuptialScript'] = 'Times-Italic';\n  t['Wingdings'] = 'ZapfDingbats';\n});\nvar getSerifFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Adobe Jenson'] = true;\n  t['Adobe Text'] = true;\n  t['Albertus'] = true;\n  t['Aldus'] = true;\n  t['Alexandria'] = true;\n  t['Algerian'] = true;\n  t['American Typewriter'] = true;\n  t['Antiqua'] = true;\n  t['Apex'] = true;\n  t['Arno'] = true;\n  t['Aster'] = true;\n  t['Aurora'] = true;\n  t['Baskerville'] = true;\n  t['Bell'] = true;\n  t['Bembo'] = true;\n  t['Bembo Schoolbook'] = true;\n  t['Benguiat'] = true;\n  t['Berkeley Old Style'] = true;\n  t['Bernhard Modern'] = true;\n  t['Berthold City'] = true;\n  t['Bodoni'] = true;\n  t['Bauer Bodoni'] = true;\n  t['Book Antiqua'] = true;\n  t['Bookman'] = true;\n  t['Bordeaux Roman'] = true;\n  t['Californian FB'] = true;\n  t['Calisto'] = true;\n  t['Calvert'] = true;\n  t['Capitals'] = true;\n  t['Cambria'] = true;\n  t['Cartier'] = true;\n  t['Caslon'] = true;\n  t['Catull'] = true;\n  t['Centaur'] = true;\n  t['Century Old Style'] = true;\n  t['Century Schoolbook'] = true;\n  t['Chaparral'] = true;\n  t['Charis SIL'] = true;\n  t['Cheltenham'] = true;\n  t['Cholla Slab'] = true;\n  t['Clarendon'] = true;\n  t['Clearface'] = true;\n  t['Cochin'] = true;\n  t['Colonna'] = true;\n  t['Computer Modern'] = true;\n  t['Concrete Roman'] = true;\n  t['Constantia'] = true;\n  t['Cooper Black'] = true;\n  t['Corona'] = true;\n  t['Ecotype'] = true;\n  t['Egyptienne'] = true;\n  t['Elephant'] = true;\n  t['Excelsior'] = true;\n  t['Fairfield'] = true;\n  t['FF Scala'] = true;\n  t['Folkard'] = true;\n  t['Footlight'] = true;\n  t['FreeSerif'] = true;\n  t['Friz Quadrata'] = true;\n  t['Garamond'] = true;\n  t['Gentium'] = true;\n  t['Georgia'] = true;\n  t['Gloucester'] = true;\n  t['Goudy Old Style'] = true;\n  t['Goudy Schoolbook'] = true;\n  t['Goudy Pro Font'] = true;\n  t['Granjon'] = true;\n  t['Guardian Egyptian'] = true;\n  t['Heather'] = true;\n  t['Hercules'] = true;\n  t['High Tower Text'] = true;\n  t['Hiroshige'] = true;\n  t['Hoefler Text'] = true;\n  t['Humana Serif'] = true;\n  t['Imprint'] = true;\n  t['Ionic No. 5'] = true;\n  t['Janson'] = true;\n  t['Joanna'] = true;\n  t['Korinna'] = true;\n  t['Lexicon'] = true;\n  t['Liberation Serif'] = true;\n  t['Linux Libertine'] = true;\n  t['Literaturnaya'] = true;\n  t['Lucida'] = true;\n  t['Lucida Bright'] = true;\n  t['Melior'] = true;\n  t['Memphis'] = true;\n  t['Miller'] = true;\n  t['Minion'] = true;\n  t['Modern'] = true;\n  t['Mona Lisa'] = true;\n  t['Mrs Eaves'] = true;\n  t['MS Serif'] = true;\n  t['Museo Slab'] = true;\n  t['New York'] = true;\n  t['Nimbus Roman'] = true;\n  t['NPS Rawlinson Roadway'] = true;\n  t['NuptialScript'] = true;\n  t['Palatino'] = true;\n  t['Perpetua'] = true;\n  t['Plantin'] = true;\n  t['Plantin Schoolbook'] = true;\n  t['Playbill'] = true;\n  t['Poor Richard'] = true;\n  t['Rawlinson Roadway'] = true;\n  t['Renault'] = true;\n  t['Requiem'] = true;\n  t['Rockwell'] = true;\n  t['Roman'] = true;\n  t['Rotis Serif'] = true;\n  t['Sabon'] = true;\n  t['Scala'] = true;\n  t['Seagull'] = true;\n  t['Sistina'] = true;\n  t['Souvenir'] = true;\n  t['STIX'] = true;\n  t['Stone Informal'] = true;\n  t['Stone Serif'] = true;\n  t['Sylfaen'] = true;\n  t['Times'] = true;\n  t['Trajan'] = true;\n  t['Trinité'] = true;\n  t['Trump Mediaeval'] = true;\n  t['Utopia'] = true;\n  t['Vale Type'] = true;\n  t['Bitstream Vera'] = true;\n  t['Vera Serif'] = true;\n  t['Versailles'] = true;\n  t['Wanted'] = true;\n  t['Weiss'] = true;\n  t['Wide Latin'] = true;\n  t['Windsor'] = true;\n  t['XITS'] = true;\n});\nvar getSymbolsFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Dingbats'] = true;\n  t['Symbol'] = true;\n  t['ZapfDingbats'] = true;\n});\nvar getGlyphMapForStandardFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t[2] = 10;\n  t[3] = 32;\n  t[4] = 33;\n  t[5] = 34;\n  t[6] = 35;\n  t[7] = 36;\n  t[8] = 37;\n  t[9] = 38;\n  t[10] = 39;\n  t[11] = 40;\n  t[12] = 41;\n  t[13] = 42;\n  t[14] = 43;\n  t[15] = 44;\n  t[16] = 45;\n  t[17] = 46;\n  t[18] = 47;\n  t[19] = 48;\n  t[20] = 49;\n  t[21] = 50;\n  t[22] = 51;\n  t[23] = 52;\n  t[24] = 53;\n  t[25] = 54;\n  t[26] = 55;\n  t[27] = 56;\n  t[28] = 57;\n  t[29] = 58;\n  t[30] = 894;\n  t[31] = 60;\n  t[32] = 61;\n  t[33] = 62;\n  t[34] = 63;\n  t[35] = 64;\n  t[36] = 65;\n  t[37] = 66;\n  t[38] = 67;\n  t[39] = 68;\n  t[40] = 69;\n  t[41] = 70;\n  t[42] = 71;\n  t[43] = 72;\n  t[44] = 73;\n  t[45] = 74;\n  t[46] = 75;\n  t[47] = 76;\n  t[48] = 77;\n  t[49] = 78;\n  t[50] = 79;\n  t[51] = 80;\n  t[52] = 81;\n  t[53] = 82;\n  t[54] = 83;\n  t[55] = 84;\n  t[56] = 85;\n  t[57] = 86;\n  t[58] = 87;\n  t[59] = 88;\n  t[60] = 89;\n  t[61] = 90;\n  t[62] = 91;\n  t[63] = 92;\n  t[64] = 93;\n  t[65] = 94;\n  t[66] = 95;\n  t[67] = 96;\n  t[68] = 97;\n  t[69] = 98;\n  t[70] = 99;\n  t[71] = 100;\n  t[72] = 101;\n  t[73] = 102;\n  t[74] = 103;\n  t[75] = 104;\n  t[76] = 105;\n  t[77] = 106;\n  t[78] = 107;\n  t[79] = 108;\n  t[80] = 109;\n  t[81] = 110;\n  t[82] = 111;\n  t[83] = 112;\n  t[84] = 113;\n  t[85] = 114;\n  t[86] = 115;\n  t[87] = 116;\n  t[88] = 117;\n  t[89] = 118;\n  t[90] = 119;\n  t[91] = 120;\n  t[92] = 121;\n  t[93] = 122;\n  t[94] = 123;\n  t[95] = 124;\n  t[96] = 125;\n  t[97] = 126;\n  t[98] = 196;\n  t[99] = 197;\n  t[100] = 199;\n  t[101] = 201;\n  t[102] = 209;\n  t[103] = 214;\n  t[104] = 220;\n  t[105] = 225;\n  t[106] = 224;\n  t[107] = 226;\n  t[108] = 228;\n  t[109] = 227;\n  t[110] = 229;\n  t[111] = 231;\n  t[112] = 233;\n  t[113] = 232;\n  t[114] = 234;\n  t[115] = 235;\n  t[116] = 237;\n  t[117] = 236;\n  t[118] = 238;\n  t[119] = 239;\n  t[120] = 241;\n  t[121] = 243;\n  t[122] = 242;\n  t[123] = 244;\n  t[124] = 246;\n  t[125] = 245;\n  t[126] = 250;\n  t[127] = 249;\n  t[128] = 251;\n  t[129] = 252;\n  t[130] = 8224;\n  t[131] = 176;\n  t[132] = 162;\n  t[133] = 163;\n  t[134] = 167;\n  t[135] = 8226;\n  t[136] = 182;\n  t[137] = 223;\n  t[138] = 174;\n  t[139] = 169;\n  t[140] = 8482;\n  t[141] = 180;\n  t[142] = 168;\n  t[143] = 8800;\n  t[144] = 198;\n  t[145] = 216;\n  t[146] = 8734;\n  t[147] = 177;\n  t[148] = 8804;\n  t[149] = 8805;\n  t[150] = 165;\n  t[151] = 181;\n  t[152] = 8706;\n  t[153] = 8721;\n  t[154] = 8719;\n  t[156] = 8747;\n  t[157] = 170;\n  t[158] = 186;\n  t[159] = 8486;\n  t[160] = 230;\n  t[161] = 248;\n  t[162] = 191;\n  t[163] = 161;\n  t[164] = 172;\n  t[165] = 8730;\n  t[166] = 402;\n  t[167] = 8776;\n  t[168] = 8710;\n  t[169] = 171;\n  t[170] = 187;\n  t[171] = 8230;\n  t[210] = 218;\n  t[223] = 711;\n  t[224] = 321;\n  t[225] = 322;\n  t[227] = 353;\n  t[229] = 382;\n  t[234] = 253;\n  t[252] = 263;\n  t[253] = 268;\n  t[254] = 269;\n  t[258] = 258;\n  t[260] = 260;\n  t[261] = 261;\n  t[265] = 280;\n  t[266] = 281;\n  t[268] = 283;\n  t[269] = 313;\n  t[275] = 323;\n  t[276] = 324;\n  t[278] = 328;\n  t[284] = 345;\n  t[285] = 346;\n  t[286] = 347;\n  t[292] = 367;\n  t[295] = 377;\n  t[296] = 378;\n  t[298] = 380;\n  t[305] = 963;\n  t[306] = 964;\n  t[307] = 966;\n  t[308] = 8215;\n  t[309] = 8252;\n  t[310] = 8319;\n  t[311] = 8359;\n  t[312] = 8592;\n  t[313] = 8593;\n  t[337] = 9552;\n  t[493] = 1039;\n  t[494] = 1040;\n  t[705] = 1524;\n  t[706] = 8362;\n  t[710] = 64288;\n  t[711] = 64298;\n  t[759] = 1617;\n  t[761] = 1776;\n  t[763] = 1778;\n  t[775] = 1652;\n  t[777] = 1764;\n  t[778] = 1780;\n  t[779] = 1781;\n  t[780] = 1782;\n  t[782] = 771;\n  t[783] = 64726;\n  t[786] = 8363;\n  t[788] = 8532;\n  t[790] = 768;\n  t[791] = 769;\n  t[792] = 768;\n  t[795] = 803;\n  t[797] = 64336;\n  t[798] = 64337;\n  t[799] = 64342;\n  t[800] = 64343;\n  t[801] = 64344;\n  t[802] = 64345;\n  t[803] = 64362;\n  t[804] = 64363;\n  t[805] = 64364;\n  t[2424] = 7821;\n  t[2425] = 7822;\n  t[2426] = 7823;\n  t[2427] = 7824;\n  t[2428] = 7825;\n  t[2429] = 7826;\n  t[2430] = 7827;\n  t[2433] = 7682;\n  t[2678] = 8045;\n  t[2679] = 8046;\n  t[2830] = 1552;\n  t[2838] = 686;\n  t[2840] = 751;\n  t[2842] = 753;\n  t[2843] = 754;\n  t[2844] = 755;\n  t[2846] = 757;\n  t[2856] = 767;\n  t[2857] = 848;\n  t[2858] = 849;\n  t[2862] = 853;\n  t[2863] = 854;\n  t[2864] = 855;\n  t[2865] = 861;\n  t[2866] = 862;\n  t[2906] = 7460;\n  t[2908] = 7462;\n  t[2909] = 7463;\n  t[2910] = 7464;\n  t[2912] = 7466;\n  t[2913] = 7467;\n  t[2914] = 7468;\n  t[2916] = 7470;\n  t[2917] = 7471;\n  t[2918] = 7472;\n  t[2920] = 7474;\n  t[2921] = 7475;\n  t[2922] = 7476;\n  t[2924] = 7478;\n  t[2925] = 7479;\n  t[2926] = 7480;\n  t[2928] = 7482;\n  t[2929] = 7483;\n  t[2930] = 7484;\n  t[2932] = 7486;\n  t[2933] = 7487;\n  t[2934] = 7488;\n  t[2936] = 7490;\n  t[2937] = 7491;\n  t[2938] = 7492;\n  t[2940] = 7494;\n  t[2941] = 7495;\n  t[2942] = 7496;\n  t[2944] = 7498;\n  t[2946] = 7500;\n  t[2948] = 7502;\n  t[2950] = 7504;\n  t[2951] = 7505;\n  t[2952] = 7506;\n  t[2954] = 7508;\n  t[2955] = 7509;\n  t[2956] = 7510;\n  t[2958] = 7512;\n  t[2959] = 7513;\n  t[2960] = 7514;\n  t[2962] = 7516;\n  t[2963] = 7517;\n  t[2964] = 7518;\n  t[2966] = 7520;\n  t[2967] = 7521;\n  t[2968] = 7522;\n  t[2970] = 7524;\n  t[2971] = 7525;\n  t[2972] = 7526;\n  t[2974] = 7528;\n  t[2975] = 7529;\n  t[2976] = 7530;\n  t[2978] = 1537;\n  t[2979] = 1538;\n  t[2980] = 1539;\n  t[2982] = 1549;\n  t[2983] = 1551;\n  t[2984] = 1552;\n  t[2986] = 1554;\n  t[2987] = 1555;\n  t[2988] = 1556;\n  t[2990] = 1623;\n  t[2991] = 1624;\n  t[2995] = 1775;\n  t[2999] = 1791;\n  t[3002] = 64290;\n  t[3003] = 64291;\n  t[3004] = 64292;\n  t[3006] = 64294;\n  t[3007] = 64295;\n  t[3008] = 64296;\n  t[3011] = 1900;\n  t[3014] = 8223;\n  t[3015] = 8244;\n  t[3017] = 7532;\n  t[3018] = 7533;\n  t[3019] = 7534;\n  t[3075] = 7590;\n  t[3076] = 7591;\n  t[3079] = 7594;\n  t[3080] = 7595;\n  t[3083] = 7598;\n  t[3084] = 7599;\n  t[3087] = 7602;\n  t[3088] = 7603;\n  t[3091] = 7606;\n  t[3092] = 7607;\n  t[3095] = 7610;\n  t[3096] = 7611;\n  t[3099] = 7614;\n  t[3100] = 7615;\n  t[3103] = 7618;\n  t[3104] = 7619;\n  t[3107] = 8337;\n  t[3108] = 8338;\n  t[3116] = 1884;\n  t[3119] = 1885;\n  t[3120] = 1885;\n  t[3123] = 1886;\n  t[3124] = 1886;\n  t[3127] = 1887;\n  t[3128] = 1887;\n  t[3131] = 1888;\n  t[3132] = 1888;\n  t[3135] = 1889;\n  t[3136] = 1889;\n  t[3139] = 1890;\n  t[3140] = 1890;\n  t[3143] = 1891;\n  t[3144] = 1891;\n  t[3147] = 1892;\n  t[3148] = 1892;\n  t[3153] = 580;\n  t[3154] = 581;\n  t[3157] = 584;\n  t[3158] = 585;\n  t[3161] = 588;\n  t[3162] = 589;\n  t[3165] = 891;\n  t[3166] = 892;\n  t[3169] = 1274;\n  t[3170] = 1275;\n  t[3173] = 1278;\n  t[3174] = 1279;\n  t[3181] = 7622;\n  t[3182] = 7623;\n  t[3282] = 11799;\n  t[3316] = 578;\n  t[3379] = 42785;\n  t[3393] = 1159;\n  t[3416] = 8377;\n});\nvar getSupplementalGlyphMapForArialBlack = (0, _util.getLookupTableFactory)(function (t) {\n  t[227] = 322;\n  t[264] = 261;\n  t[291] = 346;\n});\nexports.getStdFontMap = getStdFontMap;\nexports.getNonStdFontMap = getNonStdFontMap;\nexports.getSerifFonts = getSerifFonts;\nexports.getSymbolsFonts = getSymbolsFonts;\nexports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\nexports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getLookupTableFactory = __w_pdfjs_require__(0).getLookupTableFactory;\nvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\n  t[63721] = 0x00A9;\n  t[63193] = 0x00A9;\n  t[63720] = 0x00AE;\n  t[63194] = 0x00AE;\n  t[63722] = 0x2122;\n  t[63195] = 0x2122;\n  t[63729] = 0x23A7;\n  t[63730] = 0x23A8;\n  t[63731] = 0x23A9;\n  t[63740] = 0x23AB;\n  t[63741] = 0x23AC;\n  t[63742] = 0x23AD;\n  t[63726] = 0x23A1;\n  t[63727] = 0x23A2;\n  t[63728] = 0x23A3;\n  t[63737] = 0x23A4;\n  t[63738] = 0x23A5;\n  t[63739] = 0x23A6;\n  t[63723] = 0x239B;\n  t[63724] = 0x239C;\n  t[63725] = 0x239D;\n  t[63734] = 0x239E;\n  t[63735] = 0x239F;\n  t[63736] = 0x23A0;\n});\nfunction mapSpecialUnicodeValues(code) {\n  if (code >= 0xFFF0 && code <= 0xFFFF) {\n    return 0;\n  } else if (code >= 0xF600 && code <= 0xF8FF) {\n    return getSpecialPUASymbols()[code] || code;\n  } else if (code === 0x00AD) {\n    return 0x002D;\n  }\n  return code;\n}\nfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\n  var unicode = glyphsUnicodeMap[name];\n  if (unicode !== undefined) {\n    return unicode;\n  }\n  if (!name) {\n    return -1;\n  }\n  if (name[0] === 'u') {\n    var nameLen = name.length,\n        hexStr;\n    if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\n      hexStr = name.substr(3);\n    } else if (nameLen >= 5 && nameLen <= 7) {\n      hexStr = name.substr(1);\n    } else {\n      return -1;\n    }\n    if (hexStr === hexStr.toUpperCase()) {\n      unicode = parseInt(hexStr, 16);\n      if (unicode >= 0) {\n        return unicode;\n      }\n    }\n  }\n  return -1;\n}\nvar UnicodeRanges = [{\n  'begin': 0x0000,\n  'end': 0x007F\n}, {\n  'begin': 0x0080,\n  'end': 0x00FF\n}, {\n  'begin': 0x0100,\n  'end': 0x017F\n}, {\n  'begin': 0x0180,\n  'end': 0x024F\n}, {\n  'begin': 0x0250,\n  'end': 0x02AF\n}, {\n  'begin': 0x02B0,\n  'end': 0x02FF\n}, {\n  'begin': 0x0300,\n  'end': 0x036F\n}, {\n  'begin': 0x0370,\n  'end': 0x03FF\n}, {\n  'begin': 0x2C80,\n  'end': 0x2CFF\n}, {\n  'begin': 0x0400,\n  'end': 0x04FF\n}, {\n  'begin': 0x0530,\n  'end': 0x058F\n}, {\n  'begin': 0x0590,\n  'end': 0x05FF\n}, {\n  'begin': 0xA500,\n  'end': 0xA63F\n}, {\n  'begin': 0x0600,\n  'end': 0x06FF\n}, {\n  'begin': 0x07C0,\n  'end': 0x07FF\n}, {\n  'begin': 0x0900,\n  'end': 0x097F\n}, {\n  'begin': 0x0980,\n  'end': 0x09FF\n}, {\n  'begin': 0x0A00,\n  'end': 0x0A7F\n}, {\n  'begin': 0x0A80,\n  'end': 0x0AFF\n}, {\n  'begin': 0x0B00,\n  'end': 0x0B7F\n}, {\n  'begin': 0x0B80,\n  'end': 0x0BFF\n}, {\n  'begin': 0x0C00,\n  'end': 0x0C7F\n}, {\n  'begin': 0x0C80,\n  'end': 0x0CFF\n}, {\n  'begin': 0x0D00,\n  'end': 0x0D7F\n}, {\n  'begin': 0x0E00,\n  'end': 0x0E7F\n}, {\n  'begin': 0x0E80,\n  'end': 0x0EFF\n}, {\n  'begin': 0x10A0,\n  'end': 0x10FF\n}, {\n  'begin': 0x1B00,\n  'end': 0x1B7F\n}, {\n  'begin': 0x1100,\n  'end': 0x11FF\n}, {\n  'begin': 0x1E00,\n  'end': 0x1EFF\n}, {\n  'begin': 0x1F00,\n  'end': 0x1FFF\n}, {\n  'begin': 0x2000,\n  'end': 0x206F\n}, {\n  'begin': 0x2070,\n  'end': 0x209F\n}, {\n  'begin': 0x20A0,\n  'end': 0x20CF\n}, {\n  'begin': 0x20D0,\n  'end': 0x20FF\n}, {\n  'begin': 0x2100,\n  'end': 0x214F\n}, {\n  'begin': 0x2150,\n  'end': 0x218F\n}, {\n  'begin': 0x2190,\n  'end': 0x21FF\n}, {\n  'begin': 0x2200,\n  'end': 0x22FF\n}, {\n  'begin': 0x2300,\n  'end': 0x23FF\n}, {\n  'begin': 0x2400,\n  'end': 0x243F\n}, {\n  'begin': 0x2440,\n  'end': 0x245F\n}, {\n  'begin': 0x2460,\n  'end': 0x24FF\n}, {\n  'begin': 0x2500,\n  'end': 0x257F\n}, {\n  'begin': 0x2580,\n  'end': 0x259F\n}, {\n  'begin': 0x25A0,\n  'end': 0x25FF\n}, {\n  'begin': 0x2600,\n  'end': 0x26FF\n}, {\n  'begin': 0x2700,\n  'end': 0x27BF\n}, {\n  'begin': 0x3000,\n  'end': 0x303F\n}, {\n  'begin': 0x3040,\n  'end': 0x309F\n}, {\n  'begin': 0x30A0,\n  'end': 0x30FF\n}, {\n  'begin': 0x3100,\n  'end': 0x312F\n}, {\n  'begin': 0x3130,\n  'end': 0x318F\n}, {\n  'begin': 0xA840,\n  'end': 0xA87F\n}, {\n  'begin': 0x3200,\n  'end': 0x32FF\n}, {\n  'begin': 0x3300,\n  'end': 0x33FF\n}, {\n  'begin': 0xAC00,\n  'end': 0xD7AF\n}, {\n  'begin': 0xD800,\n  'end': 0xDFFF\n}, {\n  'begin': 0x10900,\n  'end': 0x1091F\n}, {\n  'begin': 0x4E00,\n  'end': 0x9FFF\n}, {\n  'begin': 0xE000,\n  'end': 0xF8FF\n}, {\n  'begin': 0x31C0,\n  'end': 0x31EF\n}, {\n  'begin': 0xFB00,\n  'end': 0xFB4F\n}, {\n  'begin': 0xFB50,\n  'end': 0xFDFF\n}, {\n  'begin': 0xFE20,\n  'end': 0xFE2F\n}, {\n  'begin': 0xFE10,\n  'end': 0xFE1F\n}, {\n  'begin': 0xFE50,\n  'end': 0xFE6F\n}, {\n  'begin': 0xFE70,\n  'end': 0xFEFF\n}, {\n  'begin': 0xFF00,\n  'end': 0xFFEF\n}, {\n  'begin': 0xFFF0,\n  'end': 0xFFFF\n}, {\n  'begin': 0x0F00,\n  'end': 0x0FFF\n}, {\n  'begin': 0x0700,\n  'end': 0x074F\n}, {\n  'begin': 0x0780,\n  'end': 0x07BF\n}, {\n  'begin': 0x0D80,\n  'end': 0x0DFF\n}, {\n  'begin': 0x1000,\n  'end': 0x109F\n}, {\n  'begin': 0x1200,\n  'end': 0x137F\n}, {\n  'begin': 0x13A0,\n  'end': 0x13FF\n}, {\n  'begin': 0x1400,\n  'end': 0x167F\n}, {\n  'begin': 0x1680,\n  'end': 0x169F\n}, {\n  'begin': 0x16A0,\n  'end': 0x16FF\n}, {\n  'begin': 0x1780,\n  'end': 0x17FF\n}, {\n  'begin': 0x1800,\n  'end': 0x18AF\n}, {\n  'begin': 0x2800,\n  'end': 0x28FF\n}, {\n  'begin': 0xA000,\n  'end': 0xA48F\n}, {\n  'begin': 0x1700,\n  'end': 0x171F\n}, {\n  'begin': 0x10300,\n  'end': 0x1032F\n}, {\n  'begin': 0x10330,\n  'end': 0x1034F\n}, {\n  'begin': 0x10400,\n  'end': 0x1044F\n}, {\n  'begin': 0x1D000,\n  'end': 0x1D0FF\n}, {\n  'begin': 0x1D400,\n  'end': 0x1D7FF\n}, {\n  'begin': 0xFF000,\n  'end': 0xFFFFD\n}, {\n  'begin': 0xFE00,\n  'end': 0xFE0F\n}, {\n  'begin': 0xE0000,\n  'end': 0xE007F\n}, {\n  'begin': 0x1900,\n  'end': 0x194F\n}, {\n  'begin': 0x1950,\n  'end': 0x197F\n}, {\n  'begin': 0x1980,\n  'end': 0x19DF\n}, {\n  'begin': 0x1A00,\n  'end': 0x1A1F\n}, {\n  'begin': 0x2C00,\n  'end': 0x2C5F\n}, {\n  'begin': 0x2D30,\n  'end': 0x2D7F\n}, {\n  'begin': 0x4DC0,\n  'end': 0x4DFF\n}, {\n  'begin': 0xA800,\n  'end': 0xA82F\n}, {\n  'begin': 0x10000,\n  'end': 0x1007F\n}, {\n  'begin': 0x10140,\n  'end': 0x1018F\n}, {\n  'begin': 0x10380,\n  'end': 0x1039F\n}, {\n  'begin': 0x103A0,\n  'end': 0x103DF\n}, {\n  'begin': 0x10450,\n  'end': 0x1047F\n}, {\n  'begin': 0x10480,\n  'end': 0x104AF\n}, {\n  'begin': 0x10800,\n  'end': 0x1083F\n}, {\n  'begin': 0x10A00,\n  'end': 0x10A5F\n}, {\n  'begin': 0x1D300,\n  'end': 0x1D35F\n}, {\n  'begin': 0x12000,\n  'end': 0x123FF\n}, {\n  'begin': 0x1D360,\n  'end': 0x1D37F\n}, {\n  'begin': 0x1B80,\n  'end': 0x1BBF\n}, {\n  'begin': 0x1C00,\n  'end': 0x1C4F\n}, {\n  'begin': 0x1C50,\n  'end': 0x1C7F\n}, {\n  'begin': 0xA880,\n  'end': 0xA8DF\n}, {\n  'begin': 0xA900,\n  'end': 0xA92F\n}, {\n  'begin': 0xA930,\n  'end': 0xA95F\n}, {\n  'begin': 0xAA00,\n  'end': 0xAA5F\n}, {\n  'begin': 0x10190,\n  'end': 0x101CF\n}, {\n  'begin': 0x101D0,\n  'end': 0x101FF\n}, {\n  'begin': 0x102A0,\n  'end': 0x102DF\n}, {\n  'begin': 0x1F030,\n  'end': 0x1F09F\n}];\nfunction getUnicodeRangeFor(value) {\n  for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n    var range = UnicodeRanges[i];\n    if (value >= range.begin && value < range.end) {\n      return i;\n    }\n  }\n  return -1;\n}\nfunction isRTLRangeFor(value) {\n  var range = UnicodeRanges[13];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  range = UnicodeRanges[11];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  return false;\n}\nvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\n  t['\\xA8'] = ' \\u0308';\n  t['\\xAF'] = ' \\u0304';\n  t['\\xB4'] = ' \\u0301';\n  t['\\xB5'] = '\\u03BC';\n  t['\\xB8'] = ' \\u0327';\n  t['\\u0132'] = 'IJ';\n  t['\\u0133'] = 'ij';\n  t['\\u013F'] = 'L\\xB7';\n  t['\\u0140'] = 'l\\xB7';\n  t['\\u0149'] = '\\u02BCn';\n  t['\\u017F'] = 's';\n  t['\\u01C4'] = 'D\\u017D';\n  t['\\u01C5'] = 'D\\u017E';\n  t['\\u01C6'] = 'd\\u017E';\n  t['\\u01C7'] = 'LJ';\n  t['\\u01C8'] = 'Lj';\n  t['\\u01C9'] = 'lj';\n  t['\\u01CA'] = 'NJ';\n  t['\\u01CB'] = 'Nj';\n  t['\\u01CC'] = 'nj';\n  t['\\u01F1'] = 'DZ';\n  t['\\u01F2'] = 'Dz';\n  t['\\u01F3'] = 'dz';\n  t['\\u02D8'] = ' \\u0306';\n  t['\\u02D9'] = ' \\u0307';\n  t['\\u02DA'] = ' \\u030A';\n  t['\\u02DB'] = ' \\u0328';\n  t['\\u02DC'] = ' \\u0303';\n  t['\\u02DD'] = ' \\u030B';\n  t['\\u037A'] = ' \\u0345';\n  t['\\u0384'] = ' \\u0301';\n  t['\\u03D0'] = '\\u03B2';\n  t['\\u03D1'] = '\\u03B8';\n  t['\\u03D2'] = '\\u03A5';\n  t['\\u03D5'] = '\\u03C6';\n  t['\\u03D6'] = '\\u03C0';\n  t['\\u03F0'] = '\\u03BA';\n  t['\\u03F1'] = '\\u03C1';\n  t['\\u03F2'] = '\\u03C2';\n  t['\\u03F4'] = '\\u0398';\n  t['\\u03F5'] = '\\u03B5';\n  t['\\u03F9'] = '\\u03A3';\n  t['\\u0587'] = '\\u0565\\u0582';\n  t['\\u0675'] = '\\u0627\\u0674';\n  t['\\u0676'] = '\\u0648\\u0674';\n  t['\\u0677'] = '\\u06C7\\u0674';\n  t['\\u0678'] = '\\u064A\\u0674';\n  t['\\u0E33'] = '\\u0E4D\\u0E32';\n  t['\\u0EB3'] = '\\u0ECD\\u0EB2';\n  t['\\u0EDC'] = '\\u0EAB\\u0E99';\n  t['\\u0EDD'] = '\\u0EAB\\u0EA1';\n  t['\\u0F77'] = '\\u0FB2\\u0F81';\n  t['\\u0F79'] = '\\u0FB3\\u0F81';\n  t['\\u1E9A'] = 'a\\u02BE';\n  t['\\u1FBD'] = ' \\u0313';\n  t['\\u1FBF'] = ' \\u0313';\n  t['\\u1FC0'] = ' \\u0342';\n  t['\\u1FFE'] = ' \\u0314';\n  t['\\u2002'] = ' ';\n  t['\\u2003'] = ' ';\n  t['\\u2004'] = ' ';\n  t['\\u2005'] = ' ';\n  t['\\u2006'] = ' ';\n  t['\\u2008'] = ' ';\n  t['\\u2009'] = ' ';\n  t['\\u200A'] = ' ';\n  t['\\u2017'] = ' \\u0333';\n  t['\\u2024'] = '.';\n  t['\\u2025'] = '..';\n  t['\\u2026'] = '...';\n  t['\\u2033'] = '\\u2032\\u2032';\n  t['\\u2034'] = '\\u2032\\u2032\\u2032';\n  t['\\u2036'] = '\\u2035\\u2035';\n  t['\\u2037'] = '\\u2035\\u2035\\u2035';\n  t['\\u203C'] = '!!';\n  t['\\u203E'] = ' \\u0305';\n  t['\\u2047'] = '??';\n  t['\\u2048'] = '?!';\n  t['\\u2049'] = '!?';\n  t['\\u2057'] = '\\u2032\\u2032\\u2032\\u2032';\n  t['\\u205F'] = ' ';\n  t['\\u20A8'] = 'Rs';\n  t['\\u2100'] = 'a/c';\n  t['\\u2101'] = 'a/s';\n  t['\\u2103'] = '\\xB0C';\n  t['\\u2105'] = 'c/o';\n  t['\\u2106'] = 'c/u';\n  t['\\u2107'] = '\\u0190';\n  t['\\u2109'] = '\\xB0F';\n  t['\\u2116'] = 'No';\n  t['\\u2121'] = 'TEL';\n  t['\\u2135'] = '\\u05D0';\n  t['\\u2136'] = '\\u05D1';\n  t['\\u2137'] = '\\u05D2';\n  t['\\u2138'] = '\\u05D3';\n  t['\\u213B'] = 'FAX';\n  t['\\u2160'] = 'I';\n  t['\\u2161'] = 'II';\n  t['\\u2162'] = 'III';\n  t['\\u2163'] = 'IV';\n  t['\\u2164'] = 'V';\n  t['\\u2165'] = 'VI';\n  t['\\u2166'] = 'VII';\n  t['\\u2167'] = 'VIII';\n  t['\\u2168'] = 'IX';\n  t['\\u2169'] = 'X';\n  t['\\u216A'] = 'XI';\n  t['\\u216B'] = 'XII';\n  t['\\u216C'] = 'L';\n  t['\\u216D'] = 'C';\n  t['\\u216E'] = 'D';\n  t['\\u216F'] = 'M';\n  t['\\u2170'] = 'i';\n  t['\\u2171'] = 'ii';\n  t['\\u2172'] = 'iii';\n  t['\\u2173'] = 'iv';\n  t['\\u2174'] = 'v';\n  t['\\u2175'] = 'vi';\n  t['\\u2176'] = 'vii';\n  t['\\u2177'] = 'viii';\n  t['\\u2178'] = 'ix';\n  t['\\u2179'] = 'x';\n  t['\\u217A'] = 'xi';\n  t['\\u217B'] = 'xii';\n  t['\\u217C'] = 'l';\n  t['\\u217D'] = 'c';\n  t['\\u217E'] = 'd';\n  t['\\u217F'] = 'm';\n  t['\\u222C'] = '\\u222B\\u222B';\n  t['\\u222D'] = '\\u222B\\u222B\\u222B';\n  t['\\u222F'] = '\\u222E\\u222E';\n  t['\\u2230'] = '\\u222E\\u222E\\u222E';\n  t['\\u2474'] = '(1)';\n  t['\\u2475'] = '(2)';\n  t['\\u2476'] = '(3)';\n  t['\\u2477'] = '(4)';\n  t['\\u2478'] = '(5)';\n  t['\\u2479'] = '(6)';\n  t['\\u247A'] = '(7)';\n  t['\\u247B'] = '(8)';\n  t['\\u247C'] = '(9)';\n  t['\\u247D'] = '(10)';\n  t['\\u247E'] = '(11)';\n  t['\\u247F'] = '(12)';\n  t['\\u2480'] = '(13)';\n  t['\\u2481'] = '(14)';\n  t['\\u2482'] = '(15)';\n  t['\\u2483'] = '(16)';\n  t['\\u2484'] = '(17)';\n  t['\\u2485'] = '(18)';\n  t['\\u2486'] = '(19)';\n  t['\\u2487'] = '(20)';\n  t['\\u2488'] = '1.';\n  t['\\u2489'] = '2.';\n  t['\\u248A'] = '3.';\n  t['\\u248B'] = '4.';\n  t['\\u248C'] = '5.';\n  t['\\u248D'] = '6.';\n  t['\\u248E'] = '7.';\n  t['\\u248F'] = '8.';\n  t['\\u2490'] = '9.';\n  t['\\u2491'] = '10.';\n  t['\\u2492'] = '11.';\n  t['\\u2493'] = '12.';\n  t['\\u2494'] = '13.';\n  t['\\u2495'] = '14.';\n  t['\\u2496'] = '15.';\n  t['\\u2497'] = '16.';\n  t['\\u2498'] = '17.';\n  t['\\u2499'] = '18.';\n  t['\\u249A'] = '19.';\n  t['\\u249B'] = '20.';\n  t['\\u249C'] = '(a)';\n  t['\\u249D'] = '(b)';\n  t['\\u249E'] = '(c)';\n  t['\\u249F'] = '(d)';\n  t['\\u24A0'] = '(e)';\n  t['\\u24A1'] = '(f)';\n  t['\\u24A2'] = '(g)';\n  t['\\u24A3'] = '(h)';\n  t['\\u24A4'] = '(i)';\n  t['\\u24A5'] = '(j)';\n  t['\\u24A6'] = '(k)';\n  t['\\u24A7'] = '(l)';\n  t['\\u24A8'] = '(m)';\n  t['\\u24A9'] = '(n)';\n  t['\\u24AA'] = '(o)';\n  t['\\u24AB'] = '(p)';\n  t['\\u24AC'] = '(q)';\n  t['\\u24AD'] = '(r)';\n  t['\\u24AE'] = '(s)';\n  t['\\u24AF'] = '(t)';\n  t['\\u24B0'] = '(u)';\n  t['\\u24B1'] = '(v)';\n  t['\\u24B2'] = '(w)';\n  t['\\u24B3'] = '(x)';\n  t['\\u24B4'] = '(y)';\n  t['\\u24B5'] = '(z)';\n  t['\\u2A0C'] = '\\u222B\\u222B\\u222B\\u222B';\n  t['\\u2A74'] = '::=';\n  t['\\u2A75'] = '==';\n  t['\\u2A76'] = '===';\n  t['\\u2E9F'] = '\\u6BCD';\n  t['\\u2EF3'] = '\\u9F9F';\n  t['\\u2F00'] = '\\u4E00';\n  t['\\u2F01'] = '\\u4E28';\n  t['\\u2F02'] = '\\u4E36';\n  t['\\u2F03'] = '\\u4E3F';\n  t['\\u2F04'] = '\\u4E59';\n  t['\\u2F05'] = '\\u4E85';\n  t['\\u2F06'] = '\\u4E8C';\n  t['\\u2F07'] = '\\u4EA0';\n  t['\\u2F08'] = '\\u4EBA';\n  t['\\u2F09'] = '\\u513F';\n  t['\\u2F0A'] = '\\u5165';\n  t['\\u2F0B'] = '\\u516B';\n  t['\\u2F0C'] = '\\u5182';\n  t['\\u2F0D'] = '\\u5196';\n  t['\\u2F0E'] = '\\u51AB';\n  t['\\u2F0F'] = '\\u51E0';\n  t['\\u2F10'] = '\\u51F5';\n  t['\\u2F11'] = '\\u5200';\n  t['\\u2F12'] = '\\u529B';\n  t['\\u2F13'] = '\\u52F9';\n  t['\\u2F14'] = '\\u5315';\n  t['\\u2F15'] = '\\u531A';\n  t['\\u2F16'] = '\\u5338';\n  t['\\u2F17'] = '\\u5341';\n  t['\\u2F18'] = '\\u535C';\n  t['\\u2F19'] = '\\u5369';\n  t['\\u2F1A'] = '\\u5382';\n  t['\\u2F1B'] = '\\u53B6';\n  t['\\u2F1C'] = '\\u53C8';\n  t['\\u2F1D'] = '\\u53E3';\n  t['\\u2F1E'] = '\\u56D7';\n  t['\\u2F1F'] = '\\u571F';\n  t['\\u2F20'] = '\\u58EB';\n  t['\\u2F21'] = '\\u5902';\n  t['\\u2F22'] = '\\u590A';\n  t['\\u2F23'] = '\\u5915';\n  t['\\u2F24'] = '\\u5927';\n  t['\\u2F25'] = '\\u5973';\n  t['\\u2F26'] = '\\u5B50';\n  t['\\u2F27'] = '\\u5B80';\n  t['\\u2F28'] = '\\u5BF8';\n  t['\\u2F29'] = '\\u5C0F';\n  t['\\u2F2A'] = '\\u5C22';\n  t['\\u2F2B'] = '\\u5C38';\n  t['\\u2F2C'] = '\\u5C6E';\n  t['\\u2F2D'] = '\\u5C71';\n  t['\\u2F2E'] = '\\u5DDB';\n  t['\\u2F2F'] = '\\u5DE5';\n  t['\\u2F30'] = '\\u5DF1';\n  t['\\u2F31'] = '\\u5DFE';\n  t['\\u2F32'] = '\\u5E72';\n  t['\\u2F33'] = '\\u5E7A';\n  t['\\u2F34'] = '\\u5E7F';\n  t['\\u2F35'] = '\\u5EF4';\n  t['\\u2F36'] = '\\u5EFE';\n  t['\\u2F37'] = '\\u5F0B';\n  t['\\u2F38'] = '\\u5F13';\n  t['\\u2F39'] = '\\u5F50';\n  t['\\u2F3A'] = '\\u5F61';\n  t['\\u2F3B'] = '\\u5F73';\n  t['\\u2F3C'] = '\\u5FC3';\n  t['\\u2F3D'] = '\\u6208';\n  t['\\u2F3E'] = '\\u6236';\n  t['\\u2F3F'] = '\\u624B';\n  t['\\u2F40'] = '\\u652F';\n  t['\\u2F41'] = '\\u6534';\n  t['\\u2F42'] = '\\u6587';\n  t['\\u2F43'] = '\\u6597';\n  t['\\u2F44'] = '\\u65A4';\n  t['\\u2F45'] = '\\u65B9';\n  t['\\u2F46'] = '\\u65E0';\n  t['\\u2F47'] = '\\u65E5';\n  t['\\u2F48'] = '\\u66F0';\n  t['\\u2F49'] = '\\u6708';\n  t['\\u2F4A'] = '\\u6728';\n  t['\\u2F4B'] = '\\u6B20';\n  t['\\u2F4C'] = '\\u6B62';\n  t['\\u2F4D'] = '\\u6B79';\n  t['\\u2F4E'] = '\\u6BB3';\n  t['\\u2F4F'] = '\\u6BCB';\n  t['\\u2F50'] = '\\u6BD4';\n  t['\\u2F51'] = '\\u6BDB';\n  t['\\u2F52'] = '\\u6C0F';\n  t['\\u2F53'] = '\\u6C14';\n  t['\\u2F54'] = '\\u6C34';\n  t['\\u2F55'] = '\\u706B';\n  t['\\u2F56'] = '\\u722A';\n  t['\\u2F57'] = '\\u7236';\n  t['\\u2F58'] = '\\u723B';\n  t['\\u2F59'] = '\\u723F';\n  t['\\u2F5A'] = '\\u7247';\n  t['\\u2F5B'] = '\\u7259';\n  t['\\u2F5C'] = '\\u725B';\n  t['\\u2F5D'] = '\\u72AC';\n  t['\\u2F5E'] = '\\u7384';\n  t['\\u2F5F'] = '\\u7389';\n  t['\\u2F60'] = '\\u74DC';\n  t['\\u2F61'] = '\\u74E6';\n  t['\\u2F62'] = '\\u7518';\n  t['\\u2F63'] = '\\u751F';\n  t['\\u2F64'] = '\\u7528';\n  t['\\u2F65'] = '\\u7530';\n  t['\\u2F66'] = '\\u758B';\n  t['\\u2F67'] = '\\u7592';\n  t['\\u2F68'] = '\\u7676';\n  t['\\u2F69'] = '\\u767D';\n  t['\\u2F6A'] = '\\u76AE';\n  t['\\u2F6B'] = '\\u76BF';\n  t['\\u2F6C'] = '\\u76EE';\n  t['\\u2F6D'] = '\\u77DB';\n  t['\\u2F6E'] = '\\u77E2';\n  t['\\u2F6F'] = '\\u77F3';\n  t['\\u2F70'] = '\\u793A';\n  t['\\u2F71'] = '\\u79B8';\n  t['\\u2F72'] = '\\u79BE';\n  t['\\u2F73'] = '\\u7A74';\n  t['\\u2F74'] = '\\u7ACB';\n  t['\\u2F75'] = '\\u7AF9';\n  t['\\u2F76'] = '\\u7C73';\n  t['\\u2F77'] = '\\u7CF8';\n  t['\\u2F78'] = '\\u7F36';\n  t['\\u2F79'] = '\\u7F51';\n  t['\\u2F7A'] = '\\u7F8A';\n  t['\\u2F7B'] = '\\u7FBD';\n  t['\\u2F7C'] = '\\u8001';\n  t['\\u2F7D'] = '\\u800C';\n  t['\\u2F7E'] = '\\u8012';\n  t['\\u2F7F'] = '\\u8033';\n  t['\\u2F80'] = '\\u807F';\n  t['\\u2F81'] = '\\u8089';\n  t['\\u2F82'] = '\\u81E3';\n  t['\\u2F83'] = '\\u81EA';\n  t['\\u2F84'] = '\\u81F3';\n  t['\\u2F85'] = '\\u81FC';\n  t['\\u2F86'] = '\\u820C';\n  t['\\u2F87'] = '\\u821B';\n  t['\\u2F88'] = '\\u821F';\n  t['\\u2F89'] = '\\u826E';\n  t['\\u2F8A'] = '\\u8272';\n  t['\\u2F8B'] = '\\u8278';\n  t['\\u2F8C'] = '\\u864D';\n  t['\\u2F8D'] = '\\u866B';\n  t['\\u2F8E'] = '\\u8840';\n  t['\\u2F8F'] = '\\u884C';\n  t['\\u2F90'] = '\\u8863';\n  t['\\u2F91'] = '\\u897E';\n  t['\\u2F92'] = '\\u898B';\n  t['\\u2F93'] = '\\u89D2';\n  t['\\u2F94'] = '\\u8A00';\n  t['\\u2F95'] = '\\u8C37';\n  t['\\u2F96'] = '\\u8C46';\n  t['\\u2F97'] = '\\u8C55';\n  t['\\u2F98'] = '\\u8C78';\n  t['\\u2F99'] = '\\u8C9D';\n  t['\\u2F9A'] = '\\u8D64';\n  t['\\u2F9B'] = '\\u8D70';\n  t['\\u2F9C'] = '\\u8DB3';\n  t['\\u2F9D'] = '\\u8EAB';\n  t['\\u2F9E'] = '\\u8ECA';\n  t['\\u2F9F'] = '\\u8F9B';\n  t['\\u2FA0'] = '\\u8FB0';\n  t['\\u2FA1'] = '\\u8FB5';\n  t['\\u2FA2'] = '\\u9091';\n  t['\\u2FA3'] = '\\u9149';\n  t['\\u2FA4'] = '\\u91C6';\n  t['\\u2FA5'] = '\\u91CC';\n  t['\\u2FA6'] = '\\u91D1';\n  t['\\u2FA7'] = '\\u9577';\n  t['\\u2FA8'] = '\\u9580';\n  t['\\u2FA9'] = '\\u961C';\n  t['\\u2FAA'] = '\\u96B6';\n  t['\\u2FAB'] = '\\u96B9';\n  t['\\u2FAC'] = '\\u96E8';\n  t['\\u2FAD'] = '\\u9751';\n  t['\\u2FAE'] = '\\u975E';\n  t['\\u2FAF'] = '\\u9762';\n  t['\\u2FB0'] = '\\u9769';\n  t['\\u2FB1'] = '\\u97CB';\n  t['\\u2FB2'] = '\\u97ED';\n  t['\\u2FB3'] = '\\u97F3';\n  t['\\u2FB4'] = '\\u9801';\n  t['\\u2FB5'] = '\\u98A8';\n  t['\\u2FB6'] = '\\u98DB';\n  t['\\u2FB7'] = '\\u98DF';\n  t['\\u2FB8'] = '\\u9996';\n  t['\\u2FB9'] = '\\u9999';\n  t['\\u2FBA'] = '\\u99AC';\n  t['\\u2FBB'] = '\\u9AA8';\n  t['\\u2FBC'] = '\\u9AD8';\n  t['\\u2FBD'] = '\\u9ADF';\n  t['\\u2FBE'] = '\\u9B25';\n  t['\\u2FBF'] = '\\u9B2F';\n  t['\\u2FC0'] = '\\u9B32';\n  t['\\u2FC1'] = '\\u9B3C';\n  t['\\u2FC2'] = '\\u9B5A';\n  t['\\u2FC3'] = '\\u9CE5';\n  t['\\u2FC4'] = '\\u9E75';\n  t['\\u2FC5'] = '\\u9E7F';\n  t['\\u2FC6'] = '\\u9EA5';\n  t['\\u2FC7'] = '\\u9EBB';\n  t['\\u2FC8'] = '\\u9EC3';\n  t['\\u2FC9'] = '\\u9ECD';\n  t['\\u2FCA'] = '\\u9ED1';\n  t['\\u2FCB'] = '\\u9EF9';\n  t['\\u2FCC'] = '\\u9EFD';\n  t['\\u2FCD'] = '\\u9F0E';\n  t['\\u2FCE'] = '\\u9F13';\n  t['\\u2FCF'] = '\\u9F20';\n  t['\\u2FD0'] = '\\u9F3B';\n  t['\\u2FD1'] = '\\u9F4A';\n  t['\\u2FD2'] = '\\u9F52';\n  t['\\u2FD3'] = '\\u9F8D';\n  t['\\u2FD4'] = '\\u9F9C';\n  t['\\u2FD5'] = '\\u9FA0';\n  t['\\u3036'] = '\\u3012';\n  t['\\u3038'] = '\\u5341';\n  t['\\u3039'] = '\\u5344';\n  t['\\u303A'] = '\\u5345';\n  t['\\u309B'] = ' \\u3099';\n  t['\\u309C'] = ' \\u309A';\n  t['\\u3131'] = '\\u1100';\n  t['\\u3132'] = '\\u1101';\n  t['\\u3133'] = '\\u11AA';\n  t['\\u3134'] = '\\u1102';\n  t['\\u3135'] = '\\u11AC';\n  t['\\u3136'] = '\\u11AD';\n  t['\\u3137'] = '\\u1103';\n  t['\\u3138'] = '\\u1104';\n  t['\\u3139'] = '\\u1105';\n  t['\\u313A'] = '\\u11B0';\n  t['\\u313B'] = '\\u11B1';\n  t['\\u313C'] = '\\u11B2';\n  t['\\u313D'] = '\\u11B3';\n  t['\\u313E'] = '\\u11B4';\n  t['\\u313F'] = '\\u11B5';\n  t['\\u3140'] = '\\u111A';\n  t['\\u3141'] = '\\u1106';\n  t['\\u3142'] = '\\u1107';\n  t['\\u3143'] = '\\u1108';\n  t['\\u3144'] = '\\u1121';\n  t['\\u3145'] = '\\u1109';\n  t['\\u3146'] = '\\u110A';\n  t['\\u3147'] = '\\u110B';\n  t['\\u3148'] = '\\u110C';\n  t['\\u3149'] = '\\u110D';\n  t['\\u314A'] = '\\u110E';\n  t['\\u314B'] = '\\u110F';\n  t['\\u314C'] = '\\u1110';\n  t['\\u314D'] = '\\u1111';\n  t['\\u314E'] = '\\u1112';\n  t['\\u314F'] = '\\u1161';\n  t['\\u3150'] = '\\u1162';\n  t['\\u3151'] = '\\u1163';\n  t['\\u3152'] = '\\u1164';\n  t['\\u3153'] = '\\u1165';\n  t['\\u3154'] = '\\u1166';\n  t['\\u3155'] = '\\u1167';\n  t['\\u3156'] = '\\u1168';\n  t['\\u3157'] = '\\u1169';\n  t['\\u3158'] = '\\u116A';\n  t['\\u3159'] = '\\u116B';\n  t['\\u315A'] = '\\u116C';\n  t['\\u315B'] = '\\u116D';\n  t['\\u315C'] = '\\u116E';\n  t['\\u315D'] = '\\u116F';\n  t['\\u315E'] = '\\u1170';\n  t['\\u315F'] = '\\u1171';\n  t['\\u3160'] = '\\u1172';\n  t['\\u3161'] = '\\u1173';\n  t['\\u3162'] = '\\u1174';\n  t['\\u3163'] = '\\u1175';\n  t['\\u3164'] = '\\u1160';\n  t['\\u3165'] = '\\u1114';\n  t['\\u3166'] = '\\u1115';\n  t['\\u3167'] = '\\u11C7';\n  t['\\u3168'] = '\\u11C8';\n  t['\\u3169'] = '\\u11CC';\n  t['\\u316A'] = '\\u11CE';\n  t['\\u316B'] = '\\u11D3';\n  t['\\u316C'] = '\\u11D7';\n  t['\\u316D'] = '\\u11D9';\n  t['\\u316E'] = '\\u111C';\n  t['\\u316F'] = '\\u11DD';\n  t['\\u3170'] = '\\u11DF';\n  t['\\u3171'] = '\\u111D';\n  t['\\u3172'] = '\\u111E';\n  t['\\u3173'] = '\\u1120';\n  t['\\u3174'] = '\\u1122';\n  t['\\u3175'] = '\\u1123';\n  t['\\u3176'] = '\\u1127';\n  t['\\u3177'] = '\\u1129';\n  t['\\u3178'] = '\\u112B';\n  t['\\u3179'] = '\\u112C';\n  t['\\u317A'] = '\\u112D';\n  t['\\u317B'] = '\\u112E';\n  t['\\u317C'] = '\\u112F';\n  t['\\u317D'] = '\\u1132';\n  t['\\u317E'] = '\\u1136';\n  t['\\u317F'] = '\\u1140';\n  t['\\u3180'] = '\\u1147';\n  t['\\u3181'] = '\\u114C';\n  t['\\u3182'] = '\\u11F1';\n  t['\\u3183'] = '\\u11F2';\n  t['\\u3184'] = '\\u1157';\n  t['\\u3185'] = '\\u1158';\n  t['\\u3186'] = '\\u1159';\n  t['\\u3187'] = '\\u1184';\n  t['\\u3188'] = '\\u1185';\n  t['\\u3189'] = '\\u1188';\n  t['\\u318A'] = '\\u1191';\n  t['\\u318B'] = '\\u1192';\n  t['\\u318C'] = '\\u1194';\n  t['\\u318D'] = '\\u119E';\n  t['\\u318E'] = '\\u11A1';\n  t['\\u3200'] = '(\\u1100)';\n  t['\\u3201'] = '(\\u1102)';\n  t['\\u3202'] = '(\\u1103)';\n  t['\\u3203'] = '(\\u1105)';\n  t['\\u3204'] = '(\\u1106)';\n  t['\\u3205'] = '(\\u1107)';\n  t['\\u3206'] = '(\\u1109)';\n  t['\\u3207'] = '(\\u110B)';\n  t['\\u3208'] = '(\\u110C)';\n  t['\\u3209'] = '(\\u110E)';\n  t['\\u320A'] = '(\\u110F)';\n  t['\\u320B'] = '(\\u1110)';\n  t['\\u320C'] = '(\\u1111)';\n  t['\\u320D'] = '(\\u1112)';\n  t['\\u320E'] = '(\\u1100\\u1161)';\n  t['\\u320F'] = '(\\u1102\\u1161)';\n  t['\\u3210'] = '(\\u1103\\u1161)';\n  t['\\u3211'] = '(\\u1105\\u1161)';\n  t['\\u3212'] = '(\\u1106\\u1161)';\n  t['\\u3213'] = '(\\u1107\\u1161)';\n  t['\\u3214'] = '(\\u1109\\u1161)';\n  t['\\u3215'] = '(\\u110B\\u1161)';\n  t['\\u3216'] = '(\\u110C\\u1161)';\n  t['\\u3217'] = '(\\u110E\\u1161)';\n  t['\\u3218'] = '(\\u110F\\u1161)';\n  t['\\u3219'] = '(\\u1110\\u1161)';\n  t['\\u321A'] = '(\\u1111\\u1161)';\n  t['\\u321B'] = '(\\u1112\\u1161)';\n  t['\\u321C'] = '(\\u110C\\u116E)';\n  t['\\u321D'] = '(\\u110B\\u1169\\u110C\\u1165\\u11AB)';\n  t['\\u321E'] = '(\\u110B\\u1169\\u1112\\u116E)';\n  t['\\u3220'] = '(\\u4E00)';\n  t['\\u3221'] = '(\\u4E8C)';\n  t['\\u3222'] = '(\\u4E09)';\n  t['\\u3223'] = '(\\u56DB)';\n  t['\\u3224'] = '(\\u4E94)';\n  t['\\u3225'] = '(\\u516D)';\n  t['\\u3226'] = '(\\u4E03)';\n  t['\\u3227'] = '(\\u516B)';\n  t['\\u3228'] = '(\\u4E5D)';\n  t['\\u3229'] = '(\\u5341)';\n  t['\\u322A'] = '(\\u6708)';\n  t['\\u322B'] = '(\\u706B)';\n  t['\\u322C'] = '(\\u6C34)';\n  t['\\u322D'] = '(\\u6728)';\n  t['\\u322E'] = '(\\u91D1)';\n  t['\\u322F'] = '(\\u571F)';\n  t['\\u3230'] = '(\\u65E5)';\n  t['\\u3231'] = '(\\u682A)';\n  t['\\u3232'] = '(\\u6709)';\n  t['\\u3233'] = '(\\u793E)';\n  t['\\u3234'] = '(\\u540D)';\n  t['\\u3235'] = '(\\u7279)';\n  t['\\u3236'] = '(\\u8CA1)';\n  t['\\u3237'] = '(\\u795D)';\n  t['\\u3238'] = '(\\u52B4)';\n  t['\\u3239'] = '(\\u4EE3)';\n  t['\\u323A'] = '(\\u547C)';\n  t['\\u323B'] = '(\\u5B66)';\n  t['\\u323C'] = '(\\u76E3)';\n  t['\\u323D'] = '(\\u4F01)';\n  t['\\u323E'] = '(\\u8CC7)';\n  t['\\u323F'] = '(\\u5354)';\n  t['\\u3240'] = '(\\u796D)';\n  t['\\u3241'] = '(\\u4F11)';\n  t['\\u3242'] = '(\\u81EA)';\n  t['\\u3243'] = '(\\u81F3)';\n  t['\\u32C0'] = '1\\u6708';\n  t['\\u32C1'] = '2\\u6708';\n  t['\\u32C2'] = '3\\u6708';\n  t['\\u32C3'] = '4\\u6708';\n  t['\\u32C4'] = '5\\u6708';\n  t['\\u32C5'] = '6\\u6708';\n  t['\\u32C6'] = '7\\u6708';\n  t['\\u32C7'] = '8\\u6708';\n  t['\\u32C8'] = '9\\u6708';\n  t['\\u32C9'] = '10\\u6708';\n  t['\\u32CA'] = '11\\u6708';\n  t['\\u32CB'] = '12\\u6708';\n  t['\\u3358'] = '0\\u70B9';\n  t['\\u3359'] = '1\\u70B9';\n  t['\\u335A'] = '2\\u70B9';\n  t['\\u335B'] = '3\\u70B9';\n  t['\\u335C'] = '4\\u70B9';\n  t['\\u335D'] = '5\\u70B9';\n  t['\\u335E'] = '6\\u70B9';\n  t['\\u335F'] = '7\\u70B9';\n  t['\\u3360'] = '8\\u70B9';\n  t['\\u3361'] = '9\\u70B9';\n  t['\\u3362'] = '10\\u70B9';\n  t['\\u3363'] = '11\\u70B9';\n  t['\\u3364'] = '12\\u70B9';\n  t['\\u3365'] = '13\\u70B9';\n  t['\\u3366'] = '14\\u70B9';\n  t['\\u3367'] = '15\\u70B9';\n  t['\\u3368'] = '16\\u70B9';\n  t['\\u3369'] = '17\\u70B9';\n  t['\\u336A'] = '18\\u70B9';\n  t['\\u336B'] = '19\\u70B9';\n  t['\\u336C'] = '20\\u70B9';\n  t['\\u336D'] = '21\\u70B9';\n  t['\\u336E'] = '22\\u70B9';\n  t['\\u336F'] = '23\\u70B9';\n  t['\\u3370'] = '24\\u70B9';\n  t['\\u33E0'] = '1\\u65E5';\n  t['\\u33E1'] = '2\\u65E5';\n  t['\\u33E2'] = '3\\u65E5';\n  t['\\u33E3'] = '4\\u65E5';\n  t['\\u33E4'] = '5\\u65E5';\n  t['\\u33E5'] = '6\\u65E5';\n  t['\\u33E6'] = '7\\u65E5';\n  t['\\u33E7'] = '8\\u65E5';\n  t['\\u33E8'] = '9\\u65E5';\n  t['\\u33E9'] = '10\\u65E5';\n  t['\\u33EA'] = '11\\u65E5';\n  t['\\u33EB'] = '12\\u65E5';\n  t['\\u33EC'] = '13\\u65E5';\n  t['\\u33ED'] = '14\\u65E5';\n  t['\\u33EE'] = '15\\u65E5';\n  t['\\u33EF'] = '16\\u65E5';\n  t['\\u33F0'] = '17\\u65E5';\n  t['\\u33F1'] = '18\\u65E5';\n  t['\\u33F2'] = '19\\u65E5';\n  t['\\u33F3'] = '20\\u65E5';\n  t['\\u33F4'] = '21\\u65E5';\n  t['\\u33F5'] = '22\\u65E5';\n  t['\\u33F6'] = '23\\u65E5';\n  t['\\u33F7'] = '24\\u65E5';\n  t['\\u33F8'] = '25\\u65E5';\n  t['\\u33F9'] = '26\\u65E5';\n  t['\\u33FA'] = '27\\u65E5';\n  t['\\u33FB'] = '28\\u65E5';\n  t['\\u33FC'] = '29\\u65E5';\n  t['\\u33FD'] = '30\\u65E5';\n  t['\\u33FE'] = '31\\u65E5';\n  t['\\uFB00'] = 'ff';\n  t['\\uFB01'] = 'fi';\n  t['\\uFB02'] = 'fl';\n  t['\\uFB03'] = 'ffi';\n  t['\\uFB04'] = 'ffl';\n  t['\\uFB05'] = '\\u017Ft';\n  t['\\uFB06'] = 'st';\n  t['\\uFB13'] = '\\u0574\\u0576';\n  t['\\uFB14'] = '\\u0574\\u0565';\n  t['\\uFB15'] = '\\u0574\\u056B';\n  t['\\uFB16'] = '\\u057E\\u0576';\n  t['\\uFB17'] = '\\u0574\\u056D';\n  t['\\uFB4F'] = '\\u05D0\\u05DC';\n  t['\\uFB50'] = '\\u0671';\n  t['\\uFB51'] = '\\u0671';\n  t['\\uFB52'] = '\\u067B';\n  t['\\uFB53'] = '\\u067B';\n  t['\\uFB54'] = '\\u067B';\n  t['\\uFB55'] = '\\u067B';\n  t['\\uFB56'] = '\\u067E';\n  t['\\uFB57'] = '\\u067E';\n  t['\\uFB58'] = '\\u067E';\n  t['\\uFB59'] = '\\u067E';\n  t['\\uFB5A'] = '\\u0680';\n  t['\\uFB5B'] = '\\u0680';\n  t['\\uFB5C'] = '\\u0680';\n  t['\\uFB5D'] = '\\u0680';\n  t['\\uFB5E'] = '\\u067A';\n  t['\\uFB5F'] = '\\u067A';\n  t['\\uFB60'] = '\\u067A';\n  t['\\uFB61'] = '\\u067A';\n  t['\\uFB62'] = '\\u067F';\n  t['\\uFB63'] = '\\u067F';\n  t['\\uFB64'] = '\\u067F';\n  t['\\uFB65'] = '\\u067F';\n  t['\\uFB66'] = '\\u0679';\n  t['\\uFB67'] = '\\u0679';\n  t['\\uFB68'] = '\\u0679';\n  t['\\uFB69'] = '\\u0679';\n  t['\\uFB6A'] = '\\u06A4';\n  t['\\uFB6B'] = '\\u06A4';\n  t['\\uFB6C'] = '\\u06A4';\n  t['\\uFB6D'] = '\\u06A4';\n  t['\\uFB6E'] = '\\u06A6';\n  t['\\uFB6F'] = '\\u06A6';\n  t['\\uFB70'] = '\\u06A6';\n  t['\\uFB71'] = '\\u06A6';\n  t['\\uFB72'] = '\\u0684';\n  t['\\uFB73'] = '\\u0684';\n  t['\\uFB74'] = '\\u0684';\n  t['\\uFB75'] = '\\u0684';\n  t['\\uFB76'] = '\\u0683';\n  t['\\uFB77'] = '\\u0683';\n  t['\\uFB78'] = '\\u0683';\n  t['\\uFB79'] = '\\u0683';\n  t['\\uFB7A'] = '\\u0686';\n  t['\\uFB7B'] = '\\u0686';\n  t['\\uFB7C'] = '\\u0686';\n  t['\\uFB7D'] = '\\u0686';\n  t['\\uFB7E'] = '\\u0687';\n  t['\\uFB7F'] = '\\u0687';\n  t['\\uFB80'] = '\\u0687';\n  t['\\uFB81'] = '\\u0687';\n  t['\\uFB82'] = '\\u068D';\n  t['\\uFB83'] = '\\u068D';\n  t['\\uFB84'] = '\\u068C';\n  t['\\uFB85'] = '\\u068C';\n  t['\\uFB86'] = '\\u068E';\n  t['\\uFB87'] = '\\u068E';\n  t['\\uFB88'] = '\\u0688';\n  t['\\uFB89'] = '\\u0688';\n  t['\\uFB8A'] = '\\u0698';\n  t['\\uFB8B'] = '\\u0698';\n  t['\\uFB8C'] = '\\u0691';\n  t['\\uFB8D'] = '\\u0691';\n  t['\\uFB8E'] = '\\u06A9';\n  t['\\uFB8F'] = '\\u06A9';\n  t['\\uFB90'] = '\\u06A9';\n  t['\\uFB91'] = '\\u06A9';\n  t['\\uFB92'] = '\\u06AF';\n  t['\\uFB93'] = '\\u06AF';\n  t['\\uFB94'] = '\\u06AF';\n  t['\\uFB95'] = '\\u06AF';\n  t['\\uFB96'] = '\\u06B3';\n  t['\\uFB97'] = '\\u06B3';\n  t['\\uFB98'] = '\\u06B3';\n  t['\\uFB99'] = '\\u06B3';\n  t['\\uFB9A'] = '\\u06B1';\n  t['\\uFB9B'] = '\\u06B1';\n  t['\\uFB9C'] = '\\u06B1';\n  t['\\uFB9D'] = '\\u06B1';\n  t['\\uFB9E'] = '\\u06BA';\n  t['\\uFB9F'] = '\\u06BA';\n  t['\\uFBA0'] = '\\u06BB';\n  t['\\uFBA1'] = '\\u06BB';\n  t['\\uFBA2'] = '\\u06BB';\n  t['\\uFBA3'] = '\\u06BB';\n  t['\\uFBA4'] = '\\u06C0';\n  t['\\uFBA5'] = '\\u06C0';\n  t['\\uFBA6'] = '\\u06C1';\n  t['\\uFBA7'] = '\\u06C1';\n  t['\\uFBA8'] = '\\u06C1';\n  t['\\uFBA9'] = '\\u06C1';\n  t['\\uFBAA'] = '\\u06BE';\n  t['\\uFBAB'] = '\\u06BE';\n  t['\\uFBAC'] = '\\u06BE';\n  t['\\uFBAD'] = '\\u06BE';\n  t['\\uFBAE'] = '\\u06D2';\n  t['\\uFBAF'] = '\\u06D2';\n  t['\\uFBB0'] = '\\u06D3';\n  t['\\uFBB1'] = '\\u06D3';\n  t['\\uFBD3'] = '\\u06AD';\n  t['\\uFBD4'] = '\\u06AD';\n  t['\\uFBD5'] = '\\u06AD';\n  t['\\uFBD6'] = '\\u06AD';\n  t['\\uFBD7'] = '\\u06C7';\n  t['\\uFBD8'] = '\\u06C7';\n  t['\\uFBD9'] = '\\u06C6';\n  t['\\uFBDA'] = '\\u06C6';\n  t['\\uFBDB'] = '\\u06C8';\n  t['\\uFBDC'] = '\\u06C8';\n  t['\\uFBDD'] = '\\u0677';\n  t['\\uFBDE'] = '\\u06CB';\n  t['\\uFBDF'] = '\\u06CB';\n  t['\\uFBE0'] = '\\u06C5';\n  t['\\uFBE1'] = '\\u06C5';\n  t['\\uFBE2'] = '\\u06C9';\n  t['\\uFBE3'] = '\\u06C9';\n  t['\\uFBE4'] = '\\u06D0';\n  t['\\uFBE5'] = '\\u06D0';\n  t['\\uFBE6'] = '\\u06D0';\n  t['\\uFBE7'] = '\\u06D0';\n  t['\\uFBE8'] = '\\u0649';\n  t['\\uFBE9'] = '\\u0649';\n  t['\\uFBEA'] = '\\u0626\\u0627';\n  t['\\uFBEB'] = '\\u0626\\u0627';\n  t['\\uFBEC'] = '\\u0626\\u06D5';\n  t['\\uFBED'] = '\\u0626\\u06D5';\n  t['\\uFBEE'] = '\\u0626\\u0648';\n  t['\\uFBEF'] = '\\u0626\\u0648';\n  t['\\uFBF0'] = '\\u0626\\u06C7';\n  t['\\uFBF1'] = '\\u0626\\u06C7';\n  t['\\uFBF2'] = '\\u0626\\u06C6';\n  t['\\uFBF3'] = '\\u0626\\u06C6';\n  t['\\uFBF4'] = '\\u0626\\u06C8';\n  t['\\uFBF5'] = '\\u0626\\u06C8';\n  t['\\uFBF6'] = '\\u0626\\u06D0';\n  t['\\uFBF7'] = '\\u0626\\u06D0';\n  t['\\uFBF8'] = '\\u0626\\u06D0';\n  t['\\uFBF9'] = '\\u0626\\u0649';\n  t['\\uFBFA'] = '\\u0626\\u0649';\n  t['\\uFBFB'] = '\\u0626\\u0649';\n  t['\\uFBFC'] = '\\u06CC';\n  t['\\uFBFD'] = '\\u06CC';\n  t['\\uFBFE'] = '\\u06CC';\n  t['\\uFBFF'] = '\\u06CC';\n  t['\\uFC00'] = '\\u0626\\u062C';\n  t['\\uFC01'] = '\\u0626\\u062D';\n  t['\\uFC02'] = '\\u0626\\u0645';\n  t['\\uFC03'] = '\\u0626\\u0649';\n  t['\\uFC04'] = '\\u0626\\u064A';\n  t['\\uFC05'] = '\\u0628\\u062C';\n  t['\\uFC06'] = '\\u0628\\u062D';\n  t['\\uFC07'] = '\\u0628\\u062E';\n  t['\\uFC08'] = '\\u0628\\u0645';\n  t['\\uFC09'] = '\\u0628\\u0649';\n  t['\\uFC0A'] = '\\u0628\\u064A';\n  t['\\uFC0B'] = '\\u062A\\u062C';\n  t['\\uFC0C'] = '\\u062A\\u062D';\n  t['\\uFC0D'] = '\\u062A\\u062E';\n  t['\\uFC0E'] = '\\u062A\\u0645';\n  t['\\uFC0F'] = '\\u062A\\u0649';\n  t['\\uFC10'] = '\\u062A\\u064A';\n  t['\\uFC11'] = '\\u062B\\u062C';\n  t['\\uFC12'] = '\\u062B\\u0645';\n  t['\\uFC13'] = '\\u062B\\u0649';\n  t['\\uFC14'] = '\\u062B\\u064A';\n  t['\\uFC15'] = '\\u062C\\u062D';\n  t['\\uFC16'] = '\\u062C\\u0645';\n  t['\\uFC17'] = '\\u062D\\u062C';\n  t['\\uFC18'] = '\\u062D\\u0645';\n  t['\\uFC19'] = '\\u062E\\u062C';\n  t['\\uFC1A'] = '\\u062E\\u062D';\n  t['\\uFC1B'] = '\\u062E\\u0645';\n  t['\\uFC1C'] = '\\u0633\\u062C';\n  t['\\uFC1D'] = '\\u0633\\u062D';\n  t['\\uFC1E'] = '\\u0633\\u062E';\n  t['\\uFC1F'] = '\\u0633\\u0645';\n  t['\\uFC20'] = '\\u0635\\u062D';\n  t['\\uFC21'] = '\\u0635\\u0645';\n  t['\\uFC22'] = '\\u0636\\u062C';\n  t['\\uFC23'] = '\\u0636\\u062D';\n  t['\\uFC24'] = '\\u0636\\u062E';\n  t['\\uFC25'] = '\\u0636\\u0645';\n  t['\\uFC26'] = '\\u0637\\u062D';\n  t['\\uFC27'] = '\\u0637\\u0645';\n  t['\\uFC28'] = '\\u0638\\u0645';\n  t['\\uFC29'] = '\\u0639\\u062C';\n  t['\\uFC2A'] = '\\u0639\\u0645';\n  t['\\uFC2B'] = '\\u063A\\u062C';\n  t['\\uFC2C'] = '\\u063A\\u0645';\n  t['\\uFC2D'] = '\\u0641\\u062C';\n  t['\\uFC2E'] = '\\u0641\\u062D';\n  t['\\uFC2F'] = '\\u0641\\u062E';\n  t['\\uFC30'] = '\\u0641\\u0645';\n  t['\\uFC31'] = '\\u0641\\u0649';\n  t['\\uFC32'] = '\\u0641\\u064A';\n  t['\\uFC33'] = '\\u0642\\u062D';\n  t['\\uFC34'] = '\\u0642\\u0645';\n  t['\\uFC35'] = '\\u0642\\u0649';\n  t['\\uFC36'] = '\\u0642\\u064A';\n  t['\\uFC37'] = '\\u0643\\u0627';\n  t['\\uFC38'] = '\\u0643\\u062C';\n  t['\\uFC39'] = '\\u0643\\u062D';\n  t['\\uFC3A'] = '\\u0643\\u062E';\n  t['\\uFC3B'] = '\\u0643\\u0644';\n  t['\\uFC3C'] = '\\u0643\\u0645';\n  t['\\uFC3D'] = '\\u0643\\u0649';\n  t['\\uFC3E'] = '\\u0643\\u064A';\n  t['\\uFC3F'] = '\\u0644\\u062C';\n  t['\\uFC40'] = '\\u0644\\u062D';\n  t['\\uFC41'] = '\\u0644\\u062E';\n  t['\\uFC42'] = '\\u0644\\u0645';\n  t['\\uFC43'] = '\\u0644\\u0649';\n  t['\\uFC44'] = '\\u0644\\u064A';\n  t['\\uFC45'] = '\\u0645\\u062C';\n  t['\\uFC46'] = '\\u0645\\u062D';\n  t['\\uFC47'] = '\\u0645\\u062E';\n  t['\\uFC48'] = '\\u0645\\u0645';\n  t['\\uFC49'] = '\\u0645\\u0649';\n  t['\\uFC4A'] = '\\u0645\\u064A';\n  t['\\uFC4B'] = '\\u0646\\u062C';\n  t['\\uFC4C'] = '\\u0646\\u062D';\n  t['\\uFC4D'] = '\\u0646\\u062E';\n  t['\\uFC4E'] = '\\u0646\\u0645';\n  t['\\uFC4F'] = '\\u0646\\u0649';\n  t['\\uFC50'] = '\\u0646\\u064A';\n  t['\\uFC51'] = '\\u0647\\u062C';\n  t['\\uFC52'] = '\\u0647\\u0645';\n  t['\\uFC53'] = '\\u0647\\u0649';\n  t['\\uFC54'] = '\\u0647\\u064A';\n  t['\\uFC55'] = '\\u064A\\u062C';\n  t['\\uFC56'] = '\\u064A\\u062D';\n  t['\\uFC57'] = '\\u064A\\u062E';\n  t['\\uFC58'] = '\\u064A\\u0645';\n  t['\\uFC59'] = '\\u064A\\u0649';\n  t['\\uFC5A'] = '\\u064A\\u064A';\n  t['\\uFC5B'] = '\\u0630\\u0670';\n  t['\\uFC5C'] = '\\u0631\\u0670';\n  t['\\uFC5D'] = '\\u0649\\u0670';\n  t['\\uFC5E'] = ' \\u064C\\u0651';\n  t['\\uFC5F'] = ' \\u064D\\u0651';\n  t['\\uFC60'] = ' \\u064E\\u0651';\n  t['\\uFC61'] = ' \\u064F\\u0651';\n  t['\\uFC62'] = ' \\u0650\\u0651';\n  t['\\uFC63'] = ' \\u0651\\u0670';\n  t['\\uFC64'] = '\\u0626\\u0631';\n  t['\\uFC65'] = '\\u0626\\u0632';\n  t['\\uFC66'] = '\\u0626\\u0645';\n  t['\\uFC67'] = '\\u0626\\u0646';\n  t['\\uFC68'] = '\\u0626\\u0649';\n  t['\\uFC69'] = '\\u0626\\u064A';\n  t['\\uFC6A'] = '\\u0628\\u0631';\n  t['\\uFC6B'] = '\\u0628\\u0632';\n  t['\\uFC6C'] = '\\u0628\\u0645';\n  t['\\uFC6D'] = '\\u0628\\u0646';\n  t['\\uFC6E'] = '\\u0628\\u0649';\n  t['\\uFC6F'] = '\\u0628\\u064A';\n  t['\\uFC70'] = '\\u062A\\u0631';\n  t['\\uFC71'] = '\\u062A\\u0632';\n  t['\\uFC72'] = '\\u062A\\u0645';\n  t['\\uFC73'] = '\\u062A\\u0646';\n  t['\\uFC74'] = '\\u062A\\u0649';\n  t['\\uFC75'] = '\\u062A\\u064A';\n  t['\\uFC76'] = '\\u062B\\u0631';\n  t['\\uFC77'] = '\\u062B\\u0632';\n  t['\\uFC78'] = '\\u062B\\u0645';\n  t['\\uFC79'] = '\\u062B\\u0646';\n  t['\\uFC7A'] = '\\u062B\\u0649';\n  t['\\uFC7B'] = '\\u062B\\u064A';\n  t['\\uFC7C'] = '\\u0641\\u0649';\n  t['\\uFC7D'] = '\\u0641\\u064A';\n  t['\\uFC7E'] = '\\u0642\\u0649';\n  t['\\uFC7F'] = '\\u0642\\u064A';\n  t['\\uFC80'] = '\\u0643\\u0627';\n  t['\\uFC81'] = '\\u0643\\u0644';\n  t['\\uFC82'] = '\\u0643\\u0645';\n  t['\\uFC83'] = '\\u0643\\u0649';\n  t['\\uFC84'] = '\\u0643\\u064A';\n  t['\\uFC85'] = '\\u0644\\u0645';\n  t['\\uFC86'] = '\\u0644\\u0649';\n  t['\\uFC87'] = '\\u0644\\u064A';\n  t['\\uFC88'] = '\\u0645\\u0627';\n  t['\\uFC89'] = '\\u0645\\u0645';\n  t['\\uFC8A'] = '\\u0646\\u0631';\n  t['\\uFC8B'] = '\\u0646\\u0632';\n  t['\\uFC8C'] = '\\u0646\\u0645';\n  t['\\uFC8D'] = '\\u0646\\u0646';\n  t['\\uFC8E'] = '\\u0646\\u0649';\n  t['\\uFC8F'] = '\\u0646\\u064A';\n  t['\\uFC90'] = '\\u0649\\u0670';\n  t['\\uFC91'] = '\\u064A\\u0631';\n  t['\\uFC92'] = '\\u064A\\u0632';\n  t['\\uFC93'] = '\\u064A\\u0645';\n  t['\\uFC94'] = '\\u064A\\u0646';\n  t['\\uFC95'] = '\\u064A\\u0649';\n  t['\\uFC96'] = '\\u064A\\u064A';\n  t['\\uFC97'] = '\\u0626\\u062C';\n  t['\\uFC98'] = '\\u0626\\u062D';\n  t['\\uFC99'] = '\\u0626\\u062E';\n  t['\\uFC9A'] = '\\u0626\\u0645';\n  t['\\uFC9B'] = '\\u0626\\u0647';\n  t['\\uFC9C'] = '\\u0628\\u062C';\n  t['\\uFC9D'] = '\\u0628\\u062D';\n  t['\\uFC9E'] = '\\u0628\\u062E';\n  t['\\uFC9F'] = '\\u0628\\u0645';\n  t['\\uFCA0'] = '\\u0628\\u0647';\n  t['\\uFCA1'] = '\\u062A\\u062C';\n  t['\\uFCA2'] = '\\u062A\\u062D';\n  t['\\uFCA3'] = '\\u062A\\u062E';\n  t['\\uFCA4'] = '\\u062A\\u0645';\n  t['\\uFCA5'] = '\\u062A\\u0647';\n  t['\\uFCA6'] = '\\u062B\\u0645';\n  t['\\uFCA7'] = '\\u062C\\u062D';\n  t['\\uFCA8'] = '\\u062C\\u0645';\n  t['\\uFCA9'] = '\\u062D\\u062C';\n  t['\\uFCAA'] = '\\u062D\\u0645';\n  t['\\uFCAB'] = '\\u062E\\u062C';\n  t['\\uFCAC'] = '\\u062E\\u0645';\n  t['\\uFCAD'] = '\\u0633\\u062C';\n  t['\\uFCAE'] = '\\u0633\\u062D';\n  t['\\uFCAF'] = '\\u0633\\u062E';\n  t['\\uFCB0'] = '\\u0633\\u0645';\n  t['\\uFCB1'] = '\\u0635\\u062D';\n  t['\\uFCB2'] = '\\u0635\\u062E';\n  t['\\uFCB3'] = '\\u0635\\u0645';\n  t['\\uFCB4'] = '\\u0636\\u062C';\n  t['\\uFCB5'] = '\\u0636\\u062D';\n  t['\\uFCB6'] = '\\u0636\\u062E';\n  t['\\uFCB7'] = '\\u0636\\u0645';\n  t['\\uFCB8'] = '\\u0637\\u062D';\n  t['\\uFCB9'] = '\\u0638\\u0645';\n  t['\\uFCBA'] = '\\u0639\\u062C';\n  t['\\uFCBB'] = '\\u0639\\u0645';\n  t['\\uFCBC'] = '\\u063A\\u062C';\n  t['\\uFCBD'] = '\\u063A\\u0645';\n  t['\\uFCBE'] = '\\u0641\\u062C';\n  t['\\uFCBF'] = '\\u0641\\u062D';\n  t['\\uFCC0'] = '\\u0641\\u062E';\n  t['\\uFCC1'] = '\\u0641\\u0645';\n  t['\\uFCC2'] = '\\u0642\\u062D';\n  t['\\uFCC3'] = '\\u0642\\u0645';\n  t['\\uFCC4'] = '\\u0643\\u062C';\n  t['\\uFCC5'] = '\\u0643\\u062D';\n  t['\\uFCC6'] = '\\u0643\\u062E';\n  t['\\uFCC7'] = '\\u0643\\u0644';\n  t['\\uFCC8'] = '\\u0643\\u0645';\n  t['\\uFCC9'] = '\\u0644\\u062C';\n  t['\\uFCCA'] = '\\u0644\\u062D';\n  t['\\uFCCB'] = '\\u0644\\u062E';\n  t['\\uFCCC'] = '\\u0644\\u0645';\n  t['\\uFCCD'] = '\\u0644\\u0647';\n  t['\\uFCCE'] = '\\u0645\\u062C';\n  t['\\uFCCF'] = '\\u0645\\u062D';\n  t['\\uFCD0'] = '\\u0645\\u062E';\n  t['\\uFCD1'] = '\\u0645\\u0645';\n  t['\\uFCD2'] = '\\u0646\\u062C';\n  t['\\uFCD3'] = '\\u0646\\u062D';\n  t['\\uFCD4'] = '\\u0646\\u062E';\n  t['\\uFCD5'] = '\\u0646\\u0645';\n  t['\\uFCD6'] = '\\u0646\\u0647';\n  t['\\uFCD7'] = '\\u0647\\u062C';\n  t['\\uFCD8'] = '\\u0647\\u0645';\n  t['\\uFCD9'] = '\\u0647\\u0670';\n  t['\\uFCDA'] = '\\u064A\\u062C';\n  t['\\uFCDB'] = '\\u064A\\u062D';\n  t['\\uFCDC'] = '\\u064A\\u062E';\n  t['\\uFCDD'] = '\\u064A\\u0645';\n  t['\\uFCDE'] = '\\u064A\\u0647';\n  t['\\uFCDF'] = '\\u0626\\u0645';\n  t['\\uFCE0'] = '\\u0626\\u0647';\n  t['\\uFCE1'] = '\\u0628\\u0645';\n  t['\\uFCE2'] = '\\u0628\\u0647';\n  t['\\uFCE3'] = '\\u062A\\u0645';\n  t['\\uFCE4'] = '\\u062A\\u0647';\n  t['\\uFCE5'] = '\\u062B\\u0645';\n  t['\\uFCE6'] = '\\u062B\\u0647';\n  t['\\uFCE7'] = '\\u0633\\u0645';\n  t['\\uFCE8'] = '\\u0633\\u0647';\n  t['\\uFCE9'] = '\\u0634\\u0645';\n  t['\\uFCEA'] = '\\u0634\\u0647';\n  t['\\uFCEB'] = '\\u0643\\u0644';\n  t['\\uFCEC'] = '\\u0643\\u0645';\n  t['\\uFCED'] = '\\u0644\\u0645';\n  t['\\uFCEE'] = '\\u0646\\u0645';\n  t['\\uFCEF'] = '\\u0646\\u0647';\n  t['\\uFCF0'] = '\\u064A\\u0645';\n  t['\\uFCF1'] = '\\u064A\\u0647';\n  t['\\uFCF2'] = '\\u0640\\u064E\\u0651';\n  t['\\uFCF3'] = '\\u0640\\u064F\\u0651';\n  t['\\uFCF4'] = '\\u0640\\u0650\\u0651';\n  t['\\uFCF5'] = '\\u0637\\u0649';\n  t['\\uFCF6'] = '\\u0637\\u064A';\n  t['\\uFCF7'] = '\\u0639\\u0649';\n  t['\\uFCF8'] = '\\u0639\\u064A';\n  t['\\uFCF9'] = '\\u063A\\u0649';\n  t['\\uFCFA'] = '\\u063A\\u064A';\n  t['\\uFCFB'] = '\\u0633\\u0649';\n  t['\\uFCFC'] = '\\u0633\\u064A';\n  t['\\uFCFD'] = '\\u0634\\u0649';\n  t['\\uFCFE'] = '\\u0634\\u064A';\n  t['\\uFCFF'] = '\\u062D\\u0649';\n  t['\\uFD00'] = '\\u062D\\u064A';\n  t['\\uFD01'] = '\\u062C\\u0649';\n  t['\\uFD02'] = '\\u062C\\u064A';\n  t['\\uFD03'] = '\\u062E\\u0649';\n  t['\\uFD04'] = '\\u062E\\u064A';\n  t['\\uFD05'] = '\\u0635\\u0649';\n  t['\\uFD06'] = '\\u0635\\u064A';\n  t['\\uFD07'] = '\\u0636\\u0649';\n  t['\\uFD08'] = '\\u0636\\u064A';\n  t['\\uFD09'] = '\\u0634\\u062C';\n  t['\\uFD0A'] = '\\u0634\\u062D';\n  t['\\uFD0B'] = '\\u0634\\u062E';\n  t['\\uFD0C'] = '\\u0634\\u0645';\n  t['\\uFD0D'] = '\\u0634\\u0631';\n  t['\\uFD0E'] = '\\u0633\\u0631';\n  t['\\uFD0F'] = '\\u0635\\u0631';\n  t['\\uFD10'] = '\\u0636\\u0631';\n  t['\\uFD11'] = '\\u0637\\u0649';\n  t['\\uFD12'] = '\\u0637\\u064A';\n  t['\\uFD13'] = '\\u0639\\u0649';\n  t['\\uFD14'] = '\\u0639\\u064A';\n  t['\\uFD15'] = '\\u063A\\u0649';\n  t['\\uFD16'] = '\\u063A\\u064A';\n  t['\\uFD17'] = '\\u0633\\u0649';\n  t['\\uFD18'] = '\\u0633\\u064A';\n  t['\\uFD19'] = '\\u0634\\u0649';\n  t['\\uFD1A'] = '\\u0634\\u064A';\n  t['\\uFD1B'] = '\\u062D\\u0649';\n  t['\\uFD1C'] = '\\u062D\\u064A';\n  t['\\uFD1D'] = '\\u062C\\u0649';\n  t['\\uFD1E'] = '\\u062C\\u064A';\n  t['\\uFD1F'] = '\\u062E\\u0649';\n  t['\\uFD20'] = '\\u062E\\u064A';\n  t['\\uFD21'] = '\\u0635\\u0649';\n  t['\\uFD22'] = '\\u0635\\u064A';\n  t['\\uFD23'] = '\\u0636\\u0649';\n  t['\\uFD24'] = '\\u0636\\u064A';\n  t['\\uFD25'] = '\\u0634\\u062C';\n  t['\\uFD26'] = '\\u0634\\u062D';\n  t['\\uFD27'] = '\\u0634\\u062E';\n  t['\\uFD28'] = '\\u0634\\u0645';\n  t['\\uFD29'] = '\\u0634\\u0631';\n  t['\\uFD2A'] = '\\u0633\\u0631';\n  t['\\uFD2B'] = '\\u0635\\u0631';\n  t['\\uFD2C'] = '\\u0636\\u0631';\n  t['\\uFD2D'] = '\\u0634\\u062C';\n  t['\\uFD2E'] = '\\u0634\\u062D';\n  t['\\uFD2F'] = '\\u0634\\u062E';\n  t['\\uFD30'] = '\\u0634\\u0645';\n  t['\\uFD31'] = '\\u0633\\u0647';\n  t['\\uFD32'] = '\\u0634\\u0647';\n  t['\\uFD33'] = '\\u0637\\u0645';\n  t['\\uFD34'] = '\\u0633\\u062C';\n  t['\\uFD35'] = '\\u0633\\u062D';\n  t['\\uFD36'] = '\\u0633\\u062E';\n  t['\\uFD37'] = '\\u0634\\u062C';\n  t['\\uFD38'] = '\\u0634\\u062D';\n  t['\\uFD39'] = '\\u0634\\u062E';\n  t['\\uFD3A'] = '\\u0637\\u0645';\n  t['\\uFD3B'] = '\\u0638\\u0645';\n  t['\\uFD3C'] = '\\u0627\\u064B';\n  t['\\uFD3D'] = '\\u0627\\u064B';\n  t['\\uFD50'] = '\\u062A\\u062C\\u0645';\n  t['\\uFD51'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD52'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD53'] = '\\u062A\\u062D\\u0645';\n  t['\\uFD54'] = '\\u062A\\u062E\\u0645';\n  t['\\uFD55'] = '\\u062A\\u0645\\u062C';\n  t['\\uFD56'] = '\\u062A\\u0645\\u062D';\n  t['\\uFD57'] = '\\u062A\\u0645\\u062E';\n  t['\\uFD58'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD59'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD5A'] = '\\u062D\\u0645\\u064A';\n  t['\\uFD5B'] = '\\u062D\\u0645\\u0649';\n  t['\\uFD5C'] = '\\u0633\\u062D\\u062C';\n  t['\\uFD5D'] = '\\u0633\\u062C\\u062D';\n  t['\\uFD5E'] = '\\u0633\\u062C\\u0649';\n  t['\\uFD5F'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD60'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD61'] = '\\u0633\\u0645\\u062C';\n  t['\\uFD62'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD63'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD64'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD65'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD66'] = '\\u0635\\u0645\\u0645';\n  t['\\uFD67'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD68'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD69'] = '\\u0634\\u062C\\u064A';\n  t['\\uFD6A'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6B'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6C'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6D'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6E'] = '\\u0636\\u062D\\u0649';\n  t['\\uFD6F'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD70'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD71'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD72'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD73'] = '\\u0637\\u0645\\u0645';\n  t['\\uFD74'] = '\\u0637\\u0645\\u064A';\n  t['\\uFD75'] = '\\u0639\\u062C\\u0645';\n  t['\\uFD76'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD77'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD78'] = '\\u0639\\u0645\\u0649';\n  t['\\uFD79'] = '\\u063A\\u0645\\u0645';\n  t['\\uFD7A'] = '\\u063A\\u0645\\u064A';\n  t['\\uFD7B'] = '\\u063A\\u0645\\u0649';\n  t['\\uFD7C'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7D'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7E'] = '\\u0642\\u0645\\u062D';\n  t['\\uFD7F'] = '\\u0642\\u0645\\u0645';\n  t['\\uFD80'] = '\\u0644\\u062D\\u0645';\n  t['\\uFD81'] = '\\u0644\\u062D\\u064A';\n  t['\\uFD82'] = '\\u0644\\u062D\\u0649';\n  t['\\uFD83'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD84'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD85'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD86'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD87'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD88'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD89'] = '\\u0645\\u062D\\u062C';\n  t['\\uFD8A'] = '\\u0645\\u062D\\u0645';\n  t['\\uFD8B'] = '\\u0645\\u062D\\u064A';\n  t['\\uFD8C'] = '\\u0645\\u062C\\u062D';\n  t['\\uFD8D'] = '\\u0645\\u062C\\u0645';\n  t['\\uFD8E'] = '\\u0645\\u062E\\u062C';\n  t['\\uFD8F'] = '\\u0645\\u062E\\u0645';\n  t['\\uFD92'] = '\\u0645\\u062C\\u062E';\n  t['\\uFD93'] = '\\u0647\\u0645\\u062C';\n  t['\\uFD94'] = '\\u0647\\u0645\\u0645';\n  t['\\uFD95'] = '\\u0646\\u062D\\u0645';\n  t['\\uFD96'] = '\\u0646\\u062D\\u0649';\n  t['\\uFD97'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD98'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD99'] = '\\u0646\\u062C\\u0649';\n  t['\\uFD9A'] = '\\u0646\\u0645\\u064A';\n  t['\\uFD9B'] = '\\u0646\\u0645\\u0649';\n  t['\\uFD9C'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9D'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9E'] = '\\u0628\\u062E\\u064A';\n  t['\\uFD9F'] = '\\u062A\\u062C\\u064A';\n  t['\\uFDA0'] = '\\u062A\\u062C\\u0649';\n  t['\\uFDA1'] = '\\u062A\\u062E\\u064A';\n  t['\\uFDA2'] = '\\u062A\\u062E\\u0649';\n  t['\\uFDA3'] = '\\u062A\\u0645\\u064A';\n  t['\\uFDA4'] = '\\u062A\\u0645\\u0649';\n  t['\\uFDA5'] = '\\u062C\\u0645\\u064A';\n  t['\\uFDA6'] = '\\u062C\\u062D\\u0649';\n  t['\\uFDA7'] = '\\u062C\\u0645\\u0649';\n  t['\\uFDA8'] = '\\u0633\\u062E\\u0649';\n  t['\\uFDA9'] = '\\u0635\\u062D\\u064A';\n  t['\\uFDAA'] = '\\u0634\\u062D\\u064A';\n  t['\\uFDAB'] = '\\u0636\\u062D\\u064A';\n  t['\\uFDAC'] = '\\u0644\\u062C\\u064A';\n  t['\\uFDAD'] = '\\u0644\\u0645\\u064A';\n  t['\\uFDAE'] = '\\u064A\\u062D\\u064A';\n  t['\\uFDAF'] = '\\u064A\\u062C\\u064A';\n  t['\\uFDB0'] = '\\u064A\\u0645\\u064A';\n  t['\\uFDB1'] = '\\u0645\\u0645\\u064A';\n  t['\\uFDB2'] = '\\u0642\\u0645\\u064A';\n  t['\\uFDB3'] = '\\u0646\\u062D\\u064A';\n  t['\\uFDB4'] = '\\u0642\\u0645\\u062D';\n  t['\\uFDB5'] = '\\u0644\\u062D\\u0645';\n  t['\\uFDB6'] = '\\u0639\\u0645\\u064A';\n  t['\\uFDB7'] = '\\u0643\\u0645\\u064A';\n  t['\\uFDB8'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDB9'] = '\\u0645\\u062E\\u064A';\n  t['\\uFDBA'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBB'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDBC'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBD'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDBE'] = '\\u062C\\u062D\\u064A';\n  t['\\uFDBF'] = '\\u062D\\u062C\\u064A';\n  t['\\uFDC0'] = '\\u0645\\u062C\\u064A';\n  t['\\uFDC1'] = '\\u0641\\u0645\\u064A';\n  t['\\uFDC2'] = '\\u0628\\u062D\\u064A';\n  t['\\uFDC3'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDC4'] = '\\u0639\\u062C\\u0645';\n  t['\\uFDC5'] = '\\u0635\\u0645\\u0645';\n  t['\\uFDC6'] = '\\u0633\\u062E\\u064A';\n  t['\\uFDC7'] = '\\u0646\\u062C\\u064A';\n  t['\\uFE49'] = '\\u203E';\n  t['\\uFE4A'] = '\\u203E';\n  t['\\uFE4B'] = '\\u203E';\n  t['\\uFE4C'] = '\\u203E';\n  t['\\uFE4D'] = '_';\n  t['\\uFE4E'] = '_';\n  t['\\uFE4F'] = '_';\n  t['\\uFE80'] = '\\u0621';\n  t['\\uFE81'] = '\\u0622';\n  t['\\uFE82'] = '\\u0622';\n  t['\\uFE83'] = '\\u0623';\n  t['\\uFE84'] = '\\u0623';\n  t['\\uFE85'] = '\\u0624';\n  t['\\uFE86'] = '\\u0624';\n  t['\\uFE87'] = '\\u0625';\n  t['\\uFE88'] = '\\u0625';\n  t['\\uFE89'] = '\\u0626';\n  t['\\uFE8A'] = '\\u0626';\n  t['\\uFE8B'] = '\\u0626';\n  t['\\uFE8C'] = '\\u0626';\n  t['\\uFE8D'] = '\\u0627';\n  t['\\uFE8E'] = '\\u0627';\n  t['\\uFE8F'] = '\\u0628';\n  t['\\uFE90'] = '\\u0628';\n  t['\\uFE91'] = '\\u0628';\n  t['\\uFE92'] = '\\u0628';\n  t['\\uFE93'] = '\\u0629';\n  t['\\uFE94'] = '\\u0629';\n  t['\\uFE95'] = '\\u062A';\n  t['\\uFE96'] = '\\u062A';\n  t['\\uFE97'] = '\\u062A';\n  t['\\uFE98'] = '\\u062A';\n  t['\\uFE99'] = '\\u062B';\n  t['\\uFE9A'] = '\\u062B';\n  t['\\uFE9B'] = '\\u062B';\n  t['\\uFE9C'] = '\\u062B';\n  t['\\uFE9D'] = '\\u062C';\n  t['\\uFE9E'] = '\\u062C';\n  t['\\uFE9F'] = '\\u062C';\n  t['\\uFEA0'] = '\\u062C';\n  t['\\uFEA1'] = '\\u062D';\n  t['\\uFEA2'] = '\\u062D';\n  t['\\uFEA3'] = '\\u062D';\n  t['\\uFEA4'] = '\\u062D';\n  t['\\uFEA5'] = '\\u062E';\n  t['\\uFEA6'] = '\\u062E';\n  t['\\uFEA7'] = '\\u062E';\n  t['\\uFEA8'] = '\\u062E';\n  t['\\uFEA9'] = '\\u062F';\n  t['\\uFEAA'] = '\\u062F';\n  t['\\uFEAB'] = '\\u0630';\n  t['\\uFEAC'] = '\\u0630';\n  t['\\uFEAD'] = '\\u0631';\n  t['\\uFEAE'] = '\\u0631';\n  t['\\uFEAF'] = '\\u0632';\n  t['\\uFEB0'] = '\\u0632';\n  t['\\uFEB1'] = '\\u0633';\n  t['\\uFEB2'] = '\\u0633';\n  t['\\uFEB3'] = '\\u0633';\n  t['\\uFEB4'] = '\\u0633';\n  t['\\uFEB5'] = '\\u0634';\n  t['\\uFEB6'] = '\\u0634';\n  t['\\uFEB7'] = '\\u0634';\n  t['\\uFEB8'] = '\\u0634';\n  t['\\uFEB9'] = '\\u0635';\n  t['\\uFEBA'] = '\\u0635';\n  t['\\uFEBB'] = '\\u0635';\n  t['\\uFEBC'] = '\\u0635';\n  t['\\uFEBD'] = '\\u0636';\n  t['\\uFEBE'] = '\\u0636';\n  t['\\uFEBF'] = '\\u0636';\n  t['\\uFEC0'] = '\\u0636';\n  t['\\uFEC1'] = '\\u0637';\n  t['\\uFEC2'] = '\\u0637';\n  t['\\uFEC3'] = '\\u0637';\n  t['\\uFEC4'] = '\\u0637';\n  t['\\uFEC5'] = '\\u0638';\n  t['\\uFEC6'] = '\\u0638';\n  t['\\uFEC7'] = '\\u0638';\n  t['\\uFEC8'] = '\\u0638';\n  t['\\uFEC9'] = '\\u0639';\n  t['\\uFECA'] = '\\u0639';\n  t['\\uFECB'] = '\\u0639';\n  t['\\uFECC'] = '\\u0639';\n  t['\\uFECD'] = '\\u063A';\n  t['\\uFECE'] = '\\u063A';\n  t['\\uFECF'] = '\\u063A';\n  t['\\uFED0'] = '\\u063A';\n  t['\\uFED1'] = '\\u0641';\n  t['\\uFED2'] = '\\u0641';\n  t['\\uFED3'] = '\\u0641';\n  t['\\uFED4'] = '\\u0641';\n  t['\\uFED5'] = '\\u0642';\n  t['\\uFED6'] = '\\u0642';\n  t['\\uFED7'] = '\\u0642';\n  t['\\uFED8'] = '\\u0642';\n  t['\\uFED9'] = '\\u0643';\n  t['\\uFEDA'] = '\\u0643';\n  t['\\uFEDB'] = '\\u0643';\n  t['\\uFEDC'] = '\\u0643';\n  t['\\uFEDD'] = '\\u0644';\n  t['\\uFEDE'] = '\\u0644';\n  t['\\uFEDF'] = '\\u0644';\n  t['\\uFEE0'] = '\\u0644';\n  t['\\uFEE1'] = '\\u0645';\n  t['\\uFEE2'] = '\\u0645';\n  t['\\uFEE3'] = '\\u0645';\n  t['\\uFEE4'] = '\\u0645';\n  t['\\uFEE5'] = '\\u0646';\n  t['\\uFEE6'] = '\\u0646';\n  t['\\uFEE7'] = '\\u0646';\n  t['\\uFEE8'] = '\\u0646';\n  t['\\uFEE9'] = '\\u0647';\n  t['\\uFEEA'] = '\\u0647';\n  t['\\uFEEB'] = '\\u0647';\n  t['\\uFEEC'] = '\\u0647';\n  t['\\uFEED'] = '\\u0648';\n  t['\\uFEEE'] = '\\u0648';\n  t['\\uFEEF'] = '\\u0649';\n  t['\\uFEF0'] = '\\u0649';\n  t['\\uFEF1'] = '\\u064A';\n  t['\\uFEF2'] = '\\u064A';\n  t['\\uFEF3'] = '\\u064A';\n  t['\\uFEF4'] = '\\u064A';\n  t['\\uFEF5'] = '\\u0644\\u0622';\n  t['\\uFEF6'] = '\\u0644\\u0622';\n  t['\\uFEF7'] = '\\u0644\\u0623';\n  t['\\uFEF8'] = '\\u0644\\u0623';\n  t['\\uFEF9'] = '\\u0644\\u0625';\n  t['\\uFEFA'] = '\\u0644\\u0625';\n  t['\\uFEFB'] = '\\u0644\\u0627';\n  t['\\uFEFC'] = '\\u0644\\u0627';\n});\nfunction reverseIfRtl(chars) {\n  var charsLength = chars.length;\n  if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n    return chars;\n  }\n  var s = '';\n  for (var ii = charsLength - 1; ii >= 0; ii--) {\n    s += chars[ii];\n  }\n  return s;\n}\nexports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\nexports.reverseIfRtl = reverseIfRtl;\nexports.getUnicodeRangeFor = getUnicodeRangeFor;\nexports.getNormalizedUnicodes = getNormalizedUnicodes;\nexports.getUnicodeForGlyph = getUnicodeForGlyph;\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptCompiler = exports.PostScriptEvaluator = exports.PDFFunctionFactory = exports.isPDFFunction = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _ps_parser = __w_pdfjs_require__(141);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar IsEvalSupportedCached = {\n  get value() {\n    return (0, _util.shadow)(this, 'value', (0, _util.isEvalSupported)());\n  }\n};\n\nvar PDFFunctionFactory = function () {\n  function PDFFunctionFactory(_ref) {\n    var xref = _ref.xref,\n        _ref$isEvalSupported = _ref.isEvalSupported,\n        isEvalSupported = _ref$isEvalSupported === undefined ? true : _ref$isEvalSupported;\n\n    _classCallCheck(this, PDFFunctionFactory);\n\n    this.xref = xref;\n    this.isEvalSupported = isEvalSupported !== false;\n  }\n\n  _createClass(PDFFunctionFactory, [{\n    key: 'create',\n    value: function create(fn) {\n      return PDFFunction.parse({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }, {\n    key: 'createFromArray',\n    value: function createFromArray(fnObj) {\n      return PDFFunction.parseArray({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fnObj: fnObj\n      });\n    }\n  }, {\n    key: 'createFromIR',\n    value: function createFromIR(IR) {\n      return PDFFunction.fromIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        IR: IR\n      });\n    }\n  }, {\n    key: 'createIR',\n    value: function createIR(fn) {\n      return PDFFunction.getIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }]);\n\n  return PDFFunctionFactory;\n}();\n\nvar PDFFunction = function PDFFunctionClosure() {\n  var CONSTRUCT_SAMPLED = 0;\n  var CONSTRUCT_INTERPOLATED = 2;\n  var CONSTRUCT_STICHED = 3;\n  var CONSTRUCT_POSTSCRIPT = 4;\n  return {\n    getSampleArray: function getSampleArray(size, outputSize, bps, stream) {\n      var i, ii;\n      var length = 1;\n      for (i = 0, ii = size.length; i < ii; i++) {\n        length *= size[i];\n      }\n      length *= outputSize;\n      var array = new Array(length);\n      var codeSize = 0;\n      var codeBuf = 0;\n      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n      var strBytes = stream.getBytes((length * bps + 7) / 8);\n      var strIdx = 0;\n      for (i = 0; i < length; i++) {\n        while (codeSize < bps) {\n          codeBuf <<= 8;\n          codeBuf |= strBytes[strIdx++];\n          codeSize += 8;\n        }\n        codeSize -= bps;\n        array[i] = (codeBuf >> codeSize) * sampleMul;\n        codeBuf &= (1 << codeSize) - 1;\n      }\n      return array;\n    },\n    getIR: function getIR(_ref2) {\n      var xref = _ref2.xref,\n          isEvalSupported = _ref2.isEvalSupported,\n          fn = _ref2.fn;\n\n      var dict = fn.dict;\n      if (!dict) {\n        dict = fn;\n      }\n      var types = [this.constructSampled, null, this.constructInterpolated, this.constructStiched, this.constructPostScript];\n      var typeNum = dict.get('FunctionType');\n      var typeFn = types[typeNum];\n      if (!typeFn) {\n        throw new _util.FormatError('Unknown type of function');\n      }\n      return typeFn.call(this, {\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn,\n        dict: dict\n      });\n    },\n    fromIR: function fromIR(_ref3) {\n      var xref = _ref3.xref,\n          isEvalSupported = _ref3.isEvalSupported,\n          IR = _ref3.IR;\n\n      var type = IR[0];\n      switch (type) {\n        case CONSTRUCT_SAMPLED:\n          return this.constructSampledFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_INTERPOLATED:\n          return this.constructInterpolatedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_STICHED:\n          return this.constructStichedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        default:\n          return this.constructPostScriptFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n      }\n    },\n    parse: function parse(_ref4) {\n      var xref = _ref4.xref,\n          isEvalSupported = _ref4.isEvalSupported,\n          fn = _ref4.fn;\n\n      var IR = this.getIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn\n      });\n      return this.fromIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        IR: IR\n      });\n    },\n    parseArray: function parseArray(_ref5) {\n      var xref = _ref5.xref,\n          isEvalSupported = _ref5.isEvalSupported,\n          fnObj = _ref5.fnObj;\n\n      if (!Array.isArray(fnObj)) {\n        return this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: fnObj\n        });\n      }\n      var fnArray = [];\n      for (var j = 0, jj = fnObj.length; j < jj; j++) {\n        fnArray.push(this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnObj[j])\n        }));\n      }\n      return function (src, srcOffset, dest, destOffset) {\n        for (var i = 0, ii = fnArray.length; i < ii; i++) {\n          fnArray[i](src, srcOffset, dest, destOffset + i);\n        }\n      };\n    },\n    constructSampled: function constructSampled(_ref6) {\n      var xref = _ref6.xref,\n          isEvalSupported = _ref6.isEvalSupported,\n          fn = _ref6.fn,\n          dict = _ref6.dict;\n\n      function toMultiArray(arr) {\n        var inputLength = arr.length;\n        var out = [];\n        var index = 0;\n        for (var i = 0; i < inputLength; i += 2) {\n          out[index] = [arr[i], arr[i + 1]];\n          ++index;\n        }\n        return out;\n      }\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain || !range) {\n        throw new _util.FormatError('No domain or range');\n      }\n      var inputSize = domain.length / 2;\n      var outputSize = range.length / 2;\n      domain = toMultiArray(domain);\n      range = toMultiArray(range);\n      var size = dict.get('Size');\n      var bps = dict.get('BitsPerSample');\n      var order = dict.get('Order') || 1;\n      if (order !== 1) {\n        (0, _util.info)('No support for cubic spline interpolation: ' + order);\n      }\n      var encode = dict.getArray('Encode');\n      if (!encode) {\n        encode = [];\n        for (var i = 0; i < inputSize; ++i) {\n          encode.push(0);\n          encode.push(size[i] - 1);\n        }\n      }\n      encode = toMultiArray(encode);\n      var decode = dict.getArray('Decode');\n      if (!decode) {\n        decode = range;\n      } else {\n        decode = toMultiArray(decode);\n      }\n      var samples = this.getSampleArray(size, outputSize, bps, fn);\n      return [CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size, outputSize, Math.pow(2, bps) - 1, range];\n    },\n    constructSampledFromIR: function constructSampledFromIR(_ref7) {\n      var xref = _ref7.xref,\n          isEvalSupported = _ref7.isEvalSupported,\n          IR = _ref7.IR;\n\n      function interpolate(x, xmin, xmax, ymin, ymax) {\n        return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n      }\n      return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n        var m = IR[1];\n        var domain = IR[2];\n        var encode = IR[3];\n        var decode = IR[4];\n        var samples = IR[5];\n        var size = IR[6];\n        var n = IR[7];\n        var range = IR[9];\n        var cubeVertices = 1 << m;\n        var cubeN = new Float64Array(cubeVertices);\n        var cubeVertex = new Uint32Array(cubeVertices);\n        var i, j;\n        for (j = 0; j < cubeVertices; j++) {\n          cubeN[j] = 1;\n        }\n        var k = n,\n            pos = 1;\n        for (i = 0; i < m; ++i) {\n          var domain_2i = domain[i][0];\n          var domain_2i_1 = domain[i][1];\n          var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n          var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n          var size_i = size[i];\n          e = Math.min(Math.max(e, 0), size_i - 1);\n          var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n          var n0 = e0 + 1 - e;\n          var n1 = e - e0;\n          var offset0 = e0 * k;\n          var offset1 = offset0 + k;\n          for (j = 0; j < cubeVertices; j++) {\n            if (j & pos) {\n              cubeN[j] *= n1;\n              cubeVertex[j] += offset1;\n            } else {\n              cubeN[j] *= n0;\n              cubeVertex[j] += offset0;\n            }\n          }\n          k *= size_i;\n          pos <<= 1;\n        }\n        for (j = 0; j < n; ++j) {\n          var rj = 0;\n          for (i = 0; i < cubeVertices; i++) {\n            rj += samples[cubeVertex[i] + j] * cubeN[i];\n          }\n          rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n          dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n        }\n      };\n    },\n    constructInterpolated: function constructInterpolated(_ref8) {\n      var xref = _ref8.xref,\n          isEvalSupported = _ref8.isEvalSupported,\n          fn = _ref8.fn,\n          dict = _ref8.dict;\n\n      var c0 = dict.getArray('C0') || [0];\n      var c1 = dict.getArray('C1') || [1];\n      var n = dict.get('N');\n      if (!Array.isArray(c0) || !Array.isArray(c1)) {\n        throw new _util.FormatError('Illegal dictionary for interpolated function');\n      }\n      var length = c0.length;\n      var diff = [];\n      for (var i = 0; i < length; ++i) {\n        diff.push(c1[i] - c0[i]);\n      }\n      return [CONSTRUCT_INTERPOLATED, c0, diff, n];\n    },\n    constructInterpolatedFromIR: function constructInterpolatedFromIR(_ref9) {\n      var xref = _ref9.xref,\n          isEvalSupported = _ref9.isEvalSupported,\n          IR = _ref9.IR;\n\n      var c0 = IR[1];\n      var diff = IR[2];\n      var n = IR[3];\n      var length = diff.length;\n      return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n        var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n        for (var j = 0; j < length; ++j) {\n          dest[destOffset + j] = c0[j] + x * diff[j];\n        }\n      };\n    },\n    constructStiched: function constructStiched(_ref10) {\n      var xref = _ref10.xref,\n          isEvalSupported = _ref10.isEvalSupported,\n          fn = _ref10.fn,\n          dict = _ref10.dict;\n\n      var domain = dict.getArray('Domain');\n      if (!domain) {\n        throw new _util.FormatError('No domain');\n      }\n      var inputSize = domain.length / 2;\n      if (inputSize !== 1) {\n        throw new _util.FormatError('Bad domain for stiched function');\n      }\n      var fnRefs = dict.get('Functions');\n      var fns = [];\n      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n        fns.push(this.getIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnRefs[i])\n        }));\n      }\n      var bounds = dict.getArray('Bounds');\n      var encode = dict.getArray('Encode');\n      return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\n    },\n    constructStichedFromIR: function constructStichedFromIR(_ref11) {\n      var xref = _ref11.xref,\n          isEvalSupported = _ref11.isEvalSupported,\n          IR = _ref11.IR;\n\n      var domain = IR[1];\n      var bounds = IR[2];\n      var encode = IR[3];\n      var fnsIR = IR[4];\n      var fns = [];\n      var tmpBuf = new Float32Array(1);\n      for (var i = 0, ii = fnsIR.length; i < ii; i++) {\n        fns.push(this.fromIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          IR: fnsIR[i]\n        }));\n      }\n      return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n        var clip = function constructStichedFromIRClip(v, min, max) {\n          if (v > max) {\n            v = max;\n          } else if (v < min) {\n            v = min;\n          }\n          return v;\n        };\n        var v = clip(src[srcOffset], domain[0], domain[1]);\n        for (var i = 0, ii = bounds.length; i < ii; ++i) {\n          if (v < bounds[i]) {\n            break;\n          }\n        }\n        var dmin = domain[0];\n        if (i > 0) {\n          dmin = bounds[i - 1];\n        }\n        var dmax = domain[1];\n        if (i < bounds.length) {\n          dmax = bounds[i];\n        }\n        var rmin = encode[2 * i];\n        var rmax = encode[2 * i + 1];\n        tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n        fns[i](tmpBuf, 0, dest, destOffset);\n      };\n    },\n    constructPostScript: function constructPostScript(_ref12) {\n      var xref = _ref12.xref,\n          isEvalSupported = _ref12.isEvalSupported,\n          fn = _ref12.fn,\n          dict = _ref12.dict;\n\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain) {\n        throw new _util.FormatError('No domain.');\n      }\n      if (!range) {\n        throw new _util.FormatError('No range.');\n      }\n      var lexer = new _ps_parser.PostScriptLexer(fn);\n      var parser = new _ps_parser.PostScriptParser(lexer);\n      var code = parser.parse();\n      return [CONSTRUCT_POSTSCRIPT, domain, range, code];\n    },\n    constructPostScriptFromIR: function constructPostScriptFromIR(_ref13) {\n      var xref = _ref13.xref,\n          isEvalSupported = _ref13.isEvalSupported,\n          IR = _ref13.IR;\n\n      var domain = IR[1];\n      var range = IR[2];\n      var code = IR[3];\n      if (isEvalSupported && IsEvalSupportedCached.value) {\n        var compiled = new PostScriptCompiler().compile(code, domain, range);\n        if (compiled) {\n          return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n        }\n      }\n      (0, _util.info)('Unable to compile PS function');\n      var numOutputs = range.length >> 1;\n      var numInputs = domain.length >> 1;\n      var evaluator = new PostScriptEvaluator(code);\n      var cache = Object.create(null);\n      var MAX_CACHE_SIZE = 2048 * 4;\n      var cache_available = MAX_CACHE_SIZE;\n      var tmpBuf = new Float32Array(numInputs);\n      return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n        var i, value;\n        var key = '';\n        var input = tmpBuf;\n        for (i = 0; i < numInputs; i++) {\n          value = src[srcOffset + i];\n          input[i] = value;\n          key += value + '_';\n        }\n        var cachedValue = cache[key];\n        if (cachedValue !== undefined) {\n          dest.set(cachedValue, destOffset);\n          return;\n        }\n        var output = new Float32Array(numOutputs);\n        var stack = evaluator.execute(input);\n        var stackIndex = stack.length - numOutputs;\n        for (i = 0; i < numOutputs; i++) {\n          value = stack[stackIndex + i];\n          var bound = range[i * 2];\n          if (value < bound) {\n            value = bound;\n          } else {\n            bound = range[i * 2 + 1];\n            if (value > bound) {\n              value = bound;\n            }\n          }\n          output[i] = value;\n        }\n        if (cache_available > 0) {\n          cache_available--;\n          cache[key] = output;\n        }\n        dest.set(output, destOffset);\n      };\n    }\n  };\n}();\nfunction isPDFFunction(v) {\n  var fnDict;\n  if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) !== 'object') {\n    return false;\n  } else if ((0, _primitives.isDict)(v)) {\n    fnDict = v;\n  } else if ((0, _primitives.isStream)(v)) {\n    fnDict = v.dict;\n  } else {\n    return false;\n  }\n  return fnDict.has('FunctionType');\n}\nvar PostScriptStack = function PostScriptStackClosure() {\n  var MAX_STACK_SIZE = 100;\n  function PostScriptStack(initialStack) {\n    this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n  }\n  PostScriptStack.prototype = {\n    push: function PostScriptStack_push(value) {\n      if (this.stack.length >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      this.stack.push(value);\n    },\n    pop: function PostScriptStack_pop() {\n      if (this.stack.length <= 0) {\n        throw new Error('PostScript function stack underflow.');\n      }\n      return this.stack.pop();\n    },\n    copy: function PostScriptStack_copy(n) {\n      if (this.stack.length + n >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      var stack = this.stack;\n      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n        stack.push(stack[i]);\n      }\n    },\n    index: function PostScriptStack_index(n) {\n      this.push(this.stack[this.stack.length - n - 1]);\n    },\n    roll: function PostScriptStack_roll(n, p) {\n      var stack = this.stack;\n      var l = stack.length - n;\n      var r = stack.length - 1,\n          c = l + (p - Math.floor(p / n) * n),\n          i,\n          j,\n          t;\n      for (i = l, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = l, j = c - 1; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = c, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n    }\n  };\n  return PostScriptStack;\n}();\nvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n  function PostScriptEvaluator(operators) {\n    this.operators = operators;\n  }\n  PostScriptEvaluator.prototype = {\n    execute: function PostScriptEvaluator_execute(initialStack) {\n      var stack = new PostScriptStack(initialStack);\n      var counter = 0;\n      var operators = this.operators;\n      var length = operators.length;\n      var operator, a, b;\n      while (counter < length) {\n        operator = operators[counter++];\n        if (typeof operator === 'number') {\n          stack.push(operator);\n          continue;\n        }\n        switch (operator) {\n          case 'jz':\n            b = stack.pop();\n            a = stack.pop();\n            if (!a) {\n              counter = b;\n            }\n            break;\n          case 'j':\n            a = stack.pop();\n            counter = a;\n            break;\n          case 'abs':\n            a = stack.pop();\n            stack.push(Math.abs(a));\n            break;\n          case 'add':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a + b);\n            break;\n          case 'and':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a && b);\n            } else {\n              stack.push(a & b);\n            }\n            break;\n          case 'atan':\n            a = stack.pop();\n            stack.push(Math.atan(a));\n            break;\n          case 'bitshift':\n            b = stack.pop();\n            a = stack.pop();\n            if (a > 0) {\n              stack.push(a << b);\n            } else {\n              stack.push(a >> b);\n            }\n            break;\n          case 'ceiling':\n            a = stack.pop();\n            stack.push(Math.ceil(a));\n            break;\n          case 'copy':\n            a = stack.pop();\n            stack.copy(a);\n            break;\n          case 'cos':\n            a = stack.pop();\n            stack.push(Math.cos(a));\n            break;\n          case 'cvi':\n            a = stack.pop() | 0;\n            stack.push(a);\n            break;\n          case 'cvr':\n            break;\n          case 'div':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b);\n            break;\n          case 'dup':\n            stack.copy(1);\n            break;\n          case 'eq':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a === b);\n            break;\n          case 'exch':\n            stack.roll(2, 1);\n            break;\n          case 'exp':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(Math.pow(a, b));\n            break;\n          case 'false':\n            stack.push(false);\n            break;\n          case 'floor':\n            a = stack.pop();\n            stack.push(Math.floor(a));\n            break;\n          case 'ge':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a >= b);\n            break;\n          case 'gt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a > b);\n            break;\n          case 'idiv':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b | 0);\n            break;\n          case 'index':\n            a = stack.pop();\n            stack.index(a);\n            break;\n          case 'le':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a <= b);\n            break;\n          case 'ln':\n            a = stack.pop();\n            stack.push(Math.log(a));\n            break;\n          case 'log':\n            a = stack.pop();\n            stack.push(Math.log(a) / Math.LN10);\n            break;\n          case 'lt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a < b);\n            break;\n          case 'mod':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a % b);\n            break;\n          case 'mul':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a * b);\n            break;\n          case 'ne':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a !== b);\n            break;\n          case 'neg':\n            a = stack.pop();\n            stack.push(-a);\n            break;\n          case 'not':\n            a = stack.pop();\n            if ((0, _util.isBool)(a)) {\n              stack.push(!a);\n            } else {\n              stack.push(~a);\n            }\n            break;\n          case 'or':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a || b);\n            } else {\n              stack.push(a | b);\n            }\n            break;\n          case 'pop':\n            stack.pop();\n            break;\n          case 'roll':\n            b = stack.pop();\n            a = stack.pop();\n            stack.roll(a, b);\n            break;\n          case 'round':\n            a = stack.pop();\n            stack.push(Math.round(a));\n            break;\n          case 'sin':\n            a = stack.pop();\n            stack.push(Math.sin(a));\n            break;\n          case 'sqrt':\n            a = stack.pop();\n            stack.push(Math.sqrt(a));\n            break;\n          case 'sub':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a - b);\n            break;\n          case 'true':\n            stack.push(true);\n            break;\n          case 'truncate':\n            a = stack.pop();\n            a = a < 0 ? Math.ceil(a) : Math.floor(a);\n            stack.push(a);\n            break;\n          case 'xor':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a !== b);\n            } else {\n              stack.push(a ^ b);\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown operator ' + operator);\n        }\n      }\n      return stack.stack;\n    }\n  };\n  return PostScriptEvaluator;\n}();\nvar PostScriptCompiler = function PostScriptCompilerClosure() {\n  function AstNode(type) {\n    this.type = type;\n  }\n  AstNode.prototype.visit = function (visitor) {\n    throw new Error('abstract method');\n  };\n  function AstArgument(index, min, max) {\n    AstNode.call(this, 'args');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstArgument.prototype = Object.create(AstNode.prototype);\n  AstArgument.prototype.visit = function (visitor) {\n    visitor.visitArgument(this);\n  };\n  function AstLiteral(number) {\n    AstNode.call(this, 'literal');\n    this.number = number;\n    this.min = number;\n    this.max = number;\n  }\n  AstLiteral.prototype = Object.create(AstNode.prototype);\n  AstLiteral.prototype.visit = function (visitor) {\n    visitor.visitLiteral(this);\n  };\n  function AstBinaryOperation(op, arg1, arg2, min, max) {\n    AstNode.call(this, 'binary');\n    this.op = op;\n    this.arg1 = arg1;\n    this.arg2 = arg2;\n    this.min = min;\n    this.max = max;\n  }\n  AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n  AstBinaryOperation.prototype.visit = function (visitor) {\n    visitor.visitBinaryOperation(this);\n  };\n  function AstMin(arg, max) {\n    AstNode.call(this, 'max');\n    this.arg = arg;\n    this.min = arg.min;\n    this.max = max;\n  }\n  AstMin.prototype = Object.create(AstNode.prototype);\n  AstMin.prototype.visit = function (visitor) {\n    visitor.visitMin(this);\n  };\n  function AstVariable(index, min, max) {\n    AstNode.call(this, 'var');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstVariable.prototype = Object.create(AstNode.prototype);\n  AstVariable.prototype.visit = function (visitor) {\n    visitor.visitVariable(this);\n  };\n  function AstVariableDefinition(variable, arg) {\n    AstNode.call(this, 'definition');\n    this.variable = variable;\n    this.arg = arg;\n  }\n  AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n  AstVariableDefinition.prototype.visit = function (visitor) {\n    visitor.visitVariableDefinition(this);\n  };\n  function ExpressionBuilderVisitor() {\n    this.parts = [];\n  }\n  ExpressionBuilderVisitor.prototype = {\n    visitArgument: function visitArgument(arg) {\n      this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\n    },\n    visitVariable: function visitVariable(variable) {\n      this.parts.push('v', variable.index);\n    },\n    visitLiteral: function visitLiteral(literal) {\n      this.parts.push(literal.number);\n    },\n    visitBinaryOperation: function visitBinaryOperation(operation) {\n      this.parts.push('(');\n      operation.arg1.visit(this);\n      this.parts.push(' ', operation.op, ' ');\n      operation.arg2.visit(this);\n      this.parts.push(')');\n    },\n    visitVariableDefinition: function visitVariableDefinition(definition) {\n      this.parts.push('var ');\n      definition.variable.visit(this);\n      this.parts.push(' = ');\n      definition.arg.visit(this);\n      this.parts.push(';');\n    },\n    visitMin: function visitMin(max) {\n      this.parts.push('Math.min(');\n      max.arg.visit(this);\n      this.parts.push(', ', max.max, ')');\n    },\n    toString: function toString() {\n      return this.parts.join('');\n    }\n  };\n  function buildAddOperation(num1, num2) {\n    if (num2.type === 'literal' && num2.number === 0) {\n      return num1;\n    }\n    if (num1.type === 'literal' && num1.number === 0) {\n      return num2;\n    }\n    if (num2.type === 'literal' && num1.type === 'literal') {\n      return new AstLiteral(num1.number + num2.number);\n    }\n    return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\n  }\n  function buildMulOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return new AstLiteral(0);\n      } else if (num2.number === 1) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number * num2.number);\n      }\n    }\n    if (num1.type === 'literal') {\n      if (num1.number === 0) {\n        return new AstLiteral(0);\n      } else if (num1.number === 1) {\n        return num2;\n      }\n    }\n    var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    return new AstBinaryOperation('*', num1, num2, min, max);\n  }\n  function buildSubOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number - num2.number);\n      }\n    }\n    if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n      return num2.arg2;\n    }\n    return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\n  }\n  function buildMinOperation(num1, max) {\n    if (num1.min >= max) {\n      return new AstLiteral(max);\n    } else if (num1.max <= max) {\n      return num1;\n    }\n    return new AstMin(num1, max);\n  }\n  function PostScriptCompiler() {}\n  PostScriptCompiler.prototype = {\n    compile: function PostScriptCompiler_compile(code, domain, range) {\n      var stack = [];\n      var i, ii;\n      var instructions = [];\n      var inputSize = domain.length >> 1,\n          outputSize = range.length >> 1;\n      var lastRegister = 0;\n      var n, j;\n      var num1, num2, ast1, ast2, tmpVar, item;\n      for (i = 0; i < inputSize; i++) {\n        stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n      }\n      for (i = 0, ii = code.length; i < ii; i++) {\n        item = code[i];\n        if (typeof item === 'number') {\n          stack.push(new AstLiteral(item));\n          continue;\n        }\n        switch (item) {\n          case 'add':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildAddOperation(num1, num2));\n            break;\n          case 'cvr':\n            if (stack.length < 1) {\n              return null;\n            }\n            break;\n          case 'mul':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildMulOperation(num1, num2));\n            break;\n          case 'sub':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildSubOperation(num1, num2));\n            break;\n          case 'exch':\n            if (stack.length < 2) {\n              return null;\n            }\n            ast1 = stack.pop();\n            ast2 = stack.pop();\n            stack.push(ast1, ast2);\n            break;\n          case 'pop':\n            if (stack.length < 1) {\n              return null;\n            }\n            stack.pop();\n            break;\n          case 'index':\n            if (stack.length < 1) {\n              return null;\n            }\n            num1 = stack.pop();\n            if (num1.type !== 'literal') {\n              return null;\n            }\n            n = num1.number;\n            if (n < 0 || !Number.isInteger(n) || stack.length < n) {\n              return null;\n            }\n            ast1 = stack[stack.length - n - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - n - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'dup':\n            if (stack.length < 1) {\n              return null;\n            }\n            if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n              num1 = stack.pop();\n              stack.push(buildMinOperation(num1, code[i + 1]));\n              i += 6;\n              break;\n            }\n            ast1 = stack[stack.length - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'roll':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            if (num2.type !== 'literal' || num1.type !== 'literal') {\n              return null;\n            }\n            j = num2.number;\n            n = num1.number;\n            if (n <= 0 || !Number.isInteger(n) || !Number.isInteger(j) || stack.length < n) {\n              return null;\n            }\n            j = (j % n + n) % n;\n            if (j === 0) {\n              break;\n            }\n            Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n            break;\n          default:\n            return null;\n        }\n      }\n      if (stack.length !== outputSize) {\n        return null;\n      }\n      var result = [];\n      instructions.forEach(function (instruction) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        instruction.visit(statementBuilder);\n        result.push(statementBuilder.toString());\n      });\n      stack.forEach(function (expr, i) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        expr.visit(statementBuilder);\n        var min = range[i * 2],\n            max = range[i * 2 + 1];\n        var out = [statementBuilder.toString()];\n        if (min > expr.min) {\n          out.unshift('Math.max(', min, ', ');\n          out.push(')');\n        }\n        if (max < expr.max) {\n          out.unshift('Math.min(', max, ', ');\n          out.push(')');\n        }\n        out.unshift('dest[destOffset + ', i, '] = ');\n        out.push(';');\n        result.push(out.join(''));\n      });\n      return result.join('\\n');\n    }\n  };\n  return PostScriptCompiler;\n}();\nexports.isPDFFunction = isPDFFunction;\nexports.PDFFunctionFactory = PDFFunctionFactory;\nexports.PostScriptEvaluator = PostScriptEvaluator;\nexports.PostScriptCompiler = PostScriptCompiler;\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar pdfjsVersion = '1.10.97';\nvar pdfjsBuild = '7d0fce73';\nvar pdfjsCoreWorker = __w_pdfjs_require__(83);\nexports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkerMessageHandler = exports.WorkerTask = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _pdf_manager = __w_pdfjs_require__(126);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar WorkerTask = function WorkerTaskClosure() {\n  function WorkerTask(name) {\n    this.name = name;\n    this.terminated = false;\n    this._capability = (0, _util.createPromiseCapability)();\n  }\n  WorkerTask.prototype = {\n    get finished() {\n      return this._capability.promise;\n    },\n    finish: function finish() {\n      this._capability.resolve();\n    },\n    terminate: function terminate() {\n      this.terminated = true;\n    },\n    ensureNotTerminated: function ensureNotTerminated() {\n      if (this.terminated) {\n        throw new Error('Worker task was terminated');\n      }\n    }\n  };\n  return WorkerTask;\n}();\n;\nvar PDFWorkerStream = function PDFWorkerStreamClosure() {\n  function PDFWorkerStream(msgHandler) {\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n  PDFWorkerStream.prototype = {\n    getFullReader: function getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader);\n      this._fullRequestReader = new PDFWorkerStreamReader(this._msgHandler);\n      return this._fullRequestReader;\n    },\n    getRangeReader: function getRangeReader(begin, end) {\n      var reader = new PDFWorkerStreamRangeReader(begin, end, this._msgHandler);\n      this._rangeRequestReaders.push(reader);\n      return reader;\n    },\n    cancelAllRequests: function cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n      var readers = this._rangeRequestReaders.slice(0);\n      readers.forEach(function (reader) {\n        reader.cancel(reason);\n      });\n    }\n  };\n  function PDFWorkerStreamReader(msgHandler) {\n    var _this = this;\n\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._isRangeSupported = false;\n    this._isStreamingSupported = false;\n    var readableStream = this._msgHandler.sendWithStream('GetReader');\n    this._reader = readableStream.getReader();\n    this._headersReady = this._msgHandler.sendWithPromise('ReaderHeadersReady').then(function (data) {\n      _this._isStreamingSupported = data.isStreamingSupported;\n      _this._isRangeSupported = data.isRangeSupported;\n      _this._contentLength = data.contentLength;\n    });\n  }\n  PDFWorkerStreamReader.prototype = {\n    get headersReady() {\n      return this._headersReady;\n    },\n    get contentLength() {\n      return this._contentLength;\n    },\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    },\n    get isRangeSupported() {\n      return this._isRangeSupported;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref) {\n        var value = _ref.value,\n            done = _ref.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  function PDFWorkerStreamRangeReader(begin, end, msgHandler) {\n    this._msgHandler = msgHandler;\n    this.onProgress = null;\n    var readableStream = this._msgHandler.sendWithStream('GetRangeReader', {\n      begin: begin,\n      end: end\n    });\n    this._reader = readableStream.getReader();\n  }\n  PDFWorkerStreamRangeReader.prototype = {\n    get isStreamingSupported() {\n      return false;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref2) {\n        var value = _ref2.value,\n            done = _ref2.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  return PDFWorkerStream;\n}();\nvar WorkerMessageHandler = {\n  setup: function setup(handler, port) {\n    var testMessageProcessed = false;\n    handler.on('test', function wphSetupTest(data) {\n      if (testMessageProcessed) {\n        return;\n      }\n      testMessageProcessed = true;\n      if (!(data instanceof Uint8Array)) {\n        handler.send('test', 'main', false);\n        return;\n      }\n      var supportTransfers = data[0] === 255;\n      handler.postMessageTransfers = supportTransfers;\n      var xhr = new XMLHttpRequest();\n      var responseExists = 'response' in xhr;\n      try {\n        xhr.responseType;\n      } catch (e) {\n        responseExists = false;\n      }\n      if (!responseExists) {\n        handler.send('test', false);\n        return;\n      }\n      handler.send('test', {\n        supportTypedArray: true,\n        supportTransfers: supportTransfers\n      });\n    });\n    handler.on('configure', function wphConfigure(data) {\n      (0, _util.setVerbosityLevel)(data.verbosity);\n    });\n    handler.on('GetDocRequest', function wphSetupDoc(data) {\n      return WorkerMessageHandler.createDocumentHandler(data, port);\n    });\n  },\n  createDocumentHandler: function createDocumentHandler(docParams, port) {\n    var pdfManager;\n    var terminated = false;\n    var cancelXHRs = null;\n    var WorkerTasks = [];\n    var apiVersion = docParams.apiVersion;\n    var workerVersion = '1.10.97';\n    if (apiVersion !== null && apiVersion !== workerVersion) {\n      throw new Error('The API version \"' + apiVersion + '\" does not match ' + ('the Worker version \"' + workerVersion + '\".'));\n    }\n    var docId = docParams.docId;\n    var docBaseUrl = docParams.docBaseUrl;\n    var workerHandlerName = docParams.docId + '_worker';\n    var handler = new _util.MessageHandler(workerHandlerName, docId, port);\n    handler.postMessageTransfers = docParams.postMessageTransfers;\n    function ensureNotTerminated() {\n      if (terminated) {\n        throw new Error('Worker was terminated');\n      }\n    }\n    function startWorkerTask(task) {\n      WorkerTasks.push(task);\n    }\n    function finishWorkerTask(task) {\n      task.finish();\n      var i = WorkerTasks.indexOf(task);\n      WorkerTasks.splice(i, 1);\n    }\n    function loadDocument(recoveryMode) {\n      var loadDocumentCapability = (0, _util.createPromiseCapability)();\n      var parseSuccess = function parseSuccess() {\n        var numPagesPromise = pdfManager.ensureDoc('numPages');\n        var fingerprintPromise = pdfManager.ensureDoc('fingerprint');\n        var encryptedPromise = pdfManager.ensureXRef('encrypt');\n        Promise.all([numPagesPromise, fingerprintPromise, encryptedPromise]).then(function onDocReady(results) {\n          var doc = {\n            numPages: results[0],\n            fingerprint: results[1],\n            encrypted: !!results[2]\n          };\n          loadDocumentCapability.resolve(doc);\n        }, parseFailure);\n      };\n      var parseFailure = function parseFailure(e) {\n        loadDocumentCapability.reject(e);\n      };\n      pdfManager.ensureDoc('checkHeader', []).then(function () {\n        pdfManager.ensureDoc('parseStartXRef', []).then(function () {\n          pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\n        }, parseFailure);\n      }, parseFailure);\n      return loadDocumentCapability.promise;\n    }\n    function getPdfManager(data, evaluatorOptions) {\n      var pdfManagerCapability = (0, _util.createPromiseCapability)();\n      var pdfManager;\n      var source = data.source;\n      if (source.data) {\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        return pdfManagerCapability.promise;\n      }\n      var pdfStream,\n          cachedChunks = [];\n      try {\n        pdfStream = new PDFWorkerStream(handler);\n      } catch (ex) {\n        pdfManagerCapability.reject(ex);\n        return pdfManagerCapability.promise;\n      }\n      var fullRequest = pdfStream.getFullReader();\n      fullRequest.headersReady.then(function () {\n        if (!fullRequest.isRangeSupported) {\n          return;\n        }\n        var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n        pdfManager = new _pdf_manager.NetworkPdfManager(docId, pdfStream, {\n          msgHandler: handler,\n          url: source.url,\n          password: source.password,\n          length: fullRequest.contentLength,\n          disableAutoFetch: disableAutoFetch,\n          rangeChunkSize: source.rangeChunkSize\n        }, evaluatorOptions, docBaseUrl);\n        for (var i = 0; i < cachedChunks.length; i++) {\n          pdfManager.sendProgressiveData(cachedChunks[i]);\n        }\n        cachedChunks = [];\n        pdfManagerCapability.resolve(pdfManager);\n        cancelXHRs = null;\n      }).catch(function (reason) {\n        pdfManagerCapability.reject(reason);\n        cancelXHRs = null;\n      });\n      var loaded = 0;\n      var flushChunks = function flushChunks() {\n        var pdfFile = (0, _util.arraysToBytes)(cachedChunks);\n        if (source.length && pdfFile.length !== source.length) {\n          (0, _util.warn)('reported HTTP length is different from actual');\n        }\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        cachedChunks = [];\n      };\n      var readPromise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            ensureNotTerminated();\n            if (chunk.done) {\n              if (!pdfManager) {\n                flushChunks();\n              }\n              cancelXHRs = null;\n              return;\n            }\n            var data = chunk.value;\n            loaded += (0, _util.arrayByteLength)(data);\n            if (!fullRequest.isStreamingSupported) {\n              handler.send('DocProgress', {\n                loaded: loaded,\n                total: Math.max(loaded, fullRequest.contentLength || 0)\n              });\n            }\n            if (pdfManager) {\n              pdfManager.sendProgressiveData(data);\n            } else {\n              cachedChunks.push(data);\n            }\n            fullRequest.read().then(readChunk, reject);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        fullRequest.read().then(readChunk, reject);\n      });\n      readPromise.catch(function (e) {\n        pdfManagerCapability.reject(e);\n        cancelXHRs = null;\n      });\n      cancelXHRs = function cancelXHRs() {\n        pdfStream.cancelAllRequests('abort');\n      };\n      return pdfManagerCapability.promise;\n    }\n    function setupDoc(data) {\n      function onSuccess(doc) {\n        ensureNotTerminated();\n        handler.send('GetDoc', { pdfInfo: doc });\n      }\n      function onFailure(e) {\n        ensureNotTerminated();\n        if (e instanceof _util.PasswordException) {\n          var task = new WorkerTask('PasswordException: response ' + e.code);\n          startWorkerTask(task);\n          handler.sendWithPromise('PasswordRequest', e).then(function (data) {\n            finishWorkerTask(task);\n            pdfManager.updatePassword(data.password);\n            pdfManagerReady();\n          }).catch(function (ex) {\n            finishWorkerTask(task);\n            handler.send('PasswordException', ex);\n          }.bind(null, e));\n        } else if (e instanceof _util.InvalidPDFException) {\n          handler.send('InvalidPDF', e);\n        } else if (e instanceof _util.MissingPDFException) {\n          handler.send('MissingPDF', e);\n        } else if (e instanceof _util.UnexpectedResponseException) {\n          handler.send('UnexpectedResponse', e);\n        } else {\n          handler.send('UnknownError', new _util.UnknownErrorException(e.message, e.toString()));\n        }\n      }\n      function pdfManagerReady() {\n        ensureNotTerminated();\n        loadDocument(false).then(onSuccess, function loadFailure(ex) {\n          ensureNotTerminated();\n          if (!(ex instanceof _util.XRefParseException)) {\n            onFailure(ex);\n            return;\n          }\n          pdfManager.requestLoadedStream();\n          pdfManager.onLoadedStream().then(function () {\n            ensureNotTerminated();\n            loadDocument(true).then(onSuccess, onFailure);\n          });\n        }, onFailure);\n      }\n      ensureNotTerminated();\n      var evaluatorOptions = {\n        forceDataSchema: data.disableCreateObjectURL,\n        maxImageSize: data.maxImageSize === undefined ? -1 : data.maxImageSize,\n        disableFontFace: data.disableFontFace,\n        nativeImageDecoderSupport: data.nativeImageDecoderSupport,\n        ignoreErrors: data.ignoreErrors,\n        isEvalSupported: data.isEvalSupported\n      };\n      getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n        if (terminated) {\n          newPdfManager.terminate();\n          throw new Error('Worker was terminated');\n        }\n        pdfManager = newPdfManager;\n        handler.send('PDFManagerReady', null);\n        pdfManager.onLoadedStream().then(function (stream) {\n          handler.send('DataLoaded', { length: stream.bytes.byteLength });\n        });\n      }).then(pdfManagerReady, onFailure);\n    }\n    handler.on('GetPage', function wphSetupGetPage(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        var rotatePromise = pdfManager.ensure(page, 'rotate');\n        var refPromise = pdfManager.ensure(page, 'ref');\n        var userUnitPromise = pdfManager.ensure(page, 'userUnit');\n        var viewPromise = pdfManager.ensure(page, 'view');\n        return Promise.all([rotatePromise, refPromise, userUnitPromise, viewPromise]).then(function (results) {\n          return {\n            rotate: results[0],\n            ref: results[1],\n            userUnit: results[2],\n            view: results[3]\n          };\n        });\n      });\n    });\n    handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n      var ref = new _primitives.Ref(data.ref.num, data.ref.gen);\n      var catalog = pdfManager.pdfDocument.catalog;\n      return catalog.getPageIndex(ref);\n    });\n    handler.on('GetDestinations', function wphSetupGetDestinations(data) {\n      return pdfManager.ensureCatalog('destinations');\n    });\n    handler.on('GetDestination', function wphSetupGetDestination(data) {\n      return pdfManager.ensureCatalog('getDestination', [data.id]);\n    });\n    handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\n      return pdfManager.ensureCatalog('pageLabels');\n    });\n    handler.on('GetPageMode', function wphSetupGetPageMode(data) {\n      return pdfManager.ensureCatalog('pageMode');\n    });\n    handler.on('GetAttachments', function wphSetupGetAttachments(data) {\n      return pdfManager.ensureCatalog('attachments');\n    });\n    handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\n      return pdfManager.ensureCatalog('javaScript');\n    });\n    handler.on('GetOutline', function wphSetupGetOutline(data) {\n      return pdfManager.ensureCatalog('documentOutline');\n    });\n    handler.on('GetMetadata', function wphSetupGetMetadata(data) {\n      return Promise.all([pdfManager.ensureDoc('documentInfo'), pdfManager.ensureCatalog('metadata')]);\n    });\n    handler.on('GetData', function wphSetupGetData(data) {\n      pdfManager.requestLoadedStream();\n      return pdfManager.onLoadedStream().then(function (stream) {\n        return stream.bytes;\n      });\n    });\n    handler.on('GetStats', function wphSetupGetStats(data) {\n      return pdfManager.pdfDocument.xref.stats;\n    });\n    handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\n      });\n    });\n    handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n      var pageIndex = data.pageIndex;\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.getOperatorList({\n          handler: handler,\n          task: task,\n          intent: data.intent,\n          renderInteractiveForms: data.renderInteractiveForms\n        }).then(function (operatorList) {\n          finishWorkerTask(task);\n          (0, _util.info)('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\n        }, function (e) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\n          var wrappedException;\n          if (typeof e === 'string') {\n            wrappedException = {\n              message: e,\n              stack: minimumStackMessage\n            };\n          } else if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') {\n            wrappedException = {\n              message: e.message || e.toString(),\n              stack: e.stack || minimumStackMessage\n            };\n          } else {\n            wrappedException = {\n              message: 'Unknown exception type: ' + (typeof e === 'undefined' ? 'undefined' : _typeof(e)),\n              stack: minimumStackMessage\n            };\n          }\n          handler.send('PageError', {\n            pageNum: pageNum,\n            error: wrappedException,\n            intent: data.intent\n          });\n        });\n      });\n    }, this);\n    handler.on('GetTextContent', function wphExtractText(data, sink) {\n      var pageIndex = data.pageIndex;\n      sink.onPull = function (desiredSize) {};\n      sink.onCancel = function (reason) {};\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('GetTextContent: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.extractTextContent({\n          handler: handler,\n          task: task,\n          sink: sink,\n          normalizeWhitespace: data.normalizeWhitespace,\n          combineTextItems: data.combineTextItems\n        }).then(function () {\n          finishWorkerTask(task);\n          (0, _util.info)('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\n          sink.close();\n        }, function (reason) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          sink.error(reason);\n          throw reason;\n        });\n      });\n    });\n    handler.on('Cleanup', function wphCleanup(data) {\n      return pdfManager.cleanup();\n    });\n    handler.on('Terminate', function wphTerminate(data) {\n      terminated = true;\n      if (pdfManager) {\n        pdfManager.terminate();\n        pdfManager = null;\n      }\n      if (cancelXHRs) {\n        cancelXHRs();\n      }\n      var waitOn = [];\n      WorkerTasks.forEach(function (task) {\n        waitOn.push(task.finished);\n        task.terminate();\n      });\n      return Promise.all(waitOn).then(function () {\n        handler.destroy();\n        handler = null;\n      });\n    });\n    handler.on('Ready', function wphReady(data) {\n      setupDoc(docParams);\n      docParams = null;\n    });\n    return workerHandlerName;\n  },\n  initializeFromPort: function initializeFromPort(port) {\n    var handler = new _util.MessageHandler('worker', 'main', port);\n    WorkerMessageHandler.setup(handler, port);\n    handler.send('ready', null);\n  }\n};\nfunction isMessagePort(maybePort) {\n  return typeof maybePort.postMessage === 'function' && 'onmessage' in maybePort;\n}\nif (typeof window === 'undefined' && !(0, _util.isNodeJS)() && typeof self !== 'undefined' && isMessagePort(self)) {\n  WorkerMessageHandler.initializeFromPort(self);\n}\nexports.WorkerTask = WorkerTask;\nexports.WorkerMessageHandler = WorkerMessageHandler;\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nif (typeof PDFJS === 'undefined' || !PDFJS.compatibilityChecked) {\n  var globalScope = __w_pdfjs_require__(85);\n  var userAgent = typeof navigator !== 'undefined' && navigator.userAgent || '';\n  var isAndroid = /Android/.test(userAgent);\n  var isAndroidPre3 = /Android\\s[0-2][^\\d]/.test(userAgent);\n  var isAndroidPre5 = /Android\\s[0-4][^\\d]/.test(userAgent);\n  var isChrome = userAgent.indexOf('Chrom') >= 0;\n  var isChromeWithRangeBug = /Chrome\\/(39|40)\\./.test(userAgent);\n  var isIOSChrome = userAgent.indexOf('CriOS') >= 0;\n  var isIE = userAgent.indexOf('Trident') >= 0;\n  var isIOS = /\\b(iPad|iPhone|iPod)(?=;)/.test(userAgent);\n  var isOpera = userAgent.indexOf('Opera') >= 0;\n  var isSafari = /Safari\\//.test(userAgent) && !/(Chrome\\/|Android\\s)/.test(userAgent);\n  var hasDOM = (typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && (typeof document === 'undefined' ? 'undefined' : _typeof(document)) === 'object';\n  if (typeof PDFJS === 'undefined') {\n    globalScope.PDFJS = {};\n  }\n  PDFJS.compatibilityChecked = true;\n  (function checkTypedArrayCompatibility() {\n    if (typeof Uint8ClampedArray === 'undefined') {\n      globalScope.Uint8ClampedArray = __w_pdfjs_require__(86);\n    }\n    if (typeof Uint8Array !== 'undefined') {\n      if (typeof Uint8Array.prototype.subarray === 'undefined') {\n        Uint8Array.prototype.subarray = function subarray(start, end) {\n          return new Uint8Array(this.slice(start, end));\n        };\n        Float32Array.prototype.subarray = function subarray(start, end) {\n          return new Float32Array(this.slice(start, end));\n        };\n      }\n      if (typeof Float64Array === 'undefined') {\n        globalScope.Float64Array = Float32Array;\n      }\n      return;\n    }\n    function subarray(start, end) {\n      return new TypedArray(this.slice(start, end));\n    }\n    function setArrayOffset(array, offset) {\n      if (arguments.length < 2) {\n        offset = 0;\n      }\n      for (var i = 0, n = array.length; i < n; ++i, ++offset) {\n        this[offset] = array[i] & 0xFF;\n      }\n    }\n    function Uint32ArrayView(buffer, length) {\n      this.buffer = buffer;\n      this.byteLength = buffer.length;\n      this.length = length;\n      ensureUint32ArrayViewProps(this.length);\n    }\n    Uint32ArrayView.prototype = Object.create(null);\n    var uint32ArrayViewSetters = 0;\n    function createUint32ArrayProp(index) {\n      return {\n        get: function get() {\n          var buffer = this.buffer,\n              offset = index << 2;\n          return (buffer[offset] | buffer[offset + 1] << 8 | buffer[offset + 2] << 16 | buffer[offset + 3] << 24) >>> 0;\n        },\n        set: function set(value) {\n          var buffer = this.buffer,\n              offset = index << 2;\n          buffer[offset] = value & 255;\n          buffer[offset + 1] = value >> 8 & 255;\n          buffer[offset + 2] = value >> 16 & 255;\n          buffer[offset + 3] = value >>> 24 & 255;\n        }\n      };\n    }\n    function ensureUint32ArrayViewProps(length) {\n      while (uint32ArrayViewSetters < length) {\n        Object.defineProperty(Uint32ArrayView.prototype, uint32ArrayViewSetters, createUint32ArrayProp(uint32ArrayViewSetters));\n        uint32ArrayViewSetters++;\n      }\n    }\n    function TypedArray(arg1) {\n      var result, i, n;\n      if (typeof arg1 === 'number') {\n        result = [];\n        for (i = 0; i < arg1; ++i) {\n          result[i] = 0;\n        }\n      } else if ('slice' in arg1) {\n        result = arg1.slice(0);\n      } else {\n        result = [];\n        for (i = 0, n = arg1.length; i < n; ++i) {\n          result[i] = arg1[i];\n        }\n      }\n      result.subarray = subarray;\n      result.buffer = result;\n      result.byteLength = result.length;\n      result.set = setArrayOffset;\n      if ((typeof arg1 === 'undefined' ? 'undefined' : _typeof(arg1)) === 'object' && arg1.buffer) {\n        result.buffer = arg1.buffer;\n      }\n      return result;\n    }\n    globalScope.Uint8Array = TypedArray;\n    globalScope.Int8Array = TypedArray;\n    globalScope.Int32Array = TypedArray;\n    globalScope.Uint16Array = TypedArray;\n    globalScope.Float32Array = TypedArray;\n    globalScope.Float64Array = TypedArray;\n    globalScope.Uint32Array = function () {\n      if (arguments.length === 3) {\n        if (arguments[1] !== 0) {\n          throw new Error('offset !== 0 is not supported');\n        }\n        return new Uint32ArrayView(arguments[0], arguments[2]);\n      }\n      return TypedArray.apply(this, arguments);\n    };\n  })();\n  (function canvasPixelArrayBuffer() {\n    if (!hasDOM || !window.CanvasPixelArray) {\n      return;\n    }\n    var cpaProto = window.CanvasPixelArray.prototype;\n    if ('buffer' in cpaProto) {\n      return;\n    }\n    Object.defineProperty(cpaProto, 'buffer', {\n      get: function get() {\n        return this;\n      },\n\n      enumerable: false,\n      configurable: true\n    });\n    Object.defineProperty(cpaProto, 'byteLength', {\n      get: function get() {\n        return this.length;\n      },\n\n      enumerable: false,\n      configurable: true\n    });\n  })();\n  (function normalizeURLObject() {\n    if (!globalScope.URL) {\n      globalScope.URL = globalScope.webkitURL;\n    }\n  })();\n  (function checkObjectDefinePropertyCompatibility() {\n    if (typeof Object.defineProperty !== 'undefined') {\n      var definePropertyPossible = true;\n      try {\n        if (hasDOM) {\n          Object.defineProperty(new Image(), 'id', { value: 'test' });\n        }\n        var Test = function Test() {};\n        Test.prototype = {\n          get id() {}\n        };\n        Object.defineProperty(new Test(), 'id', {\n          value: '',\n          configurable: true,\n          enumerable: true,\n          writable: false\n        });\n      } catch (e) {\n        definePropertyPossible = false;\n      }\n      if (definePropertyPossible) {\n        return;\n      }\n    }\n    Object.defineProperty = function objectDefineProperty(obj, name, def) {\n      delete obj[name];\n      if ('get' in def) {\n        obj.__defineGetter__(name, def['get']);\n      }\n      if ('set' in def) {\n        obj.__defineSetter__(name, def['set']);\n      }\n      if ('value' in def) {\n        obj.__defineSetter__(name, function objectDefinePropertySetter(value) {\n          this.__defineGetter__(name, function objectDefinePropertyGetter() {\n            return value;\n          });\n          return value;\n        });\n        obj[name] = def.value;\n      }\n    };\n  })();\n  (function checkXMLHttpRequestResponseCompatibility() {\n    if (typeof XMLHttpRequest === 'undefined') {\n      return;\n    }\n    var xhrPrototype = XMLHttpRequest.prototype;\n    var xhr = new XMLHttpRequest();\n    if (!('overrideMimeType' in xhr)) {\n      Object.defineProperty(xhrPrototype, 'overrideMimeType', {\n        value: function xmlHttpRequestOverrideMimeType(mimeType) {}\n      });\n    }\n    if ('responseType' in xhr) {\n      return;\n    }\n    Object.defineProperty(xhrPrototype, 'responseType', {\n      get: function xmlHttpRequestGetResponseType() {\n        return this._responseType || 'text';\n      },\n      set: function xmlHttpRequestSetResponseType(value) {\n        if (value === 'text' || value === 'arraybuffer') {\n          this._responseType = value;\n          if (value === 'arraybuffer' && typeof this.overrideMimeType === 'function') {\n            this.overrideMimeType('text/plain; charset=x-user-defined');\n          }\n        }\n      }\n    });\n    if (typeof VBArray !== 'undefined') {\n      Object.defineProperty(xhrPrototype, 'response', {\n        get: function xmlHttpRequestResponseGet() {\n          if (this.responseType === 'arraybuffer') {\n            return new Uint8Array(new VBArray(this.responseBody).toArray());\n          }\n          return this.responseText;\n        }\n      });\n      return;\n    }\n    Object.defineProperty(xhrPrototype, 'response', {\n      get: function xmlHttpRequestResponseGet() {\n        if (this.responseType !== 'arraybuffer') {\n          return this.responseText;\n        }\n        var text = this.responseText;\n        var i,\n            n = text.length;\n        var result = new Uint8Array(n);\n        for (i = 0; i < n; ++i) {\n          result[i] = text.charCodeAt(i) & 0xFF;\n        }\n        return result.buffer;\n      }\n    });\n  })();\n  (function checkWindowBtoaCompatibility() {\n    if ('btoa' in globalScope) {\n      return;\n    }\n    var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    globalScope.btoa = function (chars) {\n      var buffer = '';\n      var i, n;\n      for (i = 0, n = chars.length; i < n; i += 3) {\n        var b1 = chars.charCodeAt(i) & 0xFF;\n        var b2 = chars.charCodeAt(i + 1) & 0xFF;\n        var b3 = chars.charCodeAt(i + 2) & 0xFF;\n        var d1 = b1 >> 2,\n            d2 = (b1 & 3) << 4 | b2 >> 4;\n        var d3 = i + 1 < n ? (b2 & 0xF) << 2 | b3 >> 6 : 64;\n        var d4 = i + 2 < n ? b3 & 0x3F : 64;\n        buffer += digits.charAt(d1) + digits.charAt(d2) + digits.charAt(d3) + digits.charAt(d4);\n      }\n      return buffer;\n    };\n  })();\n  (function checkWindowAtobCompatibility() {\n    if ('atob' in globalScope) {\n      return;\n    }\n    var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    globalScope.atob = function (input) {\n      input = input.replace(/=+$/, '');\n      if (input.length % 4 === 1) {\n        throw new Error('bad atob input');\n      }\n      for (var bc = 0, bs, buffer, idx = 0, output = ''; buffer = input.charAt(idx++); ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\n        buffer = digits.indexOf(buffer);\n      }\n      return output;\n    };\n  })();\n  (function checkFunctionPrototypeBindCompatibility() {\n    if (typeof Function.prototype.bind !== 'undefined') {\n      return;\n    }\n    Function.prototype.bind = function functionPrototypeBind(obj) {\n      var fn = this,\n          headArgs = Array.prototype.slice.call(arguments, 1);\n      var bound = function functionPrototypeBindBound() {\n        var args = headArgs.concat(Array.prototype.slice.call(arguments));\n        return fn.apply(obj, args);\n      };\n      return bound;\n    };\n  })();\n  (function checkDatasetProperty() {\n    if (!hasDOM) {\n      return;\n    }\n    var div = document.createElement('div');\n    if ('dataset' in div) {\n      return;\n    }\n    Object.defineProperty(HTMLElement.prototype, 'dataset', {\n      get: function get() {\n        if (this._dataset) {\n          return this._dataset;\n        }\n        var dataset = {};\n        for (var j = 0, jj = this.attributes.length; j < jj; j++) {\n          var attribute = this.attributes[j];\n          if (attribute.name.substring(0, 5) !== 'data-') {\n            continue;\n          }\n          var key = attribute.name.substring(5).replace(/\\-([a-z])/g, function (all, ch) {\n            return ch.toUpperCase();\n          });\n          dataset[key] = attribute.value;\n        }\n        Object.defineProperty(this, '_dataset', {\n          value: dataset,\n          writable: false,\n          enumerable: false\n        });\n        return dataset;\n      },\n\n      enumerable: true\n    });\n  })();\n  (function checkClassListProperty() {\n    function changeList(element, itemName, add, remove) {\n      var s = element.className || '';\n      var list = s.split(/\\s+/g);\n      if (list[0] === '') {\n        list.shift();\n      }\n      var index = list.indexOf(itemName);\n      if (index < 0 && add) {\n        list.push(itemName);\n      }\n      if (index >= 0 && remove) {\n        list.splice(index, 1);\n      }\n      element.className = list.join(' ');\n      return index >= 0;\n    }\n    if (!hasDOM) {\n      return;\n    }\n    var div = document.createElement('div');\n    if ('classList' in div) {\n      return;\n    }\n    var classListPrototype = {\n      add: function add(name) {\n        changeList(this.element, name, true, false);\n      },\n      contains: function contains(name) {\n        return changeList(this.element, name, false, false);\n      },\n      remove: function remove(name) {\n        changeList(this.element, name, false, true);\n      },\n      toggle: function toggle(name) {\n        changeList(this.element, name, true, true);\n      }\n    };\n    Object.defineProperty(HTMLElement.prototype, 'classList', {\n      get: function get() {\n        if (this._classList) {\n          return this._classList;\n        }\n        var classList = Object.create(classListPrototype, {\n          element: {\n            value: this,\n            writable: false,\n            enumerable: true\n          }\n        });\n        Object.defineProperty(this, '_classList', {\n          value: classList,\n          writable: false,\n          enumerable: false\n        });\n        return classList;\n      },\n\n      enumerable: true\n    });\n  })();\n  (function checkWorkerConsoleCompatibility() {\n    if (typeof importScripts === 'undefined' || 'console' in globalScope) {\n      return;\n    }\n    var consoleTimer = {};\n    var workerConsole = {\n      log: function log() {\n        var args = Array.prototype.slice.call(arguments);\n        globalScope.postMessage({\n          targetName: 'main',\n          action: 'console_log',\n          data: args\n        });\n      },\n      error: function error() {\n        var args = Array.prototype.slice.call(arguments);\n        globalScope.postMessage({\n          targetName: 'main',\n          action: 'console_error',\n          data: args\n        });\n      },\n      time: function time(name) {\n        consoleTimer[name] = Date.now();\n      },\n      timeEnd: function timeEnd(name) {\n        var time = consoleTimer[name];\n        if (!time) {\n          throw new Error('Unknown timer name ' + name);\n        }\n        this.log('Timer:', name, Date.now() - time);\n      }\n    };\n    globalScope.console = workerConsole;\n  })();\n  (function checkConsoleCompatibility() {\n    if (!hasDOM) {\n      return;\n    }\n    if (!('console' in window)) {\n      window.console = {\n        log: function log() {},\n        error: function error() {},\n        warn: function warn() {}\n      };\n      return;\n    }\n    if (!('bind' in console.log)) {\n      console.log = function (fn) {\n        return function (msg) {\n          return fn(msg);\n        };\n      }(console.log);\n      console.error = function (fn) {\n        return function (msg) {\n          return fn(msg);\n        };\n      }(console.error);\n      console.warn = function (fn) {\n        return function (msg) {\n          return fn(msg);\n        };\n      }(console.warn);\n      return;\n    }\n  })();\n  (function checkOnClickCompatibility() {\n    function ignoreIfTargetDisabled(event) {\n      if (isDisabled(event.target)) {\n        event.stopPropagation();\n      }\n    }\n    function isDisabled(node) {\n      return node.disabled || node.parentNode && isDisabled(node.parentNode);\n    }\n    if (isOpera) {\n      document.addEventListener('click', ignoreIfTargetDisabled, true);\n    }\n  })();\n  (function checkOnBlobSupport() {\n    if (isIE || isIOSChrome) {\n      PDFJS.disableCreateObjectURL = true;\n    }\n  })();\n  (function checkNavigatorLanguage() {\n    if (typeof navigator === 'undefined') {\n      return;\n    }\n    if ('language' in navigator) {\n      return;\n    }\n    PDFJS.locale = navigator.userLanguage || 'en-US';\n  })();\n  (function checkRangeRequests() {\n    if (isSafari || isAndroidPre3 || isChromeWithRangeBug || isIOS) {\n      PDFJS.disableRange = true;\n      PDFJS.disableStream = true;\n    }\n  })();\n  (function checkHistoryManipulation() {\n    if (!hasDOM) {\n      return;\n    }\n    if (!history.pushState || isAndroidPre3) {\n      PDFJS.disableHistory = true;\n    }\n  })();\n  (function checkSetPresenceInImageData() {\n    if (!hasDOM) {\n      return;\n    }\n    if (window.CanvasPixelArray) {\n      if (typeof window.CanvasPixelArray.prototype.set !== 'function') {\n        window.CanvasPixelArray.prototype.set = function (arr) {\n          for (var i = 0, ii = this.length; i < ii; i++) {\n            this[i] = arr[i];\n          }\n        };\n      }\n    } else {\n      var polyfill = false,\n          versionMatch;\n      if (isChrome) {\n        versionMatch = userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\n        polyfill = versionMatch && parseInt(versionMatch[2]) < 21;\n      } else if (isAndroid) {\n        polyfill = isAndroidPre5;\n      } else if (isSafari) {\n        versionMatch = userAgent.match(/Version\\/([0-9]+)\\.([0-9]+)\\.([0-9]+) Safari\\//);\n        polyfill = versionMatch && parseInt(versionMatch[1]) < 6;\n      }\n      if (polyfill) {\n        var contextPrototype = window.CanvasRenderingContext2D.prototype;\n        var createImageData = contextPrototype.createImageData;\n        contextPrototype.createImageData = function (w, h) {\n          var imageData = createImageData.call(this, w, h);\n          imageData.data.set = function (arr) {\n            for (var i = 0, ii = this.length; i < ii; i++) {\n              this[i] = arr[i];\n            }\n          };\n          return imageData;\n        };\n        contextPrototype = null;\n      }\n    }\n  })();\n  (function checkRequestAnimationFrame() {\n    function installFakeAnimationFrameFunctions() {\n      window.requestAnimationFrame = function (callback) {\n        return window.setTimeout(callback, 20);\n      };\n      window.cancelAnimationFrame = function (timeoutID) {\n        window.clearTimeout(timeoutID);\n      };\n    }\n    if (!hasDOM) {\n      return;\n    }\n    if (isIOS) {\n      installFakeAnimationFrameFunctions();\n      return;\n    }\n    if ('requestAnimationFrame' in window) {\n      return;\n    }\n    window.requestAnimationFrame = window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame;\n    if (window.requestAnimationFrame) {\n      return;\n    }\n    installFakeAnimationFrameFunctions();\n  })();\n  (function checkCanvasSizeLimitation() {\n    if (isIOS || isAndroid) {\n      PDFJS.maxCanvasPixels = 5242880;\n    }\n  })();\n  (function checkFullscreenSupport() {\n    if (!hasDOM) {\n      return;\n    }\n    if (isIE && window.parent !== window) {\n      PDFJS.disableFullscreen = true;\n    }\n  })();\n  (function checkCurrentScript() {\n    if (!hasDOM) {\n      return;\n    }\n    if ('currentScript' in document) {\n      return;\n    }\n    Object.defineProperty(document, 'currentScript', {\n      get: function get() {\n        var scripts = document.getElementsByTagName('script');\n        return scripts[scripts.length - 1];\n      },\n\n      enumerable: true,\n      configurable: true\n    });\n  })();\n  (function checkInputTypeNumberAssign() {\n    if (!hasDOM) {\n      return;\n    }\n    var el = document.createElement('input');\n    try {\n      el.type = 'number';\n    } catch (ex) {\n      var inputProto = el.constructor.prototype;\n      var typeProperty = Object.getOwnPropertyDescriptor(inputProto, 'type');\n      Object.defineProperty(inputProto, 'type', {\n        get: function get() {\n          return typeProperty.get.call(this);\n        },\n        set: function set(value) {\n          typeProperty.set.call(this, value === 'number' ? 'text' : value);\n        },\n\n        enumerable: true,\n        configurable: true\n      });\n    }\n  })();\n  (function checkDocumentReadyState() {\n    if (!hasDOM) {\n      return;\n    }\n    if (!document.attachEvent) {\n      return;\n    }\n    var documentProto = document.constructor.prototype;\n    var readyStateProto = Object.getOwnPropertyDescriptor(documentProto, 'readyState');\n    Object.defineProperty(documentProto, 'readyState', {\n      get: function get() {\n        var value = readyStateProto.get.call(this);\n        return value === 'interactive' ? 'loading' : value;\n      },\n      set: function set(value) {\n        readyStateProto.set.call(this, value);\n      },\n\n      enumerable: true,\n      configurable: true\n    });\n  })();\n  (function checkChildNodeRemove() {\n    if (!hasDOM) {\n      return;\n    }\n    if (typeof Element.prototype.remove !== 'undefined') {\n      return;\n    }\n    Element.prototype.remove = function () {\n      if (this.parentNode) {\n        this.parentNode.removeChild(this);\n      }\n    };\n  })();\n  (function checkNumberIsNaN() {\n    if (Number.isNaN) {\n      return;\n    }\n    Number.isNaN = __w_pdfjs_require__(98);\n  })();\n  (function checkNumberIsInteger() {\n    if (Number.isInteger) {\n      return;\n    }\n    Number.isInteger = __w_pdfjs_require__(100);\n  })();\n  (function checkPromise() {\n    if (globalScope.Promise) {\n      return;\n    }\n    globalScope.Promise = __w_pdfjs_require__(103);\n  })();\n  (function checkWeakMap() {\n    if (globalScope.WeakMap) {\n      return;\n    }\n    globalScope.WeakMap = __w_pdfjs_require__(112);\n  })();\n  (function checkURLConstructor() {\n    var hasWorkingUrl = false;\n    try {\n      if (typeof URL === 'function' && _typeof(URL.prototype) === 'object' && 'origin' in URL.prototype) {\n        var u = new URL('b', 'http://a');\n        u.pathname = 'c%20d';\n        hasWorkingUrl = u.href === 'http://a/c%20d';\n      }\n    } catch (e) {}\n    if (hasWorkingUrl) {\n      return;\n    }\n    var relative = Object.create(null);\n    relative['ftp'] = 21;\n    relative['file'] = 0;\n    relative['gopher'] = 70;\n    relative['http'] = 80;\n    relative['https'] = 443;\n    relative['ws'] = 80;\n    relative['wss'] = 443;\n    var relativePathDotMapping = Object.create(null);\n    relativePathDotMapping['%2e'] = '.';\n    relativePathDotMapping['.%2e'] = '..';\n    relativePathDotMapping['%2e.'] = '..';\n    relativePathDotMapping['%2e%2e'] = '..';\n    function isRelativeScheme(scheme) {\n      return relative[scheme] !== undefined;\n    }\n    function invalid() {\n      clear.call(this);\n      this._isInvalid = true;\n    }\n    function IDNAToASCII(h) {\n      if (h === '') {\n        invalid.call(this);\n      }\n      return h.toLowerCase();\n    }\n    function percentEscape(c) {\n      var unicode = c.charCodeAt(0);\n      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x3F, 0x60].indexOf(unicode) === -1) {\n        return c;\n      }\n      return encodeURIComponent(c);\n    }\n    function percentEscapeQuery(c) {\n      var unicode = c.charCodeAt(0);\n      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x60].indexOf(unicode) === -1) {\n        return c;\n      }\n      return encodeURIComponent(c);\n    }\n    var EOF,\n        ALPHA = /[a-zA-Z]/,\n        ALPHANUMERIC = /[a-zA-Z0-9\\+\\-\\.]/;\n    function parse(input, stateOverride, base) {\n      function err(message) {\n        errors.push(message);\n      }\n      var state = stateOverride || 'scheme start',\n          cursor = 0,\n          buffer = '',\n          seenAt = false,\n          seenBracket = false,\n          errors = [];\n      loop: while ((input[cursor - 1] !== EOF || cursor === 0) && !this._isInvalid) {\n        var c = input[cursor];\n        switch (state) {\n          case 'scheme start':\n            if (c && ALPHA.test(c)) {\n              buffer += c.toLowerCase();\n              state = 'scheme';\n            } else if (!stateOverride) {\n              buffer = '';\n              state = 'no scheme';\n              continue;\n            } else {\n              err('Invalid scheme.');\n              break loop;\n            }\n            break;\n          case 'scheme':\n            if (c && ALPHANUMERIC.test(c)) {\n              buffer += c.toLowerCase();\n            } else if (c === ':') {\n              this._scheme = buffer;\n              buffer = '';\n              if (stateOverride) {\n                break loop;\n              }\n              if (isRelativeScheme(this._scheme)) {\n                this._isRelative = true;\n              }\n              if (this._scheme === 'file') {\n                state = 'relative';\n              } else if (this._isRelative && base && base._scheme === this._scheme) {\n                state = 'relative or authority';\n              } else if (this._isRelative) {\n                state = 'authority first slash';\n              } else {\n                state = 'scheme data';\n              }\n            } else if (!stateOverride) {\n              buffer = '';\n              cursor = 0;\n              state = 'no scheme';\n              continue;\n            } else if (c === EOF) {\n              break loop;\n            } else {\n              err('Code point not allowed in scheme: ' + c);\n              break loop;\n            }\n            break;\n          case 'scheme data':\n            if (c === '?') {\n              this._query = '?';\n              state = 'query';\n            } else if (c === '#') {\n              this._fragment = '#';\n              state = 'fragment';\n            } else {\n              if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n                this._schemeData += percentEscape(c);\n              }\n            }\n            break;\n          case 'no scheme':\n            if (!base || !isRelativeScheme(base._scheme)) {\n              err('Missing scheme.');\n              invalid.call(this);\n            } else {\n              state = 'relative';\n              continue;\n            }\n            break;\n          case 'relative or authority':\n            if (c === '/' && input[cursor + 1] === '/') {\n              state = 'authority ignore slashes';\n            } else {\n              err('Expected /, got: ' + c);\n              state = 'relative';\n              continue;\n            }\n            break;\n          case 'relative':\n            this._isRelative = true;\n            if (this._scheme !== 'file') {\n              this._scheme = base._scheme;\n            }\n            if (c === EOF) {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = base._query;\n              this._username = base._username;\n              this._password = base._password;\n              break loop;\n            } else if (c === '/' || c === '\\\\') {\n              if (c === '\\\\') {\n                err('\\\\ is an invalid code point.');\n              }\n              state = 'relative slash';\n            } else if (c === '?') {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = '?';\n              this._username = base._username;\n              this._password = base._password;\n              state = 'query';\n            } else if (c === '#') {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = base._query;\n              this._fragment = '#';\n              this._username = base._username;\n              this._password = base._password;\n              state = 'fragment';\n            } else {\n              var nextC = input[cursor + 1];\n              var nextNextC = input[cursor + 2];\n              if (this._scheme !== 'file' || !ALPHA.test(c) || nextC !== ':' && nextC !== '|' || nextNextC !== EOF && nextNextC !== '/' && nextNextC !== '\\\\' && nextNextC !== '?' && nextNextC !== '#') {\n                this._host = base._host;\n                this._port = base._port;\n                this._username = base._username;\n                this._password = base._password;\n                this._path = base._path.slice();\n                this._path.pop();\n              }\n              state = 'relative path';\n              continue;\n            }\n            break;\n          case 'relative slash':\n            if (c === '/' || c === '\\\\') {\n              if (c === '\\\\') {\n                err('\\\\ is an invalid code point.');\n              }\n              if (this._scheme === 'file') {\n                state = 'file host';\n              } else {\n                state = 'authority ignore slashes';\n              }\n            } else {\n              if (this._scheme !== 'file') {\n                this._host = base._host;\n                this._port = base._port;\n                this._username = base._username;\n                this._password = base._password;\n              }\n              state = 'relative path';\n              continue;\n            }\n            break;\n          case 'authority first slash':\n            if (c === '/') {\n              state = 'authority second slash';\n            } else {\n              err('Expected \\'/\\', got: ' + c);\n              state = 'authority ignore slashes';\n              continue;\n            }\n            break;\n          case 'authority second slash':\n            state = 'authority ignore slashes';\n            if (c !== '/') {\n              err('Expected \\'/\\', got: ' + c);\n              continue;\n            }\n            break;\n          case 'authority ignore slashes':\n            if (c !== '/' && c !== '\\\\') {\n              state = 'authority';\n              continue;\n            } else {\n              err('Expected authority, got: ' + c);\n            }\n            break;\n          case 'authority':\n            if (c === '@') {\n              if (seenAt) {\n                err('@ already seen.');\n                buffer += '%40';\n              }\n              seenAt = true;\n              for (var i = 0; i < buffer.length; i++) {\n                var cp = buffer[i];\n                if (cp === '\\t' || cp === '\\n' || cp === '\\r') {\n                  err('Invalid whitespace in authority.');\n                  continue;\n                }\n                if (cp === ':' && this._password === null) {\n                  this._password = '';\n                  continue;\n                }\n                var tempC = percentEscape(cp);\n                if (this._password !== null) {\n                  this._password += tempC;\n                } else {\n                  this._username += tempC;\n                }\n              }\n              buffer = '';\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              cursor -= buffer.length;\n              buffer = '';\n              state = 'host';\n              continue;\n            } else {\n              buffer += c;\n            }\n            break;\n          case 'file host':\n            if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              if (buffer.length === 2 && ALPHA.test(buffer[0]) && (buffer[1] === ':' || buffer[1] === '|')) {\n                state = 'relative path';\n              } else if (buffer.length === 0) {\n                state = 'relative path start';\n              } else {\n                this._host = IDNAToASCII.call(this, buffer);\n                buffer = '';\n                state = 'relative path start';\n              }\n              continue;\n            } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n              err('Invalid whitespace in file host.');\n            } else {\n              buffer += c;\n            }\n            break;\n          case 'host':\n          case 'hostname':\n            if (c === ':' && !seenBracket) {\n              this._host = IDNAToASCII.call(this, buffer);\n              buffer = '';\n              state = 'port';\n              if (stateOverride === 'hostname') {\n                break loop;\n              }\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              this._host = IDNAToASCII.call(this, buffer);\n              buffer = '';\n              state = 'relative path start';\n              if (stateOverride) {\n                break loop;\n              }\n              continue;\n            } else if (c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              if (c === '[') {\n                seenBracket = true;\n              } else if (c === ']') {\n                seenBracket = false;\n              }\n              buffer += c;\n            } else {\n              err('Invalid code point in host/hostname: ' + c);\n            }\n            break;\n          case 'port':\n            if (/[0-9]/.test(c)) {\n              buffer += c;\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#' || stateOverride) {\n              if (buffer !== '') {\n                var temp = parseInt(buffer, 10);\n                if (temp !== relative[this._scheme]) {\n                  this._port = temp + '';\n                }\n                buffer = '';\n              }\n              if (stateOverride) {\n                break loop;\n              }\n              state = 'relative path start';\n              continue;\n            } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n              err('Invalid code point in port: ' + c);\n            } else {\n              invalid.call(this);\n            }\n            break;\n          case 'relative path start':\n            if (c === '\\\\') {\n              err('\\'\\\\\\' not allowed in path.');\n            }\n            state = 'relative path';\n            if (c !== '/' && c !== '\\\\') {\n              continue;\n            }\n            break;\n          case 'relative path':\n            if (c === EOF || c === '/' || c === '\\\\' || !stateOverride && (c === '?' || c === '#')) {\n              if (c === '\\\\') {\n                err('\\\\ not allowed in relative path.');\n              }\n              var tmp;\n              if (tmp = relativePathDotMapping[buffer.toLowerCase()]) {\n                buffer = tmp;\n              }\n              if (buffer === '..') {\n                this._path.pop();\n                if (c !== '/' && c !== '\\\\') {\n                  this._path.push('');\n                }\n              } else if (buffer === '.' && c !== '/' && c !== '\\\\') {\n                this._path.push('');\n              } else if (buffer !== '.') {\n                if (this._scheme === 'file' && this._path.length === 0 && buffer.length === 2 && ALPHA.test(buffer[0]) && buffer[1] === '|') {\n                  buffer = buffer[0] + ':';\n                }\n                this._path.push(buffer);\n              }\n              buffer = '';\n              if (c === '?') {\n                this._query = '?';\n                state = 'query';\n              } else if (c === '#') {\n                this._fragment = '#';\n                state = 'fragment';\n              }\n            } else if (c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              buffer += percentEscape(c);\n            }\n            break;\n          case 'query':\n            if (!stateOverride && c === '#') {\n              this._fragment = '#';\n              state = 'fragment';\n            } else if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              this._query += percentEscapeQuery(c);\n            }\n            break;\n          case 'fragment':\n            if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              this._fragment += c;\n            }\n            break;\n        }\n        cursor++;\n      }\n    }\n    function clear() {\n      this._scheme = '';\n      this._schemeData = '';\n      this._username = '';\n      this._password = null;\n      this._host = '';\n      this._port = '';\n      this._path = [];\n      this._query = '';\n      this._fragment = '';\n      this._isInvalid = false;\n      this._isRelative = false;\n    }\n    function JURL(url, base) {\n      if (base !== undefined && !(base instanceof JURL)) {\n        base = new JURL(String(base));\n      }\n      this._url = url;\n      clear.call(this);\n      var input = url.replace(/^[ \\t\\r\\n\\f]+|[ \\t\\r\\n\\f]+$/g, '');\n      parse.call(this, input, null, base);\n    }\n    JURL.prototype = {\n      toString: function toString() {\n        return this.href;\n      },\n\n      get href() {\n        if (this._isInvalid) {\n          return this._url;\n        }\n        var authority = '';\n        if (this._username !== '' || this._password !== null) {\n          authority = this._username + (this._password !== null ? ':' + this._password : '') + '@';\n        }\n        return this.protocol + (this._isRelative ? '//' + authority + this.host : '') + this.pathname + this._query + this._fragment;\n      },\n      set href(value) {\n        clear.call(this);\n        parse.call(this, value);\n      },\n      get protocol() {\n        return this._scheme + ':';\n      },\n      set protocol(value) {\n        if (this._isInvalid) {\n          return;\n        }\n        parse.call(this, value + ':', 'scheme start');\n      },\n      get host() {\n        return this._isInvalid ? '' : this._port ? this._host + ':' + this._port : this._host;\n      },\n      set host(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'host');\n      },\n      get hostname() {\n        return this._host;\n      },\n      set hostname(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'hostname');\n      },\n      get port() {\n        return this._port;\n      },\n      set port(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'port');\n      },\n      get pathname() {\n        return this._isInvalid ? '' : this._isRelative ? '/' + this._path.join('/') : this._schemeData;\n      },\n      set pathname(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        this._path = [];\n        parse.call(this, value, 'relative path start');\n      },\n      get search() {\n        return this._isInvalid || !this._query || this._query === '?' ? '' : this._query;\n      },\n      set search(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        this._query = '?';\n        if (value[0] === '?') {\n          value = value.slice(1);\n        }\n        parse.call(this, value, 'query');\n      },\n      get hash() {\n        return this._isInvalid || !this._fragment || this._fragment === '#' ? '' : this._fragment;\n      },\n      set hash(value) {\n        if (this._isInvalid) {\n          return;\n        }\n        this._fragment = '#';\n        if (value[0] === '#') {\n          value = value.slice(1);\n        }\n        parse.call(this, value, 'fragment');\n      },\n      get origin() {\n        var host;\n        if (this._isInvalid || !this._scheme) {\n          return '';\n        }\n        switch (this._scheme) {\n          case 'data':\n          case 'file':\n          case 'javascript':\n          case 'mailto':\n            return 'null';\n          case 'blob':\n            try {\n              return new JURL(this._schemeData).origin || 'null';\n            } catch (_) {}\n            return 'null';\n        }\n        host = this.host;\n        if (!host) {\n          return '';\n        }\n        return this._scheme + '://' + host;\n      }\n    };\n    var OriginalURL = globalScope.URL;\n    if (OriginalURL) {\n      JURL.createObjectURL = function (blob) {\n        return OriginalURL.createObjectURL.apply(OriginalURL, arguments);\n      };\n      JURL.revokeObjectURL = function (url) {\n        OriginalURL.revokeObjectURL(url);\n      };\n    }\n    globalScope.URL = JURL;\n  })();\n}\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = typeof window !== 'undefined' && window.Math === Math ? window : typeof global !== 'undefined' && global.Math === Math ? global : typeof self !== 'undefined' && self.Math === Math ? self : {};\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(87);\nmodule.exports = __w_pdfjs_require__(7).Uint8ClampedArray;\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(88)('Uint8', 1, function (init) {\n  return function Uint8ClampedArray(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n}, true);\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nif (__w_pdfjs_require__(11)) {\n  var LIBRARY = __w_pdfjs_require__(28);\n  var global = __w_pdfjs_require__(1);\n  var fails = __w_pdfjs_require__(12);\n  var $export = __w_pdfjs_require__(6);\n  var $typed = __w_pdfjs_require__(49);\n  var $buffer = __w_pdfjs_require__(89);\n  var ctx = __w_pdfjs_require__(13);\n  var anInstance = __w_pdfjs_require__(23);\n  var propertyDesc = __w_pdfjs_require__(29);\n  var hide = __w_pdfjs_require__(8);\n  var redefineAll = __w_pdfjs_require__(22);\n  var toInteger = __w_pdfjs_require__(18);\n  var toLength = __w_pdfjs_require__(14);\n  var toIndex = __w_pdfjs_require__(50);\n  var toAbsoluteIndex = __w_pdfjs_require__(31);\n  var toPrimitive = __w_pdfjs_require__(36);\n  var has = __w_pdfjs_require__(10);\n  var classof = __w_pdfjs_require__(32);\n  var isObject = __w_pdfjs_require__(3);\n  var toObject = __w_pdfjs_require__(19);\n  var isArrayIter = __w_pdfjs_require__(56);\n  var create = __w_pdfjs_require__(57);\n  var getPrototypeOf = __w_pdfjs_require__(59);\n  var gOPN = __w_pdfjs_require__(51).f;\n  var getIterFn = __w_pdfjs_require__(60);\n  var uid = __w_pdfjs_require__(17);\n  var wks = __w_pdfjs_require__(4);\n  var createArrayMethod = __w_pdfjs_require__(42);\n  var createArrayIncludes = __w_pdfjs_require__(53);\n  var speciesConstructor = __w_pdfjs_require__(43);\n  var ArrayIterators = __w_pdfjs_require__(61);\n  var Iterators = __w_pdfjs_require__(20);\n  var $iterDetect = __w_pdfjs_require__(44);\n  var setSpecies = __w_pdfjs_require__(63);\n  var arrayFill = __w_pdfjs_require__(55);\n  var arrayCopyWithin = __w_pdfjs_require__(97);\n  var $DP = __w_pdfjs_require__(15);\n  var $GOPD = __w_pdfjs_require__(64);\n  var dP = $DP.f;\n  var gOPD = $GOPD.f;\n  var RangeError = global.RangeError;\n  var TypeError = global.TypeError;\n  var Uint8Array = global.Uint8Array;\n  var ARRAY_BUFFER = 'ArrayBuffer';\n  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;\n  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';\n  var PROTOTYPE = 'prototype';\n  var ArrayProto = Array[PROTOTYPE];\n  var $ArrayBuffer = $buffer.ArrayBuffer;\n  var $DataView = $buffer.DataView;\n  var arrayForEach = createArrayMethod(0);\n  var arrayFilter = createArrayMethod(2);\n  var arraySome = createArrayMethod(3);\n  var arrayEvery = createArrayMethod(4);\n  var arrayFind = createArrayMethod(5);\n  var arrayFindIndex = createArrayMethod(6);\n  var arrayIncludes = createArrayIncludes(true);\n  var arrayIndexOf = createArrayIncludes(false);\n  var arrayValues = ArrayIterators.values;\n  var arrayKeys = ArrayIterators.keys;\n  var arrayEntries = ArrayIterators.entries;\n  var arrayLastIndexOf = ArrayProto.lastIndexOf;\n  var arrayReduce = ArrayProto.reduce;\n  var arrayReduceRight = ArrayProto.reduceRight;\n  var arrayJoin = ArrayProto.join;\n  var arraySort = ArrayProto.sort;\n  var arraySlice = ArrayProto.slice;\n  var arrayToString = ArrayProto.toString;\n  var arrayToLocaleString = ArrayProto.toLocaleString;\n  var ITERATOR = wks('iterator');\n  var TAG = wks('toStringTag');\n  var TYPED_CONSTRUCTOR = uid('typed_constructor');\n  var DEF_CONSTRUCTOR = uid('def_constructor');\n  var ALL_CONSTRUCTORS = $typed.CONSTR;\n  var TYPED_ARRAY = $typed.TYPED;\n  var VIEW = $typed.VIEW;\n  var WRONG_LENGTH = 'Wrong length!';\n  var $map = createArrayMethod(1, function (O, length) {\n    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);\n  });\n  var LITTLE_ENDIAN = fails(function () {\n    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;\n  });\n  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {\n    new Uint8Array(1).set({});\n  });\n  var toOffset = function toOffset(it, BYTES) {\n    var offset = toInteger(it);\n    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');\n    return offset;\n  };\n  var validate = function validate(it) {\n    if (isObject(it) && TYPED_ARRAY in it) return it;\n    throw TypeError(it + ' is not a typed array!');\n  };\n  var allocate = function allocate(C, length) {\n    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {\n      throw TypeError('It is not a typed array constructor!');\n    }\n    return new C(length);\n  };\n  var speciesFromList = function speciesFromList(O, list) {\n    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);\n  };\n  var fromList = function fromList(C, list) {\n    var index = 0;\n    var length = list.length;\n    var result = allocate(C, length);\n    while (length > index) {\n      result[index] = list[index++];\n    }return result;\n  };\n  var addGetter = function addGetter(it, key, internal) {\n    dP(it, key, {\n      get: function get() {\n        return this._d[internal];\n      }\n    });\n  };\n  var $from = function from(source) {\n    var O = toObject(source);\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var iterFn = getIterFn(O);\n    var i, length, values, result, step, iterator;\n    if (iterFn != undefined && !isArrayIter(iterFn)) {\n      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {\n        values.push(step.value);\n      }\n      O = values;\n    }\n    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);\n    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {\n      result[i] = mapping ? mapfn(O[i], i) : O[i];\n    }\n    return result;\n  };\n  var $of = function of() {\n    var index = 0;\n    var length = arguments.length;\n    var result = allocate(this, length);\n    while (length > index) {\n      result[index] = arguments[index++];\n    }return result;\n  };\n  var TO_LOCALE_BUG = !!Uint8Array && fails(function () {\n    arrayToLocaleString.call(new Uint8Array(1));\n  });\n  var $toLocaleString = function toLocaleString() {\n    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);\n  };\n  var proto = {\n    copyWithin: function copyWithin(target, start) {\n      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    every: function every(callbackfn) {\n      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    fill: function fill(value) {\n      return arrayFill.apply(validate(this), arguments);\n    },\n    filter: function filter(callbackfn) {\n      return speciesFromList(this, arrayFilter(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined));\n    },\n    find: function find(predicate) {\n      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    findIndex: function findIndex(predicate) {\n      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    forEach: function forEach(callbackfn) {\n      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    indexOf: function indexOf(searchElement) {\n      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    includes: function includes(searchElement) {\n      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    join: function join(separator) {\n      return arrayJoin.apply(validate(this), arguments);\n    },\n    lastIndexOf: function lastIndexOf(searchElement) {\n      return arrayLastIndexOf.apply(validate(this), arguments);\n    },\n    map: function map(mapfn) {\n      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    reduce: function reduce(callbackfn) {\n      return arrayReduce.apply(validate(this), arguments);\n    },\n    reduceRight: function reduceRight(callbackfn) {\n      return arrayReduceRight.apply(validate(this), arguments);\n    },\n    reverse: function reverse() {\n      var that = this;\n      var length = validate(that).length;\n      var middle = Math.floor(length / 2);\n      var index = 0;\n      var value;\n      while (index < middle) {\n        value = that[index];\n        that[index++] = that[--length];\n        that[length] = value;\n      }\n      return that;\n    },\n    some: function some(callbackfn) {\n      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    sort: function sort(comparefn) {\n      return arraySort.call(validate(this), comparefn);\n    },\n    subarray: function subarray(begin, end) {\n      var O = validate(this);\n      var length = O.length;\n      var $begin = toAbsoluteIndex(begin, length);\n      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(O.buffer, O.byteOffset + $begin * O.BYTES_PER_ELEMENT, toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin));\n    }\n  };\n  var $slice = function slice(start, end) {\n    return speciesFromList(this, arraySlice.call(validate(this), start, end));\n  };\n  var $set = function set(arrayLike) {\n    validate(this);\n    var offset = toOffset(arguments[1], 1);\n    var length = this.length;\n    var src = toObject(arrayLike);\n    var len = toLength(src.length);\n    var index = 0;\n    if (len + offset > length) throw RangeError(WRONG_LENGTH);\n    while (index < len) {\n      this[offset + index] = src[index++];\n    }\n  };\n  var $iterators = {\n    entries: function entries() {\n      return arrayEntries.call(validate(this));\n    },\n    keys: function keys() {\n      return arrayKeys.call(validate(this));\n    },\n    values: function values() {\n      return arrayValues.call(validate(this));\n    }\n  };\n  var isTAIndex = function isTAIndex(target, key) {\n    return isObject(target) && target[TYPED_ARRAY] && (typeof key === 'undefined' ? 'undefined' : _typeof(key)) != 'symbol' && key in target && String(+key) == String(key);\n  };\n  var $getDesc = function getOwnPropertyDescriptor(target, key) {\n    return isTAIndex(target, key = toPrimitive(key, true)) ? propertyDesc(2, target[key]) : gOPD(target, key);\n  };\n  var $setDesc = function defineProperty(target, key, desc) {\n    if (isTAIndex(target, key = toPrimitive(key, true)) && isObject(desc) && has(desc, 'value') && !has(desc, 'get') && !has(desc, 'set') && !desc.configurable && (!has(desc, 'writable') || desc.writable) && (!has(desc, 'enumerable') || desc.enumerable)) {\n      target[key] = desc.value;\n      return target;\n    }\n    return dP(target, key, desc);\n  };\n  if (!ALL_CONSTRUCTORS) {\n    $GOPD.f = $getDesc;\n    $DP.f = $setDesc;\n  }\n  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {\n    getOwnPropertyDescriptor: $getDesc,\n    defineProperty: $setDesc\n  });\n  if (fails(function () {\n    arrayToString.call({});\n  })) {\n    arrayToString = arrayToLocaleString = function toString() {\n      return arrayJoin.call(this);\n    };\n  }\n  var $TypedArrayPrototype$ = redefineAll({}, proto);\n  redefineAll($TypedArrayPrototype$, $iterators);\n  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);\n  redefineAll($TypedArrayPrototype$, {\n    slice: $slice,\n    set: $set,\n    constructor: function constructor() {},\n    toString: arrayToString,\n    toLocaleString: $toLocaleString\n  });\n  addGetter($TypedArrayPrototype$, 'buffer', 'b');\n  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');\n  addGetter($TypedArrayPrototype$, 'byteLength', 'l');\n  addGetter($TypedArrayPrototype$, 'length', 'e');\n  dP($TypedArrayPrototype$, TAG, {\n    get: function get() {\n      return this[TYPED_ARRAY];\n    }\n  });\n  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {\n    CLAMPED = !!CLAMPED;\n    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';\n    var GETTER = 'get' + KEY;\n    var SETTER = 'set' + KEY;\n    var TypedArray = global[NAME];\n    var Base = TypedArray || {};\n    var TAC = TypedArray && getPrototypeOf(TypedArray);\n    var FORCED = !TypedArray || !$typed.ABV;\n    var O = {};\n    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];\n    var getter = function getter(that, index) {\n      var data = that._d;\n      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);\n    };\n    var setter = function setter(that, index, value) {\n      var data = that._d;\n      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;\n      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);\n    };\n    var addElement = function addElement(that, index) {\n      dP(that, index, {\n        get: function get() {\n          return getter(this, index);\n        },\n        set: function set(value) {\n          return setter(this, index, value);\n        },\n        enumerable: true\n      });\n    };\n    if (FORCED) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME, '_d');\n        var index = 0;\n        var offset = 0;\n        var buffer, byteLength, length, klass;\n        if (!isObject(data)) {\n          length = toIndex(data);\n          byteLength = length * BYTES;\n          buffer = new $ArrayBuffer(byteLength);\n        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          buffer = data;\n          offset = toOffset($offset, BYTES);\n          var $len = data.byteLength;\n          if ($length === undefined) {\n            if ($len % BYTES) throw RangeError(WRONG_LENGTH);\n            byteLength = $len - offset;\n            if (byteLength < 0) throw RangeError(WRONG_LENGTH);\n          } else {\n            byteLength = toLength($length) * BYTES;\n            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);\n          }\n          length = byteLength / BYTES;\n        } else if (TYPED_ARRAY in data) {\n          return fromList(TypedArray, data);\n        } else {\n          return $from.call(TypedArray, data);\n        }\n        hide(that, '_d', {\n          b: buffer,\n          o: offset,\n          l: byteLength,\n          e: length,\n          v: new $DataView(buffer)\n        });\n        while (index < length) {\n          addElement(that, index++);\n        }\n      });\n      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);\n      hide(TypedArrayPrototype, 'constructor', TypedArray);\n    } else if (!fails(function () {\n      TypedArray(1);\n    }) || !fails(function () {\n      new TypedArray(-1);\n    }) || !$iterDetect(function (iter) {\n      new TypedArray();\n      new TypedArray(null);\n      new TypedArray(1.5);\n      new TypedArray(iter);\n    }, true)) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME);\n        var klass;\n        if (!isObject(data)) return new Base(toIndex(data));\n        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          return $length !== undefined ? new Base(data, toOffset($offset, BYTES), $length) : $offset !== undefined ? new Base(data, toOffset($offset, BYTES)) : new Base(data);\n        }\n        if (TYPED_ARRAY in data) return fromList(TypedArray, data);\n        return $from.call(TypedArray, data);\n      });\n      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {\n        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);\n      });\n      TypedArray[PROTOTYPE] = TypedArrayPrototype;\n      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;\n    }\n    var $nativeIterator = TypedArrayPrototype[ITERATOR];\n    var CORRECT_ITER_NAME = !!$nativeIterator && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);\n    var $iterator = $iterators.values;\n    hide(TypedArray, TYPED_CONSTRUCTOR, true);\n    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);\n    hide(TypedArrayPrototype, VIEW, true);\n    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);\n    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {\n      dP(TypedArrayPrototype, TAG, {\n        get: function get() {\n          return NAME;\n        }\n      });\n    }\n    O[NAME] = TypedArray;\n    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);\n    $export($export.S, NAME, { BYTES_PER_ELEMENT: BYTES });\n    $export($export.S + $export.F * fails(function () {\n      Base.of.call(TypedArray, 1);\n    }), NAME, {\n      from: $from,\n      of: $of\n    });\n    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);\n    $export($export.P, NAME, proto);\n    setSpecies(NAME);\n    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });\n    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);\n    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;\n    $export($export.P + $export.F * fails(function () {\n      new TypedArray(1).slice();\n    }), NAME, { slice: $slice });\n    $export($export.P + $export.F * (fails(function () {\n      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();\n    }) || !fails(function () {\n      TypedArrayPrototype.toLocaleString.call([1, 2]);\n    })), NAME, { toLocaleString: $toLocaleString });\n    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;\n    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);\n  };\n} else module.exports = function () {};\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(1);\nvar DESCRIPTORS = __w_pdfjs_require__(11);\nvar LIBRARY = __w_pdfjs_require__(28);\nvar $typed = __w_pdfjs_require__(49);\nvar hide = __w_pdfjs_require__(8);\nvar redefineAll = __w_pdfjs_require__(22);\nvar fails = __w_pdfjs_require__(12);\nvar anInstance = __w_pdfjs_require__(23);\nvar toInteger = __w_pdfjs_require__(18);\nvar toLength = __w_pdfjs_require__(14);\nvar toIndex = __w_pdfjs_require__(50);\nvar gOPN = __w_pdfjs_require__(51).f;\nvar dP = __w_pdfjs_require__(15).f;\nvar arrayFill = __w_pdfjs_require__(55);\nvar setToStringTag = __w_pdfjs_require__(25);\nvar ARRAY_BUFFER = 'ArrayBuffer';\nvar DATA_VIEW = 'DataView';\nvar PROTOTYPE = 'prototype';\nvar WRONG_LENGTH = 'Wrong length!';\nvar WRONG_INDEX = 'Wrong index!';\nvar $ArrayBuffer = global[ARRAY_BUFFER];\nvar $DataView = global[DATA_VIEW];\nvar Math = global.Math;\nvar RangeError = global.RangeError;\nvar Infinity = global.Infinity;\nvar BaseBuffer = $ArrayBuffer;\nvar abs = Math.abs;\nvar pow = Math.pow;\nvar floor = Math.floor;\nvar log = Math.log;\nvar LN2 = Math.LN2;\nvar BUFFER = 'buffer';\nvar BYTE_LENGTH = 'byteLength';\nvar BYTE_OFFSET = 'byteOffset';\nvar $BUFFER = DESCRIPTORS ? '_b' : BUFFER;\nvar $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;\nvar $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;\nfunction packIEEE754(value, mLen, nBytes) {\n  var buffer = Array(nBytes);\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;\n  var i = 0;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  var e, m, c;\n  value = abs(value);\n  if (value != value || value === Infinity) {\n    m = value != value ? 1 : 0;\n    e = eMax;\n  } else {\n    e = floor(log(value) / LN2);\n    if (value * (c = pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * pow(2, eBias - 1) * pow(2, mLen);\n      e = 0;\n    }\n  }\n  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8) {}\n  e = e << mLen | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8) {}\n  buffer[--i] |= s * 128;\n  return buffer;\n}\nfunction unpackIEEE754(buffer, mLen, nBytes) {\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = eLen - 7;\n  var i = nBytes - 1;\n  var s = buffer[i--];\n  var e = s & 127;\n  var m;\n  s >>= 7;\n  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8) {}\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8) {}\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : s ? -Infinity : Infinity;\n  } else {\n    m = m + pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * pow(2, e - mLen);\n}\nfunction unpackI32(bytes) {\n  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];\n}\nfunction packI8(it) {\n  return [it & 0xff];\n}\nfunction packI16(it) {\n  return [it & 0xff, it >> 8 & 0xff];\n}\nfunction packI32(it) {\n  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];\n}\nfunction packF64(it) {\n  return packIEEE754(it, 52, 8);\n}\nfunction packF32(it) {\n  return packIEEE754(it, 23, 4);\n}\nfunction addGetter(C, key, internal) {\n  dP(C[PROTOTYPE], key, {\n    get: function get() {\n      return this[internal];\n    }\n  });\n}\nfunction get(view, bytes, index, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = store.slice(start, start + bytes);\n  return isLittleEndian ? pack : pack.reverse();\n}\nfunction set(view, bytes, index, conversion, value, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = conversion(+value);\n  for (var i = 0; i < bytes; i++) {\n    store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];\n  }\n}\nif (!$typed.ABV) {\n  $ArrayBuffer = function ArrayBuffer(length) {\n    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);\n    var byteLength = toIndex(length);\n    this._b = arrayFill.call(Array(byteLength), 0);\n    this[$LENGTH] = byteLength;\n  };\n  $DataView = function DataView(buffer, byteOffset, byteLength) {\n    anInstance(this, $DataView, DATA_VIEW);\n    anInstance(buffer, $ArrayBuffer, DATA_VIEW);\n    var bufferLength = buffer[$LENGTH];\n    var offset = toInteger(byteOffset);\n    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');\n    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);\n    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);\n    this[$BUFFER] = buffer;\n    this[$OFFSET] = offset;\n    this[$LENGTH] = byteLength;\n  };\n  if (DESCRIPTORS) {\n    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');\n    addGetter($DataView, BUFFER, '_b');\n    addGetter($DataView, BYTE_LENGTH, '_l');\n    addGetter($DataView, BYTE_OFFSET, '_o');\n  }\n  redefineAll($DataView[PROTOTYPE], {\n    getInt8: function getInt8(byteOffset) {\n      return get(this, 1, byteOffset)[0] << 24 >> 24;\n    },\n    getUint8: function getUint8(byteOffset) {\n      return get(this, 1, byteOffset)[0];\n    },\n    getInt16: function getInt16(byteOffset) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;\n    },\n    getUint16: function getUint16(byteOffset) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return bytes[1] << 8 | bytes[0];\n    },\n    getInt32: function getInt32(byteOffset) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1]));\n    },\n    getUint32: function getUint32(byteOffset) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;\n    },\n    getFloat32: function getFloat32(byteOffset) {\n      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);\n    },\n    getFloat64: function getFloat64(byteOffset) {\n      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);\n    },\n    setInt8: function setInt8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setInt16: function setInt16(byteOffset, value) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setUint16: function setUint16(byteOffset, value) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setInt32: function setInt32(byteOffset, value) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setUint32: function setUint32(byteOffset, value) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setFloat32: function setFloat32(byteOffset, value) {\n      set(this, 4, byteOffset, packF32, value, arguments[2]);\n    },\n    setFloat64: function setFloat64(byteOffset, value) {\n      set(this, 8, byteOffset, packF64, value, arguments[2]);\n    }\n  });\n} else {\n  if (!fails(function () {\n    $ArrayBuffer(1);\n  }) || !fails(function () {\n    new $ArrayBuffer(-1);\n  }) || fails(function () {\n    new $ArrayBuffer();\n    new $ArrayBuffer(1.5);\n    new $ArrayBuffer(NaN);\n    return $ArrayBuffer.name != ARRAY_BUFFER;\n  })) {\n    $ArrayBuffer = function ArrayBuffer(length) {\n      anInstance(this, $ArrayBuffer);\n      return new BaseBuffer(toIndex(length));\n    };\n    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];\n    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {\n      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);\n    }\n    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;\n  }\n  var view = new $DataView(new $ArrayBuffer(2));\n  var $setInt8 = $DataView[PROTOTYPE].setInt8;\n  view.setInt8(0, 2147483648);\n  view.setInt8(1, 2147483649);\n  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {\n    setInt8: function setInt8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    }\n  }, true);\n}\nsetToStringTag($ArrayBuffer, ARRAY_BUFFER);\nsetToStringTag($DataView, DATA_VIEW);\nhide($DataView[PROTOTYPE], $typed.VIEW, true);\nexports[ARRAY_BUFFER] = $ArrayBuffer;\nexports[DATA_VIEW] = $DataView;\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar dP = __w_pdfjs_require__(15);\nvar anObject = __w_pdfjs_require__(9);\nvar getKeys = __w_pdfjs_require__(41);\nmodule.exports = __w_pdfjs_require__(11) ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) {\n    dP.f(O, P = keys[i++], Properties[P]);\n  }return O;\n};\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar speciesConstructor = __w_pdfjs_require__(92);\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar isArray = __w_pdfjs_require__(93);\nvar SPECIES = __w_pdfjs_require__(4)('species');\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  }\n  return C === undefined ? Array : C;\n};\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(24);\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar UNSCOPABLES = __w_pdfjs_require__(4)('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) __w_pdfjs_require__(8)(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (done, value) {\n  return {\n    value: value,\n    done: !!done\n  };\n};\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar create = __w_pdfjs_require__(57);\nvar descriptor = __w_pdfjs_require__(29);\nvar setToStringTag = __w_pdfjs_require__(25);\nvar IteratorPrototype = {};\n__w_pdfjs_require__(8)(IteratorPrototype, __w_pdfjs_require__(4)('iterator'), function () {\n  return this;\n});\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toObject = __w_pdfjs_require__(19);\nvar toAbsoluteIndex = __w_pdfjs_require__(31);\nvar toLength = __w_pdfjs_require__(14);\nmodule.exports = [].copyWithin || function copyWithin(target, start) {\n  var O = toObject(this);\n  var len = toLength(O.length);\n  var to = toAbsoluteIndex(target, len);\n  var from = toAbsoluteIndex(start, len);\n  var end = arguments.length > 2 ? arguments[2] : undefined;\n  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);\n  var inc = 1;\n  if (from < to && to < from + count) {\n    inc = -1;\n    from += count - 1;\n    to += count - 1;\n  }\n  while (count-- > 0) {\n    if (from in O) O[to] = O[from];else delete O[to];\n    to += inc;\n    from += inc;\n  }\n  return O;\n};\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(99);\nmodule.exports = __w_pdfjs_require__(7).Number.isNaN;\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\n$export($export.S, 'Number', {\n  isNaN: function isNaN(number) {\n    return number != number;\n  }\n});\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(101);\nmodule.exports = __w_pdfjs_require__(7).Number.isInteger;\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\n$export($export.S, 'Number', { isInteger: __w_pdfjs_require__(102) });\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar floor = Math.floor;\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(66);\n__w_pdfjs_require__(104);\n__w_pdfjs_require__(67);\n__w_pdfjs_require__(106);\n__w_pdfjs_require__(110);\n__w_pdfjs_require__(111);\nmodule.exports = __w_pdfjs_require__(7).Promise;\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $at = __w_pdfjs_require__(105)(true);\n__w_pdfjs_require__(62)(String, 'String', function (iterated) {\n  this._t = String(iterated);\n  this._i = 0;\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return {\n    value: undefined,\n    done: true\n  };\n  point = $at(O, index);\n  this._i += point.length;\n  return {\n    value: point,\n    done: false\n  };\n});\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(18);\nvar defined = __w_pdfjs_require__(38);\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar LIBRARY = __w_pdfjs_require__(28);\nvar global = __w_pdfjs_require__(1);\nvar ctx = __w_pdfjs_require__(13);\nvar classof = __w_pdfjs_require__(32);\nvar $export = __w_pdfjs_require__(6);\nvar isObject = __w_pdfjs_require__(3);\nvar aFunction = __w_pdfjs_require__(21);\nvar anInstance = __w_pdfjs_require__(23);\nvar forOf = __w_pdfjs_require__(33);\nvar speciesConstructor = __w_pdfjs_require__(43);\nvar task = __w_pdfjs_require__(68).set;\nvar microtask = __w_pdfjs_require__(109)();\nvar newPromiseCapabilityModule = __w_pdfjs_require__(45);\nvar perform = __w_pdfjs_require__(69);\nvar promiseResolve = __w_pdfjs_require__(70);\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function empty() {};\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\nvar USE_NATIVE = !!function () {\n  try {\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[__w_pdfjs_require__(4)('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;\n  } catch (e) {}\n}();\nvar isThenable = function isThenable(it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function notify(promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function run(reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;else {\n            if (domain) domain.enter();\n            result = handler(value);\n            if (domain) domain.exit();\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        reject(e);\n      }\n    };\n    while (chain.length > i) {\n      run(chain[i++]);\n    }promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function onUnhandled(promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({\n            promise: promise,\n            reason: value\n          });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    }\n    promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function isUnhandled(promise) {\n  if (promise._h == 1) return false;\n  var chain = promise._a || promise._c;\n  var i = 0;\n  var reaction;\n  while (chain.length > i) {\n    reaction = chain[i++];\n    if (reaction.fail || !isUnhandled(reaction.promise)) return false;\n  }\n  return true;\n};\nvar onHandleUnhandled = function onHandleUnhandled(promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({\n        promise: promise,\n        reason: promise._v\n      });\n    }\n  });\n};\nvar $reject = function $reject(value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise;\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function $resolve(value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise;\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = {\n          _w: promise,\n          _d: false\n        };\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({\n      _w: promise,\n      _d: false\n    }, e);\n  }\n};\nif (!USE_NATIVE) {\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  Internal = function Promise(executor) {\n    this._c = [];\n    this._a = undefined;\n    this._s = 0;\n    this._d = false;\n    this._v = undefined;\n    this._h = 0;\n    this._n = false;\n  };\n  Internal.prototype = __w_pdfjs_require__(22)($Promise.prototype, {\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    'catch': function _catch(onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function OwnPromiseCapability() {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function newPromiseCapability(C) {\n    return C === $Promise || C === Wrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);\n  };\n}\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\n__w_pdfjs_require__(25)($Promise, PROMISE);\n__w_pdfjs_require__(63)(PROMISE);\nWrapper = __w_pdfjs_require__(7)[PROMISE];\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && __w_pdfjs_require__(44)(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(9);\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0:\n      return un ? fn() : fn.call(that);\n    case 1:\n      return un ? fn(args[0]) : fn.call(that, args[0]);\n    case 2:\n      return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);\n    case 3:\n      return un ? fn(args[0], args[1], args[2]) : fn.call(that, args[0], args[1], args[2]);\n    case 4:\n      return un ? fn(args[0], args[1], args[2], args[3]) : fn.call(that, args[0], args[1], args[2], args[3]);\n  }\n  return fn.apply(that, args);\n};\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(1);\nvar macrotask = __w_pdfjs_require__(68).set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = __w_pdfjs_require__(24)(process) == 'process';\nmodule.exports = function () {\n  var head, last, notify;\n  var flush = function flush() {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();else last = undefined;\n        throw e;\n      }\n    }\n    last = undefined;\n    if (parent) parent.enter();\n  };\n  if (isNode) {\n    notify = function notify() {\n      process.nextTick(flush);\n    };\n  } else if (Observer) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true });\n    notify = function notify() {\n      node.data = toggle = !toggle;\n    };\n  } else if (Promise && Promise.resolve) {\n    var promise = Promise.resolve();\n    notify = function notify() {\n      promise.then(flush);\n    };\n  } else {\n    notify = function notify() {\n      macrotask.call(global, flush);\n    };\n  }\n  return function (fn) {\n    var task = {\n      fn: fn,\n      next: undefined\n    };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    }\n    last = task;\n  };\n};\n\n/***/ }),\n/* 110 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\nvar core = __w_pdfjs_require__(7);\nvar global = __w_pdfjs_require__(1);\nvar speciesConstructor = __w_pdfjs_require__(43);\nvar promiseResolve = __w_pdfjs_require__(70);\n$export($export.P + $export.R, 'Promise', {\n  'finally': function _finally(onFinally) {\n    var C = speciesConstructor(this, core.Promise || global.Promise);\n    var isFunction = typeof onFinally == 'function';\n    return this.then(isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () {\n        return x;\n      });\n    } : onFinally, isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () {\n        throw e;\n      });\n    } : onFinally);\n  }\n});\n\n/***/ }),\n/* 111 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\nvar newPromiseCapability = __w_pdfjs_require__(45);\nvar perform = __w_pdfjs_require__(69);\n$export($export.S, 'Promise', {\n  'try': function _try(callbackfn) {\n    var promiseCapability = newPromiseCapability.f(this);\n    var result = perform(callbackfn);\n    (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n    return promiseCapability.promise;\n  }\n});\n\n/***/ }),\n/* 112 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(66);\n__w_pdfjs_require__(67);\n__w_pdfjs_require__(113);\n__w_pdfjs_require__(120);\n__w_pdfjs_require__(122);\nmodule.exports = __w_pdfjs_require__(7).WeakMap;\n\n/***/ }),\n/* 113 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar each = __w_pdfjs_require__(42)(0);\nvar redefine = __w_pdfjs_require__(16);\nvar meta = __w_pdfjs_require__(46);\nvar assign = __w_pdfjs_require__(114);\nvar weak = __w_pdfjs_require__(116);\nvar isObject = __w_pdfjs_require__(3);\nvar fails = __w_pdfjs_require__(12);\nvar validate = __w_pdfjs_require__(71);\nvar WEAK_MAP = 'WeakMap';\nvar getWeak = meta.getWeak;\nvar isExtensible = Object.isExtensible;\nvar uncaughtFrozenStore = weak.ufstore;\nvar tmp = {};\nvar InternalMap;\nvar wrapper = function wrapper(get) {\n  return function WeakMap() {\n    return get(this, arguments.length > 0 ? arguments[0] : undefined);\n  };\n};\nvar methods = {\n  get: function get(key) {\n    if (isObject(key)) {\n      var data = getWeak(key);\n      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);\n      return data ? data[this._i] : undefined;\n    }\n  },\n  set: function set(key, value) {\n    return weak.def(validate(this, WEAK_MAP), key, value);\n  }\n};\nvar $WeakMap = module.exports = __w_pdfjs_require__(117)(WEAK_MAP, wrapper, methods, weak, true, true);\nif (fails(function () {\n  return new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7;\n})) {\n  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);\n  assign(InternalMap.prototype, methods);\n  meta.NEED = true;\n  each(['delete', 'has', 'get', 'set'], function (key) {\n    var proto = $WeakMap.prototype;\n    var method = proto[key];\n    redefine(proto, key, function (a, b) {\n      if (isObject(a) && !isExtensible(a)) {\n        if (!this._f) this._f = new InternalMap();\n        var result = this._f[key](a, b);\n        return key == 'set' ? this : result;\n      }\n      return method.call(this, a, b);\n    });\n  });\n}\n\n/***/ }),\n/* 114 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getKeys = __w_pdfjs_require__(41);\nvar gOPS = __w_pdfjs_require__(115);\nvar pIE = __w_pdfjs_require__(65);\nvar toObject = __w_pdfjs_require__(19);\nvar IObject = __w_pdfjs_require__(37);\nvar $assign = Object.assign;\nmodule.exports = !$assign || __w_pdfjs_require__(12)(function () {\n  var A = {};\n  var B = {};\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) {\n    B[k] = k;\n  });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) {\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n    }\n  }\n  return T;\n} : $assign;\n\n/***/ }),\n/* 115 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nexports.f = Object.getOwnPropertySymbols;\n\n/***/ }),\n/* 116 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar redefineAll = __w_pdfjs_require__(22);\nvar getWeak = __w_pdfjs_require__(46).getWeak;\nvar anObject = __w_pdfjs_require__(9);\nvar isObject = __w_pdfjs_require__(3);\nvar anInstance = __w_pdfjs_require__(23);\nvar forOf = __w_pdfjs_require__(33);\nvar createArrayMethod = __w_pdfjs_require__(42);\nvar $has = __w_pdfjs_require__(10);\nvar validate = __w_pdfjs_require__(71);\nvar arrayFind = createArrayMethod(5);\nvar arrayFindIndex = createArrayMethod(6);\nvar id = 0;\nvar uncaughtFrozenStore = function uncaughtFrozenStore(that) {\n  return that._l || (that._l = new UncaughtFrozenStore());\n};\nvar UncaughtFrozenStore = function UncaughtFrozenStore() {\n  this.a = [];\n};\nvar findUncaughtFrozen = function findUncaughtFrozen(store, key) {\n  return arrayFind(store.a, function (it) {\n    return it[0] === key;\n  });\n};\nUncaughtFrozenStore.prototype = {\n  get: function get(key) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) return entry[1];\n  },\n  has: function has(key) {\n    return !!findUncaughtFrozen(this, key);\n  },\n  set: function set(key, value) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) entry[1] = value;else this.a.push([key, value]);\n  },\n  'delete': function _delete(key) {\n    var index = arrayFindIndex(this.a, function (it) {\n      return it[0] === key;\n    });\n    if (~index) this.a.splice(index, 1);\n    return !!~index;\n  }\n};\nmodule.exports = {\n  getConstructor: function getConstructor(wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;\n      that._i = id++;\n      that._l = undefined;\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      'delete': function _delete(key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);\n        return data && $has(data, this._i) && delete data[this._i];\n      },\n      has: function has(key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);\n        return data && $has(data, this._i);\n      }\n    });\n    return C;\n  },\n  def: function def(that, key, value) {\n    var data = getWeak(anObject(key), true);\n    if (data === true) uncaughtFrozenStore(that).set(key, value);else data[that._i] = value;\n    return that;\n  },\n  ufstore: uncaughtFrozenStore\n};\n\n/***/ }),\n/* 117 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(1);\nvar $export = __w_pdfjs_require__(6);\nvar redefine = __w_pdfjs_require__(16);\nvar redefineAll = __w_pdfjs_require__(22);\nvar meta = __w_pdfjs_require__(46);\nvar forOf = __w_pdfjs_require__(33);\nvar anInstance = __w_pdfjs_require__(23);\nvar isObject = __w_pdfjs_require__(3);\nvar fails = __w_pdfjs_require__(12);\nvar $iterDetect = __w_pdfjs_require__(44);\nvar setToStringTag = __w_pdfjs_require__(25);\nvar inheritIfRequired = __w_pdfjs_require__(118);\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n  var Base = global[NAME];\n  var C = Base;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var proto = C && C.prototype;\n  var O = {};\n  var fixMethod = function fixMethod(KEY) {\n    var fn = proto[KEY];\n    redefine(proto, KEY, KEY == 'delete' ? function (a) {\n      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'has' ? function has(a) {\n      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'get' ? function get(a) {\n      return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'add' ? function add(a) {\n      fn.call(this, a === 0 ? 0 : a);\n      return this;\n    } : function set(a, b) {\n      fn.call(this, a === 0 ? 0 : a, b);\n      return this;\n    });\n  };\n  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n    new C().entries().next();\n  }))) {\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    var instance = new C();\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n    var THROWS_ON_PRIMITIVES = fails(function () {\n      instance.has(1);\n    });\n    var ACCEPT_ITERABLES = $iterDetect(function (iter) {\n      new C(iter);\n    });\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n      var $instance = new C();\n      var index = 5;\n      while (index--) {\n        $instance[ADDER](index, index);\n      }return !$instance.has(-0);\n    });\n    if (!ACCEPT_ITERABLES) {\n      C = wrapper(function (target, iterable) {\n        anInstance(target, C, NAME);\n        var that = inheritIfRequired(new Base(), target, C);\n        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n        return that;\n      });\n      C.prototype = proto;\n      proto.constructor = C;\n    }\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n    if (IS_WEAK && proto.clear) delete proto.clear;\n  }\n  setToStringTag(C, NAME);\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F * (C != Base), O);\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n  return C;\n};\n\n/***/ }),\n/* 118 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar setPrototypeOf = __w_pdfjs_require__(119).set;\nmodule.exports = function (that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n    setPrototypeOf(that, P);\n  }\n  return that;\n};\n\n/***/ }),\n/* 119 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar anObject = __w_pdfjs_require__(9);\nvar check = function check(O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? function (test, buggy, set) {\n    try {\n      set = __w_pdfjs_require__(13)(Function.call, __w_pdfjs_require__(64).f(Object.prototype, '__proto__').set, 2);\n      set(test, []);\n      buggy = !(test instanceof Array);\n    } catch (e) {\n      buggy = true;\n    }\n    return function setPrototypeOf(O, proto) {\n      check(O, proto);\n      if (buggy) O.__proto__ = proto;else set(O, proto);\n      return O;\n    };\n  }({}, false) : undefined),\n  check: check\n};\n\n/***/ }),\n/* 120 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(121)('WeakMap');\n\n/***/ }),\n/* 121 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, {\n    of: function of() {\n      var length = arguments.length;\n      var A = Array(length);\n      while (length--) {\n        A[length] = arguments[length];\n      }return new this(A);\n    }\n  });\n};\n\n/***/ }),\n/* 122 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(123)('WeakMap');\n\n/***/ }),\n/* 123 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\nvar aFunction = __w_pdfjs_require__(21);\nvar ctx = __w_pdfjs_require__(13);\nvar forOf = __w_pdfjs_require__(33);\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, {\n    from: function from(source) {\n      var mapFn = arguments[1];\n      var mapping, A, n, cb;\n      aFunction(this);\n      mapping = mapFn !== undefined;\n      if (mapping) aFunction(mapFn);\n      if (source == undefined) return new this();\n      A = [];\n      if (mapping) {\n        n = 0;\n        cb = ctx(mapFn, arguments[2], 2);\n        forOf(source, false, function (nextItem) {\n          A.push(cb(nextItem, n++));\n        });\n      } else {\n        forOf(source, false, A.push, A);\n      }\n      return new this(A);\n    }\n  });\n};\n\n/***/ }),\n/* 124 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isReadableStreamSupported = false;\nif (typeof ReadableStream !== 'undefined') {\n  try {\n    new ReadableStream({\n      start: function start(controller) {\n        controller.close();\n      }\n    });\n    isReadableStreamSupported = true;\n  } catch (e) {}\n}\nif (isReadableStreamSupported) {\n  exports.ReadableStream = ReadableStream;\n} else {\n  exports.ReadableStream = __w_pdfjs_require__(125).ReadableStream;\n}\n\n/***/ }),\n/* 125 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function (e, a) {\n  for (var i in a) {\n    e[i] = a[i];\n  }\n})(exports, function (modules) {\n  var installedModules = {};\n  function __w_pdfjs_require__(moduleId) {\n    if (installedModules[moduleId]) return installedModules[moduleId].exports;\n    var module = installedModules[moduleId] = {\n      i: moduleId,\n      l: false,\n      exports: {}\n    };\n    modules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n    module.l = true;\n    return module.exports;\n  }\n  __w_pdfjs_require__.m = modules;\n  __w_pdfjs_require__.c = installedModules;\n  __w_pdfjs_require__.i = function (value) {\n    return value;\n  };\n  __w_pdfjs_require__.d = function (exports, name, getter) {\n    if (!__w_pdfjs_require__.o(exports, name)) {\n      Object.defineProperty(exports, name, {\n        configurable: false,\n        enumerable: true,\n        get: getter\n      });\n    }\n  };\n  __w_pdfjs_require__.n = function (module) {\n    var getter = module && module.__esModule ? function getDefault() {\n      return module['default'];\n    } : function getModuleExports() {\n      return module;\n    };\n    __w_pdfjs_require__.d(getter, 'a', getter);\n    return getter;\n  };\n  __w_pdfjs_require__.o = function (object, property) {\n    return Object.prototype.hasOwnProperty.call(object, property);\n  };\n  __w_pdfjs_require__.p = \"\";\n  return __w_pdfjs_require__(__w_pdfjs_require__.s = 7);\n}([function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n    return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n  };\n  var _require = __w_pdfjs_require__(1),\n      assert = _require.assert;\n  function IsPropertyKey(argument) {\n    return typeof argument === 'string' || (typeof argument === 'undefined' ? 'undefined' : _typeof(argument)) === 'symbol';\n  }\n  exports.typeIsObject = function (x) {\n    return (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && x !== null || typeof x === 'function';\n  };\n  exports.createDataProperty = function (o, p, v) {\n    assert(exports.typeIsObject(o));\n    Object.defineProperty(o, p, {\n      value: v,\n      writable: true,\n      enumerable: true,\n      configurable: true\n    });\n  };\n  exports.createArrayFromList = function (elements) {\n    return elements.slice();\n  };\n  exports.ArrayBufferCopy = function (dest, destOffset, src, srcOffset, n) {\n    new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n  };\n  exports.CreateIterResultObject = function (value, done) {\n    assert(typeof done === 'boolean');\n    var obj = {};\n    Object.defineProperty(obj, 'value', {\n      value: value,\n      enumerable: true,\n      writable: true,\n      configurable: true\n    });\n    Object.defineProperty(obj, 'done', {\n      value: done,\n      enumerable: true,\n      writable: true,\n      configurable: true\n    });\n    return obj;\n  };\n  exports.IsFiniteNonNegativeNumber = function (v) {\n    if (Number.isNaN(v)) {\n      return false;\n    }\n    if (v === Infinity) {\n      return false;\n    }\n    if (v < 0) {\n      return false;\n    }\n    return true;\n  };\n  function Call(F, V, args) {\n    if (typeof F !== 'function') {\n      throw new TypeError('Argument is not a function');\n    }\n    return Function.prototype.apply.call(F, V, args);\n  }\n  exports.InvokeOrNoop = function (O, P, args) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    var method = O[P];\n    if (method === undefined) {\n      return undefined;\n    }\n    return Call(method, O, args);\n  };\n  exports.PromiseInvokeOrNoop = function (O, P, args) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    try {\n      return Promise.resolve(exports.InvokeOrNoop(O, P, args));\n    } catch (returnValueE) {\n      return Promise.reject(returnValueE);\n    }\n  };\n  exports.PromiseInvokeOrPerformFallback = function (O, P, args, F, argsF) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    assert(Array.isArray(argsF));\n    var method = void 0;\n    try {\n      method = O[P];\n    } catch (methodE) {\n      return Promise.reject(methodE);\n    }\n    if (method === undefined) {\n      return F.apply(null, argsF);\n    }\n    try {\n      return Promise.resolve(Call(method, O, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  exports.TransferArrayBuffer = function (O) {\n    return O.slice();\n  };\n  exports.ValidateAndNormalizeHighWaterMark = function (highWaterMark) {\n    highWaterMark = Number(highWaterMark);\n    if (Number.isNaN(highWaterMark) || highWaterMark < 0) {\n      throw new RangeError('highWaterMark property of a queuing strategy must be non-negative and non-NaN');\n    }\n    return highWaterMark;\n  };\n  exports.ValidateAndNormalizeQueuingStrategy = function (size, highWaterMark) {\n    if (size !== undefined && typeof size !== 'function') {\n      throw new TypeError('size property of a queuing strategy must be a function');\n    }\n    highWaterMark = exports.ValidateAndNormalizeHighWaterMark(highWaterMark);\n    return {\n      size: size,\n      highWaterMark: highWaterMark\n    };\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  function rethrowAssertionErrorRejection(e) {\n    if (e && e.constructor === AssertionError) {\n      setTimeout(function () {\n        throw e;\n      }, 0);\n    }\n  }\n  function AssertionError(message) {\n    this.name = 'AssertionError';\n    this.message = message || '';\n    this.stack = new Error().stack;\n  }\n  AssertionError.prototype = Object.create(Error.prototype);\n  AssertionError.prototype.constructor = AssertionError;\n  function assert(value, message) {\n    if (!value) {\n      throw new AssertionError(message);\n    }\n  }\n  module.exports = {\n    rethrowAssertionErrorRejection: rethrowAssertionErrorRejection,\n    AssertionError: AssertionError,\n    assert: assert\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(0),\n      InvokeOrNoop = _require.InvokeOrNoop,\n      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\n      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\n      typeIsObject = _require.typeIsObject;\n  var _require2 = __w_pdfjs_require__(1),\n      assert = _require2.assert,\n      rethrowAssertionErrorRejection = _require2.rethrowAssertionErrorRejection;\n  var _require3 = __w_pdfjs_require__(3),\n      DequeueValue = _require3.DequeueValue,\n      EnqueueValueWithSize = _require3.EnqueueValueWithSize,\n      PeekQueueValue = _require3.PeekQueueValue,\n      ResetQueue = _require3.ResetQueue;\n  var WritableStream = function () {\n    function WritableStream() {\n      var underlyingSink = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          size = _ref.size,\n          _ref$highWaterMark = _ref.highWaterMark,\n          highWaterMark = _ref$highWaterMark === undefined ? 1 : _ref$highWaterMark;\n      _classCallCheck(this, WritableStream);\n      this._state = 'writable';\n      this._storedError = undefined;\n      this._writer = undefined;\n      this._writableStreamController = undefined;\n      this._writeRequests = [];\n      this._inFlightWriteRequest = undefined;\n      this._closeRequest = undefined;\n      this._inFlightCloseRequest = undefined;\n      this._pendingAbortRequest = undefined;\n      this._backpressure = false;\n      var type = underlyingSink.type;\n      if (type !== undefined) {\n        throw new RangeError('Invalid type is specified');\n      }\n      this._writableStreamController = new WritableStreamDefaultController(this, underlyingSink, size, highWaterMark);\n      this._writableStreamController.__startSteps();\n    }\n    _createClass(WritableStream, [{\n      key: 'abort',\n      value: function abort(reason) {\n        if (IsWritableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('abort'));\n        }\n        if (IsWritableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('Cannot abort a stream that already has a writer'));\n        }\n        return WritableStreamAbort(this, reason);\n      }\n    }, {\n      key: 'getWriter',\n      value: function getWriter() {\n        if (IsWritableStream(this) === false) {\n          throw streamBrandCheckException('getWriter');\n        }\n        return AcquireWritableStreamDefaultWriter(this);\n      }\n    }, {\n      key: 'locked',\n      get: function get() {\n        if (IsWritableStream(this) === false) {\n          throw streamBrandCheckException('locked');\n        }\n        return IsWritableStreamLocked(this);\n      }\n    }]);\n    return WritableStream;\n  }();\n  module.exports = {\n    AcquireWritableStreamDefaultWriter: AcquireWritableStreamDefaultWriter,\n    IsWritableStream: IsWritableStream,\n    IsWritableStreamLocked: IsWritableStreamLocked,\n    WritableStream: WritableStream,\n    WritableStreamAbort: WritableStreamAbort,\n    WritableStreamDefaultControllerError: WritableStreamDefaultControllerError,\n    WritableStreamDefaultWriterCloseWithErrorPropagation: WritableStreamDefaultWriterCloseWithErrorPropagation,\n    WritableStreamDefaultWriterRelease: WritableStreamDefaultWriterRelease,\n    WritableStreamDefaultWriterWrite: WritableStreamDefaultWriterWrite,\n    WritableStreamCloseQueuedOrInFlight: WritableStreamCloseQueuedOrInFlight\n  };\n  function AcquireWritableStreamDefaultWriter(stream) {\n    return new WritableStreamDefaultWriter(stream);\n  }\n  function IsWritableStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function IsWritableStreamLocked(stream) {\n    assert(IsWritableStream(stream) === true, 'IsWritableStreamLocked should only be used on known writable streams');\n    if (stream._writer === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamAbort(stream, reason) {\n    var state = stream._state;\n    if (state === 'closed') {\n      return Promise.resolve(undefined);\n    }\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    var error = new TypeError('Requested to abort');\n    if (stream._pendingAbortRequest !== undefined) {\n      return Promise.reject(error);\n    }\n    assert(state === 'writable' || state === 'erroring', 'state must be writable or erroring');\n    var wasAlreadyErroring = false;\n    if (state === 'erroring') {\n      wasAlreadyErroring = true;\n      reason = undefined;\n    }\n    var promise = new Promise(function (resolve, reject) {\n      stream._pendingAbortRequest = {\n        _resolve: resolve,\n        _reject: reject,\n        _reason: reason,\n        _wasAlreadyErroring: wasAlreadyErroring\n      };\n    });\n    if (wasAlreadyErroring === false) {\n      WritableStreamStartErroring(stream, error);\n    }\n    return promise;\n  }\n  function WritableStreamAddWriteRequest(stream) {\n    assert(IsWritableStreamLocked(stream) === true);\n    assert(stream._state === 'writable');\n    var promise = new Promise(function (resolve, reject) {\n      var writeRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._writeRequests.push(writeRequest);\n    });\n    return promise;\n  }\n  function WritableStreamDealWithRejection(stream, error) {\n    var state = stream._state;\n    if (state === 'writable') {\n      WritableStreamStartErroring(stream, error);\n      return;\n    }\n    assert(state === 'erroring');\n    WritableStreamFinishErroring(stream);\n  }\n  function WritableStreamStartErroring(stream, reason) {\n    assert(stream._storedError === undefined, 'stream._storedError === undefined');\n    assert(stream._state === 'writable', 'state must be writable');\n    var controller = stream._writableStreamController;\n    assert(controller !== undefined, 'controller must not be undefined');\n    stream._state = 'erroring';\n    stream._storedError = reason;\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n    }\n    if (WritableStreamHasOperationMarkedInFlight(stream) === false && controller._started === true) {\n      WritableStreamFinishErroring(stream);\n    }\n  }\n  function WritableStreamFinishErroring(stream) {\n    assert(stream._state === 'erroring', 'stream._state === erroring');\n    assert(WritableStreamHasOperationMarkedInFlight(stream) === false, 'WritableStreamHasOperationMarkedInFlight(stream) === false');\n    stream._state = 'errored';\n    stream._writableStreamController.__errorSteps();\n    var storedError = stream._storedError;\n    for (var i = 0; i < stream._writeRequests.length; i++) {\n      var writeRequest = stream._writeRequests[i];\n      writeRequest._reject(storedError);\n    }\n    stream._writeRequests = [];\n    if (stream._pendingAbortRequest === undefined) {\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      return;\n    }\n    var abortRequest = stream._pendingAbortRequest;\n    stream._pendingAbortRequest = undefined;\n    if (abortRequest._wasAlreadyErroring === true) {\n      abortRequest._reject(storedError);\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      return;\n    }\n    var promise = stream._writableStreamController.__abortSteps(abortRequest._reason);\n    promise.then(function () {\n      abortRequest._resolve();\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    }, function (reason) {\n      abortRequest._reject(reason);\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    });\n  }\n  function WritableStreamFinishInFlightWrite(stream) {\n    assert(stream._inFlightWriteRequest !== undefined);\n    stream._inFlightWriteRequest._resolve(undefined);\n    stream._inFlightWriteRequest = undefined;\n  }\n  function WritableStreamFinishInFlightWriteWithError(stream, error) {\n    assert(stream._inFlightWriteRequest !== undefined);\n    stream._inFlightWriteRequest._reject(error);\n    stream._inFlightWriteRequest = undefined;\n    assert(stream._state === 'writable' || stream._state === 'erroring');\n    WritableStreamDealWithRejection(stream, error);\n  }\n  function WritableStreamFinishInFlightClose(stream) {\n    assert(stream._inFlightCloseRequest !== undefined);\n    stream._inFlightCloseRequest._resolve(undefined);\n    stream._inFlightCloseRequest = undefined;\n    var state = stream._state;\n    assert(state === 'writable' || state === 'erroring');\n    if (state === 'erroring') {\n      stream._storedError = undefined;\n      if (stream._pendingAbortRequest !== undefined) {\n        stream._pendingAbortRequest._resolve();\n        stream._pendingAbortRequest = undefined;\n      }\n    }\n    stream._state = 'closed';\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      defaultWriterClosedPromiseResolve(writer);\n    }\n    assert(stream._pendingAbortRequest === undefined, 'stream._pendingAbortRequest === undefined');\n    assert(stream._storedError === undefined, 'stream._storedError === undefined');\n  }\n  function WritableStreamFinishInFlightCloseWithError(stream, error) {\n    assert(stream._inFlightCloseRequest !== undefined);\n    stream._inFlightCloseRequest._reject(error);\n    stream._inFlightCloseRequest = undefined;\n    assert(stream._state === 'writable' || stream._state === 'erroring');\n    if (stream._pendingAbortRequest !== undefined) {\n      stream._pendingAbortRequest._reject(error);\n      stream._pendingAbortRequest = undefined;\n    }\n    WritableStreamDealWithRejection(stream, error);\n  }\n  function WritableStreamCloseQueuedOrInFlight(stream) {\n    if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamHasOperationMarkedInFlight(stream) {\n    if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamMarkCloseRequestInFlight(stream) {\n    assert(stream._inFlightCloseRequest === undefined);\n    assert(stream._closeRequest !== undefined);\n    stream._inFlightCloseRequest = stream._closeRequest;\n    stream._closeRequest = undefined;\n  }\n  function WritableStreamMarkFirstWriteRequestInFlight(stream) {\n    assert(stream._inFlightWriteRequest === undefined, 'there must be no pending write request');\n    assert(stream._writeRequests.length !== 0, 'writeRequests must not be empty');\n    stream._inFlightWriteRequest = stream._writeRequests.shift();\n  }\n  function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n    assert(stream._state === 'errored', '_stream_.[[state]] is `\"errored\"`');\n    if (stream._closeRequest !== undefined) {\n      assert(stream._inFlightCloseRequest === undefined);\n      stream._closeRequest._reject(stream._storedError);\n      stream._closeRequest = undefined;\n    }\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      defaultWriterClosedPromiseReject(writer, stream._storedError);\n      writer._closedPromise.catch(function () {});\n    }\n  }\n  function WritableStreamUpdateBackpressure(stream, backpressure) {\n    assert(stream._state === 'writable');\n    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n    var writer = stream._writer;\n    if (writer !== undefined && backpressure !== stream._backpressure) {\n      if (backpressure === true) {\n        defaultWriterReadyPromiseReset(writer);\n      } else {\n        assert(backpressure === false);\n        defaultWriterReadyPromiseResolve(writer);\n      }\n    }\n    stream._backpressure = backpressure;\n  }\n  var WritableStreamDefaultWriter = function () {\n    function WritableStreamDefaultWriter(stream) {\n      _classCallCheck(this, WritableStreamDefaultWriter);\n      if (IsWritableStream(stream) === false) {\n        throw new TypeError('WritableStreamDefaultWriter can only be constructed with a WritableStream instance');\n      }\n      if (IsWritableStreamLocked(stream) === true) {\n        throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n      }\n      this._ownerWritableStream = stream;\n      stream._writer = this;\n      var state = stream._state;\n      if (state === 'writable') {\n        if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._backpressure === true) {\n          defaultWriterReadyPromiseInitialize(this);\n        } else {\n          defaultWriterReadyPromiseInitializeAsResolved(this);\n        }\n        defaultWriterClosedPromiseInitialize(this);\n      } else if (state === 'erroring') {\n        defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n        this._readyPromise.catch(function () {});\n        defaultWriterClosedPromiseInitialize(this);\n      } else if (state === 'closed') {\n        defaultWriterReadyPromiseInitializeAsResolved(this);\n        defaultWriterClosedPromiseInitializeAsResolved(this);\n      } else {\n        assert(state === 'errored', 'state must be errored');\n        var storedError = stream._storedError;\n        defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n        this._readyPromise.catch(function () {});\n        defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n        this._closedPromise.catch(function () {});\n      }\n    }\n    _createClass(WritableStreamDefaultWriter, [{\n      key: 'abort',\n      value: function abort(reason) {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('abort'));\n        }\n        if (this._ownerWritableStream === undefined) {\n          return Promise.reject(defaultWriterLockException('abort'));\n        }\n        return WritableStreamDefaultWriterAbort(this, reason);\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('close'));\n        }\n        var stream = this._ownerWritableStream;\n        if (stream === undefined) {\n          return Promise.reject(defaultWriterLockException('close'));\n        }\n        if (WritableStreamCloseQueuedOrInFlight(stream) === true) {\n          return Promise.reject(new TypeError('cannot close an already-closing stream'));\n        }\n        return WritableStreamDefaultWriterClose(this);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          throw defaultWriterBrandCheckException('releaseLock');\n        }\n        var stream = this._ownerWritableStream;\n        if (stream === undefined) {\n          return;\n        }\n        assert(stream._writer !== undefined);\n        WritableStreamDefaultWriterRelease(this);\n      }\n    }, {\n      key: 'write',\n      value: function write(chunk) {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('write'));\n        }\n        if (this._ownerWritableStream === undefined) {\n          return Promise.reject(defaultWriterLockException('write to'));\n        }\n        return WritableStreamDefaultWriterWrite(this, chunk);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          throw defaultWriterBrandCheckException('desiredSize');\n        }\n        if (this._ownerWritableStream === undefined) {\n          throw defaultWriterLockException('desiredSize');\n        }\n        return WritableStreamDefaultWriterGetDesiredSize(this);\n      }\n    }, {\n      key: 'ready',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('ready'));\n        }\n        return this._readyPromise;\n      }\n    }]);\n    return WritableStreamDefaultWriter;\n  }();\n  function IsWritableStreamDefaultWriter(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamDefaultWriterAbort(writer, reason) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    return WritableStreamAbort(stream, reason);\n  }\n  function WritableStreamDefaultWriterClose(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var state = stream._state;\n    if (state === 'closed' || state === 'errored') {\n      return Promise.reject(new TypeError('The stream (in ' + state + ' state) is not in the writable state and cannot be closed'));\n    }\n    assert(state === 'writable' || state === 'erroring');\n    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n    var promise = new Promise(function (resolve, reject) {\n      var closeRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._closeRequest = closeRequest;\n    });\n    if (stream._backpressure === true && state === 'writable') {\n      defaultWriterReadyPromiseResolve(writer);\n    }\n    WritableStreamDefaultControllerClose(stream._writableStreamController);\n    return promise;\n  }\n  function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var state = stream._state;\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n      return Promise.resolve();\n    }\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(state === 'writable' || state === 'erroring');\n    return WritableStreamDefaultWriterClose(writer);\n  }\n  function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n    if (writer._closedPromiseState === 'pending') {\n      defaultWriterClosedPromiseReject(writer, error);\n    } else {\n      defaultWriterClosedPromiseResetToRejected(writer, error);\n    }\n    writer._closedPromise.catch(function () {});\n  }\n  function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n    if (writer._readyPromiseState === 'pending') {\n      defaultWriterReadyPromiseReject(writer, error);\n    } else {\n      defaultWriterReadyPromiseResetToRejected(writer, error);\n    }\n    writer._readyPromise.catch(function () {});\n  }\n  function WritableStreamDefaultWriterGetDesiredSize(writer) {\n    var stream = writer._ownerWritableStream;\n    var state = stream._state;\n    if (state === 'errored' || state === 'erroring') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n  }\n  function WritableStreamDefaultWriterRelease(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    assert(stream._writer === writer);\n    var releasedError = new TypeError('Writer was released and can no longer be used to monitor the stream\\'s closedness');\n    WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n    WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n    stream._writer = undefined;\n    writer._ownerWritableStream = undefined;\n  }\n  function WritableStreamDefaultWriterWrite(writer, chunk) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var controller = stream._writableStreamController;\n    var chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n    if (stream !== writer._ownerWritableStream) {\n      return Promise.reject(defaultWriterLockException('write to'));\n    }\n    var state = stream._state;\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n      return Promise.reject(new TypeError('The stream is closing or closed and cannot be written to'));\n    }\n    if (state === 'erroring') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(state === 'writable');\n    var promise = WritableStreamAddWriteRequest(stream);\n    WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n    return promise;\n  }\n  var WritableStreamDefaultController = function () {\n    function WritableStreamDefaultController(stream, underlyingSink, size, highWaterMark) {\n      _classCallCheck(this, WritableStreamDefaultController);\n      if (IsWritableStream(stream) === false) {\n        throw new TypeError('WritableStreamDefaultController can only be constructed with a WritableStream instance');\n      }\n      if (stream._writableStreamController !== undefined) {\n        throw new TypeError('WritableStreamDefaultController instances can only be created by the WritableStream constructor');\n      }\n      this._controlledWritableStream = stream;\n      this._underlyingSink = underlyingSink;\n      this._queue = undefined;\n      this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._started = false;\n      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\n      this._strategySize = normalizedStrategy.size;\n      this._strategyHWM = normalizedStrategy.highWaterMark;\n      var backpressure = WritableStreamDefaultControllerGetBackpressure(this);\n      WritableStreamUpdateBackpressure(stream, backpressure);\n    }\n    _createClass(WritableStreamDefaultController, [{\n      key: 'error',\n      value: function error(e) {\n        if (IsWritableStreamDefaultController(this) === false) {\n          throw new TypeError('WritableStreamDefaultController.prototype.error can only be used on a WritableStreamDefaultController');\n        }\n        var state = this._controlledWritableStream._state;\n        if (state !== 'writable') {\n          return;\n        }\n        WritableStreamDefaultControllerError(this, e);\n      }\n    }, {\n      key: '__abortSteps',\n      value: function __abortSteps(reason) {\n        return PromiseInvokeOrNoop(this._underlyingSink, 'abort', [reason]);\n      }\n    }, {\n      key: '__errorSteps',\n      value: function __errorSteps() {\n        ResetQueue(this);\n      }\n    }, {\n      key: '__startSteps',\n      value: function __startSteps() {\n        var _this = this;\n        var startResult = InvokeOrNoop(this._underlyingSink, 'start', [this]);\n        var stream = this._controlledWritableStream;\n        Promise.resolve(startResult).then(function () {\n          assert(stream._state === 'writable' || stream._state === 'erroring');\n          _this._started = true;\n          WritableStreamDefaultControllerAdvanceQueueIfNeeded(_this);\n        }, function (r) {\n          assert(stream._state === 'writable' || stream._state === 'erroring');\n          _this._started = true;\n          WritableStreamDealWithRejection(stream, r);\n        }).catch(rethrowAssertionErrorRejection);\n      }\n    }]);\n    return WritableStreamDefaultController;\n  }();\n  function WritableStreamDefaultControllerClose(controller) {\n    EnqueueValueWithSize(controller, 'close', 0);\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n  }\n  function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n    var strategySize = controller._strategySize;\n    if (strategySize === undefined) {\n      return 1;\n    }\n    try {\n      return strategySize(chunk);\n    } catch (chunkSizeE) {\n      WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n      return 1;\n    }\n  }\n  function WritableStreamDefaultControllerGetDesiredSize(controller) {\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n    var writeRecord = { chunk: chunk };\n    try {\n      EnqueueValueWithSize(controller, writeRecord, chunkSize);\n    } catch (enqueueE) {\n      WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n      return;\n    }\n    var stream = controller._controlledWritableStream;\n    if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._state === 'writable') {\n      var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n      WritableStreamUpdateBackpressure(stream, backpressure);\n    }\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n  }\n  function IsWritableStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSink')) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n    var stream = controller._controlledWritableStream;\n    if (controller._started === false) {\n      return;\n    }\n    if (stream._inFlightWriteRequest !== undefined) {\n      return;\n    }\n    var state = stream._state;\n    if (state === 'closed' || state === 'errored') {\n      return;\n    }\n    if (state === 'erroring') {\n      WritableStreamFinishErroring(stream);\n      return;\n    }\n    if (controller._queue.length === 0) {\n      return;\n    }\n    var writeRecord = PeekQueueValue(controller);\n    if (writeRecord === 'close') {\n      WritableStreamDefaultControllerProcessClose(controller);\n    } else {\n      WritableStreamDefaultControllerProcessWrite(controller, writeRecord.chunk);\n    }\n  }\n  function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n    if (controller._controlledWritableStream._state === 'writable') {\n      WritableStreamDefaultControllerError(controller, error);\n    }\n  }\n  function WritableStreamDefaultControllerProcessClose(controller) {\n    var stream = controller._controlledWritableStream;\n    WritableStreamMarkCloseRequestInFlight(stream);\n    DequeueValue(controller);\n    assert(controller._queue.length === 0, 'queue must be empty once the final write record is dequeued');\n    var sinkClosePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'close', []);\n    sinkClosePromise.then(function () {\n      WritableStreamFinishInFlightClose(stream);\n    }, function (reason) {\n      WritableStreamFinishInFlightCloseWithError(stream, reason);\n    }).catch(rethrowAssertionErrorRejection);\n  }\n  function WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n    var stream = controller._controlledWritableStream;\n    WritableStreamMarkFirstWriteRequestInFlight(stream);\n    var sinkWritePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'write', [chunk, controller]);\n    sinkWritePromise.then(function () {\n      WritableStreamFinishInFlightWrite(stream);\n      var state = stream._state;\n      assert(state === 'writable' || state === 'erroring');\n      DequeueValue(controller);\n      if (WritableStreamCloseQueuedOrInFlight(stream) === false && state === 'writable') {\n        var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n      }\n      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }, function (reason) {\n      WritableStreamFinishInFlightWriteWithError(stream, reason);\n    }).catch(rethrowAssertionErrorRejection);\n  }\n  function WritableStreamDefaultControllerGetBackpressure(controller) {\n    var desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n    return desiredSize <= 0;\n  }\n  function WritableStreamDefaultControllerError(controller, error) {\n    var stream = controller._controlledWritableStream;\n    assert(stream._state === 'writable');\n    WritableStreamStartErroring(stream, error);\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('WritableStream.prototype.' + name + ' can only be used on a WritableStream');\n  }\n  function defaultWriterBrandCheckException(name) {\n    return new TypeError('WritableStreamDefaultWriter.prototype.' + name + ' can only be used on a WritableStreamDefaultWriter');\n  }\n  function defaultWriterLockException(name) {\n    return new TypeError('Cannot ' + name + ' a stream using a released writer');\n  }\n  function defaultWriterClosedPromiseInitialize(writer) {\n    writer._closedPromise = new Promise(function (resolve, reject) {\n      writer._closedPromise_resolve = resolve;\n      writer._closedPromise_reject = reject;\n      writer._closedPromiseState = 'pending';\n    });\n  }\n  function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n    writer._closedPromise = Promise.reject(reason);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseInitializeAsResolved(writer) {\n    writer._closedPromise = Promise.resolve(undefined);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'resolved';\n  }\n  function defaultWriterClosedPromiseReject(writer, reason) {\n    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\n    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\n    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\n    writer._closedPromise_reject(reason);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseResetToRejected(writer, reason) {\n    assert(writer._closedPromise_resolve === undefined, 'writer._closedPromise_resolve === undefined');\n    assert(writer._closedPromise_reject === undefined, 'writer._closedPromise_reject === undefined');\n    assert(writer._closedPromiseState !== 'pending', 'writer._closedPromiseState is not pending');\n    writer._closedPromise = Promise.reject(reason);\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseResolve(writer) {\n    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\n    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\n    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\n    writer._closedPromise_resolve(undefined);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'resolved';\n  }\n  function defaultWriterReadyPromiseInitialize(writer) {\n    writer._readyPromise = new Promise(function (resolve, reject) {\n      writer._readyPromise_resolve = resolve;\n      writer._readyPromise_reject = reject;\n    });\n    writer._readyPromiseState = 'pending';\n  }\n  function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n    writer._readyPromise = Promise.reject(reason);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseInitializeAsResolved(writer) {\n    writer._readyPromise = Promise.resolve(undefined);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'fulfilled';\n  }\n  function defaultWriterReadyPromiseReject(writer, reason) {\n    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\n    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\n    writer._readyPromise_reject(reason);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseReset(writer) {\n    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\n    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\n    writer._readyPromise = new Promise(function (resolve, reject) {\n      writer._readyPromise_resolve = resolve;\n      writer._readyPromise_reject = reject;\n    });\n    writer._readyPromiseState = 'pending';\n  }\n  function defaultWriterReadyPromiseResetToRejected(writer, reason) {\n    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\n    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\n    writer._readyPromise = Promise.reject(reason);\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseResolve(writer) {\n    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\n    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\n    writer._readyPromise_resolve(undefined);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'fulfilled';\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _require = __w_pdfjs_require__(0),\n      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber;\n  var _require2 = __w_pdfjs_require__(1),\n      assert = _require2.assert;\n  exports.DequeueValue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: DequeueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    assert(container._queue.length > 0, 'Spec-level failure: should never dequeue from an empty queue.');\n    var pair = container._queue.shift();\n    container._queueTotalSize -= pair.size;\n    if (container._queueTotalSize < 0) {\n      container._queueTotalSize = 0;\n    }\n    return pair.value;\n  };\n  exports.EnqueueValueWithSize = function (container, value, size) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: EnqueueValueWithSize should only be used on containers with [[queue]] and ' + '[[queueTotalSize]].');\n    size = Number(size);\n    if (!IsFiniteNonNegativeNumber(size)) {\n      throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n    }\n    container._queue.push({\n      value: value,\n      size: size\n    });\n    container._queueTotalSize += size;\n  };\n  exports.PeekQueueValue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: PeekQueueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    assert(container._queue.length > 0, 'Spec-level failure: should never peek at an empty queue.');\n    var pair = container._queue[0];\n    return pair.value;\n  };\n  exports.ResetQueue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: ResetQueue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    container._queue = [];\n    container._queueTotalSize = 0;\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(0),\n      ArrayBufferCopy = _require.ArrayBufferCopy,\n      CreateIterResultObject = _require.CreateIterResultObject,\n      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber,\n      InvokeOrNoop = _require.InvokeOrNoop,\n      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\n      TransferArrayBuffer = _require.TransferArrayBuffer,\n      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\n      ValidateAndNormalizeHighWaterMark = _require.ValidateAndNormalizeHighWaterMark;\n  var _require2 = __w_pdfjs_require__(0),\n      createArrayFromList = _require2.createArrayFromList,\n      createDataProperty = _require2.createDataProperty,\n      typeIsObject = _require2.typeIsObject;\n  var _require3 = __w_pdfjs_require__(1),\n      assert = _require3.assert,\n      rethrowAssertionErrorRejection = _require3.rethrowAssertionErrorRejection;\n  var _require4 = __w_pdfjs_require__(3),\n      DequeueValue = _require4.DequeueValue,\n      EnqueueValueWithSize = _require4.EnqueueValueWithSize,\n      ResetQueue = _require4.ResetQueue;\n  var _require5 = __w_pdfjs_require__(2),\n      AcquireWritableStreamDefaultWriter = _require5.AcquireWritableStreamDefaultWriter,\n      IsWritableStream = _require5.IsWritableStream,\n      IsWritableStreamLocked = _require5.IsWritableStreamLocked,\n      WritableStreamAbort = _require5.WritableStreamAbort,\n      WritableStreamDefaultWriterCloseWithErrorPropagation = _require5.WritableStreamDefaultWriterCloseWithErrorPropagation,\n      WritableStreamDefaultWriterRelease = _require5.WritableStreamDefaultWriterRelease,\n      WritableStreamDefaultWriterWrite = _require5.WritableStreamDefaultWriterWrite,\n      WritableStreamCloseQueuedOrInFlight = _require5.WritableStreamCloseQueuedOrInFlight;\n  var ReadableStream = function () {\n    function ReadableStream() {\n      var underlyingSource = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          size = _ref.size,\n          highWaterMark = _ref.highWaterMark;\n      _classCallCheck(this, ReadableStream);\n      this._state = 'readable';\n      this._reader = undefined;\n      this._storedError = undefined;\n      this._disturbed = false;\n      this._readableStreamController = undefined;\n      var type = underlyingSource.type;\n      var typeString = String(type);\n      if (typeString === 'bytes') {\n        if (highWaterMark === undefined) {\n          highWaterMark = 0;\n        }\n        this._readableStreamController = new ReadableByteStreamController(this, underlyingSource, highWaterMark);\n      } else if (type === undefined) {\n        if (highWaterMark === undefined) {\n          highWaterMark = 1;\n        }\n        this._readableStreamController = new ReadableStreamDefaultController(this, underlyingSource, size, highWaterMark);\n      } else {\n        throw new RangeError('Invalid type is specified');\n      }\n    }\n    _createClass(ReadableStream, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (IsReadableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('cancel'));\n        }\n        if (IsReadableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('Cannot cancel a stream that already has a reader'));\n        }\n        return ReadableStreamCancel(this, reason);\n      }\n    }, {\n      key: 'getReader',\n      value: function getReader() {\n        var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            mode = _ref2.mode;\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('getReader');\n        }\n        if (mode === undefined) {\n          return AcquireReadableStreamDefaultReader(this);\n        }\n        mode = String(mode);\n        if (mode === 'byob') {\n          return AcquireReadableStreamBYOBReader(this);\n        }\n        throw new RangeError('Invalid mode is specified');\n      }\n    }, {\n      key: 'pipeThrough',\n      value: function pipeThrough(_ref3, options) {\n        var writable = _ref3.writable,\n            readable = _ref3.readable;\n        var promise = this.pipeTo(writable, options);\n        ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise);\n        return readable;\n      }\n    }, {\n      key: 'pipeTo',\n      value: function pipeTo(dest) {\n        var _this = this;\n        var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n            preventClose = _ref4.preventClose,\n            preventAbort = _ref4.preventAbort,\n            preventCancel = _ref4.preventCancel;\n        if (IsReadableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('pipeTo'));\n        }\n        if (IsWritableStream(dest) === false) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo\\'s first argument must be a WritableStream'));\n        }\n        preventClose = Boolean(preventClose);\n        preventAbort = Boolean(preventAbort);\n        preventCancel = Boolean(preventCancel);\n        if (IsReadableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n        }\n        if (IsWritableStreamLocked(dest) === true) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n        }\n        var reader = AcquireReadableStreamDefaultReader(this);\n        var writer = AcquireWritableStreamDefaultWriter(dest);\n        var shuttingDown = false;\n        var currentWrite = Promise.resolve();\n        return new Promise(function (resolve, reject) {\n          function pipeLoop() {\n            currentWrite = Promise.resolve();\n            if (shuttingDown === true) {\n              return Promise.resolve();\n            }\n            return writer._readyPromise.then(function () {\n              return ReadableStreamDefaultReaderRead(reader).then(function (_ref5) {\n                var value = _ref5.value,\n                    done = _ref5.done;\n                if (done === true) {\n                  return;\n                }\n                currentWrite = WritableStreamDefaultWriterWrite(writer, value).catch(function () {});\n              });\n            }).then(pipeLoop);\n          }\n          isOrBecomesErrored(_this, reader._closedPromise, function (storedError) {\n            if (preventAbort === false) {\n              shutdownWithAction(function () {\n                return WritableStreamAbort(dest, storedError);\n              }, true, storedError);\n            } else {\n              shutdown(true, storedError);\n            }\n          });\n          isOrBecomesErrored(dest, writer._closedPromise, function (storedError) {\n            if (preventCancel === false) {\n              shutdownWithAction(function () {\n                return ReadableStreamCancel(_this, storedError);\n              }, true, storedError);\n            } else {\n              shutdown(true, storedError);\n            }\n          });\n          isOrBecomesClosed(_this, reader._closedPromise, function () {\n            if (preventClose === false) {\n              shutdownWithAction(function () {\n                return WritableStreamDefaultWriterCloseWithErrorPropagation(writer);\n              });\n            } else {\n              shutdown();\n            }\n          });\n          if (WritableStreamCloseQueuedOrInFlight(dest) === true || dest._state === 'closed') {\n            var destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n            if (preventCancel === false) {\n              shutdownWithAction(function () {\n                return ReadableStreamCancel(_this, destClosed);\n              }, true, destClosed);\n            } else {\n              shutdown(true, destClosed);\n            }\n          }\n          pipeLoop().catch(function (err) {\n            currentWrite = Promise.resolve();\n            rethrowAssertionErrorRejection(err);\n          });\n          function waitForWritesToFinish() {\n            var oldCurrentWrite = currentWrite;\n            return currentWrite.then(function () {\n              return oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined;\n            });\n          }\n          function isOrBecomesErrored(stream, promise, action) {\n            if (stream._state === 'errored') {\n              action(stream._storedError);\n            } else {\n              promise.catch(action).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function isOrBecomesClosed(stream, promise, action) {\n            if (stream._state === 'closed') {\n              action();\n            } else {\n              promise.then(action).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function shutdownWithAction(action, originalIsError, originalError) {\n            if (shuttingDown === true) {\n              return;\n            }\n            shuttingDown = true;\n            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n              waitForWritesToFinish().then(doTheRest);\n            } else {\n              doTheRest();\n            }\n            function doTheRest() {\n              action().then(function () {\n                return finalize(originalIsError, originalError);\n              }, function (newError) {\n                return finalize(true, newError);\n              }).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function shutdown(isError, error) {\n            if (shuttingDown === true) {\n              return;\n            }\n            shuttingDown = true;\n            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n              waitForWritesToFinish().then(function () {\n                return finalize(isError, error);\n              }).catch(rethrowAssertionErrorRejection);\n            } else {\n              finalize(isError, error);\n            }\n          }\n          function finalize(isError, error) {\n            WritableStreamDefaultWriterRelease(writer);\n            ReadableStreamReaderGenericRelease(reader);\n            if (isError) {\n              reject(error);\n            } else {\n              resolve(undefined);\n            }\n          }\n        });\n      }\n    }, {\n      key: 'tee',\n      value: function tee() {\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('tee');\n        }\n        var branches = ReadableStreamTee(this, false);\n        return createArrayFromList(branches);\n      }\n    }, {\n      key: 'locked',\n      get: function get() {\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('locked');\n        }\n        return IsReadableStreamLocked(this);\n      }\n    }]);\n    return ReadableStream;\n  }();\n  module.exports = {\n    ReadableStream: ReadableStream,\n    IsReadableStreamDisturbed: IsReadableStreamDisturbed,\n    ReadableStreamDefaultControllerClose: ReadableStreamDefaultControllerClose,\n    ReadableStreamDefaultControllerEnqueue: ReadableStreamDefaultControllerEnqueue,\n    ReadableStreamDefaultControllerError: ReadableStreamDefaultControllerError,\n    ReadableStreamDefaultControllerGetDesiredSize: ReadableStreamDefaultControllerGetDesiredSize\n  };\n  function AcquireReadableStreamBYOBReader(stream) {\n    return new ReadableStreamBYOBReader(stream);\n  }\n  function AcquireReadableStreamDefaultReader(stream) {\n    return new ReadableStreamDefaultReader(stream);\n  }\n  function IsReadableStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamDisturbed(stream) {\n    assert(IsReadableStream(stream) === true, 'IsReadableStreamDisturbed should only be used on known readable streams');\n    return stream._disturbed;\n  }\n  function IsReadableStreamLocked(stream) {\n    assert(IsReadableStream(stream) === true, 'IsReadableStreamLocked should only be used on known readable streams');\n    if (stream._reader === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamTee(stream, cloneForBranch2) {\n    assert(IsReadableStream(stream) === true);\n    assert(typeof cloneForBranch2 === 'boolean');\n    var reader = AcquireReadableStreamDefaultReader(stream);\n    var teeState = {\n      closedOrErrored: false,\n      canceled1: false,\n      canceled2: false,\n      reason1: undefined,\n      reason2: undefined\n    };\n    teeState.promise = new Promise(function (resolve) {\n      teeState._resolve = resolve;\n    });\n    var pull = create_ReadableStreamTeePullFunction();\n    pull._reader = reader;\n    pull._teeState = teeState;\n    pull._cloneForBranch2 = cloneForBranch2;\n    var cancel1 = create_ReadableStreamTeeBranch1CancelFunction();\n    cancel1._stream = stream;\n    cancel1._teeState = teeState;\n    var cancel2 = create_ReadableStreamTeeBranch2CancelFunction();\n    cancel2._stream = stream;\n    cancel2._teeState = teeState;\n    var underlyingSource1 = Object.create(Object.prototype);\n    createDataProperty(underlyingSource1, 'pull', pull);\n    createDataProperty(underlyingSource1, 'cancel', cancel1);\n    var branch1Stream = new ReadableStream(underlyingSource1);\n    var underlyingSource2 = Object.create(Object.prototype);\n    createDataProperty(underlyingSource2, 'pull', pull);\n    createDataProperty(underlyingSource2, 'cancel', cancel2);\n    var branch2Stream = new ReadableStream(underlyingSource2);\n    pull._branch1 = branch1Stream._readableStreamController;\n    pull._branch2 = branch2Stream._readableStreamController;\n    reader._closedPromise.catch(function (r) {\n      if (teeState.closedOrErrored === true) {\n        return;\n      }\n      ReadableStreamDefaultControllerError(pull._branch1, r);\n      ReadableStreamDefaultControllerError(pull._branch2, r);\n      teeState.closedOrErrored = true;\n    });\n    return [branch1Stream, branch2Stream];\n  }\n  function create_ReadableStreamTeePullFunction() {\n    function f() {\n      var reader = f._reader,\n          branch1 = f._branch1,\n          branch2 = f._branch2,\n          teeState = f._teeState;\n      return ReadableStreamDefaultReaderRead(reader).then(function (result) {\n        assert(typeIsObject(result));\n        var value = result.value;\n        var done = result.done;\n        assert(typeof done === 'boolean');\n        if (done === true && teeState.closedOrErrored === false) {\n          if (teeState.canceled1 === false) {\n            ReadableStreamDefaultControllerClose(branch1);\n          }\n          if (teeState.canceled2 === false) {\n            ReadableStreamDefaultControllerClose(branch2);\n          }\n          teeState.closedOrErrored = true;\n        }\n        if (teeState.closedOrErrored === true) {\n          return;\n        }\n        var value1 = value;\n        var value2 = value;\n        if (teeState.canceled1 === false) {\n          ReadableStreamDefaultControllerEnqueue(branch1, value1);\n        }\n        if (teeState.canceled2 === false) {\n          ReadableStreamDefaultControllerEnqueue(branch2, value2);\n        }\n      });\n    }\n    return f;\n  }\n  function create_ReadableStreamTeeBranch1CancelFunction() {\n    function f(reason) {\n      var stream = f._stream,\n          teeState = f._teeState;\n      teeState.canceled1 = true;\n      teeState.reason1 = reason;\n      if (teeState.canceled2 === true) {\n        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\n        var cancelResult = ReadableStreamCancel(stream, compositeReason);\n        teeState._resolve(cancelResult);\n      }\n      return teeState.promise;\n    }\n    return f;\n  }\n  function create_ReadableStreamTeeBranch2CancelFunction() {\n    function f(reason) {\n      var stream = f._stream,\n          teeState = f._teeState;\n      teeState.canceled2 = true;\n      teeState.reason2 = reason;\n      if (teeState.canceled1 === true) {\n        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\n        var cancelResult = ReadableStreamCancel(stream, compositeReason);\n        teeState._resolve(cancelResult);\n      }\n      return teeState.promise;\n    }\n    return f;\n  }\n  function ReadableStreamAddReadIntoRequest(stream) {\n    assert(IsReadableStreamBYOBReader(stream._reader) === true);\n    assert(stream._state === 'readable' || stream._state === 'closed');\n    var promise = new Promise(function (resolve, reject) {\n      var readIntoRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._reader._readIntoRequests.push(readIntoRequest);\n    });\n    return promise;\n  }\n  function ReadableStreamAddReadRequest(stream) {\n    assert(IsReadableStreamDefaultReader(stream._reader) === true);\n    assert(stream._state === 'readable');\n    var promise = new Promise(function (resolve, reject) {\n      var readRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._reader._readRequests.push(readRequest);\n    });\n    return promise;\n  }\n  function ReadableStreamCancel(stream, reason) {\n    stream._disturbed = true;\n    if (stream._state === 'closed') {\n      return Promise.resolve(undefined);\n    }\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    ReadableStreamClose(stream);\n    var sourceCancelPromise = stream._readableStreamController.__cancelSteps(reason);\n    return sourceCancelPromise.then(function () {\n      return undefined;\n    });\n  }\n  function ReadableStreamClose(stream) {\n    assert(stream._state === 'readable');\n    stream._state = 'closed';\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return undefined;\n    }\n    if (IsReadableStreamDefaultReader(reader) === true) {\n      for (var i = 0; i < reader._readRequests.length; i++) {\n        var _resolve = reader._readRequests[i]._resolve;\n        _resolve(CreateIterResultObject(undefined, true));\n      }\n      reader._readRequests = [];\n    }\n    defaultReaderClosedPromiseResolve(reader);\n    return undefined;\n  }\n  function ReadableStreamError(stream, e) {\n    assert(IsReadableStream(stream) === true, 'stream must be ReadableStream');\n    assert(stream._state === 'readable', 'state must be readable');\n    stream._state = 'errored';\n    stream._storedError = e;\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return undefined;\n    }\n    if (IsReadableStreamDefaultReader(reader) === true) {\n      for (var i = 0; i < reader._readRequests.length; i++) {\n        var readRequest = reader._readRequests[i];\n        readRequest._reject(e);\n      }\n      reader._readRequests = [];\n    } else {\n      assert(IsReadableStreamBYOBReader(reader), 'reader must be ReadableStreamBYOBReader');\n      for (var _i = 0; _i < reader._readIntoRequests.length; _i++) {\n        var readIntoRequest = reader._readIntoRequests[_i];\n        readIntoRequest._reject(e);\n      }\n      reader._readIntoRequests = [];\n    }\n    defaultReaderClosedPromiseReject(reader, e);\n    reader._closedPromise.catch(function () {});\n  }\n  function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n    var reader = stream._reader;\n    assert(reader._readIntoRequests.length > 0);\n    var readIntoRequest = reader._readIntoRequests.shift();\n    readIntoRequest._resolve(CreateIterResultObject(chunk, done));\n  }\n  function ReadableStreamFulfillReadRequest(stream, chunk, done) {\n    var reader = stream._reader;\n    assert(reader._readRequests.length > 0);\n    var readRequest = reader._readRequests.shift();\n    readRequest._resolve(CreateIterResultObject(chunk, done));\n  }\n  function ReadableStreamGetNumReadIntoRequests(stream) {\n    return stream._reader._readIntoRequests.length;\n  }\n  function ReadableStreamGetNumReadRequests(stream) {\n    return stream._reader._readRequests.length;\n  }\n  function ReadableStreamHasBYOBReader(stream) {\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return false;\n    }\n    if (IsReadableStreamBYOBReader(reader) === false) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamHasDefaultReader(stream) {\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return false;\n    }\n    if (IsReadableStreamDefaultReader(reader) === false) {\n      return false;\n    }\n    return true;\n  }\n  var ReadableStreamDefaultReader = function () {\n    function ReadableStreamDefaultReader(stream) {\n      _classCallCheck(this, ReadableStreamDefaultReader);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableStreamDefaultReader can only be constructed with a ReadableStream instance');\n      }\n      if (IsReadableStreamLocked(stream) === true) {\n        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n      }\n      ReadableStreamReaderGenericInitialize(this, stream);\n      this._readRequests = [];\n    }\n    _createClass(ReadableStreamDefaultReader, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('cancel'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('cancel'));\n        }\n        return ReadableStreamReaderGenericCancel(this, reason);\n      }\n    }, {\n      key: 'read',\n      value: function read() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('read'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('read from'));\n        }\n        return ReadableStreamDefaultReaderRead(this);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          throw defaultReaderBrandCheckException('releaseLock');\n        }\n        if (this._ownerReadableStream === undefined) {\n          return;\n        }\n        if (this._readRequests.length > 0) {\n          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n        }\n        ReadableStreamReaderGenericRelease(this);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }]);\n    return ReadableStreamDefaultReader;\n  }();\n  var ReadableStreamBYOBReader = function () {\n    function ReadableStreamBYOBReader(stream) {\n      _classCallCheck(this, ReadableStreamBYOBReader);\n      if (!IsReadableStream(stream)) {\n        throw new TypeError('ReadableStreamBYOBReader can only be constructed with a ReadableStream instance given a ' + 'byte source');\n      }\n      if (IsReadableByteStreamController(stream._readableStreamController) === false) {\n        throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' + 'source');\n      }\n      if (IsReadableStreamLocked(stream)) {\n        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n      }\n      ReadableStreamReaderGenericInitialize(this, stream);\n      this._readIntoRequests = [];\n    }\n    _createClass(ReadableStreamBYOBReader, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('cancel'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('cancel'));\n        }\n        return ReadableStreamReaderGenericCancel(this, reason);\n      }\n    }, {\n      key: 'read',\n      value: function read(view) {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('read'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('read from'));\n        }\n        if (!ArrayBuffer.isView(view)) {\n          return Promise.reject(new TypeError('view must be an array buffer view'));\n        }\n        if (view.byteLength === 0) {\n          return Promise.reject(new TypeError('view must have non-zero byteLength'));\n        }\n        return ReadableStreamBYOBReaderRead(this, view);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (!IsReadableStreamBYOBReader(this)) {\n          throw byobReaderBrandCheckException('releaseLock');\n        }\n        if (this._ownerReadableStream === undefined) {\n          return;\n        }\n        if (this._readIntoRequests.length > 0) {\n          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n        }\n        ReadableStreamReaderGenericRelease(this);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }]);\n    return ReadableStreamBYOBReader;\n  }();\n  function IsReadableStreamBYOBReader(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamDefaultReader(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamReaderGenericInitialize(reader, stream) {\n    reader._ownerReadableStream = stream;\n    stream._reader = reader;\n    if (stream._state === 'readable') {\n      defaultReaderClosedPromiseInitialize(reader);\n    } else if (stream._state === 'closed') {\n      defaultReaderClosedPromiseInitializeAsResolved(reader);\n    } else {\n      assert(stream._state === 'errored', 'state must be errored');\n      defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n      reader._closedPromise.catch(function () {});\n    }\n  }\n  function ReadableStreamReaderGenericCancel(reader, reason) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    return ReadableStreamCancel(stream, reason);\n  }\n  function ReadableStreamReaderGenericRelease(reader) {\n    assert(reader._ownerReadableStream !== undefined);\n    assert(reader._ownerReadableStream._reader === reader);\n    if (reader._ownerReadableStream._state === 'readable') {\n      defaultReaderClosedPromiseReject(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n    } else {\n      defaultReaderClosedPromiseResetToRejected(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n    }\n    reader._closedPromise.catch(function () {});\n    reader._ownerReadableStream._reader = undefined;\n    reader._ownerReadableStream = undefined;\n  }\n  function ReadableStreamBYOBReaderRead(reader, view) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    stream._disturbed = true;\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    return ReadableByteStreamControllerPullInto(stream._readableStreamController, view);\n  }\n  function ReadableStreamDefaultReaderRead(reader) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    stream._disturbed = true;\n    if (stream._state === 'closed') {\n      return Promise.resolve(CreateIterResultObject(undefined, true));\n    }\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(stream._state === 'readable');\n    return stream._readableStreamController.__pullSteps();\n  }\n  var ReadableStreamDefaultController = function () {\n    function ReadableStreamDefaultController(stream, underlyingSource, size, highWaterMark) {\n      _classCallCheck(this, ReadableStreamDefaultController);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableStreamDefaultController can only be constructed with a ReadableStream instance');\n      }\n      if (stream._readableStreamController !== undefined) {\n        throw new TypeError('ReadableStreamDefaultController instances can only be created by the ReadableStream constructor');\n      }\n      this._controlledReadableStream = stream;\n      this._underlyingSource = underlyingSource;\n      this._queue = undefined;\n      this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._started = false;\n      this._closeRequested = false;\n      this._pullAgain = false;\n      this._pulling = false;\n      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\n      this._strategySize = normalizedStrategy.size;\n      this._strategyHWM = normalizedStrategy.highWaterMark;\n      var controller = this;\n      var startResult = InvokeOrNoop(underlyingSource, 'start', [this]);\n      Promise.resolve(startResult).then(function () {\n        controller._started = true;\n        assert(controller._pulling === false);\n        assert(controller._pullAgain === false);\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }, function (r) {\n        ReadableStreamDefaultControllerErrorIfNeeded(controller, r);\n      }).catch(rethrowAssertionErrorRejection);\n    }\n    _createClass(ReadableStreamDefaultController, [{\n      key: 'close',\n      value: function close() {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('close');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('The stream has already been closed; do not close it again!');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\n        }\n        ReadableStreamDefaultControllerClose(this);\n      }\n    }, {\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('enqueue');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('stream is closed or draining');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\n        }\n        return ReadableStreamDefaultControllerEnqueue(this, chunk);\n      }\n    }, {\n      key: 'error',\n      value: function error(e) {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('error');\n        }\n        var stream = this._controlledReadableStream;\n        if (stream._state !== 'readable') {\n          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\n        }\n        ReadableStreamDefaultControllerError(this, e);\n      }\n    }, {\n      key: '__cancelSteps',\n      value: function __cancelSteps(reason) {\n        ResetQueue(this);\n        return PromiseInvokeOrNoop(this._underlyingSource, 'cancel', [reason]);\n      }\n    }, {\n      key: '__pullSteps',\n      value: function __pullSteps() {\n        var stream = this._controlledReadableStream;\n        if (this._queue.length > 0) {\n          var chunk = DequeueValue(this);\n          if (this._closeRequested === true && this._queue.length === 0) {\n            ReadableStreamClose(stream);\n          } else {\n            ReadableStreamDefaultControllerCallPullIfNeeded(this);\n          }\n          return Promise.resolve(CreateIterResultObject(chunk, false));\n        }\n        var pendingPromise = ReadableStreamAddReadRequest(stream);\n        ReadableStreamDefaultControllerCallPullIfNeeded(this);\n        return pendingPromise;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('desiredSize');\n        }\n        return ReadableStreamDefaultControllerGetDesiredSize(this);\n      }\n    }]);\n    return ReadableStreamDefaultController;\n  }();\n  function IsReadableStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSource')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n    var shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n    if (shouldPull === false) {\n      return undefined;\n    }\n    if (controller._pulling === true) {\n      controller._pullAgain = true;\n      return undefined;\n    }\n    assert(controller._pullAgain === false);\n    controller._pulling = true;\n    var pullPromise = PromiseInvokeOrNoop(controller._underlyingSource, 'pull', [controller]);\n    pullPromise.then(function () {\n      controller._pulling = false;\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        return ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }\n      return undefined;\n    }, function (e) {\n      ReadableStreamDefaultControllerErrorIfNeeded(controller, e);\n    }).catch(rethrowAssertionErrorRejection);\n    return undefined;\n  }\n  function ReadableStreamDefaultControllerShouldCallPull(controller) {\n    var stream = controller._controlledReadableStream;\n    if (stream._state === 'closed' || stream._state === 'errored') {\n      return false;\n    }\n    if (controller._closeRequested === true) {\n      return false;\n    }\n    if (controller._started === false) {\n      return false;\n    }\n    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      return true;\n    }\n    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n    if (desiredSize > 0) {\n      return true;\n    }\n    return false;\n  }\n  function ReadableStreamDefaultControllerClose(controller) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    controller._closeRequested = true;\n    if (controller._queue.length === 0) {\n      ReadableStreamClose(stream);\n    }\n  }\n  function ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      ReadableStreamFulfillReadRequest(stream, chunk, false);\n    } else {\n      var chunkSize = 1;\n      if (controller._strategySize !== undefined) {\n        var strategySize = controller._strategySize;\n        try {\n          chunkSize = strategySize(chunk);\n        } catch (chunkSizeE) {\n          ReadableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n          throw chunkSizeE;\n        }\n      }\n      try {\n        EnqueueValueWithSize(controller, chunk, chunkSize);\n      } catch (enqueueE) {\n        ReadableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n        throw enqueueE;\n      }\n    }\n    ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    return undefined;\n  }\n  function ReadableStreamDefaultControllerError(controller, e) {\n    var stream = controller._controlledReadableStream;\n    assert(stream._state === 'readable');\n    ResetQueue(controller);\n    ReadableStreamError(stream, e);\n  }\n  function ReadableStreamDefaultControllerErrorIfNeeded(controller, e) {\n    if (controller._controlledReadableStream._state === 'readable') {\n      ReadableStreamDefaultControllerError(controller, e);\n    }\n  }\n  function ReadableStreamDefaultControllerGetDesiredSize(controller) {\n    var stream = controller._controlledReadableStream;\n    var state = stream._state;\n    if (state === 'errored') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  var ReadableStreamBYOBRequest = function () {\n    function ReadableStreamBYOBRequest(controller, view) {\n      _classCallCheck(this, ReadableStreamBYOBRequest);\n      this._associatedReadableByteStreamController = controller;\n      this._view = view;\n    }\n    _createClass(ReadableStreamBYOBRequest, [{\n      key: 'respond',\n      value: function respond(bytesWritten) {\n        if (IsReadableStreamBYOBRequest(this) === false) {\n          throw byobRequestBrandCheckException('respond');\n        }\n        if (this._associatedReadableByteStreamController === undefined) {\n          throw new TypeError('This BYOB request has been invalidated');\n        }\n        ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n      }\n    }, {\n      key: 'respondWithNewView',\n      value: function respondWithNewView(view) {\n        if (IsReadableStreamBYOBRequest(this) === false) {\n          throw byobRequestBrandCheckException('respond');\n        }\n        if (this._associatedReadableByteStreamController === undefined) {\n          throw new TypeError('This BYOB request has been invalidated');\n        }\n        if (!ArrayBuffer.isView(view)) {\n          throw new TypeError('You can only respond with array buffer views');\n        }\n        ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n      }\n    }, {\n      key: 'view',\n      get: function get() {\n        return this._view;\n      }\n    }]);\n    return ReadableStreamBYOBRequest;\n  }();\n  var ReadableByteStreamController = function () {\n    function ReadableByteStreamController(stream, underlyingByteSource, highWaterMark) {\n      _classCallCheck(this, ReadableByteStreamController);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableByteStreamController can only be constructed with a ReadableStream instance given ' + 'a byte source');\n      }\n      if (stream._readableStreamController !== undefined) {\n        throw new TypeError('ReadableByteStreamController instances can only be created by the ReadableStream constructor given a byte ' + 'source');\n      }\n      this._controlledReadableStream = stream;\n      this._underlyingByteSource = underlyingByteSource;\n      this._pullAgain = false;\n      this._pulling = false;\n      ReadableByteStreamControllerClearPendingPullIntos(this);\n      this._queue = this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._closeRequested = false;\n      this._started = false;\n      this._strategyHWM = ValidateAndNormalizeHighWaterMark(highWaterMark);\n      var autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n      if (autoAllocateChunkSize !== undefined) {\n        if (Number.isInteger(autoAllocateChunkSize) === false || autoAllocateChunkSize <= 0) {\n          throw new RangeError('autoAllocateChunkSize must be a positive integer');\n        }\n      }\n      this._autoAllocateChunkSize = autoAllocateChunkSize;\n      this._pendingPullIntos = [];\n      var controller = this;\n      var startResult = InvokeOrNoop(underlyingByteSource, 'start', [this]);\n      Promise.resolve(startResult).then(function () {\n        controller._started = true;\n        assert(controller._pulling === false);\n        assert(controller._pullAgain === false);\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }, function (r) {\n        if (stream._state === 'readable') {\n          ReadableByteStreamControllerError(controller, r);\n        }\n      }).catch(rethrowAssertionErrorRejection);\n    }\n    _createClass(ReadableByteStreamController, [{\n      key: 'close',\n      value: function close() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('close');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('The stream has already been closed; do not close it again!');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\n        }\n        ReadableByteStreamControllerClose(this);\n      }\n    }, {\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('enqueue');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('stream is closed or draining');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\n        }\n        if (!ArrayBuffer.isView(chunk)) {\n          throw new TypeError('You can only enqueue array buffer views when using a ReadableByteStreamController');\n        }\n        ReadableByteStreamControllerEnqueue(this, chunk);\n      }\n    }, {\n      key: 'error',\n      value: function error(e) {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('error');\n        }\n        var stream = this._controlledReadableStream;\n        if (stream._state !== 'readable') {\n          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\n        }\n        ReadableByteStreamControllerError(this, e);\n      }\n    }, {\n      key: '__cancelSteps',\n      value: function __cancelSteps(reason) {\n        if (this._pendingPullIntos.length > 0) {\n          var firstDescriptor = this._pendingPullIntos[0];\n          firstDescriptor.bytesFilled = 0;\n        }\n        ResetQueue(this);\n        return PromiseInvokeOrNoop(this._underlyingByteSource, 'cancel', [reason]);\n      }\n    }, {\n      key: '__pullSteps',\n      value: function __pullSteps() {\n        var stream = this._controlledReadableStream;\n        assert(ReadableStreamHasDefaultReader(stream) === true);\n        if (this._queueTotalSize > 0) {\n          assert(ReadableStreamGetNumReadRequests(stream) === 0);\n          var entry = this._queue.shift();\n          this._queueTotalSize -= entry.byteLength;\n          ReadableByteStreamControllerHandleQueueDrain(this);\n          var view = void 0;\n          try {\n            view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n          } catch (viewE) {\n            return Promise.reject(viewE);\n          }\n          return Promise.resolve(CreateIterResultObject(view, false));\n        }\n        var autoAllocateChunkSize = this._autoAllocateChunkSize;\n        if (autoAllocateChunkSize !== undefined) {\n          var buffer = void 0;\n          try {\n            buffer = new ArrayBuffer(autoAllocateChunkSize);\n          } catch (bufferE) {\n            return Promise.reject(bufferE);\n          }\n          var pullIntoDescriptor = {\n            buffer: buffer,\n            byteOffset: 0,\n            byteLength: autoAllocateChunkSize,\n            bytesFilled: 0,\n            elementSize: 1,\n            ctor: Uint8Array,\n            readerType: 'default'\n          };\n          this._pendingPullIntos.push(pullIntoDescriptor);\n        }\n        var promise = ReadableStreamAddReadRequest(stream);\n        ReadableByteStreamControllerCallPullIfNeeded(this);\n        return promise;\n      }\n    }, {\n      key: 'byobRequest',\n      get: function get() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('byobRequest');\n        }\n        if (this._byobRequest === undefined && this._pendingPullIntos.length > 0) {\n          var firstDescriptor = this._pendingPullIntos[0];\n          var view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n          this._byobRequest = new ReadableStreamBYOBRequest(this, view);\n        }\n        return this._byobRequest;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('desiredSize');\n        }\n        return ReadableByteStreamControllerGetDesiredSize(this);\n      }\n    }]);\n    return ReadableByteStreamController;\n  }();\n  function IsReadableByteStreamController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingByteSource')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamBYOBRequest(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableByteStreamControllerCallPullIfNeeded(controller) {\n    var shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n    if (shouldPull === false) {\n      return undefined;\n    }\n    if (controller._pulling === true) {\n      controller._pullAgain = true;\n      return undefined;\n    }\n    assert(controller._pullAgain === false);\n    controller._pulling = true;\n    var pullPromise = PromiseInvokeOrNoop(controller._underlyingByteSource, 'pull', [controller]);\n    pullPromise.then(function () {\n      controller._pulling = false;\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }\n    }, function (e) {\n      if (controller._controlledReadableStream._state === 'readable') {\n        ReadableByteStreamControllerError(controller, e);\n      }\n    }).catch(rethrowAssertionErrorRejection);\n    return undefined;\n  }\n  function ReadableByteStreamControllerClearPendingPullIntos(controller) {\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    controller._pendingPullIntos = [];\n  }\n  function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n    assert(stream._state !== 'errored', 'state must not be errored');\n    var done = false;\n    if (stream._state === 'closed') {\n      assert(pullIntoDescriptor.bytesFilled === 0);\n      done = true;\n    }\n    var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n    if (pullIntoDescriptor.readerType === 'default') {\n      ReadableStreamFulfillReadRequest(stream, filledView, done);\n    } else {\n      assert(pullIntoDescriptor.readerType === 'byob');\n      ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n    }\n  }\n  function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n    var bytesFilled = pullIntoDescriptor.bytesFilled;\n    var elementSize = pullIntoDescriptor.elementSize;\n    assert(bytesFilled <= pullIntoDescriptor.byteLength);\n    assert(bytesFilled % elementSize === 0);\n    return new pullIntoDescriptor.ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n  }\n  function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n    controller._queue.push({\n      buffer: buffer,\n      byteOffset: byteOffset,\n      byteLength: byteLength\n    });\n    controller._queueTotalSize += byteLength;\n  }\n  function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n    var elementSize = pullIntoDescriptor.elementSize;\n    var currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n    var maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n    var maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n    var maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n    var totalBytesToCopyRemaining = maxBytesToCopy;\n    var ready = false;\n    if (maxAlignedBytes > currentAlignedBytes) {\n      totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n      ready = true;\n    }\n    var queue = controller._queue;\n    while (totalBytesToCopyRemaining > 0) {\n      var headOfQueue = queue[0];\n      var bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n      var destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n      ArrayBufferCopy(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n      if (headOfQueue.byteLength === bytesToCopy) {\n        queue.shift();\n      } else {\n        headOfQueue.byteOffset += bytesToCopy;\n        headOfQueue.byteLength -= bytesToCopy;\n      }\n      controller._queueTotalSize -= bytesToCopy;\n      ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n      totalBytesToCopyRemaining -= bytesToCopy;\n    }\n    if (ready === false) {\n      assert(controller._queueTotalSize === 0, 'queue must be empty');\n      assert(pullIntoDescriptor.bytesFilled > 0);\n      assert(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize);\n    }\n    return ready;\n  }\n  function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n    assert(controller._pendingPullIntos.length === 0 || controller._pendingPullIntos[0] === pullIntoDescriptor);\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    pullIntoDescriptor.bytesFilled += size;\n  }\n  function ReadableByteStreamControllerHandleQueueDrain(controller) {\n    assert(controller._controlledReadableStream._state === 'readable');\n    if (controller._queueTotalSize === 0 && controller._closeRequested === true) {\n      ReadableStreamClose(controller._controlledReadableStream);\n    } else {\n      ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n  }\n  function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n    if (controller._byobRequest === undefined) {\n      return;\n    }\n    controller._byobRequest._associatedReadableByteStreamController = undefined;\n    controller._byobRequest._view = undefined;\n    controller._byobRequest = undefined;\n  }\n  function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n    assert(controller._closeRequested === false);\n    while (controller._pendingPullIntos.length > 0) {\n      if (controller._queueTotalSize === 0) {\n        return;\n      }\n      var pullIntoDescriptor = controller._pendingPullIntos[0];\n      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\n        ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\n      }\n    }\n  }\n  function ReadableByteStreamControllerPullInto(controller, view) {\n    var stream = controller._controlledReadableStream;\n    var elementSize = 1;\n    if (view.constructor !== DataView) {\n      elementSize = view.constructor.BYTES_PER_ELEMENT;\n    }\n    var ctor = view.constructor;\n    var pullIntoDescriptor = {\n      buffer: view.buffer,\n      byteOffset: view.byteOffset,\n      byteLength: view.byteLength,\n      bytesFilled: 0,\n      elementSize: elementSize,\n      ctor: ctor,\n      readerType: 'byob'\n    };\n    if (controller._pendingPullIntos.length > 0) {\n      pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n      controller._pendingPullIntos.push(pullIntoDescriptor);\n      return ReadableStreamAddReadIntoRequest(stream);\n    }\n    if (stream._state === 'closed') {\n      var emptyView = new view.constructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n      return Promise.resolve(CreateIterResultObject(emptyView, true));\n    }\n    if (controller._queueTotalSize > 0) {\n      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n        var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n        ReadableByteStreamControllerHandleQueueDrain(controller);\n        return Promise.resolve(CreateIterResultObject(filledView, false));\n      }\n      if (controller._closeRequested === true) {\n        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n        ReadableByteStreamControllerError(controller, e);\n        return Promise.reject(e);\n      }\n    }\n    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n    controller._pendingPullIntos.push(pullIntoDescriptor);\n    var promise = ReadableStreamAddReadIntoRequest(stream);\n    ReadableByteStreamControllerCallPullIfNeeded(controller);\n    return promise;\n  }\n  function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n    firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n    assert(firstDescriptor.bytesFilled === 0, 'bytesFilled must be 0');\n    var stream = controller._controlledReadableStream;\n    if (ReadableStreamHasBYOBReader(stream) === true) {\n      while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n        var pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n        ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n      }\n    }\n  }\n  function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n    if (pullIntoDescriptor.bytesFilled + bytesWritten > pullIntoDescriptor.byteLength) {\n      throw new RangeError('bytesWritten out of range');\n    }\n    ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n    if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n      return;\n    }\n    ReadableByteStreamControllerShiftPendingPullInto(controller);\n    var remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n    if (remainderSize > 0) {\n      var end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n      var remainder = pullIntoDescriptor.buffer.slice(end - remainderSize, end);\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n    }\n    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n    pullIntoDescriptor.bytesFilled -= remainderSize;\n    ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\n    ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n  }\n  function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n    var firstDescriptor = controller._pendingPullIntos[0];\n    var stream = controller._controlledReadableStream;\n    if (stream._state === 'closed') {\n      if (bytesWritten !== 0) {\n        throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n      }\n      ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\n    } else {\n      assert(stream._state === 'readable');\n      ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n    }\n  }\n  function ReadableByteStreamControllerShiftPendingPullInto(controller) {\n    var descriptor = controller._pendingPullIntos.shift();\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    return descriptor;\n  }\n  function ReadableByteStreamControllerShouldCallPull(controller) {\n    var stream = controller._controlledReadableStream;\n    if (stream._state !== 'readable') {\n      return false;\n    }\n    if (controller._closeRequested === true) {\n      return false;\n    }\n    if (controller._started === false) {\n      return false;\n    }\n    if (ReadableStreamHasDefaultReader(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      return true;\n    }\n    if (ReadableStreamHasBYOBReader(stream) === true && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n      return true;\n    }\n    if (ReadableByteStreamControllerGetDesiredSize(controller) > 0) {\n      return true;\n    }\n    return false;\n  }\n  function ReadableByteStreamControllerClose(controller) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    if (controller._queueTotalSize > 0) {\n      controller._closeRequested = true;\n      return;\n    }\n    if (controller._pendingPullIntos.length > 0) {\n      var firstPendingPullInto = controller._pendingPullIntos[0];\n      if (firstPendingPullInto.bytesFilled > 0) {\n        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n        ReadableByteStreamControllerError(controller, e);\n        throw e;\n      }\n    }\n    ReadableStreamClose(stream);\n  }\n  function ReadableByteStreamControllerEnqueue(controller, chunk) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    var buffer = chunk.buffer;\n    var byteOffset = chunk.byteOffset;\n    var byteLength = chunk.byteLength;\n    var transferredBuffer = TransferArrayBuffer(buffer);\n    if (ReadableStreamHasDefaultReader(stream) === true) {\n      if (ReadableStreamGetNumReadRequests(stream) === 0) {\n        ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n      } else {\n        assert(controller._queue.length === 0);\n        var transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n        ReadableStreamFulfillReadRequest(stream, transferredView, false);\n      }\n    } else if (ReadableStreamHasBYOBReader(stream) === true) {\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n      ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n    } else {\n      assert(IsReadableStreamLocked(stream) === false, 'stream must not be locked');\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    }\n  }\n  function ReadableByteStreamControllerError(controller, e) {\n    var stream = controller._controlledReadableStream;\n    assert(stream._state === 'readable');\n    ReadableByteStreamControllerClearPendingPullIntos(controller);\n    ResetQueue(controller);\n    ReadableStreamError(stream, e);\n  }\n  function ReadableByteStreamControllerGetDesiredSize(controller) {\n    var stream = controller._controlledReadableStream;\n    var state = stream._state;\n    if (state === 'errored') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  function ReadableByteStreamControllerRespond(controller, bytesWritten) {\n    bytesWritten = Number(bytesWritten);\n    if (IsFiniteNonNegativeNumber(bytesWritten) === false) {\n      throw new RangeError('bytesWritten must be a finite');\n    }\n    assert(controller._pendingPullIntos.length > 0);\n    ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n  }\n  function ReadableByteStreamControllerRespondWithNewView(controller, view) {\n    assert(controller._pendingPullIntos.length > 0);\n    var firstDescriptor = controller._pendingPullIntos[0];\n    if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n      throw new RangeError('The region specified by view does not match byobRequest');\n    }\n    if (firstDescriptor.byteLength !== view.byteLength) {\n      throw new RangeError('The buffer of view has different capacity than byobRequest');\n    }\n    firstDescriptor.buffer = view.buffer;\n    ReadableByteStreamControllerRespondInternal(controller, view.byteLength);\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('ReadableStream.prototype.' + name + ' can only be used on a ReadableStream');\n  }\n  function readerLockException(name) {\n    return new TypeError('Cannot ' + name + ' a stream using a released reader');\n  }\n  function defaultReaderBrandCheckException(name) {\n    return new TypeError('ReadableStreamDefaultReader.prototype.' + name + ' can only be used on a ReadableStreamDefaultReader');\n  }\n  function defaultReaderClosedPromiseInitialize(reader) {\n    reader._closedPromise = new Promise(function (resolve, reject) {\n      reader._closedPromise_resolve = resolve;\n      reader._closedPromise_reject = reject;\n    });\n  }\n  function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n    reader._closedPromise = Promise.reject(reason);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseInitializeAsResolved(reader) {\n    reader._closedPromise = Promise.resolve(undefined);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseReject(reader, reason) {\n    assert(reader._closedPromise_resolve !== undefined);\n    assert(reader._closedPromise_reject !== undefined);\n    reader._closedPromise_reject(reason);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseResetToRejected(reader, reason) {\n    assert(reader._closedPromise_resolve === undefined);\n    assert(reader._closedPromise_reject === undefined);\n    reader._closedPromise = Promise.reject(reason);\n  }\n  function defaultReaderClosedPromiseResolve(reader) {\n    assert(reader._closedPromise_resolve !== undefined);\n    assert(reader._closedPromise_reject !== undefined);\n    reader._closedPromise_resolve(undefined);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function byobReaderBrandCheckException(name) {\n    return new TypeError('ReadableStreamBYOBReader.prototype.' + name + ' can only be used on a ReadableStreamBYOBReader');\n  }\n  function defaultControllerBrandCheckException(name) {\n    return new TypeError('ReadableStreamDefaultController.prototype.' + name + ' can only be used on a ReadableStreamDefaultController');\n  }\n  function byobRequestBrandCheckException(name) {\n    return new TypeError('ReadableStreamBYOBRequest.prototype.' + name + ' can only be used on a ReadableStreamBYOBRequest');\n  }\n  function byteStreamControllerBrandCheckException(name) {\n    return new TypeError('ReadableByteStreamController.prototype.' + name + ' can only be used on a ReadableByteStreamController');\n  }\n  function ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise) {\n    try {\n      Promise.prototype.then.call(promise, undefined, function () {});\n    } catch (e) {}\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var transformStream = __w_pdfjs_require__(6);\n  var readableStream = __w_pdfjs_require__(4);\n  var writableStream = __w_pdfjs_require__(2);\n  exports.TransformStream = transformStream.TransformStream;\n  exports.ReadableStream = readableStream.ReadableStream;\n  exports.IsReadableStreamDisturbed = readableStream.IsReadableStreamDisturbed;\n  exports.ReadableStreamDefaultControllerClose = readableStream.ReadableStreamDefaultControllerClose;\n  exports.ReadableStreamDefaultControllerEnqueue = readableStream.ReadableStreamDefaultControllerEnqueue;\n  exports.ReadableStreamDefaultControllerError = readableStream.ReadableStreamDefaultControllerError;\n  exports.ReadableStreamDefaultControllerGetDesiredSize = readableStream.ReadableStreamDefaultControllerGetDesiredSize;\n  exports.AcquireWritableStreamDefaultWriter = writableStream.AcquireWritableStreamDefaultWriter;\n  exports.IsWritableStream = writableStream.IsWritableStream;\n  exports.IsWritableStreamLocked = writableStream.IsWritableStreamLocked;\n  exports.WritableStream = writableStream.WritableStream;\n  exports.WritableStreamAbort = writableStream.WritableStreamAbort;\n  exports.WritableStreamDefaultControllerError = writableStream.WritableStreamDefaultControllerError;\n  exports.WritableStreamDefaultWriterCloseWithErrorPropagation = writableStream.WritableStreamDefaultWriterCloseWithErrorPropagation;\n  exports.WritableStreamDefaultWriterRelease = writableStream.WritableStreamDefaultWriterRelease;\n  exports.WritableStreamDefaultWriterWrite = writableStream.WritableStreamDefaultWriterWrite;\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(1),\n      assert = _require.assert;\n  var _require2 = __w_pdfjs_require__(0),\n      InvokeOrNoop = _require2.InvokeOrNoop,\n      PromiseInvokeOrPerformFallback = _require2.PromiseInvokeOrPerformFallback,\n      PromiseInvokeOrNoop = _require2.PromiseInvokeOrNoop,\n      typeIsObject = _require2.typeIsObject;\n  var _require3 = __w_pdfjs_require__(4),\n      ReadableStream = _require3.ReadableStream,\n      ReadableStreamDefaultControllerClose = _require3.ReadableStreamDefaultControllerClose,\n      ReadableStreamDefaultControllerEnqueue = _require3.ReadableStreamDefaultControllerEnqueue,\n      ReadableStreamDefaultControllerError = _require3.ReadableStreamDefaultControllerError,\n      ReadableStreamDefaultControllerGetDesiredSize = _require3.ReadableStreamDefaultControllerGetDesiredSize;\n  var _require4 = __w_pdfjs_require__(2),\n      WritableStream = _require4.WritableStream,\n      WritableStreamDefaultControllerError = _require4.WritableStreamDefaultControllerError;\n  function TransformStreamCloseReadable(transformStream) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    if (transformStream._readableClosed === true) {\n      throw new TypeError('Readable side is already closed');\n    }\n    TransformStreamCloseReadableInternal(transformStream);\n  }\n  function TransformStreamEnqueueToReadable(transformStream, chunk) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    if (transformStream._readableClosed === true) {\n      throw new TypeError('Readable side is already closed');\n    }\n    var controller = transformStream._readableController;\n    try {\n      ReadableStreamDefaultControllerEnqueue(controller, chunk);\n    } catch (e) {\n      transformStream._readableClosed = true;\n      TransformStreamErrorIfNeeded(transformStream, e);\n      throw transformStream._storedError;\n    }\n    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n    var maybeBackpressure = desiredSize <= 0;\n    if (maybeBackpressure === true && transformStream._backpressure === false) {\n      TransformStreamSetBackpressure(transformStream, true);\n    }\n  }\n  function TransformStreamError(transformStream, e) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    TransformStreamErrorInternal(transformStream, e);\n  }\n  function TransformStreamCloseReadableInternal(transformStream) {\n    assert(transformStream._errored === false);\n    assert(transformStream._readableClosed === false);\n    try {\n      ReadableStreamDefaultControllerClose(transformStream._readableController);\n    } catch (e) {\n      assert(false);\n    }\n    transformStream._readableClosed = true;\n  }\n  function TransformStreamErrorIfNeeded(transformStream, e) {\n    if (transformStream._errored === false) {\n      TransformStreamErrorInternal(transformStream, e);\n    }\n  }\n  function TransformStreamErrorInternal(transformStream, e) {\n    assert(transformStream._errored === false);\n    transformStream._errored = true;\n    transformStream._storedError = e;\n    if (transformStream._writableDone === false) {\n      WritableStreamDefaultControllerError(transformStream._writableController, e);\n    }\n    if (transformStream._readableClosed === false) {\n      ReadableStreamDefaultControllerError(transformStream._readableController, e);\n    }\n  }\n  function TransformStreamReadableReadyPromise(transformStream) {\n    assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n    if (transformStream._backpressure === false) {\n      return Promise.resolve();\n    }\n    assert(transformStream._backpressure === true, '_backpressure should have been initialized');\n    return transformStream._backpressureChangePromise;\n  }\n  function TransformStreamSetBackpressure(transformStream, backpressure) {\n    assert(transformStream._backpressure !== backpressure, 'TransformStreamSetBackpressure() should be called only when backpressure is changed');\n    if (transformStream._backpressureChangePromise !== undefined) {\n      transformStream._backpressureChangePromise_resolve(backpressure);\n    }\n    transformStream._backpressureChangePromise = new Promise(function (resolve) {\n      transformStream._backpressureChangePromise_resolve = resolve;\n    });\n    transformStream._backpressureChangePromise.then(function (resolution) {\n      assert(resolution !== backpressure, '_backpressureChangePromise should be fulfilled only when backpressure is changed');\n    });\n    transformStream._backpressure = backpressure;\n  }\n  function TransformStreamDefaultTransform(chunk, transformStreamController) {\n    var transformStream = transformStreamController._controlledTransformStream;\n    TransformStreamEnqueueToReadable(transformStream, chunk);\n    return Promise.resolve();\n  }\n  function TransformStreamTransform(transformStream, chunk) {\n    assert(transformStream._errored === false);\n    assert(transformStream._transforming === false);\n    assert(transformStream._backpressure === false);\n    transformStream._transforming = true;\n    var transformer = transformStream._transformer;\n    var controller = transformStream._transformStreamController;\n    var transformPromise = PromiseInvokeOrPerformFallback(transformer, 'transform', [chunk, controller], TransformStreamDefaultTransform, [chunk, controller]);\n    return transformPromise.then(function () {\n      transformStream._transforming = false;\n      return TransformStreamReadableReadyPromise(transformStream);\n    }, function (e) {\n      TransformStreamErrorIfNeeded(transformStream, e);\n      return Promise.reject(e);\n    });\n  }\n  function IsTransformStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n      return false;\n    }\n    return true;\n  }\n  function IsTransformStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  var TransformStreamSink = function () {\n    function TransformStreamSink(transformStream, startPromise) {\n      _classCallCheck(this, TransformStreamSink);\n      this._transformStream = transformStream;\n      this._startPromise = startPromise;\n    }\n    _createClass(TransformStreamSink, [{\n      key: 'start',\n      value: function start(c) {\n        var transformStream = this._transformStream;\n        transformStream._writableController = c;\n        return this._startPromise.then(function () {\n          return TransformStreamReadableReadyPromise(transformStream);\n        });\n      }\n    }, {\n      key: 'write',\n      value: function write(chunk) {\n        var transformStream = this._transformStream;\n        return TransformStreamTransform(transformStream, chunk);\n      }\n    }, {\n      key: 'abort',\n      value: function abort() {\n        var transformStream = this._transformStream;\n        transformStream._writableDone = true;\n        TransformStreamErrorInternal(transformStream, new TypeError('Writable side aborted'));\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        var transformStream = this._transformStream;\n        assert(transformStream._transforming === false);\n        transformStream._writableDone = true;\n        var flushPromise = PromiseInvokeOrNoop(transformStream._transformer, 'flush', [transformStream._transformStreamController]);\n        return flushPromise.then(function () {\n          if (transformStream._errored === true) {\n            return Promise.reject(transformStream._storedError);\n          }\n          if (transformStream._readableClosed === false) {\n            TransformStreamCloseReadableInternal(transformStream);\n          }\n          return Promise.resolve();\n        }).catch(function (r) {\n          TransformStreamErrorIfNeeded(transformStream, r);\n          return Promise.reject(transformStream._storedError);\n        });\n      }\n    }]);\n    return TransformStreamSink;\n  }();\n  var TransformStreamSource = function () {\n    function TransformStreamSource(transformStream, startPromise) {\n      _classCallCheck(this, TransformStreamSource);\n      this._transformStream = transformStream;\n      this._startPromise = startPromise;\n    }\n    _createClass(TransformStreamSource, [{\n      key: 'start',\n      value: function start(c) {\n        var transformStream = this._transformStream;\n        transformStream._readableController = c;\n        return this._startPromise.then(function () {\n          assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n          if (transformStream._backpressure === true) {\n            return Promise.resolve();\n          }\n          assert(transformStream._backpressure === false, '_backpressure should have been initialized');\n          return transformStream._backpressureChangePromise;\n        });\n      }\n    }, {\n      key: 'pull',\n      value: function pull() {\n        var transformStream = this._transformStream;\n        assert(transformStream._backpressure === true, 'pull() should be never called while _backpressure is false');\n        assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n        TransformStreamSetBackpressure(transformStream, false);\n        return transformStream._backpressureChangePromise;\n      }\n    }, {\n      key: 'cancel',\n      value: function cancel() {\n        var transformStream = this._transformStream;\n        transformStream._readableClosed = true;\n        TransformStreamErrorInternal(transformStream, new TypeError('Readable side canceled'));\n      }\n    }]);\n    return TransformStreamSource;\n  }();\n  var TransformStreamDefaultController = function () {\n    function TransformStreamDefaultController(transformStream) {\n      _classCallCheck(this, TransformStreamDefaultController);\n      if (IsTransformStream(transformStream) === false) {\n        throw new TypeError('TransformStreamDefaultController can only be ' + 'constructed with a TransformStream instance');\n      }\n      if (transformStream._transformStreamController !== undefined) {\n        throw new TypeError('TransformStreamDefaultController instances can ' + 'only be created by the TransformStream constructor');\n      }\n      this._controlledTransformStream = transformStream;\n    }\n    _createClass(TransformStreamDefaultController, [{\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('enqueue');\n        }\n        TransformStreamEnqueueToReadable(this._controlledTransformStream, chunk);\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('close');\n        }\n        TransformStreamCloseReadable(this._controlledTransformStream);\n      }\n    }, {\n      key: 'error',\n      value: function error(reason) {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('error');\n        }\n        TransformStreamError(this._controlledTransformStream, reason);\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('desiredSize');\n        }\n        var transformStream = this._controlledTransformStream;\n        var readableController = transformStream._readableController;\n        return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n      }\n    }]);\n    return TransformStreamDefaultController;\n  }();\n  var TransformStream = function () {\n    function TransformStream() {\n      var transformer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      _classCallCheck(this, TransformStream);\n      this._transformer = transformer;\n      var readableStrategy = transformer.readableStrategy,\n          writableStrategy = transformer.writableStrategy;\n      this._transforming = false;\n      this._errored = false;\n      this._storedError = undefined;\n      this._writableController = undefined;\n      this._readableController = undefined;\n      this._transformStreamController = undefined;\n      this._writableDone = false;\n      this._readableClosed = false;\n      this._backpressure = undefined;\n      this._backpressureChangePromise = undefined;\n      this._backpressureChangePromise_resolve = undefined;\n      this._transformStreamController = new TransformStreamDefaultController(this);\n      var startPromise_resolve = void 0;\n      var startPromise = new Promise(function (resolve) {\n        startPromise_resolve = resolve;\n      });\n      var source = new TransformStreamSource(this, startPromise);\n      this._readable = new ReadableStream(source, readableStrategy);\n      var sink = new TransformStreamSink(this, startPromise);\n      this._writable = new WritableStream(sink, writableStrategy);\n      assert(this._writableController !== undefined);\n      assert(this._readableController !== undefined);\n      var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(this._readableController);\n      TransformStreamSetBackpressure(this, desiredSize <= 0);\n      var transformStream = this;\n      var startResult = InvokeOrNoop(transformer, 'start', [transformStream._transformStreamController]);\n      startPromise_resolve(startResult);\n      startPromise.catch(function (e) {\n        if (transformStream._errored === false) {\n          transformStream._errored = true;\n          transformStream._storedError = e;\n        }\n      });\n    }\n    _createClass(TransformStream, [{\n      key: 'readable',\n      get: function get() {\n        if (IsTransformStream(this) === false) {\n          throw streamBrandCheckException('readable');\n        }\n        return this._readable;\n      }\n    }, {\n      key: 'writable',\n      get: function get() {\n        if (IsTransformStream(this) === false) {\n          throw streamBrandCheckException('writable');\n        }\n        return this._writable;\n      }\n    }]);\n    return TransformStream;\n  }();\n  module.exports = { TransformStream: TransformStream };\n  function defaultControllerBrandCheckException(name) {\n    return new TypeError('TransformStreamDefaultController.prototype.' + name + ' can only be used on a TransformStreamDefaultController');\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('TransformStream.prototype.' + name + ' can only be used on a TransformStream');\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  module.exports = __w_pdfjs_require__(5);\n}]));\n\n/***/ }),\n/* 126 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkPdfManager = exports.LocalPdfManager = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _chunked_stream = __w_pdfjs_require__(72);\n\nvar _document = __w_pdfjs_require__(127);\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar BasePdfManager = function BasePdfManagerClosure() {\n  function BasePdfManager() {\n    throw new Error('Cannot initialize BaseManagerManager');\n  }\n  BasePdfManager.prototype = {\n    get docId() {\n      return this._docId;\n    },\n    get password() {\n      return this._password;\n    },\n    get docBaseUrl() {\n      var docBaseUrl = null;\n      if (this._docBaseUrl) {\n        var absoluteUrl = (0, _util.createValidAbsoluteUrl)(this._docBaseUrl);\n        if (absoluteUrl) {\n          docBaseUrl = absoluteUrl.href;\n        } else {\n          (0, _util.warn)('Invalid absolute docBaseUrl: \"' + this._docBaseUrl + '\".');\n        }\n      }\n      return (0, _util.shadow)(this, 'docBaseUrl', docBaseUrl);\n    },\n    onLoadedStream: function BasePdfManager_onLoadedStream() {\n      throw new _util.NotImplementedException();\n    },\n    ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n      return this.ensure(this.pdfDocument, prop, args);\n    },\n    ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n      return this.ensure(this.pdfDocument.xref, prop, args);\n    },\n    ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n      return this.ensure(this.pdfDocument.catalog, prop, args);\n    },\n    getPage: function BasePdfManager_getPage(pageIndex) {\n      return this.pdfDocument.getPage(pageIndex);\n    },\n    cleanup: function BasePdfManager_cleanup() {\n      return this.pdfDocument.cleanup();\n    },\n    ensure: function BasePdfManager_ensure(obj, prop, args) {\n      return new _util.NotImplementedException();\n    },\n    requestRange: function BasePdfManager_requestRange(begin, end) {\n      return new _util.NotImplementedException();\n    },\n    requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n      return new _util.NotImplementedException();\n    },\n    sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n      return new _util.NotImplementedException();\n    },\n    updatePassword: function BasePdfManager_updatePassword(password) {\n      this._password = password;\n    },\n    terminate: function BasePdfManager_terminate() {\n      return new _util.NotImplementedException();\n    }\n  };\n  return BasePdfManager;\n}();\nvar LocalPdfManager = function LocalPdfManagerClosure() {\n  function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = password;\n    this._docBaseUrl = docBaseUrl;\n    this.evaluatorOptions = evaluatorOptions;\n    var stream = new _stream.Stream(data);\n    this.pdfDocument = new _document.PDFDocument(this, stream);\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n    this._loadedStreamCapability.resolve(stream);\n  }\n  _util.Util.inherit(LocalPdfManager, BasePdfManager, {\n    ensure: function LocalPdfManager_ensure(obj, prop, args) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var value = obj[prop];\n          var result;\n          if (typeof value === 'function') {\n            result = value.apply(obj, args);\n          } else {\n            result = value;\n          }\n          resolve(result);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    },\n    requestRange: function LocalPdfManager_requestRange(begin, end) {\n      return Promise.resolve();\n    },\n    requestLoadedStream: function LocalPdfManager_requestLoadedStream() {},\n    onLoadedStream: function LocalPdfManager_onLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    terminate: function LocalPdfManager_terminate() {}\n  });\n  return LocalPdfManager;\n}();\nvar NetworkPdfManager = function NetworkPdfManagerClosure() {\n  function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = args.password;\n    this._docBaseUrl = docBaseUrl;\n    this.msgHandler = args.msgHandler;\n    this.evaluatorOptions = evaluatorOptions;\n    var params = {\n      msgHandler: args.msgHandler,\n      url: args.url,\n      length: args.length,\n      disableAutoFetch: args.disableAutoFetch,\n      rangeChunkSize: args.rangeChunkSize\n    };\n    this.streamManager = new _chunked_stream.ChunkedStreamManager(pdfNetworkStream, params);\n    this.pdfDocument = new _document.PDFDocument(this, this.streamManager.getStream());\n  }\n  _util.Util.inherit(NetworkPdfManager, BasePdfManager, {\n    ensure: function NetworkPdfManager_ensure(obj, prop, args) {\n      var pdfManager = this;\n      return new Promise(function (resolve, reject) {\n        function ensureHelper() {\n          try {\n            var result;\n            var value = obj[prop];\n            if (typeof value === 'function') {\n              result = value.apply(obj, args);\n            } else {\n              result = value;\n            }\n            resolve(result);\n          } catch (e) {\n            if (!(e instanceof _util.MissingDataException)) {\n              reject(e);\n              return;\n            }\n            pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\n          }\n        }\n        ensureHelper();\n      });\n    },\n    requestRange: function NetworkPdfManager_requestRange(begin, end) {\n      return this.streamManager.requestRange(begin, end);\n    },\n    requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\n      this.streamManager.requestAllChunks();\n    },\n    sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\n      this.streamManager.onReceiveData({ chunk: chunk });\n    },\n    onLoadedStream: function NetworkPdfManager_onLoadedStream() {\n      return this.streamManager.onLoadedStream();\n    },\n    terminate: function NetworkPdfManager_terminate() {\n      this.streamManager.abort();\n    }\n  });\n  return NetworkPdfManager;\n}();\nexports.LocalPdfManager = LocalPdfManager;\nexports.NetworkPdfManager = NetworkPdfManager;\n\n/***/ }),\n/* 127 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFDocument = exports.Page = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _obj = __w_pdfjs_require__(73);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar _evaluator = __w_pdfjs_require__(77);\n\nvar _annotation = __w_pdfjs_require__(144);\n\nvar _crypto = __w_pdfjs_require__(76);\n\nvar _parser = __w_pdfjs_require__(34);\n\nvar _function = __w_pdfjs_require__(81);\n\nvar Page = function PageClosure() {\n  var DEFAULT_USER_UNIT = 1.0;\n  var LETTER_SIZE_MEDIABOX = [0, 0, 612, 792];\n  function isAnnotationRenderable(annotation, intent) {\n    return intent === 'display' && annotation.viewable || intent === 'print' && annotation.printable;\n  }\n  function Page(_ref) {\n    var pdfManager = _ref.pdfManager,\n        xref = _ref.xref,\n        pageIndex = _ref.pageIndex,\n        pageDict = _ref.pageDict,\n        ref = _ref.ref,\n        fontCache = _ref.fontCache,\n        builtInCMapCache = _ref.builtInCMapCache,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.pageIndex = pageIndex;\n    this.pageDict = pageDict;\n    this.xref = xref;\n    this.ref = ref;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.evaluatorOptions = pdfManager.evaluatorOptions;\n    this.resourcesPromise = null;\n    var uniquePrefix = 'p' + this.pageIndex + '_';\n    var idCounters = { obj: 0 };\n    this.idFactory = {\n      createObjId: function createObjId() {\n        return uniquePrefix + ++idCounters.obj;\n      }\n    };\n  }\n  Page.prototype = {\n    getPageProp: function Page_getPageProp(key) {\n      return this.pageDict.get(key);\n    },\n    getInheritedPageProp: function Page_getInheritedPageProp(key, getArray) {\n      var dict = this.pageDict,\n          valueArray = null,\n          loopCount = 0;\n      var MAX_LOOP_COUNT = 100;\n      getArray = getArray || false;\n      while (dict) {\n        var value = getArray ? dict.getArray(key) : dict.get(key);\n        if (value !== undefined) {\n          if (!valueArray) {\n            valueArray = [];\n          }\n          valueArray.push(value);\n        }\n        if (++loopCount > MAX_LOOP_COUNT) {\n          (0, _util.warn)('getInheritedPageProp: maximum loop count exceeded for ' + key);\n          return valueArray ? valueArray[0] : undefined;\n        }\n        dict = dict.get('Parent');\n      }\n      if (!valueArray) {\n        return undefined;\n      }\n      if (valueArray.length === 1 || !(0, _primitives.isDict)(valueArray[0])) {\n        return valueArray[0];\n      }\n      return _primitives.Dict.merge(this.xref, valueArray);\n    },\n    get content() {\n      return this.getPageProp('Contents');\n    },\n    get resources() {\n      return (0, _util.shadow)(this, 'resources', this.getInheritedPageProp('Resources') || _primitives.Dict.empty);\n    },\n    get mediaBox() {\n      var mediaBox = this.getInheritedPageProp('MediaBox', true);\n      if (!Array.isArray(mediaBox) || mediaBox.length !== 4) {\n        return (0, _util.shadow)(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\n      }\n      return (0, _util.shadow)(this, 'mediaBox', mediaBox);\n    },\n    get cropBox() {\n      var cropBox = this.getInheritedPageProp('CropBox', true);\n      if (!Array.isArray(cropBox) || cropBox.length !== 4) {\n        return (0, _util.shadow)(this, 'cropBox', this.mediaBox);\n      }\n      return (0, _util.shadow)(this, 'cropBox', cropBox);\n    },\n    get userUnit() {\n      var obj = this.getPageProp('UserUnit');\n      if (!(0, _util.isNum)(obj) || obj <= 0) {\n        obj = DEFAULT_USER_UNIT;\n      }\n      return (0, _util.shadow)(this, 'userUnit', obj);\n    },\n    get view() {\n      var mediaBox = this.mediaBox,\n          cropBox = this.cropBox;\n      if (mediaBox === cropBox) {\n        return (0, _util.shadow)(this, 'view', mediaBox);\n      }\n      var intersection = _util.Util.intersect(cropBox, mediaBox);\n      return (0, _util.shadow)(this, 'view', intersection || mediaBox);\n    },\n    get rotate() {\n      var rotate = this.getInheritedPageProp('Rotate') || 0;\n      if (rotate % 90 !== 0) {\n        rotate = 0;\n      } else if (rotate >= 360) {\n        rotate = rotate % 360;\n      } else if (rotate < 0) {\n        rotate = (rotate % 360 + 360) % 360;\n      }\n      return (0, _util.shadow)(this, 'rotate', rotate);\n    },\n    getContentStream: function Page_getContentStream() {\n      var content = this.content;\n      var stream;\n      if (Array.isArray(content)) {\n        var xref = this.xref;\n        var i,\n            n = content.length;\n        var streams = [];\n        for (i = 0; i < n; ++i) {\n          streams.push(xref.fetchIfRef(content[i]));\n        }\n        stream = new _stream.StreamsSequenceStream(streams);\n      } else if ((0, _primitives.isStream)(content)) {\n        stream = content;\n      } else {\n        stream = new _stream.NullStream();\n      }\n      return stream;\n    },\n    loadResources: function Page_loadResources(keys) {\n      var _this = this;\n\n      if (!this.resourcesPromise) {\n        this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n      }\n      return this.resourcesPromise.then(function () {\n        var objectLoader = new _obj.ObjectLoader(_this.resources, keys, _this.xref);\n        return objectLoader.load();\n      });\n    },\n    getOperatorList: function getOperatorList(_ref2) {\n      var _this2 = this;\n\n      var handler = _ref2.handler,\n          task = _ref2.task,\n          intent = _ref2.intent,\n          renderInteractiveForms = _ref2.renderInteractiveForms;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var partialEvaluator = new _evaluator.PartialEvaluator({\n        pdfManager: this.pdfManager,\n        xref: this.xref,\n        handler: handler,\n        pageIndex: this.pageIndex,\n        idFactory: this.idFactory,\n        fontCache: this.fontCache,\n        builtInCMapCache: this.builtInCMapCache,\n        options: this.evaluatorOptions,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      });\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      var pageListPromise = dataPromises.then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n            contentStream = _ref4[0];\n\n        var opList = new _evaluator.OperatorList(intent, handler, _this2.pageIndex);\n        handler.send('StartRenderPage', {\n          transparency: partialEvaluator.hasBlendModes(_this2.resources),\n          pageIndex: _this2.pageIndex,\n          intent: intent\n        });\n        return partialEvaluator.getOperatorList({\n          stream: contentStream,\n          task: task,\n          resources: _this2.resources,\n          operatorList: opList\n        }).then(function () {\n          return opList;\n        });\n      });\n      var annotationsPromise = this.pdfManager.ensure(this, 'annotations');\n      return Promise.all([pageListPromise, annotationsPromise]).then(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            pageOpList = _ref6[0],\n            annotations = _ref6[1];\n\n        if (annotations.length === 0) {\n          pageOpList.flush(true);\n          return pageOpList;\n        }\n        var i,\n            ii,\n            opListPromises = [];\n        for (i = 0, ii = annotations.length; i < ii; i++) {\n          if (isAnnotationRenderable(annotations[i], intent)) {\n            opListPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderInteractiveForms));\n          }\n        }\n        return Promise.all(opListPromises).then(function (opLists) {\n          pageOpList.addOp(_util.OPS.beginAnnotations, []);\n          for (i = 0, ii = opLists.length; i < ii; i++) {\n            pageOpList.addOpList(opLists[i]);\n          }\n          pageOpList.addOp(_util.OPS.endAnnotations, []);\n          pageOpList.flush(true);\n          return pageOpList;\n        });\n      });\n    },\n    extractTextContent: function extractTextContent(_ref7) {\n      var _this3 = this;\n\n      var handler = _ref7.handler,\n          task = _ref7.task,\n          normalizeWhitespace = _ref7.normalizeWhitespace,\n          sink = _ref7.sink,\n          combineTextItems = _ref7.combineTextItems;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'XObject', 'Font']);\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      return dataPromises.then(function (_ref8) {\n        var _ref9 = _slicedToArray(_ref8, 1),\n            contentStream = _ref9[0];\n\n        var partialEvaluator = new _evaluator.PartialEvaluator({\n          pdfManager: _this3.pdfManager,\n          xref: _this3.xref,\n          handler: handler,\n          pageIndex: _this3.pageIndex,\n          idFactory: _this3.idFactory,\n          fontCache: _this3.fontCache,\n          builtInCMapCache: _this3.builtInCMapCache,\n          options: _this3.evaluatorOptions,\n          pdfFunctionFactory: _this3.pdfFunctionFactory\n        });\n        return partialEvaluator.getTextContent({\n          stream: contentStream,\n          task: task,\n          resources: _this3.resources,\n          normalizeWhitespace: normalizeWhitespace,\n          combineTextItems: combineTextItems,\n          sink: sink\n        });\n      });\n    },\n\n    getAnnotationsData: function Page_getAnnotationsData(intent) {\n      var annotations = this.annotations;\n      var annotationsData = [];\n      for (var i = 0, n = annotations.length; i < n; ++i) {\n        if (!intent || isAnnotationRenderable(annotations[i], intent)) {\n          annotationsData.push(annotations[i].data);\n        }\n      }\n      return annotationsData;\n    },\n    get annotations() {\n      var annotations = [];\n      var annotationRefs = this.getInheritedPageProp('Annots') || [];\n      for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n        var annotationRef = annotationRefs[i];\n        var annotation = _annotation.AnnotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\n        if (annotation) {\n          annotations.push(annotation);\n        }\n      }\n      return (0, _util.shadow)(this, 'annotations', annotations);\n    }\n  };\n  return Page;\n}();\nvar PDFDocument = function PDFDocumentClosure() {\n  var FINGERPRINT_FIRST_BYTES = 1024;\n  var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n  function PDFDocument(pdfManager, arg) {\n    var stream;\n    if ((0, _primitives.isStream)(arg)) {\n      stream = arg;\n    } else if ((0, _util.isArrayBuffer)(arg)) {\n      stream = new _stream.Stream(arg);\n    } else {\n      throw new Error('PDFDocument: Unknown argument type');\n    }\n    if (stream.length <= 0) {\n      throw new Error('PDFDocument: stream must have data');\n    }\n    this.pdfManager = pdfManager;\n    this.stream = stream;\n    this.xref = new _obj.XRef(stream, pdfManager);\n    var evaluatorOptions = pdfManager.evaluatorOptions;\n    this.pdfFunctionFactory = new _function.PDFFunctionFactory({\n      xref: this.xref,\n      isEvalSupported: evaluatorOptions.isEvalSupported\n    });\n  }\n  function find(stream, needle, limit, backwards) {\n    var pos = stream.pos;\n    var end = stream.end;\n    var strBuf = [];\n    if (pos + limit > end) {\n      limit = end - pos;\n    }\n    for (var n = 0; n < limit; ++n) {\n      strBuf.push(String.fromCharCode(stream.getByte()));\n    }\n    var str = strBuf.join('');\n    stream.pos = pos;\n    var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n    if (index === -1) {\n      return false;\n    }\n    stream.pos += index;\n    return true;\n  }\n  var DocumentInfoValidators = {\n    get entries() {\n      return (0, _util.shadow)(this, 'entries', {\n        Title: _util.isString,\n        Author: _util.isString,\n        Subject: _util.isString,\n        Keywords: _util.isString,\n        Creator: _util.isString,\n        Producer: _util.isString,\n        CreationDate: _util.isString,\n        ModDate: _util.isString,\n        Trapped: _primitives.isName\n      });\n    }\n  };\n  PDFDocument.prototype = {\n    parse: function PDFDocument_parse(recoveryMode) {\n      this.setup(recoveryMode);\n      var version = this.catalog.catDict.get('Version');\n      if ((0, _primitives.isName)(version)) {\n        this.pdfFormatVersion = version.name;\n      }\n      try {\n        this.acroForm = this.catalog.catDict.get('AcroForm');\n        if (this.acroForm) {\n          this.xfa = this.acroForm.get('XFA');\n          var fields = this.acroForm.get('Fields');\n          if ((!fields || !Array.isArray(fields) || fields.length === 0) && !this.xfa) {\n            this.acroForm = null;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.info)('Something wrong with AcroForm entry');\n        this.acroForm = null;\n      }\n    },\n    get linearization() {\n      var linearization = null;\n      if (this.stream.length) {\n        try {\n          linearization = _parser.Linearization.create(this.stream);\n        } catch (err) {\n          if (err instanceof _util.MissingDataException) {\n            throw err;\n          }\n          (0, _util.info)(err);\n        }\n      }\n      return (0, _util.shadow)(this, 'linearization', linearization);\n    },\n    get startXRef() {\n      var stream = this.stream;\n      var startXRef = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        stream.reset();\n        if (find(stream, 'endobj', 1024)) {\n          startXRef = stream.pos + 6;\n        }\n      } else {\n        var step = 1024;\n        var found = false,\n            pos = stream.end;\n        while (!found && pos > 0) {\n          pos -= step - 'startxref'.length;\n          if (pos < 0) {\n            pos = 0;\n          }\n          stream.pos = pos;\n          found = find(stream, 'startxref', step, true);\n        }\n        if (found) {\n          stream.skip(9);\n          var ch;\n          do {\n            ch = stream.getByte();\n          } while ((0, _util.isSpace)(ch));\n          var str = '';\n          while (ch >= 0x20 && ch <= 0x39) {\n            str += String.fromCharCode(ch);\n            ch = stream.getByte();\n          }\n          startXRef = parseInt(str, 10);\n          if (isNaN(startXRef)) {\n            startXRef = 0;\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'startXRef', startXRef);\n    },\n    get mainXRefEntriesOffset() {\n      var mainXRefEntriesOffset = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n      }\n      return (0, _util.shadow)(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n    },\n    checkHeader: function PDFDocument_checkHeader() {\n      var stream = this.stream;\n      stream.reset();\n      if (find(stream, '%PDF-', 1024)) {\n        stream.moveStart();\n        var MAX_VERSION_LENGTH = 12;\n        var version = '',\n            ch;\n        while ((ch = stream.getByte()) > 0x20) {\n          if (version.length >= MAX_VERSION_LENGTH) {\n            break;\n          }\n          version += String.fromCharCode(ch);\n        }\n        if (!this.pdfFormatVersion) {\n          this.pdfFormatVersion = version.substring(5);\n        }\n        return;\n      }\n    },\n    parseStartXRef: function PDFDocument_parseStartXRef() {\n      var startXRef = this.startXRef;\n      this.xref.setStartXRef(startXRef);\n    },\n    setup: function PDFDocument_setup(recoveryMode) {\n      var _this4 = this;\n\n      this.xref.parse(recoveryMode);\n      var pageFactory = {\n        createPage: function createPage(pageIndex, dict, ref, fontCache, builtInCMapCache) {\n          return new Page({\n            pdfManager: _this4.pdfManager,\n            xref: _this4.xref,\n            pageIndex: pageIndex,\n            pageDict: dict,\n            ref: ref,\n            fontCache: fontCache,\n            builtInCMapCache: builtInCMapCache,\n            pdfFunctionFactory: _this4.pdfFunctionFactory\n          });\n        }\n      };\n      this.catalog = new _obj.Catalog(this.pdfManager, this.xref, pageFactory);\n    },\n    get numPages() {\n      var linearization = this.linearization;\n      var num = linearization ? linearization.numPages : this.catalog.numPages;\n      return (0, _util.shadow)(this, 'numPages', num);\n    },\n    get documentInfo() {\n      var docInfo = {\n        PDFFormatVersion: this.pdfFormatVersion,\n        IsAcroFormPresent: !!this.acroForm,\n        IsXFAPresent: !!this.xfa\n      };\n      var infoDict;\n      try {\n        infoDict = this.xref.trailer.get('Info');\n      } catch (err) {\n        if (err instanceof _util.MissingDataException) {\n          throw err;\n        }\n        (0, _util.info)('The document information dictionary is invalid.');\n      }\n      if (infoDict) {\n        var validEntries = DocumentInfoValidators.entries;\n        for (var key in validEntries) {\n          if (infoDict.has(key)) {\n            var value = infoDict.get(key);\n            if (validEntries[key](value)) {\n              docInfo[key] = typeof value !== 'string' ? value : (0, _util.stringToPDFString)(value);\n            } else {\n              (0, _util.info)('Bad value in document info for \"' + key + '\"');\n            }\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'documentInfo', docInfo);\n    },\n    get fingerprint() {\n      var xref = this.xref,\n          hash,\n          fileID = '';\n      var idArray = xref.trailer.get('ID');\n      if (Array.isArray(idArray) && idArray[0] && (0, _util.isString)(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n        hash = (0, _util.stringToBytes)(idArray[0]);\n      } else {\n        if (this.stream.ensureRange) {\n          this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n        }\n        hash = (0, _crypto.calculateMD5)(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n      }\n      for (var i = 0, n = hash.length; i < n; i++) {\n        var hex = hash[i].toString(16);\n        fileID += hex.length === 1 ? '0' + hex : hex;\n      }\n      return (0, _util.shadow)(this, 'fingerprint', fileID);\n    },\n    getPage: function PDFDocument_getPage(pageIndex) {\n      return this.catalog.getPage(pageIndex);\n    },\n    cleanup: function PDFDocument_cleanup() {\n      return this.catalog.cleanup();\n    }\n  };\n  return PDFDocument;\n}();\nexports.Page = Page;\nexports.PDFDocument = PDFDocument;\n\n/***/ }),\n/* 128 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegImage = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = __w_pdfjs_require__(0);\n\nvar JpegError = function JpegErrorClosure() {\n  function JpegError(msg) {\n    this.message = 'JPEG error: ' + msg;\n  }\n  JpegError.prototype = new Error();\n  JpegError.prototype.name = 'JpegError';\n  JpegError.constructor = JpegError;\n  return JpegError;\n}();\nvar JpegImage = function JpegImageClosure() {\n  var dctZigZag = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\n  var dctCos1 = 4017;\n  var dctSin1 = 799;\n  var dctCos3 = 3406;\n  var dctSin3 = 2276;\n  var dctCos6 = 1567;\n  var dctSin6 = 3784;\n  var dctSqrt2 = 5793;\n  var dctSqrt1d2 = 2896;\n  function JpegImage() {\n    this.decodeTransform = null;\n    this.colorTransform = -1;\n  }\n  function buildHuffmanTable(codeLengths, values) {\n    var k = 0,\n        code = [],\n        i,\n        j,\n        length = 16;\n    while (length > 0 && !codeLengths[length - 1]) {\n      length--;\n    }\n    code.push({\n      children: [],\n      index: 0\n    });\n    var p = code[0],\n        q;\n    for (i = 0; i < length; i++) {\n      for (j = 0; j < codeLengths[i]; j++) {\n        p = code.pop();\n        p.children[p.index] = values[k];\n        while (p.index > 0) {\n          p = code.pop();\n        }\n        p.index++;\n        code.push(p);\n        while (code.length <= i) {\n          code.push(q = {\n            children: [],\n            index: 0\n          });\n          p.children[p.index] = q.children;\n          p = q;\n        }\n        k++;\n      }\n      if (i + 1 < length) {\n        code.push(q = {\n          children: [],\n          index: 0\n        });\n        p.children[p.index] = q.children;\n        p = q;\n      }\n    }\n    return code[0].children;\n  }\n  function getBlockBufferOffset(component, row, col) {\n    return 64 * ((component.blocksPerLine + 1) * row + col);\n  }\n  function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n    var mcusPerLine = frame.mcusPerLine;\n    var progressive = frame.progressive;\n    var startOffset = offset,\n        bitsData = 0,\n        bitsCount = 0;\n    function readBit() {\n      if (bitsCount > 0) {\n        bitsCount--;\n        return bitsData >> bitsCount & 1;\n      }\n      bitsData = data[offset++];\n      if (bitsData === 0xFF) {\n        var nextByte = data[offset++];\n        if (nextByte) {\n          throw new JpegError('unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\n        }\n      }\n      bitsCount = 7;\n      return bitsData >>> 7;\n    }\n    function decodeHuffman(tree) {\n      var node = tree;\n      while (true) {\n        node = node[readBit()];\n        if (typeof node === 'number') {\n          return node;\n        }\n        if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {\n          throw new JpegError('invalid huffman sequence');\n        }\n      }\n    }\n    function receive(length) {\n      var n = 0;\n      while (length > 0) {\n        n = n << 1 | readBit();\n        length--;\n      }\n      return n;\n    }\n    function receiveAndExtend(length) {\n      if (length === 1) {\n        return readBit() === 1 ? 1 : -1;\n      }\n      var n = receive(length);\n      if (n >= 1 << length - 1) {\n        return n;\n      }\n      return n + (-1 << length) + 1;\n    }\n    function decodeBaseline(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\n      component.blockData[offset] = component.pred += diff;\n      var k = 1;\n      while (k < 64) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n    function decodeDCFirst(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n      component.blockData[offset] = component.pred += diff;\n    }\n    function decodeDCSuccessive(component, offset) {\n      component.blockData[offset] |= readBit() << successive;\n    }\n    var eobrun = 0;\n    function decodeACFirst(component, offset) {\n      if (eobrun > 0) {\n        eobrun--;\n        return;\n      }\n      var k = spectralStart,\n          e = spectralEnd;\n      while (k <= e) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            eobrun = receive(r) + (1 << r) - 1;\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n    var successiveACState = 0,\n        successiveACNextValue;\n    function decodeACSuccessive(component, offset) {\n      var k = spectralStart;\n      var e = spectralEnd;\n      var r = 0;\n      var s;\n      var rs;\n      while (k <= e) {\n        var z = dctZigZag[k];\n        switch (successiveACState) {\n          case 0:\n            rs = decodeHuffman(component.huffmanTableAC);\n            s = rs & 15;\n            r = rs >> 4;\n            if (s === 0) {\n              if (r < 15) {\n                eobrun = receive(r) + (1 << r);\n                successiveACState = 4;\n              } else {\n                r = 16;\n                successiveACState = 1;\n              }\n            } else {\n              if (s !== 1) {\n                throw new JpegError('invalid ACn encoding');\n              }\n              successiveACNextValue = receiveAndExtend(s);\n              successiveACState = r ? 2 : 3;\n            }\n            continue;\n          case 1:\n          case 2:\n            if (component.blockData[offset + z]) {\n              component.blockData[offset + z] += readBit() << successive;\n            } else {\n              r--;\n              if (r === 0) {\n                successiveACState = successiveACState === 2 ? 3 : 0;\n              }\n            }\n            break;\n          case 3:\n            if (component.blockData[offset + z]) {\n              component.blockData[offset + z] += readBit() << successive;\n            } else {\n              component.blockData[offset + z] = successiveACNextValue << successive;\n              successiveACState = 0;\n            }\n            break;\n          case 4:\n            if (component.blockData[offset + z]) {\n              component.blockData[offset + z] += readBit() << successive;\n            }\n            break;\n        }\n        k++;\n      }\n      if (successiveACState === 4) {\n        eobrun--;\n        if (eobrun === 0) {\n          successiveACState = 0;\n        }\n      }\n    }\n    function decodeMcu(component, decode, mcu, row, col) {\n      var mcuRow = mcu / mcusPerLine | 0;\n      var mcuCol = mcu % mcusPerLine;\n      var blockRow = mcuRow * component.v + row;\n      var blockCol = mcuCol * component.h + col;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    function decodeBlock(component, decode, mcu) {\n      var blockRow = mcu / component.blocksPerLine | 0;\n      var blockCol = mcu % component.blocksPerLine;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    var componentsLength = components.length;\n    var component, i, j, k, n;\n    var decodeFn;\n    if (progressive) {\n      if (spectralStart === 0) {\n        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n      } else {\n        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n      }\n    } else {\n      decodeFn = decodeBaseline;\n    }\n    var mcu = 0,\n        fileMarker;\n    var mcuExpected;\n    if (componentsLength === 1) {\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n    } else {\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n    }\n    var h, v;\n    while (mcu < mcuExpected) {\n      var mcuToRead = resetInterval ? Math.min(mcuExpected - mcu, resetInterval) : mcuExpected;\n      for (i = 0; i < componentsLength; i++) {\n        components[i].pred = 0;\n      }\n      eobrun = 0;\n      if (componentsLength === 1) {\n        component = components[0];\n        for (n = 0; n < mcuToRead; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < mcuToRead; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n        }\n      }\n      bitsCount = 0;\n      fileMarker = findNextFileMarker(data, offset);\n      if (fileMarker && fileMarker.invalid) {\n        (0, _util.warn)('decodeScan - unexpected MCU data, next marker is: ' + fileMarker.invalid);\n        offset = fileMarker.offset;\n      }\n      var marker = fileMarker && fileMarker.marker;\n      if (!marker || marker <= 0xFF00) {\n        throw new JpegError('marker was not found');\n      }\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n        offset += 2;\n      } else {\n        break;\n      }\n    }\n    fileMarker = findNextFileMarker(data, offset);\n    if (fileMarker && fileMarker.invalid) {\n      (0, _util.warn)('decodeScan - unexpected Scan data, next marker is: ' + fileMarker.invalid);\n      offset = fileMarker.offset;\n    }\n    return offset - startOffset;\n  }\n  function quantizeAndInverse(component, blockBufferOffset, p) {\n    var qt = component.quantizationTable,\n        blockData = component.blockData;\n    var v0, v1, v2, v3, v4, v5, v6, v7;\n    var p0, p1, p2, p3, p4, p5, p6, p7;\n    var t;\n    if (!qt) {\n      throw new JpegError('missing required Quantization Table.');\n    }\n    for (var row = 0; row < 64; row += 8) {\n      p0 = blockData[blockBufferOffset + row];\n      p1 = blockData[blockBufferOffset + row + 1];\n      p2 = blockData[blockBufferOffset + row + 2];\n      p3 = blockData[blockBufferOffset + row + 3];\n      p4 = blockData[blockBufferOffset + row + 4];\n      p5 = blockData[blockBufferOffset + row + 5];\n      p6 = blockData[blockBufferOffset + row + 6];\n      p7 = blockData[blockBufferOffset + row + 7];\n      p0 *= qt[row];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 512 >> 10;\n        p[row] = t;\n        p[row + 1] = t;\n        p[row + 2] = t;\n        p[row + 3] = t;\n        p[row + 4] = t;\n        p[row + 5] = t;\n        p[row + 6] = t;\n        p[row + 7] = t;\n        continue;\n      }\n      p1 *= qt[row + 1];\n      p2 *= qt[row + 2];\n      p3 *= qt[row + 3];\n      p4 *= qt[row + 4];\n      p5 *= qt[row + 5];\n      p6 *= qt[row + 6];\n      p7 *= qt[row + 7];\n      v0 = dctSqrt2 * p0 + 128 >> 8;\n      v1 = dctSqrt2 * p4 + 128 >> 8;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n      v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n      v5 = p3 << 4;\n      v6 = p5 << 4;\n      v0 = v0 + v1 + 1 >> 1;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p[row] = v0 + v7;\n      p[row + 7] = v0 - v7;\n      p[row + 1] = v1 + v6;\n      p[row + 6] = v1 - v6;\n      p[row + 2] = v2 + v5;\n      p[row + 5] = v2 - v5;\n      p[row + 3] = v3 + v4;\n      p[row + 4] = v3 - v4;\n    }\n    for (var col = 0; col < 8; ++col) {\n      p0 = p[col];\n      p1 = p[col + 8];\n      p2 = p[col + 16];\n      p3 = p[col + 24];\n      p4 = p[col + 32];\n      p5 = p[col + 40];\n      p6 = p[col + 48];\n      p7 = p[col + 56];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 8192 >> 14;\n        t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\n        blockData[blockBufferOffset + col] = t;\n        blockData[blockBufferOffset + col + 8] = t;\n        blockData[blockBufferOffset + col + 16] = t;\n        blockData[blockBufferOffset + col + 24] = t;\n        blockData[blockBufferOffset + col + 32] = t;\n        blockData[blockBufferOffset + col + 40] = t;\n        blockData[blockBufferOffset + col + 48] = t;\n        blockData[blockBufferOffset + col + 56] = t;\n        continue;\n      }\n      v0 = dctSqrt2 * p0 + 2048 >> 12;\n      v1 = dctSqrt2 * p4 + 2048 >> 12;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n      v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n      v5 = p3;\n      v6 = p5;\n      v0 = (v0 + v1 + 1 >> 1) + 4112;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p0 = v0 + v7;\n      p7 = v0 - v7;\n      p1 = v1 + v6;\n      p6 = v1 - v6;\n      p2 = v2 + v5;\n      p5 = v2 - v5;\n      p3 = v3 + v4;\n      p4 = v3 - v4;\n      p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n      p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n      p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n      p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n      p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n      p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n      p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n      p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n      blockData[blockBufferOffset + col] = p0;\n      blockData[blockBufferOffset + col + 8] = p1;\n      blockData[blockBufferOffset + col + 16] = p2;\n      blockData[blockBufferOffset + col + 24] = p3;\n      blockData[blockBufferOffset + col + 32] = p4;\n      blockData[blockBufferOffset + col + 40] = p5;\n      blockData[blockBufferOffset + col + 48] = p6;\n      blockData[blockBufferOffset + col + 56] = p7;\n    }\n  }\n  function buildComponentData(frame, component) {\n    var blocksPerLine = component.blocksPerLine;\n    var blocksPerColumn = component.blocksPerColumn;\n    var computationBuffer = new Int16Array(64);\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n        quantizeAndInverse(component, offset, computationBuffer);\n      }\n    }\n    return component.blockData;\n  }\n  function findNextFileMarker(data, currentPos, startPos) {\n    function peekUint16(pos) {\n      return data[pos] << 8 | data[pos + 1];\n    }\n    var maxPos = data.length - 1;\n    var newPos = startPos < currentPos ? startPos : currentPos;\n    if (currentPos >= maxPos) {\n      return null;\n    }\n    var currentMarker = peekUint16(currentPos);\n    if (currentMarker >= 0xFFC0 && currentMarker <= 0xFFFE) {\n      return {\n        invalid: null,\n        marker: currentMarker,\n        offset: currentPos\n      };\n    }\n    var newMarker = peekUint16(newPos);\n    while (!(newMarker >= 0xFFC0 && newMarker <= 0xFFFE)) {\n      if (++newPos >= maxPos) {\n        return null;\n      }\n      newMarker = peekUint16(newPos);\n    }\n    return {\n      invalid: currentMarker.toString(16),\n      marker: newMarker,\n      offset: newPos\n    };\n  }\n  JpegImage.prototype = {\n    parse: function parse(data) {\n      function readUint16() {\n        var value = data[offset] << 8 | data[offset + 1];\n        offset += 2;\n        return value;\n      }\n      function readDataBlock() {\n        var length = readUint16();\n        var endOffset = offset + length - 2;\n        var fileMarker = findNextFileMarker(data, endOffset, offset);\n        if (fileMarker && fileMarker.invalid) {\n          (0, _util.warn)('readDataBlock - incorrect length, next marker is: ' + fileMarker.invalid);\n          endOffset = fileMarker.offset;\n        }\n        var array = data.subarray(offset, endOffset);\n        offset += array.length;\n        return array;\n      }\n      function prepareComponents(frame) {\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n        for (var i = 0; i < frame.components.length; i++) {\n          component = frame.components[i];\n          var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n          var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n          var blocksPerLineForMcu = mcusPerLine * component.h;\n          var blocksPerColumnForMcu = mcusPerColumn * component.v;\n          var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n          component.blockData = new Int16Array(blocksBufferSize);\n          component.blocksPerLine = blocksPerLine;\n          component.blocksPerColumn = blocksPerColumn;\n        }\n        frame.mcusPerLine = mcusPerLine;\n        frame.mcusPerColumn = mcusPerColumn;\n      }\n      var offset = 0;\n      var jfif = null;\n      var adobe = null;\n      var frame, resetInterval;\n      var quantizationTables = [];\n      var huffmanTablesAC = [],\n          huffmanTablesDC = [];\n      var fileMarker = readUint16();\n      if (fileMarker !== 0xFFD8) {\n        throw new JpegError('SOI not found');\n      }\n      fileMarker = readUint16();\n      while (fileMarker !== 0xFFD9) {\n        var i, j, l;\n        switch (fileMarker) {\n          case 0xFFE0:\n          case 0xFFE1:\n          case 0xFFE2:\n          case 0xFFE3:\n          case 0xFFE4:\n          case 0xFFE5:\n          case 0xFFE6:\n          case 0xFFE7:\n          case 0xFFE8:\n          case 0xFFE9:\n          case 0xFFEA:\n          case 0xFFEB:\n          case 0xFFEC:\n          case 0xFFED:\n          case 0xFFEE:\n          case 0xFFEF:\n          case 0xFFFE:\n            var appData = readDataBlock();\n            if (fileMarker === 0xFFE0) {\n              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n                jfif = {\n                  version: {\n                    major: appData[5],\n                    minor: appData[6]\n                  },\n                  densityUnits: appData[7],\n                  xDensity: appData[8] << 8 | appData[9],\n                  yDensity: appData[10] << 8 | appData[11],\n                  thumbWidth: appData[12],\n                  thumbHeight: appData[13],\n                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n                };\n              }\n            }\n            if (fileMarker === 0xFFEE) {\n              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\n                adobe = {\n                  version: appData[5] << 8 | appData[6],\n                  flags0: appData[7] << 8 | appData[8],\n                  flags1: appData[9] << 8 | appData[10],\n                  transformCode: appData[11]\n                };\n              }\n            }\n            break;\n          case 0xFFDB:\n            var quantizationTablesLength = readUint16();\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n            var z;\n            while (offset < quantizationTablesEnd) {\n              var quantizationTableSpec = data[offset++];\n              var tableData = new Uint16Array(64);\n              if (quantizationTableSpec >> 4 === 0) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = data[offset++];\n                }\n              } else if (quantizationTableSpec >> 4 === 1) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = readUint16();\n                }\n              } else {\n                throw new JpegError('DQT - invalid table spec');\n              }\n              quantizationTables[quantizationTableSpec & 15] = tableData;\n            }\n            break;\n          case 0xFFC0:\n          case 0xFFC1:\n          case 0xFFC2:\n            if (frame) {\n              throw new JpegError('Only single frame JPEGs supported');\n            }\n            readUint16();\n            frame = {};\n            frame.extended = fileMarker === 0xFFC1;\n            frame.progressive = fileMarker === 0xFFC2;\n            frame.precision = data[offset++];\n            frame.scanLines = readUint16();\n            frame.samplesPerLine = readUint16();\n            frame.components = [];\n            frame.componentIds = {};\n            var componentsCount = data[offset++],\n                componentId;\n            var maxH = 0,\n                maxV = 0;\n            for (i = 0; i < componentsCount; i++) {\n              componentId = data[offset];\n              var h = data[offset + 1] >> 4;\n              var v = data[offset + 1] & 15;\n              if (maxH < h) {\n                maxH = h;\n              }\n              if (maxV < v) {\n                maxV = v;\n              }\n              var qId = data[offset + 2];\n              l = frame.components.push({\n                h: h,\n                v: v,\n                quantizationId: qId,\n                quantizationTable: null\n              });\n              frame.componentIds[componentId] = l - 1;\n              offset += 3;\n            }\n            frame.maxH = maxH;\n            frame.maxV = maxV;\n            prepareComponents(frame);\n            break;\n          case 0xFFC4:\n            var huffmanLength = readUint16();\n            for (i = 2; i < huffmanLength;) {\n              var huffmanTableSpec = data[offset++];\n              var codeLengths = new Uint8Array(16);\n              var codeLengthSum = 0;\n              for (j = 0; j < 16; j++, offset++) {\n                codeLengthSum += codeLengths[j] = data[offset];\n              }\n              var huffmanValues = new Uint8Array(codeLengthSum);\n              for (j = 0; j < codeLengthSum; j++, offset++) {\n                huffmanValues[j] = data[offset];\n              }\n              i += 17 + codeLengthSum;\n              (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n            }\n            break;\n          case 0xFFDD:\n            readUint16();\n            resetInterval = readUint16();\n            break;\n          case 0xFFDA:\n            readUint16();\n            var selectorsCount = data[offset++];\n            var components = [],\n                component;\n            for (i = 0; i < selectorsCount; i++) {\n              var componentIndex = frame.componentIds[data[offset++]];\n              component = frame.components[componentIndex];\n              var tableSpec = data[offset++];\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n              components.push(component);\n            }\n            var spectralStart = data[offset++];\n            var spectralEnd = data[offset++];\n            var successiveApproximation = data[offset++];\n            var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15);\n            offset += processed;\n            break;\n          case 0xFFFF:\n            if (data[offset] !== 0xFF) {\n              offset--;\n            }\n            break;\n          default:\n            if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n              offset -= 3;\n              break;\n            }\n            throw new JpegError('unknown marker ' + fileMarker.toString(16));\n        }\n        fileMarker = readUint16();\n      }\n      this.width = frame.samplesPerLine;\n      this.height = frame.scanLines;\n      this.jfif = jfif;\n      this.adobe = adobe;\n      this.components = [];\n      for (i = 0; i < frame.components.length; i++) {\n        component = frame.components[i];\n        var quantizationTable = quantizationTables[component.quantizationId];\n        if (quantizationTable) {\n          component.quantizationTable = quantizationTable;\n        }\n        this.components.push({\n          output: buildComponentData(frame, component),\n          scaleX: component.h / frame.maxH,\n          scaleY: component.v / frame.maxV,\n          blocksPerLine: component.blocksPerLine,\n          blocksPerColumn: component.blocksPerColumn\n        });\n      }\n      this.numComponents = this.components.length;\n    },\n    _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n      var scaleX = this.width / width,\n          scaleY = this.height / height;\n      var component, componentScaleX, componentScaleY, blocksPerScanline;\n      var x, y, i, j, k;\n      var index;\n      var offset = 0;\n      var output;\n      var numComponents = this.components.length;\n      var dataLength = width * height * numComponents;\n      var data = new Uint8ClampedArray(dataLength);\n      var xScaleBlockOffset = new Uint32Array(width);\n      var mask3LSB = 0xfffffff8;\n      for (i = 0; i < numComponents; i++) {\n        component = this.components[i];\n        componentScaleX = component.scaleX * scaleX;\n        componentScaleY = component.scaleY * scaleY;\n        offset = i;\n        output = component.output;\n        blocksPerScanline = component.blocksPerLine + 1 << 3;\n        for (x = 0; x < width; x++) {\n          j = 0 | x * componentScaleX;\n          xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n        }\n        for (y = 0; y < height; y++) {\n          j = 0 | y * componentScaleY;\n          index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n          for (x = 0; x < width; x++) {\n            data[offset] = output[index + xScaleBlockOffset[x]];\n            offset += numComponents;\n          }\n        }\n      }\n      var transform = this.decodeTransform;\n      if (transform) {\n        for (i = 0; i < dataLength;) {\n          for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n            data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n          }\n        }\n      }\n      return data;\n    },\n    _isColorConversionNeeded: function _isColorConversionNeeded() {\n      if (this.adobe) {\n        return !!this.adobe.transformCode;\n      }\n      if (this.numComponents === 3) {\n        if (this.colorTransform === 0) {\n          return false;\n        }\n        return true;\n      }\n      if (this.colorTransform === 1) {\n        return true;\n      }\n      return false;\n    },\n\n    _convertYccToRgb: function convertYccToRgb(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 3) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = Y - 179.456 + 1.402 * Cr;\n        data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n        data[i + 2] = Y - 226.816 + 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertYcckToRgb: function convertYcckToRgb(data) {\n      var Y, Cb, Cr, k;\n      var offset = 0;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        k = data[i + 3];\n        data[offset++] = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n        data[offset++] = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n        data[offset++] = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n      }\n      return data;\n    },\n    _convertYcckToCmyk: function convertYcckToCmyk(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = 434.456 - Y - 1.402 * Cr;\n        data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n        data[i + 2] = 481.816 - Y - 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertCmykToRgb: function convertCmykToRgb(data) {\n      var c, m, y, k;\n      var offset = 0;\n      var scale = 1 / 255;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        c = data[i] * scale;\n        m = data[i + 1] * scale;\n        y = data[i + 2] * scale;\n        k = data[i + 3] * scale;\n        data[offset++] = 255 + c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) - k * (21.86122147463605 * k + 189.48180835922747);\n        data[offset++] = 255 + c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) - k * (20.737325471181034 * k + 187.80453709719578);\n        data[offset++] = 255 + c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 193.58209356861505) - k * (22.33816807309886 * k + 180.12613974708367);\n      }\n      return data;\n    },\n    getData: function getData(width, height, forceRGBoutput) {\n      if (this.numComponents > 4) {\n        throw new JpegError('Unsupported color mode');\n      }\n      var data = this._getLinearizedBlockData(width, height);\n      if (this.numComponents === 1 && forceRGBoutput) {\n        var dataLength = data.length;\n        var rgbData = new Uint8ClampedArray(dataLength * 3);\n        var offset = 0;\n        for (var i = 0; i < dataLength; i++) {\n          var grayColor = data[i];\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n        }\n        return rgbData;\n      } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\n        return this._convertYccToRgb(data);\n      } else if (this.numComponents === 4) {\n        if (this._isColorConversionNeeded()) {\n          if (forceRGBoutput) {\n            return this._convertYcckToRgb(data);\n          }\n          return this._convertYcckToCmyk(data);\n        } else if (forceRGBoutput) {\n          return this._convertCmykToRgb(data);\n        }\n      }\n      return data;\n    }\n  };\n  return JpegImage;\n}();\nexports.JpegImage = JpegImage;\n\n/***/ }),\n/* 129 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxStream = undefined;\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _ccitt = __w_pdfjs_require__(130);\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar CCITTFaxStream = function CCITTFaxStreamClosure() {\n  function CCITTFaxStream(str, maybeLength, params) {\n    this.str = str;\n    this.dict = str.dict;\n    if (!(0, _primitives.isDict)(params)) {\n      params = _primitives.Dict.empty;\n    }\n    var source = {\n      next: function next() {\n        return str.getByte();\n      }\n    };\n    this.ccittFaxDecoder = new _ccitt.CCITTFaxDecoder(source, {\n      K: params.get('K'),\n      EndOfLine: params.get('EndOfLine'),\n      EncodedByteAlign: params.get('EncodedByteAlign'),\n      Columns: params.get('Columns'),\n      Rows: params.get('Rows'),\n      EndOfBlock: params.get('EndOfBlock'),\n      BlackIs1: params.get('BlackIs1')\n    });\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  CCITTFaxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  CCITTFaxStream.prototype.readBlock = function () {\n    while (!this.eof) {\n      var c = this.ccittFaxDecoder.readNextChar();\n      if (c === -1) {\n        this.eof = true;\n        return;\n      }\n      this.ensureBuffer(this.bufferLength + 1);\n      this.buffer[this.bufferLength++] = c;\n    }\n  };\n  return CCITTFaxStream;\n}();\nexports.CCITTFaxStream = CCITTFaxStream;\n\n/***/ }),\n/* 130 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxDecoder = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar CCITTFaxDecoder = function CCITTFaxDecoder() {\n  var ccittEOL = -2;\n  var ccittEOF = -1;\n  var twoDimPass = 0;\n  var twoDimHoriz = 1;\n  var twoDimVert0 = 2;\n  var twoDimVertR1 = 3;\n  var twoDimVertL1 = 4;\n  var twoDimVertR2 = 5;\n  var twoDimVertL2 = 6;\n  var twoDimVertR3 = 7;\n  var twoDimVertL3 = 8;\n  var twoDimTable = [[-1, -1], [-1, -1], [7, twoDimVertL3], [7, twoDimVertR3], [6, twoDimVertL2], [6, twoDimVertL2], [6, twoDimVertR2], [6, twoDimVertR2], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0]];\n  var whiteTable1 = [[-1, -1], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]];\n  var whiteTable2 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]];\n  var blackTable1 = [[-1, -1], [-1, -1], [12, ccittEOL], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]];\n  var blackTable2 = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]];\n  var blackTable3 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];\n  function CCITTFaxDecoder(source) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!source || typeof source.next !== 'function') {\n      throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n    }\n    this.source = source;\n    this.eof = false;\n    this.encoding = options['K'] || 0;\n    this.eoline = options['EndOfLine'] || false;\n    this.byteAlign = options['EncodedByteAlign'] || false;\n    this.columns = options['Columns'] || 1728;\n    this.rows = options['Rows'] || 0;\n    var eoblock = options['EndOfBlock'];\n    if (eoblock === null || eoblock === undefined) {\n      eoblock = true;\n    }\n    this.eoblock = eoblock;\n    this.black = options['BlackIs1'] || false;\n    this.codingLine = new Uint32Array(this.columns + 1);\n    this.refLine = new Uint32Array(this.columns + 2);\n    this.codingLine[0] = this.columns;\n    this.codingPos = 0;\n    this.row = 0;\n    this.nextLine2D = this.encoding < 0;\n    this.inputBits = 0;\n    this.inputBuf = 0;\n    this.outputBits = 0;\n    this.rowsDone = false;\n    var code1 = void 0;\n    while ((code1 = this._lookBits(12)) === 0) {\n      this._eatBits(1);\n    }\n    if (code1 === 1) {\n      this._eatBits(12);\n    }\n    if (this.encoding > 0) {\n      this.nextLine2D = !this._lookBits(1);\n      this._eatBits(1);\n    }\n  }\n  CCITTFaxDecoder.prototype = {\n    readNextChar: function readNextChar() {\n      if (this.eof) {\n        return -1;\n      }\n      var refLine = this.refLine;\n      var codingLine = this.codingLine;\n      var columns = this.columns;\n      var refPos = void 0,\n          blackPixels = void 0,\n          bits = void 0,\n          i = void 0;\n      if (this.outputBits === 0) {\n        if (this.rowsDone) {\n          this.eof = true;\n        }\n        if (this.eof) {\n          return -1;\n        }\n        this.err = false;\n        var code1 = void 0,\n            code2 = void 0,\n            code3 = void 0;\n        if (this.nextLine2D) {\n          for (i = 0; codingLine[i] < columns; ++i) {\n            refLine[i] = codingLine[i];\n          }\n          refLine[i++] = columns;\n          refLine[i] = columns;\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          refPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = this._getTwoDimCode();\n            switch (code1) {\n              case twoDimPass:\n                this._addPixels(refLine[refPos + 1], blackPixels);\n                if (refLine[refPos + 1] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimHoriz:\n                code1 = code2 = 0;\n                if (blackPixels) {\n                  do {\n                    code1 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                } else {\n                  do {\n                    code1 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                }\n                this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n                if (codingLine[this.codingPos] < columns) {\n                  this._addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n                }\n                while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimVertR3:\n                this._addPixels(refLine[refPos] + 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR2:\n                this._addPixels(refLine[refPos] + 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR1:\n                this._addPixels(refLine[refPos] + 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVert0:\n                this._addPixels(refLine[refPos], blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL3:\n                this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL2:\n                this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL1:\n                this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case ccittEOF:\n                this._addPixels(columns, 0);\n                this.eof = true;\n                break;\n              default:\n                (0, _util.info)('bad 2d code');\n                this._addPixels(columns, 0);\n                this.err = true;\n            }\n          }\n        } else {\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = 0;\n            if (blackPixels) {\n              do {\n                code1 += code3 = this._getBlackCode();\n              } while (code3 >= 64);\n            } else {\n              do {\n                code1 += code3 = this._getWhiteCode();\n              } while (code3 >= 64);\n            }\n            this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n            blackPixels ^= 1;\n          }\n        }\n        var gotEOL = false;\n        if (this.byteAlign) {\n          this.inputBits &= ~7;\n        }\n        if (!this.eoblock && this.row === this.rows - 1) {\n          this.rowsDone = true;\n        } else {\n          code1 = this._lookBits(12);\n          if (this.eoline) {\n            while (code1 !== ccittEOF && code1 !== 1) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          } else {\n            while (code1 === 0) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          }\n          if (code1 === 1) {\n            this._eatBits(12);\n            gotEOL = true;\n          } else if (code1 === ccittEOF) {\n            this.eof = true;\n          }\n        }\n        if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n          this.nextLine2D = !this._lookBits(1);\n          this._eatBits(1);\n        }\n        if (this.eoblock && gotEOL && this.byteAlign) {\n          code1 = this._lookBits(12);\n          if (code1 === 1) {\n            this._eatBits(12);\n            if (this.encoding > 0) {\n              this._lookBits(1);\n              this._eatBits(1);\n            }\n            if (this.encoding >= 0) {\n              for (i = 0; i < 4; ++i) {\n                code1 = this._lookBits(12);\n                if (code1 !== 1) {\n                  (0, _util.info)('bad rtc code: ' + code1);\n                }\n                this._eatBits(12);\n                if (this.encoding > 0) {\n                  this._lookBits(1);\n                  this._eatBits(1);\n                }\n              }\n            }\n            this.eof = true;\n          }\n        } else if (this.err && this.eoline) {\n          while (true) {\n            code1 = this._lookBits(13);\n            if (code1 === ccittEOF) {\n              this.eof = true;\n              return -1;\n            }\n            if (code1 >> 1 === 1) {\n              break;\n            }\n            this._eatBits(1);\n          }\n          this._eatBits(12);\n          if (this.encoding > 0) {\n            this._eatBits(1);\n            this.nextLine2D = !(code1 & 1);\n          }\n        }\n        if (codingLine[0] > 0) {\n          this.outputBits = codingLine[this.codingPos = 0];\n        } else {\n          this.outputBits = codingLine[this.codingPos = 1];\n        }\n        this.row++;\n      }\n      var c = void 0;\n      if (this.outputBits >= 8) {\n        c = this.codingPos & 1 ? 0 : 0xFF;\n        this.outputBits -= 8;\n        if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n          this.codingPos++;\n          this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n        }\n      } else {\n        bits = 8;\n        c = 0;\n        do {\n          if (this.outputBits > bits) {\n            c <<= bits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - bits;\n            }\n            this.outputBits -= bits;\n            bits = 0;\n          } else {\n            c <<= this.outputBits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - this.outputBits;\n            }\n            bits -= this.outputBits;\n            this.outputBits = 0;\n            if (codingLine[this.codingPos] < columns) {\n              this.codingPos++;\n              this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n            } else if (bits > 0) {\n              c <<= bits;\n              bits = 0;\n            }\n          }\n        } while (bits);\n      }\n      if (this.black) {\n        c ^= 0xFF;\n      }\n      return c;\n    },\n    _addPixels: function _addPixels(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _addPixelsNeg: function _addPixelsNeg(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      } else if (a1 < codingLine[codingPos]) {\n        if (a1 < 0) {\n          (0, _util.info)('invalid code');\n          this.err = true;\n          a1 = 0;\n        }\n        while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n          --codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _findTableCode: function _findTableCode(start, end, table, limit) {\n      var limitValue = limit || 0;\n      for (var i = start; i <= end; ++i) {\n        var code = this._lookBits(i);\n        if (code === ccittEOF) {\n          return [true, 1, false];\n        }\n        if (i < end) {\n          code <<= end - i;\n        }\n        if (!limitValue || code >= limitValue) {\n          var p = table[code - limitValue];\n          if (p[0] === i) {\n            this._eatBits(i);\n            return [true, p[1], true];\n          }\n        }\n      }\n      return [false, 0, false];\n    },\n    _getTwoDimCode: function _getTwoDimCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(7);\n        p = twoDimTable[code];\n        if (p && p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 7, twoDimTable);\n        if (result[0] && result[2]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('Bad two dim code');\n      return ccittEOF;\n    },\n    _getWhiteCode: function _getWhiteCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(12);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 5 === 0) {\n          p = whiteTable1[code];\n        } else {\n          p = whiteTable2[code >> 3];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 9, whiteTable2);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(11, 12, whiteTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad white code');\n      this._eatBits(1);\n      return 1;\n    },\n    _getBlackCode: function _getBlackCode() {\n      var code = void 0,\n          p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(13);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 7 === 0) {\n          p = blackTable1[code];\n        } else if (code >> 9 === 0 && code >> 7 !== 0) {\n          p = blackTable2[(code >> 1) - 64];\n        } else {\n          p = blackTable3[code >> 7];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(2, 6, blackTable3);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(7, 12, blackTable2, 64);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(10, 13, blackTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad black code');\n      this._eatBits(1);\n      return 1;\n    },\n    _lookBits: function _lookBits(n) {\n      var c = void 0;\n      while (this.inputBits < n) {\n        if ((c = this.source.next()) === -1) {\n          if (this.inputBits === 0) {\n            return ccittEOF;\n          }\n          return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\n        }\n        this.inputBuf = this.inputBuf << 8 | c;\n        this.inputBits += 8;\n      }\n      return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\n    },\n    _eatBits: function _eatBits(n) {\n      if ((this.inputBits -= n) < 0) {\n        this.inputBits = 0;\n      }\n    }\n  };\n  return CCITTFaxDecoder;\n}();\nexports.CCITTFaxDecoder = CCITTFaxDecoder;\n\n/***/ }),\n/* 131 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Stream = undefined;\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar _jbig = __w_pdfjs_require__(132);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar Jbig2Stream = function Jbig2StreamClosure() {\n  function Jbig2Stream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  Jbig2Stream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n    get: function get() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n\n    configurable: true\n  });\n  Jbig2Stream.prototype.ensureBuffer = function (req) {\n    if (this.bufferLength) {\n      return;\n    }\n    var jbig2Image = new _jbig.Jbig2Image();\n    var chunks = [];\n    if ((0, _primitives.isDict)(this.params)) {\n      var globalsStream = this.params.get('JBIG2Globals');\n      if ((0, _primitives.isStream)(globalsStream)) {\n        var globals = globalsStream.getBytes();\n        chunks.push({\n          data: globals,\n          start: 0,\n          end: globals.length\n        });\n      }\n    }\n    chunks.push({\n      data: this.bytes,\n      start: 0,\n      end: this.bytes.length\n    });\n    var data = jbig2Image.parseChunks(chunks);\n    var dataLength = data.length;\n    for (var i = 0; i < dataLength; i++) {\n      data[i] ^= 0xFF;\n    }\n    this.buffer = data;\n    this.bufferLength = dataLength;\n    this.eof = true;\n  };\n  return Jbig2Stream;\n}();\nexports.Jbig2Stream = Jbig2Stream;\n\n/***/ }),\n/* 132 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Image = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _arithmetic_decoder = __w_pdfjs_require__(75);\n\nvar Jbig2Error = function Jbig2ErrorClosure() {\n  function Jbig2Error(msg) {\n    this.message = 'JBIG2 error: ' + msg;\n  }\n  Jbig2Error.prototype = new Error();\n  Jbig2Error.prototype.name = 'Jbig2Error';\n  Jbig2Error.constructor = Jbig2Error;\n  return Jbig2Error;\n}();\nvar Jbig2Image = function Jbig2ImageClosure() {\n  function ContextCache() {}\n  ContextCache.prototype = {\n    getContexts: function getContexts(id) {\n      if (id in this) {\n        return this[id];\n      }\n      return this[id] = new Int8Array(1 << 16);\n    }\n  };\n  function DecodingContext(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n  }\n  DecodingContext.prototype = {\n    get decoder() {\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(this.data, this.start, this.end);\n      return (0, _util.shadow)(this, 'decoder', decoder);\n    },\n    get contextCache() {\n      var cache = new ContextCache();\n      return (0, _util.shadow)(this, 'contextCache', cache);\n    }\n  };\n  function decodeInteger(contextCache, procedure, decoder) {\n    var contexts = contextCache.getContexts(procedure);\n    var prev = 1;\n    function readBits(length) {\n      var v = 0;\n      for (var i = 0; i < length; i++) {\n        var bit = decoder.readBit(contexts, prev);\n        prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n        v = v << 1 | bit;\n      }\n      return v >>> 0;\n    }\n    var sign = readBits(1);\n    var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n    return sign === 0 ? value : value > 0 ? -value : null;\n  }\n  function decodeIAID(contextCache, decoder, codeLength) {\n    var contexts = contextCache.getContexts('IAID');\n    var prev = 1;\n    for (var i = 0; i < codeLength; i++) {\n      var bit = decoder.readBit(contexts, prev);\n      prev = prev << 1 | bit;\n    }\n    if (codeLength < 31) {\n      return prev & (1 << codeLength) - 1;\n    }\n    return prev & 0x7FFFFFFF;\n  }\n  var SegmentTypes = ['SymbolDictionary', null, null, null, 'IntermediateTextRegion', null, 'ImmediateTextRegion', 'ImmediateLosslessTextRegion', null, null, null, null, null, null, null, null, 'PatternDictionary', null, null, null, 'IntermediateHalftoneRegion', null, 'ImmediateHalftoneRegion', 'ImmediateLosslessHalftoneRegion', null, null, null, null, null, null, null, null, null, null, null, null, 'IntermediateGenericRegion', null, 'ImmediateGenericRegion', 'ImmediateLosslessGenericRegion', 'IntermediateGenericRefinementRegion', null, 'ImmediateGenericRefinementRegion', 'ImmediateLosslessGenericRefinementRegion', null, null, null, null, 'PageInformation', 'EndOfPage', 'EndOfStripe', 'EndOfFile', 'Profiles', 'Tables', null, null, null, null, null, null, null, null, 'Extension'];\n  var CodingTemplates = [[{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: 2,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -3,\n    y: -1\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }]];\n  var RefinementTemplates = [{\n    coding: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: -1,\n      y: 1\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }, {\n    coding: [{\n      x: -1,\n      y: -1\n    }, {\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }];\n  var ReusedContexts = [0x9B25, 0x0795, 0x00E5, 0x0195];\n  var RefinementReusedContexts = [0x0020, 0x0008];\n  function decodeBitmapTemplate0(width, height, decodingContext) {\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var contextLabel,\n        i,\n        j,\n        pixel,\n        row,\n        row1,\n        row2,\n        bitmap = [];\n    var OLD_PIXEL_MASK = 0x7BF7;\n    for (i = 0; i < height; i++) {\n      row = bitmap[i] = new Uint8Array(width);\n      row1 = i < 1 ? row : bitmap[i - 1];\n      row2 = i < 2 ? row : bitmap[i - 2];\n      contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n      for (j = 0; j < width; j++) {\n        row[j] = pixel = decoder.readBit(contexts, contextLabel);\n        contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n    if (mmr) {\n      throw new Jbig2Error('MMR encoding is not supported');\n    }\n    if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n      return decodeBitmapTemplate0(width, height, decodingContext);\n    }\n    var useskip = !!skip;\n    var template = CodingTemplates[templateIndex].concat(at);\n    template.sort(function (a, b) {\n      return a.y - b.y || a.x - b.x;\n    });\n    var templateLength = template.length;\n    var templateX = new Int8Array(templateLength);\n    var templateY = new Int8Array(templateLength);\n    var changingTemplateEntries = [];\n    var reuseMask = 0,\n        minX = 0,\n        maxX = 0,\n        minY = 0;\n    var c, k;\n    for (k = 0; k < templateLength; k++) {\n      templateX[k] = template[k].x;\n      templateY[k] = template[k].y;\n      minX = Math.min(minX, template[k].x);\n      maxX = Math.max(maxX, template[k].x);\n      minY = Math.min(minY, template[k].y);\n      if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n        reuseMask |= 1 << templateLength - 1 - k;\n      } else {\n        changingTemplateEntries.push(k);\n      }\n    }\n    var changingEntriesLength = changingTemplateEntries.length;\n    var changingTemplateX = new Int8Array(changingEntriesLength);\n    var changingTemplateY = new Int8Array(changingEntriesLength);\n    var changingTemplateBit = new Uint16Array(changingEntriesLength);\n    for (c = 0; c < changingEntriesLength; c++) {\n      k = changingTemplateEntries[c];\n      changingTemplateX[c] = template[k].x;\n      changingTemplateY[c] = template[k].y;\n      changingTemplateBit[c] = 1 << templateLength - 1 - k;\n    }\n    var sbb_left = -minX;\n    var sbb_top = -minY;\n    var sbb_right = width - maxX;\n    var pseudoPixelContext = ReusedContexts[templateIndex];\n    var row = new Uint8Array(width);\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var ltp = 0,\n        j,\n        i0,\n        j0,\n        contextLabel = 0,\n        bit,\n        shift;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          bitmap.push(row);\n          continue;\n        }\n      }\n      row = new Uint8Array(row);\n      bitmap.push(row);\n      for (j = 0; j < width; j++) {\n        if (useskip && skip[i][j]) {\n          row[j] = 0;\n          continue;\n        }\n        if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n          contextLabel = contextLabel << 1 & reuseMask;\n          for (k = 0; k < changingEntriesLength; k++) {\n            i0 = i + changingTemplateY[k];\n            j0 = j + changingTemplateX[k];\n            bit = bitmap[i0][j0];\n            if (bit) {\n              bit = changingTemplateBit[k];\n              contextLabel |= bit;\n            }\n          }\n        } else {\n          contextLabel = 0;\n          shift = templateLength - 1;\n          for (k = 0; k < templateLength; k++, shift--) {\n            j0 = j + templateX[k];\n            if (j0 >= 0 && j0 < width) {\n              i0 = i + templateY[k];\n              if (i0 >= 0) {\n                bit = bitmap[i0][j0];\n                if (bit) {\n                  contextLabel |= bit << shift;\n                }\n              }\n            }\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n    var codingTemplate = RefinementTemplates[templateIndex].coding;\n    if (templateIndex === 0) {\n      codingTemplate = codingTemplate.concat([at[0]]);\n    }\n    var codingTemplateLength = codingTemplate.length;\n    var codingTemplateX = new Int32Array(codingTemplateLength);\n    var codingTemplateY = new Int32Array(codingTemplateLength);\n    var k;\n    for (k = 0; k < codingTemplateLength; k++) {\n      codingTemplateX[k] = codingTemplate[k].x;\n      codingTemplateY[k] = codingTemplate[k].y;\n    }\n    var referenceTemplate = RefinementTemplates[templateIndex].reference;\n    if (templateIndex === 0) {\n      referenceTemplate = referenceTemplate.concat([at[1]]);\n    }\n    var referenceTemplateLength = referenceTemplate.length;\n    var referenceTemplateX = new Int32Array(referenceTemplateLength);\n    var referenceTemplateY = new Int32Array(referenceTemplateLength);\n    for (k = 0; k < referenceTemplateLength; k++) {\n      referenceTemplateX[k] = referenceTemplate[k].x;\n      referenceTemplateY[k] = referenceTemplate[k].y;\n    }\n    var referenceWidth = referenceBitmap[0].length;\n    var referenceHeight = referenceBitmap.length;\n    var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GR');\n    var ltp = 0;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          throw new Jbig2Error('prediction is not supported');\n        }\n      }\n      var row = new Uint8Array(width);\n      bitmap.push(row);\n      for (var j = 0; j < width; j++) {\n        var i0, j0;\n        var contextLabel = 0;\n        for (k = 0; k < codingTemplateLength; k++) {\n          i0 = i + codingTemplateY[k];\n          j0 = j + codingTemplateX[k];\n          if (i0 < 0 || j0 < 0 || j0 >= width) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | bitmap[i0][j0];\n          }\n        }\n        for (k = 0; k < referenceTemplateLength; k++) {\n          i0 = i + referenceTemplateY[k] - offsetY;\n          j0 = j + referenceTemplateX[k] - offsetX;\n          if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext) {\n    if (huffman) {\n      throw new Jbig2Error('huffman is not supported');\n    }\n    var newSymbols = [];\n    var currentHeight = 0;\n    var symbolCodeLength = (0, _util.log2)(symbols.length + numberOfNewSymbols);\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    while (newSymbols.length < numberOfNewSymbols) {\n      var deltaHeight = decodeInteger(contextCache, 'IADH', decoder);\n      currentHeight += deltaHeight;\n      var currentWidth = 0;\n      while (true) {\n        var deltaWidth = decodeInteger(contextCache, 'IADW', decoder);\n        if (deltaWidth === null) {\n          break;\n        }\n        currentWidth += deltaWidth;\n        var bitmap;\n        if (refinement) {\n          var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n          if (numberOfInstances > 1) {\n            bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext);\n          } else {\n            var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n            var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n            var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n            var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n            bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n          }\n        } else {\n          bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n        }\n        newSymbols.push(bitmap);\n      }\n    }\n    var exportedSymbols = [];\n    var flags = [],\n        currentFlag = false;\n    var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n    while (flags.length < totalSymbolsLength) {\n      var runLength = decodeInteger(contextCache, 'IAEX', decoder);\n      while (runLength--) {\n        flags.push(currentFlag);\n      }\n      currentFlag = !currentFlag;\n    }\n    for (var i = 0, ii = symbols.length; i < ii; i++) {\n      if (flags[i]) {\n        exportedSymbols.push(symbols[i]);\n      }\n    }\n    for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n      if (flags[i]) {\n        exportedSymbols.push(newSymbols[j]);\n      }\n    }\n    return exportedSymbols;\n  }\n  function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext) {\n    if (huffman) {\n      throw new Jbig2Error('huffman is not supported');\n    }\n    var bitmap = [];\n    var i, row;\n    for (i = 0; i < height; i++) {\n      row = new Uint8Array(width);\n      if (defaultPixelValue) {\n        for (var j = 0; j < width; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      bitmap.push(row);\n    }\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var stripT = -decodeInteger(contextCache, 'IADT', decoder);\n    var firstS = 0;\n    i = 0;\n    while (i < numberOfSymbolInstances) {\n      var deltaT = decodeInteger(contextCache, 'IADT', decoder);\n      stripT += deltaT;\n      var deltaFirstS = decodeInteger(contextCache, 'IAFS', decoder);\n      firstS += deltaFirstS;\n      var currentS = firstS;\n      do {\n        var currentT = stripSize === 1 ? 0 : decodeInteger(contextCache, 'IAIT', decoder);\n        var t = stripSize * stripT + currentT;\n        var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n        var applyRefinement = refinement && decodeInteger(contextCache, 'IARI', decoder);\n        var symbolBitmap = inputSymbols[symbolId];\n        var symbolWidth = symbolBitmap[0].length;\n        var symbolHeight = symbolBitmap.length;\n        if (applyRefinement) {\n          var rdw = decodeInteger(contextCache, 'IARDW', decoder);\n          var rdh = decodeInteger(contextCache, 'IARDH', decoder);\n          var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n          var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n          symbolWidth += rdw;\n          symbolHeight += rdh;\n          symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n        }\n        var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n        var offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n        var s2, t2, symbolRow;\n        if (transposed) {\n          for (s2 = 0; s2 < symbolHeight; s2++) {\n            row = bitmap[offsetS + s2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[s2];\n            var maxWidth = Math.min(width - offsetT, symbolWidth);\n            switch (combinationOperator) {\n              case 0:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] |= symbolRow[t2];\n                }\n                break;\n              case 2:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] ^= symbolRow[t2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolHeight - 1;\n        } else {\n          for (t2 = 0; t2 < symbolHeight; t2++) {\n            row = bitmap[offsetT + t2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[t2];\n            switch (combinationOperator) {\n              case 0:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] |= symbolRow[s2];\n                }\n                break;\n              case 2:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] ^= symbolRow[s2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolWidth - 1;\n        }\n        i++;\n        var deltaS = decodeInteger(contextCache, 'IADS', decoder);\n        if (deltaS === null) {\n          break;\n        }\n        currentS += deltaS + dsOffset;\n      } while (true);\n    }\n    return bitmap;\n  }\n  function decodePatternDictionary(mmr, patternWidth, patternHeight, maxPatternIndex, template, decodingContext) {\n    var at = [];\n    at.push({\n      x: -patternWidth,\n      y: 0\n    });\n    if (template === 0) {\n      at.push({\n        x: -3,\n        y: -1\n      });\n      at.push({\n        x: 2,\n        y: -2\n      });\n      at.push({\n        x: -2,\n        y: -2\n      });\n    }\n    var collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n    var collectiveBitmap = decodeBitmap(mmr, collectiveWidth, patternHeight, template, false, null, at, decodingContext);\n    var patterns = [],\n        i = 0,\n        patternBitmap = void 0,\n        xMin = void 0,\n        xMax = void 0,\n        y = void 0;\n    while (i <= maxPatternIndex) {\n      patternBitmap = [];\n      xMin = patternWidth * i;\n      xMax = xMin + patternWidth;\n      for (y = 0; y < patternHeight; y++) {\n        patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n      }\n      patterns.push(patternBitmap);\n      i++;\n    }\n    return patterns;\n  }\n  function decodeHalftoneRegion(mmr, patterns, template, regionWidth, regionHeight, defaultPixelValue, enableSkip, combinationOperator, gridWidth, gridHeight, gridOffsetX, gridOffsetY, gridVectorX, gridVectorY, decodingContext) {\n    var skip = null;\n    if (enableSkip) {\n      throw new Jbig2Error('skip is not supported');\n    }\n    if (combinationOperator !== 0) {\n      throw new Jbig2Error('operator ' + combinationOperator + ' is not supported in halftone region');\n    }\n    var regionBitmap = [];\n    var i = void 0,\n        j = void 0,\n        row = void 0;\n    for (i = 0; i < regionHeight; i++) {\n      row = new Uint8Array(regionWidth);\n      if (defaultPixelValue) {\n        for (j = 0; j < regionWidth; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      regionBitmap.push(row);\n    }\n    var numberOfPatterns = patterns.length;\n    var pattern0 = patterns[0];\n    var patternWidth = pattern0[0].length,\n        patternHeight = pattern0.length;\n    var bitsPerValue = (0, _util.log2)(numberOfPatterns);\n    var at = [];\n    at.push({\n      x: template <= 1 ? 3 : 2,\n      y: -1\n    });\n    if (template === 0) {\n      at.push({\n        x: -3,\n        y: -1\n      });\n      at.push({\n        x: 2,\n        y: -2\n      });\n      at.push({\n        x: -2,\n        y: -2\n      });\n    }\n    var grayScaleBitPlanes = [];\n    for (i = bitsPerValue - 1; i >= 0; i--) {\n      grayScaleBitPlanes[i] = decodeBitmap(mmr, gridWidth, gridHeight, template, false, skip, at, decodingContext);\n    }\n    var mg = void 0,\n        ng = void 0,\n        bit = void 0,\n        patternIndex = void 0,\n        patternBitmap = void 0,\n        x = void 0,\n        y = void 0,\n        patternRow = void 0,\n        regionRow = void 0;\n    for (mg = 0; mg < gridHeight; mg++) {\n      for (ng = 0; ng < gridWidth; ng++) {\n        bit = 0;\n        patternIndex = 0;\n        for (j = bitsPerValue - 1; j >= 0; j--) {\n          bit = grayScaleBitPlanes[j][mg][ng] ^ bit;\n          patternIndex |= bit << j;\n        }\n        patternBitmap = patterns[patternIndex];\n        x = gridOffsetX + mg * gridVectorY + ng * gridVectorX >> 8;\n        y = gridOffsetY + mg * gridVectorX - ng * gridVectorY >> 8;\n        if (x >= 0 && x + patternWidth <= regionWidth && y >= 0 && y + patternHeight <= regionHeight) {\n          for (i = 0; i < patternHeight; i++) {\n            regionRow = regionBitmap[y + i];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionRow[x + j] |= patternRow[j];\n            }\n          }\n        } else {\n          var regionX = void 0,\n              regionY = void 0;\n          for (i = 0; i < patternHeight; i++) {\n            regionY = y + i;\n            if (regionY < 0 || regionY >= regionHeight) {\n              continue;\n            }\n            regionRow = regionBitmap[regionY];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionX = x + j;\n              if (regionX >= 0 && regionX < regionWidth) {\n                regionRow[regionX] |= patternRow[j];\n              }\n            }\n          }\n        }\n      }\n    }\n    return regionBitmap;\n  }\n  function readSegmentHeader(data, start) {\n    var segmentHeader = {};\n    segmentHeader.number = (0, _util.readUint32)(data, start);\n    var flags = data[start + 4];\n    var segmentType = flags & 0x3F;\n    if (!SegmentTypes[segmentType]) {\n      throw new Jbig2Error('invalid segment type: ' + segmentType);\n    }\n    segmentHeader.type = segmentType;\n    segmentHeader.typeName = SegmentTypes[segmentType];\n    segmentHeader.deferredNonRetain = !!(flags & 0x80);\n    var pageAssociationFieldSize = !!(flags & 0x40);\n    var referredFlags = data[start + 5];\n    var referredToCount = referredFlags >> 5 & 7;\n    var retainBits = [referredFlags & 31];\n    var position = start + 6;\n    if (referredFlags === 7) {\n      referredToCount = (0, _util.readUint32)(data, position - 1) & 0x1FFFFFFF;\n      position += 3;\n      var bytes = referredToCount + 7 >> 3;\n      retainBits[0] = data[position++];\n      while (--bytes > 0) {\n        retainBits.push(data[position++]);\n      }\n    } else if (referredFlags === 5 || referredFlags === 6) {\n      throw new Jbig2Error('invalid referred-to flags');\n    }\n    segmentHeader.retainBits = retainBits;\n    var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n    var referredTo = [];\n    var i, ii;\n    for (i = 0; i < referredToCount; i++) {\n      var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? (0, _util.readUint16)(data, position) : (0, _util.readUint32)(data, position);\n      referredTo.push(number);\n      position += referredToSegmentNumberSize;\n    }\n    segmentHeader.referredTo = referredTo;\n    if (!pageAssociationFieldSize) {\n      segmentHeader.pageAssociation = data[position++];\n    } else {\n      segmentHeader.pageAssociation = (0, _util.readUint32)(data, position);\n      position += 4;\n    }\n    segmentHeader.length = (0, _util.readUint32)(data, position);\n    position += 4;\n    if (segmentHeader.length === 0xFFFFFFFF) {\n      if (segmentType === 38) {\n        var genericRegionInfo = readRegionSegmentInformation(data, position);\n        var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n        var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n        var searchPatternLength = 6;\n        var searchPattern = new Uint8Array(searchPatternLength);\n        if (!genericRegionMmr) {\n          searchPattern[0] = 0xFF;\n          searchPattern[1] = 0xAC;\n        }\n        searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\n        searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\n        searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\n        searchPattern[5] = genericRegionInfo.height & 0xFF;\n        for (i = position, ii = data.length; i < ii; i++) {\n          var j = 0;\n          while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n            j++;\n          }\n          if (j === searchPatternLength) {\n            segmentHeader.length = i + searchPatternLength;\n            break;\n          }\n        }\n        if (segmentHeader.length === 0xFFFFFFFF) {\n          throw new Jbig2Error('segment end was not found');\n        }\n      } else {\n        throw new Jbig2Error('invalid unknown segment length');\n      }\n    }\n    segmentHeader.headerEnd = position;\n    return segmentHeader;\n  }\n  function readSegments(header, data, start, end) {\n    var segments = [];\n    var position = start;\n    while (position < end) {\n      var segmentHeader = readSegmentHeader(data, position);\n      position = segmentHeader.headerEnd;\n      var segment = {\n        header: segmentHeader,\n        data: data\n      };\n      if (!header.randomAccess) {\n        segment.start = position;\n        position += segmentHeader.length;\n        segment.end = position;\n      }\n      segments.push(segment);\n      if (segmentHeader.type === 51) {\n        break;\n      }\n    }\n    if (header.randomAccess) {\n      for (var i = 0, ii = segments.length; i < ii; i++) {\n        segments[i].start = position;\n        position += segments[i].header.length;\n        segments[i].end = position;\n      }\n    }\n    return segments;\n  }\n  function readRegionSegmentInformation(data, start) {\n    return {\n      width: (0, _util.readUint32)(data, start),\n      height: (0, _util.readUint32)(data, start + 4),\n      x: (0, _util.readUint32)(data, start + 8),\n      y: (0, _util.readUint32)(data, start + 12),\n      combinationOperator: data[start + 16] & 7\n    };\n  }\n  var RegionSegmentInformationFieldLength = 17;\n  function processSegment(segment, visitor) {\n    var header = segment.header;\n    var data = segment.data,\n        position = segment.start,\n        end = segment.end;\n    var args, at, i, atLength;\n    switch (header.type) {\n      case 0:\n        var dictionary = {};\n        var dictionaryFlags = (0, _util.readUint16)(data, position);\n        dictionary.huffman = !!(dictionaryFlags & 1);\n        dictionary.refinement = !!(dictionaryFlags & 2);\n        dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n        dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n        dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n        dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n        dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n        dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n        dictionary.template = dictionaryFlags >> 10 & 3;\n        dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n        position += 2;\n        if (!dictionary.huffman) {\n          atLength = dictionary.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.at = at;\n        }\n        if (dictionary.refinement && !dictionary.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.refinementAt = at;\n        }\n        dictionary.numberOfExportedSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        dictionary.numberOfNewSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [dictionary, header.number, header.referredTo, data, position, end];\n        break;\n      case 6:\n      case 7:\n        var textRegion = {};\n        textRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var textRegionSegmentFlags = (0, _util.readUint16)(data, position);\n        position += 2;\n        textRegion.huffman = !!(textRegionSegmentFlags & 1);\n        textRegion.refinement = !!(textRegionSegmentFlags & 2);\n        textRegion.stripSize = 1 << (textRegionSegmentFlags >> 2 & 3);\n        textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n        textRegion.transposed = !!(textRegionSegmentFlags & 64);\n        textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n        textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n        textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n        textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n        if (textRegion.huffman) {\n          var textRegionHuffmanFlags = (0, _util.readUint16)(data, position);\n          position += 2;\n          textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n          textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n          textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n          textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n          textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n          textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n          textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n          textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 14);\n        }\n        if (textRegion.refinement && !textRegion.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          textRegion.refinementAt = at;\n        }\n        textRegion.numberOfSymbolInstances = (0, _util.readUint32)(data, position);\n        position += 4;\n        if (textRegion.huffman) {\n          throw new Jbig2Error('huffman is not supported');\n        }\n        args = [textRegion, header.referredTo, data, position, end];\n        break;\n      case 16:\n        var patternDictionary = {};\n        var patternDictionaryFlags = data[position++];\n        patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n        patternDictionary.template = patternDictionaryFlags >> 1 & 3;\n        patternDictionary.patternWidth = data[position++];\n        patternDictionary.patternHeight = data[position++];\n        patternDictionary.maxPatternIndex = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [patternDictionary, header.number, data, position, end];\n        break;\n      case 22:\n      case 23:\n        var halftoneRegion = {};\n        halftoneRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var halftoneRegionFlags = data[position++];\n        halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n        halftoneRegion.template = halftoneRegionFlags >> 1 & 3;\n        halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n        halftoneRegion.combinationOperator = halftoneRegionFlags >> 4 & 7;\n        halftoneRegion.defaultPixelValue = halftoneRegionFlags >> 7 & 1;\n        halftoneRegion.gridWidth = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridHeight = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridOffsetX = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridOffsetY = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridVectorX = (0, _util.readUint16)(data, position);\n        position += 2;\n        halftoneRegion.gridVectorY = (0, _util.readUint16)(data, position);\n        position += 2;\n        args = [halftoneRegion, header.referredTo, data, position, end];\n        break;\n      case 38:\n      case 39:\n        var genericRegion = {};\n        genericRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var genericRegionSegmentFlags = data[position++];\n        genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n        genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n        genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n        if (!genericRegion.mmr) {\n          atLength = genericRegion.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          genericRegion.at = at;\n        }\n        args = [genericRegion, data, position, end];\n        break;\n      case 48:\n        var pageInfo = {\n          width: (0, _util.readUint32)(data, position),\n          height: (0, _util.readUint32)(data, position + 4),\n          resolutionX: (0, _util.readUint32)(data, position + 8),\n          resolutionY: (0, _util.readUint32)(data, position + 12)\n        };\n        if (pageInfo.height === 0xFFFFFFFF) {\n          delete pageInfo.height;\n        }\n        var pageSegmentFlags = data[position + 16];\n        (0, _util.readUint16)(data, position + 17);\n        pageInfo.lossless = !!(pageSegmentFlags & 1);\n        pageInfo.refinement = !!(pageSegmentFlags & 2);\n        pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n        pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n        pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n        pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n        args = [pageInfo];\n        break;\n      case 49:\n        break;\n      case 50:\n        break;\n      case 51:\n        break;\n      case 62:\n        break;\n      default:\n        throw new Jbig2Error('segment type ' + header.typeName + '(' + header.type + ')' + ' is not implemented');\n    }\n    var callbackName = 'on' + header.typeName;\n    if (callbackName in visitor) {\n      visitor[callbackName].apply(visitor, args);\n    }\n  }\n  function processSegments(segments, visitor) {\n    for (var i = 0, ii = segments.length; i < ii; i++) {\n      processSegment(segments[i], visitor);\n    }\n  }\n  function parseJbig2(data, start, end) {\n    var position = start;\n    if (data[position] !== 0x97 || data[position + 1] !== 0x4A || data[position + 2] !== 0x42 || data[position + 3] !== 0x32 || data[position + 4] !== 0x0D || data[position + 5] !== 0x0A || data[position + 6] !== 0x1A || data[position + 7] !== 0x0A) {\n      throw new Jbig2Error('invalid header');\n    }\n    var header = {};\n    position += 8;\n    var flags = data[position++];\n    header.randomAccess = !(flags & 1);\n    if (!(flags & 2)) {\n      header.numberOfPages = (0, _util.readUint32)(data, position);\n      position += 4;\n    }\n    readSegments(header, data, position, end);\n    throw new Error('Not implemented');\n  }\n  function parseJbig2Chunks(chunks) {\n    var visitor = new SimpleSegmentVisitor();\n    for (var i = 0, ii = chunks.length; i < ii; i++) {\n      var chunk = chunks[i];\n      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n      processSegments(segments, visitor);\n    }\n    return visitor.buffer;\n  }\n  function SimpleSegmentVisitor() {}\n  SimpleSegmentVisitor.prototype = {\n    onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n      this.currentPageInfo = info;\n      var rowSize = info.width + 7 >> 3;\n      var buffer = new Uint8ClampedArray(rowSize * info.height);\n      if (info.defaultPixelValue) {\n        for (var i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = 0xFF;\n        }\n      }\n      this.buffer = buffer;\n    },\n    drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n      var pageInfo = this.currentPageInfo;\n      var width = regionInfo.width,\n          height = regionInfo.height;\n      var rowSize = pageInfo.width + 7 >> 3;\n      var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n      var buffer = this.buffer;\n      var mask0 = 128 >> (regionInfo.x & 7);\n      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n      var i, j, mask, offset;\n      switch (combinationOperator) {\n        case 0:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] |= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        case 2:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] ^= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        default:\n          throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n      }\n    },\n    onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n      this.onImmediateGenericRegion.apply(this, arguments);\n    },\n    onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n      var huffmanTables;\n      if (dictionary.huffman) {\n        throw new Jbig2Error('huffman is not supported');\n      }\n      var symbols = this.symbols;\n      if (!symbols) {\n        this.symbols = symbols = {};\n      }\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext);\n    },\n    onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n      var regionInfo = region.info;\n      var huffmanTables;\n      var symbols = this.symbols;\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n      }\n      var symbolCodeLength = (0, _util.log2)(inputSymbols.length);\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n      this.onImmediateTextRegion.apply(this, arguments);\n    },\n    onPatternDictionary: function onPatternDictionary(dictionary, currentSegment, data, start, end) {\n      var patterns = this.patterns;\n      if (!patterns) {\n        this.patterns = patterns = {};\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      patterns[currentSegment] = decodePatternDictionary(dictionary.mmr, dictionary.patternWidth, dictionary.patternHeight, dictionary.maxPatternIndex, dictionary.template, decodingContext);\n    },\n    onImmediateHalftoneRegion: function onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n      var patterns = this.patterns[referredSegments[0]];\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeHalftoneRegion(region.mmr, patterns, region.template, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.enableSkip, region.combinationOperator, region.gridWidth, region.gridHeight, region.gridOffsetX, region.gridOffsetY, region.gridVectorX, region.gridVectorY, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessHalftoneRegion: function onImmediateLosslessHalftoneRegion() {\n      this.onImmediateHalftoneRegion.apply(this, arguments);\n    }\n  };\n  function Jbig2Image() {}\n  Jbig2Image.prototype = {\n    parseChunks: function Jbig2Image_parseChunks(chunks) {\n      return parseJbig2Chunks(chunks);\n    }\n  };\n  return Jbig2Image;\n}();\nexports.Jbig2Image = Jbig2Image;\n\n/***/ }),\n/* 133 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CMapFactory = exports.IdentityCMap = exports.CMap = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _parser = __w_pdfjs_require__(34);\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar BUILT_IN_CMAPS = ['Adobe-GB1-UCS2', 'Adobe-CNS1-UCS2', 'Adobe-Japan1-UCS2', 'Adobe-Korea1-UCS2', '78-EUC-H', '78-EUC-V', '78-H', '78-RKSJ-H', '78-RKSJ-V', '78-V', '78ms-RKSJ-H', '78ms-RKSJ-V', '83pv-RKSJ-H', '90ms-RKSJ-H', '90ms-RKSJ-V', '90msp-RKSJ-H', '90msp-RKSJ-V', '90pv-RKSJ-H', '90pv-RKSJ-V', 'Add-H', 'Add-RKSJ-H', 'Add-RKSJ-V', 'Add-V', 'Adobe-CNS1-0', 'Adobe-CNS1-1', 'Adobe-CNS1-2', 'Adobe-CNS1-3', 'Adobe-CNS1-4', 'Adobe-CNS1-5', 'Adobe-CNS1-6', 'Adobe-GB1-0', 'Adobe-GB1-1', 'Adobe-GB1-2', 'Adobe-GB1-3', 'Adobe-GB1-4', 'Adobe-GB1-5', 'Adobe-Japan1-0', 'Adobe-Japan1-1', 'Adobe-Japan1-2', 'Adobe-Japan1-3', 'Adobe-Japan1-4', 'Adobe-Japan1-5', 'Adobe-Japan1-6', 'Adobe-Korea1-0', 'Adobe-Korea1-1', 'Adobe-Korea1-2', 'B5-H', 'B5-V', 'B5pc-H', 'B5pc-V', 'CNS-EUC-H', 'CNS-EUC-V', 'CNS1-H', 'CNS1-V', 'CNS2-H', 'CNS2-V', 'ETHK-B5-H', 'ETHK-B5-V', 'ETen-B5-H', 'ETen-B5-V', 'ETenms-B5-H', 'ETenms-B5-V', 'EUC-H', 'EUC-V', 'Ext-H', 'Ext-RKSJ-H', 'Ext-RKSJ-V', 'Ext-V', 'GB-EUC-H', 'GB-EUC-V', 'GB-H', 'GB-V', 'GBK-EUC-H', 'GBK-EUC-V', 'GBK2K-H', 'GBK2K-V', 'GBKp-EUC-H', 'GBKp-EUC-V', 'GBT-EUC-H', 'GBT-EUC-V', 'GBT-H', 'GBT-V', 'GBTpc-EUC-H', 'GBTpc-EUC-V', 'GBpc-EUC-H', 'GBpc-EUC-V', 'H', 'HKdla-B5-H', 'HKdla-B5-V', 'HKdlb-B5-H', 'HKdlb-B5-V', 'HKgccs-B5-H', 'HKgccs-B5-V', 'HKm314-B5-H', 'HKm314-B5-V', 'HKm471-B5-H', 'HKm471-B5-V', 'HKscs-B5-H', 'HKscs-B5-V', 'Hankaku', 'Hiragana', 'KSC-EUC-H', 'KSC-EUC-V', 'KSC-H', 'KSC-Johab-H', 'KSC-Johab-V', 'KSC-V', 'KSCms-UHC-H', 'KSCms-UHC-HW-H', 'KSCms-UHC-HW-V', 'KSCms-UHC-V', 'KSCpc-EUC-H', 'KSCpc-EUC-V', 'Katakana', 'NWP-H', 'NWP-V', 'RKSJ-H', 'RKSJ-V', 'Roman', 'UniCNS-UCS2-H', 'UniCNS-UCS2-V', 'UniCNS-UTF16-H', 'UniCNS-UTF16-V', 'UniCNS-UTF32-H', 'UniCNS-UTF32-V', 'UniCNS-UTF8-H', 'UniCNS-UTF8-V', 'UniGB-UCS2-H', 'UniGB-UCS2-V', 'UniGB-UTF16-H', 'UniGB-UTF16-V', 'UniGB-UTF32-H', 'UniGB-UTF32-V', 'UniGB-UTF8-H', 'UniGB-UTF8-V', 'UniJIS-UCS2-H', 'UniJIS-UCS2-HW-H', 'UniJIS-UCS2-HW-V', 'UniJIS-UCS2-V', 'UniJIS-UTF16-H', 'UniJIS-UTF16-V', 'UniJIS-UTF32-H', 'UniJIS-UTF32-V', 'UniJIS-UTF8-H', 'UniJIS-UTF8-V', 'UniJIS2004-UTF16-H', 'UniJIS2004-UTF16-V', 'UniJIS2004-UTF32-H', 'UniJIS2004-UTF32-V', 'UniJIS2004-UTF8-H', 'UniJIS2004-UTF8-V', 'UniJISPro-UCS2-HW-V', 'UniJISPro-UCS2-V', 'UniJISPro-UTF8-V', 'UniJISX0213-UTF32-H', 'UniJISX0213-UTF32-V', 'UniJISX02132004-UTF32-H', 'UniJISX02132004-UTF32-V', 'UniKS-UCS2-H', 'UniKS-UCS2-V', 'UniKS-UTF16-H', 'UniKS-UTF16-V', 'UniKS-UTF32-H', 'UniKS-UTF32-V', 'UniKS-UTF8-H', 'UniKS-UTF8-V', 'V', 'WP-Symbol'];\nvar CMap = function CMapClosure() {\n  function CMap(builtInCMap) {\n    this.codespaceRanges = [[], [], [], []];\n    this.numCodespaceRanges = 0;\n    this._map = [];\n    this.name = '';\n    this.vertical = false;\n    this.useCMap = null;\n    this.builtInCMap = builtInCMap;\n  }\n  CMap.prototype = {\n    addCodespaceRange: function addCodespaceRange(n, low, high) {\n      this.codespaceRanges[n - 1].push(low, high);\n      this.numCodespaceRanges++;\n    },\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      while (low <= high) {\n        this._map[low++] = dstLow++;\n      }\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      var lastByte = dstLow.length - 1;\n      while (low <= high) {\n        this._map[low++] = dstLow;\n        dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n      }\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      var i = 0,\n          ii = array.length;\n      while (low <= high && i < ii) {\n        this._map[low] = array[i++];\n        ++low;\n      }\n    },\n    mapOne: function mapOne(src, dst) {\n      this._map[src] = dst;\n    },\n    lookup: function lookup(code) {\n      return this._map[code];\n    },\n    contains: function contains(code) {\n      return this._map[code] !== undefined;\n    },\n    forEach: function forEach(callback) {\n      var map = this._map;\n      var length = map.length;\n      if (length <= 0x10000) {\n        for (var i = 0; i < length; i++) {\n          if (map[i] !== undefined) {\n            callback(i, map[i]);\n          }\n        }\n      } else {\n        for (var _i in map) {\n          callback(_i, map[_i]);\n        }\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    getMap: function getMap() {\n      return this._map;\n    },\n    readCharCode: function readCharCode(str, offset, out) {\n      var c = 0;\n      var codespaceRanges = this.codespaceRanges;\n      var codespaceRangesLen = this.codespaceRanges.length;\n      for (var n = 0; n < codespaceRangesLen; n++) {\n        c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n        var codespaceRange = codespaceRanges[n];\n        for (var k = 0, kk = codespaceRange.length; k < kk;) {\n          var low = codespaceRange[k++];\n          var high = codespaceRange[k++];\n          if (c >= low && c <= high) {\n            out.charcode = c;\n            out.length = n + 1;\n            return;\n          }\n        }\n      }\n      out.charcode = 0;\n      out.length = 1;\n    },\n\n    get length() {\n      return this._map.length;\n    },\n    get isIdentityCMap() {\n      if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\n        return false;\n      }\n      if (this._map.length !== 0x10000) {\n        return false;\n      }\n      for (var i = 0; i < 0x10000; i++) {\n        if (this._map[i] !== i) {\n          return false;\n        }\n      }\n      return true;\n    }\n  };\n  return CMap;\n}();\nvar IdentityCMap = function IdentityCMapClosure() {\n  function IdentityCMap(vertical, n) {\n    CMap.call(this);\n    this.vertical = vertical;\n    this.addCodespaceRange(n, 0, 0xffff);\n  }\n  _util.Util.inherit(IdentityCMap, CMap, {});\n  IdentityCMap.prototype = {\n    addCodespaceRange: CMap.prototype.addCodespaceRange,\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      throw new Error('should not call mapCidRange');\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      throw new Error('should not call mapBfRange');\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      throw new Error('should not call mapBfRangeToArray');\n    },\n    mapOne: function mapOne(src, dst) {\n      throw new Error('should not call mapCidOne');\n    },\n    lookup: function lookup(code) {\n      return Number.isInteger(code) && code <= 0xffff ? code : undefined;\n    },\n    contains: function contains(code) {\n      return Number.isInteger(code) && code <= 0xffff;\n    },\n    forEach: function forEach(callback) {\n      for (var i = 0; i <= 0xffff; i++) {\n        callback(i, i);\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      return Number.isInteger(value) && value <= 0xffff ? value : -1;\n    },\n    getMap: function getMap() {\n      var map = new Array(0x10000);\n      for (var i = 0; i <= 0xffff; i++) {\n        map[i] = i;\n      }\n      return map;\n    },\n\n    readCharCode: CMap.prototype.readCharCode,\n    get length() {\n      return 0x10000;\n    },\n    get isIdentityCMap() {\n      throw new Error('should not access .isIdentityCMap');\n    }\n  };\n  return IdentityCMap;\n}();\nvar BinaryCMapReader = function BinaryCMapReaderClosure() {\n  function hexToInt(a, size) {\n    var n = 0;\n    for (var i = 0; i <= size; i++) {\n      n = n << 8 | a[i];\n    }\n    return n >>> 0;\n  }\n  function hexToStr(a, size) {\n    if (size === 1) {\n      return String.fromCharCode(a[0], a[1]);\n    }\n    if (size === 3) {\n      return String.fromCharCode(a[0], a[1], a[2], a[3]);\n    }\n    return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n  }\n  function addHex(a, b, size) {\n    var c = 0;\n    for (var i = size; i >= 0; i--) {\n      c += a[i] + b[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  function incHex(a, size) {\n    var c = 1;\n    for (var i = size; i >= 0 && c > 0; i--) {\n      c += a[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  var MAX_NUM_SIZE = 16;\n  var MAX_ENCODED_NUM_SIZE = 19;\n  function BinaryCMapStream(data) {\n    this.buffer = data;\n    this.pos = 0;\n    this.end = data.length;\n    this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n  }\n  BinaryCMapStream.prototype = {\n    readByte: function readByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.buffer[this.pos++];\n    },\n    readNumber: function readNumber() {\n      var n = 0;\n      var last;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        n = n << 7 | b & 0x7F;\n      } while (!last);\n      return n;\n    },\n    readSigned: function readSigned() {\n      var n = this.readNumber();\n      return n & 1 ? ~(n >>> 1) : n >>> 1;\n    },\n    readHex: function readHex(num, size) {\n      num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n      this.pos += size + 1;\n    },\n    readHexNumber: function readHexNumber(num, size) {\n      var last;\n      var stack = this.tmpBuf,\n          sp = 0;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        stack[sp++] = b & 0x7F;\n      } while (!last);\n      var i = size,\n          buffer = 0,\n          bufferSize = 0;\n      while (i >= 0) {\n        while (bufferSize < 8 && stack.length > 0) {\n          buffer = stack[--sp] << bufferSize | buffer;\n          bufferSize += 7;\n        }\n        num[i] = buffer & 255;\n        i--;\n        buffer >>= 8;\n        bufferSize -= 8;\n      }\n    },\n    readHexSigned: function readHexSigned(num, size) {\n      this.readHexNumber(num, size);\n      var sign = num[size] & 1 ? 255 : 0;\n      var c = 0;\n      for (var i = 0; i <= size; i++) {\n        c = (c & 1) << 8 | num[i];\n        num[i] = c >> 1 ^ sign;\n      }\n    },\n    readString: function readString() {\n      var len = this.readNumber();\n      var s = '';\n      for (var i = 0; i < len; i++) {\n        s += String.fromCharCode(this.readNumber());\n      }\n      return s;\n    }\n  };\n  function processBinaryCMap(data, cMap, extend) {\n    return new Promise(function (resolve, reject) {\n      var stream = new BinaryCMapStream(data);\n      var header = stream.readByte();\n      cMap.vertical = !!(header & 1);\n      var useCMap = null;\n      var start = new Uint8Array(MAX_NUM_SIZE);\n      var end = new Uint8Array(MAX_NUM_SIZE);\n      var char = new Uint8Array(MAX_NUM_SIZE);\n      var charCode = new Uint8Array(MAX_NUM_SIZE);\n      var tmp = new Uint8Array(MAX_NUM_SIZE);\n      var code;\n      var b;\n      while ((b = stream.readByte()) >= 0) {\n        var type = b >> 5;\n        if (type === 7) {\n          switch (b & 0x1F) {\n            case 0:\n              stream.readString();\n              break;\n            case 1:\n              useCMap = stream.readString();\n              break;\n          }\n          continue;\n        }\n        var sequence = !!(b & 0x10);\n        var dataSize = b & 15;\n        if (dataSize + 1 > MAX_NUM_SIZE) {\n          throw new Error('processBinaryCMap: Invalid dataSize.');\n        }\n        var ucs2DataSize = 1;\n        var subitemsCount = stream.readNumber();\n        var i;\n        switch (type) {\n          case 0:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            }\n            break;\n          case 1:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            code = stream.readNumber();\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              code = stream.readNumber();\n            }\n            break;\n          case 2:\n            stream.readHex(char, dataSize);\n            code = stream.readNumber();\n            cMap.mapOne(hexToInt(char, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, dataSize);\n                addHex(char, tmp, dataSize);\n              }\n              code = stream.readSigned() + (code + 1);\n              cMap.mapOne(hexToInt(char, dataSize), code);\n            }\n            break;\n          case 3:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            code = stream.readNumber();\n            cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, dataSize);\n                addHex(start, end, dataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              code = stream.readNumber();\n              cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            }\n            break;\n          case 4:\n            stream.readHex(char, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, ucs2DataSize);\n                addHex(char, tmp, ucs2DataSize);\n              }\n              incHex(charCode, dataSize);\n              stream.readHexSigned(tmp, dataSize);\n              addHex(charCode, tmp, dataSize);\n              cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          case 5:\n            stream.readHex(start, ucs2DataSize);\n            stream.readHexNumber(end, ucs2DataSize);\n            addHex(end, start, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, ucs2DataSize);\n                addHex(start, end, ucs2DataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, ucs2DataSize);\n              addHex(end, start, ucs2DataSize);\n              stream.readHex(charCode, dataSize);\n              cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          default:\n            reject(new Error('processBinaryCMap: Unknown type: ' + type));\n            return;\n        }\n      }\n      if (useCMap) {\n        resolve(extend(useCMap));\n        return;\n      }\n      resolve(cMap);\n    });\n  }\n  function BinaryCMapReader() {}\n  BinaryCMapReader.prototype = { process: processBinaryCMap };\n  return BinaryCMapReader;\n}();\nvar CMapFactory = function CMapFactoryClosure() {\n  function strToInt(str) {\n    var a = 0;\n    for (var i = 0; i < str.length; i++) {\n      a = a << 8 | str.charCodeAt(i);\n    }\n    return a >>> 0;\n  }\n  function expectString(obj) {\n    if (!(0, _util.isString)(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected string.');\n    }\n  }\n  function expectInt(obj) {\n    if (!Number.isInteger(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected int.');\n    }\n  }\n  function parseBfChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseBfRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      if (Number.isInteger(obj) || (0, _util.isString)(obj)) {\n        var dstLow = Number.isInteger(obj) ? String.fromCharCode(obj) : obj;\n        cMap.mapBfRange(low, high, dstLow);\n      } else if ((0, _primitives.isCmd)(obj, '[')) {\n        obj = lexer.getObj();\n        var array = [];\n        while (!(0, _primitives.isCmd)(obj, ']') && !(0, _primitives.isEOF)(obj)) {\n          array.push(obj);\n          obj = lexer.getObj();\n        }\n        cMap.mapBfRangeToArray(low, high, array);\n      } else {\n        break;\n      }\n    }\n    throw new _util.FormatError('Invalid bf range.');\n  }\n  function parseCidChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseCidRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dstLow = obj;\n      cMap.mapCidRange(low, high, dstLow);\n    }\n  }\n  function parseCodespaceRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcodespacerange')) {\n        return;\n      }\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var high = strToInt(obj);\n      cMap.addCodespaceRange(obj.length, low, high);\n    }\n    throw new _util.FormatError('Invalid codespace range.');\n  }\n  function parseWMode(cMap, lexer) {\n    var obj = lexer.getObj();\n    if (Number.isInteger(obj)) {\n      cMap.vertical = !!obj;\n    }\n  }\n  function parseCMapName(cMap, lexer) {\n    var obj = lexer.getObj();\n    if ((0, _primitives.isName)(obj) && (0, _util.isString)(obj.name)) {\n      cMap.name = obj.name;\n    }\n  }\n  function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\n    var previous;\n    var embededUseCMap;\n    objLoop: while (true) {\n      try {\n        var obj = lexer.getObj();\n        if ((0, _primitives.isEOF)(obj)) {\n          break;\n        } else if ((0, _primitives.isName)(obj)) {\n          if (obj.name === 'WMode') {\n            parseWMode(cMap, lexer);\n          } else if (obj.name === 'CMapName') {\n            parseCMapName(cMap, lexer);\n          }\n          previous = obj;\n        } else if ((0, _primitives.isCmd)(obj)) {\n          switch (obj.cmd) {\n            case 'endcmap':\n              break objLoop;\n            case 'usecmap':\n              if ((0, _primitives.isName)(previous)) {\n                embededUseCMap = previous.name;\n              }\n              break;\n            case 'begincodespacerange':\n              parseCodespaceRange(cMap, lexer);\n              break;\n            case 'beginbfchar':\n              parseBfChar(cMap, lexer);\n              break;\n            case 'begincidchar':\n              parseCidChar(cMap, lexer);\n              break;\n            case 'beginbfrange':\n              parseBfRange(cMap, lexer);\n              break;\n            case 'begincidrange':\n              parseCidRange(cMap, lexer);\n              break;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid cMap data: ' + ex);\n        continue;\n      }\n    }\n    if (!useCMap && embededUseCMap) {\n      useCMap = embededUseCMap;\n    }\n    if (useCMap) {\n      return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n    }\n    return Promise.resolve(cMap);\n  }\n  function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\n    return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\n      cMap.useCMap = newCMap;\n      if (cMap.numCodespaceRanges === 0) {\n        var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n        for (var i = 0; i < useCodespaceRanges.length; i++) {\n          cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n        }\n        cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n      }\n      cMap.useCMap.forEach(function (key, value) {\n        if (!cMap.contains(key)) {\n          cMap.mapOne(key, cMap.useCMap.lookup(key));\n        }\n      });\n      return cMap;\n    });\n  }\n  function createBuiltInCMap(name, fetchBuiltInCMap) {\n    if (name === 'Identity-H') {\n      return Promise.resolve(new IdentityCMap(false, 2));\n    } else if (name === 'Identity-V') {\n      return Promise.resolve(new IdentityCMap(true, 2));\n    }\n    if (BUILT_IN_CMAPS.indexOf(name) === -1) {\n      return Promise.reject(new Error('Unknown CMap name: ' + name));\n    }\n    if (!fetchBuiltInCMap) {\n      return Promise.reject(new Error('Built-in CMap parameters are not provided.'));\n    }\n    return fetchBuiltInCMap(name).then(function (data) {\n      var cMapData = data.cMapData,\n          compressionType = data.compressionType;\n      var cMap = new CMap(true);\n      if (compressionType === _util.CMapCompressionType.BINARY) {\n        return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\n          return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n        });\n      }\n      if (compressionType === _util.CMapCompressionType.NONE) {\n        var lexer = new _parser.Lexer(new _stream.Stream(cMapData));\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\n      }\n      return Promise.reject(new Error('TODO: Only BINARY/NONE CMap compression is currently supported.'));\n    });\n  }\n  return {\n    create: function create(params) {\n      var encoding = params.encoding;\n      var fetchBuiltInCMap = params.fetchBuiltInCMap;\n      var useCMap = params.useCMap;\n      if ((0, _primitives.isName)(encoding)) {\n        return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\n      } else if ((0, _primitives.isStream)(encoding)) {\n        var cMap = new CMap();\n        var lexer = new _parser.Lexer(encoding);\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\n          if (parsedCMap.isIdentityCMap) {\n            return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\n          }\n          return parsedCMap;\n        });\n      }\n      return Promise.reject(new Error('Encoding required.'));\n    }\n  };\n}();\nexports.CMap = CMap;\nexports.IdentityCMap = IdentityCMap;\nexports.CMapFactory = CMapFactory;\n\n/***/ }),\n/* 134 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFontType = exports.ProblematicCharRanges = exports.IdentityToUnicodeMap = exports.ToUnicodeMap = exports.FontFlags = exports.Font = exports.ErrorFont = exports.PRIVATE_USE_OFFSET_END = exports.PRIVATE_USE_OFFSET_START = exports.SEAC_ANALYSIS_ENABLED = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cff_parser = __w_pdfjs_require__(78);\n\nvar _glyphlist = __w_pdfjs_require__(47);\n\nvar _encodings = __w_pdfjs_require__(27);\n\nvar _standard_fonts = __w_pdfjs_require__(79);\n\nvar _unicode = __w_pdfjs_require__(80);\n\nvar _font_renderer = __w_pdfjs_require__(136);\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar _type1_parser = __w_pdfjs_require__(137);\n\nvar PRIVATE_USE_OFFSET_START = 0xE000;\nvar PRIVATE_USE_OFFSET_END = 0xF8FF;\nvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\nvar PDF_GLYPH_SPACE_UNITS = 1000;\nvar SEAC_ANALYSIS_ENABLED = false;\nvar FontFlags = {\n  FixedPitch: 1,\n  Serif: 2,\n  Symbolic: 4,\n  Script: 8,\n  Nonsymbolic: 32,\n  Italic: 64,\n  AllCap: 65536,\n  SmallCap: 131072,\n  ForceBold: 262144\n};\nvar MacStandardGlyphOrdering = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\nfunction adjustWidths(properties) {\n  if (!properties.fontMatrix) {\n    return;\n  }\n  if (properties.fontMatrix[0] === _util.FONT_IDENTITY_MATRIX[0]) {\n    return;\n  }\n  var scale = 0.001 / properties.fontMatrix[0];\n  var glyphsWidths = properties.widths;\n  for (var glyph in glyphsWidths) {\n    glyphsWidths[glyph] *= scale;\n  }\n  properties.defaultWidth *= scale;\n}\nfunction adjustToUnicode(properties, builtInEncoding) {\n  if (properties.hasIncludedToUnicodeMap) {\n    return;\n  }\n  if (properties.hasEncoding) {\n    return;\n  }\n  if (builtInEncoding === properties.defaultEncoding) {\n    return;\n  }\n  if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n    return;\n  }\n  var toUnicode = [],\n      glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n  for (var charCode in builtInEncoding) {\n    var glyphName = builtInEncoding[charCode];\n    var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n    if (unicode !== -1) {\n      toUnicode[charCode] = String.fromCharCode(unicode);\n    }\n  }\n  properties.toUnicode.amend(toUnicode);\n}\nfunction getFontType(type, subtype) {\n  switch (type) {\n    case 'Type1':\n      return subtype === 'Type1C' ? _util.FontType.TYPE1C : _util.FontType.TYPE1;\n    case 'CIDFontType0':\n      return subtype === 'CIDFontType0C' ? _util.FontType.CIDFONTTYPE0C : _util.FontType.CIDFONTTYPE0;\n    case 'OpenType':\n      return _util.FontType.OPENTYPE;\n    case 'TrueType':\n      return _util.FontType.TRUETYPE;\n    case 'CIDFontType2':\n      return _util.FontType.CIDFONTTYPE2;\n    case 'MMType1':\n      return _util.FontType.MMTYPE1;\n    case 'Type0':\n      return _util.FontType.TYPE0;\n    default:\n      return _util.FontType.UNKNOWN;\n  }\n}\nfunction recoverGlyphName(name, glyphsUnicodeMap) {\n  if (glyphsUnicodeMap[name] !== undefined) {\n    return name;\n  }\n  var unicode = (0, _unicode.getUnicodeForGlyph)(name, glyphsUnicodeMap);\n  if (unicode !== -1) {\n    for (var key in glyphsUnicodeMap) {\n      if (glyphsUnicodeMap[key] === unicode) {\n        return key;\n      }\n    }\n  }\n  (0, _util.info)('Unable to recover a standard glyph name for: ' + name);\n  return name;\n}\nvar Glyph = function GlyphClosure() {\n  function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    this.fontChar = fontChar;\n    this.unicode = unicode;\n    this.accent = accent;\n    this.width = width;\n    this.vmetric = vmetric;\n    this.operatorListId = operatorListId;\n    this.isSpace = isSpace;\n    this.isInFont = isInFont;\n  }\n  Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n  };\n  return Glyph;\n}();\nvar ToUnicodeMap = function ToUnicodeMapClosure() {\n  function ToUnicodeMap(cmap) {\n    this._map = cmap;\n  }\n  ToUnicodeMap.prototype = {\n    get length() {\n      return this._map.length;\n    },\n    forEach: function forEach(callback) {\n      for (var charCode in this._map) {\n        callback(charCode, this._map[charCode].charCodeAt(0));\n      }\n    },\n    has: function has(i) {\n      return this._map[i] !== undefined;\n    },\n    get: function get(i) {\n      return this._map[i];\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    amend: function amend(map) {\n      for (var charCode in map) {\n        this._map[charCode] = map[charCode];\n      }\n    }\n  };\n  return ToUnicodeMap;\n}();\nvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n  function IdentityToUnicodeMap(firstChar, lastChar) {\n    this.firstChar = firstChar;\n    this.lastChar = lastChar;\n  }\n  IdentityToUnicodeMap.prototype = {\n    get length() {\n      return this.lastChar + 1 - this.firstChar;\n    },\n    forEach: function forEach(callback) {\n      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n        callback(i, i);\n      }\n    },\n    has: function has(i) {\n      return this.firstChar <= i && i <= this.lastChar;\n    },\n    get: function get(i) {\n      if (this.firstChar <= i && i <= this.lastChar) {\n        return String.fromCharCode(i);\n      }\n      return undefined;\n    },\n    charCodeOf: function charCodeOf(v) {\n      return Number.isInteger(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n    },\n    amend: function amend(map) {\n      throw new Error('Should not call amend()');\n    }\n  };\n  return IdentityToUnicodeMap;\n}();\nvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n  function writeInt16(dest, offset, num) {\n    dest[offset] = num >> 8 & 0xFF;\n    dest[offset + 1] = num & 0xFF;\n  }\n  function writeInt32(dest, offset, num) {\n    dest[offset] = num >> 24 & 0xFF;\n    dest[offset + 1] = num >> 16 & 0xFF;\n    dest[offset + 2] = num >> 8 & 0xFF;\n    dest[offset + 3] = num & 0xFF;\n  }\n  function writeData(dest, offset, data) {\n    var i, ii;\n    if (data instanceof Uint8Array) {\n      dest.set(data, offset);\n    } else if (typeof data === 'string') {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data.charCodeAt(i) & 0xFF;\n      }\n    } else {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data[i] & 0xFF;\n      }\n    }\n  }\n  function OpenTypeFileBuilder(sfnt) {\n    this.sfnt = sfnt;\n    this.tables = Object.create(null);\n  }\n  OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n    var maxPower2 = 1,\n        log2 = 0;\n    while ((maxPower2 ^ entriesCount) > maxPower2) {\n      maxPower2 <<= 1;\n      log2++;\n    }\n    var searchRange = maxPower2 * entrySize;\n    return {\n      range: searchRange,\n      entry: log2,\n      rangeShift: entrySize * entriesCount - searchRange\n    };\n  };\n  var OTF_HEADER_SIZE = 12;\n  var OTF_TABLE_ENTRY_SIZE = 16;\n  OpenTypeFileBuilder.prototype = {\n    toArray: function OpenTypeFileBuilder_toArray() {\n      var sfnt = this.sfnt;\n      var tables = this.tables;\n      var tablesNames = Object.keys(tables);\n      tablesNames.sort();\n      var numTables = tablesNames.length;\n      var i, j, jj, table, tableName;\n      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n      var tableOffsets = [offset];\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        var paddedLength = (table.length + 3 & ~3) >>> 0;\n        offset += paddedLength;\n        tableOffsets.push(offset);\n      }\n      var file = new Uint8Array(offset);\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        writeData(file, tableOffsets[i], table);\n      }\n      if (sfnt === 'true') {\n        sfnt = (0, _util.string32)(0x00010000);\n      }\n      file[0] = sfnt.charCodeAt(0) & 0xFF;\n      file[1] = sfnt.charCodeAt(1) & 0xFF;\n      file[2] = sfnt.charCodeAt(2) & 0xFF;\n      file[3] = sfnt.charCodeAt(3) & 0xFF;\n      writeInt16(file, 4, numTables);\n      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n      writeInt16(file, 6, searchParams.range);\n      writeInt16(file, 8, searchParams.entry);\n      writeInt16(file, 10, searchParams.rangeShift);\n      offset = OTF_HEADER_SIZE;\n      for (i = 0; i < numTables; i++) {\n        tableName = tablesNames[i];\n        file[offset] = tableName.charCodeAt(0) & 0xFF;\n        file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n        file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n        file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n        var checksum = 0;\n        for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n          var quad = (0, _util.readUint32)(file, j);\n          checksum = checksum + quad >>> 0;\n        }\n        writeInt32(file, offset + 4, checksum);\n        writeInt32(file, offset + 8, tableOffsets[i]);\n        writeInt32(file, offset + 12, tables[tableName].length);\n        offset += OTF_TABLE_ENTRY_SIZE;\n      }\n      return file;\n    },\n    addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n      if (tag in this.tables) {\n        throw new Error('Table ' + tag + ' already exists');\n      }\n      this.tables[tag] = data;\n    }\n  };\n  return OpenTypeFileBuilder;\n}();\nvar ProblematicCharRanges = new Int32Array([0x0000, 0x0020, 0x007F, 0x00A1, 0x00AD, 0x00AE, 0x0600, 0x0780, 0x08A0, 0x10A0, 0x1780, 0x1800, 0x1C00, 0x1C50, 0x2000, 0x2010, 0x2011, 0x2012, 0x2028, 0x2030, 0x205F, 0x2070, 0x25CC, 0x25CD, 0x3000, 0x3001, 0x3164, 0x3165, 0xAA60, 0xAA80, 0xFFF0, 0x10000]);\nvar Font = function FontClosure() {\n  function Font(name, file, properties) {\n    var charCode;\n    this.name = name;\n    this.loadedName = properties.loadedName;\n    this.isType3Font = properties.isType3Font;\n    this.sizes = [];\n    this.missingFile = false;\n    this.glyphCache = Object.create(null);\n    this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n    this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n    this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n    var type = properties.type;\n    var subtype = properties.subtype;\n    this.type = type;\n    this.subtype = subtype;\n    this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\n    this.differences = properties.differences;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.composite = properties.composite;\n    this.wideChars = properties.wideChars;\n    this.cMap = properties.cMap;\n    this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n    this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n    this.fontMatrix = properties.fontMatrix;\n    this.bbox = properties.bbox;\n    this.defaultEncoding = properties.defaultEncoding;\n    this.toUnicode = properties.toUnicode;\n    this.toFontChar = [];\n    if (properties.type === 'Type3') {\n      for (charCode = 0; charCode < 256; charCode++) {\n        this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n      }\n      this.fontType = _util.FontType.TYPE3;\n      return;\n    }\n    this.cidEncoding = properties.cidEncoding;\n    this.vertical = properties.vertical;\n    if (this.vertical) {\n      this.vmetrics = properties.vmetrics;\n      this.defaultVMetrics = properties.defaultVMetrics;\n    }\n    if (!file || file.isEmpty) {\n      if (file) {\n        (0, _util.warn)('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n      }\n      this.fallbackToSystemFont();\n      return;\n    }\n    if (subtype === 'Type1C') {\n      if (type !== 'Type1' && type !== 'MMType1') {\n        if (isTrueTypeFile(file)) {\n          subtype = 'TrueType';\n        } else {\n          type = 'Type1';\n        }\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      }\n    }\n    if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n      type = 'CIDFontType0';\n    }\n    if (type === 'CIDFontType0') {\n      if (isType1File(file)) {\n        subtype = 'CIDFontType0';\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      } else {\n        subtype = 'CIDFontType0C';\n      }\n    }\n    if (subtype === 'OpenType' && type !== 'OpenType') {\n      type = 'OpenType';\n    }\n    try {\n      var data;\n      switch (type) {\n        case 'MMType1':\n          (0, _util.info)('MMType1 font (' + name + '), falling back to Type1.');\n        case 'Type1':\n        case 'CIDFontType0':\n          this.mimetype = 'font/opentype';\n          var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n          adjustWidths(properties);\n          data = this.convert(name, cff, properties);\n          break;\n        case 'OpenType':\n        case 'TrueType':\n        case 'CIDFontType2':\n          this.mimetype = 'font/opentype';\n          data = this.checkAndRepair(name, file, properties);\n          if (this.isOpenType) {\n            adjustWidths(properties);\n            type = 'OpenType';\n          }\n          break;\n        default:\n          throw new _util.FormatError('Font ' + type + ' is not supported');\n      }\n    } catch (e) {\n      if (!(e instanceof _util.FormatError)) {\n        throw e;\n      }\n      (0, _util.warn)(e);\n      this.fallbackToSystemFont();\n      return;\n    }\n    this.data = data;\n    this.fontType = getFontType(type, subtype);\n    this.fontMatrix = properties.fontMatrix;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.toUnicode = properties.toUnicode;\n    this.encoding = properties.baseEncoding;\n    this.seacMap = properties.seacMap;\n    this.loading = true;\n  }\n  Font.getFontID = function () {\n    var ID = 1;\n    return function Font_getFontID() {\n      return String(ID++);\n    };\n  }();\n  function int16(b0, b1) {\n    return (b0 << 8) + b1;\n  }\n  function writeSignedInt16(bytes, index, value) {\n    bytes[index + 1] = value;\n    bytes[index] = value >>> 8;\n  }\n  function signedInt16(b0, b1) {\n    var value = (b0 << 8) + b1;\n    return value & 1 << 15 ? value - 0x10000 : value;\n  }\n  function int32(b0, b1, b2, b3) {\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  }\n  function string16(value) {\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function safeString16(value) {\n    value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function isTrueTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.readUint32)(header, 0) === 0x00010000;\n  }\n  function isOpenTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'OTTO';\n  }\n  function isType1File(file) {\n    var header = file.peekBytes(2);\n    if (header[0] === 0x25 && header[1] === 0x21) {\n      return true;\n    }\n    if (header[0] === 0x80 && header[1] === 0x01) {\n      return true;\n    }\n    return false;\n  }\n  function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n    var toFontChar = [],\n        unicode;\n    for (var i = 0, ii = encoding.length; i < ii; i++) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(encoding[i], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[i] = unicode;\n      }\n    }\n    for (var charCode in differences) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(differences[charCode], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[+charCode] = unicode;\n      }\n    }\n    return toFontChar;\n  }\n  function isProblematicUnicodeLocation(code) {\n    var i = 0,\n        j = ProblematicCharRanges.length - 1;\n    while (i < j) {\n      var c = i + j + 1 >> 1;\n      if (code < ProblematicCharRanges[c]) {\n        j = c - 1;\n      } else {\n        i = c;\n      }\n    }\n    return !(i & 1);\n  }\n  function adjustMapping(charCodeToGlyphId, properties, missingGlyphs) {\n    var toUnicode = properties.toUnicode;\n    var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n    var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\n    var newMap = Object.create(null);\n    var toFontChar = [];\n    var usedFontCharCodes = [];\n    var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n    for (var originalCharCode in charCodeToGlyphId) {\n      originalCharCode |= 0;\n      var glyphId = charCodeToGlyphId[originalCharCode];\n      if (missingGlyphs[glyphId]) {\n        continue;\n      }\n      var fontCharCode = originalCharCode;\n      var hasUnicodeValue = false;\n      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n        hasUnicodeValue = true;\n        var unicode = toUnicode.get(fontCharCode);\n        if (unicode.length === 1) {\n          fontCharCode = unicode.charCodeAt(0);\n        }\n      }\n      if (usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) {\n        do {\n          if (nextAvailableFontCharCode > PRIVATE_USE_OFFSET_END) {\n            (0, _util.warn)('Ran out of space in font private use area.');\n            break;\n          }\n          fontCharCode = nextAvailableFontCharCode++;\n          if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n            fontCharCode = 0xF020;\n            nextAvailableFontCharCode = fontCharCode + 1;\n          }\n        } while (usedFontCharCodes[fontCharCode] !== undefined);\n      }\n      newMap[fontCharCode] = glyphId;\n      toFontChar[originalCharCode] = fontCharCode;\n      usedFontCharCodes[fontCharCode] = true;\n    }\n    return {\n      toFontChar: toFontChar,\n      charCodeToGlyphId: newMap,\n      nextAvailableFontCharCode: nextAvailableFontCharCode\n    };\n  }\n  function getRanges(glyphs, numGlyphs) {\n    var codes = [];\n    for (var charCode in glyphs) {\n      if (glyphs[charCode] >= numGlyphs) {\n        continue;\n      }\n      codes.push({\n        fontCharCode: charCode | 0,\n        glyphId: glyphs[charCode]\n      });\n    }\n    if (codes.length === 0) {\n      codes.push({\n        fontCharCode: 0,\n        glyphId: 0\n      });\n    }\n    codes.sort(function fontGetRangesSort(a, b) {\n      return a.fontCharCode - b.fontCharCode;\n    });\n    var ranges = [];\n    var length = codes.length;\n    for (var n = 0; n < length;) {\n      var start = codes[n].fontCharCode;\n      var codeIndices = [codes[n].glyphId];\n      ++n;\n      var end = start;\n      while (n < length && end + 1 === codes[n].fontCharCode) {\n        codeIndices.push(codes[n].glyphId);\n        ++end;\n        ++n;\n        if (end === 0xFFFF) {\n          break;\n        }\n      }\n      ranges.push([start, end, codeIndices]);\n    }\n    return ranges;\n  }\n  function createCmapTable(glyphs, numGlyphs) {\n    var ranges = getRanges(glyphs, numGlyphs);\n    var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n    var cmap = '\\x00\\x00' + string16(numTables) + '\\x00\\x03' + '\\x00\\x01' + (0, _util.string32)(4 + numTables * 8);\n    var i, ii, j, jj;\n    for (i = ranges.length - 1; i >= 0; --i) {\n      if (ranges[i][0] <= 0xFFFF) {\n        break;\n      }\n    }\n    var bmpLength = i + 1;\n    if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n      ranges[i][1] = 0xFFFE;\n    }\n    var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n    var segCount = bmpLength + trailingRangesCount;\n    var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n    var startCount = '';\n    var endCount = '';\n    var idDeltas = '';\n    var idRangeOffsets = '';\n    var glyphsIds = '';\n    var bias = 0;\n    var range, start, end, codes;\n    for (i = 0, ii = bmpLength; i < ii; i++) {\n      range = ranges[i];\n      start = range[0];\n      end = range[1];\n      startCount += string16(start);\n      endCount += string16(end);\n      codes = range[2];\n      var contiguous = true;\n      for (j = 1, jj = codes.length; j < jj; ++j) {\n        if (codes[j] !== codes[j - 1] + 1) {\n          contiguous = false;\n          break;\n        }\n      }\n      if (!contiguous) {\n        var offset = (segCount - i) * 2 + bias * 2;\n        bias += end - start + 1;\n        idDeltas += string16(0);\n        idRangeOffsets += string16(offset);\n        for (j = 0, jj = codes.length; j < jj; ++j) {\n          glyphsIds += string16(codes[j]);\n        }\n      } else {\n        var startCode = codes[0];\n        idDeltas += string16(startCode - start & 0xFFFF);\n        idRangeOffsets += string16(0);\n      }\n    }\n    if (trailingRangesCount > 0) {\n      endCount += '\\xFF\\xFF';\n      startCount += '\\xFF\\xFF';\n      idDeltas += '\\x00\\x01';\n      idRangeOffsets += '\\x00\\x00';\n    }\n    var format314 = '\\x00\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\x00\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\n    var format31012 = '';\n    var header31012 = '';\n    if (numTables > 1) {\n      cmap += '\\x00\\x03' + '\\x00\\x0A' + (0, _util.string32)(4 + numTables * 8 + 4 + format314.length);\n      format31012 = '';\n      for (i = 0, ii = ranges.length; i < ii; i++) {\n        range = ranges[i];\n        start = range[0];\n        codes = range[2];\n        var code = codes[0];\n        for (j = 1, jj = codes.length; j < jj; ++j) {\n          if (codes[j] !== codes[j - 1] + 1) {\n            end = range[0] + j - 1;\n            format31012 += (0, _util.string32)(start) + (0, _util.string32)(end) + (0, _util.string32)(code);\n            start = end + 1;\n            code = codes[j];\n          }\n        }\n        format31012 += (0, _util.string32)(start) + (0, _util.string32)(range[1]) + (0, _util.string32)(code);\n      }\n      header31012 = '\\x00\\x0C' + '\\x00\\x00' + (0, _util.string32)(format31012.length + 16) + '\\x00\\x00\\x00\\x00' + (0, _util.string32)(format31012.length / 12);\n    }\n    return cmap + '\\x00\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\n  }\n  function validateOS2Table(os2) {\n    var stream = new _stream.Stream(os2.data);\n    var version = stream.getUint16();\n    stream.getBytes(60);\n    var selection = stream.getUint16();\n    if (version < 4 && selection & 0x0300) {\n      return false;\n    }\n    var firstChar = stream.getUint16();\n    var lastChar = stream.getUint16();\n    if (firstChar > lastChar) {\n      return false;\n    }\n    stream.getBytes(6);\n    var usWinAscent = stream.getUint16();\n    if (usWinAscent === 0) {\n      return false;\n    }\n    os2.data[8] = os2.data[9] = 0;\n    return true;\n  }\n  function createOS2Table(properties, charstrings, override) {\n    override = override || {\n      unitsPerEm: 0,\n      yMax: 0,\n      yMin: 0,\n      ascent: 0,\n      descent: 0\n    };\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n    if (charstrings) {\n      for (var code in charstrings) {\n        code |= 0;\n        if (firstCharIndex > code || !firstCharIndex) {\n          firstCharIndex = code;\n        }\n        if (lastCharIndex < code) {\n          lastCharIndex = code;\n        }\n        var position = (0, _unicode.getUnicodeRangeFor)(code);\n        if (position < 32) {\n          ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n          ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n          ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n          ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n          throw new _util.FormatError('Unicode ranges Bits > 123 are reserved for internal usage');\n        }\n      }\n    } else {\n      firstCharIndex = 0;\n      lastCharIndex = 255;\n    }\n    var bbox = properties.bbox || [0, 0, 0, 0];\n    var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n    var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n    var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n    var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n    if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n      typoDescent = -typoDescent;\n    }\n    var winAscent = override.yMax || typoAscent;\n    var winDescent = -override.yMin || -typoDescent;\n    return '\\x00\\x03' + '\\x02\\x24' + '\\x01\\xF4' + '\\x00\\x05' + '\\x00\\x00' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x00\\x8C' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x01\\xDF' + '\\x00\\x31' + '\\x01\\x02' + '\\x00\\x00' + '\\x00\\x00\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\x00\\x00\\x00\\x00\\x00\\x00' + (0, _util.string32)(ulUnicodeRange1) + (0, _util.string32)(ulUnicodeRange2) + (0, _util.string32)(ulUnicodeRange3) + (0, _util.string32)(ulUnicodeRange4) + '\\x2A\\x32\\x31\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\x00\\x64' + string16(winAscent) + string16(winDescent) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\x00\\x03';\n  }\n  function createPostTable(properties) {\n    var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n    return '\\x00\\x03\\x00\\x00' + (0, _util.string32)(angle) + '\\x00\\x00' + '\\x00\\x00' + (0, _util.string32)(properties.fixedPitch) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00';\n  }\n  function createNameTable(name, proto) {\n    if (!proto) {\n      proto = [[], []];\n    }\n    var strings = [proto[0][0] || 'Original licence', proto[0][1] || name, proto[0][2] || 'Unknown', proto[0][3] || 'uniqueID', proto[0][4] || name, proto[0][5] || 'Version 0.11', proto[0][6] || '', proto[0][7] || 'Unknown', proto[0][8] || 'Unknown', proto[0][9] || 'Unknown'];\n    var stringsUnicode = [];\n    var i, ii, j, jj, str;\n    for (i = 0, ii = strings.length; i < ii; i++) {\n      str = proto[1][i] || strings[i];\n      var strBufUnicode = [];\n      for (j = 0, jj = str.length; j < jj; j++) {\n        strBufUnicode.push(string16(str.charCodeAt(j)));\n      }\n      stringsUnicode.push(strBufUnicode.join(''));\n    }\n    var names = [strings, stringsUnicode];\n    var platforms = ['\\x00\\x01', '\\x00\\x03'];\n    var encodings = ['\\x00\\x00', '\\x00\\x01'];\n    var languages = ['\\x00\\x00', '\\x04\\x09'];\n    var namesRecordCount = strings.length * platforms.length;\n    var nameTable = '\\x00\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n    var strOffset = 0;\n    for (i = 0, ii = platforms.length; i < ii; i++) {\n      var strs = names[i];\n      for (j = 0, jj = strs.length; j < jj; j++) {\n        str = strs[j];\n        var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n        nameTable += nameRecord;\n        strOffset += str.length;\n      }\n    }\n    nameTable += strings.join('') + stringsUnicode.join('');\n    return nameTable;\n  }\n  Font.prototype = {\n    name: null,\n    font: null,\n    mimetype: null,\n    encoding: null,\n    get renderer() {\n      var renderer = _font_renderer.FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n      return (0, _util.shadow)(this, 'renderer', renderer);\n    },\n    exportData: function Font_exportData() {\n      var data = {};\n      for (var i in this) {\n        if (this.hasOwnProperty(i)) {\n          data[i] = this[i];\n        }\n      }\n      return data;\n    },\n    fallbackToSystemFont: function Font_fallbackToSystemFont() {\n      var _this = this;\n\n      this.missingFile = true;\n      var charCode, unicode;\n      var name = this.name;\n      var type = this.type;\n      var subtype = this.subtype;\n      var fontName = name.replace(/[,_]/g, '-');\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)(),\n          nonStdFontMap = (0, _standard_fonts.getNonStdFontMap)();\n      var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n      this.bold = fontName.search(/bold/gi) !== -1;\n      this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n      this.black = name.search(/Black/g) !== -1;\n      this.remeasure = Object.keys(this.widths).length > 0;\n      if (isStandardFont && type === 'CIDFontType2' && this.cidEncoding.indexOf('Identity-') === 0) {\n        var GlyphMapForStandardFonts = (0, _standard_fonts.getGlyphMapForStandardFonts)();\n        var map = [];\n        for (charCode in GlyphMapForStandardFonts) {\n          map[+charCode] = GlyphMapForStandardFonts[charCode];\n        }\n        if (/Arial-?Black/i.test(name)) {\n          var SupplementalGlyphMapForArialBlack = (0, _standard_fonts.getSupplementalGlyphMapForArialBlack)();\n          for (charCode in SupplementalGlyphMapForArialBlack) {\n            map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\n          }\n        }\n        var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n        if (!isIdentityUnicode) {\n          this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n            map[+charCode] = unicodeCharCode;\n          });\n        }\n        this.toFontChar = map;\n        this.toUnicode = new ToUnicodeMap(map);\n      } else if (/Symbol/i.test(fontName)) {\n        this.toFontChar = buildToFontChar(_encodings.SymbolSetEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else if (/Dingbats/i.test(fontName)) {\n        if (/Wingdings/i.test(name)) {\n          (0, _util.warn)('Non-embedded Wingdings font, falling back to ZapfDingbats.');\n        }\n        this.toFontChar = buildToFontChar(_encodings.ZapfDingbatsEncoding, (0, _glyphlist.getDingbatsGlyphsUnicode)(), this.differences);\n      } else if (isStandardFont) {\n        this.toFontChar = buildToFontChar(this.defaultEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else {\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n          if (!_this.composite) {\n            var glyphName = _this.differences[charCode] || _this.defaultEncoding[charCode];\n            unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n            if (unicode !== -1) {\n              unicodeCharCode = unicode;\n            }\n          }\n          _this.toFontChar[charCode] = unicodeCharCode;\n        });\n      }\n      this.loadedName = fontName.split('-')[0];\n      this.loading = false;\n      this.fontType = getFontType(type, subtype);\n    },\n    checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n      function readTableEntry(file) {\n        var tag = (0, _util.bytesToString)(file.getBytes(4));\n        var checksum = file.getInt32() >>> 0;\n        var offset = file.getInt32() >>> 0;\n        var length = file.getInt32() >>> 0;\n        var previousPosition = file.pos;\n        file.pos = file.start ? file.start : 0;\n        file.skip(offset);\n        var data = file.getBytes(length);\n        file.pos = previousPosition;\n        if (tag === 'head') {\n          data[8] = data[9] = data[10] = data[11] = 0;\n          data[17] |= 0x20;\n        }\n        return {\n          tag: tag,\n          checksum: checksum,\n          length: length,\n          offset: offset,\n          data: data\n        };\n      }\n      function readOpenTypeHeader(ttf) {\n        return {\n          version: (0, _util.bytesToString)(ttf.getBytes(4)),\n          numTables: ttf.getUint16(),\n          searchRange: ttf.getUint16(),\n          entrySelector: ttf.getUint16(),\n          rangeShift: ttf.getUint16()\n        };\n      }\n      function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\n        if (!cmap) {\n          (0, _util.warn)('No cmap table available.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var segment;\n        var start = (font.start ? font.start : 0) + cmap.offset;\n        font.pos = start;\n        font.getUint16();\n        var numTables = font.getUint16();\n        var potentialTable;\n        var canBreak = false;\n        for (var i = 0; i < numTables; i++) {\n          var platformId = font.getUint16();\n          var encodingId = font.getUint16();\n          var offset = font.getInt32() >>> 0;\n          var useTable = false;\n          if (potentialTable && potentialTable.platformId === platformId && potentialTable.encodingId === encodingId) {\n            continue;\n          }\n          if (platformId === 0 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 1 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\n            useTable = true;\n            if (!isSymbolicFont) {\n              canBreak = true;\n            }\n          } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n            useTable = true;\n            canBreak = true;\n          }\n          if (useTable) {\n            potentialTable = {\n              platformId: platformId,\n              encodingId: encodingId,\n              offset: offset\n            };\n          }\n          if (canBreak) {\n            break;\n          }\n        }\n        if (potentialTable) {\n          font.pos = start + potentialTable.offset;\n        }\n        if (!potentialTable || font.peekByte() === -1) {\n          (0, _util.warn)('Could not find a preferred cmap table.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var format = font.getUint16();\n        font.getUint16();\n        font.getUint16();\n        var hasShortCmap = false;\n        var mappings = [];\n        var j, glyphId;\n        if (format === 0) {\n          for (j = 0; j < 256; j++) {\n            var index = font.getByte();\n            if (!index) {\n              continue;\n            }\n            mappings.push({\n              charCode: j,\n              glyphId: index\n            });\n          }\n          hasShortCmap = true;\n        } else if (format === 4) {\n          var segCount = font.getUint16() >> 1;\n          font.getBytes(6);\n          var segIndex,\n              segments = [];\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments.push({ end: font.getUint16() });\n          }\n          font.getUint16();\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].start = font.getUint16();\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].delta = font.getUint16();\n          }\n          var offsetsCount = 0;\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            var rangeOffset = font.getUint16();\n            if (!rangeOffset) {\n              segment.offsetIndex = -1;\n              continue;\n            }\n            var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n            segment.offsetIndex = offsetIndex;\n            offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n          }\n          var offsets = [];\n          for (j = 0; j < offsetsCount; j++) {\n            offsets.push(font.getUint16());\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            start = segment.start;\n            var end = segment.end;\n            var delta = segment.delta;\n            offsetIndex = segment.offsetIndex;\n            for (j = start; j <= end; j++) {\n              if (j === 0xFFFF) {\n                continue;\n              }\n              glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n              glyphId = glyphId + delta & 0xFFFF;\n              mappings.push({\n                charCode: j,\n                glyphId: glyphId\n              });\n            }\n          }\n        } else if (format === 6) {\n          var firstCode = font.getUint16();\n          var entryCount = font.getUint16();\n          for (j = 0; j < entryCount; j++) {\n            glyphId = font.getUint16();\n            var charCode = firstCode + j;\n            mappings.push({\n              charCode: charCode,\n              glyphId: glyphId\n            });\n          }\n        } else {\n          (0, _util.warn)('cmap table has unsupported format: ' + format);\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        mappings.sort(function (a, b) {\n          return a.charCode - b.charCode;\n        });\n        for (i = 1; i < mappings.length; i++) {\n          if (mappings[i - 1].charCode === mappings[i].charCode) {\n            mappings.splice(i, 1);\n            i--;\n          }\n        }\n        return {\n          platformId: potentialTable.platformId,\n          encodingId: potentialTable.encodingId,\n          mappings: mappings,\n          hasShortCmap: hasShortCmap\n        };\n      }\n      function sanitizeMetrics(font, header, metrics, numGlyphs) {\n        if (!header) {\n          if (metrics) {\n            metrics.data = null;\n          }\n          return;\n        }\n        font.pos = (font.start ? font.start : 0) + header.offset;\n        font.pos += header.length - 2;\n        var numOfMetrics = font.getUint16();\n        if (numOfMetrics > numGlyphs) {\n          (0, _util.info)('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\n          numOfMetrics = numGlyphs;\n          header.data[34] = (numOfMetrics & 0xff00) >> 8;\n          header.data[35] = numOfMetrics & 0x00ff;\n        }\n        var numOfSidebearings = numGlyphs - numOfMetrics;\n        var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n        if (numMissing > 0) {\n          var entries = new Uint8Array(metrics.length + numMissing * 2);\n          entries.set(metrics.data);\n          metrics.data = entries;\n        }\n      }\n      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n        var glyphProfile = {\n          length: 0,\n          sizeOfInstructions: 0\n        };\n        if (sourceEnd - sourceStart <= 12) {\n          return glyphProfile;\n        }\n        var glyf = source.subarray(sourceStart, sourceEnd);\n        var contoursCount = signedInt16(glyf[0], glyf[1]);\n        if (contoursCount < 0) {\n          contoursCount = -1;\n          writeSignedInt16(glyf, 0, contoursCount);\n          dest.set(glyf, destStart);\n          glyphProfile.length = glyf.length;\n          return glyphProfile;\n        }\n        var i,\n            j = 10,\n            flagsCount = 0;\n        for (i = 0; i < contoursCount; i++) {\n          var endPoint = glyf[j] << 8 | glyf[j + 1];\n          flagsCount = endPoint + 1;\n          j += 2;\n        }\n        var instructionsStart = j;\n        var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n        glyphProfile.sizeOfInstructions = instructionsLength;\n        j += 2 + instructionsLength;\n        var instructionsEnd = j;\n        var coordinatesLength = 0;\n        for (i = 0; i < flagsCount; i++) {\n          var flag = glyf[j++];\n          if (flag & 0xC0) {\n            glyf[j - 1] = flag & 0x3F;\n          }\n          var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\n          coordinatesLength += xyLength;\n          if (flag & 8) {\n            var repeat = glyf[j++];\n            i += repeat;\n            coordinatesLength += repeat * xyLength;\n          }\n        }\n        if (coordinatesLength === 0) {\n          return glyphProfile;\n        }\n        var glyphDataLength = j + coordinatesLength;\n        if (glyphDataLength > glyf.length) {\n          return glyphProfile;\n        }\n        if (!hintsValid && instructionsLength > 0) {\n          dest.set(glyf.subarray(0, instructionsStart), destStart);\n          dest.set([0, 0], destStart + instructionsStart);\n          dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n          glyphDataLength -= instructionsLength;\n          if (glyf.length - glyphDataLength > 3) {\n            glyphDataLength = glyphDataLength + 3 & ~3;\n          }\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        if (glyf.length - glyphDataLength > 3) {\n          glyphDataLength = glyphDataLength + 3 & ~3;\n          dest.set(glyf.subarray(0, glyphDataLength), destStart);\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        dest.set(glyf, destStart);\n        glyphProfile.length = glyf.length;\n        return glyphProfile;\n      }\n      function sanitizeHead(head, numGlyphs, locaLength) {\n        var data = head.data;\n        var version = int32(data[0], data[1], data[2], data[3]);\n        if (version >> 16 !== 1) {\n          (0, _util.info)('Attempting to fix invalid version in head table: ' + version);\n          data[0] = 0;\n          data[1] = 1;\n          data[2] = 0;\n          data[3] = 0;\n        }\n        var indexToLocFormat = int16(data[50], data[51]);\n        if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n          (0, _util.info)('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\n          var numGlyphsPlusOne = numGlyphs + 1;\n          if (locaLength === numGlyphsPlusOne << 1) {\n            data[50] = 0;\n            data[51] = 0;\n          } else if (locaLength === numGlyphsPlusOne << 2) {\n            data[50] = 0;\n            data[51] = 1;\n          } else {\n            throw new _util.FormatError('Could not fix indexToLocFormat: ' + indexToLocFormat);\n          }\n        }\n      }\n      function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions) {\n        var itemSize, itemDecode, itemEncode;\n        if (isGlyphLocationsLong) {\n          itemSize = 4;\n          itemDecode = function fontItemDecodeLong(data, offset) {\n            return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n          };\n          itemEncode = function fontItemEncodeLong(data, offset, value) {\n            data[offset] = value >>> 24 & 0xFF;\n            data[offset + 1] = value >> 16 & 0xFF;\n            data[offset + 2] = value >> 8 & 0xFF;\n            data[offset + 3] = value & 0xFF;\n          };\n        } else {\n          itemSize = 2;\n          itemDecode = function fontItemDecode(data, offset) {\n            return data[offset] << 9 | data[offset + 1] << 1;\n          };\n          itemEncode = function fontItemEncode(data, offset, value) {\n            data[offset] = value >> 9 & 0xFF;\n            data[offset + 1] = value >> 1 & 0xFF;\n          };\n        }\n        var locaData = loca.data;\n        var locaDataSize = itemSize * (1 + numGlyphs);\n        if (locaData.length !== locaDataSize) {\n          locaData = new Uint8Array(locaDataSize);\n          locaData.set(loca.data.subarray(0, locaDataSize));\n          loca.data = locaData;\n        }\n        var oldGlyfData = glyf.data;\n        var oldGlyfDataLength = oldGlyfData.length;\n        var newGlyfData = new Uint8Array(oldGlyfDataLength);\n        var startOffset = itemDecode(locaData, 0);\n        var writeOffset = 0;\n        var missingGlyphs = Object.create(null);\n        itemEncode(locaData, 0, writeOffset);\n        var i, j;\n        var locaCount = dupFirstEntry ? numGlyphs - 1 : numGlyphs;\n        for (i = 0, j = itemSize; i < locaCount; i++, j += itemSize) {\n          var endOffset = itemDecode(locaData, j);\n          if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\n            endOffset = oldGlyfDataLength;\n          }\n          if (endOffset > oldGlyfDataLength) {\n            startOffset = endOffset;\n          }\n          var glyphProfile = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\n          var newLength = glyphProfile.length;\n          if (newLength === 0) {\n            missingGlyphs[i] = true;\n          }\n          if (glyphProfile.sizeOfInstructions > maxSizeOfInstructions) {\n            maxSizeOfInstructions = glyphProfile.sizeOfInstructions;\n          }\n          writeOffset += newLength;\n          itemEncode(locaData, j, writeOffset);\n          startOffset = endOffset;\n        }\n        if (writeOffset === 0) {\n          var simpleGlyph = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);\n          for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n            itemEncode(locaData, j, simpleGlyph.length);\n          }\n          glyf.data = simpleGlyph;\n        } else if (dupFirstEntry) {\n          var firstEntryLength = itemDecode(locaData, itemSize);\n          if (newGlyfData.length > firstEntryLength + writeOffset) {\n            glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n          } else {\n            glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n            glyf.data.set(newGlyfData.subarray(0, writeOffset));\n          }\n          glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n          itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n        } else {\n          glyf.data = newGlyfData.subarray(0, writeOffset);\n        }\n        return {\n          missingGlyphs: missingGlyphs,\n          maxSizeOfInstructions: maxSizeOfInstructions\n        };\n      }\n      function readPostScriptTable(post, properties, maxpNumGlyphs) {\n        var start = (font.start ? font.start : 0) + post.offset;\n        font.pos = start;\n        var length = post.length,\n            end = start + length;\n        var version = font.getInt32();\n        font.getBytes(28);\n        var glyphNames;\n        var valid = true;\n        var i;\n        switch (version) {\n          case 0x00010000:\n            glyphNames = MacStandardGlyphOrdering;\n            break;\n          case 0x00020000:\n            var numGlyphs = font.getUint16();\n            if (numGlyphs !== maxpNumGlyphs) {\n              valid = false;\n              break;\n            }\n            var glyphNameIndexes = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var index = font.getUint16();\n              if (index >= 32768) {\n                valid = false;\n                break;\n              }\n              glyphNameIndexes.push(index);\n            }\n            if (!valid) {\n              break;\n            }\n            var customNames = [];\n            var strBuf = [];\n            while (font.pos < end) {\n              var stringLength = font.getByte();\n              strBuf.length = stringLength;\n              for (i = 0; i < stringLength; ++i) {\n                strBuf[i] = String.fromCharCode(font.getByte());\n              }\n              customNames.push(strBuf.join(''));\n            }\n            glyphNames = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var j = glyphNameIndexes[i];\n              if (j < 258) {\n                glyphNames.push(MacStandardGlyphOrdering[j]);\n                continue;\n              }\n              glyphNames.push(customNames[j - 258]);\n            }\n            break;\n          case 0x00030000:\n            break;\n          default:\n            (0, _util.warn)('Unknown/unsupported post table version ' + version);\n            valid = false;\n            if (properties.defaultEncoding) {\n              glyphNames = properties.defaultEncoding;\n            }\n            break;\n        }\n        properties.glyphNames = glyphNames;\n        return valid;\n      }\n      function readNameTable(nameTable) {\n        var start = (font.start ? font.start : 0) + nameTable.offset;\n        font.pos = start;\n        var names = [[], []];\n        var length = nameTable.length,\n            end = start + length;\n        var format = font.getUint16();\n        var FORMAT_0_HEADER_LENGTH = 6;\n        if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n          return names;\n        }\n        var numRecords = font.getUint16();\n        var stringsStart = font.getUint16();\n        var records = [];\n        var NAME_RECORD_LENGTH = 12;\n        var i, ii;\n        for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n          var r = {\n            platform: font.getUint16(),\n            encoding: font.getUint16(),\n            language: font.getUint16(),\n            name: font.getUint16(),\n            length: font.getUint16(),\n            offset: font.getUint16()\n          };\n          if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n            records.push(r);\n          }\n        }\n        for (i = 0, ii = records.length; i < ii; i++) {\n          var record = records[i];\n          if (record.length <= 0) {\n            continue;\n          }\n          var pos = start + stringsStart + record.offset;\n          if (pos + record.length > end) {\n            continue;\n          }\n          font.pos = pos;\n          var nameIndex = record.name;\n          if (record.encoding) {\n            var str = '';\n            for (var j = 0, jj = record.length; j < jj; j += 2) {\n              str += String.fromCharCode(font.getUint16());\n            }\n            names[1][nameIndex] = str;\n          } else {\n            names[0][nameIndex] = (0, _util.bytesToString)(font.getBytes(record.length));\n          }\n        }\n        return names;\n      }\n      var TTOpsStackDeltas = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];\n      function sanitizeTTProgram(table, ttContext) {\n        var data = table.data;\n        var i = 0,\n            j,\n            n,\n            b,\n            funcId,\n            pc,\n            lastEndf = 0,\n            lastDeff = 0;\n        var stack = [];\n        var callstack = [];\n        var functionsCalled = [];\n        var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n        var inFDEF = false,\n            ifLevel = 0,\n            inELSE = 0;\n        for (var ii = data.length; i < ii;) {\n          var op = data[i++];\n          if (op === 0x40) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if (op === 0x41) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB0) {\n            n = op - 0xB0 + 1;\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB8) {\n            n = op - 0xB8 + 1;\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if (op === 0x2B && !tooComplexToFollowFunctions) {\n            if (!inFDEF && !inELSE) {\n              funcId = stack[stack.length - 1];\n              ttContext.functionsUsed[funcId] = true;\n              if (funcId in ttContext.functionsStackDeltas) {\n                stack.length += ttContext.functionsStackDeltas[funcId];\n              } else if (funcId in ttContext.functionsDefined && functionsCalled.indexOf(funcId) < 0) {\n                callstack.push({\n                  data: data,\n                  i: i,\n                  stackTop: stack.length - 1\n                });\n                functionsCalled.push(funcId);\n                pc = ttContext.functionsDefined[funcId];\n                if (!pc) {\n                  (0, _util.warn)('TT: CALL non-existent function');\n                  ttContext.hintsValid = false;\n                  return;\n                }\n                data = pc.data;\n                i = pc.i;\n              }\n            }\n          } else if (op === 0x2C && !tooComplexToFollowFunctions) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested FDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n            funcId = stack.pop();\n            ttContext.functionsDefined[funcId] = {\n              data: data,\n              i: i\n            };\n          } else if (op === 0x2D) {\n            if (inFDEF) {\n              inFDEF = false;\n              lastEndf = i;\n            } else {\n              pc = callstack.pop();\n              if (!pc) {\n                (0, _util.warn)('TT: ENDF bad stack');\n                ttContext.hintsValid = false;\n                return;\n              }\n              funcId = functionsCalled.pop();\n              data = pc.data;\n              i = pc.i;\n              ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n            }\n          } else if (op === 0x89) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested IDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n          } else if (op === 0x58) {\n            ++ifLevel;\n          } else if (op === 0x1B) {\n            inELSE = ifLevel;\n          } else if (op === 0x59) {\n            if (inELSE === ifLevel) {\n              inELSE = 0;\n            }\n            --ifLevel;\n          } else if (op === 0x1C) {\n            if (!inFDEF && !inELSE) {\n              var offset = stack[stack.length - 1];\n              if (offset > 0) {\n                i += offset - 1;\n              }\n            }\n          }\n          if (!inFDEF && !inELSE) {\n            var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n            if (op >= 0x71 && op <= 0x75) {\n              n = stack.pop();\n              if (!isNaN(n)) {\n                stackDelta = -n * 2;\n              }\n            }\n            while (stackDelta < 0 && stack.length > 0) {\n              stack.pop();\n              stackDelta++;\n            }\n            while (stackDelta > 0) {\n              stack.push(NaN);\n              stackDelta--;\n            }\n          }\n        }\n        ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n        var content = [data];\n        if (i > data.length) {\n          content.push(new Uint8Array(i - data.length));\n        }\n        if (lastDeff > lastEndf) {\n          (0, _util.warn)('TT: complementing a missing function tail');\n          content.push(new Uint8Array([0x22, 0x2D]));\n        }\n        foldTTTable(table, content);\n      }\n      function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n        if (ttContext.tooComplexToFollowFunctions) {\n          return;\n        }\n        if (ttContext.functionsDefined.length > maxFunctionDefs) {\n          (0, _util.warn)('TT: more functions defined than expected');\n          ttContext.hintsValid = false;\n          return;\n        }\n        for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n          if (j > maxFunctionDefs) {\n            (0, _util.warn)('TT: invalid function id: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n          if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n            (0, _util.warn)('TT: undefined function: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n        }\n      }\n      function foldTTTable(table, content) {\n        if (content.length > 1) {\n          var newLength = 0;\n          var j, jj;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            newLength += content[j].length;\n          }\n          newLength = newLength + 3 & ~3;\n          var result = new Uint8Array(newLength);\n          var pos = 0;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            result.set(content[j], pos);\n            pos += content[j].length;\n          }\n          table.data = result;\n          table.length = newLength;\n        }\n      }\n      function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n        var ttContext = {\n          functionsDefined: [],\n          functionsUsed: [],\n          functionsStackDeltas: [],\n          tooComplexToFollowFunctions: false,\n          hintsValid: true\n        };\n        if (fpgm) {\n          sanitizeTTProgram(fpgm, ttContext);\n        }\n        if (prep) {\n          sanitizeTTProgram(prep, ttContext);\n        }\n        if (fpgm) {\n          checkInvalidFunctions(ttContext, maxFunctionDefs);\n        }\n        if (cvt && cvt.length & 1) {\n          var cvtData = new Uint8Array(cvt.length + 1);\n          cvtData.set(cvt.data);\n          cvt.data = cvtData;\n        }\n        return ttContext.hintsValid;\n      }\n      font = new _stream.Stream(new Uint8Array(font.getBytes()));\n      var VALID_TABLES = ['OS/2', 'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'post', 'loca', 'glyf', 'fpgm', 'prep', 'cvt ', 'CFF '];\n      var header = readOpenTypeHeader(font);\n      var numTables = header.numTables;\n      var cff, cffFile;\n      var tables = Object.create(null);\n      tables['OS/2'] = null;\n      tables['cmap'] = null;\n      tables['head'] = null;\n      tables['hhea'] = null;\n      tables['hmtx'] = null;\n      tables['maxp'] = null;\n      tables['name'] = null;\n      tables['post'] = null;\n      var table;\n      for (var i = 0; i < numTables; i++) {\n        table = readTableEntry(font);\n        if (VALID_TABLES.indexOf(table.tag) < 0) {\n          continue;\n        }\n        if (table.length === 0) {\n          continue;\n        }\n        tables[table.tag] = table;\n      }\n      var isTrueType = !tables['CFF '];\n      if (!isTrueType) {\n        if (header.version === 'OTTO' && !(properties.composite && properties.cidToGidMap) || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          cff = new CFFFont(cffFile, properties);\n          adjustWidths(properties);\n          return this.convert(name, cff, properties);\n        }\n        delete tables['glyf'];\n        delete tables['loca'];\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n        this.isOpenType = true;\n      } else {\n        if (!tables['loca']) {\n          throw new _util.FormatError('Required \"loca\" table is not found');\n        }\n        if (!tables['glyf']) {\n          (0, _util.warn)('Required \"glyf\" table is not found -- trying to recover.');\n          tables['glyf'] = {\n            tag: 'glyf',\n            data: new Uint8Array(0)\n          };\n        }\n        this.isOpenType = false;\n      }\n      if (!tables['maxp']) {\n        throw new _util.FormatError('Required \"maxp\" table is not found');\n      }\n      font.pos = (font.start || 0) + tables['maxp'].offset;\n      var version = font.getInt32();\n      var numGlyphs = font.getUint16();\n      var maxFunctionDefs = 0;\n      var maxSizeOfInstructions = 0;\n      if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n        font.pos += 8;\n        var maxZones = font.getUint16();\n        if (maxZones > 2) {\n          tables['maxp'].data[14] = 0;\n          tables['maxp'].data[15] = 2;\n        }\n        font.pos += 4;\n        maxFunctionDefs = font.getUint16();\n        font.pos += 6;\n        maxSizeOfInstructions = font.getUint16();\n      }\n      var dupFirstEntry = false;\n      if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\0') {\n        dupFirstEntry = true;\n        numGlyphs++;\n        tables['maxp'].data[4] = numGlyphs >> 8;\n        tables['maxp'].data[5] = numGlyphs & 255;\n      }\n      var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\n      if (!hintsValid) {\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n      }\n      sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\n      if (!tables['head']) {\n        throw new _util.FormatError('Required \"head\" table is not found');\n      }\n      sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\n      var missingGlyphs = Object.create(null);\n      if (isTrueType) {\n        var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\n        var glyphsInfo = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions);\n        missingGlyphs = glyphsInfo.missingGlyphs;\n        if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n          tables['maxp'].data[26] = glyphsInfo.maxSizeOfInstructions >> 8;\n          tables['maxp'].data[27] = glyphsInfo.maxSizeOfInstructions & 255;\n        }\n      }\n      if (!tables['hhea']) {\n        throw new _util.FormatError('Required \"hhea\" table is not found');\n      }\n      if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\n        tables['hhea'].data[10] = 0xFF;\n        tables['hhea'].data[11] = 0xFF;\n      }\n      var metricsOverride = {\n        unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\n        yMax: int16(tables['head'].data[42], tables['head'].data[43]),\n        yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\n        ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\n        descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\n      };\n      this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n      this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n      if (tables['post']) {\n        var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\n        if (!valid) {\n          tables['post'] = null;\n        }\n      }\n      var charCodeToGlyphId = [],\n          charCode;\n      function hasGlyph(glyphId) {\n        return !missingGlyphs[glyphId];\n      }\n      if (properties.composite) {\n        var cidToGidMap = properties.cidToGidMap || [];\n        var isCidToGidMapEmpty = cidToGidMap.length === 0;\n        properties.cMap.forEach(function (charCode, cid) {\n          if (cid > 0xffff) {\n            throw new _util.FormatError('Max size of CID is 65,535');\n          }\n          var glyphId = -1;\n          if (isCidToGidMapEmpty) {\n            glyphId = cid;\n          } else if (cidToGidMap[cid] !== undefined) {\n            glyphId = cidToGidMap[cid];\n          }\n          if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId)) {\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        });\n        if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\n          charCodeToGlyphId[0] = numGlyphs - 1;\n        }\n      } else {\n        var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\n        var cmapPlatformId = cmapTable.platformId;\n        var cmapEncodingId = cmapTable.encodingId;\n        var cmapMappings = cmapTable.mappings;\n        var cmapMappingsLength = cmapMappings.length;\n        if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!(0, _encodings.getEncoding)(properties.baseEncodingName)) {\n          var baseEncoding = [];\n          if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\n            baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n          }\n          var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n          for (charCode = 0; charCode < 256; charCode++) {\n            var glyphName, standardGlyphName;\n            if (this.differences && charCode in this.differences) {\n              glyphName = this.differences[charCode];\n            } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\n              glyphName = baseEncoding[charCode];\n            } else {\n              glyphName = _encodings.StandardEncoding[charCode];\n            }\n            if (!glyphName) {\n              continue;\n            }\n            standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n            var unicodeOrCharCode;\n            if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n              unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n            } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n              unicodeOrCharCode = _encodings.MacRomanEncoding.indexOf(standardGlyphName);\n            }\n            var found = false;\n            for (i = 0; i < cmapMappingsLength; ++i) {\n              if (cmapMappings[i].charCode !== unicodeOrCharCode) {\n                continue;\n              }\n              charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n              found = true;\n              break;\n            }\n            if (!found && properties.glyphNames) {\n              var glyphId = properties.glyphNames.indexOf(glyphName);\n              if (glyphId === -1 && standardGlyphName !== glyphName) {\n                glyphId = properties.glyphNames.indexOf(standardGlyphName);\n              }\n              if (glyphId > 0 && hasGlyph(glyphId)) {\n                charCodeToGlyphId[charCode] = glyphId;\n                found = true;\n              }\n            }\n          }\n        } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n          for (i = 0; i < cmapMappingsLength; ++i) {\n            charCodeToGlyphId[cmapMappings[i].charCode] = cmapMappings[i].glyphId;\n          }\n        } else {\n          for (i = 0; i < cmapMappingsLength; ++i) {\n            charCode = cmapMappings[i].charCode;\n            if (cmapPlatformId === 3 && charCode >= 0xF000 && charCode <= 0xF0FF) {\n              charCode &= 0xFF;\n            }\n            charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n          }\n        }\n      }\n      if (charCodeToGlyphId.length === 0) {\n        charCodeToGlyphId[0] = 0;\n      }\n      var newMapping = adjustMapping(charCodeToGlyphId, properties, missingGlyphs);\n      this.toFontChar = newMapping.toFontChar;\n      tables['cmap'] = {\n        tag: 'cmap',\n        data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\n      };\n      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n        tables['OS/2'] = {\n          tag: 'OS/2',\n          data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n        };\n      }\n      if (!tables['post']) {\n        tables['post'] = {\n          tag: 'post',\n          data: createPostTable(properties)\n        };\n      }\n      if (!isTrueType) {\n        try {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          var parser = new _cff_parser.CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n          cff = parser.parse();\n          var compiler = new _cff_parser.CFFCompiler(cff);\n          tables['CFF '].data = compiler.compile();\n        } catch (e) {\n          (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n        }\n      }\n      if (!tables['name']) {\n        tables['name'] = {\n          tag: 'name',\n          data: createNameTable(this.name)\n        };\n      } else {\n        var namePrototype = readNameTable(tables['name']);\n        tables['name'].data = createNameTable(name, namePrototype);\n      }\n      var builder = new OpenTypeFileBuilder(header.version);\n      for (var tableTag in tables) {\n        builder.addTable(tableTag, tables[tableTag].data);\n      }\n      return builder.toArray();\n    },\n    convert: function Font_convert(fontName, font, properties) {\n      properties.fixedPitch = false;\n      if (properties.builtInEncoding) {\n        adjustToUnicode(properties, properties.builtInEncoding);\n      }\n      var mapping = font.getGlyphMapping(properties);\n      var newMapping = adjustMapping(mapping, properties, Object.create(null));\n      this.toFontChar = newMapping.toFontChar;\n      var numGlyphs = font.numGlyphs;\n      function getCharCodes(charCodeToGlyphId, glyphId) {\n        var charCodes = null;\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            if (!charCodes) {\n              charCodes = [];\n            }\n            charCodes.push(charCode | 0);\n          }\n        }\n        return charCodes;\n      }\n      function createCharCode(charCodeToGlyphId, glyphId) {\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            return charCode | 0;\n          }\n        }\n        newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n        return newMapping.nextAvailableFontCharCode++;\n      }\n      var seacs = font.seacs;\n      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n        var matrix = properties.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        var charset = font.getCharset();\n        var seacMap = Object.create(null);\n        for (var glyphId in seacs) {\n          glyphId |= 0;\n          var seac = seacs[glyphId];\n          var baseGlyphName = _encodings.StandardEncoding[seac[2]];\n          var accentGlyphName = _encodings.StandardEncoding[seac[3]];\n          var baseGlyphId = charset.indexOf(baseGlyphName);\n          var accentGlyphId = charset.indexOf(accentGlyphName);\n          if (baseGlyphId < 0 || accentGlyphId < 0) {\n            continue;\n          }\n          var accentOffset = {\n            x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n            y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n          };\n          var charCodes = getCharCodes(mapping, glyphId);\n          if (!charCodes) {\n            continue;\n          }\n          for (var i = 0, ii = charCodes.length; i < ii; i++) {\n            var charCode = charCodes[i];\n            var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n            var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n            var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n            seacMap[charCode] = {\n              baseFontCharCode: baseFontCharCode,\n              accentFontCharCode: accentFontCharCode,\n              accentOffset: accentOffset\n            };\n          }\n        }\n        properties.seacMap = seacMap;\n      }\n      var unitsPerEm = 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n      var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n      builder.addTable('CFF ', font.data);\n      builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\n      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n      builder.addTable('head', '\\x00\\x01\\x00\\x00' + '\\x00\\x00\\x10\\x00' + '\\x00\\x00\\x00\\x00' + '\\x5F\\x0F\\x3C\\xF5' + '\\x00\\x00' + safeString16(unitsPerEm) + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00' + safeString16(properties.descent) + '\\x0F\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\x00\\x11' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00');\n      builder.addTable('hhea', '\\x00\\x01\\x00\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\x00\\x00' + '\\xFF\\xFF' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + string16(numGlyphs));\n      builder.addTable('hmtx', function fontFieldsHmtx() {\n        var charstrings = font.charstrings;\n        var cffWidths = font.cff ? font.cff.widths : null;\n        var hmtx = '\\x00\\x00\\x00\\x00';\n        for (var i = 1, ii = numGlyphs; i < ii; i++) {\n          var width = 0;\n          if (charstrings) {\n            var charstring = charstrings[i - 1];\n            width = 'width' in charstring ? charstring.width : 0;\n          } else if (cffWidths) {\n            width = Math.ceil(cffWidths[i] || 0);\n          }\n          hmtx += string16(width) + string16(0);\n        }\n        return hmtx;\n      }());\n      builder.addTable('maxp', '\\x00\\x00\\x50\\x00' + string16(numGlyphs));\n      builder.addTable('name', createNameTable(fontName));\n      builder.addTable('post', createPostTable(properties));\n      return builder.toArray();\n    },\n    get spaceWidth() {\n      if ('_shadowWidth' in this) {\n        return this._shadowWidth;\n      }\n      var possibleSpaceReplacements = ['space', 'minus', 'one', 'i', 'I'];\n      var width;\n      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n        var glyphName = possibleSpaceReplacements[i];\n        if (glyphName in this.widths) {\n          width = this.widths[glyphName];\n          break;\n        }\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        var glyphUnicode = glyphsUnicodeMap[glyphName];\n        var charcode = 0;\n        if (this.composite) {\n          if (this.cMap.contains(glyphUnicode)) {\n            charcode = this.cMap.lookup(glyphUnicode);\n          }\n        }\n        if (!charcode && this.toUnicode) {\n          charcode = this.toUnicode.charCodeOf(glyphUnicode);\n        }\n        if (charcode <= 0) {\n          charcode = glyphUnicode;\n        }\n        width = this.widths[charcode];\n        if (width) {\n          break;\n        }\n      }\n      width = width || this.defaultWidth;\n      this._shadowWidth = width;\n      return width;\n    },\n    charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n      var fontCharCode, width, operatorListId;\n      var widthCode = charcode;\n      if (this.cMap && this.cMap.contains(charcode)) {\n        widthCode = this.cMap.lookup(charcode);\n      }\n      width = this.widths[widthCode];\n      width = (0, _util.isNum)(width) ? width : this.defaultWidth;\n      var vmetric = this.vmetrics && this.vmetrics[widthCode];\n      var unicode = this.toUnicode.get(charcode) || charcode;\n      if (typeof unicode === 'number') {\n        unicode = String.fromCharCode(unicode);\n      }\n      var isInFont = charcode in this.toFontChar;\n      fontCharCode = this.toFontChar[charcode] || charcode;\n      if (this.missingFile) {\n        fontCharCode = (0, _unicode.mapSpecialUnicodeValues)(fontCharCode);\n      }\n      if (this.isType3Font) {\n        operatorListId = fontCharCode;\n      }\n      var accent = null;\n      if (this.seacMap && this.seacMap[charcode]) {\n        isInFont = true;\n        var seac = this.seacMap[charcode];\n        fontCharCode = seac.baseFontCharCode;\n        accent = {\n          fontChar: String.fromCharCode(seac.accentFontCharCode),\n          offset: seac.accentOffset\n        };\n      }\n      var fontChar = String.fromCharCode(fontCharCode);\n      var glyph = this.glyphCache[charcode];\n      if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n        glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n        this.glyphCache[charcode] = glyph;\n      }\n      return glyph;\n    },\n    charsToGlyphs: function Font_charsToGlyphs(chars) {\n      var charsCache = this.charsCache;\n      var glyphs, glyph, charcode;\n      if (charsCache) {\n        glyphs = charsCache[chars];\n        if (glyphs) {\n          return glyphs;\n        }\n      }\n      if (!charsCache) {\n        charsCache = this.charsCache = Object.create(null);\n      }\n      glyphs = [];\n      var charsCacheKey = chars;\n      var i = 0,\n          ii;\n      if (this.cMap) {\n        var c = Object.create(null);\n        while (i < chars.length) {\n          this.cMap.readCharCode(chars, i, c);\n          charcode = c.charcode;\n          var length = c.length;\n          i += length;\n          var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n          glyph = this.charToGlyph(charcode, isSpace);\n          glyphs.push(glyph);\n        }\n      } else {\n        for (i = 0, ii = chars.length; i < ii; ++i) {\n          charcode = chars.charCodeAt(i);\n          glyph = this.charToGlyph(charcode, charcode === 0x20);\n          glyphs.push(glyph);\n        }\n      }\n      return charsCache[charsCacheKey] = glyphs;\n    }\n  };\n  return Font;\n}();\nvar ErrorFont = function ErrorFontClosure() {\n  function ErrorFont(error) {\n    this.error = error;\n    this.loadedName = 'g_font_error';\n    this.loading = false;\n  }\n  ErrorFont.prototype = {\n    charsToGlyphs: function ErrorFont_charsToGlyphs() {\n      return [];\n    },\n    exportData: function ErrorFont_exportData() {\n      return { error: this.error };\n    }\n  };\n  return ErrorFont;\n}();\nfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n  var charCodeToGlyphId = Object.create(null);\n  var glyphId, charCode, baseEncoding;\n  var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n  if (properties.baseEncodingName) {\n    baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  } else if (isSymbolicFont) {\n    for (charCode in builtInEncoding) {\n      charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n    }\n  } else {\n    baseEncoding = _encodings.StandardEncoding;\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  var differences = properties.differences,\n      glyphsUnicodeMap;\n  if (differences) {\n    for (charCode in differences) {\n      var glyphName = differences[charCode];\n      glyphId = glyphNames.indexOf(glyphName);\n      if (glyphId === -1) {\n        if (!glyphsUnicodeMap) {\n          glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        }\n        var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n        if (standardGlyphName !== glyphName) {\n          glyphId = glyphNames.indexOf(standardGlyphName);\n        }\n      }\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  return charCodeToGlyphId;\n}\nvar Type1Font = function Type1FontClosure() {\n  function findBlock(streamBytes, signature, startIndex) {\n    var streamBytesLength = streamBytes.length;\n    var signatureLength = signature.length;\n    var scanLength = streamBytesLength - signatureLength;\n    var i = startIndex,\n        j,\n        found = false;\n    while (i < scanLength) {\n      j = 0;\n      while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n        j++;\n      }\n      if (j >= signatureLength) {\n        i += j;\n        while (i < streamBytesLength && (0, _util.isSpace)(streamBytes[i])) {\n          i++;\n        }\n        found = true;\n        break;\n      }\n      i++;\n    }\n    return {\n      found: found,\n      length: i\n    };\n  }\n  function getHeaderBlock(stream, suggestedLength) {\n    var EEXEC_SIGNATURE = [0x65, 0x65, 0x78, 0x65, 0x63];\n    var streamStartPos = stream.pos;\n    var headerBytes, headerBytesLength, block;\n    try {\n      headerBytes = stream.getBytes(suggestedLength);\n      headerBytesLength = headerBytes.length;\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n    }\n    if (headerBytesLength === suggestedLength) {\n      block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n      if (block.found && block.length === suggestedLength) {\n        return {\n          stream: new _stream.Stream(headerBytes),\n          length: suggestedLength\n        };\n      }\n    }\n    (0, _util.warn)('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n    stream.pos = streamStartPos;\n    var SCAN_BLOCK_LENGTH = 2048;\n    var actualLength;\n    while (true) {\n      var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n      block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n      if (block.length === 0) {\n        break;\n      }\n      stream.pos += block.length;\n      if (block.found) {\n        actualLength = stream.pos - streamStartPos;\n        break;\n      }\n    }\n    stream.pos = streamStartPos;\n    if (actualLength) {\n      return {\n        stream: new _stream.Stream(stream.getBytes(actualLength)),\n        length: actualLength\n      };\n    }\n    (0, _util.warn)('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n    return {\n      stream: new _stream.Stream(stream.getBytes(suggestedLength)),\n      length: suggestedLength\n    };\n  }\n  function getEexecBlock(stream, suggestedLength) {\n    var eexecBytes = stream.getBytes();\n    return {\n      stream: new _stream.Stream(eexecBytes),\n      length: eexecBytes.length\n    };\n  }\n  function Type1Font(name, file, properties) {\n    var PFB_HEADER_SIZE = 6;\n    var headerBlockLength = properties.length1;\n    var eexecBlockLength = properties.length2;\n    var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n    var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n    if (pfbHeaderPresent) {\n      file.skip(PFB_HEADER_SIZE);\n      headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var headerBlock = getHeaderBlock(file, headerBlockLength);\n    headerBlockLength = headerBlock.length;\n    var headerBlockParser = new _type1_parser.Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n    headerBlockParser.extractFontHeader(properties);\n    if (pfbHeaderPresent) {\n      pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n      eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var eexecBlock = getEexecBlock(file, eexecBlockLength);\n    eexecBlockLength = eexecBlock.length;\n    var eexecBlockParser = new _type1_parser.Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n    var data = eexecBlockParser.extractFontProgram();\n    for (var info in data.properties) {\n      properties[info] = data.properties[info];\n    }\n    var charstrings = data.charstrings;\n    var type2Charstrings = this.getType2Charstrings(charstrings);\n    var subrs = this.getType2Subrs(data.subrs);\n    this.charstrings = charstrings;\n    this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n    this.seacs = this.getSeacs(data.charstrings);\n  }\n  Type1Font.prototype = {\n    get numGlyphs() {\n      return this.charstrings.length + 1;\n    },\n    getCharset: function Type1Font_getCharset() {\n      var charset = ['.notdef'];\n      var charstrings = this.charstrings;\n      for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        charset.push(charstrings[glyphId].glyphName);\n      }\n      return charset;\n    },\n    getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n      var charstrings = this.charstrings;\n      var glyphNames = ['.notdef'],\n          glyphId;\n      for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        glyphNames.push(charstrings[glyphId].glyphName);\n      }\n      var encoding = properties.builtInEncoding;\n      if (encoding) {\n        var builtInEncoding = Object.create(null);\n        for (var charCode in encoding) {\n          glyphId = glyphNames.indexOf(encoding[charCode]);\n          if (glyphId >= 0) {\n            builtInEncoding[charCode] = glyphId;\n          }\n        }\n      }\n      return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n    },\n    getSeacs: function Type1Font_getSeacs(charstrings) {\n      var i, ii;\n      var seacMap = [];\n      for (i = 0, ii = charstrings.length; i < ii; i++) {\n        var charstring = charstrings[i];\n        if (charstring.seac) {\n          seacMap[i + 1] = charstring.seac;\n        }\n      }\n      return seacMap;\n    },\n    getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n      var type2Charstrings = [];\n      for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n        type2Charstrings.push(type1Charstrings[i].charstring);\n      }\n      return type2Charstrings;\n    },\n    getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n      var bias = 0;\n      var count = type1Subrs.length;\n      if (count < 1133) {\n        bias = 107;\n      } else if (count < 33769) {\n        bias = 1131;\n      } else {\n        bias = 32768;\n      }\n      var type2Subrs = [];\n      var i;\n      for (i = 0; i < bias; i++) {\n        type2Subrs.push([0x0B]);\n      }\n      for (i = 0; i < count; i++) {\n        type2Subrs.push(type1Subrs[i]);\n      }\n      return type2Subrs;\n    },\n    wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n      var cff = new _cff_parser.CFF();\n      cff.header = new _cff_parser.CFFHeader(1, 0, 4, 4);\n      cff.names = [name];\n      var topDict = new _cff_parser.CFFTopDict();\n      topDict.setByName('version', 391);\n      topDict.setByName('Notice', 392);\n      topDict.setByName('FullName', 393);\n      topDict.setByName('FamilyName', 394);\n      topDict.setByName('Weight', 395);\n      topDict.setByName('Encoding', null);\n      topDict.setByName('FontMatrix', properties.fontMatrix);\n      topDict.setByName('FontBBox', properties.bbox);\n      topDict.setByName('charset', null);\n      topDict.setByName('CharStrings', null);\n      topDict.setByName('Private', null);\n      cff.topDict = topDict;\n      var strings = new _cff_parser.CFFStrings();\n      strings.add('Version 0.11');\n      strings.add('See original notice');\n      strings.add(name);\n      strings.add(name);\n      strings.add('Medium');\n      cff.strings = strings;\n      cff.globalSubrIndex = new _cff_parser.CFFIndex();\n      var count = glyphs.length;\n      var charsetArray = [0];\n      var i, ii;\n      for (i = 0; i < count; i++) {\n        var index = _cff_parser.CFFStandardStrings.indexOf(charstrings[i].glyphName);\n        if (index === -1) {\n          index = 0;\n        }\n        charsetArray.push(index >> 8 & 0xff, index & 0xff);\n      }\n      cff.charset = new _cff_parser.CFFCharset(false, 0, [], charsetArray);\n      var charStringsIndex = new _cff_parser.CFFIndex();\n      charStringsIndex.add([0x8B, 0x0E]);\n      for (i = 0; i < count; i++) {\n        var glyph = glyphs[i];\n        if (glyph.length === 0) {\n          charStringsIndex.add([0x8B, 0x0E]);\n          continue;\n        }\n        charStringsIndex.add(glyph);\n      }\n      cff.charStrings = charStringsIndex;\n      var privateDict = new _cff_parser.CFFPrivateDict();\n      privateDict.setByName('Subrs', null);\n      var fields = ['BlueValues', 'OtherBlues', 'FamilyBlues', 'FamilyOtherBlues', 'StemSnapH', 'StemSnapV', 'BlueShift', 'BlueFuzz', 'BlueScale', 'LanguageGroup', 'ExpansionFactor', 'ForceBold', 'StdHW', 'StdVW'];\n      for (i = 0, ii = fields.length; i < ii; i++) {\n        var field = fields[i];\n        if (!(field in properties.privateData)) {\n          continue;\n        }\n        var value = properties.privateData[field];\n        if (Array.isArray(value)) {\n          for (var j = value.length - 1; j > 0; j--) {\n            value[j] -= value[j - 1];\n          }\n        }\n        privateDict.setByName(field, value);\n      }\n      cff.topDict.privateDict = privateDict;\n      var subrIndex = new _cff_parser.CFFIndex();\n      for (i = 0, ii = subrs.length; i < ii; i++) {\n        subrIndex.add(subrs[i]);\n      }\n      privateDict.subrsIndex = subrIndex;\n      var compiler = new _cff_parser.CFFCompiler(cff);\n      return compiler.compile();\n    }\n  };\n  return Type1Font;\n}();\nvar CFFFont = function CFFFontClosure() {\n  function CFFFont(file, properties) {\n    this.properties = properties;\n    var parser = new _cff_parser.CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n    this.cff = parser.parse();\n    var compiler = new _cff_parser.CFFCompiler(this.cff);\n    this.seacs = this.cff.seacs;\n    try {\n      this.data = compiler.compile();\n    } catch (e) {\n      (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n      this.data = file;\n    }\n  }\n  CFFFont.prototype = {\n    get numGlyphs() {\n      return this.cff.charStrings.count;\n    },\n    getCharset: function CFFFont_getCharset() {\n      return this.cff.charset.charset;\n    },\n    getGlyphMapping: function CFFFont_getGlyphMapping() {\n      var cff = this.cff;\n      var properties = this.properties;\n      var charsets = cff.charset.charset;\n      var charCodeToGlyphId;\n      var glyphId;\n      if (properties.composite) {\n        charCodeToGlyphId = Object.create(null);\n        if (cff.isCIDFont) {\n          for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n            var cid = charsets[glyphId];\n            var charCode = properties.cMap.charCodeOf(cid);\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        } else {\n          for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n            charCodeToGlyphId[glyphId] = glyphId;\n          }\n        }\n        return charCodeToGlyphId;\n      }\n      var encoding = cff.encoding ? cff.encoding.encoding : null;\n      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n      return charCodeToGlyphId;\n    }\n  };\n  return CFFFont;\n}();\n(function checkSeacSupport() {\n  if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\n    exports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED = true;\n  }\n})();\n(function checkChromeWindows() {\n  if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\n    SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n  }\n})();\nexports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\nexports.PRIVATE_USE_OFFSET_START = PRIVATE_USE_OFFSET_START;\nexports.PRIVATE_USE_OFFSET_END = PRIVATE_USE_OFFSET_END;\nexports.ErrorFont = ErrorFont;\nexports.Font = Font;\nexports.FontFlags = FontFlags;\nexports.ToUnicodeMap = ToUnicodeMap;\nexports.IdentityToUnicodeMap = IdentityToUnicodeMap;\nexports.ProblematicCharRanges = ProblematicCharRanges;\nexports.getFontType = getFontType;\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\nexports.ISOAdobeCharset = ISOAdobeCharset;\nexports.ExpertCharset = ExpertCharset;\nexports.ExpertSubsetCharset = ExpertSubsetCharset;\n\n/***/ }),\n/* 136 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FontRendererFactory = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cff_parser = __w_pdfjs_require__(78);\n\nvar _glyphlist = __w_pdfjs_require__(47);\n\nvar _encodings = __w_pdfjs_require__(27);\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar FontRendererFactory = function FontRendererFactoryClosure() {\n  function getLong(data, offset) {\n    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n  }\n  function getUshort(data, offset) {\n    return data[offset] << 8 | data[offset + 1];\n  }\n  function parseCmap(data, start, end) {\n    var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n    var format = getUshort(data, start + offset);\n    var ranges, p, i;\n    if (format === 4) {\n      getUshort(data, start + offset + 2);\n      var segCount = getUshort(data, start + offset + 6) >> 1;\n      p = start + offset + 14;\n      ranges = [];\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i] = { end: getUshort(data, p) };\n      }\n      p += 2;\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].start = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].idDelta = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        var idOffset = getUshort(data, p);\n        if (idOffset === 0) {\n          continue;\n        }\n        ranges[i].ids = [];\n        for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n          ranges[i].ids[j] = getUshort(data, p + idOffset);\n          idOffset += 2;\n        }\n      }\n      return ranges;\n    } else if (format === 12) {\n      getLong(data, start + offset + 4);\n      var groups = getLong(data, start + offset + 12);\n      p = start + offset + 16;\n      ranges = [];\n      for (i = 0; i < groups; i++) {\n        ranges.push({\n          start: getLong(data, p),\n          end: getLong(data, p + 4),\n          idDelta: getLong(data, p + 8) - getLong(data, p)\n        });\n        p += 12;\n      }\n      return ranges;\n    }\n    throw new _util.FormatError('unsupported cmap: ' + format);\n  }\n  function parseCff(data, start, end, seacAnalysisEnabled) {\n    var properties = {};\n    var parser = new _cff_parser.CFFParser(new _stream.Stream(data, start, end - start), properties, seacAnalysisEnabled);\n    var cff = parser.parse();\n    return {\n      glyphs: cff.charStrings.objects,\n      subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects\n    };\n  }\n  function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n    var itemSize, itemDecode;\n    if (isGlyphLocationsLong) {\n      itemSize = 4;\n      itemDecode = function fontItemDecodeLong(data, offset) {\n        return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n      };\n    } else {\n      itemSize = 2;\n      itemDecode = function fontItemDecode(data, offset) {\n        return data[offset] << 9 | data[offset + 1] << 1;\n      };\n    }\n    var glyphs = [];\n    var startOffset = itemDecode(loca, 0);\n    for (var j = itemSize; j < loca.length; j += itemSize) {\n      var endOffset = itemDecode(loca, j);\n      glyphs.push(glyf.subarray(startOffset, endOffset));\n      startOffset = endOffset;\n    }\n    return glyphs;\n  }\n  function lookupCmap(ranges, unicode) {\n    var code = unicode.charCodeAt(0),\n        gid = 0;\n    var l = 0,\n        r = ranges.length - 1;\n    while (l < r) {\n      var c = l + r + 1 >> 1;\n      if (code < ranges[c].start) {\n        r = c - 1;\n      } else {\n        l = c;\n      }\n    }\n    if (ranges[l].start <= code && code <= ranges[l].end) {\n      gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\n    }\n    return {\n      charCode: code,\n      glyphId: gid\n    };\n  }\n  function compileGlyf(code, cmds, font) {\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function quadraticCurveTo(xa, ya, x, y) {\n      cmds.push({\n        cmd: 'quadraticCurveTo',\n        args: [xa, ya, x, y]\n      });\n    }\n    var i = 0;\n    var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n    var flags;\n    var x = 0,\n        y = 0;\n    i += 10;\n    if (numberOfContours < 0) {\n      do {\n        flags = code[i] << 8 | code[i + 1];\n        var glyphIndex = code[i + 2] << 8 | code[i + 3];\n        i += 4;\n        var arg1, arg2;\n        if (flags & 0x01) {\n          arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n          arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n          i += 4;\n        } else {\n          arg1 = code[i++];\n          arg2 = code[i++];\n        }\n        if (flags & 0x02) {\n          x = arg1;\n          y = arg2;\n        } else {\n          x = 0;\n          y = 0;\n        }\n        var scaleX = 1,\n            scaleY = 1,\n            scale01 = 0,\n            scale10 = 0;\n        if (flags & 0x08) {\n          scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          i += 2;\n        } else if (flags & 0x40) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          i += 4;\n        } else if (flags & 0x80) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n          scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n          i += 8;\n        }\n        var subglyph = font.glyphs[glyphIndex];\n        if (subglyph) {\n          cmds.push({ cmd: 'save' });\n          cmds.push({\n            cmd: 'transform',\n            args: [scaleX, scale01, scale10, scaleY, x, y]\n          });\n          compileGlyf(subglyph, cmds, font);\n          cmds.push({ cmd: 'restore' });\n        }\n      } while (flags & 0x20);\n    } else {\n      var endPtsOfContours = [];\n      var j, jj;\n      for (j = 0; j < numberOfContours; j++) {\n        endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n        i += 2;\n      }\n      var instructionLength = code[i] << 8 | code[i + 1];\n      i += 2 + instructionLength;\n      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n      var points = [];\n      while (points.length < numberOfPoints) {\n        flags = code[i++];\n        var repeat = 1;\n        if (flags & 0x08) {\n          repeat += code[i++];\n        }\n        while (repeat-- > 0) {\n          points.push({ flags: flags });\n        }\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x12) {\n          case 0x00:\n            x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x02:\n            x -= code[i++];\n            break;\n          case 0x12:\n            x += code[i++];\n            break;\n        }\n        points[j].x = x;\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x24) {\n          case 0x00:\n            y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x04:\n            y -= code[i++];\n            break;\n          case 0x24:\n            y += code[i++];\n            break;\n        }\n        points[j].y = y;\n      }\n      var startPoint = 0;\n      for (i = 0; i < numberOfContours; i++) {\n        var endPoint = endPtsOfContours[i];\n        var contour = points.slice(startPoint, endPoint + 1);\n        if (contour[0].flags & 1) {\n          contour.push(contour[0]);\n        } else if (contour[contour.length - 1].flags & 1) {\n          contour.unshift(contour[contour.length - 1]);\n        } else {\n          var p = {\n            flags: 1,\n            x: (contour[0].x + contour[contour.length - 1].x) / 2,\n            y: (contour[0].y + contour[contour.length - 1].y) / 2\n          };\n          contour.unshift(p);\n          contour.push(p);\n        }\n        moveTo(contour[0].x, contour[0].y);\n        for (j = 1, jj = contour.length; j < jj; j++) {\n          if (contour[j].flags & 1) {\n            lineTo(contour[j].x, contour[j].y);\n          } else if (contour[j + 1].flags & 1) {\n            quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n            j++;\n          } else {\n            quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n          }\n        }\n        startPoint = endPoint + 1;\n      }\n    }\n  }\n  function compileCharString(code, cmds, font) {\n    var stack = [];\n    var x = 0,\n        y = 0;\n    var stems = 0;\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function bezierCurveTo(x1, y1, x2, y2, x, y) {\n      cmds.push({\n        cmd: 'bezierCurveTo',\n        args: [x1, y1, x2, y2, x, y]\n      });\n    }\n    function parse(code) {\n      var i = 0;\n      while (i < code.length) {\n        var stackClean = false;\n        var v = code[i++];\n        var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n        switch (v) {\n          case 1:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 3:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 4:\n            y += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 5:\n            while (stack.length > 0) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 6:\n            while (stack.length > 0) {\n              x += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 7:\n            while (stack.length > 0) {\n              y += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              x += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 8:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 10:\n            n = stack.pop() + font.subrsBias;\n            subrCode = font.subrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 11:\n            return;\n          case 12:\n            v = code[i++];\n            switch (v) {\n              case 34:\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y1 = y + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y, xb, y1, x, y1);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y, x, y);\n                break;\n              case 35:\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                stack.pop();\n                break;\n              case 36:\n                xa = x + stack.shift();\n                y1 = y + stack.shift();\n                xb = xa + stack.shift();\n                y2 = y1 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y2, x, y2);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y3 = y2 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y2, xb, y3, x, y);\n                break;\n              case 37:\n                var x0 = x,\n                    y0 = y;\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb;\n                y = yb;\n                if (Math.abs(x - x0) > Math.abs(y - y0)) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                break;\n              default:\n                throw new _util.FormatError('unknown operator: 12 ' + v);\n            }\n            break;\n          case 14:\n            if (stack.length >= 4) {\n              var achar = stack.pop();\n              var bchar = stack.pop();\n              y = stack.pop();\n              x = stack.pop();\n              cmds.push({ cmd: 'save' });\n              cmds.push({\n                cmd: 'translate',\n                args: [x, y]\n              });\n              var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n              cmds.push({ cmd: 'restore' });\n              cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n            }\n            return;\n          case 18:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 19:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 20:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 21:\n            y += stack.pop();\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 22:\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 23:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 24:\n            while (stack.length > 2) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            x += stack.shift();\n            y += stack.shift();\n            lineTo(x, y);\n            break;\n          case 25:\n            while (stack.length > 6) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            xa = x + stack.shift();\n            ya = y + stack.shift();\n            xb = xa + stack.shift();\n            yb = ya + stack.shift();\n            x = xb + stack.shift();\n            y = yb + stack.shift();\n            bezierCurveTo(xa, ya, xb, yb, x, y);\n            break;\n          case 26:\n            if (stack.length % 2) {\n              x += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb;\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 27:\n            if (stack.length % 2) {\n              y += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb;\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 28:\n            stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n            i += 2;\n            break;\n          case 29:\n            n = stack.pop() + font.gsubrsBias;\n            subrCode = font.gsubrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 30:\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 31:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          default:\n            if (v < 32) {\n              throw new _util.FormatError('unknown operator: ' + v);\n            }\n            if (v < 247) {\n              stack.push(v - 139);\n            } else if (v < 251) {\n              stack.push((v - 247) * 256 + code[i++] + 108);\n            } else if (v < 255) {\n              stack.push(-(v - 251) * 256 - code[i++] - 108);\n            } else {\n              stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n              i += 4;\n            }\n            break;\n        }\n        if (stackClean) {\n          stack.length = 0;\n        }\n      }\n    }\n    parse(code);\n  }\n  var noop = '';\n  function CompiledFont(fontMatrix) {\n    this.compiledGlyphs = Object.create(null);\n    this.compiledCharCodeToGlyphId = Object.create(null);\n    this.fontMatrix = fontMatrix;\n  }\n  CompiledFont.prototype = {\n    getPathJs: function getPathJs(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      var fn = this.compiledGlyphs[cmap.glyphId];\n      if (!fn) {\n        fn = this.compileGlyph(this.glyphs[cmap.glyphId]);\n        this.compiledGlyphs[cmap.glyphId] = fn;\n      }\n      if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n        this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n      }\n      return fn;\n    },\n    compileGlyph: function compileGlyph(code) {\n      if (!code || code.length === 0 || code[0] === 14) {\n        return noop;\n      }\n      var cmds = [];\n      cmds.push({ cmd: 'save' });\n      cmds.push({\n        cmd: 'transform',\n        args: this.fontMatrix.slice()\n      });\n      cmds.push({\n        cmd: 'scale',\n        args: ['size', '-size']\n      });\n      this.compileGlyphImpl(code, cmds);\n      cmds.push({ cmd: 'restore' });\n      return cmds;\n    },\n    compileGlyphImpl: function compileGlyphImpl() {\n      throw new Error('Children classes should implement this.');\n    },\n    hasBuiltPath: function hasBuiltPath(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n    }\n  };\n  function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n    fontMatrix = fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = glyphs;\n    this.cmap = cmap;\n  }\n  _util.Util.inherit(TrueTypeCompiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileGlyf(code, cmds, this);\n    }\n  });\n  function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n    fontMatrix = fontMatrix || [0.001, 0, 0, 0.001, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = cffInfo.glyphs;\n    this.gsubrs = cffInfo.gsubrs || [];\n    this.subrs = cffInfo.subrs || [];\n    this.cmap = cmap;\n    this.glyphNameMap = glyphNameMap || (0, _glyphlist.getGlyphsUnicode)();\n    this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\n    this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\n  }\n  _util.Util.inherit(Type2Compiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileCharString(code, cmds, this);\n    }\n  });\n  return {\n    create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n      var data = new Uint8Array(font.data);\n      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n      var numTables = getUshort(data, 4);\n      for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n        var tag = (0, _util.bytesToString)(data.subarray(p, p + 4));\n        var offset = getLong(data, p + 8);\n        var length = getLong(data, p + 12);\n        switch (tag) {\n          case 'cmap':\n            cmap = parseCmap(data, offset, offset + length);\n            break;\n          case 'glyf':\n            glyf = data.subarray(offset, offset + length);\n            break;\n          case 'loca':\n            loca = data.subarray(offset, offset + length);\n            break;\n          case 'head':\n            unitsPerEm = getUshort(data, offset + 18);\n            indexToLocFormat = getUshort(data, offset + 50);\n            break;\n          case 'CFF ':\n            cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n            break;\n        }\n      }\n      if (glyf) {\n        var fontMatrix = !unitsPerEm ? font.fontMatrix : [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0];\n        return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n      }\n      return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n    }\n  };\n}();\nexports.FontRendererFactory = FontRendererFactory;\n\n/***/ }),\n/* 137 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Type1Parser = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _encodings = __w_pdfjs_require__(27);\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar HINTING_ENABLED = false;\nvar Type1CharString = function Type1CharStringClosure() {\n  var COMMAND_MAP = {\n    'hstem': [1],\n    'vstem': [3],\n    'vmoveto': [4],\n    'rlineto': [5],\n    'hlineto': [6],\n    'vlineto': [7],\n    'rrcurveto': [8],\n    'callsubr': [10],\n    'flex': [12, 35],\n    'drop': [12, 18],\n    'endchar': [14],\n    'rmoveto': [21],\n    'hmoveto': [22],\n    'vhcurveto': [30],\n    'hvcurveto': [31]\n  };\n  function Type1CharString() {\n    this.width = 0;\n    this.lsb = 0;\n    this.flexing = false;\n    this.output = [];\n    this.stack = [];\n  }\n  Type1CharString.prototype = {\n    convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n      var count = encoded.length;\n      var error = false;\n      var wx, sbx, subrNumber;\n      for (var i = 0; i < count; i++) {\n        var value = encoded[i];\n        if (value < 32) {\n          if (value === 12) {\n            value = (value << 8) + encoded[++i];\n          }\n          switch (value) {\n            case 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case 3:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case 4:\n              if (this.flexing) {\n                if (this.stack.length < 1) {\n                  error = true;\n                  break;\n                }\n                var dy = this.stack.pop();\n                this.stack.push(0, dy);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n              break;\n            case 5:\n              error = this.executeCommand(2, COMMAND_MAP.rlineto);\n              break;\n            case 6:\n              error = this.executeCommand(1, COMMAND_MAP.hlineto);\n              break;\n            case 7:\n              error = this.executeCommand(1, COMMAND_MAP.vlineto);\n              break;\n            case 8:\n              error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n              break;\n            case 9:\n              this.stack = [];\n              break;\n            case 10:\n              if (this.stack.length < 1) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              if (!subrs[subrNumber]) {\n                error = true;\n                break;\n              }\n              error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n              break;\n            case 11:\n              return error;\n            case 13:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              wx = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx);\n              error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n              break;\n            case 14:\n              this.output.push(COMMAND_MAP.endchar[0]);\n              break;\n            case 21:\n              if (this.flexing) {\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n              break;\n            case 22:\n              if (this.flexing) {\n                this.stack.push(0);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n              break;\n            case 30:\n              error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n              break;\n            case 31:\n              error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n              break;\n            case (12 << 8) + 0:\n              this.stack = [];\n              break;\n            case (12 << 8) + 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case (12 << 8) + 2:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case (12 << 8) + 6:\n              if (seacAnalysisEnabled) {\n                this.seac = this.stack.splice(-4, 4);\n                error = this.executeCommand(0, COMMAND_MAP.endchar);\n              } else {\n                error = this.executeCommand(4, COMMAND_MAP.endchar);\n              }\n              break;\n            case (12 << 8) + 7:\n              if (this.stack.length < 4) {\n                error = true;\n                break;\n              }\n              this.stack.pop();\n              wx = this.stack.pop();\n              var sby = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx, sby);\n              error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n              break;\n            case (12 << 8) + 12:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              var num2 = this.stack.pop();\n              var num1 = this.stack.pop();\n              this.stack.push(num1 / num2);\n              break;\n            case (12 << 8) + 16:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              var numArgs = this.stack.pop();\n              if (subrNumber === 0 && numArgs === 3) {\n                var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n                this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n                error = this.executeCommand(13, COMMAND_MAP.flex, true);\n                this.flexing = false;\n                this.stack.push(flexArgs[15], flexArgs[16]);\n              } else if (subrNumber === 1 && numArgs === 0) {\n                this.flexing = true;\n              }\n              break;\n            case (12 << 8) + 17:\n              break;\n            case (12 << 8) + 33:\n              this.stack = [];\n              break;\n            default:\n              (0, _util.warn)('Unknown type 1 charstring command of \"' + value + '\"');\n              break;\n          }\n          if (error) {\n            break;\n          }\n          continue;\n        } else if (value <= 246) {\n          value = value - 139;\n        } else if (value <= 250) {\n          value = (value - 247) * 256 + encoded[++i] + 108;\n        } else if (value <= 254) {\n          value = -((value - 251) * 256) - encoded[++i] - 108;\n        } else {\n          value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n        }\n        this.stack.push(value);\n      }\n      return error;\n    },\n    executeCommand: function executeCommand(howManyArgs, command, keepStack) {\n      var stackLength = this.stack.length;\n      if (howManyArgs > stackLength) {\n        return true;\n      }\n      var start = stackLength - howManyArgs;\n      for (var i = start; i < stackLength; i++) {\n        var value = this.stack[i];\n        if (Number.isInteger(value)) {\n          this.output.push(28, value >> 8 & 0xff, value & 0xff);\n        } else {\n          value = 65536 * value | 0;\n          this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\n        }\n      }\n      this.output.push.apply(this.output, command);\n      if (keepStack) {\n        this.stack.splice(start, howManyArgs);\n      } else {\n        this.stack.length = 0;\n      }\n      return false;\n    }\n  };\n  return Type1CharString;\n}();\nvar Type1Parser = function Type1ParserClosure() {\n  var EEXEC_ENCRYPT_KEY = 55665;\n  var CHAR_STRS_ENCRYPT_KEY = 4330;\n  function isHexDigit(code) {\n    return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n  }\n  function decrypt(data, key, discardNumber) {\n    if (discardNumber >= data.length) {\n      return new Uint8Array(0);\n    }\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719,\n        i,\n        j;\n    for (i = 0; i < discardNumber; i++) {\n      r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    var count = data.length - discardNumber;\n    var decrypted = new Uint8Array(count);\n    for (i = discardNumber, j = 0; j < count; i++, j++) {\n      var value = data[i];\n      decrypted[j] = value ^ r >> 8;\n      r = (value + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    return decrypted;\n  }\n  function decryptAscii(data, key, discardNumber) {\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719;\n    var count = data.length,\n        maybeLength = count >>> 1;\n    var decrypted = new Uint8Array(maybeLength);\n    var i, j;\n    for (i = 0, j = 0; i < count; i++) {\n      var digit1 = data[i];\n      if (!isHexDigit(digit1)) {\n        continue;\n      }\n      i++;\n      var digit2;\n      while (i < count && !isHexDigit(digit2 = data[i])) {\n        i++;\n      }\n      if (i < count) {\n        var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n        decrypted[j++] = value ^ r >> 8;\n        r = (value + r) * c1 + c2 & (1 << 16) - 1;\n      }\n    }\n    return Array.prototype.slice.call(decrypted, discardNumber, j);\n  }\n  function isSpecial(c) {\n    return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\n  }\n  function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n    if (encrypted) {\n      var data = stream.getBytes();\n      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\n      stream = new _stream.Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n    }\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n    this.stream = stream;\n    this.nextChar();\n  }\n  Type1Parser.prototype = {\n    readNumberArray: function Type1Parser_readNumberArray() {\n      this.getToken();\n      var array = [];\n      while (true) {\n        var token = this.getToken();\n        if (token === null || token === ']' || token === '}') {\n          break;\n        }\n        array.push(parseFloat(token || 0));\n      }\n      return array;\n    },\n    readNumber: function Type1Parser_readNumber() {\n      var token = this.getToken();\n      return parseFloat(token || 0);\n    },\n    readInt: function Type1Parser_readInt() {\n      var token = this.getToken();\n      return parseInt(token || 0, 10) | 0;\n    },\n    readBoolean: function Type1Parser_readBoolean() {\n      var token = this.getToken();\n      return token === 'true' ? 1 : 0;\n    },\n    nextChar: function Type1_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function Type1Parser_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch === -1) {\n          return null;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      if (isSpecial(ch)) {\n        this.nextChar();\n        return String.fromCharCode(ch);\n      }\n      var token = '';\n      do {\n        token += String.fromCharCode(ch);\n        ch = this.nextChar();\n      } while (ch >= 0 && !(0, _util.isSpace)(ch) && !isSpecial(ch));\n      return token;\n    },\n    readCharStrings: function Type1Parser_readCharStrings(bytes, lenIV) {\n      if (lenIV === -1) {\n        return bytes;\n      }\n      return decrypt(bytes, CHAR_STRS_ENCRYPT_KEY, lenIV);\n    },\n    extractFontProgram: function Type1Parser_extractFontProgram() {\n      var stream = this.stream;\n      var subrs = [],\n          charstrings = [];\n      var privateData = Object.create(null);\n      privateData['lenIV'] = 4;\n      var program = {\n        subrs: [],\n        charstrings: [],\n        properties: { 'privateData': privateData }\n      };\n      var token, length, data, lenIV, encoded;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'CharStrings':\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            while (true) {\n              token = this.getToken();\n              if (token === null || token === 'end') {\n                break;\n              }\n              if (token !== '/') {\n                continue;\n              }\n              var glyph = this.getToken();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              charstrings.push({\n                glyph: glyph,\n                encoded: encoded\n              });\n            }\n            break;\n          case 'Subrs':\n            this.readInt();\n            this.getToken();\n            while ((token = this.getToken()) === 'dup') {\n              var index = this.readInt();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              subrs[index] = encoded;\n            }\n            break;\n          case 'BlueValues':\n          case 'OtherBlues':\n          case 'FamilyBlues':\n          case 'FamilyOtherBlues':\n            var blueArray = this.readNumberArray();\n            if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n              program.properties.privateData[token] = blueArray;\n            }\n            break;\n          case 'StemSnapH':\n          case 'StemSnapV':\n            program.properties.privateData[token] = this.readNumberArray();\n            break;\n          case 'StdHW':\n          case 'StdVW':\n            program.properties.privateData[token] = this.readNumberArray()[0];\n            break;\n          case 'BlueShift':\n          case 'lenIV':\n          case 'BlueFuzz':\n          case 'BlueScale':\n          case 'LanguageGroup':\n          case 'ExpansionFactor':\n            program.properties.privateData[token] = this.readNumber();\n            break;\n          case 'ForceBold':\n            program.properties.privateData[token] = this.readBoolean();\n            break;\n        }\n      }\n      for (var i = 0; i < charstrings.length; i++) {\n        glyph = charstrings[i].glyph;\n        encoded = charstrings[i].encoded;\n        var charString = new Type1CharString();\n        var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n        var output = charString.output;\n        if (error) {\n          output = [14];\n        }\n        program.charstrings.push({\n          glyphName: glyph,\n          charstring: output,\n          width: charString.width,\n          lsb: charString.lsb,\n          seac: charString.seac\n        });\n      }\n      return program;\n    },\n    extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n      var token;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'FontMatrix':\n            var matrix = this.readNumberArray();\n            properties.fontMatrix = matrix;\n            break;\n          case 'Encoding':\n            var encodingArg = this.getToken();\n            var encoding;\n            if (!/^\\d+$/.test(encodingArg)) {\n              encoding = (0, _encodings.getEncoding)(encodingArg);\n            } else {\n              encoding = [];\n              var size = parseInt(encodingArg, 10) | 0;\n              this.getToken();\n              for (var j = 0; j < size; j++) {\n                token = this.getToken();\n                while (token !== 'dup' && token !== 'def') {\n                  token = this.getToken();\n                  if (token === null) {\n                    return;\n                  }\n                }\n                if (token === 'def') {\n                  break;\n                }\n                var index = this.readInt();\n                this.getToken();\n                var glyph = this.getToken();\n                encoding[index] = glyph;\n                this.getToken();\n              }\n            }\n            properties.builtInEncoding = encoding;\n            break;\n          case 'FontBBox':\n            var fontBBox = this.readNumberArray();\n            properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n            properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n            properties.ascentScaled = true;\n            break;\n        }\n      }\n    }\n  };\n  return Type1Parser;\n}();\nexports.Type1Parser = Type1Parser;\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTilingPatternIR = exports.Pattern = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _colorspace = __w_pdfjs_require__(26);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar ShadingType = {\n  FUNCTION_BASED: 1,\n  AXIAL: 2,\n  RADIAL: 3,\n  FREE_FORM_MESH: 4,\n  LATTICE_FORM_MESH: 5,\n  COONS_PATCH_MESH: 6,\n  TENSOR_PATCH_MESH: 7\n};\nvar Pattern = function PatternClosure() {\n  function Pattern() {\n    throw new Error('should not call Pattern constructor');\n  }\n  Pattern.prototype = {\n    getPattern: function Pattern_getPattern(ctx) {\n      throw new Error('Should not call Pattern.getStyle: ' + ctx);\n    }\n  };\n  Pattern.parseShading = function (shading, matrix, xref, res, handler, pdfFunctionFactory) {\n    var dict = (0, _primitives.isStream)(shading) ? shading.dict : shading;\n    var type = dict.get('ShadingType');\n    try {\n      switch (type) {\n        case ShadingType.AXIAL:\n        case ShadingType.RADIAL:\n          return new Shadings.RadialAxial(dict, matrix, xref, res, pdfFunctionFactory);\n        case ShadingType.FREE_FORM_MESH:\n        case ShadingType.LATTICE_FORM_MESH:\n        case ShadingType.COONS_PATCH_MESH:\n        case ShadingType.TENSOR_PATCH_MESH:\n          return new Shadings.Mesh(shading, matrix, xref, res, pdfFunctionFactory);\n        default:\n          throw new _util.FormatError('Unsupported ShadingType: ' + type);\n      }\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n      handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.shadingPattern });\n      (0, _util.warn)(ex);\n      return new Shadings.Dummy();\n    }\n  };\n  return Pattern;\n}();\nvar Shadings = {};\nShadings.SMALL_NUMBER = 1e-6;\nShadings.RadialAxial = function RadialAxialClosure() {\n  function RadialAxial(dict, matrix, xref, res, pdfFunctionFactory) {\n    this.matrix = matrix;\n    this.coordsArr = dict.getArray('Coords');\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    var t0 = 0.0,\n        t1 = 1.0;\n    if (dict.has('Domain')) {\n      var domainArr = dict.getArray('Domain');\n      t0 = domainArr[0];\n      t1 = domainArr[1];\n    }\n    var extendStart = false,\n        extendEnd = false;\n    if (dict.has('Extend')) {\n      var extendArr = dict.getArray('Extend');\n      extendStart = extendArr[0];\n      extendEnd = extendArr[1];\n    }\n    if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n      var x1 = this.coordsArr[0];\n      var y1 = this.coordsArr[1];\n      var r1 = this.coordsArr[2];\n      var x2 = this.coordsArr[3];\n      var y2 = this.coordsArr[4];\n      var r2 = this.coordsArr[5];\n      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n      if (r1 <= r2 + distance && r2 <= r1 + distance) {\n        (0, _util.warn)('Unsupported radial gradient.');\n      }\n    }\n    this.extendStart = extendStart;\n    this.extendEnd = extendEnd;\n    var fnObj = dict.get('Function');\n    var fn = pdfFunctionFactory.createFromArray(fnObj);\n    var diff = t1 - t0;\n    var step = diff / 10;\n    var colorStops = this.colorStops = [];\n    if (t0 >= t1 || step <= 0) {\n      (0, _util.info)('Bad shading domain.');\n      return;\n    }\n    var color = new Float32Array(cs.numComps),\n        ratio = new Float32Array(1);\n    var rgbColor;\n    for (var i = t0; i <= t1; i += step) {\n      ratio[0] = i;\n      fn(ratio, 0, color, 0);\n      rgbColor = cs.getRgb(color, 0);\n      var cssColor = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n      colorStops.push([(i - t0) / diff, cssColor]);\n    }\n    var background = 'transparent';\n    if (dict.has('Background')) {\n      rgbColor = cs.getRgb(dict.get('Background'), 0);\n      background = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n    }\n    if (!extendStart) {\n      colorStops.unshift([0, background]);\n      colorStops[1][0] += Shadings.SMALL_NUMBER;\n    }\n    if (!extendEnd) {\n      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n      colorStops.push([1, background]);\n    }\n    this.colorStops = colorStops;\n  }\n  RadialAxial.prototype = {\n    getIR: function RadialAxial_getIR() {\n      var coordsArr = this.coordsArr;\n      var shadingType = this.shadingType;\n      var type, p0, p1, r0, r1;\n      if (shadingType === ShadingType.AXIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[2], coordsArr[3]];\n        r0 = null;\n        r1 = null;\n        type = 'axial';\n      } else if (shadingType === ShadingType.RADIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[3], coordsArr[4]];\n        r0 = coordsArr[2];\n        r1 = coordsArr[5];\n        type = 'radial';\n      } else {\n        (0, _util.unreachable)('getPattern type unknown: ' + shadingType);\n      }\n      var matrix = this.matrix;\n      if (matrix) {\n        p0 = _util.Util.applyTransform(p0, matrix);\n        p1 = _util.Util.applyTransform(p1, matrix);\n        if (shadingType === ShadingType.RADIAL) {\n          var scale = _util.Util.singularValueDecompose2dScale(matrix);\n          r0 *= scale[0];\n          r1 *= scale[1];\n        }\n      }\n      return ['RadialAxial', type, this.colorStops, p0, p1, r0, r1];\n    }\n  };\n  return RadialAxial;\n}();\nShadings.Mesh = function MeshClosure() {\n  function MeshStreamReader(stream, context) {\n    this.stream = stream;\n    this.context = context;\n    this.buffer = 0;\n    this.bufferLength = 0;\n    var numComps = context.numComps;\n    this.tmpCompsBuf = new Float32Array(numComps);\n    var csNumComps = context.colorSpace.numComps;\n    this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n  }\n  MeshStreamReader.prototype = {\n    get hasData() {\n      if (this.stream.end) {\n        return this.stream.pos < this.stream.end;\n      }\n      if (this.bufferLength > 0) {\n        return true;\n      }\n      var nextByte = this.stream.getByte();\n      if (nextByte < 0) {\n        return false;\n      }\n      this.buffer = nextByte;\n      this.bufferLength = 8;\n      return true;\n    },\n    readBits: function MeshStreamReader_readBits(n) {\n      var buffer = this.buffer;\n      var bufferLength = this.bufferLength;\n      if (n === 32) {\n        if (bufferLength === 0) {\n          return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n        }\n        buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n        var nextByte = this.stream.getByte();\n        this.buffer = nextByte & (1 << bufferLength) - 1;\n        return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\n      }\n      if (n === 8 && bufferLength === 0) {\n        return this.stream.getByte();\n      }\n      while (bufferLength < n) {\n        buffer = buffer << 8 | this.stream.getByte();\n        bufferLength += 8;\n      }\n      bufferLength -= n;\n      this.bufferLength = bufferLength;\n      this.buffer = buffer & (1 << bufferLength) - 1;\n      return buffer >> bufferLength;\n    },\n    align: function MeshStreamReader_align() {\n      this.buffer = 0;\n      this.bufferLength = 0;\n    },\n    readFlag: function MeshStreamReader_readFlag() {\n      return this.readBits(this.context.bitsPerFlag);\n    },\n    readCoordinate: function MeshStreamReader_readCoordinate() {\n      var bitsPerCoordinate = this.context.bitsPerCoordinate;\n      var xi = this.readBits(bitsPerCoordinate);\n      var yi = this.readBits(bitsPerCoordinate);\n      var decode = this.context.decode;\n      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n      return [xi * scale * (decode[1] - decode[0]) + decode[0], yi * scale * (decode[3] - decode[2]) + decode[2]];\n    },\n    readComponents: function MeshStreamReader_readComponents() {\n      var numComps = this.context.numComps;\n      var bitsPerComponent = this.context.bitsPerComponent;\n      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n      var decode = this.context.decode;\n      var components = this.tmpCompsBuf;\n      for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n        var ci = this.readBits(bitsPerComponent);\n        components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n      }\n      var color = this.tmpCsCompsBuf;\n      if (this.context.colorFn) {\n        this.context.colorFn(components, 0, color, 0);\n      }\n      return this.context.colorSpace.getRgb(color, 0);\n    }\n  };\n  function decodeType4Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var operators = [];\n    var ps = [];\n    var verticesLeft = 0;\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      if (verticesLeft === 0) {\n        if (!(0 <= f && f <= 2)) {\n          throw new _util.FormatError('Unknown type4 flag');\n        }\n        switch (f) {\n          case 0:\n            verticesLeft = 3;\n            break;\n          case 1:\n            ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n          case 2:\n            ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n        }\n        operators.push(f);\n      }\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n      verticesLeft--;\n      reader.align();\n    }\n    mesh.figures.push({\n      type: 'triangles',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps)\n    });\n  }\n  function decodeType5Shading(mesh, reader, verticesPerRow) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = [];\n    while (reader.hasData) {\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n    }\n    mesh.figures.push({\n      type: 'lattice',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps),\n      verticesPerRow: verticesPerRow\n    });\n  }\n  var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n  var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n  var TRIANGLE_DENSITY = 20;\n  var getB = function getBClosure() {\n    function buildB(count) {\n      var lut = [];\n      for (var i = 0; i <= count; i++) {\n        var t = i / count,\n            t_ = 1 - t;\n        lut.push(new Float32Array([t_ * t_ * t_, 3 * t * t_ * t_, 3 * t * t * t_, t * t * t]));\n      }\n      return lut;\n    }\n    var cache = [];\n    return function getB(count) {\n      if (!cache[count]) {\n        cache[count] = buildB(count);\n      }\n      return cache[count];\n    };\n  }();\n  function buildFigureFromPatch(mesh, index) {\n    var figure = mesh.figures[index];\n    (0, _util.assert)(figure.type === 'patch', 'Unexpected patch mesh figure');\n    var coords = mesh.coords,\n        colors = mesh.colors;\n    var pi = figure.coords;\n    var ci = figure.colors;\n    var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n    splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n    var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n    splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n    var verticesPerRow = splitXBy + 1;\n    var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var k = 0;\n    var cl = new Uint8Array(3),\n        cr = new Uint8Array(3);\n    var c0 = colors[ci[0]],\n        c1 = colors[ci[1]],\n        c2 = colors[ci[2]],\n        c3 = colors[ci[3]];\n    var bRow = getB(splitYBy),\n        bCol = getB(splitXBy);\n    for (var row = 0; row <= splitYBy; row++) {\n      cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n      cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n      cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n      cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n      cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n      cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n      for (var col = 0; col <= splitXBy; col++, k++) {\n        if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n          continue;\n        }\n        var x = 0,\n            y = 0;\n        var q = 0;\n        for (var i = 0; i <= 3; i++) {\n          for (var j = 0; j <= 3; j++, q++) {\n            var m = bRow[row][i] * bCol[col][j];\n            x += coords[pi[q]][0] * m;\n            y += coords[pi[q]][1] * m;\n          }\n        }\n        figureCoords[k] = coords.length;\n        coords.push([x, y]);\n        figureColors[k] = colors.length;\n        var newColor = new Uint8Array(3);\n        newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n        newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n        newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n        colors.push(newColor);\n      }\n    }\n    figureCoords[0] = pi[0];\n    figureColors[0] = ci[0];\n    figureCoords[splitXBy] = pi[3];\n    figureColors[splitXBy] = ci[1];\n    figureCoords[verticesPerRow * splitYBy] = pi[12];\n    figureColors[verticesPerRow * splitYBy] = ci[2];\n    figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n    figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n    mesh.figures[index] = {\n      type: 'lattice',\n      coords: figureCoords,\n      colors: figureColors,\n      verticesPerRow: verticesPerRow\n    };\n  }\n  function decodeType6Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type6 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      ps[5] = coords.length;\n      coords.push([(-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9, (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9]);\n      ps[6] = coords.length;\n      coords.push([(-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9, (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9]);\n      ps[9] = coords.length;\n      coords.push([(-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9, (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9]);\n      ps[10] = coords.length;\n      coords.push([(-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9, (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9]);\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function decodeType7Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type7 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[9] = pi + 13;\n          ps[10] = pi + 14;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[5] = pi + 12;\n          ps[6] = pi + 15;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function updateBounds(mesh) {\n    var minX = mesh.coords[0][0],\n        minY = mesh.coords[0][1],\n        maxX = minX,\n        maxY = minY;\n    for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n      var x = mesh.coords[i][0],\n          y = mesh.coords[i][1];\n      minX = minX > x ? x : minX;\n      minY = minY > y ? y : minY;\n      maxX = maxX < x ? x : maxX;\n      maxY = maxY < y ? y : maxY;\n    }\n    mesh.bounds = [minX, minY, maxX, maxY];\n  }\n  function packData(mesh) {\n    var i, ii, j, jj;\n    var coords = mesh.coords;\n    var coordsPacked = new Float32Array(coords.length * 2);\n    for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n      var xy = coords[i];\n      coordsPacked[j++] = xy[0];\n      coordsPacked[j++] = xy[1];\n    }\n    mesh.coords = coordsPacked;\n    var colors = mesh.colors;\n    var colorsPacked = new Uint8Array(colors.length * 3);\n    for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n      var c = colors[i];\n      colorsPacked[j++] = c[0];\n      colorsPacked[j++] = c[1];\n      colorsPacked[j++] = c[2];\n    }\n    mesh.colors = colorsPacked;\n    var figures = mesh.figures;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n          ps = figure.coords,\n          cs = figure.colors;\n      for (j = 0, jj = ps.length; j < jj; j++) {\n        ps[j] *= 2;\n        cs[j] *= 3;\n      }\n    }\n  }\n  function Mesh(stream, matrix, xref, res, pdfFunctionFactory) {\n    if (!(0, _primitives.isStream)(stream)) {\n      throw new _util.FormatError('Mesh data is not a stream');\n    }\n    var dict = stream.dict;\n    this.matrix = matrix;\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    this.bbox = dict.getArray('BBox');\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\n    var fnObj = dict.get('Function');\n    var fn = fnObj ? pdfFunctionFactory.createFromArray(fnObj) : null;\n    this.coords = [];\n    this.colors = [];\n    this.figures = [];\n    var decodeContext = {\n      bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n      bitsPerComponent: dict.get('BitsPerComponent'),\n      bitsPerFlag: dict.get('BitsPerFlag'),\n      decode: dict.getArray('Decode'),\n      colorFn: fn,\n      colorSpace: cs,\n      numComps: fn ? 1 : cs.numComps\n    };\n    var reader = new MeshStreamReader(stream, decodeContext);\n    var patchMesh = false;\n    switch (this.shadingType) {\n      case ShadingType.FREE_FORM_MESH:\n        decodeType4Shading(this, reader);\n        break;\n      case ShadingType.LATTICE_FORM_MESH:\n        var verticesPerRow = dict.get('VerticesPerRow') | 0;\n        if (verticesPerRow < 2) {\n          throw new _util.FormatError('Invalid VerticesPerRow');\n        }\n        decodeType5Shading(this, reader, verticesPerRow);\n        break;\n      case ShadingType.COONS_PATCH_MESH:\n        decodeType6Shading(this, reader);\n        patchMesh = true;\n        break;\n      case ShadingType.TENSOR_PATCH_MESH:\n        decodeType7Shading(this, reader);\n        patchMesh = true;\n        break;\n      default:\n        (0, _util.unreachable)('Unsupported mesh type.');\n        break;\n    }\n    if (patchMesh) {\n      updateBounds(this);\n      for (var i = 0, ii = this.figures.length; i < ii; i++) {\n        buildFigureFromPatch(this, i);\n      }\n    }\n    updateBounds(this);\n    packData(this);\n  }\n  Mesh.prototype = {\n    getIR: function Mesh_getIR() {\n      return ['Mesh', this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.matrix, this.bbox, this.background];\n    }\n  };\n  return Mesh;\n}();\nShadings.Dummy = function DummyClosure() {\n  function Dummy() {\n    this.type = 'Pattern';\n  }\n  Dummy.prototype = {\n    getIR: function Dummy_getIR() {\n      return ['Dummy'];\n    }\n  };\n  return Dummy;\n}();\nfunction getTilingPatternIR(operatorList, dict, args) {\n  var matrix = dict.getArray('Matrix');\n  var bbox = _util.Util.normalizeRect(dict.getArray('BBox'));\n  var xstep = dict.get('XStep');\n  var ystep = dict.get('YStep');\n  var paintType = dict.get('PaintType');\n  var tilingType = dict.get('TilingType');\n  if (bbox[2] - bbox[0] === 0 || bbox[3] - bbox[1] === 0) {\n    throw new _util.FormatError('Invalid getTilingPatternIR /BBox array: [' + bbox + '].');\n  }\n  return ['TilingPattern', args, operatorList, matrix, bbox, xstep, ystep, paintType, tilingType];\n}\nexports.Pattern = Pattern;\nexports.getTilingPatternIR = getTilingPatternIR;\n\n/***/ }),\n/* 139 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bidi = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar baseTypes = ['BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'S', 'B', 'S', 'WS', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'B', 'B', 'S', 'WS', 'ON', 'ON', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'ON', 'ES', 'CS', 'ES', 'CS', 'CS', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'CS', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'CS', 'ON', 'ET', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'L', 'ON', 'ON', 'BN', 'ON', 'ON', 'ET', 'ET', 'EN', 'EN', 'ON', 'L', 'ON', 'ON', 'ON', 'EN', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L'];\nvar arabicTypes = ['AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ON', 'ON', 'AL', 'ET', 'ET', 'AL', 'CS', 'AL', 'ON', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', '', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ET', 'AN', 'AN', 'AL', 'AL', 'AL', 'NSM', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'NSM', 'NSM', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL'];\nfunction isOdd(i) {\n  return (i & 1) !== 0;\n}\nfunction isEven(i) {\n  return (i & 1) === 0;\n}\nfunction findUnequal(arr, start, value) {\n  for (var j = start, jj = arr.length; j < jj; ++j) {\n    if (arr[j] !== value) {\n      return j;\n    }\n  }\n  return j;\n}\nfunction setValues(arr, start, end, value) {\n  for (var j = start; j < end; ++j) {\n    arr[j] = value;\n  }\n}\nfunction reverseValues(arr, start, end) {\n  for (var i = start, j = end - 1; i < j; ++i, --j) {\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n}\nfunction createBidiText(str, isLTR, vertical) {\n  return {\n    str: str,\n    dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\n  };\n}\nvar chars = [];\nvar types = [];\nfunction bidi(str, startLevel, vertical) {\n  var isLTR = true;\n  var strLength = str.length;\n  if (strLength === 0 || vertical) {\n    return createBidiText(str, isLTR, vertical);\n  }\n  chars.length = strLength;\n  types.length = strLength;\n  var numBidi = 0;\n  var i, ii;\n  for (i = 0; i < strLength; ++i) {\n    chars[i] = str.charAt(i);\n    var charCode = str.charCodeAt(i);\n    var charType = 'L';\n    if (charCode <= 0x00ff) {\n      charType = baseTypes[charCode];\n    } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n      charType = 'R';\n    } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n      charType = arabicTypes[charCode & 0xff];\n      if (!charType) {\n        (0, _util.warn)('Bidi: invalid Unicode character ' + charCode.toString(16));\n      }\n    } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n      charType = 'AL';\n    }\n    if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n      numBidi++;\n    }\n    types[i] = charType;\n  }\n  if (numBidi === 0) {\n    isLTR = true;\n    return createBidiText(str, isLTR);\n  }\n  if (startLevel === -1) {\n    if (numBidi / strLength < 0.3) {\n      isLTR = true;\n      startLevel = 0;\n    } else {\n      isLTR = false;\n      startLevel = 1;\n    }\n  }\n  var levels = [];\n  for (i = 0; i < strLength; ++i) {\n    levels[i] = startLevel;\n  }\n  var e = isOdd(startLevel) ? 'R' : 'L';\n  var sor = e;\n  var eor = sor;\n  var lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'NSM') {\n      types[i] = lastType;\n    } else {\n      lastType = types[i];\n    }\n  }\n  lastType = sor;\n  var t;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'AL' ? 'AN' : 'EN';\n    } else if (t === 'R' || t === 'L' || t === 'AL') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'AL') {\n      types[i] = 'R';\n    }\n  }\n  for (i = 1; i < strLength - 1; ++i) {\n    if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n      types[i] = 'EN';\n    }\n    if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\n      types[i] = types[i - 1];\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'EN') {\n      var j;\n      for (j = i - 1; j >= 0; --j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n      for (j = i + 1; j < strLength; ++j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n      types[i] = 'ON';\n    }\n  }\n  lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'L' ? 'L' : 'EN';\n    } else if (t === 'R' || t === 'L') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      var end = findUnequal(types, i + 1, 'ON');\n      var before = sor;\n      if (i > 0) {\n        before = types[i - 1];\n      }\n      var after = eor;\n      if (end + 1 < strLength) {\n        after = types[end + 1];\n      }\n      if (before !== 'L') {\n        before = 'R';\n      }\n      if (after !== 'L') {\n        after = 'R';\n      }\n      if (before === after) {\n        setValues(types, i, end, before);\n      }\n      i = end - 1;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      types[i] = e;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (isEven(levels[i])) {\n      if (t === 'R') {\n        levels[i] += 1;\n      } else if (t === 'AN' || t === 'EN') {\n        levels[i] += 2;\n      }\n    } else {\n      if (t === 'L' || t === 'AN' || t === 'EN') {\n        levels[i] += 1;\n      }\n    }\n  }\n  var highestLevel = -1;\n  var lowestOddLevel = 99;\n  var level;\n  for (i = 0, ii = levels.length; i < ii; ++i) {\n    level = levels[i];\n    if (highestLevel < level) {\n      highestLevel = level;\n    }\n    if (lowestOddLevel > level && isOdd(level)) {\n      lowestOddLevel = level;\n    }\n  }\n  for (level = highestLevel; level >= lowestOddLevel; --level) {\n    var start = -1;\n    for (i = 0, ii = levels.length; i < ii; ++i) {\n      if (levels[i] < level) {\n        if (start >= 0) {\n          reverseValues(chars, start, i);\n          start = -1;\n        }\n      } else if (start < 0) {\n        start = i;\n      }\n    }\n    if (start >= 0) {\n      reverseValues(chars, start, levels.length);\n    }\n  }\n  for (i = 0, ii = chars.length; i < ii; ++i) {\n    var ch = chars[i];\n    if (ch === '<' || ch === '>') {\n      chars[i] = '';\n    }\n  }\n  return createBidiText(chars.join(''), isLTR);\n}\nexports.bidi = bidi;\n\n/***/ }),\n/* 140 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMetrics = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar getMetrics = (0, _util.getLookupTableFactory)(function (t) {\n  t['Courier'] = 600;\n  t['Courier-Bold'] = 600;\n  t['Courier-BoldOblique'] = 600;\n  t['Courier-Oblique'] = 600;\n  t['Helvetica'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-BoldOblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Oblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Symbol'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['universal'] = 713;\n    t['numbersign'] = 500;\n    t['existential'] = 549;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['suchthat'] = 439;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asteriskmath'] = 500;\n    t['plus'] = 549;\n    t['comma'] = 250;\n    t['minus'] = 549;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 549;\n    t['equal'] = 549;\n    t['greater'] = 549;\n    t['question'] = 444;\n    t['congruent'] = 549;\n    t['Alpha'] = 722;\n    t['Beta'] = 667;\n    t['Chi'] = 722;\n    t['Delta'] = 612;\n    t['Epsilon'] = 611;\n    t['Phi'] = 763;\n    t['Gamma'] = 603;\n    t['Eta'] = 722;\n    t['Iota'] = 333;\n    t['theta1'] = 631;\n    t['Kappa'] = 722;\n    t['Lambda'] = 686;\n    t['Mu'] = 889;\n    t['Nu'] = 722;\n    t['Omicron'] = 722;\n    t['Pi'] = 768;\n    t['Theta'] = 741;\n    t['Rho'] = 556;\n    t['Sigma'] = 592;\n    t['Tau'] = 611;\n    t['Upsilon'] = 690;\n    t['sigma1'] = 439;\n    t['Omega'] = 768;\n    t['Xi'] = 645;\n    t['Psi'] = 795;\n    t['Zeta'] = 611;\n    t['bracketleft'] = 333;\n    t['therefore'] = 863;\n    t['bracketright'] = 333;\n    t['perpendicular'] = 658;\n    t['underscore'] = 500;\n    t['radicalex'] = 500;\n    t['alpha'] = 631;\n    t['beta'] = 549;\n    t['chi'] = 549;\n    t['delta'] = 494;\n    t['epsilon'] = 439;\n    t['phi'] = 521;\n    t['gamma'] = 411;\n    t['eta'] = 603;\n    t['iota'] = 329;\n    t['phi1'] = 603;\n    t['kappa'] = 549;\n    t['lambda'] = 549;\n    t['mu'] = 576;\n    t['nu'] = 521;\n    t['omicron'] = 549;\n    t['pi'] = 549;\n    t['theta'] = 521;\n    t['rho'] = 549;\n    t['sigma'] = 603;\n    t['tau'] = 439;\n    t['upsilon'] = 576;\n    t['omega1'] = 713;\n    t['omega'] = 686;\n    t['xi'] = 493;\n    t['psi'] = 686;\n    t['zeta'] = 494;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['similar'] = 549;\n    t['Euro'] = 750;\n    t['Upsilon1'] = 620;\n    t['minute'] = 247;\n    t['lessequal'] = 549;\n    t['fraction'] = 167;\n    t['infinity'] = 713;\n    t['florin'] = 500;\n    t['club'] = 753;\n    t['diamond'] = 753;\n    t['heart'] = 753;\n    t['spade'] = 753;\n    t['arrowboth'] = 1042;\n    t['arrowleft'] = 987;\n    t['arrowup'] = 603;\n    t['arrowright'] = 987;\n    t['arrowdown'] = 603;\n    t['degree'] = 400;\n    t['plusminus'] = 549;\n    t['second'] = 411;\n    t['greaterequal'] = 549;\n    t['multiply'] = 549;\n    t['proportional'] = 713;\n    t['partialdiff'] = 494;\n    t['bullet'] = 460;\n    t['divide'] = 549;\n    t['notequal'] = 549;\n    t['equivalence'] = 549;\n    t['approxequal'] = 549;\n    t['ellipsis'] = 1000;\n    t['arrowvertex'] = 603;\n    t['arrowhorizex'] = 1000;\n    t['carriagereturn'] = 658;\n    t['aleph'] = 823;\n    t['Ifraktur'] = 686;\n    t['Rfraktur'] = 795;\n    t['weierstrass'] = 987;\n    t['circlemultiply'] = 768;\n    t['circleplus'] = 768;\n    t['emptyset'] = 823;\n    t['intersection'] = 768;\n    t['union'] = 768;\n    t['propersuperset'] = 713;\n    t['reflexsuperset'] = 713;\n    t['notsubset'] = 713;\n    t['propersubset'] = 713;\n    t['reflexsubset'] = 713;\n    t['element'] = 713;\n    t['notelement'] = 713;\n    t['angle'] = 768;\n    t['gradient'] = 713;\n    t['registerserif'] = 790;\n    t['copyrightserif'] = 790;\n    t['trademarkserif'] = 890;\n    t['product'] = 823;\n    t['radical'] = 549;\n    t['dotmath'] = 250;\n    t['logicalnot'] = 713;\n    t['logicaland'] = 603;\n    t['logicalor'] = 603;\n    t['arrowdblboth'] = 1042;\n    t['arrowdblleft'] = 987;\n    t['arrowdblup'] = 603;\n    t['arrowdblright'] = 987;\n    t['arrowdbldown'] = 603;\n    t['lozenge'] = 494;\n    t['angleleft'] = 329;\n    t['registersans'] = 790;\n    t['copyrightsans'] = 790;\n    t['trademarksans'] = 786;\n    t['summation'] = 713;\n    t['parenlefttp'] = 384;\n    t['parenleftex'] = 384;\n    t['parenleftbt'] = 384;\n    t['bracketlefttp'] = 384;\n    t['bracketleftex'] = 384;\n    t['bracketleftbt'] = 384;\n    t['bracelefttp'] = 494;\n    t['braceleftmid'] = 494;\n    t['braceleftbt'] = 494;\n    t['braceex'] = 494;\n    t['angleright'] = 329;\n    t['integral'] = 274;\n    t['integraltp'] = 686;\n    t['integralex'] = 686;\n    t['integralbt'] = 686;\n    t['parenrighttp'] = 384;\n    t['parenrightex'] = 384;\n    t['parenrightbt'] = 384;\n    t['bracketrighttp'] = 384;\n    t['bracketrightex'] = 384;\n    t['bracketrightbt'] = 384;\n    t['bracerighttp'] = 494;\n    t['bracerightmid'] = 494;\n    t['bracerightbt'] = 494;\n    t['apple'] = 790;\n  });\n  t['Times-Roman'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 408;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 564;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 564;\n    t['equal'] = 564;\n    t['greater'] = 564;\n    t['question'] = 444;\n    t['at'] = 921;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 556;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 389;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 556;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 944;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 469;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 444;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 333;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 180;\n    t['quotedblleft'] = 444;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 453;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 444;\n    t['quotedblright'] = 444;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 444;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 889;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 444;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 564;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 444;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 444;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 444;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 444;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 444;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 444;\n    t['Amacron'] = 722;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 556;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 588;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 564;\n    t['uacute'] = 500;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 444;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 333;\n    t['plusminus'] = 564;\n    t['brokenbar'] = 200;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 333;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 326;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 444;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 344;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 564;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 564;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 1000;\n    t['ampersand'] = 833;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 930;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 778;\n    t['L'] = 667;\n    t['M'] = 944;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 611;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 556;\n    t['T'] = 667;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 1000;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 667;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 581;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 556;\n    t['c'] = 444;\n    t['d'] = 556;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 333;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 444;\n    t['s'] = 389;\n    t['t'] = 333;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 394;\n    t['bar'] = 220;\n    t['braceright'] = 394;\n    t['asciitilde'] = 520;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 540;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 300;\n    t['Lslash'] = 667;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 330;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 556;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 570;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 667;\n    t['Cacute'] = 722;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 722;\n    t['rcaron'] = 444;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 667;\n    t['Thorn'] = 611;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 556;\n    t['dcaron'] = 672;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 667;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 444;\n    t['omacron'] = 500;\n    t['Zacute'] = 667;\n    t['Zcaron'] = 667;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 416;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 394;\n    t['Kcommaaccent'] = 778;\n    t['Lacute'] = 667;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 667;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 444;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 667;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 570;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 570;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-BoldItalic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 389;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 832;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 667;\n    t['G'] = 722;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 889;\n    t['X'] = 667;\n    t['Y'] = 611;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 570;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 500;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 348;\n    t['bar'] = 220;\n    t['braceright'] = 348;\n    t['asciitilde'] = 570;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 500;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 944;\n    t['ordfeminine'] = 266;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 300;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 611;\n    t['divide'] = 570;\n    t['Yacute'] = 611;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 667;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 608;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 366;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 576;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 382;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 606;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 606;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Italic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 420;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 675;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 675;\n    t['equal'] = 675;\n    t['greater'] = 675;\n    t['question'] = 500;\n    t['at'] = 920;\n    t['A'] = 611;\n    t['B'] = 611;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 611;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 444;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 667;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 611;\n    t['S'] = 500;\n    t['T'] = 556;\n    t['U'] = 722;\n    t['V'] = 611;\n    t['W'] = 833;\n    t['X'] = 611;\n    t['Y'] = 556;\n    t['Z'] = 556;\n    t['bracketleft'] = 389;\n    t['backslash'] = 278;\n    t['bracketright'] = 389;\n    t['asciicircum'] = 422;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 278;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 444;\n    t['l'] = 278;\n    t['m'] = 722;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 444;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 400;\n    t['bar'] = 275;\n    t['braceright'] = 400;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 214;\n    t['quotedblleft'] = 556;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 523;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 556;\n    t['quotedblright'] = 556;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 889;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 889;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 556;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 667;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 556;\n    t['divide'] = 675;\n    t['Yacute'] = 556;\n    t['Acircumflex'] = 611;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 667;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 556;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 611;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 611;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 556;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 611;\n    t['Sacute'] = 500;\n    t['dcaron'] = 544;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 611;\n    t['Abreve'] = 611;\n    t['multiply'] = 675;\n    t['uacute'] = 500;\n    t['Tcaron'] = 556;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 667;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 667;\n    t['Iacute'] = 333;\n    t['plusminus'] = 675;\n    t['brokenbar'] = 275;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 556;\n    t['Zcaron'] = 556;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 300;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 611;\n    t['Adieresis'] = 611;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 500;\n    t['lcaron'] = 300;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 500;\n    t['Scommaaccent'] = 500;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 667;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 611;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 611;\n    t['Aogonek'] = 611;\n    t['Aring'] = 611;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 444;\n    t['minus'] = 675;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 675;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['ZapfDingbats'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['a1'] = 974;\n    t['a2'] = 961;\n    t['a202'] = 974;\n    t['a3'] = 980;\n    t['a4'] = 719;\n    t['a5'] = 789;\n    t['a119'] = 790;\n    t['a118'] = 791;\n    t['a117'] = 690;\n    t['a11'] = 960;\n    t['a12'] = 939;\n    t['a13'] = 549;\n    t['a14'] = 855;\n    t['a15'] = 911;\n    t['a16'] = 933;\n    t['a105'] = 911;\n    t['a17'] = 945;\n    t['a18'] = 974;\n    t['a19'] = 755;\n    t['a20'] = 846;\n    t['a21'] = 762;\n    t['a22'] = 761;\n    t['a23'] = 571;\n    t['a24'] = 677;\n    t['a25'] = 763;\n    t['a26'] = 760;\n    t['a27'] = 759;\n    t['a28'] = 754;\n    t['a6'] = 494;\n    t['a7'] = 552;\n    t['a8'] = 537;\n    t['a9'] = 577;\n    t['a10'] = 692;\n    t['a29'] = 786;\n    t['a30'] = 788;\n    t['a31'] = 788;\n    t['a32'] = 790;\n    t['a33'] = 793;\n    t['a34'] = 794;\n    t['a35'] = 816;\n    t['a36'] = 823;\n    t['a37'] = 789;\n    t['a38'] = 841;\n    t['a39'] = 823;\n    t['a40'] = 833;\n    t['a41'] = 816;\n    t['a42'] = 831;\n    t['a43'] = 923;\n    t['a44'] = 744;\n    t['a45'] = 723;\n    t['a46'] = 749;\n    t['a47'] = 790;\n    t['a48'] = 792;\n    t['a49'] = 695;\n    t['a50'] = 776;\n    t['a51'] = 768;\n    t['a52'] = 792;\n    t['a53'] = 759;\n    t['a54'] = 707;\n    t['a55'] = 708;\n    t['a56'] = 682;\n    t['a57'] = 701;\n    t['a58'] = 826;\n    t['a59'] = 815;\n    t['a60'] = 789;\n    t['a61'] = 789;\n    t['a62'] = 707;\n    t['a63'] = 687;\n    t['a64'] = 696;\n    t['a65'] = 689;\n    t['a66'] = 786;\n    t['a67'] = 787;\n    t['a68'] = 713;\n    t['a69'] = 791;\n    t['a70'] = 785;\n    t['a71'] = 791;\n    t['a72'] = 873;\n    t['a73'] = 761;\n    t['a74'] = 762;\n    t['a203'] = 762;\n    t['a75'] = 759;\n    t['a204'] = 759;\n    t['a76'] = 892;\n    t['a77'] = 892;\n    t['a78'] = 788;\n    t['a79'] = 784;\n    t['a81'] = 438;\n    t['a82'] = 138;\n    t['a83'] = 277;\n    t['a84'] = 415;\n    t['a97'] = 392;\n    t['a98'] = 392;\n    t['a99'] = 668;\n    t['a100'] = 668;\n    t['a89'] = 390;\n    t['a90'] = 390;\n    t['a93'] = 317;\n    t['a94'] = 317;\n    t['a91'] = 276;\n    t['a92'] = 276;\n    t['a205'] = 509;\n    t['a85'] = 509;\n    t['a206'] = 410;\n    t['a86'] = 410;\n    t['a87'] = 234;\n    t['a88'] = 234;\n    t['a95'] = 334;\n    t['a96'] = 334;\n    t['a101'] = 732;\n    t['a102'] = 544;\n    t['a103'] = 544;\n    t['a104'] = 910;\n    t['a106'] = 667;\n    t['a107'] = 760;\n    t['a108'] = 760;\n    t['a112'] = 776;\n    t['a111'] = 595;\n    t['a110'] = 694;\n    t['a109'] = 626;\n    t['a120'] = 788;\n    t['a121'] = 788;\n    t['a122'] = 788;\n    t['a123'] = 788;\n    t['a124'] = 788;\n    t['a125'] = 788;\n    t['a126'] = 788;\n    t['a127'] = 788;\n    t['a128'] = 788;\n    t['a129'] = 788;\n    t['a130'] = 788;\n    t['a131'] = 788;\n    t['a132'] = 788;\n    t['a133'] = 788;\n    t['a134'] = 788;\n    t['a135'] = 788;\n    t['a136'] = 788;\n    t['a137'] = 788;\n    t['a138'] = 788;\n    t['a139'] = 788;\n    t['a140'] = 788;\n    t['a141'] = 788;\n    t['a142'] = 788;\n    t['a143'] = 788;\n    t['a144'] = 788;\n    t['a145'] = 788;\n    t['a146'] = 788;\n    t['a147'] = 788;\n    t['a148'] = 788;\n    t['a149'] = 788;\n    t['a150'] = 788;\n    t['a151'] = 788;\n    t['a152'] = 788;\n    t['a153'] = 788;\n    t['a154'] = 788;\n    t['a155'] = 788;\n    t['a156'] = 788;\n    t['a157'] = 788;\n    t['a158'] = 788;\n    t['a159'] = 788;\n    t['a160'] = 894;\n    t['a161'] = 838;\n    t['a163'] = 1016;\n    t['a164'] = 458;\n    t['a196'] = 748;\n    t['a165'] = 924;\n    t['a192'] = 748;\n    t['a166'] = 918;\n    t['a167'] = 927;\n    t['a168'] = 928;\n    t['a169'] = 928;\n    t['a170'] = 834;\n    t['a171'] = 873;\n    t['a172'] = 828;\n    t['a173'] = 924;\n    t['a162'] = 924;\n    t['a174'] = 917;\n    t['a175'] = 930;\n    t['a176'] = 931;\n    t['a177'] = 463;\n    t['a178'] = 883;\n    t['a179'] = 836;\n    t['a193'] = 836;\n    t['a180'] = 867;\n    t['a199'] = 867;\n    t['a181'] = 696;\n    t['a200'] = 696;\n    t['a182'] = 874;\n    t['a201'] = 874;\n    t['a183'] = 760;\n    t['a184'] = 946;\n    t['a197'] = 771;\n    t['a185'] = 865;\n    t['a194'] = 771;\n    t['a198'] = 888;\n    t['a186'] = 967;\n    t['a195'] = 888;\n    t['a187'] = 831;\n    t['a188'] = 873;\n    t['a189'] = 927;\n    t['a190'] = 970;\n    t['a191'] = 918;\n  });\n});\nexports.getMetrics = getMetrics;\n\n/***/ }),\n/* 141 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptParser = exports.PostScriptLexer = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar PostScriptParser = function PostScriptParserClosure() {\n  function PostScriptParser(lexer) {\n    this.lexer = lexer;\n    this.operators = [];\n    this.token = null;\n    this.prev = null;\n  }\n  PostScriptParser.prototype = {\n    nextToken: function PostScriptParser_nextToken() {\n      this.prev = this.token;\n      this.token = this.lexer.getToken();\n    },\n    accept: function PostScriptParser_accept(type) {\n      if (this.token.type === type) {\n        this.nextToken();\n        return true;\n      }\n      return false;\n    },\n    expect: function PostScriptParser_expect(type) {\n      if (this.accept(type)) {\n        return true;\n      }\n      throw new _util.FormatError('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\n    },\n    parse: function PostScriptParser_parse() {\n      this.nextToken();\n      this.expect(PostScriptTokenTypes.LBRACE);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      return this.operators;\n    },\n    parseBlock: function PostScriptParser_parseBlock() {\n      while (true) {\n        if (this.accept(PostScriptTokenTypes.NUMBER)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n          this.parseCondition();\n        } else {\n          return;\n        }\n      }\n    },\n    parseCondition: function PostScriptParser_parseCondition() {\n      var conditionLocation = this.operators.length;\n      this.operators.push(null, null);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      if (this.accept(PostScriptTokenTypes.IF)) {\n        this.operators[conditionLocation] = this.operators.length;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n        var jumpLocation = this.operators.length;\n        this.operators.push(null, null);\n        var endOfTrue = this.operators.length;\n        this.parseBlock();\n        this.expect(PostScriptTokenTypes.RBRACE);\n        this.expect(PostScriptTokenTypes.IFELSE);\n        this.operators[jumpLocation] = this.operators.length;\n        this.operators[jumpLocation + 1] = 'j';\n        this.operators[conditionLocation] = endOfTrue;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else {\n        throw new _util.FormatError('PS Function: error parsing conditional.');\n      }\n    }\n  };\n  return PostScriptParser;\n}();\nvar PostScriptTokenTypes = {\n  LBRACE: 0,\n  RBRACE: 1,\n  NUMBER: 2,\n  OPERATOR: 3,\n  IF: 4,\n  IFELSE: 5\n};\nvar PostScriptToken = function PostScriptTokenClosure() {\n  function PostScriptToken(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n  var opCache = Object.create(null);\n  PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n    var opValue = opCache[op];\n    if (opValue) {\n      return opValue;\n    }\n    return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n  };\n  PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\n  PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\n  PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n  PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\n  return PostScriptToken;\n}();\nvar PostScriptLexer = function PostScriptLexerClosure() {\n  function PostScriptLexer(stream) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n  }\n  PostScriptLexer.prototype = {\n    nextChar: function PostScriptLexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function PostScriptLexer_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n        case 0x7B:\n          this.nextChar();\n          return PostScriptToken.LBRACE;\n        case 0x7D:\n          this.nextChar();\n          return PostScriptToken.RBRACE;\n      }\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\n        strBuf.push(String.fromCharCode(ch));\n      }\n      var str = strBuf.join('');\n      switch (str.toLowerCase()) {\n        case 'if':\n          return PostScriptToken.IF;\n        case 'ifelse':\n          return PostScriptToken.IFELSE;\n        default:\n          return PostScriptToken.getOperator(str);\n      }\n    },\n    getNumber: function PostScriptLexer_getNumber() {\n      var ch = this.currentChar;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0) {\n        if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\n          strBuf.push(String.fromCharCode(ch));\n        } else {\n          break;\n        }\n      }\n      var value = parseFloat(strBuf.join(''));\n      if (isNaN(value)) {\n        throw new _util.FormatError('Invalid floating point number: ' + value);\n      }\n      return value;\n    }\n  };\n  return PostScriptLexer;\n}();\nexports.PostScriptLexer = PostScriptLexer;\nexports.PostScriptParser = PostScriptParser;\n\n/***/ }),\n/* 142 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\n  var MASK_HIGH = 0xffff0000;\n  var MASK_LOW = 0xffff;\n  function MurmurHash3_64(seed) {\n    var SEED = 0xc3d2e1f0;\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n  MurmurHash3_64.prototype = {\n    update: function MurmurHash3_64_update(input) {\n      var i;\n      if (typeof input === 'string') {\n        var data = new Uint8Array(input.length * 2);\n        var length = 0;\n        for (i = 0; i < input.length; i++) {\n          var code = input.charCodeAt(i);\n          if (code <= 0xff) {\n            data[length++] = code;\n          } else {\n            data[length++] = code >>> 8;\n            data[length++] = code & 0xff;\n          }\n        }\n      } else if ((typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' && 'byteLength' in input) {\n        data = input;\n        length = data.byteLength;\n      } else {\n        throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\n      }\n      var blockCounts = length >> 2;\n      var tailLength = length - blockCounts * 4;\n      var dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n      var k1 = 0;\n      var k2 = 0;\n      var h1 = this.h1;\n      var h2 = this.h2;\n      var C1 = 0xcc9e2d51;\n      var C2 = 0x1b873593;\n      var C1_LOW = C1 & MASK_LOW;\n      var C2_LOW = C2 & MASK_LOW;\n      for (i = 0; i < blockCounts; i++) {\n        if (i & 1) {\n          k1 = dataUint32[i];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          h1 ^= k1;\n          h1 = h1 << 13 | h1 >>> 19;\n          h1 = h1 * 5 + 0xe6546b64;\n        } else {\n          k2 = dataUint32[i];\n          k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n          k2 = k2 << 15 | k2 >>> 17;\n          k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n          h2 ^= k2;\n          h2 = h2 << 13 | h2 >>> 19;\n          h2 = h2 * 5 + 0xe6546b64;\n        }\n      }\n      k1 = 0;\n      switch (tailLength) {\n        case 3:\n          k1 ^= data[blockCounts * 4 + 2] << 16;\n        case 2:\n          k1 ^= data[blockCounts * 4 + 1] << 8;\n        case 1:\n          k1 ^= data[blockCounts * 4];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          if (blockCounts & 1) {\n            h1 ^= k1;\n          } else {\n            h2 ^= k1;\n          }\n      }\n      this.h1 = h1;\n      this.h2 = h2;\n      return this;\n    },\n    hexdigest: function MurmurHash3_64_hexdigest() {\n      var h1 = this.h1;\n      var h2 = this.h2;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n      h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n      h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      for (var i = 0, arr = [h1, h2], str = ''; i < arr.length; i++) {\n        var hex = (arr[i] >>> 0).toString(16);\n        while (hex.length < 8) {\n          hex = '0' + hex;\n        }\n        str += hex;\n      }\n      return str;\n    }\n  };\n  return MurmurHash3_64;\n}();\nexports.MurmurHash3_64 = MurmurHash3_64;\n\n/***/ }),\n/* 143 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFImage = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _colorspace = __w_pdfjs_require__(26);\n\nvar _jpx = __w_pdfjs_require__(74);\n\nvar PDFImage = function PDFImageClosure() {\n  function handleImageData(image, nativeDecoder) {\n    if (nativeDecoder && nativeDecoder.canDecode(image)) {\n      return nativeDecoder.decode(image);\n    }\n    return Promise.resolve(image);\n  }\n  function decodeAndClamp(value, addend, coefficient, max) {\n    value = addend + value * coefficient;\n    return value < 0 ? 0 : value > max ? max : value;\n  }\n  function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n    var length = w2 * h2;\n    var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio);\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex];\n      }\n    }\n    return dest;\n  }\n  function PDFImage(_ref) {\n    var xref = _ref.xref,\n        res = _ref.res,\n        image = _ref.image,\n        _ref$smask = _ref.smask,\n        smask = _ref$smask === undefined ? null : _ref$smask,\n        _ref$mask = _ref.mask,\n        mask = _ref$mask === undefined ? null : _ref$mask,\n        _ref$isMask = _ref.isMask,\n        isMask = _ref$isMask === undefined ? false : _ref$isMask,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.image = image;\n    var dict = image.dict;\n    if (dict.has('Filter')) {\n      var filter = dict.get('Filter').name;\n      if (filter === 'JPXDecode') {\n        var jpxImage = new _jpx.JpxImage();\n        jpxImage.parseImageProperties(image.stream);\n        image.stream.reset();\n        image.bitsPerComponent = jpxImage.bitsPerComponent;\n        image.numComps = jpxImage.componentsCount;\n      } else if (filter === 'JBIG2Decode') {\n        image.bitsPerComponent = 1;\n        image.numComps = 1;\n      }\n    }\n    this.width = dict.get('Width', 'W');\n    this.height = dict.get('Height', 'H');\n    if (this.width < 1 || this.height < 1) {\n      throw new _util.FormatError('Invalid image width: ' + this.width + ' or ' + ('height: ' + this.height));\n    }\n    this.interpolate = dict.get('Interpolate', 'I') || false;\n    this.imageMask = dict.get('ImageMask', 'IM') || false;\n    this.matte = dict.get('Matte') || false;\n    var bitsPerComponent = image.bitsPerComponent;\n    if (!bitsPerComponent) {\n      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n      if (!bitsPerComponent) {\n        if (this.imageMask) {\n          bitsPerComponent = 1;\n        } else {\n          throw new _util.FormatError('Bits per component missing in image: ' + this.imageMask);\n        }\n      }\n    }\n    this.bpc = bitsPerComponent;\n    if (!this.imageMask) {\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      if (!colorSpace) {\n        (0, _util.info)('JPX images (which do not require color spaces)');\n        switch (image.numComps) {\n          case 1:\n            colorSpace = _primitives.Name.get('DeviceGray');\n            break;\n          case 3:\n            colorSpace = _primitives.Name.get('DeviceRGB');\n            break;\n          case 4:\n            colorSpace = _primitives.Name.get('DeviceCMYK');\n            break;\n          default:\n            throw new Error('JPX images with ' + this.numComps + ' ' + 'color components not supported.');\n        }\n      }\n      this.colorSpace = _colorspace.ColorSpace.parse(colorSpace, xref, res, pdfFunctionFactory);\n      this.numComps = this.colorSpace.numComps;\n    }\n    this.decode = dict.getArray('Decode', 'D');\n    this.needsDecode = false;\n    if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !_colorspace.ColorSpace.isDefaultDecode(this.decode, 1))) {\n      this.needsDecode = true;\n      var max = (1 << bitsPerComponent) - 1;\n      this.decodeCoefficients = [];\n      this.decodeAddends = [];\n      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n        var dmin = this.decode[i];\n        var dmax = this.decode[i + 1];\n        this.decodeCoefficients[j] = dmax - dmin;\n        this.decodeAddends[j] = max * dmin;\n      }\n    }\n    if (smask) {\n      this.smask = new PDFImage({\n        xref: xref,\n        res: res,\n        image: smask,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    } else if (mask) {\n      if ((0, _primitives.isStream)(mask)) {\n        var maskDict = mask.dict,\n            imageMask = maskDict.get('ImageMask', 'IM');\n        if (!imageMask) {\n          (0, _util.warn)('Ignoring /Mask in image without /ImageMask.');\n        } else {\n          this.mask = new PDFImage({\n            xref: xref,\n            res: res,\n            image: mask,\n            isMask: true,\n            pdfFunctionFactory: pdfFunctionFactory\n          });\n        }\n      } else {\n        this.mask = mask;\n      }\n    }\n  }\n  PDFImage.buildImage = function (_ref2) {\n    var handler = _ref2.handler,\n        xref = _ref2.xref,\n        res = _ref2.res,\n        image = _ref2.image,\n        _ref2$nativeDecoder = _ref2.nativeDecoder,\n        nativeDecoder = _ref2$nativeDecoder === undefined ? null : _ref2$nativeDecoder,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    var imagePromise = handleImageData(image, nativeDecoder);\n    var smaskPromise;\n    var maskPromise;\n    var smask = image.dict.get('SMask');\n    var mask = image.dict.get('Mask');\n    if (smask) {\n      smaskPromise = handleImageData(smask, nativeDecoder);\n      maskPromise = Promise.resolve(null);\n    } else {\n      smaskPromise = Promise.resolve(null);\n      if (mask) {\n        if ((0, _primitives.isStream)(mask)) {\n          maskPromise = handleImageData(mask, nativeDecoder);\n        } else if (Array.isArray(mask)) {\n          maskPromise = Promise.resolve(mask);\n        } else {\n          (0, _util.warn)('Unsupported mask format.');\n          maskPromise = Promise.resolve(null);\n        }\n      } else {\n        maskPromise = Promise.resolve(null);\n      }\n    }\n    return Promise.all([imagePromise, smaskPromise, maskPromise]).then(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 3),\n          imageData = _ref4[0],\n          smaskData = _ref4[1],\n          maskData = _ref4[2];\n\n      return new PDFImage({\n        xref: xref,\n        res: res,\n        image: imageData,\n        smask: smaskData,\n        mask: maskData,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    });\n  };\n  PDFImage.createMask = function (_ref5) {\n    var imgArray = _ref5.imgArray,\n        width = _ref5.width,\n        height = _ref5.height,\n        imageIsFromDecodeStream = _ref5.imageIsFromDecodeStream,\n        inverseDecode = _ref5.inverseDecode;\n\n    var computedLength = (width + 7 >> 3) * height;\n    var actualLength = imgArray.byteLength;\n    var haveFullData = computedLength === actualLength;\n    var data, i;\n    if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n      data = imgArray;\n    } else if (!inverseDecode) {\n      data = new Uint8Array(actualLength);\n      data.set(imgArray);\n    } else {\n      data = new Uint8Array(computedLength);\n      data.set(imgArray);\n      for (i = actualLength; i < computedLength; i++) {\n        data[i] = 0xff;\n      }\n    }\n    if (inverseDecode) {\n      for (i = 0; i < actualLength; i++) {\n        data[i] ^= 0xFF;\n      }\n    }\n    return {\n      data: data,\n      width: width,\n      height: height\n    };\n  };\n  PDFImage.prototype = {\n    get drawWidth() {\n      return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n    },\n    get drawHeight() {\n      return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n    },\n    decodeBuffer: function decodeBuffer(buffer) {\n      var bpc = this.bpc;\n      var numComps = this.numComps;\n      var decodeAddends = this.decodeAddends;\n      var decodeCoefficients = this.decodeCoefficients;\n      var max = (1 << bpc) - 1;\n      var i, ii;\n      if (bpc === 1) {\n        for (i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = +!buffer[i];\n        }\n        return;\n      }\n      var index = 0;\n      for (i = 0, ii = this.width * this.height; i < ii; i++) {\n        for (var j = 0; j < numComps; j++) {\n          buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n          index++;\n        }\n      }\n    },\n    getComponents: function getComponents(buffer) {\n      var bpc = this.bpc;\n      if (bpc === 8) {\n        return buffer;\n      }\n      var width = this.width;\n      var height = this.height;\n      var numComps = this.numComps;\n      var length = width * height * numComps;\n      var bufferPos = 0;\n      var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n      var rowComps = width * numComps;\n      var max = (1 << bpc) - 1;\n      var i = 0,\n          ii,\n          buf;\n      if (bpc === 1) {\n        var mask, loop1End, loop2End;\n        for (var j = 0; j < height; j++) {\n          loop1End = i + (rowComps & ~7);\n          loop2End = i + rowComps;\n          while (i < loop1End) {\n            buf = buffer[bufferPos++];\n            output[i] = buf >> 7 & 1;\n            output[i + 1] = buf >> 6 & 1;\n            output[i + 2] = buf >> 5 & 1;\n            output[i + 3] = buf >> 4 & 1;\n            output[i + 4] = buf >> 3 & 1;\n            output[i + 5] = buf >> 2 & 1;\n            output[i + 6] = buf >> 1 & 1;\n            output[i + 7] = buf & 1;\n            i += 8;\n          }\n          if (i < loop2End) {\n            buf = buffer[bufferPos++];\n            mask = 128;\n            while (i < loop2End) {\n              output[i++] = +!!(buf & mask);\n              mask >>= 1;\n            }\n          }\n        }\n      } else {\n        var bits = 0;\n        buf = 0;\n        for (i = 0, ii = length; i < ii; ++i) {\n          if (i % rowComps === 0) {\n            buf = 0;\n            bits = 0;\n          }\n          while (bits < bpc) {\n            buf = buf << 8 | buffer[bufferPos++];\n            bits += 8;\n          }\n          var remainingBits = bits - bpc;\n          var value = buf >> remainingBits;\n          output[i] = value < 0 ? 0 : value > max ? max : value;\n          buf = buf & (1 << remainingBits) - 1;\n          bits = remainingBits;\n        }\n      }\n      return output;\n    },\n    fillOpacity: function fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n      var smask = this.smask;\n      var mask = this.mask;\n      var alphaBuf, sw, sh, i, ii, j;\n      if (smask) {\n        sw = smask.width;\n        sh = smask.height;\n        alphaBuf = new Uint8Array(sw * sh);\n        smask.fillGrayBuffer(alphaBuf);\n        if (sw !== width || sh !== height) {\n          alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n        }\n      } else if (mask) {\n        if (mask instanceof PDFImage) {\n          sw = mask.width;\n          sh = mask.height;\n          alphaBuf = new Uint8Array(sw * sh);\n          mask.numComps = 1;\n          mask.fillGrayBuffer(alphaBuf);\n          for (i = 0, ii = sw * sh; i < ii; ++i) {\n            alphaBuf[i] = 255 - alphaBuf[i];\n          }\n          if (sw !== width || sh !== height) {\n            alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n          }\n        } else if (Array.isArray(mask)) {\n          alphaBuf = new Uint8Array(width * height);\n          var numComps = this.numComps;\n          for (i = 0, ii = width * height; i < ii; ++i) {\n            var opacity = 0;\n            var imageOffset = i * numComps;\n            for (j = 0; j < numComps; ++j) {\n              var color = image[imageOffset + j];\n              var maskOffset = j * 2;\n              if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n                opacity = 255;\n                break;\n              }\n            }\n            alphaBuf[i] = opacity;\n          }\n        } else {\n          throw new _util.FormatError('Unknown mask format.');\n        }\n      }\n      if (alphaBuf) {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = alphaBuf[i];\n        }\n      } else {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = 255;\n        }\n      }\n    },\n    undoPreblend: function undoPreblend(buffer, width, height) {\n      var matte = this.smask && this.smask.matte;\n      if (!matte) {\n        return;\n      }\n      var matteRgb = this.colorSpace.getRgb(matte, 0);\n      var matteR = matteRgb[0];\n      var matteG = matteRgb[1];\n      var matteB = matteRgb[2];\n      var length = width * height * 4;\n      var r, g, b;\n      for (var i = 0; i < length; i += 4) {\n        var alpha = buffer[i + 3];\n        if (alpha === 0) {\n          buffer[i] = 255;\n          buffer[i + 1] = 255;\n          buffer[i + 2] = 255;\n          continue;\n        }\n        var k = 255 / alpha;\n        r = (buffer[i] - matteR) * k + matteR;\n        g = (buffer[i + 1] - matteG) * k + matteG;\n        b = (buffer[i + 2] - matteB) * k + matteB;\n        buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n        buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n        buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n      }\n    },\n    createImageData: function createImageData() {\n      var forceRGBA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var drawWidth = this.drawWidth;\n      var drawHeight = this.drawHeight;\n      var imgData = {\n        width: drawWidth,\n        height: drawHeight\n      };\n      var numComps = this.numComps;\n      var originalWidth = this.width;\n      var originalHeight = this.height;\n      var bpc = this.bpc;\n      var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n      var imgArray;\n      if (!forceRGBA) {\n        var kind;\n        if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n          kind = _util.ImageKind.GRAYSCALE_1BPP;\n        } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\n          kind = _util.ImageKind.RGB_24BPP;\n        }\n        if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n          imgData.kind = kind;\n          imgArray = this.getImageBytes(originalHeight * rowBytes);\n          if (this.image instanceof _stream.DecodeStream) {\n            imgData.data = imgArray;\n          } else {\n            var newArray = new Uint8Array(imgArray.length);\n            newArray.set(imgArray);\n            imgData.data = newArray;\n          }\n          if (this.needsDecode) {\n            (0, _util.assert)(kind === _util.ImageKind.GRAYSCALE_1BPP);\n            var buffer = imgData.data;\n            for (var i = 0, ii = buffer.length; i < ii; i++) {\n              buffer[i] ^= 0xff;\n            }\n          }\n          return imgData;\n        }\n        if (this.image instanceof _stream.JpegStream && !this.smask && !this.mask && (this.colorSpace.name === 'DeviceGray' || this.colorSpace.name === 'DeviceRGB' || this.colorSpace.name === 'DeviceCMYK')) {\n          imgData.kind = _util.ImageKind.RGB_24BPP;\n          imgData.data = this.getImageBytes(originalHeight * rowBytes, drawWidth, drawHeight, true);\n          return imgData;\n        }\n      }\n      imgArray = this.getImageBytes(originalHeight * rowBytes);\n      var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n      var comps = this.getComponents(imgArray);\n      var alpha01, maybeUndoPreblend;\n      if (!forceRGBA && !this.smask && !this.mask) {\n        imgData.kind = _util.ImageKind.RGB_24BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n        alpha01 = 0;\n        maybeUndoPreblend = false;\n      } else {\n        imgData.kind = _util.ImageKind.RGBA_32BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n        alpha01 = 1;\n        maybeUndoPreblend = true;\n        this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n      if (maybeUndoPreblend) {\n        this.undoPreblend(imgData.data, drawWidth, actualHeight);\n      }\n      return imgData;\n    },\n    fillGrayBuffer: function fillGrayBuffer(buffer) {\n      var numComps = this.numComps;\n      if (numComps !== 1) {\n        throw new _util.FormatError('Reading gray scale from a color image: ' + numComps);\n      }\n      var width = this.width;\n      var height = this.height;\n      var bpc = this.bpc;\n      var rowBytes = width * numComps * bpc + 7 >> 3;\n      var imgArray = this.getImageBytes(height * rowBytes);\n      var comps = this.getComponents(imgArray);\n      var i, length;\n      if (bpc === 1) {\n        length = width * height;\n        if (this.needsDecode) {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = comps[i] - 1 & 255;\n          }\n        } else {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = -comps[i] & 255;\n          }\n        }\n        return;\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      length = width * height;\n      var scale = 255 / ((1 << bpc) - 1);\n      for (i = 0; i < length; ++i) {\n        buffer[i] = scale * comps[i] | 0;\n      }\n    },\n    getImageBytes: function getImageBytes(length, drawWidth, drawHeight) {\n      var forceRGB = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      this.image.reset();\n      this.image.drawWidth = drawWidth || this.width;\n      this.image.drawHeight = drawHeight || this.height;\n      this.image.forceRGB = !!forceRGB;\n      return this.image.getBytes(length);\n    }\n  };\n  return PDFImage;\n}();\nexports.PDFImage = PDFImage;\n\n/***/ }),\n/* 144 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnnotationFactory = exports.AnnotationBorderStyle = exports.Annotation = undefined;\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _obj = __w_pdfjs_require__(73);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _colorspace = __w_pdfjs_require__(26);\n\nvar _evaluator = __w_pdfjs_require__(77);\n\nvar _stream = __w_pdfjs_require__(5);\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AnnotationFactory = function () {\n  function AnnotationFactory() {\n    _classCallCheck(this, AnnotationFactory);\n  }\n\n  _createClass(AnnotationFactory, null, [{\n    key: 'create',\n    value: function create(xref, ref, pdfManager, idFactory) {\n      var dict = xref.fetchIfRef(ref);\n      if (!(0, _primitives.isDict)(dict)) {\n        return;\n      }\n      var id = (0, _primitives.isRef)(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\n      var subtype = dict.get('Subtype');\n      subtype = (0, _primitives.isName)(subtype) ? subtype.name : null;\n      var parameters = {\n        xref: xref,\n        dict: dict,\n        ref: (0, _primitives.isRef)(ref) ? ref : null,\n        subtype: subtype,\n        id: id,\n        pdfManager: pdfManager\n      };\n      switch (subtype) {\n        case 'Link':\n          return new LinkAnnotation(parameters);\n        case 'Text':\n          return new TextAnnotation(parameters);\n        case 'Widget':\n          var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\n          fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n          switch (fieldType) {\n            case 'Tx':\n              return new TextWidgetAnnotation(parameters);\n            case 'Btn':\n              return new ButtonWidgetAnnotation(parameters);\n            case 'Ch':\n              return new ChoiceWidgetAnnotation(parameters);\n          }\n          (0, _util.warn)('Unimplemented widget field type \"' + fieldType + '\", ' + 'falling back to base field type.');\n          return new WidgetAnnotation(parameters);\n        case 'Popup':\n          return new PopupAnnotation(parameters);\n        case 'Line':\n          return new LineAnnotation(parameters);\n        case 'Square':\n          return new SquareAnnotation(parameters);\n        case 'Circle':\n          return new CircleAnnotation(parameters);\n        case 'PolyLine':\n          return new PolylineAnnotation(parameters);\n        case 'Polygon':\n          return new PolygonAnnotation(parameters);\n        case 'Highlight':\n          return new HighlightAnnotation(parameters);\n        case 'Underline':\n          return new UnderlineAnnotation(parameters);\n        case 'Squiggly':\n          return new SquigglyAnnotation(parameters);\n        case 'StrikeOut':\n          return new StrikeOutAnnotation(parameters);\n        case 'Stamp':\n          return new StampAnnotation(parameters);\n        case 'FileAttachment':\n          return new FileAttachmentAnnotation(parameters);\n        default:\n          if (!subtype) {\n            (0, _util.warn)('Annotation is missing the required /Subtype.');\n          } else {\n            (0, _util.warn)('Unimplemented annotation type \"' + subtype + '\", ' + 'falling back to base annotation.');\n          }\n          return new Annotation(parameters);\n      }\n    }\n  }]);\n\n  return AnnotationFactory;\n}();\n\nfunction getTransformMatrix(rect, bbox, matrix) {\n  var bounds = _util.Util.getAxialAlignedBoundingBox(bbox, matrix);\n  var minX = bounds[0];\n  var minY = bounds[1];\n  var maxX = bounds[2];\n  var maxY = bounds[3];\n  if (minX === maxX || minY === maxY) {\n    return [1, 0, 0, 1, rect[0], rect[1]];\n  }\n  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n  return [xRatio, 0, 0, yRatio, rect[0] - minX * xRatio, rect[1] - minY * yRatio];\n}\n\nvar Annotation = function () {\n  function Annotation(params) {\n    _classCallCheck(this, Annotation);\n\n    var dict = params.dict;\n    this.setFlags(dict.get('F'));\n    this.setRectangle(dict.getArray('Rect'));\n    this.setColor(dict.getArray('C'));\n    this.setBorderStyle(dict);\n    this.setAppearance(dict);\n    this.data = {\n      annotationFlags: this.flags,\n      borderStyle: this.borderStyle,\n      color: this.color,\n      hasAppearance: !!this.appearance,\n      id: params.id,\n      rect: this.rectangle,\n      subtype: params.subtype\n    };\n  }\n\n  _createClass(Annotation, [{\n    key: '_hasFlag',\n    value: function _hasFlag(flags, flag) {\n      return !!(flags & flag);\n    }\n  }, {\n    key: '_isViewable',\n    value: function _isViewable(flags) {\n      return !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN) && !this._hasFlag(flags, _util.AnnotationFlag.NOVIEW);\n    }\n  }, {\n    key: '_isPrintable',\n    value: function _isPrintable(flags) {\n      return this._hasFlag(flags, _util.AnnotationFlag.PRINT) && !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN);\n    }\n  }, {\n    key: 'setFlags',\n    value: function setFlags(flags) {\n      this.flags = Number.isInteger(flags) && flags > 0 ? flags : 0;\n    }\n  }, {\n    key: 'hasFlag',\n    value: function hasFlag(flag) {\n      return this._hasFlag(this.flags, flag);\n    }\n  }, {\n    key: 'setRectangle',\n    value: function setRectangle(rectangle) {\n      if (Array.isArray(rectangle) && rectangle.length === 4) {\n        this.rectangle = _util.Util.normalizeRect(rectangle);\n      } else {\n        this.rectangle = [0, 0, 0, 0];\n      }\n    }\n  }, {\n    key: 'setColor',\n    value: function setColor(color) {\n      var rgbColor = new Uint8Array(3);\n      if (!Array.isArray(color)) {\n        this.color = rgbColor;\n        return;\n      }\n      switch (color.length) {\n        case 0:\n          this.color = null;\n          break;\n        case 1:\n          _colorspace.ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 3:\n          _colorspace.ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 4:\n          _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        default:\n          this.color = rgbColor;\n          break;\n      }\n    }\n  }, {\n    key: 'setBorderStyle',\n    value: function setBorderStyle(borderStyle) {\n      this.borderStyle = new AnnotationBorderStyle();\n      if (!(0, _primitives.isDict)(borderStyle)) {\n        return;\n      }\n      if (borderStyle.has('BS')) {\n        var dict = borderStyle.get('BS');\n        var dictType = dict.get('Type');\n        if (!dictType || (0, _primitives.isName)(dictType, 'Border')) {\n          this.borderStyle.setWidth(dict.get('W'));\n          this.borderStyle.setStyle(dict.get('S'));\n          this.borderStyle.setDashArray(dict.getArray('D'));\n        }\n      } else if (borderStyle.has('Border')) {\n        var array = borderStyle.getArray('Border');\n        if (Array.isArray(array) && array.length >= 3) {\n          this.borderStyle.setHorizontalCornerRadius(array[0]);\n          this.borderStyle.setVerticalCornerRadius(array[1]);\n          this.borderStyle.setWidth(array[2]);\n          if (array.length === 4) {\n            this.borderStyle.setDashArray(array[3]);\n          }\n        }\n      } else {\n        this.borderStyle.setWidth(0);\n      }\n    }\n  }, {\n    key: 'setAppearance',\n    value: function setAppearance(dict) {\n      this.appearance = null;\n      var appearanceStates = dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if ((0, _primitives.isStream)(normalAppearanceState)) {\n        this.appearance = normalAppearanceState;\n        return;\n      }\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var as = dict.get('AS');\n      if (!(0, _primitives.isName)(as) || !normalAppearanceState.has(as.name)) {\n        return;\n      }\n      this.appearance = normalAppearanceState.get(as.name);\n    }\n  }, {\n    key: '_preparePopup',\n    value: function _preparePopup(dict) {\n      if (!dict.has('C')) {\n        this.data.color = null;\n      }\n      this.data.hasPopup = dict.has('Popup');\n      this.data.title = (0, _util.stringToPDFString)(dict.get('T') || '');\n      this.data.contents = (0, _util.stringToPDFString)(dict.get('Contents') || '');\n    }\n  }, {\n    key: 'loadResources',\n    value: function loadResources(keys) {\n      return this.appearance.dict.getAsync('Resources').then(function (resources) {\n        if (!resources) {\n          return;\n        }\n        var objectLoader = new _obj.ObjectLoader(resources, keys, resources.xref);\n        return objectLoader.load().then(function () {\n          return resources;\n        });\n      });\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      var _this = this;\n\n      if (!this.appearance) {\n        return Promise.resolve(new _evaluator.OperatorList());\n      }\n      var data = this.data;\n      var appearanceDict = this.appearance.dict;\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var bbox = appearanceDict.getArray('BBox') || [0, 0, 1, 1];\n      var matrix = appearanceDict.getArray('Matrix') || [1, 0, 0, 1, 0, 0];\n      var transform = getTransformMatrix(data.rect, bbox, matrix);\n      return resourcesPromise.then(function (resources) {\n        var opList = new _evaluator.OperatorList();\n        opList.addOp(_util.OPS.beginAnnotation, [data.rect, transform, matrix]);\n        return evaluator.getOperatorList({\n          stream: _this.appearance,\n          task: task,\n          resources: resources,\n          operatorList: opList\n        }).then(function () {\n          opList.addOp(_util.OPS.endAnnotation, []);\n          _this.appearance.reset();\n          return opList;\n        });\n      });\n    }\n  }, {\n    key: 'viewable',\n    get: function get() {\n      if (this.flags === 0) {\n        return true;\n      }\n      return this._isViewable(this.flags);\n    }\n  }, {\n    key: 'printable',\n    get: function get() {\n      if (this.flags === 0) {\n        return false;\n      }\n      return this._isPrintable(this.flags);\n    }\n  }]);\n\n  return Annotation;\n}();\n\nvar AnnotationBorderStyle = function () {\n  function AnnotationBorderStyle() {\n    _classCallCheck(this, AnnotationBorderStyle);\n\n    this.width = 1;\n    this.style = _util.AnnotationBorderStyleType.SOLID;\n    this.dashArray = [3];\n    this.horizontalCornerRadius = 0;\n    this.verticalCornerRadius = 0;\n  }\n\n  _createClass(AnnotationBorderStyle, [{\n    key: 'setWidth',\n    value: function setWidth(width) {\n      if (Number.isInteger(width)) {\n        this.width = width;\n      }\n    }\n  }, {\n    key: 'setStyle',\n    value: function setStyle(style) {\n      if (!style) {\n        return;\n      }\n      switch (style.name) {\n        case 'S':\n          this.style = _util.AnnotationBorderStyleType.SOLID;\n          break;\n        case 'D':\n          this.style = _util.AnnotationBorderStyleType.DASHED;\n          break;\n        case 'B':\n          this.style = _util.AnnotationBorderStyleType.BEVELED;\n          break;\n        case 'I':\n          this.style = _util.AnnotationBorderStyleType.INSET;\n          break;\n        case 'U':\n          this.style = _util.AnnotationBorderStyleType.UNDERLINE;\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'setDashArray',\n    value: function setDashArray(dashArray) {\n      if (Array.isArray(dashArray) && dashArray.length > 0) {\n        var isValid = true;\n        var allZeros = true;\n        for (var i = 0, len = dashArray.length; i < len; i++) {\n          var element = dashArray[i];\n          var validNumber = +element >= 0;\n          if (!validNumber) {\n            isValid = false;\n            break;\n          } else if (element > 0) {\n            allZeros = false;\n          }\n        }\n        if (isValid && !allZeros) {\n          this.dashArray = dashArray;\n        } else {\n          this.width = 0;\n        }\n      } else if (dashArray) {\n        this.width = 0;\n      }\n    }\n  }, {\n    key: 'setHorizontalCornerRadius',\n    value: function setHorizontalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.horizontalCornerRadius = radius;\n      }\n    }\n  }, {\n    key: 'setVerticalCornerRadius',\n    value: function setVerticalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.verticalCornerRadius = radius;\n      }\n    }\n  }]);\n\n  return AnnotationBorderStyle;\n}();\n\nvar WidgetAnnotation = function (_Annotation) {\n  _inherits(WidgetAnnotation, _Annotation);\n\n  function WidgetAnnotation(params) {\n    _classCallCheck(this, WidgetAnnotation);\n\n    var _this2 = _possibleConstructorReturn(this, (WidgetAnnotation.__proto__ || Object.getPrototypeOf(WidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    var data = _this2.data;\n    data.annotationType = _util.AnnotationType.WIDGET;\n    data.fieldName = _this2._constructFieldName(dict);\n    data.fieldValue = _util.Util.getInheritableProperty(dict, 'V', true);\n    data.alternativeText = (0, _util.stringToPDFString)(dict.get('TU') || '');\n    data.defaultAppearance = _util.Util.getInheritableProperty(dict, 'DA') || '';\n    var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\n    data.fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n    _this2.fieldResources = _util.Util.getInheritableProperty(dict, 'DR') || _primitives.Dict.empty;\n    data.fieldFlags = _util.Util.getInheritableProperty(dict, 'Ff');\n    if (!Number.isInteger(data.fieldFlags) || data.fieldFlags < 0) {\n      data.fieldFlags = 0;\n    }\n    data.readOnly = _this2.hasFieldFlag(_util.AnnotationFieldFlag.READONLY);\n    if (data.fieldType === 'Sig') {\n      _this2.setFlags(_util.AnnotationFlag.HIDDEN);\n    }\n    return _this2;\n  }\n\n  _createClass(WidgetAnnotation, [{\n    key: '_constructFieldName',\n    value: function _constructFieldName(dict) {\n      if (!dict.has('T') && !dict.has('Parent')) {\n        (0, _util.warn)('Unknown field name, falling back to empty field name.');\n        return '';\n      }\n      if (!dict.has('Parent')) {\n        return (0, _util.stringToPDFString)(dict.get('T'));\n      }\n      var fieldName = [];\n      if (dict.has('T')) {\n        fieldName.unshift((0, _util.stringToPDFString)(dict.get('T')));\n      }\n      var loopDict = dict;\n      while (loopDict.has('Parent')) {\n        loopDict = loopDict.get('Parent');\n        if (!(0, _primitives.isDict)(loopDict)) {\n          break;\n        }\n        if (loopDict.has('T')) {\n          fieldName.unshift((0, _util.stringToPDFString)(loopDict.get('T')));\n        }\n      }\n      return fieldName.join('.');\n    }\n  }, {\n    key: 'hasFieldFlag',\n    value: function hasFieldFlag(flag) {\n      return !!(this.data.fieldFlags & flag);\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms) {\n        return Promise.resolve(new _evaluator.OperatorList());\n      }\n      return _get(WidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(WidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n    }\n  }]);\n\n  return WidgetAnnotation;\n}(Annotation);\n\nvar TextWidgetAnnotation = function (_WidgetAnnotation) {\n  _inherits(TextWidgetAnnotation, _WidgetAnnotation);\n\n  function TextWidgetAnnotation(params) {\n    _classCallCheck(this, TextWidgetAnnotation);\n\n    var _this3 = _possibleConstructorReturn(this, (TextWidgetAnnotation.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation)).call(this, params));\n\n    _this3.data.fieldValue = (0, _util.stringToPDFString)(_this3.data.fieldValue || '');\n    var alignment = _util.Util.getInheritableProperty(params.dict, 'Q');\n    if (!Number.isInteger(alignment) || alignment < 0 || alignment > 2) {\n      alignment = null;\n    }\n    _this3.data.textAlignment = alignment;\n    var maximumLength = _util.Util.getInheritableProperty(params.dict, 'MaxLen');\n    if (!Number.isInteger(maximumLength) || maximumLength < 0) {\n      maximumLength = null;\n    }\n    _this3.data.maxLen = maximumLength;\n    _this3.data.multiLine = _this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE);\n    _this3.data.comb = _this3.hasFieldFlag(_util.AnnotationFieldFlag.COMB) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT) && _this3.data.maxLen !== null;\n    return _this3;\n  }\n\n  _createClass(TextWidgetAnnotation, [{\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms || this.appearance) {\n        return _get(TextWidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n      }\n      var operatorList = new _evaluator.OperatorList();\n      if (!this.data.defaultAppearance) {\n        return Promise.resolve(operatorList);\n      }\n      var stream = new _stream.Stream((0, _util.stringToBytes)(this.data.defaultAppearance));\n      return evaluator.getOperatorList({\n        stream: stream,\n        task: task,\n        resources: this.fieldResources,\n        operatorList: operatorList\n      }).then(function () {\n        return operatorList;\n      });\n    }\n  }]);\n\n  return TextWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ButtonWidgetAnnotation = function (_WidgetAnnotation2) {\n  _inherits(ButtonWidgetAnnotation, _WidgetAnnotation2);\n\n  function ButtonWidgetAnnotation(params) {\n    _classCallCheck(this, ButtonWidgetAnnotation);\n\n    var _this4 = _possibleConstructorReturn(this, (ButtonWidgetAnnotation.__proto__ || Object.getPrototypeOf(ButtonWidgetAnnotation)).call(this, params));\n\n    _this4.data.checkBox = !_this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    if (_this4.data.checkBox) {\n      if (!(0, _primitives.isName)(_this4.data.fieldValue)) {\n        return _possibleConstructorReturn(_this4);\n      }\n      _this4.data.fieldValue = _this4.data.fieldValue.name;\n    }\n    _this4.data.radioButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    if (_this4.data.radioButton) {\n      _this4.data.fieldValue = _this4.data.buttonValue = null;\n      var fieldParent = params.dict.get('Parent');\n      if ((0, _primitives.isDict)(fieldParent) && fieldParent.has('V')) {\n        var fieldParentValue = fieldParent.get('V');\n        if ((0, _primitives.isName)(fieldParentValue)) {\n          _this4.data.fieldValue = fieldParentValue.name;\n        }\n      }\n      var appearanceStates = params.dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return _possibleConstructorReturn(_this4);\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return _possibleConstructorReturn(_this4);\n      }\n      var keys = normalAppearanceState.getKeys();\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        if (keys[i] !== 'Off') {\n          _this4.data.buttonValue = keys[i];\n          break;\n        }\n      }\n    }\n    return _this4;\n  }\n\n  return ButtonWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ChoiceWidgetAnnotation = function (_WidgetAnnotation3) {\n  _inherits(ChoiceWidgetAnnotation, _WidgetAnnotation3);\n\n  function ChoiceWidgetAnnotation(params) {\n    _classCallCheck(this, ChoiceWidgetAnnotation);\n\n    var _this5 = _possibleConstructorReturn(this, (ChoiceWidgetAnnotation.__proto__ || Object.getPrototypeOf(ChoiceWidgetAnnotation)).call(this, params));\n\n    _this5.data.options = [];\n    var options = _util.Util.getInheritableProperty(params.dict, 'Opt');\n    if (Array.isArray(options)) {\n      var xref = params.xref;\n      for (var i = 0, ii = options.length; i < ii; i++) {\n        var option = xref.fetchIfRef(options[i]);\n        var isOptionArray = Array.isArray(option);\n        _this5.data.options[i] = {\n          exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\n          displayValue: isOptionArray ? xref.fetchIfRef(option[1]) : option\n        };\n      }\n    }\n    if (!Array.isArray(_this5.data.fieldValue)) {\n      _this5.data.fieldValue = [_this5.data.fieldValue];\n    }\n    _this5.data.combo = _this5.hasFieldFlag(_util.AnnotationFieldFlag.COMBO);\n    _this5.data.multiSelect = _this5.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT);\n    return _this5;\n  }\n\n  return ChoiceWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar TextAnnotation = function (_Annotation2) {\n  _inherits(TextAnnotation, _Annotation2);\n\n  function TextAnnotation(parameters) {\n    _classCallCheck(this, TextAnnotation);\n\n    var DEFAULT_ICON_SIZE = 22;\n\n    var _this6 = _possibleConstructorReturn(this, (TextAnnotation.__proto__ || Object.getPrototypeOf(TextAnnotation)).call(this, parameters));\n\n    _this6.data.annotationType = _util.AnnotationType.TEXT;\n    if (_this6.data.hasAppearance) {\n      _this6.data.name = 'NoIcon';\n    } else {\n      _this6.data.rect[1] = _this6.data.rect[3] - DEFAULT_ICON_SIZE;\n      _this6.data.rect[2] = _this6.data.rect[0] + DEFAULT_ICON_SIZE;\n      _this6.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\n    }\n    _this6._preparePopup(parameters.dict);\n    return _this6;\n  }\n\n  return TextAnnotation;\n}(Annotation);\n\nvar LinkAnnotation = function (_Annotation3) {\n  _inherits(LinkAnnotation, _Annotation3);\n\n  function LinkAnnotation(params) {\n    _classCallCheck(this, LinkAnnotation);\n\n    var _this7 = _possibleConstructorReturn(this, (LinkAnnotation.__proto__ || Object.getPrototypeOf(LinkAnnotation)).call(this, params));\n\n    _this7.data.annotationType = _util.AnnotationType.LINK;\n    _obj.Catalog.parseDestDictionary({\n      destDict: params.dict,\n      resultObj: _this7.data,\n      docBaseUrl: params.pdfManager.docBaseUrl\n    });\n    return _this7;\n  }\n\n  return LinkAnnotation;\n}(Annotation);\n\nvar PopupAnnotation = function (_Annotation4) {\n  _inherits(PopupAnnotation, _Annotation4);\n\n  function PopupAnnotation(parameters) {\n    _classCallCheck(this, PopupAnnotation);\n\n    var _this8 = _possibleConstructorReturn(this, (PopupAnnotation.__proto__ || Object.getPrototypeOf(PopupAnnotation)).call(this, parameters));\n\n    _this8.data.annotationType = _util.AnnotationType.POPUP;\n    var dict = parameters.dict;\n    var parentItem = dict.get('Parent');\n    if (!parentItem) {\n      (0, _util.warn)('Popup annotation has a missing or invalid parent annotation.');\n      return _possibleConstructorReturn(_this8);\n    }\n    var parentSubtype = parentItem.get('Subtype');\n    _this8.data.parentType = (0, _primitives.isName)(parentSubtype) ? parentSubtype.name : null;\n    _this8.data.parentId = dict.getRaw('Parent').toString();\n    _this8.data.title = (0, _util.stringToPDFString)(parentItem.get('T') || '');\n    _this8.data.contents = (0, _util.stringToPDFString)(parentItem.get('Contents') || '');\n    if (!parentItem.has('C')) {\n      _this8.data.color = null;\n    } else {\n      _this8.setColor(parentItem.getArray('C'));\n      _this8.data.color = _this8.color;\n    }\n    if (!_this8.viewable) {\n      var parentFlags = parentItem.get('F');\n      if (_this8._isViewable(parentFlags)) {\n        _this8.setFlags(parentFlags);\n      }\n    }\n    return _this8;\n  }\n\n  return PopupAnnotation;\n}(Annotation);\n\nvar LineAnnotation = function (_Annotation5) {\n  _inherits(LineAnnotation, _Annotation5);\n\n  function LineAnnotation(parameters) {\n    _classCallCheck(this, LineAnnotation);\n\n    var _this9 = _possibleConstructorReturn(this, (LineAnnotation.__proto__ || Object.getPrototypeOf(LineAnnotation)).call(this, parameters));\n\n    _this9.data.annotationType = _util.AnnotationType.LINE;\n    var dict = parameters.dict;\n    _this9.data.lineCoordinates = _util.Util.normalizeRect(dict.getArray('L'));\n    _this9._preparePopup(dict);\n    return _this9;\n  }\n\n  return LineAnnotation;\n}(Annotation);\n\nvar SquareAnnotation = function (_Annotation6) {\n  _inherits(SquareAnnotation, _Annotation6);\n\n  function SquareAnnotation(parameters) {\n    _classCallCheck(this, SquareAnnotation);\n\n    var _this10 = _possibleConstructorReturn(this, (SquareAnnotation.__proto__ || Object.getPrototypeOf(SquareAnnotation)).call(this, parameters));\n\n    _this10.data.annotationType = _util.AnnotationType.SQUARE;\n    _this10._preparePopup(parameters.dict);\n    return _this10;\n  }\n\n  return SquareAnnotation;\n}(Annotation);\n\nvar CircleAnnotation = function (_Annotation7) {\n  _inherits(CircleAnnotation, _Annotation7);\n\n  function CircleAnnotation(parameters) {\n    _classCallCheck(this, CircleAnnotation);\n\n    var _this11 = _possibleConstructorReturn(this, (CircleAnnotation.__proto__ || Object.getPrototypeOf(CircleAnnotation)).call(this, parameters));\n\n    _this11.data.annotationType = _util.AnnotationType.CIRCLE;\n    _this11._preparePopup(parameters.dict);\n    return _this11;\n  }\n\n  return CircleAnnotation;\n}(Annotation);\n\nvar PolylineAnnotation = function (_Annotation8) {\n  _inherits(PolylineAnnotation, _Annotation8);\n\n  function PolylineAnnotation(parameters) {\n    _classCallCheck(this, PolylineAnnotation);\n\n    var _this12 = _possibleConstructorReturn(this, (PolylineAnnotation.__proto__ || Object.getPrototypeOf(PolylineAnnotation)).call(this, parameters));\n\n    _this12.data.annotationType = _util.AnnotationType.POLYLINE;\n    var dict = parameters.dict;\n    var rawVertices = dict.getArray('Vertices');\n    _this12.data.vertices = [];\n    for (var i = 0, ii = rawVertices.length; i < ii; i += 2) {\n      _this12.data.vertices.push({\n        x: rawVertices[i],\n        y: rawVertices[i + 1]\n      });\n    }\n    _this12._preparePopup(dict);\n    return _this12;\n  }\n\n  return PolylineAnnotation;\n}(Annotation);\n\nvar PolygonAnnotation = function (_PolylineAnnotation) {\n  _inherits(PolygonAnnotation, _PolylineAnnotation);\n\n  function PolygonAnnotation(parameters) {\n    _classCallCheck(this, PolygonAnnotation);\n\n    var _this13 = _possibleConstructorReturn(this, (PolygonAnnotation.__proto__ || Object.getPrototypeOf(PolygonAnnotation)).call(this, parameters));\n\n    _this13.data.annotationType = _util.AnnotationType.POLYGON;\n    return _this13;\n  }\n\n  return PolygonAnnotation;\n}(PolylineAnnotation);\n\nvar HighlightAnnotation = function (_Annotation9) {\n  _inherits(HighlightAnnotation, _Annotation9);\n\n  function HighlightAnnotation(parameters) {\n    _classCallCheck(this, HighlightAnnotation);\n\n    var _this14 = _possibleConstructorReturn(this, (HighlightAnnotation.__proto__ || Object.getPrototypeOf(HighlightAnnotation)).call(this, parameters));\n\n    _this14.data.annotationType = _util.AnnotationType.HIGHLIGHT;\n    _this14._preparePopup(parameters.dict);\n    return _this14;\n  }\n\n  return HighlightAnnotation;\n}(Annotation);\n\nvar UnderlineAnnotation = function (_Annotation10) {\n  _inherits(UnderlineAnnotation, _Annotation10);\n\n  function UnderlineAnnotation(parameters) {\n    _classCallCheck(this, UnderlineAnnotation);\n\n    var _this15 = _possibleConstructorReturn(this, (UnderlineAnnotation.__proto__ || Object.getPrototypeOf(UnderlineAnnotation)).call(this, parameters));\n\n    _this15.data.annotationType = _util.AnnotationType.UNDERLINE;\n    _this15._preparePopup(parameters.dict);\n    return _this15;\n  }\n\n  return UnderlineAnnotation;\n}(Annotation);\n\nvar SquigglyAnnotation = function (_Annotation11) {\n  _inherits(SquigglyAnnotation, _Annotation11);\n\n  function SquigglyAnnotation(parameters) {\n    _classCallCheck(this, SquigglyAnnotation);\n\n    var _this16 = _possibleConstructorReturn(this, (SquigglyAnnotation.__proto__ || Object.getPrototypeOf(SquigglyAnnotation)).call(this, parameters));\n\n    _this16.data.annotationType = _util.AnnotationType.SQUIGGLY;\n    _this16._preparePopup(parameters.dict);\n    return _this16;\n  }\n\n  return SquigglyAnnotation;\n}(Annotation);\n\nvar StrikeOutAnnotation = function (_Annotation12) {\n  _inherits(StrikeOutAnnotation, _Annotation12);\n\n  function StrikeOutAnnotation(parameters) {\n    _classCallCheck(this, StrikeOutAnnotation);\n\n    var _this17 = _possibleConstructorReturn(this, (StrikeOutAnnotation.__proto__ || Object.getPrototypeOf(StrikeOutAnnotation)).call(this, parameters));\n\n    _this17.data.annotationType = _util.AnnotationType.STRIKEOUT;\n    _this17._preparePopup(parameters.dict);\n    return _this17;\n  }\n\n  return StrikeOutAnnotation;\n}(Annotation);\n\nvar StampAnnotation = function (_Annotation13) {\n  _inherits(StampAnnotation, _Annotation13);\n\n  function StampAnnotation(parameters) {\n    _classCallCheck(this, StampAnnotation);\n\n    var _this18 = _possibleConstructorReturn(this, (StampAnnotation.__proto__ || Object.getPrototypeOf(StampAnnotation)).call(this, parameters));\n\n    _this18.data.annotationType = _util.AnnotationType.STAMP;\n    _this18._preparePopup(parameters.dict);\n    return _this18;\n  }\n\n  return StampAnnotation;\n}(Annotation);\n\nvar FileAttachmentAnnotation = function (_Annotation14) {\n  _inherits(FileAttachmentAnnotation, _Annotation14);\n\n  function FileAttachmentAnnotation(parameters) {\n    _classCallCheck(this, FileAttachmentAnnotation);\n\n    var _this19 = _possibleConstructorReturn(this, (FileAttachmentAnnotation.__proto__ || Object.getPrototypeOf(FileAttachmentAnnotation)).call(this, parameters));\n\n    var file = new _obj.FileSpec(parameters.dict.get('FS'), parameters.xref);\n    _this19.data.annotationType = _util.AnnotationType.FILEATTACHMENT;\n    _this19.data.file = file.serializable;\n    _this19._preparePopup(parameters.dict);\n    return _this19;\n  }\n\n  return FileAttachmentAnnotation;\n}(Annotation);\n\nexports.Annotation = Annotation;\nexports.AnnotationBorderStyle = AnnotationBorderStyle;\nexports.AnnotationFactory = AnnotationFactory;\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=pdf.worker.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/build/pdf.worker.js\n// module id = 220\n// module chunks = 1 2"],"sourceRoot":""}