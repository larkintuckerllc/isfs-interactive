{"version":3,"sources":["webpack:///pdf.worker.bundle.js","webpack:///webpack/bootstrap af65b9c767ac378efaf8?26f6","webpack:///./~/pdfjs-dist/build/pdf.worker.entry.js","webpack:///(webpack)/buildin/module.js?c3c2","webpack:///./~/pdfjs-dist/build/pdf.worker.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","0","window","pdfjsDistBuildPdfWorker","59","webpackPolyfill","deprecate","paths","children","208","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","global","root","factory","apply","undefined","this","pdfjsLibs","document","currentScript","src","pdfjsCoreArithmeticDecoder","ArithmeticDecoder","data","start","end","bp","dataEnd","chigh","clow","byteIn","ct","a","QeTable","qe","nmps","nlps","switchFlag","prototype","b1","readBit","contexts","pos","d","cx_index","cx_mps","qeTableIcx","qeIcx","pdfjsCoreCharsets","ISOAdobeCharset","ExpertCharset","ExpertSubsetCharset","pdfjsCoreEncodings","getEncoding","encodingName","WinAnsiEncoding","StandardEncoding","MacRomanEncoding","SymbolSetEncoding","ZapfDingbatsEncoding","ExpertEncoding","MacExpertEncoding","pdfjsSharedUtil","setVerbosityLevel","level","verbosity","getVerbosityLevel","info","msg","VERBOSITY_LEVELS","infos","console","log","warn","warnings","deprecated","details","error","errors","backtrace","Error","e","stack","split","slice","join","assert","cond","isSameOrigin","baseUrl","otherUrl","base","URL","origin","other","isValidProtocol","url","protocol","createValidAbsoluteUrl","absoluteUrl","ex","shadow","obj","prop","value","Object","defineProperty","enumerable","configurable","writable","getLookupTableFactory","initializer","lookup","create","removeNullCharacters","str","replace","NullCharactersRegExp","bytesToString","bytes","length","MAX_ARGUMENT_COUNT","String","fromCharCode","strBuf","i","chunkEnd","Math","min","chunk","subarray","push","stringToBytes","Uint8Array","charCodeAt","arrayByteLength","arr","byteLength","arraysToBytes","item","itemLength","resultLength","ii","set","string32","log2","x","n","readInt8","readUint16","offset","readUint32","isLittleEndian","buffer8","buffer16","Uint16Array","buffer","isEvalSupported","Function","stringToPDFString","code","PDFStringTranslateTable","charAt","stringToUTF8String","decodeURIComponent","escape","utf8StringToString","unescape","encodeURIComponent","isEmptyObj","key","isBool","v","isInt","isNum","isString","isArray","Array","isArrayBuffer","isSpace","ch","createPromiseCapability","capability","promise","Promise","resolve","reject","MessageHandler","sourceName","targetName","comObj","callbackIndex","postMessageTransfers","callbacksCapabilities","ah","actionHandler","_onComObjOnMessage","event","isReply","callbackId","callback","action","then","result","postMessage","reason","bind","addEventListener","loadJpegStream","imageUrl","objs","img","Image","onload","onerror","globalScope","self","FONT_IDENTITY_MATRIX","TextRenderingMode","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","ImageKind","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","AnnotationType","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","AnnotationFlag","HIDDEN","PRINT","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","AnnotationFieldFlag","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","AnnotationBorderStyleType","SOLID","DASHED","BEVELED","INSET","StreamType","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RL","FontType","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","OPS","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","transform","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","UNSUPPORTED_FEATURES","unknown","forms","javaScript","smask","shadingPattern","font","PasswordResponses","NEED_PASSWORD","INCORRECT_PASSWORD","PasswordException","name","message","constructor","UnknownErrorException","InvalidPDFException","MissingPDFException","UnexpectedResponseException","status","NotImplementedException","MissingDataException","begin","XRefParseException","Uint32ArrayView","ensureUint32ArrayViewProps","createUint32ArrayProp","index","get","uint32ArrayViewSetters","IDENTITY_MATRIX","Util","rgbBuf","makeCssRgb","r","g","b","m1","m2","applyTransform","xt","yt","applyInverseTransform","getAxialAlignedBoundingBox","p1","p2","p3","p4","max","inverseTransform","apply3dTransform","singularValueDecompose2dScale","transpose","first","second","sqrt","sx","sy","normalizeRect","rect","intersect","rect1","rect2","compare","orderedX","sort","orderedY","sign","num","ROMAN_NUMBER_MAP","toRoman","number","lowerCase","romanBuf","romanStr","toLowerCase","appendToArray","arr1","arr2","prependToArray","unshift","extendObj","obj1","obj2","getInheritableProperty","dict","getArray","has","inherit","sub","loadScript","script","createElement","setAttribute","getElementsByTagName","appendChild","PageViewport","viewBox","scale","rotation","offsetX","offsetY","dontFlip","rotateA","rotateB","rotateC","rotateD","centerX","centerY","offsetCanvasX","offsetCanvasY","width","height","abs","fontScale","clone","args","convertToViewportPoint","y","convertToViewportRectangle","tl","br","convertToPdfPoint","all","iterable","count","results","resolve_","reject_","forEach","catch","onReject","STATUS_PENDING","STATUS_RESOLVED","STATUS_REJECTED","REJECTION_TIMEOUT","HandlerManager","handlers","running","unhandledRejections","pendingRejectionCheck","scheduleHandlers","_status","concat","_handlers","setTimeout","runHandlers","RUN_TIMEOUT","timeoutAt","Date","now","handler","shift","nextStatus","thisPromise","nextValue","_value","onResolve","_unhandledRejection","removeUnhandeledRejection","nextPromise","_updateStatus","addUnhandledRejection","time","scheduleRejectionCheck","splice","unhandled","resolver","_resolve","_reject","promises","deferred","rejectAll","resolveAll","unresolved","isPromise","WeakMap","getOwnPropertyDescriptor","defaultValue","delete","StatTimer","rpad","pad","started","times","enabled","timeEnd","toString","out","longest","span","duration","createBlob","contentType","Blob","type","createObjectURL","digits","forceDataSchema","blob","b2","b3","d1","d2","d3","d4","on","actionName","scope","send","transfers","sendWithPromise","destroy","removeEventListener","isRelativeScheme","scheme","relative","invalid","clear","_isInvalid","IDNAToASCII","h","percentEscape","unicode","indexOf","percentEscapeQuery","parse","input","stateOverride","err","state","cursor","seenAt","seenBracket","loop","EOF","ALPHA","test","ALPHANUMERIC","_scheme","_isRelative","_query","_fragment","_schemeData","_host","_port","_path","_username","_password","nextC","nextNextC","pop","cp","tempC","temp","parseInt","tmp","relativePathDotMapping","JURL","_url","hasWorkingUrl","u","pathname","href","authority","host","hostname","port","search","hash","OriginalURL","arguments","revokeObjectURL","pdfjsCoreBidi","sharedUtil","isOdd","isEven","findUnequal","j","jj","setValues","reverseValues","createBidiText","isLTR","vertical","dir","bidi","startLevel","strLength","chars","types","numBidi","charCode","charType","baseTypes","arabicTypes","levels","sor","eor","lastType","t","before","after","highestLevel","lowestOddLevel","pdfjsCoreCFFParser","coreCharsets","coreEncodings","MAX_SUBR_NESTING","CFFStandardStrings","CFFParser","file","properties","seacAnalysisEnabled","getBytes","CharstringValidationData","stackClearing","stem","resetStack","undefStack","CharstringValidationData12","stackDelta","stackFn","cff","CFF","header","parseHeader","nameIndex","parseIndex","endPos","topDictIndex","stringIndex","globalSubrIndex","topDictParsed","parseDict","topDict","createDict","CFFTopDict","strings","names","parseNameIndex","parseStringIndex","parsePrivateDict","isCIDFont","hasName","charStringOffset","getByName","charStringIndex","fontMatrix","fontBBox","ascent","descent","ascentScaled","charset","encoding","fdArrayIndex","dictRaw","fontDict","fdArray","parseCharsets","fdSelect","parseFDSelect","parseEncoding","charStringsAndSeacs","parseCharStrings","privateDict","subrsIndex","charStrings","seacs","widths","bytesLength","major","minor","hdrSize","offSize","CFFHeader","parseOperand","parseFloatOperand","NaN","eof","parseFloat","operands","entries","cffIndex","CFFIndex","offsets","offsetSize","startPos","offsetStart","offsetEnd","add","CFFStrings","Type","cffDict","pair","setByKey","parseCharString","localSubrIndex","callDepth","stackSize","validationCommand","q","seac","hints","bias","subrNumber","valid","firstStackClearing","charstring","localSubrToUse","fdIndex","getFDIndex","emptyPrivateDictionary","parentDict","CFFPrivateDict","privateOffset","removeByName","size","privateDictEnd","dictData","subrsOffset","relativeOffset","cid","CFFCharset","CFFCharsetPredefinedTypes","ISO_ADOBE","EXPERT","EXPERT_SUBSET","format","raw","readSupplement","supplementsCount","sid","predefined","hasSupplement","baseEncoding","dataStart","glyphsCount","rangesCount","gid","left","CFFEncoding","rawBytes","invalidFirstGID","next","CFFFDSelect","objects","CFFDict","tables","keyToNameMap","nameToKeyMap","defaults","opcodes","order","values","valueLength","isNaN","setByName","createTables","layout","entry","glyphIndex","CFFOffsetTracker","isTracking","track","location","setEntryLocation","output","dataOffset","offset0","offset1","offset2","offset3","offset4","CFFCompiler","compile","compileHeader","compileNameIndex","subDict","matrix","compiled","compileTopDicts","topDictTracker","trackers","compileStringIndex","compileIndex","compileEncoding","compileCharset","compileCharStrings","compileFDSelect","fontDictTrackers","compilePrivateDicts","encodeNumber","encodeFloat","encodeInteger","exec","epsilon","round","nibbles","substr","dicts","removeCidKeys","fontDictTracker","fontDictData","compileDict","privateDictTracker","privateDictData","outputLength","subrs","offsetTracker","k","kk","compileGlobalSubrIndex","writeByteArray","compileTypedArray","lastOffset","pdfjsCoreChunkedStream","ChunkedStream","chunkSize","manager","loadedChunks","numChunksLoaded","numChunks","ceil","progressiveDataLength","lastSuccessfulEnsureByteChunk","getMissingChunks","chunks","getBaseStreams","allChunksLoaded","onReceiveData","curChunk","beginChunk","floor","endChunk","onReceiveProgressiveData","position","ensureByte","ensureRange","nextEmptyChunk","hasChunk","isEmpty","getByte","getUint16","b0","getInt32","strEnd","peekByte","peekedByte","peekBytes","getByteRange","skip","reset","moveStart","makeSubStream","ChunkedStreamSubstream","missingChunks","subStream","isStream","ChunkedStreamManager","pdfNetworkStream","rangeChunkSize","stream","disableAutoFetch","msgHandler","currRequestId","chunksNeededByRequest","requestsByChunk","promisesByRequest","aborted","_loadedStreamCapability","onLoadedStream","sendRequest","rangeReader","getRangeReader","isStreamingSupported","onProgress","readChunk","done","read","chunkData","requestAllChunks","_requestChunks","requestId","chunksNeeded","chunksToRequest","groupedChunksToRequest","groupChunks","groupedChunk","getStream","requestRange","getBeginChunk","getEndChunk","requestRanges","ranges","groupedChunks","prevChunk","bytesLoaded","total","isProgressive","loadedRequests","requestIds","lastChunk","onError","abort","cancelAllRequests","pdfjsCoreGlyphList","getGlyphsUnicode","getDingbatsGlyphsUnicode","pdfjsCoreJbig2","coreArithmeticDecoder","Jbig2Image","ContextCache","DecodingContext","decodeInteger","contextCache","procedure","decoder","readBits","bit","prev","getContexts","decodeIAID","codeLength","decodeBitmapTemplate0","decodingContext","contextLabel","pixel","row","row1","row2","bitmap","OLD_PIXEL_MASK","decodeBitmap","mmr","templateIndex","prediction","at","useskip","template","CodingTemplates","templateLength","templateX","Int8Array","templateY","changingTemplateEntries","reuseMask","minX","maxX","minY","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","i0","j0","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ReusedContexts","ltp","sltp","decodeRefinement","referenceBitmap","codingTemplate","RefinementTemplates","coding","codingTemplateLength","codingTemplateX","Int32Array","codingTemplateY","referenceTemplate","reference","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","RefinementReusedContexts","decodeSymbolDictionary","huffman","refinement","symbols","numberOfNewSymbols","numberOfExportedSymbols","huffmanTables","refinementTemplateIndex","refinementAt","newSymbols","currentHeight","symbolCodeLength","deltaHeight","currentWidth","totalWidth","deltaWidth","numberOfInstances","decodeTextRegion","symbolId","rdx","rdy","symbol","exportedSymbols","flags","currentFlag","totalSymbolsLength","runLength","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","transposed","dsOffset","referenceCorner","combinationOperator","stripT","firstS","deltaT","deltaFirstS","currentS","currentT","applyRefinement","symbolBitmap","symbolWidth","symbolHeight","rdw","rdh","s2","t2","symbolRow","offsetT","offsetS","maxWidth","deltaS","readSegmentHeader","segmentHeader","segmentType","SegmentTypes","typeName","deferredNonRetain","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","referredToSegmentNumberSize","referredTo","pageAssociation","genericRegionInfo","readRegionSegmentInformation","genericRegionSegmentFlags","RegionSegmentInformationFieldLength","genericRegionMmr","searchPatternLength","searchPattern","headerEnd","readSegments","segments","segment","randomAccess","processSegment","visitor","atLength","dictionary","dictionaryFlags","huffmanDHSelector","huffmanDWSelector","bitmapSizeSelector","aggregationInstancesSelector","bitmapCodingContextUsed","bitmapCodingContextRetained","refinementTemplate","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","huffmanFS","huffmanDS","huffmanDT","huffmanRefinementDW","huffmanRefinementDH","huffmanRefinementDX","huffmanRefinementDY","huffmanRefinementSizeSelector","genericRegion","pageInfo","resolutionX","resolutionY","pageSegmentFlags","lossless","requiresBuffer","combinationOperatorOverride","callbackName","processSegments","parseJbig2Chunks","SimpleSegmentVisitor","cache","onPageInformation","currentPageInfo","rowSize","drawBitmap","regionInfo","mask","mask0","onImmediateGenericRegion","region","onImmediateLosslessGenericRegion","onSymbolDictionary","currentSegment","referredSegments","onImmediateTextRegion","onImmediateLosslessTextRegion","parseChunks","pdfjsCoreJpg","JpegImage","decodeTransform","colorTransform","buildHuffmanTable","codeLengths","getBlockBufferOffset","component","col","blocksPerLine","decodeScan","frame","components","resetInterval","spectralStart","spectralEnd","successivePrev","successive","bitsCount","bitsData","nextByte","decodeHuffman","tree","node","receive","receiveAndExtend","decodeBaseline","huffmanTableDC","diff","blockData","pred","rs","huffmanTableAC","s","z","dctZigZag","decodeDCFirst","decodeDCSuccessive","decodeACFirst","eobrun","decodeACSuccessive","successiveACState","successiveACNextValue","decodeMcu","decode","mcu","mcuRow","mcusPerLine","mcuCol","blockRow","blockCol","decodeBlock","decodeFn","progressive","startOffset","componentsLength","marker","mcuExpected","blocksPerColumn","mcusPerColumn","quantizeAndInverse","blockBufferOffset","v0","v1","v2","v3","v4","v5","v6","v7","p0","p5","p6","p7","qt","quantizationTable","dctSqrt2","dctSqrt1d2","dctSin6","dctCos6","dctSin3","dctCos3","dctSin1","dctCos1","buildComponentData","computationBuffer","Int16Array","clamp0to255","readDataBlock","array","prepareComponents","samplesPerLine","maxH","scanLines","maxV","blocksPerLineForMcu","blocksPerColumnForMcu","blocksBufferSize","jfif","adobe","quantizationTables","huffmanTablesAC","huffmanTablesDC","fileMarker","l","appData","version","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesLength","quantizationTablesEnd","quantizationTableSpec","tableData","extended","precision","componentIds","componentId","componentsCount","qId","quantizationId","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","componentIndex","tableSpec","successiveApproximation","processed","scaleX","scaleY","numComponents","_getLinearizedBlockData","componentScaleX","componentScaleY","blocksPerScanline","dataLength","xScaleBlockOffset","Uint32Array","mask3LSB","_isColorConversionNeeded","_convertYccToRgb","Y","Cb","Cr","_convertYcckToRgb","_convertYcckToCmyk","_convertCmykToRgb","getData","forceRGBoutput","rgbData","grayColor","pdfjsCoreJpx","JpxImage","failOnCorruptedImage","calculateComponentDimensions","siz","x0","XOsiz","XRsiz","x1","Xsiz","y0","YOsiz","YRsiz","y1","Ysiz","calculateTileGrids","context","tile","SIZ","tiles","numXtiles","XTOsiz","XTsiz","numYtiles","YTOsiz","YTsiz","tx0","ty0","tx1","ty1","Csiz","tileComponent","tcx0","tcy0","tcx1","tcy1","getBlocksDimensions","codOrCoc","codingStyleParameters","entropyCoderWithCustomPrecincts","PPx","precinctsSizes","PPy","xcb_","xcb","ycb_","ycb","buildPrecincts","resolution","dimensions","precinctWidth","precinctHeight","isZeroRes","resLevel","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","trx1","trx0","numprecinctshigh","try1","try0","numprecincts","precinctParameters","buildCodeblocks","subband","codeblock","precinctNumber","codeblockWidth","codeblockHeight","cbx0","tbx0","cby0","tby0","cbx1","tbx1","cby1","tby1","codeblocks","precincts","cbx","cby","tbx0_","tby0_","tbx1_","tby1_","pi","pj","subbandType","Lblock","precinct","cbxMin","cbxMax","cbyMin","cbyMax","codeblockParameters","numcodeblockwide","numcodeblockhigh","createPacket","layerNumber","precinctCodeblocks","subbands","LayerResolutionComponentPositionIterator","tileIndex","currentTile","layersCount","codingStyleDefaultParameters","maxDecompositionLevelsCount","decompositionLevelsCount","nextPacket","resolutions","packet","ResolutionLayerComponentPositionIterator","ResolutionPositionComponentLayerIterator","maxNumPrecinctsInLevel","maxNumPrecincts","PositionComponentResolutionLayerIterator","getPrecinctSizesInImageScale","precinctsIterationSizes","px","py","maxNumHigh","maxNumWide","sizeInImageScale","getPrecinctIndexIfExist","ComponentPositionResolutionLayerIterator","pxIndex","pyIndex","precinctIterationSizes","posX","minWidth","posY","minHeight","startPrecinctRowIndex","Number","MAX_VALUE","sizePerComponent","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","widthCurrentResolution","heightCurrentResolution","buildPackets","blocksDimensions","bscale","resolutionSubbands","progressionOrder","packetsIterator","parseTilePackets","bufferSize","skipNextBit","skipMarkerIfEqual","skipBytes","alignToByte","readCodingpasses","sopMarkerUsed","COD","ephMarkerUsed","queue","valueReady","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","inclusionTree","zeroBitPlanesTree","InclusionTree","TagTree","incrementValue","nextLevel","included","zeroBitPlanes","codingpasses","codingpassesLog2","bits","codedDataLength","packetItem","copyCoefficients","coefficients","levelWidth","levelHeight","delta","mb","reversible","segmentationSymbolUsed","right","bottom","blockWidth","blockHeight","bitModel","currentCodingpassType","BitModel","dataItem","totalLength","encodedData","setDecoder","runSignificancePropagationPass","runMagnitudeRefinementPass","runCleanupPass","checkSegmentationSymbol","nb","coefficentsSign","magnitude","coefficentsMagnitude","bitsDecoded","magnitudeCorrection","interleave","levelOffset","transformTile","quantizationParameters","spqcds","SPqcds","scalarExpounded","guardBits","reversibleTransformation","ReversibleTransform","IrreversibleTransform","subbandCoefficients","Float32Array","mu","gainLog2","SubbandsGainLog2","pow","items","calculate","top","transformComponents","resultImages","transformedTiles","maxK","y2","val","tile0","multipleComponentTransform","fourComponents","y0items","y1items","y2items","y3items","component0","alpha01","initializeTile","qcdOrQcc","QCC","QCD","COC","LL","LH","HL","HH","head","parseCodestream","headerSize","lbox","tbox","jumpDataLength","method","colorspace","headerType","parseImageProperties","newByte","oldByte","bitsPerComponent","doNotRecover","sqcd","spqcdSize","mainHeader","isSigned","qcd","noQuantization","spqcd","qcc","cqcc","cod","scod","blockStyle","selectiveArithmeticCodingBypass","resetContextProbabilities","terminationOnEachCodingPass","verticalyStripe","predictableTermination","precinctsSize","unsupported","partIndex","partsCount","levelsLength","currentLevel","stopValue","propagateValues","levelIndex","currentValue","contextLabelTable","HHContextLabel","HLContextLabel","LLAndLHContextsLabel","coefficientCount","neighborsSignificance","processingFlags","UNIFORM_CONTEXT","RUNLENGTH_CONTEXT","setNeighborsSignificance","column","labels","processedInverseMask","processedMask","firstMagnitudeBitMask","i1","decision","decodeSignBit","contribution","sign0","sign1","significance1","decoded","horizontalContribution","indexNext","width4","index0","significance","iNext","oneRowDown","twoRowsDown","threeRowsDown","indexBase","checkAllEmpty","allEmpty","hasSignificantCoefficent","i2","Transform","u0","ll","iterate","extend","j1","j2","hl_lh_hh","llWidth","llHeight","llItems","bufferPadding","rowBuffer","filter","numBuffers","colBuffers","currentBuffer","len","current","alpha","beta","gamma","K","K_","pdfjsCoreMetrics","getMetrics","pdfjsCoreMurmurHash3","MurmurHash3_64","seed","SEED","h1","h2","MASK_HIGH","MASK_LOW","alwaysUseUint32ArrayView","update","useUint32ArrayView","blockCounts","tailLength","dataUint32","k1","k2","C1","C2","C1_LOW","C2_LOW","hexdigest","hex","pdfjsCorePrimitives","isEOF","isName","Name","isCmd","cmd","Cmd","isDict","Dict","isRef","Ref","isRefsEqual","gen","nameCache","nameValue","cmdCache","cmdValue","xref","map","objId","suppressEncryption","__nonSerializable__","nonSerializable","assignXref","newXref","key1","key2","key3","fetchIfRef","getAsync","fetchIfRefAsync","fetch","getRaw","getKeys","keys","empty","merge","dictArray","mergedDict","keyName","RefSet","ref","put","remove","RefSetCache","putAlias","aliasRef","fn","thisArg","pdfjsCoreStandardFonts","getStdFontMap","getNonStdFontMap","getSerifFonts","getSymbolsFonts","getGlyphMapForStandardFonts","getSupplementalGlyphMapForArialBlack","pdfjsCoreUnicode","mapSpecialUnicodeValues","getSpecialPUASymbols","getUnicodeForGlyph","glyphsUnicodeMap","hexStr","nameLen","toUpperCase","getUnicodeRangeFor","UnicodeRanges","range","isRTLRangeFor","reverseIfRtl","charsLength","getNormalizedUnicodes","pdfjsCorePsParser","corePrimitives","PostScriptParser","lexer","operators","token","nextToken","getToken","accept","expect","PostScriptTokenTypes","LBRACE","parseBlock","RBRACE","NUMBER","OPERATOR","parseCondition","conditionLocation","IF","jumpLocation","endOfTrue","IFELSE","PostScriptToken","opCache","getOperator","op","opValue","PostScriptLexer","nextChar","currentChar","comment","getNumber","pdfjsCoreStream","coreJbig2","coreJpg","coreJpx","Stream","arrayBuffer","StringStream","DecodeStream","maybeMinBufferLength","bufferLength","emptyBuffer","minBufferLength","readBlock","ensureBuffer","requested","buffer2","bufEnd","StreamsSequenceStream","streams","newLength","baseStreams","FlateStream","maybeLength","cmf","flg","codeSize","codeBuf","codeLenCodeMap","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","getBits","getCode","table","codes","maxLen","codeLen","codeVal","generateHuffmanTable","lengths","code2","hdr","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","bitsLength","bitsOffset","what","repeatLength","limit","code1","dist","blockLen","check","PredictorStream","params","predictor","readBlockTiff","readBlockPng","colors","columns","pixBytes","rowBytes","inbuf","outbuf","inbits","outbits","compArray","bitMask","prevRow","up","upLeft","pa","pb","pc","JpegStream","req","jpegImage","decodeArr","forceRGB","decodeArrLength","transformNeeded","maxValue","drawWidth","drawHeight","getIR","JpxStream","jpxImage","tileCount","tileComponents","tileWidth","tileHeight","tileLeft","tileTop","srcPosition","dataPosition","imgRowSize","tileRowSize","Jbig2Stream","jbig2Image","globalsStream","globals","DecryptStream","decrypt","nextChunk","initialized","hasMoreData","Ascii85Stream","TILDA_CHAR","Z_LOWER_CHAR","AsciiHexStream","firstDigit","UPSTREAM_BLOCK_SIZE","maxDecodeLength","digit","RunLengthStream","repeatHeader","source","CCITTFaxStream","eoline","byteAlign","rows","eoblock","black","codingLine","refLine","codingPos","nextLine2D","inputBits","inputBuf","outputBits","lookBits","eatBits","ccittEOL","ccittEOF","twoDimPass","twoDimHoriz","twoDimVert0","twoDimVertR1","twoDimVertL1","twoDimVertR2","twoDimVertL2","twoDimVertR3","twoDimVertL3","twoDimTable","whiteTable1","whiteTable2","blackTable1","blackTable2","blackTable3","lookChar","addPixels","a1","blackPixels","addPixelsNeg","refPos","code3","getTwoDimCode","getBlackCode","getWhiteCode","gotEOL","findTableCode","limitValue","LZWStream","earlyChange","cachedData","bitsCached","maxLzwDictionarySize","lzwState","nextCode","dictionaryValues","dictionaryLengths","dictionaryPrevCodes","currentSequence","currentSequenceLength","lastCode","blockSize","estimatedDecodedSize","decodedSizeDelta","prevCode","decodedLength","currentBufferLength","hasPrev","NullStream","pdfjsCoreCrypto","coreStream","ARCFourCipher","keyLength","encryptBlock","tmp2","decryptBlock","calculateMD5","h0","h3","paddedLength","padded","w","f","rotateArg","rotate","Word64","highInteger","lowInteger","high","low","and","word","xor","or","shiftRight","places","shiftLeft","rotateRight","not","lowAdd","highAdd","copyTo","assign","calculateSHA256","rotr","maj","sigma","sigmaPrime","littleSigma","littleSigmaPrime","h4","h5","h6","h7","t1","calculateSHA512","mode384","tmp3","tmp1","calculateSHA384","NullCipher","AES128Cipher","expandKey128","cipherKey","t3","t4","rcon","decrypt128","inv_s","s0","mix","s1","s3","encrypt128","mixCol","bufferPosition","decryptBlock2","finalize","sourceLength","iv","plain","lastBlock","psLen","encrypt","cipher","AES256Cipher","expandKey256","decrypt256","encrypt256","PDF17","compareByteArrays","array1","array2","checkOwnerPassword","password","ownerValidationSalt","userBytes","ownerPassword","hashData","checkUserPassword","userValidationSalt","userPassword","getOwnerKey","ownerKeySalt","ownerEncryption","getUserKey","userKeySalt","userEncryption","PDF20","concatArrays","calculatePDF20Hash","arrayLength","remainder","concatBytes","CipherTransform","stringCipherConstructor","streamCipherConstructor","StringCipherConstructor","StreamCipherConstructor","createStream","decryptString","CipherTransformFactory","createEncryptionKey20","revision","uBytes","perms","passwordLength","pdfAlgorithm","prepareKeyData","fileId","encryptMetadata","hashDataSize","defaultPasswordBytes","keyLengthInBytes","checkData","encryptionKey","derivedKey","decodeUserPassword","algorithm","cfDict","streamCryptoName","handlerDict","passwordBytes","fileIdBytes","decodedPassword","cf","stmf","identityName","strf","eff","buildObjectKey","isAes","buildCipherConstructor","cfm","cryptFilter","createCipherTransform","cipherConstructor","pdfjsCoreFontRenderer","coreGlyphList","coreCFFParser","FontRendererFactory","getLong","getUshort","parseCmap","segCount","idDelta","idOffset","ids","groups","parseCff","parser","glyphs","gsubrs","parseGlyfTable","glyf","loca","isGlyphLocationsLong","itemSize","itemDecode","endOffset","lookupCmap","glyphId","compileGlyf","cmds","quadraticCurveTo","xa","ya","numberOfContours","arg1","arg2","scale01","scale10","subglyph","endPtsOfContours","instructionLength","numberOfPoints","points","repeat","startPoint","endPoint","contour","compileCharString","bezierCurveTo","x2","xb","yb","y3","subrCode","stackClean","stems","subrsBias","achar","bchar","cmap","glyphNameMap","gsubrsBias","CompiledFont","compiledGlyphs","compiledCharCodeToGlyphId","TrueTypeCompiled","Type2Compiled","cffInfo","noop","getPathJs","compileGlyph","compileGlyphImpl","hasBuiltPath","indexToLocFormat","unitsPerEm","numTables","tag","pdfjsCoreFunction","corePsParser","isPDFFunction","fnDict","PDFFunction","CONSTRUCT_SAMPLED","CONSTRUCT_INTERPOLATED","CONSTRUCT_STICHED","CONSTRUCT_POSTSCRIPT","getSampleArray","outputSize","bps","sampleMul","strBytes","strIdx","constructSampled","constructInterpolated","constructStiched","constructPostScript","typeNum","typeFn","fromIR","IR","constructSampledFromIR","constructInterpolatedFromIR","constructStichedFromIR","constructPostScriptFromIR","parseArray","fnObj","fnArray","srcOffset","dest","destOffset","toMultiArray","inputLength","domain","inputSize","encode","samples","interpolate","xmin","xmax","ymin","ymax","cubeVertices","cubeN","Float64Array","cubeVertex","domain_2i","domain_2i_1","xi","size_i","e0","n0","n1","rj","c0","c1","fnRefs","fns","bounds","fnsIR","tmpBuf","dmin","dmax","rmin","rmax","PostScriptCompiler","numOutputs","numInputs","evaluator","PostScriptEvaluator","MAX_CACHE_SIZE","cache_available","cachedValue","execute","stackIndex","bound","PostScriptStack","initialStack","MAX_STACK_SIZE","copy","roll","operator","counter","atan","cos","LN10","sin","AstNode","AstArgument","AstLiteral","AstBinaryOperation","AstMin","arg","AstVariable","AstVariableDefinition","variable","ExpressionBuilderVisitor","parts","buildAddOperation","num1","num2","buildMulOperation","buildSubOperation","buildMinOperation","visit","visitArgument","visitLiteral","visitBinaryOperation","visitMin","visitVariable","visitVariableDefinition","literal","operation","definition","ast1","ast2","tmpVar","instructions","lastRegister","instruction","statementBuilder","expr","pdfjsCoreParser","MAX_LENGTH_TO_CACHE","Parser","allowStreams","recoveryMode","imageCache","refill","buf1","getObj","buf2","tryShift","cipherTransform","makeInlineImage","makeStream","findDefaultInlineStreamEnd","followingBytes","E","I","SPACE","LF","CR","findDCTDecodeInlineStreamEnd","markerLength","foundEOI","inlineStreamSkipEI","findASCII85DecodeInlineStreamEnd","TILDE","GT","findASCIIHexDecodeInlineStreamEnd","filterName","filterZero","adler32","imageStream","imageBytes","cacheKey","skipToNextLine","SCAN_BLOCK_SIZE","ENDSTREAM_SIGNATURE_LENGTH","ENDSTREAM_SIGNATURE","skipped","found","scanBytes","scanLength","makeFilter","filterArray","paramsArray","xrefStreamStats","stats","streamTypes","Lexer","knownCommands","toHexDigit","specialChars","peekChar","eNotation","divideBy","baseValue","powerValue","powerValueSign","currentDigit","getString","numParen","charBuffered","getName","previousCh","getHexString","secondDigit","isFirstHex","knownCommandFound","possibleCommand","Linearization","getInt","allowZeroValue","linDict","getHints","hintsLength","obj3","objectNumberFirst","endFirst","numPages","mainXRefEntriesOffset","pageFirst","pdfjsCoreType1Parser","HINTING_ENABLED","Type1CharString","lsb","flexing","COMMAND_MAP","hstem","vstem","vmoveto","rlineto","hlineto","vlineto","rrcurveto","callsubr","flex","drop","endchar","rmoveto","hmoveto","vhcurveto","hvcurveto","convert","encoded","wx","sbx","executeCommand","dy","sby","numArgs","flexArgs","howManyArgs","command","keepStack","stackLength","Type1Parser","isHexDigit","discardNumber","c2","decrypted","decryptAscii","digit1","digit2","isSpecial","encrypted","isBinary","EEXEC_ENCRYPT_KEY","CHAR_STRS_ENCRYPT_KEY","readNumberArray","readNumber","readInt","readBoolean","extractFontProgram","charstrings","privateData","lenIV","program","glyph","blueArray","charString","glyphName","extractFontHeader","encodingArg","builtInEncoding","pdfjsCoreCMap","coreParser","BUILT_IN_CMAPS","CMap","builtInCMap","codespaceRanges","numCodespaceRanges","_map","useCMap","addCodespaceRange","mapCidRange","dstLow","mapBfRange","lastByte","mapBfRangeToArray","mapOne","dst","contains","charCodeOf","getMap","readCharCode","codespaceRangesLen","codespaceRange","charcode","isIdentityCMap","IdentityCMap","BinaryCMapReader","fetchBinaryData","request","XMLHttpRequest","open","responseType","onreadystatechange","readyState","DONE","response","hexToInt","hexToStr","addHex","incHex","BinaryCMapStream","MAX_ENCODED_NUM_SIZE","processBinaryCMap","cMap","readByte","MAX_NUM_SIZE","char","sequence","dataSize","ucs2DataSize","subitemsCount","readHex","readHexNumber","readSigned","readHexSigned","readString","last","sp","CMapFactory","strToInt","expectString","expectInt","parseBfChar","parseBfRange","parseCidChar","parseCidRange","parseCodespaceRange","parseWMode","parseCMapName","parseCMap","builtInCMapParams","previous","embededUseCMap","objLoop","extendCMap","createBuiltInCMap","newCMap","useCodespaceRanges","parseBinaryCMap","packed","responseText","parsedCMap","pdfjsCoreColorSpace","coreFunction","ColorSpace","resizeRgbImage","bpc","w1","w2","COMPONENTS","oldIndex","xRatio","yRatio","newIndex","xScaled","w1Scanline","getRgb","rgb","getRgbItem","getRgbBuffer","getOutputLength","isPassthrough","fillRgb","originalWidth","originalHeight","actualHeight","comps","numComponentColors","needsResizing","numComps","allColors","colorMap","destPos","rgbPos","usesZeroToOneRange","cs","res","parseToIR","AlternateCS","whitePoint","blackPoint","singletons","gray","cmyk","CalGrayCS","CalRGBCS","basePatternCS","PatternCS","baseIndexedCS","hiVal","IndexedCS","alt","tintFnIR","LabCS","colorSpaces","refcs","mode","altIR","altCS","isDefaultDecode","DeviceGrayCS","DeviceRgbCS","DeviceCmykCS","tintFn","defaultColor","baseNumComps","baseBuf","scaled","tinted","decodeMap","baseCS","highVal","outputDelta","lookupPos","convertToRgb","srcScale","XW","YW","ZW","XB","YB","ZB","G","A","AG","L","GR","GG","GB","MXA","MYA","MZA","MXB","MYB","MZB","MXC","MYC","MZC","matrixProduct","convertToFlat","sourceWhitePoint","LMS","convertToD65","D65X","D65Y","D65Z","sRGBTransferFunction","color","adjustToRange","decodeL","DECODE_L_CONSTANT","compensateBlackPoint","sourceBlackPoint","XYZ_Flat","zeroDecodeL","X_DST","X_SRC","Y_DST","Y_SRC","Z_DST","Z_SRC","X_Scale","X_Offset","Y_Scale","Y_Offset","Z_Scale","Z_Offset","normalizeWhitePointToFlat","XYZ_In","BRADFORD_SCALE_MATRIX","LMS_Flat","tempNormalizeMatrix","BRADFORD_SCALE_INVERSE_MATRIX","normalizeWhitePointToD65","LMS_D65","B","C","AGR","BGG","CGB","X","Z","XYZ","tempConvertMatrix1","tempConvertMatrix2","XYZ_Black","XYZ_D65","FLAT_WHITEPOINT_MATRIX","SRGB","SRGB_D65_XYZ_TO_RGB_MATRIX","sR","sG","sB","amin","amax","bmin","bmax","fn_g","high1","low2","high2","maxVal","Ls","as","bs","M","N","pdfjsCoreFonts","coreFontRenderer","coreStandardFonts","coreUnicode","coreType1Parser","adjustWidths","glyphsWidths","defaultWidth","adjustToUnicode","hasIncludedToUnicodeMap","hasEncoding","defaultEncoding","toUnicode","IdentityToUnicodeMap","amend","getFontType","subtype","recoverGlyphName","type1FontGlyphMapping","glyphNames","charCodeToGlyphId","isSymbolicFont","FontFlags","Symbolic","baseEncodingName","differences","standardGlyphName","PRIVATE_USE_OFFSET_START","PRIVATE_USE_OFFSET_END","SKIP_PRIVATE_USE_RANGE_F000_TO_F01F","PDF_GLYPH_SPACE_UNITS","SEAC_ANALYSIS_ENABLED","FixedPitch","Serif","Script","Nonsymbolic","Italic","AllCap","SmallCap","ForceBold","MacStandardGlyphOrdering","Glyph","fontChar","accent","vmetric","operatorListId","isInFont","matchesForCache","ToUnicodeMap","firstChar","lastChar","OpenTypeFileBuilder","writeInt16","writeInt32","writeData","sfnt","getSearchParams","entriesCount","entrySize","maxPower2","searchRange","rangeShift","OTF_HEADER_SIZE","OTF_TABLE_ENTRY_SIZE","toArray","tablesNames","tableName","tableOffsets","searchParams","checksum","quad","addTable","ProblematicCharRanges","Font","loadedName","isType3Font","sizes","missingFile","glyphCache","isSerifFont","isMonospace","fallbackName","composite","wideChars","bbox","toFontChar","fontType","cidEncoding","vmetrics","defaultVMetrics","fontName","stdFontMap","nonStdFontMap","isStandardFont","bold","italic","remeasure","GlyphMapForStandardFonts","SupplementalGlyphMapForArialBlack","isIdentityUnicode","unicodeCharCode","buildToFontChar","loading","isTrueTypeFile","isOpenTypeFile","isType1File","mimetype","CFFFont","Type1Font","checkAndRepair","isOpenType","seacMap","int16","signedInt16","int32","string16","safeString16","isProblematicUnicodeLocation","adjustMapping","isSymbolic","newMap","usedFontCharCodes","nextAvailableFontCharCode","originalCharCode","fontCharCode","hasUnicodeValue","getRanges","numGlyphs","codeIndices","createCmapTable","bmpLength","trailingRangesCount","startCount","endCount","idDeltas","idRangeOffsets","glyphsIds","contiguous","startCode","format314","format31012","header31012","validateOS2Table","os2","selection","usWinAscent","createOS2Table","override","yMax","yMin","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","firstCharIndex","lastCharIndex","typoAscent","typoDescent","winAscent","winDescent","fixedPitch","italicAngle","xHeight","capHeight","createPostTable","angle","createNameTable","proto","stringsUnicode","strBufUnicode","platforms","encodings","languages","namesRecordCount","nameTable","strOffset","strs","nameRecord","getFontID","ID","renderer","exportData","hasOwnProperty","readTableEntry","previousPosition","readOpenTypeHeader","ttf","entrySelector","readCmapTable","platformId","encodingId","mappings","hasShortCmap","potentialTable","canBreak","useTable","segIndex","offsetsCount","rangeOffset","offsetIndex","firstCode","entryCount","sanitizeMetrics","metrics","numOfMetrics","numOfSidebearings","numMissing","sanitizeGlyph","sourceStart","sourceEnd","destStart","hintsValid","contoursCount","flagsCount","instructionsStart","instructionsLength","instructionsEnd","coordinatesLength","flag","xyLength","glyphDataLength","sanitizeHead","locaLength","numGlyphsPlusOne","sanitizeGlyphLocations","dupFirstEntry","itemEncode","locaData","locaDataSize","oldGlyfData","oldGlyfDataLength","newGlyfData","writeOffset","missingGlyphData","simpleGlyph","firstEntryLength","readPostScriptTable","post","maxpNumGlyphs","glyphNameIndexes","customNames","stringLength","readNameTable","FORMAT_0_HEADER_LENGTH","numRecords","stringsStart","records","NAME_RECORD_LENGTH","platform","language","record","sanitizeTTProgram","ttContext","funcId","lastEndf","lastDeff","callstack","functionsCalled","tooComplexToFollowFunctions","inFDEF","ifLevel","inELSE","functionsStackDeltas","stackTop","functionsDefined","functionsUsed","TTOpsStackDeltas","content","foldTTTable","checkInvalidFunctions","maxFunctionDefs","sanitizeTTPrograms","fpgm","prep","cvt","cvtData","hasGlyph","widthCode","missingGlyphs","skipToUnicode","cffFile","VALID_TABLES","isTrueType","maxZones","metricsOverride","cidToGidMap","isCidToGidMapEmpty","cmapTable","cmapPlatformId","cmapEncodingId","cmapMappings","cmapMappingsLength","unicodeOrCharCode","isUnicode","newMapping","compiler","namePrototype","builder","tableTag","getCharCodes","charCodes","createCharCode","mapping","getGlyphMapping","getCharset","baseGlyphName","accentGlyphName","baseGlyphId","accentGlyphId","accentOffset","baseFontCharCode","accentFontCharCode","tan","cffWidths","hmtx","spaceWidth","_shadowWidth","possibleSpaceReplacements","glyphUnicode","charToGlyph","charsToGlyphs","charsCache","charsCacheKey","ErrorFont","findBlock","streamBytes","signature","startIndex","streamBytesLength","signatureLength","getHeaderBlock","suggestedLength","headerBytes","headerBytesLength","block","EEXEC_SIGNATURE","streamStartPos","actualLength","SCAN_BLOCK_LENGTH","getEexecBlock","eexecBytes","PFB_HEADER_SIZE","headerBlockLength","length1","eexecBlockLength","length2","pfbHeader","pfbHeaderPresent","headerBlock","headerBlockParser","eexecBlock","eexecBlockParser","type2Charstrings","getType2Charstrings","getType2Subrs","wrap","getSeacs","type1Charstrings","type1Subrs","type2Subrs","charsetArray","charStringsIndex","fields","field","subrIndex","charsets","navigator","userAgent","pdfjsCoreImage","coreColorSpace","PDFImage","handleImageData","image","nativeDecoder","canDecode","decodeAndClamp","addend","coefficient","resizeImageMask","inline","isMask","imageMask","matte","colorSpace","needsDecode","decodeCoefficients","decodeAddends","maskDict","buildImage","smaskPromise","maskPromise","imagePromise","imageData","smaskData","maskData","createMask","imgArray","imageIsFromDecodeStream","inverseDecode","computedLength","haveFullData","decodeBuffer","getComponents","buf","bufferPos","rowComps","loop1End","loop2End","remainingBits","fillOpacity","rgbaBuf","alphaBuf","sw","sh","fillGrayBuffer","opacity","imageOffset","maskOffset","undoPreblend","matteRgb","matteR","matteG","matteB","createImageData","forceRGBA","imgData","kind","getImageBytes","newArray","maybeUndoPreblend","pdfjsCoreObj","coreCrypto","coreChunkedStream","Catalog","pdfManager","pageFactory","catDict","getCatalogObj","fontCache","pagePromises","metadata","streamRef","toplevelPagesDict","pagesObj","documentOutline","readDocumentOutline","parent","blackColor","outlineDict","parseDestDictionary","destDict","resultObj","docBaseUrl","title","rgbColor","outlineItem","unsafeUrl","newWindow","destinations","fetchDestination","nameTreeRef","nameDictionaryRef","dests","nameTree","NameTree","getAll","getDestination","destinationId","pageLabels","readPageLabels","style","prefix","numberTree","NumberTree","nums","currentLabel","currentIndex","labelDict","st","LIMIT","A_UPPER_CASE","A_LOWER_CASE","baseCharCode","letterIndex","character","charBuf","attachments","fs","FileSpec","serializable","appendIfJavaScriptDict","jsDict","js","openactionDict","actionType","cleanup","translatedFonts","translated","getPage","pageIndex","getPageDict","createPage","nodesToVisit","currentNode","fetchAsync","currentPageIndex","checkAllKids","kids","getPageIndex","pageRef","pagesBeforeRef","kidRef","parentRef","kidPromises","kid","addDefaultProtocolToUrl","tryConvertUrlEncoding","linkType","urlDict","remoteDest","JSON","stringify","namedAction","jsAction","URL_OPEN_METHODS","regex","RegExp","jsUrl","XRef","xrefstms","fontTypes","setStartXRef","startXRef","startXRefQueue","trailerDict","indexObjects","readXRef","trailer","processXRefTable","tableState","entryNum","streamPos","parserBuf1","parserBuf2","readXRefTable","firstEntryNum","free","uncompressed","processXRefStream","streamParameters","byteWidths","streamState","entryRanges","readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","readToken","LT","skipUntil","TAB","PERCENT","objRegExp","trailerBytes","startxrefBytes","endobjBytes","xrefBytes","trailers","xrefStms","contentLength","xrefTagOffset","getEntry","xrefEntry","cacheEntry","fetchUncompressed","fetchCompressed","substring","tableOffset","streamManager","tryFetch","NameOrNumberTree","_type","kidsOrEntries","loopCount","MAX_LEVELS","limits","currentKey","description","contentAvailable","pickPlatformItem","filename","_filename","contentRef","fileObj","ObjectLoader","mayHaveChildren","addChildren","refSet","load","_walk","nodesToRevisit","pendingRequests","foundMissingData","pdfjsCorePattern","getTilingPatternIR","operatorList","xstep","ystep","paintType","tilingType","ShadingType","FUNCTION_BASED","AXIAL","RADIAL","FREE_FORM_MESH","LATTICE_FORM_MESH","COONS_PATCH_MESH","TENSOR_PATCH_MESH","Pattern","getPattern","ctx","parseShading","shading","Shadings","RadialAxial","Mesh","featureId","Dummy","SMALL_NUMBER","coordsArr","shadingType","t0","domainArr","extendStart","extendEnd","extendArr","r1","r2","distance","step","colorStops","ratio","cssColor","background","r0","MeshStreamReader","tmpCompsBuf","csNumComps","tmpCsCompsBuf","colorFn","decodeType4Shading","mesh","reader","coords","ps","verticesLeft","hasData","readFlag","coord","readCoordinate","readComponents","align","figures","decodeType5Shading","verticesPerRow","buildFigureFromPatch","figure","ci","figureMinX","figureMinY","figureMaxX","figureMaxY","splitXBy","TRIANGLE_DENSITY","MIN_SPLIT_PATCH_CHUNKS_AMOUNT","MAX_SPLIT_PATCH_CHUNKS_AMOUNT","splitYBy","figureCoords","figureColors","cl","cr","c3","bRow","getB","bCol","newColor","decodeType6Shading","tmp4","decodeType7Shading","updateBounds","maxY","packData","coordsPacked","xy","colorsPacked","decodeContext","bitsPerCoordinate","bitsPerFlag","patchMesh","yi","buildB","lut","t_","pdfjsCoreEvaluator","coreImage","coreMurmurHash3","coreFonts","corePattern","coreCMap","coreMetrics","coreBidi","PartialEvaluator","NativeImageDecoder","resources","idFactory","options","DefaultPartialEvaluatorOptions","TimeSlotManager","maxImageSize","disableFontFace","cMapOptions","isDecodable","decodePromise","isSupported","TIME_SLOT_DURATION_MS","CHECK_TIME_EVERY","checked","endTime","TILING_PATTERN","SHADING_PATTERN","hasBlendModes","nodes","graphicStates","graphicStatesKeys","graphicState","bm","xObjects","xObjectsKeys","xObject","xResources","buildFormXObject","xobj","task","initialState","group","groupOptions","isolated","knockout","groupSubtype","backdrop","addOp","getOperatorList","buildPaintImageXObject","bitStrideLength","cached","softMask","SMALL_IMAGE_DIMENSIONS","imageObj","createObjId","addDependency","nativeImageDecoder","handleSMask","stateManager","smaskContent","smaskOptions","transferObj","transferFn","transferMap","handleTilingType","pattern","patternDict","tilingOpList","OperatorList","resourcesArray","patternResources","addDependencies","dependencies","argsArray","handleSetFont","fontArgs","fontRef","loadFont","loadType3Data","TranslatedFont","handleText","isAddToPathSet","textRenderingMode","buildPath","path","gState","gStateObj","gStateKeys","errorFont","fontRes","fontID","fontCapability","preEvaluatedFont","preEvaluateFont","descriptor","fontRefIsRef","fontAliases","aliasFontRef","docId","translatedPromise","translateFont","translatedFont","xrefFontStats","fontFile3","lastIndex","opArgs","handleColorN","patterns","patternName","xobjs","StateManager","EvalState","preprocessor","EvaluatorPreprocessor","timeSlotManager","promiseBody","ensureNotTerminated","stop","fontSize","combinedGlyphs","arrLength","arrItem","fillColorSpace","strokeColorSpace","shadingRes","patternIR","dictName","extGState","savedStatesDepth","getTextContent","normalizeWhitespace","combineTextItems","ensureTextContentItem","textContentItem","textState","textContent","styles","fontFamily","tsm","textHScale","textRise","glyphHeight","trm","ctm","textMatrix","textLineMatrix","scaleLineX","scaleCtmX","textAdvanceScale","lastAdvanceWidth","lastAdvanceHeight","fakeSpaceMin","SPACE_FACTOR","fakeMultiSpaceMin","MULTI_SPACE_FACTOR","fakeMultiSpaceMax","MULTI_SPACE_FACTOR_MAX","textRunBreakAllowed","Infinity","replaceWhitespace","WhitespaceRegexp","runBidiTransform","textChunk","bidiResult","buildTextContentItem","vMetricX","vMetricY","glyphWidth","NormalizedUnicodes","charSpacing","wordSpacing","addFakeSpaces","tx","ty","w0","translateTextMatrix","fakeSpaces","flushTextContentItem","TextState","xobjsCache","advance","fontNameArg","fontSizeArg","leading","isSameTextLine","translateTextLineMatrix","carriageReturn","calcTextLineMatrixAdvance","setTextLineMatrix","breakTextRun","texts","formTextContent","gStateFont","extractDataStructures","baseDict","toUnicodePromise","readToUnicode","cidSystemInfo","registry","ordering","supplement","readCidToGidMap","diffEncoding","isNonsymbolicFont","buildToUnicode","ucs2CMapName","ucs2CMap","ucs2","cmapObj","cidToGidStream","glyphsData","glyphID","extractWidths","glyphsVMetrics","baseFontName","getBaseFontMetrics","buildCharCodeToWidth","firstWidth","fontNameWoStyle","monospace","lookupName","Metrics","glyphWidths","widthsByGlyphName","uint8array","df","diffLength","diffBuf","diffEntry","maxCharIndex","baseFont","fontNameStr","baseFontStr","fontFile","length3","coded","cMapPromise","type3Loaded","sent","fontData","parentOperatorList","loadCharProcsPromise","charProcs","fontResources","charProcKeys","charProcOperatorList","glyphStream","getTransfers","intent","messageHandler","_totalLength","CHUNK_SIZE","CHUNK_SIZE_ABOUT","flush","addOpList","opList","QueueOptimizer","optimize","stateStack","old","txDiff","tyDiff","denominator","calcRenderMatrix","opMap","getOPMap","nonProcessedArgs","variableArgs","opSpec","argsLength","preprocessCommand","addState","parentState","handlePaintSolidColorImageMask","iFirstSave","iFirstPIMXO","InitialState","MIN_IMAGES_IN_INLINE_IMAGES_BLOCK","MAX_IMAGES_IN_INLINE_IMAGES_BLOCK","MAX_WIDTH","IMAGE_PADDING","curr","iCurr","iFirstTransform","iFirstPIIXO","maxLineHeight","currentX","currentY","imgWidth","imgHeight","MIN_IMAGES_IN_MASKS_BLOCK","MAX_IMAGES_IN_MASKS_BLOCK","MAX_SAME_IMAGES_IN_MASKS_BLOCK","iTransform","transformArgs","isSameImage","firstPIMXOArg0","firstTransformArg0","firstTransformArg3","iPIMXO","positions","images","maskParams","MIN_IMAGES_IN_BLOCK","MAX_IMAGES_IN_BLOCK","iFirstPIXO","iFirstRestore","firstPIXOArg0","MIN_CHARS_IN_BLOCK","MAX_CHARS_IN_BLOCK","iFirstBeginText","iFirstSetFont","iFirstSetTextMatrix","iFirstShowText","iFirstEndText","firstSetFontArg0","firstSetFontArg1","iFirst","iEndText","pdfjsCoreAnnotation","coreObj","coreEvaluator","AnnotationFactory","parameters","LinkAnnotation","TextAnnotation","fieldType","TextWidgetAnnotation","ButtonWidgetAnnotation","ChoiceWidgetAnnotation","WidgetAnnotation","PopupAnnotation","HighlightAnnotation","UnderlineAnnotation","SquigglyAnnotation","StrikeOutAnnotation","FileAttachmentAnnotation","Annotation","getTransformMatrix","getDefaultAppearance","appearanceState","appearance","appearances","setFlags","setRectangle","setColor","setBorderStyle","annotationFlags","borderStyle","hasAppearance","_hasFlag","_isViewable","_isPrintable","viewable","printable","hasFlag","AnnotationBorderStyle","dictType","setWidth","setStyle","setDashArray","setHorizontalCornerRadius","setVerticalCornerRadius","_preparePopup","hasPopup","contents","loadResources","objectLoader","renderForms","appearanceDict","resourcesPromise","appendToOperatorList","annotations","partialEvaluator","annotationPromises","operatorLists","dashArray","horizontalCornerRadius","verticalCornerRadius","isValid","allZeros","element","validNumber","radius","annotationType","fieldName","_constructFieldName","fieldValue","alternativeText","defaultAppearance","fieldResources","fieldFlags","readOnly","hasFieldFlag","loopDict","alignment","textAlignment","maximumLength","multiLine","comb","checkBox","radioButton","buttonValue","fieldParent","fieldParentValue","appearanceStates","normalAppearanceState","option","isOptionArray","exportValue","displayValue","combo","multiSelect","DEFAULT_ICON_SIZE","parentItem","parentId","parentFlags","pdfjsCoreDocument","coreAnnotation","Page","pageDict","evaluatorOptions","uniquePrefix","idCounters","DEFAULT_USER_UNIT","LETTER_SIZE_MEDIABOX","getPageProp","getInheritedPageProp","valueArray","MAX_LOOP_COUNT","mediaBox","cropBox","userUnit","view","intersection","getContentStream","ensure","renderInteractiveForms","contentStreamPromise","dataPromises","pageListPromise","contentStream","transparency","annotationsPromise","datas","pageOpList","annotationsReadyPromise","extractTextContent","getAnnotationsData","annotationsData","annotationRefs","annotationFactory","annotationRef","annotation","PDFDocument","find","needle","backwards","lastIndexOf","FINGERPRINT_FIRST_BYTES","EMPTY_FINGERPRINT","DocumentInfoValidators","Title","Author","Subject","Keywords","Creator","Producer","CreationDate","ModDate","Trapped","setup","catalog","pdfFormatVersion","acroForm","xfa","linearization","checkHeader","MAX_VERSION_LENGTH","parseStartXRef","documentInfo","infoDict","docInfo","PDFFormatVersion","IsAcroFormPresent","IsXFAPresent","validEntries","fingerprint","fileID","idArray","pdfjsCorePdfManager","coreDocument","BasePdfManager","_docId","_docBaseUrl","ensureDoc","pdfDocument","ensureXRef","ensureCatalog","requestLoadedStream","sendProgressiveData","updatePassword","terminate","LocalPdfManager","NetworkPdfManager","ensureHelper","pdfjsCoreWorker","corePdfManager","setPDFNetworkStreamClass","cls","PDFNetworkStream","initializeWorker","consoleTimer","workerConsole","WorkerMessageHandler","WorkerTask","terminated","_capability","finished","finish","PDFWorkerStream","_queuedChunks","initialData","_msgHandler","_isRangeSupported","disableRange","_isStreamingSupported","disableStream","_contentLength","_fullRequestReader","_rangeReaders","_onReceiveData","_onProgress","PDFWorkerStreamReader","queuedChunks","_stream","_done","_requests","_headersReady","PDFWorkerStreamRangeReader","_begin","_end","_queuedChunk","_enqueue","some","evt","firstReader","_removeRangeReader","getFullReader","cancel","readers","requestCapability","headersReady","isRangeSupported","requestsCapability","testMessageProcessed","supportTransfers","xhr","responseExists","supportTypedArray","createDocumentHandler","docParams","startWorkerTask","WorkerTasks","finishWorkerTask","loadDocument","loadDocumentCapability","parseSuccess","numPagesPromise","fingerprintPromise","encryptedPromise","doc","parseFailure","getPdfManager","pdfManagerCapability","pdfStream","chunkedViewerLoading","fullRequest","cancelXHRs","cachedChunks","flushChunks","pdfFile","readPromise","setupDoc","onSuccess","pdfInfo","onFailure","pdfManagerReady","cMapUrl","cMapPacked","disableCreateObjectURL","newPdfManager","workerHandlerName","page","rotatePromise","refPromise","userUnitPromise","viewPromise","pageNum","wrappedException","minimumStackMessage","waitOn","require","pdfjsCoreNetwork","coreWorker","NetworkManager","isHttp","httpHeaders","withCredentials","getXhr","currXhrId","getArrayBuffer","_options","_manager","_rangeChunkSize","_rangeRequestReaders","PDFNetworkStreamFullRequestReader","onHeadersReceived","_onHeadersReceived","onProgressiveData","_onProgressiveData","onDone","_onDone","_onError","_fullRequestId","requestFull","_headersReceivedCapability","_disableRange","_cachedChunks","_storedError","PDFNetworkStreamRangeRequestReader","_requestId","onClosed","OK_RESPONSE","PARTIAL_CONTENT_RESPONSE","supportsMozChunked","listeners","xhrId","pendingRequest","property","setRequestHeader","rangeStr","expectedStatus","useMozChunkedLoading","mozChunked","onStateChange","onprogress","xhrStatus","ok_response_on_range_request","rangeHeader","getResponseHeader","matches","hasPendingRequests","getRequestXhr","isStreamingRequest","isPendingRequest","isLoadedRequest","abortAllRequests","abortRequest","_onRangeRequestReaderClosed","_validateRangeRequestCapabilities","networkManager","fullRequestXhrId","fullRequestXhr","contentEncoding","exception","lengthComputable","_close"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDMMW;;;AAIA,SAASP,EAAQD,EAASH,IEhChC,mBAAAY,mBAA4CC,wBAC5Cb,wBAAA,MFuDMc;;;AAIA,SAASV,EAAQD,GG5EvBC,EAAAD,QAAA,SAAAC,GAQA,MAPAA,GAAAW,kBACAX,EAAAY,UAAA,aACAZ,EAAAa,SAEAb,EAAAc,YACAd,EAAAW,gBAAA,GAEAX,IHoFMe;;;AAIA,SAASf,EAAQD,EAASH,GAE/B,GAAIoB,GAAgCC,EAA8BC,GIlGnE,SAAAC,EAAAnB,IAcA,SAAAoB,EAAAC,GACA,YAEAJ,IAAAlB,GAAAiB,EAAA,EAAAE,EAAA,kBAAAF,KAAAM,MAAAvB,EAAAkB,GAAAD,IAAAO,SAAAL,IAAAlB,EAAAD,QAAAmB,KAMCM,KAAA,SAAAzB,GACD,YACA,IAGA0B,IADA,mBAAAC,oBAAAC,cAAAD,SAAAC,cAAAC,IAAA,UAEA,YACA,SAAAR,EAAAC,GACAA,EAAAD,EAAAS,gCACGL,KAAA,SAAAzB,GACH,GAAA+B,GAAA,WA6RA,QAAAA,GAAAC,EAAAC,EAAAC,GACAT,KAAAO,OACAP,KAAAU,GAAAF,EACAR,KAAAW,QAAAF,EACAT,KAAAY,MAAAL,EAAAC,GACAR,KAAAa,KAAA,EACAb,KAAAc,SACAd,KAAAY,MAAAZ,KAAAY,OAAA,QAAAZ,KAAAa,MAAA,MACAb,KAAAa,KAAAb,KAAAa,MAAA,QACAb,KAAAe,IAAA,EACAf,KAAAgB,EAAA,MAtSA,GAAAC,KAEAC,GAAA,MACAC,KAAA,EACAC,KAAA,EACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,EACAC,KAAA,EACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,EACAC,KAAA,EACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,EACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,EACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,EACAC,KAAA,EACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,EACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,EACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,GACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,GACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,GACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,EACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,EACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,EACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GA2FA,OA5EAf,GAAAgB,WACAR,OAAA,WACA,GAAAP,GAAAP,KAAAO,KACAG,EAAAV,KAAAU,EACA,UAAAH,EAAAG,GAAA,CACA,GAAAa,GAAAhB,EAAAG,EAAA,EACAa,GAAA,KACAvB,KAAAa,MAAA,MACAb,KAAAe,GAAA,IAEAL,IACAV,KAAAa,MAAAN,EAAAG,IAAA,EACAV,KAAAe,GAAA,EACAf,KAAAU,UAGAA,KACAV,KAAAa,MAAAH,EAAAV,KAAAW,QAAAJ,EAAAG,IAAA,QACAV,KAAAe,GAAA,EACAf,KAAAU,IAEAV,MAAAa,KAAA,QACAb,KAAAY,OAAAZ,KAAAa,MAAA,GACAb,KAAAa,MAAA,QAGAW,QAAA,SAAAC,EAAAC,GACA,GAGAC,GAHAC,EAAAH,EAAAC,IAAA,EAAAG,EAAA,EAAAJ,EAAAC,GACAI,EAAAb,EAAAW,GACAG,EAAAD,EAAAZ,GAEAF,EAAAhB,KAAAgB,EAAAe,CACA,IAAA/B,KAAAY,MAAAmB,EACAf,EAAAe,GACAf,EAAAe,EACAJ,EAAAE,EACAD,EAAAE,EAAAX,OAEAH,EAAAe,EACAJ,EAAA,EAAAE,EACA,IAAAC,EAAAT,aACAQ,EAAAF,GAEAC,EAAAE,EAAAV,UAEO,CAEP,GADApB,KAAAY,OAAAmB,EACA,WAAAf,GAEA,MADAhB,MAAAgB,IACAa,CAEAb,GAAAe,GACAJ,EAAA,EAAAE,EACA,IAAAC,EAAAT,aACAQ,EAAAF,GAEAC,EAAAE,EAAAV,OAEAO,EAAAE,EACAD,EAAAE,EAAAX,MAGA,EACA,KAAAnB,KAAAe,IACAf,KAAAc,SAEAE,IAAA,EACAhB,KAAAY,MAAAZ,KAAAY,OAAA,QAAAZ,KAAAa,MAAA,KACAb,KAAAa,KAAAb,KAAAa,MAAA,QACAb,KAAAe,WACO,WAAAC,GAGP,OAFAhB,MAAAgB,IACAS,EAAAC,GAAAE,GAAA,EAAAC,EACAF,IAGArB,IAEA/B,GAAA+B,sBAEA,SAAAV,EAAAC,GACAA,EAAAD,EAAAoC,uBACGhC,KAAA,SAAAzB,GACH,GAAA0D,IACA,UACA,QACA,SACA,WACA,aACA,SACA,UACA,YACA,aACA,YACA,aACA,WACA,OACA,QACA,SACA,SACA,QACA,OACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,QACA,YACA,OACA,QACA,UACA,WACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,cACA,YACA,eACA,cACA,aACA,YACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,YACA,MACA,aACA,aACA,aACA,OACA,WACA,WACA,MACA,SACA,UACA,WACA,cACA,eACA,gBACA,gBACA,iBACA,KACA,KACA,SACA,SACA,YACA,iBACA,YACA,SACA,iBACA,eACA,gBACA,iBACA,WACA,cACA,eACA,QACA,QACA,aACA,QACA,SACA,QACA,YACA,WACA,OACA,UACA,eACA,SACA,QACA,SACA,KACA,cACA,SACA,SACA,KACA,eACA,KACA,WACA,SACA,SACA,KACA,aACA,cACA,aACA,KACA,YACA,MACA,UACA,YACA,QACA,aACA,SACA,YACA,SACA,QACA,gBACA,cACA,aACA,QACA,MACA,WACA,gBACA,YACA,SACA,cACA,YACA,SACA,QACA,SACA,WACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,YACA,SACA,SACA,cACA,YACA,SACA,QACA,SACA,WACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,YACA,UAEAC,GACA,UACA,QACA,cACA,oBACA,iBACA,iBACA,iBACA,aACA,oBACA,qBACA,iBACA,iBACA,QACA,SACA,SACA,WACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,QACA,YACA,gBACA,sBACA,iBACA,gBACA,YACA,YACA,eACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,KACA,KACA,KACA,MACA,MACA,oBACA,qBACA,kBACA,iBACA,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,gBACA,YACA,SACA,aACA,kBACA,eACA,cACA,cACA,cACA,gBACA,aACA,aACA,iBACA,cACA,aACA,iBACA,cACA,YACA,eACA,aACA,UACA,gBACA,oBACA,YACA,eACA,cACA,eACA,WACA,YACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,iBACA,iBACA,gBACA,cACA,cACA,mBACA,cACA,iBACA,aACA,UACA,gBACA,cACA,cACA,mBACA,iBACA,cACA,cACA,mBACA,iBACA,WACA,cACA,cACA,cACA,mBACA,cACA,iBACA,UACA,cACA,cACA,cACA,mBACA,iBACA,cACA,aACA,kBAEAC,GACA,UACA,QACA,iBACA,iBACA,oBACA,qBACA,iBACA,iBACA,QACA,SACA,SACA,WACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,QACA,YACA,gBACA,sBACA,iBACA,YACA,YACA,eACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,KACA,KACA,KACA,MACA,MACA,oBACA,qBACA,iBACA,gBACA,YACA,SACA,eACA,aACA,iBACA,aACA,UACA,gBACA,YACA,eACA,cACA,eACA,WACA,YACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,iBACA,iBACA,gBAEA5D,GAAA0D,kBACA1D,EAAA2D,gBACA3D,EAAA4D,wBAEA,SAAAvC,EAAAC,GACAA,EAAAD,EAAAwC,wBACGpC,KAAA,SAAAzB,GAmwDH,QAAA8D,GAAAC,GACA,OAAAA,GACA,sBACA,MAAAC,EACA,wBACA,MAAAC,EACA,wBACA,MAAAC,EACA,yBACA,MAAAC,EACA,4BACA,MAAAC,EACA,sBACA,MAAAC,EACA,yBACA,MAAAC,EACA,SACA,aAnxDA,GAAAD,IACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,QACA,cACA,oBACA,GACA,iBACA,iBACA,iBACA,aACA,oBACA,qBACA,iBACA,iBACA,QACA,SACA,SACA,WACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,QACA,YACA,gBACA,sBACA,iBACA,gBACA,GACA,YACA,YACA,eACA,YACA,YACA,GACA,GACA,YACA,GACA,GACA,YACA,YACA,YACA,YACA,GACA,GACA,YACA,YACA,YACA,GACA,KACA,KACA,KACA,MACA,MACA,oBACA,GACA,qBACA,kBACA,iBACA,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,gBACA,YACA,SACA,aACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,kBACA,eACA,cACA,GACA,GACA,cACA,cACA,gBACA,aACA,aACA,GACA,iBACA,GACA,GACA,cACA,GACA,GACA,aACA,iBACA,GACA,GACA,cACA,YACA,eACA,GACA,GACA,GACA,aACA,UACA,gBACA,oBACA,YACA,eACA,cACA,eACA,WACA,YACA,GACA,GACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,iBACA,iBACA,gBACA,cACA,cACA,mBACA,cACA,iBACA,aACA,UACA,gBACA,cACA,cACA,mBACA,iBACA,cACA,cACA,mBACA,iBACA,WACA,cACA,cACA,cACA,mBACA,cACA,iBACA,UACA,cACA,cACA,cACA,mBACA,iBACA,cACA,aACA,kBAEAC,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,QACA,cACA,oBACA,eACA,iBACA,iBACA,iBACA,aACA,oBACA,qBACA,iBACA,iBACA,QACA,SACA,SACA,WACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,QACA,YACA,GACA,sBACA,GACA,gBACA,GACA,GACA,GACA,GACA,WACA,GACA,GACA,aACA,UACA,gBACA,YACA,eACA,cACA,eACA,WACA,YACA,GACA,GACA,GACA,GACA,GACA,GACA,KACA,KACA,KACA,MACA,MACA,oBACA,GACA,qBACA,kBACA,iBACA,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,gBACA,YACA,SACA,aACA,GACA,GACA,YACA,eACA,GACA,GACA,GACA,GACA,cACA,cACA,mBACA,iBACA,cACA,aACA,gBACA,cACA,cACA,mBACA,iBACA,cACA,cACA,mBACA,iBACA,cACA,cACA,cACA,mBACA,iBACA,cACA,cACA,cACA,mBACA,iBACA,GACA,gBACA,eACA,gBACA,cACA,gBACA,gBACA,cACA,GACA,eACA,cACA,GACA,gBACA,GACA,aACA,YACA,eACA,GACA,gBACA,iBACA,cACA,GACA,iBACA,GACA,aACA,GACA,eACA,eACA,cACA,UACA,cACA,oBACA,cACA,cACA,GACA,GACA,GACA,GACA,GACA,GACA,eACA,GACA,GACA,GACA,GACA,GACA,UACA,aACA,iBACA,GACA,GACA,GACA,GACA,kBACA,GACA,iBACA,GACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,eACA,eACA,GACA,YACA,YACA,YACA,GACA,GACA,YACA,YACA,YACA,GACA,GACA,GACA,GACA,GACA,YACA,cACA,aACA,cACA,YACA,YACA,YACA,gBACA,iBACA,iBACA,aAEAJ,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,QACA,SACA,WACA,aACA,SACA,UACA,YACA,cACA,YACA,aACA,WACA,OACA,QACA,SACA,SACA,QACA,OACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,QACA,YACA,OACA,QACA,UACA,WACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,cACA,YACA,eACA,cACA,aACA,QACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,YACA,MACA,aACA,aACA,GACA,YACA,QACA,WACA,SACA,SACA,YACA,YACA,SACA,SACA,cACA,YACA,SACA,QACA,WACA,SACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,OACA,WACA,UACA,SACA,YACA,aACA,aACA,YACA,YACA,QACA,WACA,WACA,KACA,SACA,WACA,YACA,YACA,eACA,MACA,KACA,cACA,YACA,UACA,KACA,WACA,cACA,eACA,QACA,KACA,SACA,eACA,aACA,aACA,UACA,SACA,cACA,QACA,gBACA,iBACA,WACA,QACA,SACA,SACA,SACA,KACA,KACA,SACA,SACA,eACA,gBACA,YACA,aACA,SACA,UACA,YACA,YACA,WACA,WACA,gBACA,iBACA,KACA,KACA,YACA,iBACA,iBACA,eACA,cACA,cACA,cACA,SACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,cACA,QACA,SACA,SACA,cACA,SACA,WACA,aACA,QACA,SACA,QACA,YACA,OACA,UACA,eACA,SACA,SAEAD,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,QACA,SACA,WACA,aACA,SACA,UACA,YACA,aACA,YACA,aACA,WACA,OACA,QACA,SACA,SACA,QACA,OACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,QACA,YACA,OACA,QACA,UACA,WACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,cACA,YACA,eACA,cACA,aACA,YACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,YACA,MACA,aACA,aACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,aACA,OACA,WACA,WACA,MACA,SACA,UACA,WACA,cACA,eACA,gBACA,gBACA,iBACA,KACA,KACA,GACA,SACA,SACA,YACA,iBACA,GACA,YACA,SACA,iBACA,eACA,gBACA,iBACA,WACA,cACA,GACA,eACA,GACA,QACA,QACA,aACA,QACA,SACA,QACA,YACA,WACA,GACA,OACA,UACA,GACA,eACA,SACA,QACA,SACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KACA,GACA,cACA,GACA,GACA,GACA,GACA,SACA,SACA,KACA,eACA,GACA,GACA,GACA,GACA,GACA,KACA,GACA,GACA,GACA,WACA,GACA,GACA,SACA,SACA,KACA,cAEAD,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,QACA,SACA,WACA,aACA,SACA,UACA,YACA,cACA,YACA,aACA,WACA,OACA,QACA,SACA,SACA,QACA,OACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,QACA,YACA,OACA,QACA,UACA,WACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,cACA,YACA,eACA,cACA,aACA,QACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,YACA,MACA,aACA,aACA,SACA,OACA,SACA,iBACA,SACA,eACA,WACA,SACA,YACA,aACA,cACA,SACA,gBACA,KACA,SACA,SACA,SACA,SACA,YACA,aACA,eACA,gBACA,SACA,SACA,SACA,QACA,YACA,SACA,iBACA,KACA,SACA,SACA,YACA,QACA,aACA,OACA,WACA,WACA,MACA,YACA,UACA,WACA,YACA,cACA,gBACA,aACA,SACA,aACA,SACA,SACA,YACA,cACA,gBACA,QACA,KACA,YACA,iBACA,UACA,cACA,eACA,iBACA,aACA,UACA,gBACA,eACA,SACA,SACA,cACA,SACA,YACA,QACA,KACA,WACA,SACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,MACA,SACA,SACA,SACA,cACA,SACA,YACA,WACA,SACA,SACA,SACA,cACA,YACA,SACA,QACA,aACA,SACA,SACA,cACA,SACA,YACA,QACA,KACA,WACA,SACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,MACA,SACA,SACA,SACA,cACA,SACA,YACA,SACA,SACA,SACA,SACA,cACA,YACA,SACA,QACA,aAEAG,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,QACA,SACA,YACA,aACA,cACA,UACA,YACA,WACA,YACA,aACA,eACA,OACA,QACA,QACA,SACA,QACA,OACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,QACA,YACA,OACA,QACA,UACA,WACA,YACA,QACA,OACA,MACA,QACA,UACA,MACA,QACA,MACA,OACA,SACA,QACA,SACA,KACA,KACA,UACA,KACA,QACA,MACA,QACA,MACA,UACA,SACA,QACA,KACA,MACA,OACA,cACA,YACA,eACA,gBACA,aACA,YACA,QACA,OACA,MACA,QACA,UACA,MACA,QACA,MACA,OACA,OACA,QACA,SACA,KACA,KACA,UACA,KACA,QACA,MACA,QACA,MACA,UACA,SACA,QACA,KACA,MACA,OACA,YACA,MACA,aACA,UACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,OACA,WACA,SACA,YACA,WACA,WACA,SACA,OACA,UACA,QACA,QACA,YACA,YACA,UACA,aACA,YACA,SACA,YACA,SACA,eACA,WACA,eACA,cACA,SACA,SACA,WACA,cACA,cACA,WACA,cACA,eACA,iBACA,QACA,WACA,WACA,cACA,iBACA,aACA,WACA,eACA,QACA,iBACA,iBACA,YACA,eACA,eACA,UACA,aACA,QACA,WACA,gBACA,iBACA,iBACA,UACA,UACA,UACA,aACA,aACA,YACA,eACA,eACA,aACA,gBACA,eACA,UACA,YACA,eACA,gBACA,gBACA,YACA,cACA,cACA,cACA,gBACA,gBACA,gBACA,cACA,eACA,cACA,UACA,GACA,aACA,WACA,aACA,aACA,aACA,eACA,eACA,eACA,iBACA,iBACA,iBACA,eACA,gBACA,gBAEAC,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,QACA,KACA,KACA,OACA,KACA,KACA,KACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,GACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,GACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OAsBApE,GAAAgE,kBACAhE,EAAAiE,mBACAjE,EAAAkE,mBACAlE,EAAAmE,oBACAnE,EAAAoE,uBACApE,EAAAqE,iBACArE,EAAA8D,gBAEA,SAAAzC,EAAAC,GACAA,EAAAD,EAAAkD,qBACG9C,KAAA,SAAAzB,GA2NH,QAAAwE,GAAAC,GACAC,EAAAD,EAEA,QAAAE,KACA,MAAAD,GAEA,QAAAE,GAAAC,GACAH,GAAAI,EAAAC,OACAC,QAAAC,IAAA,SAAAJ,GAGA,QAAAK,GAAAL,GACAH,GAAAI,EAAAK,UACAH,QAAAC,IAAA,YAAAJ,GAGA,QAAAO,GAAAC,GACAL,QAAAC,IAAA,yBAAAI,GAEA,QAAAC,GAAAT,GAKA,KAJAH,IAAAI,EAAAS,SACAP,QAAAC,IAAA,UAAAJ,GACAG,QAAAC,IAAAO,MAEA,GAAAC,OAAAZ,GAEA,QAAAW,KACA,IACA,SAAAC,OACK,MAAAC,GACL,MAAAA,GAAAC,MAAAD,EAAAC,MAAAC,MAAA,MAAAC,MAAA,GAAAC,KAAA,UAGA,QAAAC,GAAAC,EAAAnB,GACAmB,GACAV,EAAAT,GAWA,QAAAoB,GAAAC,EAAAC,GACA,IACA,G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zB,EAAAkrB,EAAAgC,EAAAC,GACH,GAAA7nB,GAAA4lB,EAAA5lB,MACAV,EAAAsmB,EAAAtmB,KACAmD,EAAAmjB,EAAAnjB,cACA7C,EAAAgmB,EAAAhmB,KACAuG,EAAAyf,EAAAzf,QACAsQ,EAAAmP,EAAAnP,KACAlT,EAAAqiB,EAAAriB,cACA9C,EAAAmlB,EAAAnlB,OACArC,EAAAwpB,EAAAxpB,gBACAC,EAAAupB,EAAAvpB,cACAC,EAAAspB,EAAAtpB,oBACAK,EAAAkpB,EAAAlpB,iBACAI,EAAA8oB,EAAA9oB,eACA+oB,EAAA,GACAC,GACA,UACA,QACA,SACA,WACA,aACA,SACA,UACA,YACA,aACA,YACA,aACA,WACA,OACA,QACA,SACA,SACA,QACA,OACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,QACA,YACA,OACA,QACA,UACA,WACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,cACA,YACA,eACA,cACA,aACA,YACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,YACA,MACA,aACA,aACA,aACA,OACA,WACA,WACA,MACA,SACA,UACA,WACA,cACA,eACA,gBACA,gBACA,iBACA,KACA,KACA,SACA,SACA,YACA,iBACA,YACA,SACA,iBACA,eACA,gBACA,iBACA,WACA,cACA,eACA,QACA,QACA,aACA,QACA,SACA,QACA,YACA,WACA,OACA,UACA,eACA,SACA,QACA,SACA,KACA,cACA,SACA,SACA,KACA,eACA,KACA,WACA,SACA,SACA,KACA,aACA,cACA,aACA,KACA,YACA,MACA,UACA,YACA,QACA,aACA,SACA,YACA,SACA,QACA,gBACA,cACA,aACA,QACA,MACA,WACA,gBACA,YACA,SACA,cACA,YACA,SACA,QACA,SACA,WACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,YACA,SACA,SACA,cACA,YACA,SACA,QACA,SACA,WACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,YACA,SACA,cACA,oBACA,iBACA,iBACA,iBACA,aACA,oBACA,qBACA,iBACA,iBACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,gBACA,sBACA,iBACA,gBACA,YACA,YACA,eACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,KACA,MACA,MACA,oBACA,qBACA,kBACA,iBACA,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,gBACA,YACA,SACA,aACA,kBACA,eACA,cACA,cACA,cACA,gBACA,aACA,aACA,iBACA,cACA,aACA,iBACA,cACA,YACA,eACA,oBACA,YACA,eACA,cACA,eACA,WACA,YACA,eACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,iBACA,iBACA,gBACA,cACA,cACA,mBACA,cACA,iBACA,aACA,UACA,gBACA,cACA,cACA,mBACA,iBACA,cACA,cACA,mBACA,iBACA,WACA,cACA,cACA,cACA,mBACA,cACA,iBACA,UACA,cACA,cACA,cACA,mBACA,iBACA,cACA,aACA,iBACA,UACA,UACA,UACA,UACA,QACA,OACA,OACA,QACA,SACA,UACA,QACA,YAEAC,EAAA,WA0RA,QAAAA,GAAAC,EAAAC,EAAAC,GACAhsB,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GACA,IAEA,eACA,MACA,QAIA,GACA,IAEA,gBACA,QACA,QAIA,GACA,IAEA,iBACA,MACA,KAIA,GACA,IAEA,kBACA,MACA,KAIA,GACA,IAEA,cACA,MACA,KAIA,GACA,IAEA,WACA,MACA,QAIA,GACA,IAEA,UACA,MACA,QAIA,GACA,IAEA,WACA,SACA,QAIA,GACA,IAEA,UACA,SACA,QAIA,GACA,IAEA,WACA,MACA,OAGAX,EAAA,IASA,OADA/G,GAAAlsB,UAAAmE,OAAAQ,OAAAquB,EAAAhzB,WACAksB,KAEA6E,EAAA,WA2IA,QAAAA,GAAA5E,GACA,OAAA8G,IACAA,EAAAD,EAAAW,aAAAC,IAEAZ,EAAA31B,KAAAqB,KAAAu0B,EAAA9G,GACAztB,KAAAqvB,WAAA,KA/IA,GAAA6F,KAEA,EACA,aACA,QACA,OAGA,EACA,aACA,QACA,OAGA,EACA,cACA,QACA,OAGA,EACA,mBACA,QACA,QAIA,GACA,GAEA,YACA,MACA,WAIA,GACA,IAEA,YACA,MACA,KAIA,GACA,IAEA,WACA,MACA,IAGA,GACA,QACA,MACA,OAGA,GACA,QACA,MACA,QAIA,GACA,IAEA,YACA,QACA,QAIA,GACA,IAEA,YACA,QACA,QAIA,GACA,IAEA,YACA,MACA,KAIA,GACA,IAEA,gBACA,MACA,KAIA,GACA,IAEA,kBACA,MACA,OAIA,GACA,IAEA,oBACA,MACA,IAGA,GACA,gBACA,MACA,IAGA,GACA,gBACA,MACA,IAGA,GACA,QACA,SACA,OAGAX,EAAA,IASA,OADAlC,GAAA/wB,UAAAmE,OAAAQ,OAAAquB,EAAAhzB,WACA+wB,KAEAU,GACAC,UAAA,EACAC,OAAA,EACAC,cAAA,GAEAJ,EAAA,WACA,QAAAA,GAAAU,EAAAL,EAAA3E,EAAA4E,GACApzB,KAAAwzB,aACAxzB,KAAAmzB,SACAnzB,KAAAwuB,UACAxuB,KAAAozB,MAEA,MAAAN,MAEAkB,EAAA,WACA,QAAAA,GAAAR,EAAAL,EAAA1E,EAAA2E,GACApzB,KAAAwzB,aACAxzB,KAAAmzB,SACAnzB,KAAAyuB,WACAzuB,K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,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EA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CA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAEAmgD,EAAA,GAAAngD,aACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAEAkgD,EAAA,GAAAlgD,aACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAoQA,OAhPA65C,GAAA5/C,WACAggD,WAAA,SAAAtiB,GACAh/B,KAAAg/B,WAEAjE,MAAA,WACA/6B,KAAAyB,SAAA,GAAAi/B,WAAA,IACA1gC,KAAAyB,SAAA,KACAzB,KAAAyB,SAAAomD,GAAA,GACA7nD,KAAAyB,SAAAqmD,GAAA,GAEAC,yBAAA,SAAApoB,EAAAqoB,EAAA9tC,GACA,GAIArT,GAJA8gD,EAAA3nD,KAAA2nD,sBACAroC,EAAAtf,KAAAsf,MAAAC,EAAAvf,KAAAuf,OACAwU,EAAAi0B,EAAA,EACApH,EAAAoH,EAAA,EAAA1oC,CAEAqgB,GAAA,IACA94B,EAAAqT,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QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,S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,EAAQjB,IAAA,CACtD,GAAA40B,GAAAz7B,KAAAo0D,QAAAvtD,EACA40B,GAAAlC,gBACAjf,EAAA6C,cAAAm3C,EAAA74B,EAAAlC,kBAGA,MAAA+6B,IAEAH,KAEAI,EAAA,WAioBA,QAAAA,GAAApuD,EAAAquD,GACAx0D,KAAAmG,MACAnG,KAAA4d,KAAAzX,EAAAyX,IACA,IAAA62C,GAAAtuD,EAAAk0B,UACAq6B,EAAAvuD,EAAAk0B,SACAo6B,MAAA,GAAAC,KAAA,GACA7wD,EAAA,mCAAA4wD,EAAA,KAAAC,GAEA,QAAAD,IACA5wD,EAAA,+CAAA4wD,EAAA,KAAAC,KAEAD,GAAA,GAAAC,GAAA,QACA7wD,EAAA,+BAAA4wD,EAAA,KAAAC,GAEA,GAAAA,GACA7wD,EAAA,kCAAA4wD,EAAA,KAAAC,GAEA10D,KAAA20D,SAAA,EACA30D,KAAA40D,QAAA,EACAnB,EAAA90D,KAAAqB,KAAAw0D,GAnpBA,GAAAK,GAAA,GAAAxyB,aACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,KAEAyyB,EAAA,GAAAzyB,aACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,IACA,IACA,MAEA0yB,EAAA,GAAA1yB,aACA,EACA,EACA,EACA,EACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,SAEA2yB,GACA,GAAA3yB,ayB,GACA,GAAA5yB,aACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,EACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,IA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IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAD,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAD,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGAQ,KAEA,GACA,IAGA,GACAZ,KAGA,GACA,KAGA,GACA,KAGA,GACA,KAGA,GACA,KAGA,GACA,KAGA,GACA,KAGA,GACA,KAGA,GACA,KAGA,GACA,KAGA,GACA,KAGA,GACA,KAGA,GACA,KAGA,GACA,KAGA,GACA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,GAAA,MACAA,GAAA,OACAA,IAAA,OACA,IAAA8T,EACAA,GAAA,MACAA,GAAA,OACAA,IAAA,SAxMA,GAAA/kD,GAAA,GAAApT,aACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,KAEAgxB,EAAA,GAAAgK,cACA,WACA,UACA,WACA,YACA,UACA,YACA,YACA,SACA,YACA,YACA,OACA,WACA,YACA,UACA,WACA,YACA,WACA,WACA,WACA,WACA,UACA,UACA,WACA,UACA,WACA,YACA,UACA,YACA,YACA,SACA,YACA,YACA,QACA,WACA,YACA,UACA,WACA,YACA,WACA,WACA,WACA,WACA,UACA,UACA,WACA,UACA,WACA,WACA,UACA,YACA,YACA,SACA,YACA,YACA,SACA,WACA,YACA,UACA,WACA,YACA,WACA,WACA,WACA,WAyEA,OAAAjZ,MAEA22C,EAAA,WACA,QAAAA,GAAAC,EAAAC,GACAjgE,KAAAkgE,KAAA,EAAAF,EACAhgE,KAAAmgE,IAAA,EAAAF,EA0EA,MAxEAF,GAAAz+D,WACA8+D,IAAA,SAAAC,GACArgE,KAAAkgE,MAAAG,EAAAH,KACAlgE,KAAAmgE,KAAAE,EAAAF,KAEAG,IAAA,SAAAD,GACArgE,KAAAkgE,MAAAG,EAAAH,KACAlgE,KAAAmgE,KAAAE,EAAAF,KAEAI,GAAA,SAAAF,GACArgE,KAAAkgE,MAAAG,EAAAH,KACAlgE,KAAAmgE,KAAAE,EAAAF,KAEAK,WAAA,SAAAC,GACAA,GAAA,IACAzgE,KAAAmgE,IAAAngE,KAAAkgE,OAAAO,EAAA,KACAzgE,KAAAkgE,KAAA,IAEA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AAA,MACA,IAAAA,EACAC,GAAA,OACAA,GAAA,OACAA,GAAA,MACA,IAAAA,EACAC,GAAA,OACAA,GAAA,OACAA,GAAA,MACA,IAAAA,IAtJA,GAAAtpC,IACA,WACA,WACA,WACA,WACA,UACA,WACA,WACA,WACA,WACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WAyFA,OAAAjP,MAEAy4C,EAAA,WACA,QAAAz3D,GAAAuB,EAAAzD,EAAA2X,EAAAutB,EAAA7kB,GACA5c,EAAAq1D,OAAA94D,GACAyD,EAAAy0D,IAAAvgD,GACA0I,EAAAy4C,OAAA94D,GACAqgB,EAAAq4C,MACAr4C,EAAA63C,IAAAhzB,GACAzhC,EAAA20D,IAAA/3C,GAEA,QAAA44C,GAAAx1D,EAAAzD,EAAA2X,EAAAutB,EAAA7kB,GACA5c,EAAAq1D,OAAA94D,GACAyD,EAAAy0D,IAAAvgD,GACA0I,EAAAy4C,OAAA94D,GACAqgB,EAAA63C,IAAAhzB,GACAzhC,EAAA20D,IAAA/3C,GACAA,EAAAy4C,OAAAnhD,GACA0I,EAAA63C,IAAAhzB,GACAzhC,EAAA20D,IAAA/3C,GAEA,QAAA64C,GAAAz1D,EAAAzD,EAAAqgB,GACA5c,EAAAq1D,OAAA94D,GACAyD,EAAAg1D,YAAA,IACAp4C,EAAAy4C,OAAA94D,GACAqgB,EAAAo4C,YAAA,IACAh1D,EAAA20D,IAAA/3C,GACAA,EAAAy4C,OAAA94D,GACAqgB,EAAAo4C,YAAA,IACAh1D,EAAA20D,IAAA/3C,GAEA,QAAA84C,GAAA11D,EAAAzD,EAAAqgB,GACA5c,EAAAq1D,OAAA94D,GACAyD,EAAAg1D,YAAA,IACAp4C,EAAAy4C,OAAA94D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gBApBAhjC,GAAApsB,EAAAm7E,EAuBAzxD,GAAA0xD,gBAAAhvD,CACA,MACA,gBACA,GAAAL,GAAApuB,KAAA08E,iBACA3wD,GAAAsC,OAAAD,EAAA,GACArC,EAAAuC,QAAAF,EAAA,GACArC,EAAAwC,cAAA,KAMAstD,IAEAt9E,GAAAs9E,gBAEA,SAAAj8E,EAAAC,GACAA,EAAAD,EAAA89E,iBAAkC99E,EAAAkD,gBAAAlD,EAAA+sD,oBAAA/sD,EAAAszD,gBAAAtzD,EAAA60E,kBAC/Bz0E,KAAA,SAAAzB,EAAAkrB,EAAA0nC,EAAA6N,EAAA2e,GACH,GAAArjE,GAAAmP,EAAAnP,KACAhW,EAAAmlB,EAAAnlB,OACAb,EAAAgmB,EAAAhmB,KACAI,EAAA4lB,EAAA5lB,MACAgG,EAAA4f,EAAA5f,MACAE,EAAA0f,EAAA1f,SACA6P,EAAA6P,EAAA7P,qBACAgzC,EAAAuE,EAAAvE,MACAC,EAAAsE,EAAAtE,OACAE,EAAAoE,EAAApE,MACA1xB,EAAA81B,EAAA91B,SACAm4B,EAAAwL,EAAAxL,aACAkkB,EAAAiG,EAAAjG,MACAkG,GACA,iBACA,kBACA,oBACA,oBACA,WACA,WACA,OACA,YACA,YACA,OACA,cACA,cACA,cACA,cACA,cACA,eACA,eACA,cACA,cACA,QACA,aACA,aACA,QACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,cACA,cACA,cACA,cACA,cACA,cACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,OACA,OACA,SACA,SACA,YACA,YACA,SACA,SACA,SACA,SACA,YACA,YACA,YACA,YACA,cACA,cACA,QACA,QACA,QACA,aACA,aACA,QACA,WACA,WACA,OACA,OACA,YACA,YACA,UACA,UACA,aACA,aACA,YACA,YACA,QACA,QACA,cACA,cACA,aACA,aACA,IACA,aACA,aACA,aACA,aACA,cACA,cACA,cACA,cACA,cACA,cACA,aACA,aACA,UACA,WACA,YACA,YACA,QACA,cACA,cACA,QACA,cACA,iBA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2C,EAAAh2C,eACAvB,GAAAu3C,EAAAv3C,WACAP,GAAA83C,EAAA93C,SACAuC,GAAAu1C,EAAAv1C,WACA87D,GAAA,MACAC,GAAA,MACAC,IAAA,EACAC,GAAA,IACAC,IAAA,EACAT,IACAU,WAAA,EACAC,MAAA,EACAV,SAAA,EACAW,OAAA,EACAC,YAAA,GACAC,OAAA,GACAC,OAAA,MACAC,SAAA,OACAC,UAAA,QAEAC,IACA,UACA,QACA,mBACA,QACA,SACA,WACA,aACA,SACA,UACA,YACA,cACA,YACA,aACA,WACA,OACA,QACA,SACA,SACA,QACA,OACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,QACA,YACA,OACA,QACA,UACA,WACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,cACA,YACA,eACA,cACA,aACA,QACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,YACA,MACA,aACA,aACA,YACA,QACA,WACA,SACA,SACA,YACA,YACA,SACA,SACA,cACA,YACA,SACA,QACA,WACA,SACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,OACA,WACA,UACA,SACA,YACA,aACA,aACA,YACA,YACA,QACA,WACA,WACA,KACA,SACA,WACA,YACA,YACA,eACA,MACA,KACA,cACA,YACA,UACA,KACA,WACA,cACA,eACA,QACA,KACA,SACA,eACA,aACA,aACA,UACA,SACA,cACA,QACA,gBACA,iBACA,WACA,mBACA,SACA,SACA,SACA,KACA,KACA,SACA,SACA,eACA,gBACA,YACA,aACA,SACA,UACA,YACA,YACA,WAC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GA60B,IAAA7zE,GAAA,GAAAkjE,GAAA/vE,IAAA6M,QAGA6E,IAAA8uE,GAAA,GAAAx0F,EAAA0lB,GAAA8uE,MAvfA,GAAAX,IACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,EACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,IACA,EACA,EACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,EACA,EACA,GACA,KACA,KACA,GACA,GACA,GACA,GACA,GACA,KACA,GACA,GACA,IACA,GACA,GACA,EACA,EACA,GACA,EACA,GACA,EACA,EACA,EACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,EACA,GACA,GACA,EACA,GACA,KACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,KACA,KACA,KACA,KACA,KACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,KACA,GACA,EACA,EACA,GACA,GACA,GACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,EA6NA7kF,GAAA,GAAAw6C,GAAA,GAAAjsD,YAAAyR,EAAAmT,YACA,IAkBAS,GAAA+xE,EAlBAC,GACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QAEA9xE,EAAA8rE,EAAA5/E,GACA6zD,EAAA//C,EAAA+/C,UAEAp4C,EAAA9uB,OAAAQ,OAAA,KACAsuB,GAAA,aACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SAEA,QADA6gC,GACAvuD,EAAA,EAAqBA,EAAA8lE,EAAe9lE,IACpCuuD,EAAAojC,EAAA1/E,GA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","file":"pdf.worker.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/*!************************************************!*\\\n  !*** ./~/pdfjs-dist/build/pdf.worker.entry.js ***!\n  \\************************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* Copyright 2016 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t/* eslint-disable strict */\n\t\n\t(typeof window !== 'undefined' ? window : {}).pdfjsDistBuildPdfWorker =\n\t  __webpack_require__(/*! ./pdf.worker.js */ 208);\n\n\n/***/ },\n\n/***/ 59:\n/*!***********************************!*\\\n  !*** (webpack)/buildin/module.js ***!\n  \\***********************************/\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n\n/***/ 208:\n/*!******************************************!*\\\n  !*** ./~/pdfjs-dist/build/pdf.worker.js ***!\n  \\******************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global, module) {/* Copyright 2012 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t(function (root, factory) {\n\t 'use strict';\n\t if (true) {\n\t  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t } else if (typeof exports !== 'undefined') {\n\t  factory(exports);\n\t } else {\n\t  factory(root['pdfjsDistBuildPdfWorker'] = {});\n\t }\n\t}(this, function (exports) {\n\t 'use strict';\n\t var pdfjsVersion = '1.7.235';\n\t var pdfjsBuild = '3f320f0';\n\t var pdfjsFilePath = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : null;\n\t var pdfjsLibs = {};\n\t (function pdfjsWrapper() {\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCoreArithmeticDecoder = {});\n\t  }(this, function (exports) {\n\t   var ArithmeticDecoder = function ArithmeticDecoderClosure() {\n\t    var QeTable = [\n\t     {\n\t      qe: 0x5601,\n\t      nmps: 1,\n\t      nlps: 1,\n\t      switchFlag: 1\n\t     },\n\t     {\n\t      qe: 0x3401,\n\t      nmps: 2,\n\t      nlps: 6,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x1801,\n\t      nmps: 3,\n\t      nlps: 9,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x0AC1,\n\t      nmps: 4,\n\t      nlps: 12,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x0521,\n\t      nmps: 5,\n\t      nlps: 29,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x0221,\n\t      nmps: 38,\n\t      nlps: 33,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x5601,\n\t      nmps: 7,\n\t      nlps: 6,\n\t      switchFlag: 1\n\t     },\n\t     {\n\t      qe: 0x5401,\n\t      nmps: 8,\n\t      nlps: 14,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x4801,\n\t      nmps: 9,\n\t      nlps: 14,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x3801,\n\t      nmps: 10,\n\t      nlps: 14,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x3001,\n\t      nmps: 11,\n\t      nlps: 17,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x2401,\n\t      nmps: 12,\n\t      nlps: 18,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x1C01,\n\t      nmps: 13,\n\t      nlps: 20,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x1601,\n\t      nmps: 29,\n\t      nlps: 21,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x5601,\n\t      nmps: 15,\n\t      nlps: 14,\n\t      switchFlag: 1\n\t     },\n\t     {\n\t      qe: 0x5401,\n\t      nmps: 16,\n\t      nlps: 14,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x5101,\n\t      nmps: 17,\n\t      nlps: 15,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x4801,\n\t      nmps: 18,\n\t      nlps: 16,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x3801,\n\t      nmps: 19,\n\t      nlps: 17,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x3401,\n\t      nmps: 20,\n\t      nlps: 18,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x3001,\n\t      nmps: 21,\n\t      nlps: 19,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x2801,\n\t      nmps: 22,\n\t      nlps: 19,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x2401,\n\t      nmps: 23,\n\t      nlps: 20,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x2201,\n\t      nmps: 24,\n\t      nlps: 21,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x1C01,\n\t      nmps: 25,\n\t      nlps: 22,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x1801,\n\t      nmps: 26,\n\t      nlps: 23,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x1601,\n\t      nmps: 27,\n\t      nlps: 24,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x1401,\n\t      nmps: 28,\n\t      nlps: 25,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x1201,\n\t      nmps: 29,\n\t      nlps: 26,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x1101,\n\t      nmps: 30,\n\t      nlps: 27,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x0AC1,\n\t      nmps: 31,\n\t      nlps: 28,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x09C1,\n\t      nmps: 32,\n\t      nlps: 29,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x08A1,\n\t      nmps: 33,\n\t      nlps: 30,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x0521,\n\t      nmps: 34,\n\t      nlps: 31,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x0441,\n\t      nmps: 35,\n\t      nlps: 32,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x02A1,\n\t      nmps: 36,\n\t      nlps: 33,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x0221,\n\t      nmps: 37,\n\t      nlps: 34,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x0141,\n\t      nmps: 38,\n\t      nlps: 35,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x0111,\n\t      nmps: 39,\n\t      nlps: 36,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x0085,\n\t      nmps: 40,\n\t      nlps: 37,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x0049,\n\t      nmps: 41,\n\t      nlps: 38,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x0025,\n\t      nmps: 42,\n\t      nlps: 39,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x0015,\n\t      nmps: 43,\n\t      nlps: 40,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x0009,\n\t      nmps: 44,\n\t      nlps: 41,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x0005,\n\t      nmps: 45,\n\t      nlps: 42,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x0001,\n\t      nmps: 45,\n\t      nlps: 43,\n\t      switchFlag: 0\n\t     },\n\t     {\n\t      qe: 0x5601,\n\t      nmps: 46,\n\t      nlps: 46,\n\t      switchFlag: 0\n\t     }\n\t    ];\n\t    function ArithmeticDecoder(data, start, end) {\n\t     this.data = data;\n\t     this.bp = start;\n\t     this.dataEnd = end;\n\t     this.chigh = data[start];\n\t     this.clow = 0;\n\t     this.byteIn();\n\t     this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\n\t     this.clow = this.clow << 7 & 0xFFFF;\n\t     this.ct -= 7;\n\t     this.a = 0x8000;\n\t    }\n\t    ArithmeticDecoder.prototype = {\n\t     byteIn: function ArithmeticDecoder_byteIn() {\n\t      var data = this.data;\n\t      var bp = this.bp;\n\t      if (data[bp] === 0xFF) {\n\t       var b1 = data[bp + 1];\n\t       if (b1 > 0x8F) {\n\t        this.clow += 0xFF00;\n\t        this.ct = 8;\n\t       } else {\n\t        bp++;\n\t        this.clow += data[bp] << 9;\n\t        this.ct = 7;\n\t        this.bp = bp;\n\t       }\n\t      } else {\n\t       bp++;\n\t       this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\n\t       this.ct = 8;\n\t       this.bp = bp;\n\t      }\n\t      if (this.clow > 0xFFFF) {\n\t       this.chigh += this.clow >> 16;\n\t       this.clow &= 0xFFFF;\n\t      }\n\t     },\n\t     readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n\t      var cx_index = contexts[pos] >> 1, cx_mps = contexts[pos] & 1;\n\t      var qeTableIcx = QeTable[cx_index];\n\t      var qeIcx = qeTableIcx.qe;\n\t      var d;\n\t      var a = this.a - qeIcx;\n\t      if (this.chigh < qeIcx) {\n\t       if (a < qeIcx) {\n\t        a = qeIcx;\n\t        d = cx_mps;\n\t        cx_index = qeTableIcx.nmps;\n\t       } else {\n\t        a = qeIcx;\n\t        d = 1 ^ cx_mps;\n\t        if (qeTableIcx.switchFlag === 1) {\n\t         cx_mps = d;\n\t        }\n\t        cx_index = qeTableIcx.nlps;\n\t       }\n\t      } else {\n\t       this.chigh -= qeIcx;\n\t       if ((a & 0x8000) !== 0) {\n\t        this.a = a;\n\t        return cx_mps;\n\t       }\n\t       if (a < qeIcx) {\n\t        d = 1 ^ cx_mps;\n\t        if (qeTableIcx.switchFlag === 1) {\n\t         cx_mps = d;\n\t        }\n\t        cx_index = qeTableIcx.nlps;\n\t       } else {\n\t        d = cx_mps;\n\t        cx_index = qeTableIcx.nmps;\n\t       }\n\t      }\n\t      do {\n\t       if (this.ct === 0) {\n\t        this.byteIn();\n\t       }\n\t       a <<= 1;\n\t       this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\n\t       this.clow = this.clow << 1 & 0xFFFF;\n\t       this.ct--;\n\t      } while ((a & 0x8000) === 0);\n\t      this.a = a;\n\t      contexts[pos] = cx_index << 1 | cx_mps;\n\t      return d;\n\t     }\n\t    };\n\t    return ArithmeticDecoder;\n\t   }();\n\t   exports.ArithmeticDecoder = ArithmeticDecoder;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCoreCharsets = {});\n\t  }(this, function (exports) {\n\t   var ISOAdobeCharset = [\n\t    '.notdef',\n\t    'space',\n\t    'exclam',\n\t    'quotedbl',\n\t    'numbersign',\n\t    'dollar',\n\t    'percent',\n\t    'ampersand',\n\t    'quoteright',\n\t    'parenleft',\n\t    'parenright',\n\t    'asterisk',\n\t    'plus',\n\t    'comma',\n\t    'hyphen',\n\t    'period',\n\t    'slash',\n\t    'zero',\n\t    'one',\n\t    'two',\n\t    'three',\n\t    'four',\n\t    'five',\n\t    'six',\n\t    'seven',\n\t    'eight',\n\t    'nine',\n\t    'colon',\n\t    'semicolon',\n\t    'less',\n\t    'equal',\n\t    'greater',\n\t    'question',\n\t    'at',\n\t    'A',\n\t    'B',\n\t    'C',\n\t    'D',\n\t    'E',\n\t    'F',\n\t    'G',\n\t    'H',\n\t    'I',\n\t    'J',\n\t    'K',\n\t    'L',\n\t    'M',\n\t    'N',\n\t    'O',\n\t    'P',\n\t    'Q',\n\t    'R',\n\t    'S',\n\t    'T',\n\t    'U',\n\t    'V',\n\t    'W',\n\t    'X',\n\t    'Y',\n\t    'Z',\n\t    'bracketleft',\n\t    'backslash',\n\t    'bracketright',\n\t    'asciicircum',\n\t    'underscore',\n\t    'quoteleft',\n\t    'a',\n\t    'b',\n\t    'c',\n\t    'd',\n\t    'e',\n\t    'f',\n\t    'g',\n\t    'h',\n\t    'i',\n\t    'j',\n\t    'k',\n\t    'l',\n\t    'm',\n\t    'n',\n\t    'o',\n\t    'p',\n\t    'q',\n\t    'r',\n\t    's',\n\t    't',\n\t    'u',\n\t    'v',\n\t    'w',\n\t    'x',\n\t    'y',\n\t    'z',\n\t    'braceleft',\n\t    'bar',\n\t    'braceright',\n\t    'asciitilde',\n\t    'exclamdown',\n\t    'cent',\n\t    'sterling',\n\t    'fraction',\n\t    'yen',\n\t    'florin',\n\t    'section',\n\t    'currency',\n\t    'quotesingle',\n\t    'quotedblleft',\n\t    'guillemotleft',\n\t    'guilsinglleft',\n\t    'guilsinglright',\n\t    'fi',\n\t    'fl',\n\t    'endash',\n\t    'dagger',\n\t    'daggerdbl',\n\t    'periodcentered',\n\t    'paragraph',\n\t    'bullet',\n\t    'quotesinglbase',\n\t    'quotedblbase',\n\t    'quotedblright',\n\t    'guillemotright',\n\t    'ellipsis',\n\t    'perthousand',\n\t    'questiondown',\n\t    'grave',\n\t    'acute',\n\t    'circumflex',\n\t    'tilde',\n\t    'macron',\n\t    'breve',\n\t    'dotaccent',\n\t    'dieresis',\n\t    'ring',\n\t    'cedilla',\n\t    'hungarumlaut',\n\t    'ogonek',\n\t    'caron',\n\t    'emdash',\n\t    'AE',\n\t    'ordfeminine',\n\t    'Lslash',\n\t    'Oslash',\n\t    'OE',\n\t    'ordmasculine',\n\t    'ae',\n\t    'dotlessi',\n\t    'lslash',\n\t    'oslash',\n\t    'oe',\n\t    'germandbls',\n\t    'onesuperior',\n\t    'logicalnot',\n\t    'mu',\n\t    'trademark',\n\t    'Eth',\n\t    'onehalf',\n\t    'plusminus',\n\t    'Thorn',\n\t    'onequarter',\n\t    'divide',\n\t    'brokenbar',\n\t    'degree',\n\t    'thorn',\n\t    'threequarters',\n\t    'twosuperior',\n\t    'registered',\n\t    'minus',\n\t    'eth',\n\t    'multiply',\n\t    'threesuperior',\n\t    'copyright',\n\t    'Aacute',\n\t    'Acircumflex',\n\t    'Adieresis',\n\t    'Agrave',\n\t    'Aring',\n\t    'Atilde',\n\t    'Ccedilla',\n\t    'Eacute',\n\t    'Ecircumflex',\n\t    'Edieresis',\n\t    'Egrave',\n\t    'Iacute',\n\t    'Icircumflex',\n\t    'Idieresis',\n\t    'Igrave',\n\t    'Ntilde',\n\t    'Oacute',\n\t    'Ocircumflex',\n\t    'Odieresis',\n\t    'Ograve',\n\t    'Otilde',\n\t    'Scaron',\n\t    'Uacute',\n\t    'Ucircumflex',\n\t    'Udieresis',\n\t    'Ugrave',\n\t    'Yacute',\n\t    'Ydieresis',\n\t    'Zcaron',\n\t    'aacute',\n\t    'acircumflex',\n\t    'adieresis',\n\t    'agrave',\n\t    'aring',\n\t    'atilde',\n\t    'ccedilla',\n\t    'eacute',\n\t    'ecircumflex',\n\t    'edieresis',\n\t    'egrave',\n\t    'iacute',\n\t    'icircumflex',\n\t    'idieresis',\n\t    'igrave',\n\t    'ntilde',\n\t    'oacute',\n\t    'ocircumflex',\n\t    'odieresis',\n\t    'ograve',\n\t    'otilde',\n\t    'scaron',\n\t    'uacute',\n\t    'ucircumflex',\n\t    'udieresis',\n\t    'ugrave',\n\t    'yacute',\n\t    'ydieresis',\n\t    'zcaron'\n\t   ];\n\t   var ExpertCharset = [\n\t    '.notdef',\n\t    'space',\n\t    'exclamsmall',\n\t    'Hungarumlautsmall',\n\t    'dollaroldstyle',\n\t    'dollarsuperior',\n\t    'ampersandsmall',\n\t    'Acutesmall',\n\t    'parenleftsuperior',\n\t    'parenrightsuperior',\n\t    'twodotenleader',\n\t    'onedotenleader',\n\t    'comma',\n\t    'hyphen',\n\t    'period',\n\t    'fraction',\n\t    'zerooldstyle',\n\t    'oneoldstyle',\n\t    'twooldstyle',\n\t    'threeoldstyle',\n\t    'fouroldstyle',\n\t    'fiveoldstyle',\n\t    'sixoldstyle',\n\t    'sevenoldstyle',\n\t    'eightoldstyle',\n\t    'nineoldstyle',\n\t    'colon',\n\t    'semicolon',\n\t    'commasuperior',\n\t    'threequartersemdash',\n\t    'periodsuperior',\n\t    'questionsmall',\n\t    'asuperior',\n\t    'bsuperior',\n\t    'centsuperior',\n\t    'dsuperior',\n\t    'esuperior',\n\t    'isuperior',\n\t    'lsuperior',\n\t    'msuperior',\n\t    'nsuperior',\n\t    'osuperior',\n\t    'rsuperior',\n\t    'ssuperior',\n\t    'tsuperior',\n\t    'ff',\n\t    'fi',\n\t    'fl',\n\t    'ffi',\n\t    'ffl',\n\t    'parenleftinferior',\n\t    'parenrightinferior',\n\t    'Circumflexsmall',\n\t    'hyphensuperior',\n\t    'Gravesmall',\n\t    'Asmall',\n\t    'Bsmall',\n\t    'Csmall',\n\t    'Dsmall',\n\t    'Esmall',\n\t    'Fsmall',\n\t    'Gsmall',\n\t    'Hsmall',\n\t    'Ismall',\n\t    'Jsmall',\n\t    'Ksmall',\n\t    'Lsmall',\n\t    'Msmall',\n\t    'Nsmall',\n\t    'Osmall',\n\t    'Psmall',\n\t    'Qsmall',\n\t    'Rsmall',\n\t    'Ssmall',\n\t    'Tsmall',\n\t    'Usmall',\n\t    'Vsmall',\n\t    'Wsmall',\n\t    'Xsmall',\n\t    'Ysmall',\n\t    'Zsmall',\n\t    'colonmonetary',\n\t    'onefitted',\n\t    'rupiah',\n\t    'Tildesmall',\n\t    'exclamdownsmall',\n\t    'centoldstyle',\n\t    'Lslashsmall',\n\t    'Scaronsmall',\n\t    'Zcaronsmall',\n\t    'Dieresissmall',\n\t    'Brevesmall',\n\t    'Caronsmall',\n\t    'Dotaccentsmall',\n\t    'Macronsmall',\n\t    'figuredash',\n\t    'hypheninferior',\n\t    'Ogoneksmall',\n\t    'Ringsmall',\n\t    'Cedillasmall',\n\t    'onequarter',\n\t    'onehalf',\n\t    'threequarters',\n\t    'questiondownsmall',\n\t    'oneeighth',\n\t    'threeeighths',\n\t    'fiveeighths',\n\t    'seveneighths',\n\t    'onethird',\n\t    'twothirds',\n\t    'zerosuperior',\n\t    'onesuperior',\n\t    'twosuperior',\n\t    'threesuperior',\n\t    'foursuperior',\n\t    'fivesuperior',\n\t    'sixsuperior',\n\t    'sevensuperior',\n\t    'eightsuperior',\n\t    'ninesuperior',\n\t    'zeroinferior',\n\t    'oneinferior',\n\t    'twoinferior',\n\t    'threeinferior',\n\t    'fourinferior',\n\t    'fiveinferior',\n\t    'sixinferior',\n\t    'seveninferior',\n\t    'eightinferior',\n\t    'nineinferior',\n\t    'centinferior',\n\t    'dollarinferior',\n\t    'periodinferior',\n\t    'commainferior',\n\t    'Agravesmall',\n\t    'Aacutesmall',\n\t    'Acircumflexsmall',\n\t    'Atildesmall',\n\t    'Adieresissmall',\n\t    'Aringsmall',\n\t    'AEsmall',\n\t    'Ccedillasmall',\n\t    'Egravesmall',\n\t    'Eacutesmall',\n\t    'Ecircumflexsmall',\n\t    'Edieresissmall',\n\t    'Igravesmall',\n\t    'Iacutesmall',\n\t    'Icircumflexsmall',\n\t    'Idieresissmall',\n\t    'Ethsmall',\n\t    'Ntildesmall',\n\t    'Ogravesmall',\n\t    'Oacutesmall',\n\t    'Ocircumflexsmall',\n\t    'Otildesmall',\n\t    'Odieresissmall',\n\t    'OEsmall',\n\t    'Oslashsmall',\n\t    'Ugravesmall',\n\t    'Uacutesmall',\n\t    'Ucircumflexsmall',\n\t    'Udieresissmall',\n\t    'Yacutesmall',\n\t    'Thornsmall',\n\t    'Ydieresissmall'\n\t   ];\n\t   var ExpertSubsetCharset = [\n\t    '.notdef',\n\t    'space',\n\t    'dollaroldstyle',\n\t    'dollarsuperior',\n\t    'parenleftsuperior',\n\t    'parenrightsuperior',\n\t    'twodotenleader',\n\t    'onedotenleader',\n\t    'comma',\n\t    'hyphen',\n\t    'period',\n\t    'fraction',\n\t    'zerooldstyle',\n\t    'oneoldstyle',\n\t    'twooldstyle',\n\t    'threeoldstyle',\n\t    'fouroldstyle',\n\t    'fiveoldstyle',\n\t    'sixoldstyle',\n\t    'sevenoldstyle',\n\t    'eightoldstyle',\n\t    'nineoldstyle',\n\t    'colon',\n\t    'semicolon',\n\t    'commasuperior',\n\t    'threequartersemdash',\n\t    'periodsuperior',\n\t    'asuperior',\n\t    'bsuperior',\n\t    'centsuperior',\n\t    'dsuperior',\n\t    'esuperior',\n\t    'isuperior',\n\t    'lsuperior',\n\t    'msuperior',\n\t    'nsuperior',\n\t    'osuperior',\n\t    'rsuperior',\n\t    'ssuperior',\n\t    'tsuperior',\n\t    'ff',\n\t    'fi',\n\t    'fl',\n\t    'ffi',\n\t    'ffl',\n\t    'parenleftinferior',\n\t    'parenrightinferior',\n\t    'hyphensuperior',\n\t    'colonmonetary',\n\t    'onefitted',\n\t    'rupiah',\n\t    'centoldstyle',\n\t    'figuredash',\n\t    'hypheninferior',\n\t    'onequarter',\n\t    'onehalf',\n\t    'threequarters',\n\t    'oneeighth',\n\t    'threeeighths',\n\t    'fiveeighths',\n\t    'seveneighths',\n\t    'onethird',\n\t    'twothirds',\n\t    'zerosuperior',\n\t    'onesuperior',\n\t    'twosuperior',\n\t    'threesuperior',\n\t    'foursuperior',\n\t    'fivesuperior',\n\t    'sixsuperior',\n\t    'sevensuperior',\n\t    'eightsuperior',\n\t    'ninesuperior',\n\t    'zeroinferior',\n\t    'oneinferior',\n\t    'twoinferior',\n\t    'threeinferior',\n\t    'fourinferior',\n\t    'fiveinferior',\n\t    'sixinferior',\n\t    'seveninferior',\n\t    'eightinferior',\n\t    'nineinferior',\n\t    'centinferior',\n\t    'dollarinferior',\n\t    'periodinferior',\n\t    'commainferior'\n\t   ];\n\t   exports.ISOAdobeCharset = ISOAdobeCharset;\n\t   exports.ExpertCharset = ExpertCharset;\n\t   exports.ExpertSubsetCharset = ExpertSubsetCharset;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCoreEncodings = {});\n\t  }(this, function (exports) {\n\t   var ExpertEncoding = [\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    'space',\n\t    'exclamsmall',\n\t    'Hungarumlautsmall',\n\t    '',\n\t    'dollaroldstyle',\n\t    'dollarsuperior',\n\t    'ampersandsmall',\n\t    'Acutesmall',\n\t    'parenleftsuperior',\n\t    'parenrightsuperior',\n\t    'twodotenleader',\n\t    'onedotenleader',\n\t    'comma',\n\t    'hyphen',\n\t    'period',\n\t    'fraction',\n\t    'zerooldstyle',\n\t    'oneoldstyle',\n\t    'twooldstyle',\n\t    'threeoldstyle',\n\t    'fouroldstyle',\n\t    'fiveoldstyle',\n\t    'sixoldstyle',\n\t    'sevenoldstyle',\n\t    'eightoldstyle',\n\t    'nineoldstyle',\n\t    'colon',\n\t    'semicolon',\n\t    'commasuperior',\n\t    'threequartersemdash',\n\t    'periodsuperior',\n\t    'questionsmall',\n\t    '',\n\t    'asuperior',\n\t    'bsuperior',\n\t    'centsuperior',\n\t    'dsuperior',\n\t    'esuperior',\n\t    '',\n\t    '',\n\t    'isuperior',\n\t    '',\n\t    '',\n\t    'lsuperior',\n\t    'msuperior',\n\t    'nsuperior',\n\t    'osuperior',\n\t    '',\n\t    '',\n\t    'rsuperior',\n\t    'ssuperior',\n\t    'tsuperior',\n\t    '',\n\t    'ff',\n\t    'fi',\n\t    'fl',\n\t    'ffi',\n\t    'ffl',\n\t    'parenleftinferior',\n\t    '',\n\t    'parenrightinferior',\n\t    'Circumflexsmall',\n\t    'hyphensuperior',\n\t    'Gravesmall',\n\t    'Asmall',\n\t    'Bsmall',\n\t    'Csmall',\n\t    'Dsmall',\n\t    'Esmall',\n\t    'Fsmall',\n\t    'Gsmall',\n\t    'Hsmall',\n\t    'Ismall',\n\t    'Jsmall',\n\t    'Ksmall',\n\t    'Lsmall',\n\t    'Msmall',\n\t    'Nsmall',\n\t    'Osmall',\n\t    'Psmall',\n\t    'Qsmall',\n\t    'Rsmall',\n\t    'Ssmall',\n\t    'Tsmall',\n\t    'Usmall',\n\t    'Vsmall',\n\t    'Wsmall',\n\t    'Xsmall',\n\t    'Ysmall',\n\t    'Zsmall',\n\t    'colonmonetary',\n\t    'onefitted',\n\t    'rupiah',\n\t    'Tildesmall',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    'exclamdownsmall',\n\t    'centoldstyle',\n\t    'Lslashsmall',\n\t    '',\n\t    '',\n\t    'Scaronsmall',\n\t    'Zcaronsmall',\n\t    'Dieresissmall',\n\t    'Brevesmall',\n\t    'Caronsmall',\n\t    '',\n\t    'Dotaccentsmall',\n\t    '',\n\t    '',\n\t    'Macronsmall',\n\t    '',\n\t    '',\n\t    'figuredash',\n\t    'hypheninferior',\n\t    '',\n\t    '',\n\t    'Ogoneksmall',\n\t    'Ringsmall',\n\t    'Cedillasmall',\n\t    '',\n\t    '',\n\t    '',\n\t    'onequarter',\n\t    'onehalf',\n\t    'threequarters',\n\t    'questiondownsmall',\n\t    'oneeighth',\n\t    'threeeighths',\n\t    'fiveeighths',\n\t    'seveneighths',\n\t    'onethird',\n\t    'twothirds',\n\t    '',\n\t    '',\n\t    'zerosuperior',\n\t    'onesuperior',\n\t    'twosuperior',\n\t    'threesuperior',\n\t    'foursuperior',\n\t    'fivesuperior',\n\t    'sixsuperior',\n\t    'sevensuperior',\n\t    'eightsuperior',\n\t    'ninesuperior',\n\t    'zeroinferior',\n\t    'oneinferior',\n\t    'twoinferior',\n\t    'threeinferior',\n\t    'fourinferior',\n\t    'fiveinferior',\n\t    'sixinferior',\n\t    'seveninferior',\n\t    'eightinferior',\n\t    'nineinferior',\n\t    'centinferior',\n\t    'dollarinferior',\n\t    'periodinferior',\n\t    'commainferior',\n\t    'Agravesmall',\n\t    'Aacutesmall',\n\t    'Acircumflexsmall',\n\t    'Atildesmall',\n\t    'Adieresissmall',\n\t    'Aringsmall',\n\t    'AEsmall',\n\t    'Ccedillasmall',\n\t    'Egravesmall',\n\t    'Eacutesmall',\n\t    'Ecircumflexsmall',\n\t    'Edieresissmall',\n\t    'Igravesmall',\n\t    'Iacutesmall',\n\t    'Icircumflexsmall',\n\t    'Idieresissmall',\n\t    'Ethsmall',\n\t    'Ntildesmall',\n\t    'Ogravesmall',\n\t    'Oacutesmall',\n\t    'Ocircumflexsmall',\n\t    'Otildesmall',\n\t    'Odieresissmall',\n\t    'OEsmall',\n\t    'Oslashsmall',\n\t    'Ugravesmall',\n\t    'Uacutesmall',\n\t    'Ucircumflexsmall',\n\t    'Udieresissmall',\n\t    'Yacutesmall',\n\t    'Thornsmall',\n\t    'Ydieresissmall'\n\t   ];\n\t   var MacExpertEncoding = [\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    'space',\n\t    'exclamsmall',\n\t    'Hungarumlautsmall',\n\t    'centoldstyle',\n\t    'dollaroldstyle',\n\t    'dollarsuperior',\n\t    'ampersandsmall',\n\t    'Acutesmall',\n\t    'parenleftsuperior',\n\t    'parenrightsuperior',\n\t    'twodotenleader',\n\t    'onedotenleader',\n\t    'comma',\n\t    'hyphen',\n\t    'period',\n\t    'fraction',\n\t    'zerooldstyle',\n\t    'oneoldstyle',\n\t    'twooldstyle',\n\t    'threeoldstyle',\n\t    'fouroldstyle',\n\t    'fiveoldstyle',\n\t    'sixoldstyle',\n\t    'sevenoldstyle',\n\t    'eightoldstyle',\n\t    'nineoldstyle',\n\t    'colon',\n\t    'semicolon',\n\t    '',\n\t    'threequartersemdash',\n\t    '',\n\t    'questionsmall',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    'Ethsmall',\n\t    '',\n\t    '',\n\t    'onequarter',\n\t    'onehalf',\n\t    'threequarters',\n\t    'oneeighth',\n\t    'threeeighths',\n\t    'fiveeighths',\n\t    'seveneighths',\n\t    'onethird',\n\t    'twothirds',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    'ff',\n\t    'fi',\n\t    'fl',\n\t    'ffi',\n\t    'ffl',\n\t    'parenleftinferior',\n\t    '',\n\t    'parenrightinferior',\n\t    'Circumflexsmall',\n\t    'hypheninferior',\n\t    'Gravesmall',\n\t    'Asmall',\n\t    'Bsmall',\n\t    'Csmall',\n\t    'Dsmall',\n\t    'Esmall',\n\t    'Fsmall',\n\t    'Gsmall',\n\t    'Hsmall',\n\t    'Ismall',\n\t    'Jsmall',\n\t    'Ksmall',\n\t    'Lsmall',\n\t    'Msmall',\n\t    'Nsmall',\n\t    'Osmall',\n\t    'Psmall',\n\t    'Qsmall',\n\t    'Rsmall',\n\t    'Ssmall',\n\t    'Tsmall',\n\t    'Usmall',\n\t    'Vsmall',\n\t    'Wsmall',\n\t    'Xsmall',\n\t    'Ysmall',\n\t    'Zsmall',\n\t    'colonmonetary',\n\t    'onefitted',\n\t    'rupiah',\n\t    'Tildesmall',\n\t    '',\n\t    '',\n\t    'asuperior',\n\t    'centsuperior',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    'Aacutesmall',\n\t    'Agravesmall',\n\t    'Acircumflexsmall',\n\t    'Adieresissmall',\n\t    'Atildesmall',\n\t    'Aringsmall',\n\t    'Ccedillasmall',\n\t    'Eacutesmall',\n\t    'Egravesmall',\n\t    'Ecircumflexsmall',\n\t    'Edieresissmall',\n\t    'Iacutesmall',\n\t    'Igravesmall',\n\t    'Icircumflexsmall',\n\t    'Idieresissmall',\n\t    'Ntildesmall',\n\t    'Oacutesmall',\n\t    'Ogravesmall',\n\t    'Ocircumflexsmall',\n\t    'Odieresissmall',\n\t    'Otildesmall',\n\t    'Uacutesmall',\n\t    'Ugravesmall',\n\t    'Ucircumflexsmall',\n\t    'Udieresissmall',\n\t    '',\n\t    'eightsuperior',\n\t    'fourinferior',\n\t    'threeinferior',\n\t    'sixinferior',\n\t    'eightinferior',\n\t    'seveninferior',\n\t    'Scaronsmall',\n\t    '',\n\t    'centinferior',\n\t    'twoinferior',\n\t    '',\n\t    'Dieresissmall',\n\t    '',\n\t    'Caronsmall',\n\t    'osuperior',\n\t    'fiveinferior',\n\t    '',\n\t    'commainferior',\n\t    'periodinferior',\n\t    'Yacutesmall',\n\t    '',\n\t    'dollarinferior',\n\t    '',\n\t    'Thornsmall',\n\t    '',\n\t    'nineinferior',\n\t    'zeroinferior',\n\t    'Zcaronsmall',\n\t    'AEsmall',\n\t    'Oslashsmall',\n\t    'questiondownsmall',\n\t    'oneinferior',\n\t    'Lslashsmall',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    'Cedillasmall',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    'OEsmall',\n\t    'figuredash',\n\t    'hyphensuperior',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    'exclamdownsmall',\n\t    '',\n\t    'Ydieresissmall',\n\t    '',\n\t    'onesuperior',\n\t    'twosuperior',\n\t    'threesuperior',\n\t    'foursuperior',\n\t    'fivesuperior',\n\t    'sixsuperior',\n\t    'sevensuperior',\n\t    'ninesuperior',\n\t    'zerosuperior',\n\t    '',\n\t    'esuperior',\n\t    'rsuperior',\n\t    'tsuperior',\n\t    '',\n\t    '',\n\t    'isuperior',\n\t    'ssuperior',\n\t    'dsuperior',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    'lsuperior',\n\t    'Ogoneksmall',\n\t    'Brevesmall',\n\t    'Macronsmall',\n\t    'bsuperior',\n\t    'nsuperior',\n\t    'msuperior',\n\t    'commasuperior',\n\t    'periodsuperior',\n\t    'Dotaccentsmall',\n\t    'Ringsmall'\n\t   ];\n\t   var MacRomanEncoding = [\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    'space',\n\t    'exclam',\n\t    'quotedbl',\n\t    'numbersign',\n\t    'dollar',\n\t    'percent',\n\t    'ampersand',\n\t    'quotesingle',\n\t    'parenleft',\n\t    'parenright',\n\t    'asterisk',\n\t    'plus',\n\t    'comma',\n\t    'hyphen',\n\t    'period',\n\t    'slash',\n\t    'zero',\n\t    'one',\n\t    'two',\n\t    'three',\n\t    'four',\n\t    'five',\n\t    'six',\n\t    'seven',\n\t    'eight',\n\t    'nine',\n\t    'colon',\n\t    'semicolon',\n\t    'less',\n\t    'equal',\n\t    'greater',\n\t    'question',\n\t    'at',\n\t    'A',\n\t    'B',\n\t    'C',\n\t    'D',\n\t    'E',\n\t    'F',\n\t    'G',\n\t    'H',\n\t    'I',\n\t    'J',\n\t    'K',\n\t    'L',\n\t    'M',\n\t    'N',\n\t    'O',\n\t    'P',\n\t    'Q',\n\t    'R',\n\t    'S',\n\t    'T',\n\t    'U',\n\t    'V',\n\t    'W',\n\t    'X',\n\t    'Y',\n\t    'Z',\n\t    'bracketleft',\n\t    'backslash',\n\t    'bracketright',\n\t    'asciicircum',\n\t    'underscore',\n\t    'grave',\n\t    'a',\n\t    'b',\n\t    'c',\n\t    'd',\n\t    'e',\n\t    'f',\n\t    'g',\n\t    'h',\n\t    'i',\n\t    'j',\n\t    'k',\n\t    'l',\n\t    'm',\n\t    'n',\n\t    'o',\n\t    'p',\n\t    'q',\n\t    'r',\n\t    's',\n\t    't',\n\t    'u',\n\t    'v',\n\t    'w',\n\t    'x',\n\t    'y',\n\t    'z',\n\t    'braceleft',\n\t    'bar',\n\t    'braceright',\n\t    'asciitilde',\n\t    '',\n\t    'Adieresis',\n\t    'Aring',\n\t    'Ccedilla',\n\t    'Eacute',\n\t    'Ntilde',\n\t    'Odieresis',\n\t    'Udieresis',\n\t    'aacute',\n\t    'agrave',\n\t    'acircumflex',\n\t    'adieresis',\n\t    'atilde',\n\t    'aring',\n\t    'ccedilla',\n\t    'eacute',\n\t    'egrave',\n\t    'ecircumflex',\n\t    'edieresis',\n\t    'iacute',\n\t    'igrave',\n\t    'icircumflex',\n\t    'idieresis',\n\t    'ntilde',\n\t    'oacute',\n\t    'ograve',\n\t    'ocircumflex',\n\t    'odieresis',\n\t    'otilde',\n\t    'uacute',\n\t    'ugrave',\n\t    'ucircumflex',\n\t    'udieresis',\n\t    'dagger',\n\t    'degree',\n\t    'cent',\n\t    'sterling',\n\t    'section',\n\t    'bullet',\n\t    'paragraph',\n\t    'germandbls',\n\t    'registered',\n\t    'copyright',\n\t    'trademark',\n\t    'acute',\n\t    'dieresis',\n\t    'notequal',\n\t    'AE',\n\t    'Oslash',\n\t    'infinity',\n\t    'plusminus',\n\t    'lessequal',\n\t    'greaterequal',\n\t    'yen',\n\t    'mu',\n\t    'partialdiff',\n\t    'summation',\n\t    'product',\n\t    'pi',\n\t    'integral',\n\t    'ordfeminine',\n\t    'ordmasculine',\n\t    'Omega',\n\t    'ae',\n\t    'oslash',\n\t    'questiondown',\n\t    'exclamdown',\n\t    'logicalnot',\n\t    'radical',\n\t    'florin',\n\t    'approxequal',\n\t    'Delta',\n\t    'guillemotleft',\n\t    'guillemotright',\n\t    'ellipsis',\n\t    'space',\n\t    'Agrave',\n\t    'Atilde',\n\t    'Otilde',\n\t    'OE',\n\t    'oe',\n\t    'endash',\n\t    'emdash',\n\t    'quotedblleft',\n\t    'quotedblright',\n\t    'quoteleft',\n\t    'quoteright',\n\t    'divide',\n\t    'lozenge',\n\t    'ydieresis',\n\t    'Ydieresis',\n\t    'fraction',\n\t    'currency',\n\t    'guilsinglleft',\n\t    'guilsinglright',\n\t    'fi',\n\t    'fl',\n\t    'daggerdbl',\n\t    'periodcentered',\n\t    'quotesinglbase',\n\t    'quotedblbase',\n\t    'perthousand',\n\t    'Acircumflex',\n\t    'Ecircumflex',\n\t    'Aacute',\n\t    'Edieresis',\n\t    'Egrave',\n\t    'Iacute',\n\t    'Icircumflex',\n\t    'Idieresis',\n\t    'Igrave',\n\t    'Oacute',\n\t    'Ocircumflex',\n\t    'apple',\n\t    'Ograve',\n\t    'Uacute',\n\t    'Ucircumflex',\n\t    'Ugrave',\n\t    'dotlessi',\n\t    'circumflex',\n\t    'tilde',\n\t    'macron',\n\t    'breve',\n\t    'dotaccent',\n\t    'ring',\n\t    'cedilla',\n\t    'hungarumlaut',\n\t    'ogonek',\n\t    'caron'\n\t   ];\n\t   var StandardEncoding = [\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    'space',\n\t    'exclam',\n\t    'quotedbl',\n\t    'numbersign',\n\t    'dollar',\n\t    'percent',\n\t    'ampersand',\n\t    'quoteright',\n\t    'parenleft',\n\t    'parenright',\n\t    'asterisk',\n\t    'plus',\n\t    'comma',\n\t    'hyphen',\n\t    'period',\n\t    'slash',\n\t    'zero',\n\t    'one',\n\t    'two',\n\t    'three',\n\t    'four',\n\t    'five',\n\t    'six',\n\t    'seven',\n\t    'eight',\n\t    'nine',\n\t    'colon',\n\t    'semicolon',\n\t    'less',\n\t    'equal',\n\t    'greater',\n\t    'question',\n\t    'at',\n\t    'A',\n\t    'B',\n\t    'C',\n\t    'D',\n\t    'E',\n\t    'F',\n\t    'G',\n\t    'H',\n\t    'I',\n\t    'J',\n\t    'K',\n\t    'L',\n\t    'M',\n\t    'N',\n\t    'O',\n\t    'P',\n\t    'Q',\n\t    'R',\n\t    'S',\n\t    'T',\n\t    'U',\n\t    'V',\n\t    'W',\n\t    'X',\n\t    'Y',\n\t    'Z',\n\t    'bracketleft',\n\t    'backslash',\n\t    'bracketright',\n\t    'asciicircum',\n\t    'underscore',\n\t    'quoteleft',\n\t    'a',\n\t    'b',\n\t    'c',\n\t    'd',\n\t    'e',\n\t    'f',\n\t    'g',\n\t    'h',\n\t    'i',\n\t    'j',\n\t    'k',\n\t    'l',\n\t    'm',\n\t    'n',\n\t    'o',\n\t    'p',\n\t    'q',\n\t    'r',\n\t    's',\n\t    't',\n\t    'u',\n\t    'v',\n\t    'w',\n\t    'x',\n\t    'y',\n\t    'z',\n\t    'braceleft',\n\t    'bar',\n\t    'braceright',\n\t    'asciitilde',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    'exclamdown',\n\t    'cent',\n\t    'sterling',\n\t    'fraction',\n\t    'yen',\n\t    'florin',\n\t    'section',\n\t    'currency',\n\t    'quotesingle',\n\t    'quotedblleft',\n\t    'guillemotleft',\n\t    'guilsinglleft',\n\t    'guilsinglright',\n\t    'fi',\n\t    'fl',\n\t    '',\n\t    'endash',\n\t    'dagger',\n\t    'daggerdbl',\n\t    'periodcentered',\n\t    '',\n\t    'paragraph',\n\t    'bullet',\n\t    'quotesinglbase',\n\t    'quotedblbase',\n\t    'quotedblright',\n\t    'guillemotright',\n\t    'ellipsis',\n\t    'perthousand',\n\t    '',\n\t    'questiondown',\n\t    '',\n\t    'grave',\n\t    'acute',\n\t    'circumflex',\n\t    'tilde',\n\t    'macron',\n\t    'breve',\n\t    'dotaccent',\n\t    'dieresis',\n\t    '',\n\t    'ring',\n\t    'cedilla',\n\t    '',\n\t    'hungarumlaut',\n\t    'ogonek',\n\t    'caron',\n\t    'emdash',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    'AE',\n\t    '',\n\t    'ordfeminine',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    'Lslash',\n\t    'Oslash',\n\t    'OE',\n\t    'ordmasculine',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    'ae',\n\t    '',\n\t    '',\n\t    '',\n\t    'dotlessi',\n\t    '',\n\t    '',\n\t    'lslash',\n\t    'oslash',\n\t    'oe',\n\t    'germandbls'\n\t   ];\n\t   var WinAnsiEncoding = [\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    'space',\n\t    'exclam',\n\t    'quotedbl',\n\t    'numbersign',\n\t    'dollar',\n\t    'percent',\n\t    'ampersand',\n\t    'quotesingle',\n\t    'parenleft',\n\t    'parenright',\n\t    'asterisk',\n\t    'plus',\n\t    'comma',\n\t    'hyphen',\n\t    'period',\n\t    'slash',\n\t    'zero',\n\t    'one',\n\t    'two',\n\t    'three',\n\t    'four',\n\t    'five',\n\t    'six',\n\t    'seven',\n\t    'eight',\n\t    'nine',\n\t    'colon',\n\t    'semicolon',\n\t    'less',\n\t    'equal',\n\t    'greater',\n\t    'question',\n\t    'at',\n\t    'A',\n\t    'B',\n\t    'C',\n\t    'D',\n\t    'E',\n\t    'F',\n\t    'G',\n\t    'H',\n\t    'I',\n\t    'J',\n\t    'K',\n\t    'L',\n\t    'M',\n\t    'N',\n\t    'O',\n\t    'P',\n\t    'Q',\n\t    'R',\n\t    'S',\n\t    'T',\n\t    'U',\n\t    'V',\n\t    'W',\n\t    'X',\n\t    'Y',\n\t    'Z',\n\t    'bracketleft',\n\t    'backslash',\n\t    'bracketright',\n\t    'asciicircum',\n\t    'underscore',\n\t    'grave',\n\t    'a',\n\t    'b',\n\t    'c',\n\t    'd',\n\t    'e',\n\t    'f',\n\t    'g',\n\t    'h',\n\t    'i',\n\t    'j',\n\t    'k',\n\t    'l',\n\t    'm',\n\t    'n',\n\t    'o',\n\t    'p',\n\t    'q',\n\t    'r',\n\t    's',\n\t    't',\n\t    'u',\n\t    'v',\n\t    'w',\n\t    'x',\n\t    'y',\n\t    'z',\n\t    'braceleft',\n\t    'bar',\n\t    'braceright',\n\t    'asciitilde',\n\t    'bullet',\n\t    'Euro',\n\t    'bullet',\n\t    'quotesinglbase',\n\t    'florin',\n\t    'quotedblbase',\n\t    'ellipsis',\n\t    'dagger',\n\t    'daggerdbl',\n\t    'circumflex',\n\t    'perthousand',\n\t    'Scaron',\n\t    'guilsinglleft',\n\t    'OE',\n\t    'bullet',\n\t    'Zcaron',\n\t    'bullet',\n\t    'bullet',\n\t    'quoteleft',\n\t    'quoteright',\n\t    'quotedblleft',\n\t    'quotedblright',\n\t    'bullet',\n\t    'endash',\n\t    'emdash',\n\t    'tilde',\n\t    'trademark',\n\t    'scaron',\n\t    'guilsinglright',\n\t    'oe',\n\t    'bullet',\n\t    'zcaron',\n\t    'Ydieresis',\n\t    'space',\n\t    'exclamdown',\n\t    'cent',\n\t    'sterling',\n\t    'currency',\n\t    'yen',\n\t    'brokenbar',\n\t    'section',\n\t    'dieresis',\n\t    'copyright',\n\t    'ordfeminine',\n\t    'guillemotleft',\n\t    'logicalnot',\n\t    'hyphen',\n\t    'registered',\n\t    'macron',\n\t    'degree',\n\t    'plusminus',\n\t    'twosuperior',\n\t    'threesuperior',\n\t    'acute',\n\t    'mu',\n\t    'paragraph',\n\t    'periodcentered',\n\t    'cedilla',\n\t    'onesuperior',\n\t    'ordmasculine',\n\t    'guillemotright',\n\t    'onequarter',\n\t    'onehalf',\n\t    'threequarters',\n\t    'questiondown',\n\t    'Agrave',\n\t    'Aacute',\n\t    'Acircumflex',\n\t    'Atilde',\n\t    'Adieresis',\n\t    'Aring',\n\t    'AE',\n\t    'Ccedilla',\n\t    'Egrave',\n\t    'Eacute',\n\t    'Ecircumflex',\n\t    'Edieresis',\n\t    'Igrave',\n\t    'Iacute',\n\t    'Icircumflex',\n\t    'Idieresis',\n\t    'Eth',\n\t    'Ntilde',\n\t    'Ograve',\n\t    'Oacute',\n\t    'Ocircumflex',\n\t    'Otilde',\n\t    'Odieresis',\n\t    'multiply',\n\t    'Oslash',\n\t    'Ugrave',\n\t    'Uacute',\n\t    'Ucircumflex',\n\t    'Udieresis',\n\t    'Yacute',\n\t    'Thorn',\n\t    'germandbls',\n\t    'agrave',\n\t    'aacute',\n\t    'acircumflex',\n\t    'atilde',\n\t    'adieresis',\n\t    'aring',\n\t    'ae',\n\t    'ccedilla',\n\t    'egrave',\n\t    'eacute',\n\t    'ecircumflex',\n\t    'edieresis',\n\t    'igrave',\n\t    'iacute',\n\t    'icircumflex',\n\t    'idieresis',\n\t    'eth',\n\t    'ntilde',\n\t    'ograve',\n\t    'oacute',\n\t    'ocircumflex',\n\t    'otilde',\n\t    'odieresis',\n\t    'divide',\n\t    'oslash',\n\t    'ugrave',\n\t    'uacute',\n\t    'ucircumflex',\n\t    'udieresis',\n\t    'yacute',\n\t    'thorn',\n\t    'ydieresis'\n\t   ];\n\t   var SymbolSetEncoding = [\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    'space',\n\t    'exclam',\n\t    'universal',\n\t    'numbersign',\n\t    'existential',\n\t    'percent',\n\t    'ampersand',\n\t    'suchthat',\n\t    'parenleft',\n\t    'parenright',\n\t    'asteriskmath',\n\t    'plus',\n\t    'comma',\n\t    'minus',\n\t    'period',\n\t    'slash',\n\t    'zero',\n\t    'one',\n\t    'two',\n\t    'three',\n\t    'four',\n\t    'five',\n\t    'six',\n\t    'seven',\n\t    'eight',\n\t    'nine',\n\t    'colon',\n\t    'semicolon',\n\t    'less',\n\t    'equal',\n\t    'greater',\n\t    'question',\n\t    'congruent',\n\t    'Alpha',\n\t    'Beta',\n\t    'Chi',\n\t    'Delta',\n\t    'Epsilon',\n\t    'Phi',\n\t    'Gamma',\n\t    'Eta',\n\t    'Iota',\n\t    'theta1',\n\t    'Kappa',\n\t    'Lambda',\n\t    'Mu',\n\t    'Nu',\n\t    'Omicron',\n\t    'Pi',\n\t    'Theta',\n\t    'Rho',\n\t    'Sigma',\n\t    'Tau',\n\t    'Upsilon',\n\t    'sigma1',\n\t    'Omega',\n\t    'Xi',\n\t    'Psi',\n\t    'Zeta',\n\t    'bracketleft',\n\t    'therefore',\n\t    'bracketright',\n\t    'perpendicular',\n\t    'underscore',\n\t    'radicalex',\n\t    'alpha',\n\t    'beta',\n\t    'chi',\n\t    'delta',\n\t    'epsilon',\n\t    'phi',\n\t    'gamma',\n\t    'eta',\n\t    'iota',\n\t    'phi1',\n\t    'kappa',\n\t    'lambda',\n\t    'mu',\n\t    'nu',\n\t    'omicron',\n\t    'pi',\n\t    'theta',\n\t    'rho',\n\t    'sigma',\n\t    'tau',\n\t    'upsilon',\n\t    'omega1',\n\t    'omega',\n\t    'xi',\n\t    'psi',\n\t    'zeta',\n\t    'braceleft',\n\t    'bar',\n\t    'braceright',\n\t    'similar',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    'Euro',\n\t    'Upsilon1',\n\t    'minute',\n\t    'lessequal',\n\t    'fraction',\n\t    'infinity',\n\t    'florin',\n\t    'club',\n\t    'diamond',\n\t    'heart',\n\t    'spade',\n\t    'arrowboth',\n\t    'arrowleft',\n\t    'arrowup',\n\t    'arrowright',\n\t    'arrowdown',\n\t    'degree',\n\t    'plusminus',\n\t    'second',\n\t    'greaterequal',\n\t    'multiply',\n\t    'proportional',\n\t    'partialdiff',\n\t    'bullet',\n\t    'divide',\n\t    'notequal',\n\t    'equivalence',\n\t    'approxequal',\n\t    'ellipsis',\n\t    'arrowvertex',\n\t    'arrowhorizex',\n\t    'carriagereturn',\n\t    'aleph',\n\t    'Ifraktur',\n\t    'Rfraktur',\n\t    'weierstrass',\n\t    'circlemultiply',\n\t    'circleplus',\n\t    'emptyset',\n\t    'intersection',\n\t    'union',\n\t    'propersuperset',\n\t    'reflexsuperset',\n\t    'notsubset',\n\t    'propersubset',\n\t    'reflexsubset',\n\t    'element',\n\t    'notelement',\n\t    'angle',\n\t    'gradient',\n\t    'registerserif',\n\t    'copyrightserif',\n\t    'trademarkserif',\n\t    'product',\n\t    'radical',\n\t    'dotmath',\n\t    'logicalnot',\n\t    'logicaland',\n\t    'logicalor',\n\t    'arrowdblboth',\n\t    'arrowdblleft',\n\t    'arrowdblup',\n\t    'arrowdblright',\n\t    'arrowdbldown',\n\t    'lozenge',\n\t    'angleleft',\n\t    'registersans',\n\t    'copyrightsans',\n\t    'trademarksans',\n\t    'summation',\n\t    'parenlefttp',\n\t    'parenleftex',\n\t    'parenleftbt',\n\t    'bracketlefttp',\n\t    'bracketleftex',\n\t    'bracketleftbt',\n\t    'bracelefttp',\n\t    'braceleftmid',\n\t    'braceleftbt',\n\t    'braceex',\n\t    '',\n\t    'angleright',\n\t    'integral',\n\t    'integraltp',\n\t    'integralex',\n\t    'integralbt',\n\t    'parenrighttp',\n\t    'parenrightex',\n\t    'parenrightbt',\n\t    'bracketrighttp',\n\t    'bracketrightex',\n\t    'bracketrightbt',\n\t    'bracerighttp',\n\t    'bracerightmid',\n\t    'bracerightbt'\n\t   ];\n\t   var ZapfDingbatsEncoding = [\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    'space',\n\t    'a1',\n\t    'a2',\n\t    'a202',\n\t    'a3',\n\t    'a4',\n\t    'a5',\n\t    'a119',\n\t    'a118',\n\t    'a117',\n\t    'a11',\n\t    'a12',\n\t    'a13',\n\t    'a14',\n\t    'a15',\n\t    'a16',\n\t    'a105',\n\t    'a17',\n\t    'a18',\n\t    'a19',\n\t    'a20',\n\t    'a21',\n\t    'a22',\n\t    'a23',\n\t    'a24',\n\t    'a25',\n\t    'a26',\n\t    'a27',\n\t    'a28',\n\t    'a6',\n\t    'a7',\n\t    'a8',\n\t    'a9',\n\t    'a10',\n\t    'a29',\n\t    'a30',\n\t    'a31',\n\t    'a32',\n\t    'a33',\n\t    'a34',\n\t    'a35',\n\t    'a36',\n\t    'a37',\n\t    'a38',\n\t    'a39',\n\t    'a40',\n\t    'a41',\n\t    'a42',\n\t    'a43',\n\t    'a44',\n\t    'a45',\n\t    'a46',\n\t    'a47',\n\t    'a48',\n\t    'a49',\n\t    'a50',\n\t    'a51',\n\t    'a52',\n\t    'a53',\n\t    'a54',\n\t    'a55',\n\t    'a56',\n\t    'a57',\n\t    'a58',\n\t    'a59',\n\t    'a60',\n\t    'a61',\n\t    'a62',\n\t    'a63',\n\t    'a64',\n\t    'a65',\n\t    'a66',\n\t    'a67',\n\t    'a68',\n\t    'a69',\n\t    'a70',\n\t    'a71',\n\t    'a72',\n\t    'a73',\n\t    'a74',\n\t    'a203',\n\t    'a75',\n\t    'a204',\n\t    'a76',\n\t    'a77',\n\t    'a78',\n\t    'a79',\n\t    'a81',\n\t    'a82',\n\t    'a83',\n\t    'a84',\n\t    'a97',\n\t    'a98',\n\t    'a99',\n\t    'a100',\n\t    '',\n\t    'a89',\n\t    'a90',\n\t    'a93',\n\t    'a94',\n\t    'a91',\n\t    'a92',\n\t    'a205',\n\t    'a85',\n\t    'a206',\n\t    'a86',\n\t    'a87',\n\t    'a88',\n\t    'a95',\n\t    'a96',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    '',\n\t    'a101',\n\t    'a102',\n\t    'a103',\n\t    'a104',\n\t    'a106',\n\t    'a107',\n\t    'a108',\n\t    'a112',\n\t    'a111',\n\t    'a110',\n\t    'a109',\n\t    'a120',\n\t    'a121',\n\t    'a122',\n\t    'a123',\n\t    'a124',\n\t    'a125',\n\t    'a126',\n\t    'a127',\n\t    'a128',\n\t    'a129',\n\t    'a130',\n\t    'a131',\n\t    'a132',\n\t    'a133',\n\t    'a134',\n\t    'a135',\n\t    'a136',\n\t    'a137',\n\t    'a138',\n\t    'a139',\n\t    'a140',\n\t    'a141',\n\t    'a142',\n\t    'a143',\n\t    'a144',\n\t    'a145',\n\t    'a146',\n\t    'a147',\n\t    'a148',\n\t    'a149',\n\t    'a150',\n\t    'a151',\n\t    'a152',\n\t    'a153',\n\t    'a154',\n\t    'a155',\n\t    'a156',\n\t    'a157',\n\t    'a158',\n\t    'a159',\n\t    'a160',\n\t    'a161',\n\t    'a163',\n\t    'a164',\n\t    'a196',\n\t    'a165',\n\t    'a192',\n\t    'a166',\n\t    'a167',\n\t    'a168',\n\t    'a169',\n\t    'a170',\n\t    'a171',\n\t    'a172',\n\t    'a173',\n\t    'a162',\n\t    'a174',\n\t    'a175',\n\t    'a176',\n\t    'a177',\n\t    'a178',\n\t    'a179',\n\t    'a193',\n\t    'a180',\n\t    'a199',\n\t    'a181',\n\t    'a200',\n\t    'a182',\n\t    '',\n\t    'a201',\n\t    'a183',\n\t    'a184',\n\t    'a197',\n\t    'a185',\n\t    'a194',\n\t    'a198',\n\t    'a186',\n\t    'a195',\n\t    'a187',\n\t    'a188',\n\t    'a189',\n\t    'a190',\n\t    'a191'\n\t   ];\n\t   function getEncoding(encodingName) {\n\t    switch (encodingName) {\n\t    case 'WinAnsiEncoding':\n\t     return WinAnsiEncoding;\n\t    case 'StandardEncoding':\n\t     return StandardEncoding;\n\t    case 'MacRomanEncoding':\n\t     return MacRomanEncoding;\n\t    case 'SymbolSetEncoding':\n\t     return SymbolSetEncoding;\n\t    case 'ZapfDingbatsEncoding':\n\t     return ZapfDingbatsEncoding;\n\t    case 'ExpertEncoding':\n\t     return ExpertEncoding;\n\t    case 'MacExpertEncoding':\n\t     return MacExpertEncoding;\n\t    default:\n\t     return null;\n\t    }\n\t   }\n\t   exports.WinAnsiEncoding = WinAnsiEncoding;\n\t   exports.StandardEncoding = StandardEncoding;\n\t   exports.MacRomanEncoding = MacRomanEncoding;\n\t   exports.SymbolSetEncoding = SymbolSetEncoding;\n\t   exports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\n\t   exports.ExpertEncoding = ExpertEncoding;\n\t   exports.getEncoding = getEncoding;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsSharedUtil = {});\n\t  }(this, function (exports) {\n\t   var globalScope = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this;\n\t   var FONT_IDENTITY_MATRIX = [\n\t    0.001,\n\t    0,\n\t    0,\n\t    0.001,\n\t    0,\n\t    0\n\t   ];\n\t   var TextRenderingMode = {\n\t    FILL: 0,\n\t    STROKE: 1,\n\t    FILL_STROKE: 2,\n\t    INVISIBLE: 3,\n\t    FILL_ADD_TO_PATH: 4,\n\t    STROKE_ADD_TO_PATH: 5,\n\t    FILL_STROKE_ADD_TO_PATH: 6,\n\t    ADD_TO_PATH: 7,\n\t    FILL_STROKE_MASK: 3,\n\t    ADD_TO_PATH_FLAG: 4\n\t   };\n\t   var ImageKind = {\n\t    GRAYSCALE_1BPP: 1,\n\t    RGB_24BPP: 2,\n\t    RGBA_32BPP: 3\n\t   };\n\t   var AnnotationType = {\n\t    TEXT: 1,\n\t    LINK: 2,\n\t    FREETEXT: 3,\n\t    LINE: 4,\n\t    SQUARE: 5,\n\t    CIRCLE: 6,\n\t    POLYGON: 7,\n\t    POLYLINE: 8,\n\t    HIGHLIGHT: 9,\n\t    UNDERLINE: 10,\n\t    SQUIGGLY: 11,\n\t    STRIKEOUT: 12,\n\t    STAMP: 13,\n\t    CARET: 14,\n\t    INK: 15,\n\t    POPUP: 16,\n\t    FILEATTACHMENT: 17,\n\t    SOUND: 18,\n\t    MOVIE: 19,\n\t    WIDGET: 20,\n\t    SCREEN: 21,\n\t    PRINTERMARK: 22,\n\t    TRAPNET: 23,\n\t    WATERMARK: 24,\n\t    THREED: 25,\n\t    REDACT: 26\n\t   };\n\t   var AnnotationFlag = {\n\t    INVISIBLE: 0x01,\n\t    HIDDEN: 0x02,\n\t    PRINT: 0x04,\n\t    NOZOOM: 0x08,\n\t    NOROTATE: 0x10,\n\t    NOVIEW: 0x20,\n\t    READONLY: 0x40,\n\t    LOCKED: 0x80,\n\t    TOGGLENOVIEW: 0x100,\n\t    LOCKEDCONTENTS: 0x200\n\t   };\n\t   var AnnotationFieldFlag = {\n\t    READONLY: 0x0000001,\n\t    REQUIRED: 0x0000002,\n\t    NOEXPORT: 0x0000004,\n\t    MULTILINE: 0x0001000,\n\t    PASSWORD: 0x0002000,\n\t    NOTOGGLETOOFF: 0x0004000,\n\t    RADIO: 0x0008000,\n\t    PUSHBUTTON: 0x0010000,\n\t    COMBO: 0x0020000,\n\t    EDIT: 0x0040000,\n\t    SORT: 0x0080000,\n\t    FILESELECT: 0x0100000,\n\t    MULTISELECT: 0x0200000,\n\t    DONOTSPELLCHECK: 0x0400000,\n\t    DONOTSCROLL: 0x0800000,\n\t    COMB: 0x1000000,\n\t    RICHTEXT: 0x2000000,\n\t    RADIOSINUNISON: 0x2000000,\n\t    COMMITONSELCHANGE: 0x4000000\n\t   };\n\t   var AnnotationBorderStyleType = {\n\t    SOLID: 1,\n\t    DASHED: 2,\n\t    BEVELED: 3,\n\t    INSET: 4,\n\t    UNDERLINE: 5\n\t   };\n\t   var StreamType = {\n\t    UNKNOWN: 0,\n\t    FLATE: 1,\n\t    LZW: 2,\n\t    DCT: 3,\n\t    JPX: 4,\n\t    JBIG: 5,\n\t    A85: 6,\n\t    AHX: 7,\n\t    CCF: 8,\n\t    RL: 9\n\t   };\n\t   var FontType = {\n\t    UNKNOWN: 0,\n\t    TYPE1: 1,\n\t    TYPE1C: 2,\n\t    CIDFONTTYPE0: 3,\n\t    CIDFONTTYPE0C: 4,\n\t    TRUETYPE: 5,\n\t    CIDFONTTYPE2: 6,\n\t    TYPE3: 7,\n\t    OPENTYPE: 8,\n\t    TYPE0: 9,\n\t    MMTYPE1: 10\n\t   };\n\t   var VERBOSITY_LEVELS = {\n\t    errors: 0,\n\t    warnings: 1,\n\t    infos: 5\n\t   };\n\t   var OPS = {\n\t    dependency: 1,\n\t    setLineWidth: 2,\n\t    setLineCap: 3,\n\t    setLineJoin: 4,\n\t    setMiterLimit: 5,\n\t    setDash: 6,\n\t    setRenderingIntent: 7,\n\t    setFlatness: 8,\n\t    setGState: 9,\n\t    save: 10,\n\t    restore: 11,\n\t    transform: 12,\n\t    moveTo: 13,\n\t    lineTo: 14,\n\t    curveTo: 15,\n\t    curveTo2: 16,\n\t    curveTo3: 17,\n\t    closePath: 18,\n\t    rectangle: 19,\n\t    stroke: 20,\n\t    closeStroke: 21,\n\t    fill: 22,\n\t    eoFill: 23,\n\t    fillStroke: 24,\n\t    eoFillStroke: 25,\n\t    closeFillStroke: 26,\n\t    closeEOFillStroke: 27,\n\t    endPath: 28,\n\t    clip: 29,\n\t    eoClip: 30,\n\t    beginText: 31,\n\t    endText: 32,\n\t    setCharSpacing: 33,\n\t    setWordSpacing: 34,\n\t    setHScale: 35,\n\t    setLeading: 36,\n\t    setFont: 37,\n\t    setTextRenderingMode: 38,\n\t    setTextRise: 39,\n\t    moveText: 40,\n\t    setLeadingMoveText: 41,\n\t    setTextMatrix: 42,\n\t    nextLine: 43,\n\t    showText: 44,\n\t    showSpacedText: 45,\n\t    nextLineShowText: 46,\n\t    nextLineSetSpacingShowText: 47,\n\t    setCharWidth: 48,\n\t    setCharWidthAndBounds: 49,\n\t    setStrokeColorSpace: 50,\n\t    setFillColorSpace: 51,\n\t    setStrokeColor: 52,\n\t    setStrokeColorN: 53,\n\t    setFillColor: 54,\n\t    setFillColorN: 55,\n\t    setStrokeGray: 56,\n\t    setFillGray: 57,\n\t    setStrokeRGBColor: 58,\n\t    setFillRGBColor: 59,\n\t    setStrokeCMYKColor: 60,\n\t    setFillCMYKColor: 61,\n\t    shadingFill: 62,\n\t    beginInlineImage: 63,\n\t    beginImageData: 64,\n\t    endInlineImage: 65,\n\t    paintXObject: 66,\n\t    markPoint: 67,\n\t    markPointProps: 68,\n\t    beginMarkedContent: 69,\n\t    beginMarkedContentProps: 70,\n\t    endMarkedContent: 71,\n\t    beginCompat: 72,\n\t    endCompat: 73,\n\t    paintFormXObjectBegin: 74,\n\t    paintFormXObjectEnd: 75,\n\t    beginGroup: 76,\n\t    endGroup: 77,\n\t    beginAnnotations: 78,\n\t    endAnnotations: 79,\n\t    beginAnnotation: 80,\n\t    endAnnotation: 81,\n\t    paintJpegXObject: 82,\n\t    paintImageMaskXObject: 83,\n\t    paintImageMaskXObjectGroup: 84,\n\t    paintImageXObject: 85,\n\t    paintInlineImageXObject: 86,\n\t    paintInlineImageXObjectGroup: 87,\n\t    paintImageXObjectRepeat: 88,\n\t    paintImageMaskXObjectRepeat: 89,\n\t    paintSolidColorImageMask: 90,\n\t    constructPath: 91\n\t   };\n\t   var verbosity = VERBOSITY_LEVELS.warnings;\n\t   function setVerbosityLevel(level) {\n\t    verbosity = level;\n\t   }\n\t   function getVerbosityLevel() {\n\t    return verbosity;\n\t   }\n\t   function info(msg) {\n\t    if (verbosity >= VERBOSITY_LEVELS.infos) {\n\t     console.log('Info: ' + msg);\n\t    }\n\t   }\n\t   function warn(msg) {\n\t    if (verbosity >= VERBOSITY_LEVELS.warnings) {\n\t     console.log('Warning: ' + msg);\n\t    }\n\t   }\n\t   function deprecated(details) {\n\t    console.log('Deprecated API usage: ' + details);\n\t   }\n\t   function error(msg) {\n\t    if (verbosity >= VERBOSITY_LEVELS.errors) {\n\t     console.log('Error: ' + msg);\n\t     console.log(backtrace());\n\t    }\n\t    throw new Error(msg);\n\t   }\n\t   function backtrace() {\n\t    try {\n\t     throw new Error();\n\t    } catch (e) {\n\t     return e.stack ? e.stack.split('\\n').slice(2).join('\\n') : '';\n\t    }\n\t   }\n\t   function assert(cond, msg) {\n\t    if (!cond) {\n\t     error(msg);\n\t    }\n\t   }\n\t   var UNSUPPORTED_FEATURES = {\n\t    unknown: 'unknown',\n\t    forms: 'forms',\n\t    javaScript: 'javaScript',\n\t    smask: 'smask',\n\t    shadingPattern: 'shadingPattern',\n\t    font: 'font'\n\t   };\n\t   function isSameOrigin(baseUrl, otherUrl) {\n\t    try {\n\t     var base = new URL(baseUrl);\n\t     if (!base.origin || base.origin === 'null') {\n\t      return false;\n\t     }\n\t    } catch (e) {\n\t     return false;\n\t    }\n\t    var other = new URL(otherUrl, base);\n\t    return base.origin === other.origin;\n\t   }\n\t   function isValidProtocol(url) {\n\t    if (!url) {\n\t     return false;\n\t    }\n\t    switch (url.protocol) {\n\t    case 'http:':\n\t    case 'https:':\n\t    case 'ftp:':\n\t    case 'mailto:':\n\t    case 'tel:':\n\t     return true;\n\t    default:\n\t     return false;\n\t    }\n\t   }\n\t   function createValidAbsoluteUrl(url, baseUrl) {\n\t    if (!url) {\n\t     return null;\n\t    }\n\t    try {\n\t     var absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n\t     if (isValidProtocol(absoluteUrl)) {\n\t      return absoluteUrl;\n\t     }\n\t    } catch (ex) {\n\t    }\n\t    return null;\n\t   }\n\t   function shadow(obj, prop, value) {\n\t    Object.defineProperty(obj, prop, {\n\t     value: value,\n\t     enumerable: true,\n\t     configurable: true,\n\t     writable: false\n\t    });\n\t    return value;\n\t   }\n\t   function getLookupTableFactory(initializer) {\n\t    var lookup;\n\t    return function () {\n\t     if (initializer) {\n\t      lookup = Object.create(null);\n\t      initializer(lookup);\n\t      initializer = null;\n\t     }\n\t     return lookup;\n\t    };\n\t   }\n\t   var PasswordResponses = {\n\t    NEED_PASSWORD: 1,\n\t    INCORRECT_PASSWORD: 2\n\t   };\n\t   var PasswordException = function PasswordExceptionClosure() {\n\t    function PasswordException(msg, code) {\n\t     this.name = 'PasswordException';\n\t     this.message = msg;\n\t     this.code = code;\n\t    }\n\t    PasswordException.prototype = new Error();\n\t    PasswordException.constructor = PasswordException;\n\t    return PasswordException;\n\t   }();\n\t   var UnknownErrorException = function UnknownErrorExceptionClosure() {\n\t    function UnknownErrorException(msg, details) {\n\t     this.name = 'UnknownErrorException';\n\t     this.message = msg;\n\t     this.details = details;\n\t    }\n\t    UnknownErrorException.prototype = new Error();\n\t    UnknownErrorException.constructor = UnknownErrorException;\n\t    return UnknownErrorException;\n\t   }();\n\t   var InvalidPDFException = function InvalidPDFExceptionClosure() {\n\t    function InvalidPDFException(msg) {\n\t     this.name = 'InvalidPDFException';\n\t     this.message = msg;\n\t    }\n\t    InvalidPDFException.prototype = new Error();\n\t    InvalidPDFException.constructor = InvalidPDFException;\n\t    return InvalidPDFException;\n\t   }();\n\t   var MissingPDFException = function MissingPDFExceptionClosure() {\n\t    function MissingPDFException(msg) {\n\t     this.name = 'MissingPDFException';\n\t     this.message = msg;\n\t    }\n\t    MissingPDFException.prototype = new Error();\n\t    MissingPDFException.constructor = MissingPDFException;\n\t    return MissingPDFException;\n\t   }();\n\t   var UnexpectedResponseException = function UnexpectedResponseExceptionClosure() {\n\t    function UnexpectedResponseException(msg, status) {\n\t     this.name = 'UnexpectedResponseException';\n\t     this.message = msg;\n\t     this.status = status;\n\t    }\n\t    UnexpectedResponseException.prototype = new Error();\n\t    UnexpectedResponseException.constructor = UnexpectedResponseException;\n\t    return UnexpectedResponseException;\n\t   }();\n\t   var NotImplementedException = function NotImplementedExceptionClosure() {\n\t    function NotImplementedException(msg) {\n\t     this.message = msg;\n\t    }\n\t    NotImplementedException.prototype = new Error();\n\t    NotImplementedException.prototype.name = 'NotImplementedException';\n\t    NotImplementedException.constructor = NotImplementedException;\n\t    return NotImplementedException;\n\t   }();\n\t   var MissingDataException = function MissingDataExceptionClosure() {\n\t    function MissingDataException(begin, end) {\n\t     this.begin = begin;\n\t     this.end = end;\n\t     this.message = 'Missing data [' + begin + ', ' + end + ')';\n\t    }\n\t    MissingDataException.prototype = new Error();\n\t    MissingDataException.prototype.name = 'MissingDataException';\n\t    MissingDataException.constructor = MissingDataException;\n\t    return MissingDataException;\n\t   }();\n\t   var XRefParseException = function XRefParseExceptionClosure() {\n\t    function XRefParseException(msg) {\n\t     this.message = msg;\n\t    }\n\t    XRefParseException.prototype = new Error();\n\t    XRefParseException.prototype.name = 'XRefParseException';\n\t    XRefParseException.constructor = XRefParseException;\n\t    return XRefParseException;\n\t   }();\n\t   var NullCharactersRegExp = /\\x00/g;\n\t   function removeNullCharacters(str) {\n\t    if (typeof str !== 'string') {\n\t     warn('The argument for removeNullCharacters must be a string.');\n\t     return str;\n\t    }\n\t    return str.replace(NullCharactersRegExp, '');\n\t   }\n\t   function bytesToString(bytes) {\n\t    assert(bytes !== null && typeof bytes === 'object' && bytes.length !== undefined, 'Invalid argument for bytesToString');\n\t    var length = bytes.length;\n\t    var MAX_ARGUMENT_COUNT = 8192;\n\t    if (length < MAX_ARGUMENT_COUNT) {\n\t     return String.fromCharCode.apply(null, bytes);\n\t    }\n\t    var strBuf = [];\n\t    for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n\t     var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n\t     var chunk = bytes.subarray(i, chunkEnd);\n\t     strBuf.push(String.fromCharCode.apply(null, chunk));\n\t    }\n\t    return strBuf.join('');\n\t   }\n\t   function stringToBytes(str) {\n\t    assert(typeof str === 'string', 'Invalid argument for stringToBytes');\n\t    var length = str.length;\n\t    var bytes = new Uint8Array(length);\n\t    for (var i = 0; i < length; ++i) {\n\t     bytes[i] = str.charCodeAt(i) & 0xFF;\n\t    }\n\t    return bytes;\n\t   }\n\t   function arrayByteLength(arr) {\n\t    if (arr.length !== undefined) {\n\t     return arr.length;\n\t    }\n\t    assert(arr.byteLength !== undefined);\n\t    return arr.byteLength;\n\t   }\n\t   function arraysToBytes(arr) {\n\t    if (arr.length === 1 && arr[0] instanceof Uint8Array) {\n\t     return arr[0];\n\t    }\n\t    var resultLength = 0;\n\t    var i, ii = arr.length;\n\t    var item, itemLength;\n\t    for (i = 0; i < ii; i++) {\n\t     item = arr[i];\n\t     itemLength = arrayByteLength(item);\n\t     resultLength += itemLength;\n\t    }\n\t    var pos = 0;\n\t    var data = new Uint8Array(resultLength);\n\t    for (i = 0; i < ii; i++) {\n\t     item = arr[i];\n\t     if (!(item instanceof Uint8Array)) {\n\t      if (typeof item === 'string') {\n\t       item = stringToBytes(item);\n\t      } else {\n\t       item = new Uint8Array(item);\n\t      }\n\t     }\n\t     itemLength = item.byteLength;\n\t     data.set(item, pos);\n\t     pos += itemLength;\n\t    }\n\t    return data;\n\t   }\n\t   function string32(value) {\n\t    return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n\t   }\n\t   function log2(x) {\n\t    var n = 1, i = 0;\n\t    while (x > n) {\n\t     n <<= 1;\n\t     i++;\n\t    }\n\t    return i;\n\t   }\n\t   function readInt8(data, start) {\n\t    return data[start] << 24 >> 24;\n\t   }\n\t   function readUint16(data, offset) {\n\t    return data[offset] << 8 | data[offset + 1];\n\t   }\n\t   function readUint32(data, offset) {\n\t    return (data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3]) >>> 0;\n\t   }\n\t   function isLittleEndian() {\n\t    var buffer8 = new Uint8Array(2);\n\t    buffer8[0] = 1;\n\t    var buffer16 = new Uint16Array(buffer8.buffer);\n\t    return buffer16[0] === 1;\n\t   }\n\t   function isEvalSupported() {\n\t    try {\n\t     new Function('');\n\t     return true;\n\t    } catch (e) {\n\t     return false;\n\t    }\n\t   }\n\t   var Uint32ArrayView = function Uint32ArrayViewClosure() {\n\t    function Uint32ArrayView(buffer, length) {\n\t     this.buffer = buffer;\n\t     this.byteLength = buffer.length;\n\t     this.length = length === undefined ? this.byteLength >> 2 : length;\n\t     ensureUint32ArrayViewProps(this.length);\n\t    }\n\t    Uint32ArrayView.prototype = Object.create(null);\n\t    var uint32ArrayViewSetters = 0;\n\t    function createUint32ArrayProp(index) {\n\t     return {\n\t      get: function () {\n\t       var buffer = this.buffer, offset = index << 2;\n\t       return (buffer[offset] | buffer[offset + 1] << 8 | buffer[offset + 2] << 16 | buffer[offset + 3] << 24) >>> 0;\n\t      },\n\t      set: function (value) {\n\t       var buffer = this.buffer, offset = index << 2;\n\t       buffer[offset] = value & 255;\n\t       buffer[offset + 1] = value >> 8 & 255;\n\t       buffer[offset + 2] = value >> 16 & 255;\n\t       buffer[offset + 3] = value >>> 24 & 255;\n\t      }\n\t     };\n\t    }\n\t    function ensureUint32ArrayViewProps(length) {\n\t     while (uint32ArrayViewSetters < length) {\n\t      Object.defineProperty(Uint32ArrayView.prototype, uint32ArrayViewSetters, createUint32ArrayProp(uint32ArrayViewSetters));\n\t      uint32ArrayViewSetters++;\n\t     }\n\t    }\n\t    return Uint32ArrayView;\n\t   }();\n\t   exports.Uint32ArrayView = Uint32ArrayView;\n\t   var IDENTITY_MATRIX = [\n\t    1,\n\t    0,\n\t    0,\n\t    1,\n\t    0,\n\t    0\n\t   ];\n\t   var Util = function UtilClosure() {\n\t    function Util() {\n\t    }\n\t    var rgbBuf = [\n\t     'rgb(',\n\t     0,\n\t     ',',\n\t     0,\n\t     ',',\n\t     0,\n\t     ')'\n\t    ];\n\t    Util.makeCssRgb = function Util_makeCssRgb(r, g, b) {\n\t     rgbBuf[1] = r;\n\t     rgbBuf[3] = g;\n\t     rgbBuf[5] = b;\n\t     return rgbBuf.join('');\n\t    };\n\t    Util.transform = function Util_transform(m1, m2) {\n\t     return [\n\t      m1[0] * m2[0] + m1[2] * m2[1],\n\t      m1[1] * m2[0] + m1[3] * m2[1],\n\t      m1[0] * m2[2] + m1[2] * m2[3],\n\t      m1[1] * m2[2] + m1[3] * m2[3],\n\t      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n\t      m1[1] * m2[4] + m1[3] * m2[5] + m1[5]\n\t     ];\n\t    };\n\t    Util.applyTransform = function Util_applyTransform(p, m) {\n\t     var xt = p[0] * m[0] + p[1] * m[2] + m[4];\n\t     var yt = p[0] * m[1] + p[1] * m[3] + m[5];\n\t     return [\n\t      xt,\n\t      yt\n\t     ];\n\t    };\n\t    Util.applyInverseTransform = function Util_applyInverseTransform(p, m) {\n\t     var d = m[0] * m[3] - m[1] * m[2];\n\t     var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n\t     var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n\t     return [\n\t      xt,\n\t      yt\n\t     ];\n\t    };\n\t    Util.getAxialAlignedBoundingBox = function Util_getAxialAlignedBoundingBox(r, m) {\n\t     var p1 = Util.applyTransform(r, m);\n\t     var p2 = Util.applyTransform(r.slice(2, 4), m);\n\t     var p3 = Util.applyTransform([\n\t      r[0],\n\t      r[3]\n\t     ], m);\n\t     var p4 = Util.applyTransform([\n\t      r[2],\n\t      r[1]\n\t     ], m);\n\t     return [\n\t      Math.min(p1[0], p2[0], p3[0], p4[0]),\n\t      Math.min(p1[1], p2[1], p3[1], p4[1]),\n\t      Math.max(p1[0], p2[0], p3[0], p4[0]),\n\t      Math.max(p1[1], p2[1], p3[1], p4[1])\n\t     ];\n\t    };\n\t    Util.inverseTransform = function Util_inverseTransform(m) {\n\t     var d = m[0] * m[3] - m[1] * m[2];\n\t     return [\n\t      m[3] / d,\n\t      -m[1] / d,\n\t      -m[2] / d,\n\t      m[0] / d,\n\t      (m[2] * m[5] - m[4] * m[3]) / d,\n\t      (m[4] * m[1] - m[5] * m[0]) / d\n\t     ];\n\t    };\n\t    Util.apply3dTransform = function Util_apply3dTransform(m, v) {\n\t     return [\n\t      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n\t      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n\t      m[6] * v[0] + m[7] * v[1] + m[8] * v[2]\n\t     ];\n\t    };\n\t    Util.singularValueDecompose2dScale = function Util_singularValueDecompose2dScale(m) {\n\t     var transpose = [\n\t      m[0],\n\t      m[2],\n\t      m[1],\n\t      m[3]\n\t     ];\n\t     var a = m[0] * transpose[0] + m[1] * transpose[2];\n\t     var b = m[0] * transpose[1] + m[1] * transpose[3];\n\t     var c = m[2] * transpose[0] + m[3] * transpose[2];\n\t     var d = m[2] * transpose[1] + m[3] * transpose[3];\n\t     var first = (a + d) / 2;\n\t     var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n\t     var sx = first + second || 1;\n\t     var sy = first - second || 1;\n\t     return [\n\t      Math.sqrt(sx),\n\t      Math.sqrt(sy)\n\t     ];\n\t    };\n\t    Util.normalizeRect = function Util_normalizeRect(rect) {\n\t     var r = rect.slice(0);\n\t     if (rect[0] > rect[2]) {\n\t      r[0] = rect[2];\n\t      r[2] = rect[0];\n\t     }\n\t     if (rect[1] > rect[3]) {\n\t      r[1] = rect[3];\n\t      r[3] = rect[1];\n\t     }\n\t     return r;\n\t    };\n\t    Util.intersect = function Util_intersect(rect1, rect2) {\n\t     function compare(a, b) {\n\t      return a - b;\n\t     }\n\t     var orderedX = [\n\t       rect1[0],\n\t       rect1[2],\n\t       rect2[0],\n\t       rect2[2]\n\t      ].sort(compare), orderedY = [\n\t       rect1[1],\n\t       rect1[3],\n\t       rect2[1],\n\t       rect2[3]\n\t      ].sort(compare), result = [];\n\t     rect1 = Util.normalizeRect(rect1);\n\t     rect2 = Util.normalizeRect(rect2);\n\t     if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n\t      result[0] = orderedX[1];\n\t      result[2] = orderedX[2];\n\t     } else {\n\t      return false;\n\t     }\n\t     if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n\t      result[1] = orderedY[1];\n\t      result[3] = orderedY[2];\n\t     } else {\n\t      return false;\n\t     }\n\t     return result;\n\t    };\n\t    Util.sign = function Util_sign(num) {\n\t     return num < 0 ? -1 : 1;\n\t    };\n\t    var ROMAN_NUMBER_MAP = [\n\t     '',\n\t     'C',\n\t     'CC',\n\t     'CCC',\n\t     'CD',\n\t     'D',\n\t     'DC',\n\t     'DCC',\n\t     'DCCC',\n\t     'CM',\n\t     '',\n\t     'X',\n\t     'XX',\n\t     'XXX',\n\t     'XL',\n\t     'L',\n\t     'LX',\n\t     'LXX',\n\t     'LXXX',\n\t     'XC',\n\t     '',\n\t     'I',\n\t     'II',\n\t     'III',\n\t     'IV',\n\t     'V',\n\t     'VI',\n\t     'VII',\n\t     'VIII',\n\t     'IX'\n\t    ];\n\t    Util.toRoman = function Util_toRoman(number, lowerCase) {\n\t     assert(isInt(number) && number > 0, 'The number should be a positive integer.');\n\t     var pos, romanBuf = [];\n\t     while (number >= 1000) {\n\t      number -= 1000;\n\t      romanBuf.push('M');\n\t     }\n\t     pos = number / 100 | 0;\n\t     number %= 100;\n\t     romanBuf.push(ROMAN_NUMBER_MAP[pos]);\n\t     pos = number / 10 | 0;\n\t     number %= 10;\n\t     romanBuf.push(ROMAN_NUMBER_MAP[10 + pos]);\n\t     romanBuf.push(ROMAN_NUMBER_MAP[20 + number]);\n\t     var romanStr = romanBuf.join('');\n\t     return lowerCase ? romanStr.toLowerCase() : romanStr;\n\t    };\n\t    Util.appendToArray = function Util_appendToArray(arr1, arr2) {\n\t     Array.prototype.push.apply(arr1, arr2);\n\t    };\n\t    Util.prependToArray = function Util_prependToArray(arr1, arr2) {\n\t     Array.prototype.unshift.apply(arr1, arr2);\n\t    };\n\t    Util.extendObj = function extendObj(obj1, obj2) {\n\t     for (var key in obj2) {\n\t      obj1[key] = obj2[key];\n\t     }\n\t    };\n\t    Util.getInheritableProperty = function Util_getInheritableProperty(dict, name, getArray) {\n\t     while (dict && !dict.has(name)) {\n\t      dict = dict.get('Parent');\n\t     }\n\t     if (!dict) {\n\t      return null;\n\t     }\n\t     return getArray ? dict.getArray(name) : dict.get(name);\n\t    };\n\t    Util.inherit = function Util_inherit(sub, base, prototype) {\n\t     sub.prototype = Object.create(base.prototype);\n\t     sub.prototype.constructor = sub;\n\t     for (var prop in prototype) {\n\t      sub.prototype[prop] = prototype[prop];\n\t     }\n\t    };\n\t    Util.loadScript = function Util_loadScript(src, callback) {\n\t     var script = document.createElement('script');\n\t     var loaded = false;\n\t     script.setAttribute('src', src);\n\t     if (callback) {\n\t      script.onload = function () {\n\t       if (!loaded) {\n\t        callback();\n\t       }\n\t       loaded = true;\n\t      };\n\t     }\n\t     document.getElementsByTagName('head')[0].appendChild(script);\n\t    };\n\t    return Util;\n\t   }();\n\t   var PageViewport = function PageViewportClosure() {\n\t    function PageViewport(viewBox, scale, rotation, offsetX, offsetY, dontFlip) {\n\t     this.viewBox = viewBox;\n\t     this.scale = scale;\n\t     this.rotation = rotation;\n\t     this.offsetX = offsetX;\n\t     this.offsetY = offsetY;\n\t     var centerX = (viewBox[2] + viewBox[0]) / 2;\n\t     var centerY = (viewBox[3] + viewBox[1]) / 2;\n\t     var rotateA, rotateB, rotateC, rotateD;\n\t     rotation = rotation % 360;\n\t     rotation = rotation < 0 ? rotation + 360 : rotation;\n\t     switch (rotation) {\n\t     case 180:\n\t      rotateA = -1;\n\t      rotateB = 0;\n\t      rotateC = 0;\n\t      rotateD = 1;\n\t      break;\n\t     case 90:\n\t      rotateA = 0;\n\t      rotateB = 1;\n\t      rotateC = 1;\n\t      rotateD = 0;\n\t      break;\n\t     case 270:\n\t      rotateA = 0;\n\t      rotateB = -1;\n\t      rotateC = -1;\n\t      rotateD = 0;\n\t      break;\n\t     default:\n\t      rotateA = 1;\n\t      rotateB = 0;\n\t      rotateC = 0;\n\t      rotateD = -1;\n\t      break;\n\t     }\n\t     if (dontFlip) {\n\t      rotateC = -rotateC;\n\t      rotateD = -rotateD;\n\t     }\n\t     var offsetCanvasX, offsetCanvasY;\n\t     var width, height;\n\t     if (rotateA === 0) {\n\t      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n\t      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n\t      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n\t      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n\t     } else {\n\t      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n\t      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n\t      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n\t      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n\t     }\n\t     this.transform = [\n\t      rotateA * scale,\n\t      rotateB * scale,\n\t      rotateC * scale,\n\t      rotateD * scale,\n\t      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n\t      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY\n\t     ];\n\t     this.width = width;\n\t     this.height = height;\n\t     this.fontScale = scale;\n\t    }\n\t    PageViewport.prototype = {\n\t     clone: function PageViewPort_clone(args) {\n\t      args = args || {};\n\t      var scale = 'scale' in args ? args.scale : this.scale;\n\t      var rotation = 'rotation' in args ? args.rotation : this.rotation;\n\t      return new PageViewport(this.viewBox.slice(), scale, rotation, this.offsetX, this.offsetY, args.dontFlip);\n\t     },\n\t     convertToViewportPoint: function PageViewport_convertToViewportPoint(x, y) {\n\t      return Util.applyTransform([\n\t       x,\n\t       y\n\t      ], this.transform);\n\t     },\n\t     convertToViewportRectangle: function PageViewport_convertToViewportRectangle(rect) {\n\t      var tl = Util.applyTransform([\n\t       rect[0],\n\t       rect[1]\n\t      ], this.transform);\n\t      var br = Util.applyTransform([\n\t       rect[2],\n\t       rect[3]\n\t      ], this.transform);\n\t      return [\n\t       tl[0],\n\t       tl[1],\n\t       br[0],\n\t       br[1]\n\t      ];\n\t     },\n\t     convertToPdfPoint: function PageViewport_convertToPdfPoint(x, y) {\n\t      return Util.applyInverseTransform([\n\t       x,\n\t       y\n\t      ], this.transform);\n\t     }\n\t    };\n\t    return PageViewport;\n\t   }();\n\t   var PDFStringTranslateTable = [\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0x2D8,\n\t    0x2C7,\n\t    0x2C6,\n\t    0x2D9,\n\t    0x2DD,\n\t    0x2DB,\n\t    0x2DA,\n\t    0x2DC,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0x2022,\n\t    0x2020,\n\t    0x2021,\n\t    0x2026,\n\t    0x2014,\n\t    0x2013,\n\t    0x192,\n\t    0x2044,\n\t    0x2039,\n\t    0x203A,\n\t    0x2212,\n\t    0x2030,\n\t    0x201E,\n\t    0x201C,\n\t    0x201D,\n\t    0x2018,\n\t    0x2019,\n\t    0x201A,\n\t    0x2122,\n\t    0xFB01,\n\t    0xFB02,\n\t    0x141,\n\t    0x152,\n\t    0x160,\n\t    0x178,\n\t    0x17D,\n\t    0x131,\n\t    0x142,\n\t    0x153,\n\t    0x161,\n\t    0x17E,\n\t    0,\n\t    0x20AC\n\t   ];\n\t   function stringToPDFString(str) {\n\t    var i, n = str.length, strBuf = [];\n\t    if (str[0] === '\\xFE' && str[1] === '\\xFF') {\n\t     for (i = 2; i < n; i += 2) {\n\t      strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n\t     }\n\t    } else {\n\t     for (i = 0; i < n; ++i) {\n\t      var code = PDFStringTranslateTable[str.charCodeAt(i)];\n\t      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n\t     }\n\t    }\n\t    return strBuf.join('');\n\t   }\n\t   function stringToUTF8String(str) {\n\t    return decodeURIComponent(escape(str));\n\t   }\n\t   function utf8StringToString(str) {\n\t    return unescape(encodeURIComponent(str));\n\t   }\n\t   function isEmptyObj(obj) {\n\t    for (var key in obj) {\n\t     return false;\n\t    }\n\t    return true;\n\t   }\n\t   function isBool(v) {\n\t    return typeof v === 'boolean';\n\t   }\n\t   function isInt(v) {\n\t    return typeof v === 'number' && (v | 0) === v;\n\t   }\n\t   function isNum(v) {\n\t    return typeof v === 'number';\n\t   }\n\t   function isString(v) {\n\t    return typeof v === 'string';\n\t   }\n\t   function isArray(v) {\n\t    return v instanceof Array;\n\t   }\n\t   function isArrayBuffer(v) {\n\t    return typeof v === 'object' && v !== null && v.byteLength !== undefined;\n\t   }\n\t   function isSpace(ch) {\n\t    return ch === 0x20 || ch === 0x09 || ch === 0x0D || ch === 0x0A;\n\t   }\n\t   function createPromiseCapability() {\n\t    var capability = {};\n\t    capability.promise = new Promise(function (resolve, reject) {\n\t     capability.resolve = resolve;\n\t     capability.reject = reject;\n\t    });\n\t    return capability;\n\t   }\n\t   (function PromiseClosure() {\n\t    if (globalScope.Promise) {\n\t     if (typeof globalScope.Promise.all !== 'function') {\n\t      globalScope.Promise.all = function (iterable) {\n\t       var count = 0, results = [], resolve, reject;\n\t       var promise = new globalScope.Promise(function (resolve_, reject_) {\n\t        resolve = resolve_;\n\t        reject = reject_;\n\t       });\n\t       iterable.forEach(function (p, i) {\n\t        count++;\n\t        p.then(function (result) {\n\t         results[i] = result;\n\t         count--;\n\t         if (count === 0) {\n\t          resolve(results);\n\t         }\n\t        }, reject);\n\t       });\n\t       if (count === 0) {\n\t        resolve(results);\n\t       }\n\t       return promise;\n\t      };\n\t     }\n\t     if (typeof globalScope.Promise.resolve !== 'function') {\n\t      globalScope.Promise.resolve = function (value) {\n\t       return new globalScope.Promise(function (resolve) {\n\t        resolve(value);\n\t       });\n\t      };\n\t     }\n\t     if (typeof globalScope.Promise.reject !== 'function') {\n\t      globalScope.Promise.reject = function (reason) {\n\t       return new globalScope.Promise(function (resolve, reject) {\n\t        reject(reason);\n\t       });\n\t      };\n\t     }\n\t     if (typeof globalScope.Promise.prototype.catch !== 'function') {\n\t      globalScope.Promise.prototype.catch = function (onReject) {\n\t       return globalScope.Promise.prototype.then(undefined, onReject);\n\t      };\n\t     }\n\t     return;\n\t    }\n\t    var STATUS_PENDING = 0;\n\t    var STATUS_RESOLVED = 1;\n\t    var STATUS_REJECTED = 2;\n\t    var REJECTION_TIMEOUT = 500;\n\t    var HandlerManager = {\n\t     handlers: [],\n\t     running: false,\n\t     unhandledRejections: [],\n\t     pendingRejectionCheck: false,\n\t     scheduleHandlers: function scheduleHandlers(promise) {\n\t      if (promise._status === STATUS_PENDING) {\n\t       return;\n\t      }\n\t      this.handlers = this.handlers.concat(promise._handlers);\n\t      promise._handlers = [];\n\t      if (this.running) {\n\t       return;\n\t      }\n\t      this.running = true;\n\t      setTimeout(this.runHandlers.bind(this), 0);\n\t     },\n\t     runHandlers: function runHandlers() {\n\t      var RUN_TIMEOUT = 1;\n\t      var timeoutAt = Date.now() + RUN_TIMEOUT;\n\t      while (this.handlers.length > 0) {\n\t       var handler = this.handlers.shift();\n\t       var nextStatus = handler.thisPromise._status;\n\t       var nextValue = handler.thisPromise._value;\n\t       try {\n\t        if (nextStatus === STATUS_RESOLVED) {\n\t         if (typeof handler.onResolve === 'function') {\n\t          nextValue = handler.onResolve(nextValue);\n\t         }\n\t        } else if (typeof handler.onReject === 'function') {\n\t         nextValue = handler.onReject(nextValue);\n\t         nextStatus = STATUS_RESOLVED;\n\t         if (handler.thisPromise._unhandledRejection) {\n\t          this.removeUnhandeledRejection(handler.thisPromise);\n\t         }\n\t        }\n\t       } catch (ex) {\n\t        nextStatus = STATUS_REJECTED;\n\t        nextValue = ex;\n\t       }\n\t       handler.nextPromise._updateStatus(nextStatus, nextValue);\n\t       if (Date.now() >= timeoutAt) {\n\t        break;\n\t       }\n\t      }\n\t      if (this.handlers.length > 0) {\n\t       setTimeout(this.runHandlers.bind(this), 0);\n\t       return;\n\t      }\n\t      this.running = false;\n\t     },\n\t     addUnhandledRejection: function addUnhandledRejection(promise) {\n\t      this.unhandledRejections.push({\n\t       promise: promise,\n\t       time: Date.now()\n\t      });\n\t      this.scheduleRejectionCheck();\n\t     },\n\t     removeUnhandeledRejection: function removeUnhandeledRejection(promise) {\n\t      promise._unhandledRejection = false;\n\t      for (var i = 0; i < this.unhandledRejections.length; i++) {\n\t       if (this.unhandledRejections[i].promise === promise) {\n\t        this.unhandledRejections.splice(i);\n\t        i--;\n\t       }\n\t      }\n\t     },\n\t     scheduleRejectionCheck: function scheduleRejectionCheck() {\n\t      if (this.pendingRejectionCheck) {\n\t       return;\n\t      }\n\t      this.pendingRejectionCheck = true;\n\t      setTimeout(function rejectionCheck() {\n\t       this.pendingRejectionCheck = false;\n\t       var now = Date.now();\n\t       for (var i = 0; i < this.unhandledRejections.length; i++) {\n\t        if (now - this.unhandledRejections[i].time > REJECTION_TIMEOUT) {\n\t         var unhandled = this.unhandledRejections[i].promise._value;\n\t         var msg = 'Unhandled rejection: ' + unhandled;\n\t         if (unhandled.stack) {\n\t          msg += '\\n' + unhandled.stack;\n\t         }\n\t         warn(msg);\n\t         this.unhandledRejections.splice(i);\n\t         i--;\n\t        }\n\t       }\n\t       if (this.unhandledRejections.length) {\n\t        this.scheduleRejectionCheck();\n\t       }\n\t      }.bind(this), REJECTION_TIMEOUT);\n\t     }\n\t    };\n\t    var Promise = function Promise(resolver) {\n\t     this._status = STATUS_PENDING;\n\t     this._handlers = [];\n\t     try {\n\t      resolver.call(this, this._resolve.bind(this), this._reject.bind(this));\n\t     } catch (e) {\n\t      this._reject(e);\n\t     }\n\t    };\n\t    Promise.all = function Promise_all(promises) {\n\t     var resolveAll, rejectAll;\n\t     var deferred = new Promise(function (resolve, reject) {\n\t      resolveAll = resolve;\n\t      rejectAll = reject;\n\t     });\n\t     var unresolved = promises.length;\n\t     var results = [];\n\t     if (unresolved === 0) {\n\t      resolveAll(results);\n\t      return deferred;\n\t     }\n\t     function reject(reason) {\n\t      if (deferred._status === STATUS_REJECTED) {\n\t       return;\n\t      }\n\t      results = [];\n\t      rejectAll(reason);\n\t     }\n\t     for (var i = 0, ii = promises.length; i < ii; ++i) {\n\t      var promise = promises[i];\n\t      var resolve = function (i) {\n\t       return function (value) {\n\t        if (deferred._status === STATUS_REJECTED) {\n\t         return;\n\t        }\n\t        results[i] = value;\n\t        unresolved--;\n\t        if (unresolved === 0) {\n\t         resolveAll(results);\n\t        }\n\t       };\n\t      }(i);\n\t      if (Promise.isPromise(promise)) {\n\t       promise.then(resolve, reject);\n\t      } else {\n\t       resolve(promise);\n\t      }\n\t     }\n\t     return deferred;\n\t    };\n\t    Promise.isPromise = function Promise_isPromise(value) {\n\t     return value && typeof value.then === 'function';\n\t    };\n\t    Promise.resolve = function Promise_resolve(value) {\n\t     return new Promise(function (resolve) {\n\t      resolve(value);\n\t     });\n\t    };\n\t    Promise.reject = function Promise_reject(reason) {\n\t     return new Promise(function (resolve, reject) {\n\t      reject(reason);\n\t     });\n\t    };\n\t    Promise.prototype = {\n\t     _status: null,\n\t     _value: null,\n\t     _handlers: null,\n\t     _unhandledRejection: null,\n\t     _updateStatus: function Promise__updateStatus(status, value) {\n\t      if (this._status === STATUS_RESOLVED || this._status === STATUS_REJECTED) {\n\t       return;\n\t      }\n\t      if (status === STATUS_RESOLVED && Promise.isPromise(value)) {\n\t       value.then(this._updateStatus.bind(this, STATUS_RESOLVED), this._updateStatus.bind(this, STATUS_REJECTED));\n\t       return;\n\t      }\n\t      this._status = status;\n\t      this._value = value;\n\t      if (status === STATUS_REJECTED && this._handlers.length === 0) {\n\t       this._unhandledRejection = true;\n\t       HandlerManager.addUnhandledRejection(this);\n\t      }\n\t      HandlerManager.scheduleHandlers(this);\n\t     },\n\t     _resolve: function Promise_resolve(value) {\n\t      this._updateStatus(STATUS_RESOLVED, value);\n\t     },\n\t     _reject: function Promise_reject(reason) {\n\t      this._updateStatus(STATUS_REJECTED, reason);\n\t     },\n\t     then: function Promise_then(onResolve, onReject) {\n\t      var nextPromise = new Promise(function (resolve, reject) {\n\t       this.resolve = resolve;\n\t       this.reject = reject;\n\t      });\n\t      this._handlers.push({\n\t       thisPromise: this,\n\t       onResolve: onResolve,\n\t       onReject: onReject,\n\t       nextPromise: nextPromise\n\t      });\n\t      HandlerManager.scheduleHandlers(this);\n\t      return nextPromise;\n\t     },\n\t     catch: function Promise_catch(onReject) {\n\t      return this.then(undefined, onReject);\n\t     }\n\t    };\n\t    globalScope.Promise = Promise;\n\t   }());\n\t   (function WeakMapClosure() {\n\t    if (globalScope.WeakMap) {\n\t     return;\n\t    }\n\t    var id = 0;\n\t    function WeakMap() {\n\t     this.id = '$weakmap' + id++;\n\t    }\n\t    WeakMap.prototype = {\n\t     has: function (obj) {\n\t      return !!Object.getOwnPropertyDescriptor(obj, this.id);\n\t     },\n\t     get: function (obj, defaultValue) {\n\t      return this.has(obj) ? obj[this.id] : defaultValue;\n\t     },\n\t     set: function (obj, value) {\n\t      Object.defineProperty(obj, this.id, {\n\t       value: value,\n\t       enumerable: false,\n\t       configurable: true\n\t      });\n\t     },\n\t     delete: function (obj) {\n\t      delete obj[this.id];\n\t     }\n\t    };\n\t    globalScope.WeakMap = WeakMap;\n\t   }());\n\t   var StatTimer = function StatTimerClosure() {\n\t    function rpad(str, pad, length) {\n\t     while (str.length < length) {\n\t      str += pad;\n\t     }\n\t     return str;\n\t    }\n\t    function StatTimer() {\n\t     this.started = Object.create(null);\n\t     this.times = [];\n\t     this.enabled = true;\n\t    }\n\t    StatTimer.prototype = {\n\t     time: function StatTimer_time(name) {\n\t      if (!this.enabled) {\n\t       return;\n\t      }\n\t      if (name in this.started) {\n\t       warn('Timer is already running for ' + name);\n\t      }\n\t      this.started[name] = Date.now();\n\t     },\n\t     timeEnd: function StatTimer_timeEnd(name) {\n\t      if (!this.enabled) {\n\t       return;\n\t      }\n\t      if (!(name in this.started)) {\n\t       warn('Timer has not been started for ' + name);\n\t      }\n\t      this.times.push({\n\t       'name': name,\n\t       'start': this.started[name],\n\t       'end': Date.now()\n\t      });\n\t      delete this.started[name];\n\t     },\n\t     toString: function StatTimer_toString() {\n\t      var i, ii;\n\t      var times = this.times;\n\t      var out = '';\n\t      var longest = 0;\n\t      for (i = 0, ii = times.length; i < ii; ++i) {\n\t       var name = times[i]['name'];\n\t       if (name.length > longest) {\n\t        longest = name.length;\n\t       }\n\t      }\n\t      for (i = 0, ii = times.length; i < ii; ++i) {\n\t       var span = times[i];\n\t       var duration = span.end - span.start;\n\t       out += rpad(span['name'], ' ', longest) + ' ' + duration + 'ms\\n';\n\t      }\n\t      return out;\n\t     }\n\t    };\n\t    return StatTimer;\n\t   }();\n\t   var createBlob = function createBlob(data, contentType) {\n\t    if (typeof Blob !== 'undefined') {\n\t     return new Blob([data], { type: contentType });\n\t    }\n\t    warn('The \"Blob\" constructor is not supported.');\n\t   };\n\t   var createObjectURL = function createObjectURLClosure() {\n\t    var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\t    return function createObjectURL(data, contentType, forceDataSchema) {\n\t     if (!forceDataSchema && typeof URL !== 'undefined' && URL.createObjectURL) {\n\t      var blob = createBlob(data, contentType);\n\t      return URL.createObjectURL(blob);\n\t     }\n\t     var buffer = 'data:' + contentType + ';base64,';\n\t     for (var i = 0, ii = data.length; i < ii; i += 3) {\n\t      var b1 = data[i] & 0xFF;\n\t      var b2 = data[i + 1] & 0xFF;\n\t      var b3 = data[i + 2] & 0xFF;\n\t      var d1 = b1 >> 2, d2 = (b1 & 3) << 4 | b2 >> 4;\n\t      var d3 = i + 1 < ii ? (b2 & 0xF) << 2 | b3 >> 6 : 64;\n\t      var d4 = i + 2 < ii ? b3 & 0x3F : 64;\n\t      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n\t     }\n\t     return buffer;\n\t    };\n\t   }();\n\t   function MessageHandler(sourceName, targetName, comObj) {\n\t    this.sourceName = sourceName;\n\t    this.targetName = targetName;\n\t    this.comObj = comObj;\n\t    this.callbackIndex = 1;\n\t    this.postMessageTransfers = true;\n\t    var callbacksCapabilities = this.callbacksCapabilities = Object.create(null);\n\t    var ah = this.actionHandler = Object.create(null);\n\t    this._onComObjOnMessage = function messageHandlerComObjOnMessage(event) {\n\t     var data = event.data;\n\t     if (data.targetName !== this.sourceName) {\n\t      return;\n\t     }\n\t     if (data.isReply) {\n\t      var callbackId = data.callbackId;\n\t      if (data.callbackId in callbacksCapabilities) {\n\t       var callback = callbacksCapabilities[callbackId];\n\t       delete callbacksCapabilities[callbackId];\n\t       if ('error' in data) {\n\t        callback.reject(data.error);\n\t       } else {\n\t        callback.resolve(data.data);\n\t       }\n\t      } else {\n\t       error('Cannot resolve callback ' + callbackId);\n\t      }\n\t     } else if (data.action in ah) {\n\t      var action = ah[data.action];\n\t      if (data.callbackId) {\n\t       var sourceName = this.sourceName;\n\t       var targetName = data.sourceName;\n\t       Promise.resolve().then(function () {\n\t        return action[0].call(action[1], data.data);\n\t       }).then(function (result) {\n\t        comObj.postMessage({\n\t         sourceName: sourceName,\n\t         targetName: targetName,\n\t         isReply: true,\n\t         callbackId: data.callbackId,\n\t         data: result\n\t        });\n\t       }, function (reason) {\n\t        if (reason instanceof Error) {\n\t         reason = reason + '';\n\t        }\n\t        comObj.postMessage({\n\t         sourceName: sourceName,\n\t         targetName: targetName,\n\t         isReply: true,\n\t         callbackId: data.callbackId,\n\t         error: reason\n\t        });\n\t       });\n\t      } else {\n\t       action[0].call(action[1], data.data);\n\t      }\n\t     } else {\n\t      error('Unknown action from worker: ' + data.action);\n\t     }\n\t    }.bind(this);\n\t    comObj.addEventListener('message', this._onComObjOnMessage);\n\t   }\n\t   MessageHandler.prototype = {\n\t    on: function messageHandlerOn(actionName, handler, scope) {\n\t     var ah = this.actionHandler;\n\t     if (ah[actionName]) {\n\t      error('There is already an actionName called \"' + actionName + '\"');\n\t     }\n\t     ah[actionName] = [\n\t      handler,\n\t      scope\n\t     ];\n\t    },\n\t    send: function messageHandlerSend(actionName, data, transfers) {\n\t     var message = {\n\t      sourceName: this.sourceName,\n\t      targetName: this.targetName,\n\t      action: actionName,\n\t      data: data\n\t     };\n\t     this.postMessage(message, transfers);\n\t    },\n\t    sendWithPromise: function messageHandlerSendWithPromise(actionName, data, transfers) {\n\t     var callbackId = this.callbackIndex++;\n\t     var message = {\n\t      sourceName: this.sourceName,\n\t      targetName: this.targetName,\n\t      action: actionName,\n\t      data: data,\n\t      callbackId: callbackId\n\t     };\n\t     var capability = createPromiseCapability();\n\t     this.callbacksCapabilities[callbackId] = capability;\n\t     try {\n\t      this.postMessage(message, transfers);\n\t     } catch (e) {\n\t      capability.reject(e);\n\t     }\n\t     return capability.promise;\n\t    },\n\t    postMessage: function (message, transfers) {\n\t     if (transfers && this.postMessageTransfers) {\n\t      this.comObj.postMessage(message, transfers);\n\t     } else {\n\t      this.comObj.postMessage(message);\n\t     }\n\t    },\n\t    destroy: function () {\n\t     this.comObj.removeEventListener('message', this._onComObjOnMessage);\n\t    }\n\t   };\n\t   function loadJpegStream(id, imageUrl, objs) {\n\t    var img = new Image();\n\t    img.onload = function loadJpegStream_onloadClosure() {\n\t     objs.resolve(id, img);\n\t    };\n\t    img.onerror = function loadJpegStream_onerrorClosure() {\n\t     objs.resolve(id, null);\n\t     warn('Error during JPEG image loading');\n\t    };\n\t    img.src = imageUrl;\n\t   }\n\t   /* Any copyright is dedicated to the Public Domain.\n\t    * http://creativecommons.org/publicdomain/zero/1.0/ */\n\t   (function checkURLConstructor(scope) {\n\t    var hasWorkingUrl = false;\n\t    try {\n\t     if (typeof URL === 'function' && typeof URL.prototype === 'object' && 'origin' in URL.prototype) {\n\t      var u = new URL('b', 'http://a');\n\t      u.pathname = 'c%20d';\n\t      hasWorkingUrl = u.href === 'http://a/c%20d';\n\t     }\n\t    } catch (e) {\n\t    }\n\t    if (hasWorkingUrl) {\n\t     return;\n\t    }\n\t    var relative = Object.create(null);\n\t    relative['ftp'] = 21;\n\t    relative['file'] = 0;\n\t    relative['gopher'] = 70;\n\t    relative['http'] = 80;\n\t    relative['https'] = 443;\n\t    relative['ws'] = 80;\n\t    relative['wss'] = 443;\n\t    var relativePathDotMapping = Object.create(null);\n\t    relativePathDotMapping['%2e'] = '.';\n\t    relativePathDotMapping['.%2e'] = '..';\n\t    relativePathDotMapping['%2e.'] = '..';\n\t    relativePathDotMapping['%2e%2e'] = '..';\n\t    function isRelativeScheme(scheme) {\n\t     return relative[scheme] !== undefined;\n\t    }\n\t    function invalid() {\n\t     clear.call(this);\n\t     this._isInvalid = true;\n\t    }\n\t    function IDNAToASCII(h) {\n\t     if (h === '') {\n\t      invalid.call(this);\n\t     }\n\t     return h.toLowerCase();\n\t    }\n\t    function percentEscape(c) {\n\t     var unicode = c.charCodeAt(0);\n\t     if (unicode > 0x20 && unicode < 0x7F && [\n\t       0x22,\n\t       0x23,\n\t       0x3C,\n\t       0x3E,\n\t       0x3F,\n\t       0x60\n\t      ].indexOf(unicode) === -1) {\n\t      return c;\n\t     }\n\t     return encodeURIComponent(c);\n\t    }\n\t    function percentEscapeQuery(c) {\n\t     var unicode = c.charCodeAt(0);\n\t     if (unicode > 0x20 && unicode < 0x7F && [\n\t       0x22,\n\t       0x23,\n\t       0x3C,\n\t       0x3E,\n\t       0x60\n\t      ].indexOf(unicode) === -1) {\n\t      return c;\n\t     }\n\t     return encodeURIComponent(c);\n\t    }\n\t    var EOF, ALPHA = /[a-zA-Z]/, ALPHANUMERIC = /[a-zA-Z0-9\\+\\-\\.]/;\n\t    function parse(input, stateOverride, base) {\n\t     function err(message) {\n\t      errors.push(message);\n\t     }\n\t     var state = stateOverride || 'scheme start', cursor = 0, buffer = '', seenAt = false, seenBracket = false, errors = [];\n\t     loop:\n\t      while ((input[cursor - 1] !== EOF || cursor === 0) && !this._isInvalid) {\n\t       var c = input[cursor];\n\t       switch (state) {\n\t       case 'scheme start':\n\t        if (c && ALPHA.test(c)) {\n\t         buffer += c.toLowerCase();\n\t         state = 'scheme';\n\t        } else if (!stateOverride) {\n\t         buffer = '';\n\t         state = 'no scheme';\n\t         continue;\n\t        } else {\n\t         err('Invalid scheme.');\n\t         break loop;\n\t        }\n\t        break;\n\t       case 'scheme':\n\t        if (c && ALPHANUMERIC.test(c)) {\n\t         buffer += c.toLowerCase();\n\t        } else if (c === ':') {\n\t         this._scheme = buffer;\n\t         buffer = '';\n\t         if (stateOverride) {\n\t          break loop;\n\t         }\n\t         if (isRelativeScheme(this._scheme)) {\n\t          this._isRelative = true;\n\t         }\n\t         if (this._scheme === 'file') {\n\t          state = 'relative';\n\t         } else if (this._isRelative && base && base._scheme === this._scheme) {\n\t          state = 'relative or authority';\n\t         } else if (this._isRelative) {\n\t          state = 'authority first slash';\n\t         } else {\n\t          state = 'scheme data';\n\t         }\n\t        } else if (!stateOverride) {\n\t         buffer = '';\n\t         cursor = 0;\n\t         state = 'no scheme';\n\t         continue;\n\t        } else if (EOF === c) {\n\t         break loop;\n\t        } else {\n\t         err('Code point not allowed in scheme: ' + c);\n\t         break loop;\n\t        }\n\t        break;\n\t       case 'scheme data':\n\t        if (c === '?') {\n\t         this._query = '?';\n\t         state = 'query';\n\t        } else if (c === '#') {\n\t         this._fragment = '#';\n\t         state = 'fragment';\n\t        } else {\n\t         if (EOF !== c && '\\t' !== c && '\\n' !== c && '\\r' !== c) {\n\t          this._schemeData += percentEscape(c);\n\t         }\n\t        }\n\t        break;\n\t       case 'no scheme':\n\t        if (!base || !isRelativeScheme(base._scheme)) {\n\t         err('Missing scheme.');\n\t         invalid.call(this);\n\t        } else {\n\t         state = 'relative';\n\t         continue;\n\t        }\n\t        break;\n\t       case 'relative or authority':\n\t        if (c === '/' && input[cursor + 1] === '/') {\n\t         state = 'authority ignore slashes';\n\t        } else {\n\t         err('Expected /, got: ' + c);\n\t         state = 'relative';\n\t         continue;\n\t        }\n\t        break;\n\t       case 'relative':\n\t        this._isRelative = true;\n\t        if ('file' !== this._scheme) {\n\t         this._scheme = base._scheme;\n\t        }\n\t        if (EOF === c) {\n\t         this._host = base._host;\n\t         this._port = base._port;\n\t         this._path = base._path.slice();\n\t         this._query = base._query;\n\t         this._username = base._username;\n\t         this._password = base._password;\n\t         break loop;\n\t        } else if (c === '/' || c === '\\\\') {\n\t         if (c === '\\\\') {\n\t          err('\\\\ is an invalid code point.');\n\t         }\n\t         state = 'relative slash';\n\t        } else if (c === '?') {\n\t         this._host = base._host;\n\t         this._port = base._port;\n\t         this._path = base._path.slice();\n\t         this._query = '?';\n\t         this._username = base._username;\n\t         this._password = base._password;\n\t         state = 'query';\n\t        } else if (c === '#') {\n\t         this._host = base._host;\n\t         this._port = base._port;\n\t         this._path = base._path.slice();\n\t         this._query = base._query;\n\t         this._fragment = '#';\n\t         this._username = base._username;\n\t         this._password = base._password;\n\t         state = 'fragment';\n\t        } else {\n\t         var nextC = input[cursor + 1];\n\t         var nextNextC = input[cursor + 2];\n\t         if ('file' !== this._scheme || !ALPHA.test(c) || nextC !== ':' && nextC !== '|' || EOF !== nextNextC && '/' !== nextNextC && '\\\\' !== nextNextC && '?' !== nextNextC && '#' !== nextNextC) {\n\t          this._host = base._host;\n\t          this._port = base._port;\n\t          this._username = base._username;\n\t          this._password = base._password;\n\t          this._path = base._path.slice();\n\t          this._path.pop();\n\t         }\n\t         state = 'relative path';\n\t         continue;\n\t        }\n\t        break;\n\t       case 'relative slash':\n\t        if (c === '/' || c === '\\\\') {\n\t         if (c === '\\\\') {\n\t          err('\\\\ is an invalid code point.');\n\t         }\n\t         if (this._scheme === 'file') {\n\t          state = 'file host';\n\t         } else {\n\t          state = 'authority ignore slashes';\n\t         }\n\t        } else {\n\t         if ('file' !== this._scheme) {\n\t          this._host = base._host;\n\t          this._port = base._port;\n\t          this._username = base._username;\n\t          this._password = base._password;\n\t         }\n\t         state = 'relative path';\n\t         continue;\n\t        }\n\t        break;\n\t       case 'authority first slash':\n\t        if (c === '/') {\n\t         state = 'authority second slash';\n\t        } else {\n\t         err('Expected \\'/\\', got: ' + c);\n\t         state = 'authority ignore slashes';\n\t         continue;\n\t        }\n\t        break;\n\t       case 'authority second slash':\n\t        state = 'authority ignore slashes';\n\t        if ('/' !== c) {\n\t         err('Expected \\'/\\', got: ' + c);\n\t         continue;\n\t        }\n\t        break;\n\t       case 'authority ignore slashes':\n\t        if ('/' !== c && '\\\\' !== c) {\n\t         state = 'authority';\n\t         continue;\n\t        } else {\n\t         err('Expected authority, got: ' + c);\n\t        }\n\t        break;\n\t       case 'authority':\n\t        if (c === '@') {\n\t         if (seenAt) {\n\t          err('@ already seen.');\n\t          buffer += '%40';\n\t         }\n\t         seenAt = true;\n\t         for (var i = 0; i < buffer.length; i++) {\n\t          var cp = buffer[i];\n\t          if (cp === '\\t' || cp === '\\n' || cp === '\\r') {\n\t           err('Invalid whitespace in authority.');\n\t           continue;\n\t          }\n\t          if (cp === ':' && this._password === null) {\n\t           this._password = '';\n\t           continue;\n\t          }\n\t          var tempC = percentEscape(cp);\n\t          if (null !== this._password) {\n\t           this._password += tempC;\n\t          } else {\n\t           this._username += tempC;\n\t          }\n\t         }\n\t         buffer = '';\n\t        } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n\t         cursor -= buffer.length;\n\t         buffer = '';\n\t         state = 'host';\n\t         continue;\n\t        } else {\n\t         buffer += c;\n\t        }\n\t        break;\n\t       case 'file host':\n\t        if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n\t         if (buffer.length === 2 && ALPHA.test(buffer[0]) && (buffer[1] === ':' || buffer[1] === '|')) {\n\t          state = 'relative path';\n\t         } else if (buffer.length === 0) {\n\t          state = 'relative path start';\n\t         } else {\n\t          this._host = IDNAToASCII.call(this, buffer);\n\t          buffer = '';\n\t          state = 'relative path start';\n\t         }\n\t         continue;\n\t        } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n\t         err('Invalid whitespace in file host.');\n\t        } else {\n\t         buffer += c;\n\t        }\n\t        break;\n\t       case 'host':\n\t       case 'hostname':\n\t        if (c === ':' && !seenBracket) {\n\t         this._host = IDNAToASCII.call(this, buffer);\n\t         buffer = '';\n\t         state = 'port';\n\t         if (stateOverride === 'hostname') {\n\t          break loop;\n\t         }\n\t        } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n\t         this._host = IDNAToASCII.call(this, buffer);\n\t         buffer = '';\n\t         state = 'relative path start';\n\t         if (stateOverride) {\n\t          break loop;\n\t         }\n\t         continue;\n\t        } else if ('\\t' !== c && '\\n' !== c && '\\r' !== c) {\n\t         if (c === '[') {\n\t          seenBracket = true;\n\t         } else if (c === ']') {\n\t          seenBracket = false;\n\t         }\n\t         buffer += c;\n\t        } else {\n\t         err('Invalid code point in host/hostname: ' + c);\n\t        }\n\t        break;\n\t       case 'port':\n\t        if (/[0-9]/.test(c)) {\n\t         buffer += c;\n\t        } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#' || stateOverride) {\n\t         if ('' !== buffer) {\n\t          var temp = parseInt(buffer, 10);\n\t          if (temp !== relative[this._scheme]) {\n\t           this._port = temp + '';\n\t          }\n\t          buffer = '';\n\t         }\n\t         if (stateOverride) {\n\t          break loop;\n\t         }\n\t         state = 'relative path start';\n\t         continue;\n\t        } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n\t         err('Invalid code point in port: ' + c);\n\t        } else {\n\t         invalid.call(this);\n\t        }\n\t        break;\n\t       case 'relative path start':\n\t        if (c === '\\\\') {\n\t         err('\\'\\\\\\' not allowed in path.');\n\t        }\n\t        state = 'relative path';\n\t        if ('/' !== c && '\\\\' !== c) {\n\t         continue;\n\t        }\n\t        break;\n\t       case 'relative path':\n\t        if (c === EOF || c === '/' || c === '\\\\' || !stateOverride && (c === '?' || c === '#')) {\n\t         if (c === '\\\\') {\n\t          err('\\\\ not allowed in relative path.');\n\t         }\n\t         var tmp;\n\t         if (tmp = relativePathDotMapping[buffer.toLowerCase()]) {\n\t          buffer = tmp;\n\t         }\n\t         if (buffer === '..') {\n\t          this._path.pop();\n\t          if ('/' !== c && '\\\\' !== c) {\n\t           this._path.push('');\n\t          }\n\t         } else if (buffer === '.' && '/' !== c && '\\\\' !== c) {\n\t          this._path.push('');\n\t         } else if ('.' !== buffer) {\n\t          if (this._scheme === 'file' && this._path.length === 0 && buffer.length === 2 && ALPHA.test(buffer[0]) && buffer[1] === '|') {\n\t           buffer = buffer[0] + ':';\n\t          }\n\t          this._path.push(buffer);\n\t         }\n\t         buffer = '';\n\t         if (c === '?') {\n\t          this._query = '?';\n\t          state = 'query';\n\t         } else if (c === '#') {\n\t          this._fragment = '#';\n\t          state = 'fragment';\n\t         }\n\t        } else if ('\\t' !== c && '\\n' !== c && '\\r' !== c) {\n\t         buffer += percentEscape(c);\n\t        }\n\t        break;\n\t       case 'query':\n\t        if (!stateOverride && c === '#') {\n\t         this._fragment = '#';\n\t         state = 'fragment';\n\t        } else if (EOF !== c && '\\t' !== c && '\\n' !== c && '\\r' !== c) {\n\t         this._query += percentEscapeQuery(c);\n\t        }\n\t        break;\n\t       case 'fragment':\n\t        if (EOF !== c && '\\t' !== c && '\\n' !== c && '\\r' !== c) {\n\t         this._fragment += c;\n\t        }\n\t        break;\n\t       }\n\t       cursor++;\n\t      }\n\t    }\n\t    function clear() {\n\t     this._scheme = '';\n\t     this._schemeData = '';\n\t     this._username = '';\n\t     this._password = null;\n\t     this._host = '';\n\t     this._port = '';\n\t     this._path = [];\n\t     this._query = '';\n\t     this._fragment = '';\n\t     this._isInvalid = false;\n\t     this._isRelative = false;\n\t    }\n\t    function JURL(url, base)\n\t     {\n\t      if (base !== undefined && !(base instanceof JURL)) {\n\t       base = new JURL(String(base));\n\t      }\n\t      this._url = url;\n\t      clear.call(this);\n\t      var input = url.replace(/^[ \\t\\r\\n\\f]+|[ \\t\\r\\n\\f]+$/g, '');\n\t      parse.call(this, input, null, base);\n\t     }\n\t    JURL.prototype = {\n\t     toString: function () {\n\t      return this.href;\n\t     },\n\t     get href() {\n\t      if (this._isInvalid) {\n\t       return this._url;\n\t      }\n\t      var authority = '';\n\t      if ('' !== this._username || null !== this._password) {\n\t       authority = this._username + (null !== this._password ? ':' + this._password : '') + '@';\n\t      }\n\t      return this.protocol + (this._isRelative ? '//' + authority + this.host : '') + this.pathname + this._query + this._fragment;\n\t     },\n\t     set href(href) {\n\t      clear.call(this);\n\t      parse.call(this, href);\n\t     },\n\t     get protocol() {\n\t      return this._scheme + ':';\n\t     },\n\t     set protocol(protocol) {\n\t      if (this._isInvalid) {\n\t       return;\n\t      }\n\t      parse.call(this, protocol + ':', 'scheme start');\n\t     },\n\t     get host() {\n\t      return this._isInvalid ? '' : this._port ? this._host + ':' + this._port : this._host;\n\t     },\n\t     set host(host) {\n\t      if (this._isInvalid || !this._isRelative) {\n\t       return;\n\t      }\n\t      parse.call(this, host, 'host');\n\t     },\n\t     get hostname() {\n\t      return this._host;\n\t     },\n\t     set hostname(hostname) {\n\t      if (this._isInvalid || !this._isRelative) {\n\t       return;\n\t      }\n\t      parse.call(this, hostname, 'hostname');\n\t     },\n\t     get port() {\n\t      return this._port;\n\t     },\n\t     set port(port) {\n\t      if (this._isInvalid || !this._isRelative) {\n\t       return;\n\t      }\n\t      parse.call(this, port, 'port');\n\t     },\n\t     get pathname() {\n\t      return this._isInvalid ? '' : this._isRelative ? '/' + this._path.join('/') : this._schemeData;\n\t     },\n\t     set pathname(pathname) {\n\t      if (this._isInvalid || !this._isRelative) {\n\t       return;\n\t      }\n\t      this._path = [];\n\t      parse.call(this, pathname, 'relative path start');\n\t     },\n\t     get search() {\n\t      return this._isInvalid || !this._query || this._query === '?' ? '' : this._query;\n\t     },\n\t     set search(search) {\n\t      if (this._isInvalid || !this._isRelative) {\n\t       return;\n\t      }\n\t      this._query = '?';\n\t      if (search[0] === '?') {\n\t       search = search.slice(1);\n\t      }\n\t      parse.call(this, search, 'query');\n\t     },\n\t     get hash() {\n\t      return this._isInvalid || !this._fragment || this._fragment === '#' ? '' : this._fragment;\n\t     },\n\t     set hash(hash) {\n\t      if (this._isInvalid) {\n\t       return;\n\t      }\n\t      this._fragment = '#';\n\t      if (hash[0] === '#') {\n\t       hash = hash.slice(1);\n\t      }\n\t      parse.call(this, hash, 'fragment');\n\t     },\n\t     get origin() {\n\t      var host;\n\t      if (this._isInvalid || !this._scheme) {\n\t       return '';\n\t      }\n\t      switch (this._scheme) {\n\t      case 'data':\n\t      case 'file':\n\t      case 'javascript':\n\t      case 'mailto':\n\t       return 'null';\n\t      }\n\t      host = this.host;\n\t      if (!host) {\n\t       return '';\n\t      }\n\t      return this._scheme + '://' + host;\n\t     }\n\t    };\n\t    var OriginalURL = scope.URL;\n\t    if (OriginalURL) {\n\t     JURL.createObjectURL = function (blob) {\n\t      return OriginalURL.createObjectURL.apply(OriginalURL, arguments);\n\t     };\n\t     JURL.revokeObjectURL = function (url) {\n\t      OriginalURL.revokeObjectURL(url);\n\t     };\n\t    }\n\t    scope.URL = JURL;\n\t   }(globalScope));\n\t   exports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\n\t   exports.IDENTITY_MATRIX = IDENTITY_MATRIX;\n\t   exports.OPS = OPS;\n\t   exports.VERBOSITY_LEVELS = VERBOSITY_LEVELS;\n\t   exports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\n\t   exports.AnnotationBorderStyleType = AnnotationBorderStyleType;\n\t   exports.AnnotationFieldFlag = AnnotationFieldFlag;\n\t   exports.AnnotationFlag = AnnotationFlag;\n\t   exports.AnnotationType = AnnotationType;\n\t   exports.FontType = FontType;\n\t   exports.ImageKind = ImageKind;\n\t   exports.InvalidPDFException = InvalidPDFException;\n\t   exports.MessageHandler = MessageHandler;\n\t   exports.MissingDataException = MissingDataException;\n\t   exports.MissingPDFException = MissingPDFException;\n\t   exports.NotImplementedException = NotImplementedException;\n\t   exports.PageViewport = PageViewport;\n\t   exports.PasswordException = PasswordException;\n\t   exports.PasswordResponses = PasswordResponses;\n\t   exports.StatTimer = StatTimer;\n\t   exports.StreamType = StreamType;\n\t   exports.TextRenderingMode = TextRenderingMode;\n\t   exports.UnexpectedResponseException = UnexpectedResponseException;\n\t   exports.UnknownErrorException = UnknownErrorException;\n\t   exports.Util = Util;\n\t   exports.XRefParseException = XRefParseException;\n\t   exports.arrayByteLength = arrayByteLength;\n\t   exports.arraysToBytes = arraysToBytes;\n\t   exports.assert = assert;\n\t   exports.bytesToString = bytesToString;\n\t   exports.createBlob = createBlob;\n\t   exports.createPromiseCapability = createPromiseCapability;\n\t   exports.createObjectURL = createObjectURL;\n\t   exports.deprecated = deprecated;\n\t   exports.error = error;\n\t   exports.getLookupTableFactory = getLookupTableFactory;\n\t   exports.getVerbosityLevel = getVerbosityLevel;\n\t   exports.globalScope = globalScope;\n\t   exports.info = info;\n\t   exports.isArray = isArray;\n\t   exports.isArrayBuffer = isArrayBuffer;\n\t   exports.isBool = isBool;\n\t   exports.isEmptyObj = isEmptyObj;\n\t   exports.isInt = isInt;\n\t   exports.isNum = isNum;\n\t   exports.isString = isString;\n\t   exports.isSpace = isSpace;\n\t   exports.isSameOrigin = isSameOrigin;\n\t   exports.createValidAbsoluteUrl = createValidAbsoluteUrl;\n\t   exports.isLittleEndian = isLittleEndian;\n\t   exports.isEvalSupported = isEvalSupported;\n\t   exports.loadJpegStream = loadJpegStream;\n\t   exports.log2 = log2;\n\t   exports.readInt8 = readInt8;\n\t   exports.readUint16 = readUint16;\n\t   exports.readUint32 = readUint32;\n\t   exports.removeNullCharacters = removeNullCharacters;\n\t   exports.setVerbosityLevel = setVerbosityLevel;\n\t   exports.shadow = shadow;\n\t   exports.string32 = string32;\n\t   exports.stringToBytes = stringToBytes;\n\t   exports.stringToPDFString = stringToPDFString;\n\t   exports.stringToUTF8String = stringToUTF8String;\n\t   exports.utf8StringToString = utf8StringToString;\n\t   exports.warn = warn;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCoreBidi = {}, root.pdfjsSharedUtil);\n\t  }(this, function (exports, sharedUtil) {\n\t   var warn = sharedUtil.warn;\n\t   var baseTypes = [\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'S',\n\t    'B',\n\t    'S',\n\t    'WS',\n\t    'B',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'B',\n\t    'B',\n\t    'B',\n\t    'S',\n\t    'WS',\n\t    'ON',\n\t    'ON',\n\t    'ET',\n\t    'ET',\n\t    'ET',\n\t    'ON',\n\t    'ON',\n\t    'ON',\n\t    'ON',\n\t    'ON',\n\t    'ES',\n\t    'CS',\n\t    'ES',\n\t    'CS',\n\t    'CS',\n\t    'EN',\n\t    'EN',\n\t    'EN',\n\t    'EN',\n\t    'EN',\n\t    'EN',\n\t    'EN',\n\t    'EN',\n\t    'EN',\n\t    'EN',\n\t    'CS',\n\t    'ON',\n\t    'ON',\n\t    'ON',\n\t    'ON',\n\t    'ON',\n\t    'ON',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'ON',\n\t    'ON',\n\t    'ON',\n\t    'ON',\n\t    'ON',\n\t    'ON',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'ON',\n\t    'ON',\n\t    'ON',\n\t    'ON',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'B',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'BN',\n\t    'CS',\n\t    'ON',\n\t    'ET',\n\t    'ET',\n\t    'ET',\n\t    'ET',\n\t    'ON',\n\t    'ON',\n\t    'ON',\n\t    'ON',\n\t    'L',\n\t    'ON',\n\t    'ON',\n\t    'BN',\n\t    'ON',\n\t    'ON',\n\t    'ET',\n\t    'ET',\n\t    'EN',\n\t    'EN',\n\t    'ON',\n\t    'L',\n\t    'ON',\n\t    'ON',\n\t    'ON',\n\t    'EN',\n\t    'L',\n\t    'ON',\n\t    'ON',\n\t    'ON',\n\t    'ON',\n\t    'ON',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'ON',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'ON',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L',\n\t    'L'\n\t   ];\n\t   var arabicTypes = [\n\t    'AN',\n\t    'AN',\n\t    'AN',\n\t    'AN',\n\t    'AN',\n\t    'AN',\n\t    'ON',\n\t    'ON',\n\t    'AL',\n\t    'ET',\n\t    'ET',\n\t    'AL',\n\t    'CS',\n\t    'AL',\n\t    'ON',\n\t    'ON',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'AL',\n\t    'AL',\n\t    '',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'AN',\n\t    'AN',\n\t    'AN',\n\t    'AN',\n\t    'AN',\n\t    'AN',\n\t    'AN',\n\t    'AN',\n\t    'AN',\n\t    'AN',\n\t    'ET',\n\t    'AN',\n\t    'AN',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'NSM',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'AN',\n\t    'ON',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'AL',\n\t    'AL',\n\t    'NSM',\n\t    'NSM',\n\t    'ON',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'NSM',\n\t    'AL',\n\t    'AL',\n\t    'EN',\n\t    'EN',\n\t    'EN',\n\t    'EN',\n\t    'EN',\n\t    'EN',\n\t    'EN',\n\t    'EN',\n\t    'EN',\n\t    'EN',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL',\n\t    'AL'\n\t   ];\n\t   function isOdd(i) {\n\t    return (i & 1) !== 0;\n\t   }\n\t   function isEven(i) {\n\t    return (i & 1) === 0;\n\t   }\n\t   function findUnequal(arr, start, value) {\n\t    for (var j = start, jj = arr.length; j < jj; ++j) {\n\t     if (arr[j] !== value) {\n\t      return j;\n\t     }\n\t    }\n\t    return j;\n\t   }\n\t   function setValues(arr, start, end, value) {\n\t    for (var j = start; j < end; ++j) {\n\t     arr[j] = value;\n\t    }\n\t   }\n\t   function reverseValues(arr, start, end) {\n\t    for (var i = start, j = end - 1; i < j; ++i, --j) {\n\t     var temp = arr[i];\n\t     arr[i] = arr[j];\n\t     arr[j] = temp;\n\t    }\n\t   }\n\t   function createBidiText(str, isLTR, vertical) {\n\t    return {\n\t     str: str,\n\t     dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\n\t    };\n\t   }\n\t   var chars = [];\n\t   var types = [];\n\t   function bidi(str, startLevel, vertical) {\n\t    var isLTR = true;\n\t    var strLength = str.length;\n\t    if (strLength === 0 || vertical) {\n\t     return createBidiText(str, isLTR, vertical);\n\t    }\n\t    chars.length = strLength;\n\t    types.length = strLength;\n\t    var numBidi = 0;\n\t    var i, ii;\n\t    for (i = 0; i < strLength; ++i) {\n\t     chars[i] = str.charAt(i);\n\t     var charCode = str.charCodeAt(i);\n\t     var charType = 'L';\n\t     if (charCode <= 0x00ff) {\n\t      charType = baseTypes[charCode];\n\t     } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n\t      charType = 'R';\n\t     } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n\t      charType = arabicTypes[charCode & 0xff];\n\t      if (!charType) {\n\t       warn('Bidi: invalid Unicode character ' + charCode.toString(16));\n\t      }\n\t     } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n\t      charType = 'AL';\n\t     }\n\t     if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n\t      numBidi++;\n\t     }\n\t     types[i] = charType;\n\t    }\n\t    if (numBidi === 0) {\n\t     isLTR = true;\n\t     return createBidiText(str, isLTR);\n\t    }\n\t    if (startLevel === -1) {\n\t     if (numBidi / strLength < 0.3) {\n\t      isLTR = true;\n\t      startLevel = 0;\n\t     } else {\n\t      isLTR = false;\n\t      startLevel = 1;\n\t     }\n\t    }\n\t    var levels = [];\n\t    for (i = 0; i < strLength; ++i) {\n\t     levels[i] = startLevel;\n\t    }\n\t    var e = isOdd(startLevel) ? 'R' : 'L';\n\t    var sor = e;\n\t    var eor = sor;\n\t    var lastType = sor;\n\t    for (i = 0; i < strLength; ++i) {\n\t     if (types[i] === 'NSM') {\n\t      types[i] = lastType;\n\t     } else {\n\t      lastType = types[i];\n\t     }\n\t    }\n\t    lastType = sor;\n\t    var t;\n\t    for (i = 0; i < strLength; ++i) {\n\t     t = types[i];\n\t     if (t === 'EN') {\n\t      types[i] = lastType === 'AL' ? 'AN' : 'EN';\n\t     } else if (t === 'R' || t === 'L' || t === 'AL') {\n\t      lastType = t;\n\t     }\n\t    }\n\t    for (i = 0; i < strLength; ++i) {\n\t     t = types[i];\n\t     if (t === 'AL') {\n\t      types[i] = 'R';\n\t     }\n\t    }\n\t    for (i = 1; i < strLength - 1; ++i) {\n\t     if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n\t      types[i] = 'EN';\n\t     }\n\t     if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\n\t      types[i] = types[i - 1];\n\t     }\n\t    }\n\t    for (i = 0; i < strLength; ++i) {\n\t     if (types[i] === 'EN') {\n\t      var j;\n\t      for (j = i - 1; j >= 0; --j) {\n\t       if (types[j] !== 'ET') {\n\t        break;\n\t       }\n\t       types[j] = 'EN';\n\t      }\n\t      for (j = i + 1; j < strLength; ++j) {\n\t       if (types[j] !== 'ET') {\n\t        break;\n\t       }\n\t       types[j] = 'EN';\n\t      }\n\t     }\n\t    }\n\t    for (i = 0; i < strLength; ++i) {\n\t     t = types[i];\n\t     if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n\t      types[i] = 'ON';\n\t     }\n\t    }\n\t    lastType = sor;\n\t    for (i = 0; i < strLength; ++i) {\n\t     t = types[i];\n\t     if (t === 'EN') {\n\t      types[i] = lastType === 'L' ? 'L' : 'EN';\n\t     } else if (t === 'R' || t === 'L') {\n\t      lastType = t;\n\t     }\n\t    }\n\t    for (i = 0; i < strLength; ++i) {\n\t     if (types[i] === 'ON') {\n\t      var end = findUnequal(types, i + 1, 'ON');\n\t      var before = sor;\n\t      if (i > 0) {\n\t       before = types[i - 1];\n\t      }\n\t      var after = eor;\n\t      if (end + 1 < strLength) {\n\t       after = types[end + 1];\n\t      }\n\t      if (before !== 'L') {\n\t       before = 'R';\n\t      }\n\t      if (after !== 'L') {\n\t       after = 'R';\n\t      }\n\t      if (before === after) {\n\t       setValues(types, i, end, before);\n\t      }\n\t      i = end - 1;\n\t     }\n\t    }\n\t    for (i = 0; i < strLength; ++i) {\n\t     if (types[i] === 'ON') {\n\t      types[i] = e;\n\t     }\n\t    }\n\t    for (i = 0; i < strLength; ++i) {\n\t     t = types[i];\n\t     if (isEven(levels[i])) {\n\t      if (t === 'R') {\n\t       levels[i] += 1;\n\t      } else if (t === 'AN' || t === 'EN') {\n\t       levels[i] += 2;\n\t      }\n\t     } else {\n\t      if (t === 'L' || t === 'AN' || t === 'EN') {\n\t       levels[i] += 1;\n\t      }\n\t     }\n\t    }\n\t    var highestLevel = -1;\n\t    var lowestOddLevel = 99;\n\t    var level;\n\t    for (i = 0, ii = levels.length; i < ii; ++i) {\n\t     level = levels[i];\n\t     if (highestLevel < level) {\n\t      highestLevel = level;\n\t     }\n\t     if (lowestOddLevel > level && isOdd(level)) {\n\t      lowestOddLevel = level;\n\t     }\n\t    }\n\t    for (level = highestLevel; level >= lowestOddLevel; --level) {\n\t     var start = -1;\n\t     for (i = 0, ii = levels.length; i < ii; ++i) {\n\t      if (levels[i] < level) {\n\t       if (start >= 0) {\n\t        reverseValues(chars, start, i);\n\t        start = -1;\n\t       }\n\t      } else if (start < 0) {\n\t       start = i;\n\t      }\n\t     }\n\t     if (start >= 0) {\n\t      reverseValues(chars, start, levels.length);\n\t     }\n\t    }\n\t    for (i = 0, ii = chars.length; i < ii; ++i) {\n\t     var ch = chars[i];\n\t     if (ch === '<' || ch === '>') {\n\t      chars[i] = '';\n\t     }\n\t    }\n\t    return createBidiText(chars.join(''), isLTR);\n\t   }\n\t   exports.bidi = bidi;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCoreCFFParser = {}, root.pdfjsSharedUtil, root.pdfjsCoreCharsets, root.pdfjsCoreEncodings);\n\t  }(this, function (exports, sharedUtil, coreCharsets, coreEncodings) {\n\t   var error = sharedUtil.error;\n\t   var info = sharedUtil.info;\n\t   var bytesToString = sharedUtil.bytesToString;\n\t   var warn = sharedUtil.warn;\n\t   var isArray = sharedUtil.isArray;\n\t   var Util = sharedUtil.Util;\n\t   var stringToBytes = sharedUtil.stringToBytes;\n\t   var assert = sharedUtil.assert;\n\t   var ISOAdobeCharset = coreCharsets.ISOAdobeCharset;\n\t   var ExpertCharset = coreCharsets.ExpertCharset;\n\t   var ExpertSubsetCharset = coreCharsets.ExpertSubsetCharset;\n\t   var StandardEncoding = coreEncodings.StandardEncoding;\n\t   var ExpertEncoding = coreEncodings.ExpertEncoding;\n\t   var MAX_SUBR_NESTING = 10;\n\t   var CFFStandardStrings = [\n\t    '.notdef',\n\t    'space',\n\t    'exclam',\n\t    'quotedbl',\n\t    'numbersign',\n\t    'dollar',\n\t    'percent',\n\t    'ampersand',\n\t    'quoteright',\n\t    'parenleft',\n\t    'parenright',\n\t    'asterisk',\n\t    'plus',\n\t    'comma',\n\t    'hyphen',\n\t    'period',\n\t    'slash',\n\t    'zero',\n\t    'one',\n\t    'two',\n\t    'three',\n\t    'four',\n\t    'five',\n\t    'six',\n\t    'seven',\n\t    'eight',\n\t    'nine',\n\t    'colon',\n\t    'semicolon',\n\t    'less',\n\t    'equal',\n\t    'greater',\n\t    'question',\n\t    'at',\n\t    'A',\n\t    'B',\n\t    'C',\n\t    'D',\n\t    'E',\n\t    'F',\n\t    'G',\n\t    'H',\n\t    'I',\n\t    'J',\n\t    'K',\n\t    'L',\n\t    'M',\n\t    'N',\n\t    'O',\n\t    'P',\n\t    'Q',\n\t    'R',\n\t    'S',\n\t    'T',\n\t    'U',\n\t    'V',\n\t    'W',\n\t    'X',\n\t    'Y',\n\t    'Z',\n\t    'bracketleft',\n\t    'backslash',\n\t    'bracketright',\n\t    'asciicircum',\n\t    'underscore',\n\t    'quoteleft',\n\t    'a',\n\t    'b',\n\t    'c',\n\t    'd',\n\t    'e',\n\t    'f',\n\t    'g',\n\t    'h',\n\t    'i',\n\t    'j',\n\t    'k',\n\t    'l',\n\t    'm',\n\t    'n',\n\t    'o',\n\t    'p',\n\t    'q',\n\t    'r',\n\t    's',\n\t    't',\n\t    'u',\n\t    'v',\n\t    'w',\n\t    'x',\n\t    'y',\n\t    'z',\n\t    'braceleft',\n\t    'bar',\n\t    'braceright',\n\t    'asciitilde',\n\t    'exclamdown',\n\t    'cent',\n\t    'sterling',\n\t    'fraction',\n\t    'yen',\n\t    'florin',\n\t    'section',\n\t    'currency',\n\t    'quotesingle',\n\t    'quotedblleft',\n\t    'guillemotleft',\n\t    'guilsinglleft',\n\t    'guilsinglright',\n\t    'fi',\n\t    'fl',\n\t    'endash',\n\t    'dagger',\n\t    'daggerdbl',\n\t    'periodcentered',\n\t    'paragraph',\n\t    'bullet',\n\t    'quotesinglbase',\n\t    'quotedblbase',\n\t    'quotedblright',\n\t    'guillemotright',\n\t    'ellipsis',\n\t    'perthousand',\n\t    'questiondown',\n\t    'grave',\n\t    'acute',\n\t    'circumflex',\n\t    'tilde',\n\t    'macron',\n\t    'breve',\n\t    'dotaccent',\n\t    'dieresis',\n\t    'ring',\n\t    'cedilla',\n\t    'hungarumlaut',\n\t    'ogonek',\n\t    'caron',\n\t    'emdash',\n\t    'AE',\n\t    'ordfeminine',\n\t    'Lslash',\n\t    'Oslash',\n\t    'OE',\n\t    'ordmasculine',\n\t    'ae',\n\t    'dotlessi',\n\t    'lslash',\n\t    'oslash',\n\t    'oe',\n\t    'germandbls',\n\t    'onesuperior',\n\t    'logicalnot',\n\t    'mu',\n\t    'trademark',\n\t    'Eth',\n\t    'onehalf',\n\t    'plusminus',\n\t    'Thorn',\n\t    'onequarter',\n\t    'divide',\n\t    'brokenbar',\n\t    'degree',\n\t    'thorn',\n\t    'threequarters',\n\t    'twosuperior',\n\t    'registered',\n\t    'minus',\n\t    'eth',\n\t    'multiply',\n\t    'threesuperior',\n\t    'copyright',\n\t    'Aacute',\n\t    'Acircumflex',\n\t    'Adieresis',\n\t    'Agrave',\n\t    'Aring',\n\t    'Atilde',\n\t    'Ccedilla',\n\t    'Eacute',\n\t    'Ecircumflex',\n\t    'Edieresis',\n\t    'Egrave',\n\t    'Iacute',\n\t    'Icircumflex',\n\t    'Idieresis',\n\t    'Igrave',\n\t    'Ntilde',\n\t    'Oacute',\n\t    'Ocircumflex',\n\t    'Odieresis',\n\t    'Ograve',\n\t    'Otilde',\n\t    'Scaron',\n\t    'Uacute',\n\t    'Ucircumflex',\n\t    'Udieresis',\n\t    'Ugrave',\n\t    'Yacute',\n\t    'Ydieresis',\n\t    'Zcaron',\n\t    'aacute',\n\t    'acircumflex',\n\t    'adieresis',\n\t    'agrave',\n\t    'aring',\n\t    'atilde',\n\t    'ccedilla',\n\t    'eacute',\n\t    'ecircumflex',\n\t    'edieresis',\n\t    'egrave',\n\t    'iacute',\n\t    'icircumflex',\n\t    'idieresis',\n\t    'igrave',\n\t    'ntilde',\n\t    'oacute',\n\t    'ocircumflex',\n\t    'odieresis',\n\t    'ograve',\n\t    'otilde',\n\t    'scaron',\n\t    'uacute',\n\t    'ucircumflex',\n\t    'udieresis',\n\t    'ugrave',\n\t    'yacute',\n\t    'ydieresis',\n\t    'zcaron',\n\t    'exclamsmall',\n\t    'Hungarumlautsmall',\n\t    'dollaroldstyle',\n\t    'dollarsuperior',\n\t    'ampersandsmall',\n\t    'Acutesmall',\n\t    'parenleftsuperior',\n\t    'parenrightsuperior',\n\t    'twodotenleader',\n\t    'onedotenleader',\n\t    'zerooldstyle',\n\t    'oneoldstyle',\n\t    'twooldstyle',\n\t    'threeoldstyle',\n\t    'fouroldstyle',\n\t    'fiveoldstyle',\n\t    'sixoldstyle',\n\t    'sevenoldstyle',\n\t    'eightoldstyle',\n\t    'nineoldstyle',\n\t    'commasuperior',\n\t    'threequartersemdash',\n\t    'periodsuperior',\n\t    'questionsmall',\n\t    'asuperior',\n\t    'bsuperior',\n\t    'centsuperior',\n\t    'dsuperior',\n\t    'esuperior',\n\t    'isuperior',\n\t    'lsuperior',\n\t    'msuperior',\n\t    'nsuperior',\n\t    'osuperior',\n\t    'rsuperior',\n\t    'ssuperior',\n\t    'tsuperior',\n\t    'ff',\n\t    'ffi',\n\t    'ffl',\n\t    'parenleftinferior',\n\t    'parenrightinferior',\n\t    'Circumflexsmall',\n\t    'hyphensuperior',\n\t    'Gravesmall',\n\t    'Asmall',\n\t    'Bsmall',\n\t    'Csmall',\n\t    'Dsmall',\n\t    'Esmall',\n\t    'Fsmall',\n\t    'Gsmall',\n\t    'Hsmall',\n\t    'Ismall',\n\t    'Jsmall',\n\t    'Ksmall',\n\t    'Lsmall',\n\t    'Msmall',\n\t    'Nsmall',\n\t    'Osmall',\n\t    'Psmall',\n\t    'Qsmall',\n\t    'Rsmall',\n\t    'Ssmall',\n\t    'Tsmall',\n\t    'Usmall',\n\t    'Vsmall',\n\t    'Wsmall',\n\t    'Xsmall',\n\t    'Ysmall',\n\t    'Zsmall',\n\t    'colonmonetary',\n\t    'onefitted',\n\t    'rupiah',\n\t    'Tildesmall',\n\t    'exclamdownsmall',\n\t    'centoldstyle',\n\t    'Lslashsmall',\n\t    'Scaronsmall',\n\t    'Zcaronsmall',\n\t    'Dieresissmall',\n\t    'Brevesmall',\n\t    'Caronsmall',\n\t    'Dotaccentsmall',\n\t    'Macronsmall',\n\t    'figuredash',\n\t    'hypheninferior',\n\t    'Ogoneksmall',\n\t    'Ringsmall',\n\t    'Cedillasmall',\n\t    'questiondownsmall',\n\t    'oneeighth',\n\t    'threeeighths',\n\t    'fiveeighths',\n\t    'seveneighths',\n\t    'onethird',\n\t    'twothirds',\n\t    'zerosuperior',\n\t    'foursuperior',\n\t    'fivesuperior',\n\t    'sixsuperior',\n\t    'sevensuperior',\n\t    'eightsuperior',\n\t    'ninesuperior',\n\t    'zeroinferior',\n\t    'oneinferior',\n\t    'twoinferior',\n\t    'threeinferior',\n\t    'fourinferior',\n\t    'fiveinferior',\n\t    'sixinferior',\n\t    'seveninferior',\n\t    'eightinferior',\n\t    'nineinferior',\n\t    'centinferior',\n\t    'dollarinferior',\n\t    'periodinferior',\n\t    'commainferior',\n\t    'Agravesmall',\n\t    'Aacutesmall',\n\t    'Acircumflexsmall',\n\t    'Atildesmall',\n\t    'Adieresissmall',\n\t    'Aringsmall',\n\t    'AEsmall',\n\t    'Ccedillasmall',\n\t    'Egravesmall',\n\t    'Eacutesmall',\n\t    'Ecircumflexsmall',\n\t    'Edieresissmall',\n\t    'Igravesmall',\n\t    'Iacutesmall',\n\t    'Icircumflexsmall',\n\t    'Idieresissmall',\n\t    'Ethsmall',\n\t    'Ntildesmall',\n\t    'Ogravesmall',\n\t    'Oacutesmall',\n\t    'Ocircumflexsmall',\n\t    'Otildesmall',\n\t    'Odieresissmall',\n\t    'OEsmall',\n\t    'Oslashsmall',\n\t    'Ugravesmall',\n\t    'Uacutesmall',\n\t    'Ucircumflexsmall',\n\t    'Udieresissmall',\n\t    'Yacutesmall',\n\t    'Thornsmall',\n\t    'Ydieresissmall',\n\t    '001.000',\n\t    '001.001',\n\t    '001.002',\n\t    '001.003',\n\t    'Black',\n\t    'Bold',\n\t    'Book',\n\t    'Light',\n\t    'Medium',\n\t    'Regular',\n\t    'Roman',\n\t    'Semibold'\n\t   ];\n\t   var CFFParser = function CFFParserClosure() {\n\t    var CharstringValidationData = [\n\t     null,\n\t     {\n\t      id: 'hstem',\n\t      min: 2,\n\t      stackClearing: true,\n\t      stem: true\n\t     },\n\t     null,\n\t     {\n\t      id: 'vstem',\n\t      min: 2,\n\t      stackClearing: true,\n\t      stem: true\n\t     },\n\t     {\n\t      id: 'vmoveto',\n\t      min: 1,\n\t      stackClearing: true\n\t     },\n\t     {\n\t      id: 'rlineto',\n\t      min: 2,\n\t      resetStack: true\n\t     },\n\t     {\n\t      id: 'hlineto',\n\t      min: 1,\n\t      resetStack: true\n\t     },\n\t     {\n\t      id: 'vlineto',\n\t      min: 1,\n\t      resetStack: true\n\t     },\n\t     {\n\t      id: 'rrcurveto',\n\t      min: 6,\n\t      resetStack: true\n\t     },\n\t     null,\n\t     {\n\t      id: 'callsubr',\n\t      min: 1,\n\t      undefStack: true\n\t     },\n\t     {\n\t      id: 'return',\n\t      min: 0,\n\t      undefStack: true\n\t     },\n\t     null,\n\t     null,\n\t     {\n\t      id: 'endchar',\n\t      min: 0,\n\t      stackClearing: true\n\t     },\n\t     null,\n\t     null,\n\t     null,\n\t     {\n\t      id: 'hstemhm',\n\t      min: 2,\n\t      stackClearing: true,\n\t      stem: true\n\t     },\n\t     {\n\t      id: 'hintmask',\n\t      min: 0,\n\t      stackClearing: true\n\t     },\n\t     {\n\t      id: 'cntrmask',\n\t      min: 0,\n\t      stackClearing: true\n\t     },\n\t     {\n\t      id: 'rmoveto',\n\t      min: 2,\n\t      stackClearing: true\n\t     },\n\t     {\n\t      id: 'hmoveto',\n\t      min: 1,\n\t      stackClearing: true\n\t     },\n\t     {\n\t      id: 'vstemhm',\n\t      min: 2,\n\t      stackClearing: true,\n\t      stem: true\n\t     },\n\t     {\n\t      id: 'rcurveline',\n\t      min: 8,\n\t      resetStack: true\n\t     },\n\t     {\n\t      id: 'rlinecurve',\n\t      min: 8,\n\t      resetStack: true\n\t     },\n\t     {\n\t      id: 'vvcurveto',\n\t      min: 4,\n\t      resetStack: true\n\t     },\n\t     {\n\t      id: 'hhcurveto',\n\t      min: 4,\n\t      resetStack: true\n\t     },\n\t     null,\n\t     {\n\t      id: 'callgsubr',\n\t      min: 1,\n\t      undefStack: true\n\t     },\n\t     {\n\t      id: 'vhcurveto',\n\t      min: 4,\n\t      resetStack: true\n\t     },\n\t     {\n\t      id: 'hvcurveto',\n\t      min: 4,\n\t      resetStack: true\n\t     }\n\t    ];\n\t    var CharstringValidationData12 = [\n\t     null,\n\t     null,\n\t     null,\n\t     {\n\t      id: 'and',\n\t      min: 2,\n\t      stackDelta: -1\n\t     },\n\t     {\n\t      id: 'or',\n\t      min: 2,\n\t      stackDelta: -1\n\t     },\n\t     {\n\t      id: 'not',\n\t      min: 1,\n\t      stackDelta: 0\n\t     },\n\t     null,\n\t     null,\n\t     null,\n\t     {\n\t      id: 'abs',\n\t      min: 1,\n\t      stackDelta: 0\n\t     },\n\t     {\n\t      id: 'add',\n\t      min: 2,\n\t      stackDelta: -1,\n\t      stackFn: function stack_div(stack, index) {\n\t       stack[index - 2] = stack[index - 2] + stack[index - 1];\n\t      }\n\t     },\n\t     {\n\t      id: 'sub',\n\t      min: 2,\n\t      stackDelta: -1,\n\t      stackFn: function stack_div(stack, index) {\n\t       stack[index - 2] = stack[index - 2] - stack[index - 1];\n\t      }\n\t     },\n\t     {\n\t      id: 'div',\n\t      min: 2,\n\t      stackDelta: -1,\n\t      stackFn: function stack_div(stack, index) {\n\t       stack[index - 2] = stack[index - 2] / stack[index - 1];\n\t      }\n\t     },\n\t     null,\n\t     {\n\t      id: 'neg',\n\t      min: 1,\n\t      stackDelta: 0,\n\t      stackFn: function stack_div(stack, index) {\n\t       stack[index - 1] = -stack[index - 1];\n\t      }\n\t     },\n\t     {\n\t      id: 'eq',\n\t      min: 2,\n\t      stackDelta: -1\n\t     },\n\t     null,\n\t     null,\n\t     {\n\t      id: 'drop',\n\t      min: 1,\n\t      stackDelta: -1\n\t     },\n\t     null,\n\t     {\n\t      id: 'put',\n\t      min: 2,\n\t      stackDelta: -2\n\t     },\n\t     {\n\t      id: 'get',\n\t      min: 1,\n\t      stackDelta: 0\n\t     },\n\t     {\n\t      id: 'ifelse',\n\t      min: 4,\n\t      stackDelta: -3\n\t     },\n\t     {\n\t      id: 'random',\n\t      min: 0,\n\t      stackDelta: 1\n\t     },\n\t     {\n\t      id: 'mul',\n\t      min: 2,\n\t      stackDelta: -1,\n\t      stackFn: function stack_div(stack, index) {\n\t       stack[index - 2] = stack[index - 2] * stack[index - 1];\n\t      }\n\t     },\n\t     null,\n\t     {\n\t      id: 'sqrt',\n\t      min: 1,\n\t      stackDelta: 0\n\t     },\n\t     {\n\t      id: 'dup',\n\t      min: 1,\n\t      stackDelta: 1\n\t     },\n\t     {\n\t      id: 'exch',\n\t      min: 2,\n\t      stackDelta: 0\n\t     },\n\t     {\n\t      id: 'index',\n\t      min: 2,\n\t      stackDelta: 0\n\t     },\n\t     {\n\t      id: 'roll',\n\t      min: 3,\n\t      stackDelta: -2\n\t     },\n\t     null,\n\t     null,\n\t     null,\n\t     {\n\t      id: 'hflex',\n\t      min: 7,\n\t      resetStack: true\n\t     },\n\t     {\n\t      id: 'flex',\n\t      min: 13,\n\t      resetStack: true\n\t     },\n\t     {\n\t      id: 'hflex1',\n\t      min: 9,\n\t      resetStack: true\n\t     },\n\t     {\n\t      id: 'flex1',\n\t      min: 11,\n\t      resetStack: true\n\t     }\n\t    ];\n\t    function CFFParser(file, properties, seacAnalysisEnabled) {\n\t     this.bytes = file.getBytes();\n\t     this.properties = properties;\n\t     this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n\t    }\n\t    CFFParser.prototype = {\n\t     parse: function CFFParser_parse() {\n\t      var properties = this.properties;\n\t      var cff = new CFF();\n\t      this.cff = cff;\n\t      var header = this.parseHeader();\n\t      var nameIndex = this.parseIndex(header.endPos);\n\t      var topDictIndex = this.parseIndex(nameIndex.endPos);\n\t      var stringIndex = this.parseIndex(topDictIndex.endPos);\n\t      var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n\t      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n\t      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n\t      cff.header = header.obj;\n\t      cff.names = this.parseNameIndex(nameIndex.obj);\n\t      cff.strings = this.parseStringIndex(stringIndex.obj);\n\t      cff.topDict = topDict;\n\t      cff.globalSubrIndex = globalSubrIndex.obj;\n\t      this.parsePrivateDict(cff.topDict);\n\t      cff.isCIDFont = topDict.hasName('ROS');\n\t      var charStringOffset = topDict.getByName('CharStrings');\n\t      var charStringIndex = this.parseIndex(charStringOffset).obj;\n\t      var fontMatrix = topDict.getByName('FontMatrix');\n\t      if (fontMatrix) {\n\t       properties.fontMatrix = fontMatrix;\n\t      }\n\t      var fontBBox = topDict.getByName('FontBBox');\n\t      if (fontBBox) {\n\t       properties.ascent = fontBBox[3];\n\t       properties.descent = fontBBox[1];\n\t       properties.ascentScaled = true;\n\t      }\n\t      var charset, encoding;\n\t      if (cff.isCIDFont) {\n\t       var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n\t       for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n\t        var dictRaw = fdArrayIndex.get(i);\n\t        var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n\t        this.parsePrivateDict(fontDict);\n\t        cff.fdArray.push(fontDict);\n\t       }\n\t       encoding = null;\n\t       charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\n\t       cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\n\t      } else {\n\t       charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\n\t       encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\n\t      }\n\t      cff.charset = charset;\n\t      cff.encoding = encoding;\n\t      var charStringsAndSeacs = this.parseCharStrings(charStringIndex, topDict.privateDict.subrsIndex, globalSubrIndex.obj, cff.fdSelect, cff.fdArray);\n\t      cff.charStrings = charStringsAndSeacs.charStrings;\n\t      cff.seacs = charStringsAndSeacs.seacs;\n\t      cff.widths = charStringsAndSeacs.widths;\n\t      return cff;\n\t     },\n\t     parseHeader: function CFFParser_parseHeader() {\n\t      var bytes = this.bytes;\n\t      var bytesLength = bytes.length;\n\t      var offset = 0;\n\t      while (offset < bytesLength && bytes[offset] !== 1) {\n\t       ++offset;\n\t      }\n\t      if (offset >= bytesLength) {\n\t       error('Invalid CFF header');\n\t      } else if (offset !== 0) {\n\t       info('cff data is shifted');\n\t       bytes = bytes.subarray(offset);\n\t       this.bytes = bytes;\n\t      }\n\t      var major = bytes[0];\n\t      var minor = bytes[1];\n\t      var hdrSize = bytes[2];\n\t      var offSize = bytes[3];\n\t      var header = new CFFHeader(major, minor, hdrSize, offSize);\n\t      return {\n\t       obj: header,\n\t       endPos: hdrSize\n\t      };\n\t     },\n\t     parseDict: function CFFParser_parseDict(dict) {\n\t      var pos = 0;\n\t      function parseOperand() {\n\t       var value = dict[pos++];\n\t       if (value === 30) {\n\t        return parseFloatOperand();\n\t       } else if (value === 28) {\n\t        value = dict[pos++];\n\t        value = (value << 24 | dict[pos++] << 16) >> 16;\n\t        return value;\n\t       } else if (value === 29) {\n\t        value = dict[pos++];\n\t        value = value << 8 | dict[pos++];\n\t        value = value << 8 | dict[pos++];\n\t        value = value << 8 | dict[pos++];\n\t        return value;\n\t       } else if (value >= 32 && value <= 246) {\n\t        return value - 139;\n\t       } else if (value >= 247 && value <= 250) {\n\t        return (value - 247) * 256 + dict[pos++] + 108;\n\t       } else if (value >= 251 && value <= 254) {\n\t        return -((value - 251) * 256) - dict[pos++] - 108;\n\t       }\n\t       warn('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n\t       return NaN;\n\t      }\n\t      function parseFloatOperand() {\n\t       var str = '';\n\t       var eof = 15;\n\t       var lookup = [\n\t        '0',\n\t        '1',\n\t        '2',\n\t        '3',\n\t        '4',\n\t        '5',\n\t        '6',\n\t        '7',\n\t        '8',\n\t        '9',\n\t        '.',\n\t        'E',\n\t        'E-',\n\t        null,\n\t        '-'\n\t       ];\n\t       var length = dict.length;\n\t       while (pos < length) {\n\t        var b = dict[pos++];\n\t        var b1 = b >> 4;\n\t        var b2 = b & 15;\n\t        if (b1 === eof) {\n\t         break;\n\t        }\n\t        str += lookup[b1];\n\t        if (b2 === eof) {\n\t         break;\n\t        }\n\t        str += lookup[b2];\n\t       }\n\t       return parseFloat(str);\n\t      }\n\t      var operands = [];\n\t      var entries = [];\n\t      pos = 0;\n\t      var end = dict.length;\n\t      while (pos < end) {\n\t       var b = dict[pos];\n\t       if (b <= 21) {\n\t        if (b === 12) {\n\t         b = b << 8 | dict[++pos];\n\t        }\n\t        entries.push([\n\t         b,\n\t         operands\n\t        ]);\n\t        operands = [];\n\t        ++pos;\n\t       } else {\n\t        operands.push(parseOperand());\n\t       }\n\t      }\n\t      return entries;\n\t     },\n\t     parseIndex: function CFFParser_parseIndex(pos) {\n\t      var cffIndex = new CFFIndex();\n\t      var bytes = this.bytes;\n\t      var count = bytes[pos++] << 8 | bytes[pos++];\n\t      var offsets = [];\n\t      var end = pos;\n\t      var i, ii;\n\t      if (count !== 0) {\n\t       var offsetSize = bytes[pos++];\n\t       var startPos = pos + (count + 1) * offsetSize - 1;\n\t       for (i = 0, ii = count + 1; i < ii; ++i) {\n\t        var offset = 0;\n\t        for (var j = 0; j < offsetSize; ++j) {\n\t         offset <<= 8;\n\t         offset += bytes[pos++];\n\t        }\n\t        offsets.push(startPos + offset);\n\t       }\n\t       end = offsets[count];\n\t      }\n\t      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n\t       var offsetStart = offsets[i];\n\t       var offsetEnd = offsets[i + 1];\n\t       cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n\t      }\n\t      return {\n\t       obj: cffIndex,\n\t       endPos: end\n\t      };\n\t     },\n\t     parseNameIndex: function CFFParser_parseNameIndex(index) {\n\t      var names = [];\n\t      for (var i = 0, ii = index.count; i < ii; ++i) {\n\t       var name = index.get(i);\n\t       var length = Math.min(name.length, 127);\n\t       var data = [];\n\t       for (var j = 0; j < length; ++j) {\n\t        var c = name[j];\n\t        if (j === 0 && c === 0) {\n\t         data[j] = c;\n\t         continue;\n\t        }\n\t        if (c < 33 || c > 126 || c === 91 || c === 93 || c === 40 || c === 41 || c === 123 || c === 125 || c === 60 || c === 62 || c === 47 || c === 37 || c === 35)\n\t         {\n\t          data[j] = 95;\n\t          continue;\n\t         }\n\t        data[j] = c;\n\t       }\n\t       names.push(bytesToString(data));\n\t      }\n\t      return names;\n\t     },\n\t     parseStringIndex: function CFFParser_parseStringIndex(index) {\n\t      var strings = new CFFStrings();\n\t      for (var i = 0, ii = index.count; i < ii; ++i) {\n\t       var data = index.get(i);\n\t       strings.add(bytesToString(data));\n\t      }\n\t      return strings;\n\t     },\n\t     createDict: function CFFParser_createDict(Type, dict, strings) {\n\t      var cffDict = new Type(strings);\n\t      for (var i = 0, ii = dict.length; i < ii; ++i) {\n\t       var pair = dict[i];\n\t       var key = pair[0];\n\t       var value = pair[1];\n\t       cffDict.setByKey(key, value);\n\t      }\n\t      return cffDict;\n\t     },\n\t     parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n\t      if (state.callDepth > MAX_SUBR_NESTING) {\n\t       return false;\n\t      }\n\t      var stackSize = state.stackSize;\n\t      var stack = state.stack;\n\t      var length = data.length;\n\t      for (var j = 0; j < length;) {\n\t       var value = data[j++];\n\t       var validationCommand = null;\n\t       if (value === 12) {\n\t        var q = data[j++];\n\t        if (q === 0) {\n\t         data[j - 2] = 139;\n\t         data[j - 1] = 22;\n\t         stackSize = 0;\n\t        } else {\n\t         validationCommand = CharstringValidationData12[q];\n\t        }\n\t       } else if (value === 28) {\n\t        stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n\t        j += 2;\n\t        stackSize++;\n\t       } else if (value === 14) {\n\t        if (stackSize >= 4) {\n\t         stackSize -= 4;\n\t         if (this.seacAnalysisEnabled) {\n\t          state.seac = stack.slice(stackSize, stackSize + 4);\n\t          return false;\n\t         }\n\t        }\n\t        validationCommand = CharstringValidationData[value];\n\t       } else if (value >= 32 && value <= 246) {\n\t        stack[stackSize] = value - 139;\n\t        stackSize++;\n\t       } else if (value >= 247 && value <= 254) {\n\t        stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n\t        j++;\n\t        stackSize++;\n\t       } else if (value === 255) {\n\t        stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n\t        j += 4;\n\t        stackSize++;\n\t       } else if (value === 19 || value === 20) {\n\t        state.hints += stackSize >> 1;\n\t        j += state.hints + 7 >> 3;\n\t        stackSize %= 2;\n\t        validationCommand = CharstringValidationData[value];\n\t       } else if (value === 10 || value === 29) {\n\t        var subrsIndex;\n\t        if (value === 10) {\n\t         subrsIndex = localSubrIndex;\n\t        } else {\n\t         subrsIndex = globalSubrIndex;\n\t        }\n\t        if (!subrsIndex) {\n\t         validationCommand = CharstringValidationData[value];\n\t         warn('Missing subrsIndex for ' + validationCommand.id);\n\t         return false;\n\t        }\n\t        var bias = 32768;\n\t        if (subrsIndex.count < 1240) {\n\t         bias = 107;\n\t        } else if (subrsIndex.count < 33900) {\n\t         bias = 1131;\n\t        }\n\t        var subrNumber = stack[--stackSize] + bias;\n\t        if (subrNumber < 0 || subrNumber >= subrsIndex.count) {\n\t         validationCommand = CharstringValidationData[value];\n\t         warn('Out of bounds subrIndex for ' + validationCommand.id);\n\t         return false;\n\t        }\n\t        state.stackSize = stackSize;\n\t        state.callDepth++;\n\t        var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n\t        if (!valid) {\n\t         return false;\n\t        }\n\t        state.callDepth--;\n\t        stackSize = state.stackSize;\n\t        continue;\n\t       } else if (value === 11) {\n\t        state.stackSize = stackSize;\n\t        return true;\n\t       } else {\n\t        validationCommand = CharstringValidationData[value];\n\t       }\n\t       if (validationCommand) {\n\t        if (validationCommand.stem) {\n\t         state.hints += stackSize >> 1;\n\t        }\n\t        if ('min' in validationCommand) {\n\t         if (!state.undefStack && stackSize < validationCommand.min) {\n\t          warn('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\n\t          return false;\n\t         }\n\t        }\n\t        if (state.firstStackClearing && validationCommand.stackClearing) {\n\t         state.firstStackClearing = false;\n\t         stackSize -= validationCommand.min;\n\t         if (stackSize >= 2 && validationCommand.stem) {\n\t          stackSize %= 2;\n\t         } else if (stackSize > 1) {\n\t          warn('Found too many parameters for stack-clearing command');\n\t         }\n\t         if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n\t          state.width = stack[stackSize - 1];\n\t         }\n\t        }\n\t        if ('stackDelta' in validationCommand) {\n\t         if ('stackFn' in validationCommand) {\n\t          validationCommand.stackFn(stack, stackSize);\n\t         }\n\t         stackSize += validationCommand.stackDelta;\n\t        } else if (validationCommand.stackClearing) {\n\t         stackSize = 0;\n\t        } else if (validationCommand.resetStack) {\n\t         stackSize = 0;\n\t         state.undefStack = false;\n\t        } else if (validationCommand.undefStack) {\n\t         stackSize = 0;\n\t         state.undefStack = true;\n\t         state.firstStackClearing = false;\n\t        }\n\t       }\n\t      }\n\t      state.stackSize = stackSize;\n\t      return true;\n\t     },\n\t     parseCharStrings: function CFFParser_parseCharStrings(charStrings, localSubrIndex, globalSubrIndex, fdSelect, fdArray) {\n\t      var seacs = [];\n\t      var widths = [];\n\t      var count = charStrings.count;\n\t      for (var i = 0; i < count; i++) {\n\t       var charstring = charStrings.get(i);\n\t       var state = {\n\t        callDepth: 0,\n\t        stackSize: 0,\n\t        stack: [],\n\t        undefStack: true,\n\t        hints: 0,\n\t        firstStackClearing: true,\n\t        seac: null,\n\t        width: null\n\t       };\n\t       var valid = true;\n\t       var localSubrToUse = null;\n\t       if (fdSelect && fdArray.length) {\n\t        var fdIndex = fdSelect.getFDIndex(i);\n\t        if (fdIndex === -1) {\n\t         warn('Glyph index is not in fd select.');\n\t         valid = false;\n\t        }\n\t        if (fdIndex >= fdArray.length) {\n\t         warn('Invalid fd index for glyph index.');\n\t         valid = false;\n\t        }\n\t        if (valid) {\n\t         localSubrToUse = fdArray[fdIndex].privateDict.subrsIndex;\n\t        }\n\t       } else if (localSubrIndex) {\n\t        localSubrToUse = localSubrIndex;\n\t       }\n\t       if (valid) {\n\t        valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n\t       }\n\t       if (state.width !== null) {\n\t        widths[i] = state.width;\n\t       }\n\t       if (state.seac !== null) {\n\t        seacs[i] = state.seac;\n\t       }\n\t       if (!valid) {\n\t        charStrings.set(i, new Uint8Array([14]));\n\t       }\n\t      }\n\t      return {\n\t       charStrings: charStrings,\n\t       seacs: seacs,\n\t       widths: widths\n\t      };\n\t     },\n\t     emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\n\t      var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n\t      parentDict.setByKey(18, [\n\t       0,\n\t       0\n\t      ]);\n\t      parentDict.privateDict = privateDict;\n\t     },\n\t     parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n\t      if (!parentDict.hasName('Private')) {\n\t       this.emptyPrivateDictionary(parentDict);\n\t       return;\n\t      }\n\t      var privateOffset = parentDict.getByName('Private');\n\t      if (!isArray(privateOffset) || privateOffset.length !== 2) {\n\t       parentDict.removeByName('Private');\n\t       return;\n\t      }\n\t      var size = privateOffset[0];\n\t      var offset = privateOffset[1];\n\t      if (size === 0 || offset >= this.bytes.length) {\n\t       this.emptyPrivateDictionary(parentDict);\n\t       return;\n\t      }\n\t      var privateDictEnd = offset + size;\n\t      var dictData = this.bytes.subarray(offset, privateDictEnd);\n\t      var dict = this.parseDict(dictData);\n\t      var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n\t      parentDict.privateDict = privateDict;\n\t      if (!privateDict.getByName('Subrs')) {\n\t       return;\n\t      }\n\t      var subrsOffset = privateDict.getByName('Subrs');\n\t      var relativeOffset = offset + subrsOffset;\n\t      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n\t       this.emptyPrivateDictionary(parentDict);\n\t       return;\n\t      }\n\t      var subrsIndex = this.parseIndex(relativeOffset);\n\t      privateDict.subrsIndex = subrsIndex.obj;\n\t     },\n\t     parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n\t      if (pos === 0) {\n\t       return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, ISOAdobeCharset);\n\t      } else if (pos === 1) {\n\t       return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, ExpertCharset);\n\t      } else if (pos === 2) {\n\t       return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, ExpertSubsetCharset);\n\t      }\n\t      var bytes = this.bytes;\n\t      var start = pos;\n\t      var format = bytes[pos++];\n\t      var charset = ['.notdef'];\n\t      var id, count, i;\n\t      length -= 1;\n\t      switch (format) {\n\t      case 0:\n\t       for (i = 0; i < length; i++) {\n\t        id = bytes[pos++] << 8 | bytes[pos++];\n\t        charset.push(cid ? id : strings.get(id));\n\t       }\n\t       break;\n\t      case 1:\n\t       while (charset.length <= length) {\n\t        id = bytes[pos++] << 8 | bytes[pos++];\n\t        count = bytes[pos++];\n\t        for (i = 0; i <= count; i++) {\n\t         charset.push(cid ? id++ : strings.get(id++));\n\t        }\n\t       }\n\t       break;\n\t      case 2:\n\t       while (charset.length <= length) {\n\t        id = bytes[pos++] << 8 | bytes[pos++];\n\t        count = bytes[pos++] << 8 | bytes[pos++];\n\t        for (i = 0; i <= count; i++) {\n\t         charset.push(cid ? id++ : strings.get(id++));\n\t        }\n\t       }\n\t       break;\n\t      default:\n\t       error('Unknown charset format');\n\t      }\n\t      var end = pos;\n\t      var raw = bytes.subarray(start, end);\n\t      return new CFFCharset(false, format, charset, raw);\n\t     },\n\t     parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\n\t      var encoding = Object.create(null);\n\t      var bytes = this.bytes;\n\t      var predefined = false;\n\t      var hasSupplement = false;\n\t      var format, i, ii;\n\t      var raw = null;\n\t      function readSupplement() {\n\t       var supplementsCount = bytes[pos++];\n\t       for (i = 0; i < supplementsCount; i++) {\n\t        var code = bytes[pos++];\n\t        var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n\t        encoding[code] = charset.indexOf(strings.get(sid));\n\t       }\n\t      }\n\t      if (pos === 0 || pos === 1) {\n\t       predefined = true;\n\t       format = pos;\n\t       var baseEncoding = pos ? ExpertEncoding : StandardEncoding;\n\t       for (i = 0, ii = charset.length; i < ii; i++) {\n\t        var index = baseEncoding.indexOf(charset[i]);\n\t        if (index !== -1) {\n\t         encoding[index] = i;\n\t        }\n\t       }\n\t      } else {\n\t       var dataStart = pos;\n\t       format = bytes[pos++];\n\t       switch (format & 0x7f) {\n\t       case 0:\n\t        var glyphsCount = bytes[pos++];\n\t        for (i = 1; i <= glyphsCount; i++) {\n\t         encoding[bytes[pos++]] = i;\n\t        }\n\t        break;\n\t       case 1:\n\t        var rangesCount = bytes[pos++];\n\t        var gid = 1;\n\t        for (i = 0; i < rangesCount; i++) {\n\t         var start = bytes[pos++];\n\t         var left = bytes[pos++];\n\t         for (var j = start; j <= start + left; j++) {\n\t          encoding[j] = gid++;\n\t         }\n\t        }\n\t        break;\n\t       default:\n\t        error('Unknown encoding format: ' + format + ' in CFF');\n\t        break;\n\t       }\n\t       var dataEnd = pos;\n\t       if (format & 0x80) {\n\t        bytes[dataStart] &= 0x7f;\n\t        readSupplement();\n\t        hasSupplement = true;\n\t       }\n\t       raw = bytes.subarray(dataStart, dataEnd);\n\t      }\n\t      format = format & 0x7f;\n\t      return new CFFEncoding(predefined, format, encoding, raw);\n\t     },\n\t     parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n\t      var start = pos;\n\t      var bytes = this.bytes;\n\t      var format = bytes[pos++];\n\t      var fdSelect = [], rawBytes;\n\t      var i, invalidFirstGID = false;\n\t      switch (format) {\n\t      case 0:\n\t       for (i = 0; i < length; ++i) {\n\t        var id = bytes[pos++];\n\t        fdSelect.push(id);\n\t       }\n\t       rawBytes = bytes.subarray(start, pos);\n\t       break;\n\t      case 3:\n\t       var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n\t       for (i = 0; i < rangesCount; ++i) {\n\t        var first = bytes[pos++] << 8 | bytes[pos++];\n\t        if (i === 0 && first !== 0) {\n\t         warn('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\n\t         invalidFirstGID = true;\n\t         first = 0;\n\t        }\n\t        var fdIndex = bytes[pos++];\n\t        var next = bytes[pos] << 8 | bytes[pos + 1];\n\t        for (var j = first; j < next; ++j) {\n\t         fdSelect.push(fdIndex);\n\t        }\n\t       }\n\t       pos += 2;\n\t       rawBytes = bytes.subarray(start, pos);\n\t       if (invalidFirstGID) {\n\t        rawBytes[3] = rawBytes[4] = 0;\n\t       }\n\t       break;\n\t      default:\n\t       error('parseFDSelect: Unknown format \"' + format + '\".');\n\t       break;\n\t      }\n\t      assert(fdSelect.length === length, 'parseFDSelect: Invalid font data.');\n\t      return new CFFFDSelect(fdSelect, rawBytes);\n\t     }\n\t    };\n\t    return CFFParser;\n\t   }();\n\t   var CFF = function CFFClosure() {\n\t    function CFF() {\n\t     this.header = null;\n\t     this.names = [];\n\t     this.topDict = null;\n\t     this.strings = new CFFStrings();\n\t     this.globalSubrIndex = null;\n\t     this.encoding = null;\n\t     this.charset = null;\n\t     this.charStrings = null;\n\t     this.fdArray = [];\n\t     this.fdSelect = null;\n\t     this.isCIDFont = false;\n\t    }\n\t    return CFF;\n\t   }();\n\t   var CFFHeader = function CFFHeaderClosure() {\n\t    function CFFHeader(major, minor, hdrSize, offSize) {\n\t     this.major = major;\n\t     this.minor = minor;\n\t     this.hdrSize = hdrSize;\n\t     this.offSize = offSize;\n\t    }\n\t    return CFFHeader;\n\t   }();\n\t   var CFFStrings = function CFFStringsClosure() {\n\t    function CFFStrings() {\n\t     this.strings = [];\n\t    }\n\t    CFFStrings.prototype = {\n\t     get: function CFFStrings_get(index) {\n\t      if (index >= 0 && index <= 390) {\n\t       return CFFStandardStrings[index];\n\t      }\n\t      if (index - 391 <= this.strings.length) {\n\t       return this.strings[index - 391];\n\t      }\n\t      return CFFStandardStrings[0];\n\t     },\n\t     add: function CFFStrings_add(value) {\n\t      this.strings.push(value);\n\t     },\n\t     get count() {\n\t      return this.strings.length;\n\t     }\n\t    };\n\t    return CFFStrings;\n\t   }();\n\t   var CFFIndex = function CFFIndexClosure() {\n\t    function CFFIndex() {\n\t     this.objects = [];\n\t     this.length = 0;\n\t    }\n\t    CFFIndex.prototype = {\n\t     add: function CFFIndex_add(data) {\n\t      this.length += data.length;\n\t      this.objects.push(data);\n\t     },\n\t     set: function CFFIndex_set(index, data) {\n\t      this.length += data.length - this.objects[index].length;\n\t      this.objects[index] = data;\n\t     },\n\t     get: function CFFIndex_get(index) {\n\t      return this.objects[index];\n\t     },\n\t     get count() {\n\t      return this.objects.length;\n\t     }\n\t    };\n\t    return CFFIndex;\n\t   }();\n\t   var CFFDict = function CFFDictClosure() {\n\t    function CFFDict(tables, strings) {\n\t     this.keyToNameMap = tables.keyToNameMap;\n\t     this.nameToKeyMap = tables.nameToKeyMap;\n\t     this.defaults = tables.defaults;\n\t     this.types = tables.types;\n\t     this.opcodes = tables.opcodes;\n\t     this.order = tables.order;\n\t     this.strings = strings;\n\t     this.values = Object.create(null);\n\t    }\n\t    CFFDict.prototype = {\n\t     setByKey: function CFFDict_setByKey(key, value) {\n\t      if (!(key in this.keyToNameMap)) {\n\t       return false;\n\t      }\n\t      var valueLength = value.length;\n\t      if (valueLength === 0) {\n\t       return true;\n\t      }\n\t      for (var i = 0; i < valueLength; i++) {\n\t       if (isNaN(value[i])) {\n\t        warn('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n\t        return true;\n\t       }\n\t      }\n\t      var type = this.types[key];\n\t      if (type === 'num' || type === 'sid' || type === 'offset') {\n\t       value = value[0];\n\t      }\n\t      this.values[key] = value;\n\t      return true;\n\t     },\n\t     setByName: function CFFDict_setByName(name, value) {\n\t      if (!(name in this.nameToKeyMap)) {\n\t       error('Invalid dictionary name \"' + name + '\"');\n\t      }\n\t      this.values[this.nameToKeyMap[name]] = value;\n\t     },\n\t     hasName: function CFFDict_hasName(name) {\n\t      return this.nameToKeyMap[name] in this.values;\n\t     },\n\t     getByName: function CFFDict_getByName(name) {\n\t      if (!(name in this.nameToKeyMap)) {\n\t       error('Invalid dictionary name \"' + name + '\"');\n\t      }\n\t      var key = this.nameToKeyMap[name];\n\t      if (!(key in this.values)) {\n\t       return this.defaults[key];\n\t      }\n\t      return this.values[key];\n\t     },\n\t     removeByName: function CFFDict_removeByName(name) {\n\t      delete this.values[this.nameToKeyMap[name]];\n\t     }\n\t    };\n\t    CFFDict.createTables = function CFFDict_createTables(layout) {\n\t     var tables = {\n\t      keyToNameMap: {},\n\t      nameToKeyMap: {},\n\t      defaults: {},\n\t      types: {},\n\t      opcodes: {},\n\t      order: []\n\t     };\n\t     for (var i = 0, ii = layout.length; i < ii; ++i) {\n\t      var entry = layout[i];\n\t      var key = isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n\t      tables.keyToNameMap[key] = entry[1];\n\t      tables.nameToKeyMap[entry[1]] = key;\n\t      tables.types[key] = entry[2];\n\t      tables.defaults[key] = entry[3];\n\t      tables.opcodes[key] = isArray(entry[0]) ? entry[0] : [entry[0]];\n\t      tables.order.push(key);\n\t     }\n\t     return tables;\n\t    };\n\t    return CFFDict;\n\t   }();\n\t   var CFFTopDict = function CFFTopDictClosure() {\n\t    var layout = [\n\t     [\n\t      [\n\t       12,\n\t       30\n\t      ],\n\t      'ROS',\n\t      [\n\t       'sid',\n\t       'sid',\n\t       'num'\n\t      ],\n\t      null\n\t     ],\n\t     [\n\t      [\n\t       12,\n\t       20\n\t      ],\n\t      'SyntheticBase',\n\t      'num',\n\t      null\n\t     ],\n\t     [\n\t      0,\n\t      'version',\n\t      'sid',\n\t      null\n\t     ],\n\t     [\n\t      1,\n\t      'Notice',\n\t      'sid',\n\t      null\n\t     ],\n\t     [\n\t      [\n\t       12,\n\t       0\n\t      ],\n\t      'Copyright',\n\t      'sid',\n\t      null\n\t     ],\n\t     [\n\t      2,\n\t      'FullName',\n\t      'sid',\n\t      null\n\t     ],\n\t     [\n\t      3,\n\t      'FamilyName',\n\t      'sid',\n\t      null\n\t     ],\n\t     [\n\t      4,\n\t      'Weight',\n\t      'sid',\n\t      null\n\t     ],\n\t     [\n\t      [\n\t       12,\n\t       1\n\t      ],\n\t      'isFixedPitch',\n\t      'num',\n\t      0\n\t     ],\n\t     [\n\t      [\n\t       12,\n\t       2\n\t      ],\n\t      'ItalicAngle',\n\t      'num',\n\t      0\n\t     ],\n\t     [\n\t      [\n\t       12,\n\t       3\n\t      ],\n\t      'UnderlinePosition',\n\t      'num',\n\t      -100\n\t     ],\n\t     [\n\t      [\n\t       12,\n\t       4\n\t      ],\n\t      'UnderlineThickness',\n\t      'num',\n\t      50\n\t     ],\n\t     [\n\t      [\n\t       12,\n\t       5\n\t      ],\n\t      'PaintType',\n\t      'num',\n\t      0\n\t     ],\n\t     [\n\t      [\n\t       12,\n\t       6\n\t      ],\n\t      'CharstringType',\n\t      'num',\n\t      2\n\t     ],\n\t     [\n\t      [\n\t       12,\n\t       7\n\t      ],\n\t      'FontMatrix',\n\t      [\n\t       'num',\n\t       'num',\n\t       'num',\n\t       'num',\n\t       'num',\n\t       'num'\n\t      ],\n\t      [\n\t       0.001,\n\t       0,\n\t       0,\n\t       0.001,\n\t       0,\n\t       0\n\t      ]\n\t     ],\n\t     [\n\t      13,\n\t      'UniqueID',\n\t      'num',\n\t      null\n\t     ],\n\t     [\n\t      5,\n\t      'FontBBox',\n\t      [\n\t       'num',\n\t       'num',\n\t       'num',\n\t       'num'\n\t      ],\n\t      [\n\t       0,\n\t       0,\n\t       0,\n\t       0\n\t      ]\n\t     ],\n\t     [\n\t      [\n\t       12,\n\t       8\n\t      ],\n\t      'StrokeWidth',\n\t      'num',\n\t      0\n\t     ],\n\t     [\n\t      14,\n\t      'XUID',\n\t      'array',\n\t      null\n\t     ],\n\t     [\n\t      15,\n\t      'charset',\n\t      'offset',\n\t      0\n\t     ],\n\t     [\n\t      16,\n\t      'Encoding',\n\t      'offset',\n\t      0\n\t     ],\n\t     [\n\t      17,\n\t      'CharStrings',\n\t      'offset',\n\t      0\n\t     ],\n\t     [\n\t      18,\n\t      'Private',\n\t      [\n\t       'offset',\n\t       'offset'\n\t      ],\n\t      null\n\t     ],\n\t     [\n\t      [\n\t       12,\n\t       21\n\t      ],\n\t      'PostScript',\n\t      'sid',\n\t      null\n\t     ],\n\t     [\n\t      [\n\t       12,\n\t       22\n\t      ],\n\t      'BaseFontName',\n\t      'sid',\n\t      null\n\t     ],\n\t     [\n\t      [\n\t       12,\n\t       23\n\t      ],\n\t      'BaseFontBlend',\n\t      'delta',\n\t      null\n\t     ],\n\t     [\n\t      [\n\t       12,\n\t       31\n\t      ],\n\t      'CIDFontVersion',\n\t      'num',\n\t      0\n\t     ],\n\t     [\n\t      [\n\t       12,\n\t       32\n\t      ],\n\t      'CIDFontRevision',\n\t      'num',\n\t      0\n\t     ],\n\t     [\n\t      [\n\t       12,\n\t       33\n\t      ],\n\t      'CIDFontType',\n\t      'num',\n\t      0\n\t     ],\n\t     [\n\t      [\n\t       12,\n\t       34\n\t      ],\n\t      'CIDCount',\n\t      'num',\n\t      8720\n\t     ],\n\t     [\n\t      [\n\t       12,\n\t       35\n\t      ],\n\t      'UIDBase',\n\t      'num',\n\t      null\n\t     ],\n\t     [\n\t      [\n\t       12,\n\t       37\n\t      ],\n\t      'FDSelect',\n\t      'offset',\n\t      null\n\t     ],\n\t     [\n\t      [\n\t       12,\n\t       36\n\t      ],\n\t      'FDArray',\n\t      'offset',\n\t      null\n\t     ],\n\t     [\n\t      [\n\t       12,\n\t       38\n\t      ],\n\t      'FontName',\n\t      'sid',\n\t      null\n\t     ]\n\t    ];\n\t    var tables = null;\n\t    function CFFTopDict(strings) {\n\t     if (tables === null) {\n\t      tables = CFFDict.createTables(layout);\n\t     }\n\t     CFFDict.call(this, tables, strings);\n\t     this.privateDict = null;\n\t    }\n\t    CFFTopDict.prototype = Object.create(CFFDict.prototype);\n\t    return CFFTopDict;\n\t   }();\n\t   var CFFPrivateDict = function CFFPrivateDictClosure() {\n\t    var layout = [\n\t     [\n\t      6,\n\t      'BlueValues',\n\t      'delta',\n\t      null\n\t     ],\n\t     [\n\t      7,\n\t      'OtherBlues',\n\t      'delta',\n\t      null\n\t     ],\n\t     [\n\t      8,\n\t      'FamilyBlues',\n\t      'delta',\n\t      null\n\t     ],\n\t     [\n\t      9,\n\t      'FamilyOtherBlues',\n\t      'delta',\n\t      null\n\t     ],\n\t     [\n\t      [\n\t       12,\n\t       9\n\t      ],\n\t      'BlueScale',\n\t      'num',\n\t      0.039625\n\t     ],\n\t     [\n\t      [\n\t       12,\n\t       10\n\t      ],\n\t      'BlueShift',\n\t      'num',\n\t      7\n\t     ],\n\t     [\n\t      [\n\t       12,\n\t       11\n\t      ],\n\t      'BlueFuzz',\n\t      'num',\n\t      1\n\t     ],\n\t     [\n\t      10,\n\t      'StdHW',\n\t      'num',\n\t      null\n\t     ],\n\t     [\n\t      11,\n\t      'StdVW',\n\t      'num',\n\t      null\n\t     ],\n\t     [\n\t      [\n\t       12,\n\t       12\n\t      ],\n\t      'StemSnapH',\n\t      'delta',\n\t      null\n\t     ],\n\t     [\n\t      [\n\t       12,\n\t       13\n\t      ],\n\t      'StemSnapV',\n\t      'delta',\n\t      null\n\t     ],\n\t     [\n\t      [\n\t       12,\n\t       14\n\t      ],\n\t      'ForceBold',\n\t      'num',\n\t      0\n\t     ],\n\t     [\n\t      [\n\t       12,\n\t       17\n\t      ],\n\t      'LanguageGroup',\n\t      'num',\n\t      0\n\t     ],\n\t     [\n\t      [\n\t       12,\n\t       18\n\t      ],\n\t      'ExpansionFactor',\n\t      'num',\n\t      0.06\n\t     ],\n\t     [\n\t      [\n\t       12,\n\t       19\n\t      ],\n\t      'initialRandomSeed',\n\t      'num',\n\t      0\n\t     ],\n\t     [\n\t      20,\n\t      'defaultWidthX',\n\t      'num',\n\t      0\n\t     ],\n\t     [\n\t      21,\n\t      'nominalWidthX',\n\t      'num',\n\t      0\n\t     ],\n\t     [\n\t      19,\n\t      'Subrs',\n\t      'offset',\n\t      null\n\t     ]\n\t    ];\n\t    var tables = null;\n\t    function CFFPrivateDict(strings) {\n\t     if (tables === null) {\n\t      tables = CFFDict.createTables(layout);\n\t     }\n\t     CFFDict.call(this, tables, strings);\n\t     this.subrsIndex = null;\n\t    }\n\t    CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n\t    return CFFPrivateDict;\n\t   }();\n\t   var CFFCharsetPredefinedTypes = {\n\t    ISO_ADOBE: 0,\n\t    EXPERT: 1,\n\t    EXPERT_SUBSET: 2\n\t   };\n\t   var CFFCharset = function CFFCharsetClosure() {\n\t    function CFFCharset(predefined, format, charset, raw) {\n\t     this.predefined = predefined;\n\t     this.format = format;\n\t     this.charset = charset;\n\t     this.raw = raw;\n\t    }\n\t    return CFFCharset;\n\t   }();\n\t   var CFFEncoding = function CFFEncodingClosure() {\n\t    function CFFEncoding(predefined, format, encoding, raw) {\n\t     this.predefined = predefined;\n\t     this.format = format;\n\t     this.encoding = encoding;\n\t     this.raw = raw;\n\t    }\n\t    return CFFEncoding;\n\t   }();\n\t   var CFFFDSelect = function CFFFDSelectClosure() {\n\t    function CFFFDSelect(fdSelect, raw) {\n\t     this.fdSelect = fdSelect;\n\t     this.raw = raw;\n\t    }\n\t    CFFFDSelect.prototype = {\n\t     getFDIndex: function CFFFDSelect_get(glyphIndex) {\n\t      if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n\t       return -1;\n\t      }\n\t      return this.fdSelect[glyphIndex];\n\t     }\n\t    };\n\t    return CFFFDSelect;\n\t   }();\n\t   var CFFOffsetTracker = function CFFOffsetTrackerClosure() {\n\t    function CFFOffsetTracker() {\n\t     this.offsets = Object.create(null);\n\t    }\n\t    CFFOffsetTracker.prototype = {\n\t     isTracking: function CFFOffsetTracker_isTracking(key) {\n\t      return key in this.offsets;\n\t     },\n\t     track: function CFFOffsetTracker_track(key, location) {\n\t      if (key in this.offsets) {\n\t       error('Already tracking location of ' + key);\n\t      }\n\t      this.offsets[key] = location;\n\t     },\n\t     offset: function CFFOffsetTracker_offset(value) {\n\t      for (var key in this.offsets) {\n\t       this.offsets[key] += value;\n\t      }\n\t     },\n\t     setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\n\t      if (!(key in this.offsets)) {\n\t       error('Not tracking location of ' + key);\n\t      }\n\t      var data = output.data;\n\t      var dataOffset = this.offsets[key];\n\t      var size = 5;\n\t      for (var i = 0, ii = values.length; i < ii; ++i) {\n\t       var offset0 = i * size + dataOffset;\n\t       var offset1 = offset0 + 1;\n\t       var offset2 = offset0 + 2;\n\t       var offset3 = offset0 + 3;\n\t       var offset4 = offset0 + 4;\n\t       if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n\t        error('writing to an offset that is not empty');\n\t       }\n\t       var value = values[i];\n\t       data[offset0] = 0x1d;\n\t       data[offset1] = value >> 24 & 0xFF;\n\t       data[offset2] = value >> 16 & 0xFF;\n\t       data[offset3] = value >> 8 & 0xFF;\n\t       data[offset4] = value & 0xFF;\n\t      }\n\t     }\n\t    };\n\t    return CFFOffsetTracker;\n\t   }();\n\t   var CFFCompiler = function CFFCompilerClosure() {\n\t    function CFFCompiler(cff) {\n\t     this.cff = cff;\n\t    }\n\t    CFFCompiler.prototype = {\n\t     compile: function CFFCompiler_compile() {\n\t      var cff = this.cff;\n\t      var output = {\n\t       data: [],\n\t       length: 0,\n\t       add: function CFFCompiler_add(data) {\n\t        this.data = this.data.concat(data);\n\t        this.length = this.data.length;\n\t       }\n\t      };\n\t      var header = this.compileHeader(cff.header);\n\t      output.add(header);\n\t      var nameIndex = this.compileNameIndex(cff.names);\n\t      output.add(nameIndex);\n\t      if (cff.isCIDFont) {\n\t       if (cff.topDict.hasName('FontMatrix')) {\n\t        var base = cff.topDict.getByName('FontMatrix');\n\t        cff.topDict.removeByName('FontMatrix');\n\t        for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n\t         var subDict = cff.fdArray[i];\n\t         var matrix = base.slice(0);\n\t         if (subDict.hasName('FontMatrix')) {\n\t          matrix = Util.transform(matrix, subDict.getByName('FontMatrix'));\n\t         }\n\t         subDict.setByName('FontMatrix', matrix);\n\t        }\n\t       }\n\t      }\n\t      var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n\t      output.add(compiled.output);\n\t      var topDictTracker = compiled.trackers[0];\n\t      var stringIndex = this.compileStringIndex(cff.strings.strings);\n\t      output.add(stringIndex);\n\t      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n\t      output.add(globalSubrIndex);\n\t      if (cff.encoding && cff.topDict.hasName('Encoding')) {\n\t       if (cff.encoding.predefined) {\n\t        topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\n\t       } else {\n\t        var encoding = this.compileEncoding(cff.encoding);\n\t        topDictTracker.setEntryLocation('Encoding', [output.length], output);\n\t        output.add(encoding);\n\t       }\n\t      }\n\t      if (cff.charset && cff.topDict.hasName('charset')) {\n\t       if (cff.charset.predefined) {\n\t        topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\n\t       } else {\n\t        var charset = this.compileCharset(cff.charset);\n\t        topDictTracker.setEntryLocation('charset', [output.length], output);\n\t        output.add(charset);\n\t       }\n\t      }\n\t      var charStrings = this.compileCharStrings(cff.charStrings);\n\t      topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n\t      output.add(charStrings);\n\t      if (cff.isCIDFont) {\n\t       topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n\t       var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n\t       output.add(fdSelect);\n\t       compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n\t       topDictTracker.setEntryLocation('FDArray', [output.length], output);\n\t       output.add(compiled.output);\n\t       var fontDictTrackers = compiled.trackers;\n\t       this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n\t      }\n\t      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n\t      output.add([0]);\n\t      return output.data;\n\t     },\n\t     encodeNumber: function CFFCompiler_encodeNumber(value) {\n\t      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\n\t       return this.encodeInteger(value);\n\t      }\n\t      return this.encodeFloat(value);\n\t     },\n\t     encodeFloat: function CFFCompiler_encodeFloat(num) {\n\t      var value = num.toString();\n\t      var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n\t      if (m) {\n\t       var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n\t       value = (Math.round(num * epsilon) / epsilon).toString();\n\t      }\n\t      var nibbles = '';\n\t      var i, ii;\n\t      for (i = 0, ii = value.length; i < ii; ++i) {\n\t       var a = value[i];\n\t       if (a === 'e') {\n\t        nibbles += value[++i] === '-' ? 'c' : 'b';\n\t       } else if (a === '.') {\n\t        nibbles += 'a';\n\t       } else if (a === '-') {\n\t        nibbles += 'e';\n\t       } else {\n\t        nibbles += a;\n\t       }\n\t      }\n\t      nibbles += nibbles.length & 1 ? 'f' : 'ff';\n\t      var out = [30];\n\t      for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n\t       out.push(parseInt(nibbles.substr(i, 2), 16));\n\t      }\n\t      return out;\n\t     },\n\t     encodeInteger: function CFFCompiler_encodeInteger(value) {\n\t      var code;\n\t      if (value >= -107 && value <= 107) {\n\t       code = [value + 139];\n\t      } else if (value >= 108 && value <= 1131) {\n\t       value = value - 108;\n\t       code = [\n\t        (value >> 8) + 247,\n\t        value & 0xFF\n\t       ];\n\t      } else if (value >= -1131 && value <= -108) {\n\t       value = -value - 108;\n\t       code = [\n\t        (value >> 8) + 251,\n\t        value & 0xFF\n\t       ];\n\t      } else if (value >= -32768 && value <= 32767) {\n\t       code = [\n\t        0x1c,\n\t        value >> 8 & 0xFF,\n\t        value & 0xFF\n\t       ];\n\t      } else {\n\t       code = [\n\t        0x1d,\n\t        value >> 24 & 0xFF,\n\t        value >> 16 & 0xFF,\n\t        value >> 8 & 0xFF,\n\t        value & 0xFF\n\t       ];\n\t      }\n\t      return code;\n\t     },\n\t     compileHeader: function CFFCompiler_compileHeader(header) {\n\t      return [\n\t       header.major,\n\t       header.minor,\n\t       header.hdrSize,\n\t       header.offSize\n\t      ];\n\t     },\n\t     compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n\t      var nameIndex = new CFFIndex();\n\t      for (var i = 0, ii = names.length; i < ii; ++i) {\n\t       nameIndex.add(stringToBytes(names[i]));\n\t      }\n\t      return this.compileIndex(nameIndex);\n\t     },\n\t     compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\n\t      var fontDictTrackers = [];\n\t      var fdArrayIndex = new CFFIndex();\n\t      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n\t       var fontDict = dicts[i];\n\t       if (removeCidKeys) {\n\t        fontDict.removeByName('CIDFontVersion');\n\t        fontDict.removeByName('CIDFontRevision');\n\t        fontDict.removeByName('CIDFontType');\n\t        fontDict.removeByName('CIDCount');\n\t        fontDict.removeByName('UIDBase');\n\t       }\n\t       var fontDictTracker = new CFFOffsetTracker();\n\t       var fontDictData = this.compileDict(fontDict, fontDictTracker);\n\t       fontDictTrackers.push(fontDictTracker);\n\t       fdArrayIndex.add(fontDictData);\n\t       fontDictTracker.offset(length);\n\t      }\n\t      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n\t      return {\n\t       trackers: fontDictTrackers,\n\t       output: fdArrayIndex\n\t      };\n\t     },\n\t     compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\n\t      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n\t       var fontDict = dicts[i];\n\t       assert(fontDict.privateDict && fontDict.hasName('Private'), 'There must be an private dictionary.');\n\t       var privateDict = fontDict.privateDict;\n\t       var privateDictTracker = new CFFOffsetTracker();\n\t       var privateDictData = this.compileDict(privateDict, privateDictTracker);\n\t       var outputLength = output.length;\n\t       privateDictTracker.offset(outputLength);\n\t       if (!privateDictData.length) {\n\t        outputLength = 0;\n\t       }\n\t       trackers[i].setEntryLocation('Private', [\n\t        privateDictData.length,\n\t        outputLength\n\t       ], output);\n\t       output.add(privateDictData);\n\t       if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n\t        var subrs = this.compileIndex(privateDict.subrsIndex);\n\t        privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\n\t        output.add(subrs);\n\t       }\n\t      }\n\t     },\n\t     compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n\t      var out = [];\n\t      var order = dict.order;\n\t      for (var i = 0; i < order.length; ++i) {\n\t       var key = order[i];\n\t       if (!(key in dict.values)) {\n\t        continue;\n\t       }\n\t       var values = dict.values[key];\n\t       var types = dict.types[key];\n\t       if (!isArray(types)) {\n\t        types = [types];\n\t       }\n\t       if (!isArray(values)) {\n\t        values = [values];\n\t       }\n\t       if (values.length === 0) {\n\t        continue;\n\t       }\n\t       for (var j = 0, jj = types.length; j < jj; ++j) {\n\t        var type = types[j];\n\t        var value = values[j];\n\t        switch (type) {\n\t        case 'num':\n\t        case 'sid':\n\t         out = out.concat(this.encodeNumber(value));\n\t         break;\n\t        case 'offset':\n\t         var name = dict.keyToNameMap[key];\n\t         if (!offsetTracker.isTracking(name)) {\n\t          offsetTracker.track(name, out.length);\n\t         }\n\t         out = out.concat([\n\t          0x1d,\n\t          0,\n\t          0,\n\t          0,\n\t          0\n\t         ]);\n\t         break;\n\t        case 'array':\n\t        case 'delta':\n\t         out = out.concat(this.encodeNumber(value));\n\t         for (var k = 1, kk = values.length; k < kk; ++k) {\n\t          out = out.concat(this.encodeNumber(values[k]));\n\t         }\n\t         break;\n\t        default:\n\t         error('Unknown data type of ' + type);\n\t         break;\n\t        }\n\t       }\n\t       out = out.concat(dict.opcodes[key]);\n\t      }\n\t      return out;\n\t     },\n\t     compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n\t      var stringIndex = new CFFIndex();\n\t      for (var i = 0, ii = strings.length; i < ii; ++i) {\n\t       stringIndex.add(stringToBytes(strings[i]));\n\t      }\n\t      return this.compileIndex(stringIndex);\n\t     },\n\t     compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n\t      var globalSubrIndex = this.cff.globalSubrIndex;\n\t      this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n\t     },\n\t     compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n\t      return this.compileIndex(charStrings);\n\t     },\n\t     compileCharset: function CFFCompiler_compileCharset(charset) {\n\t      return this.compileTypedArray(charset.raw);\n\t     },\n\t     compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n\t      return this.compileTypedArray(encoding.raw);\n\t     },\n\t     compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n\t      return this.compileTypedArray(fdSelect);\n\t     },\n\t     compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n\t      var out = [];\n\t      for (var i = 0, ii = data.length; i < ii; ++i) {\n\t       out[i] = data[i];\n\t      }\n\t      return out;\n\t     },\n\t     compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n\t      trackers = trackers || [];\n\t      var objects = index.objects;\n\t      var count = objects.length;\n\t      if (count === 0) {\n\t       return [\n\t        0,\n\t        0,\n\t        0\n\t       ];\n\t      }\n\t      var data = [\n\t       count >> 8 & 0xFF,\n\t       count & 0xff\n\t      ];\n\t      var lastOffset = 1, i;\n\t      for (i = 0; i < count; ++i) {\n\t       lastOffset += objects[i].length;\n\t      }\n\t      var offsetSize;\n\t      if (lastOffset < 0x100) {\n\t       offsetSize = 1;\n\t      } else if (lastOffset < 0x10000) {\n\t       offsetSize = 2;\n\t      } else if (lastOffset < 0x1000000) {\n\t       offsetSize = 3;\n\t      } else {\n\t       offsetSize = 4;\n\t      }\n\t      data.push(offsetSize);\n\t      var relativeOffset = 1;\n\t      for (i = 0; i < count + 1; i++) {\n\t       if (offsetSize === 1) {\n\t        data.push(relativeOffset & 0xFF);\n\t       } else if (offsetSize === 2) {\n\t        data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n\t       } else if (offsetSize === 3) {\n\t        data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n\t       } else {\n\t        data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n\t       }\n\t       if (objects[i]) {\n\t        relativeOffset += objects[i].length;\n\t       }\n\t      }\n\t      for (i = 0; i < count; i++) {\n\t       if (trackers[i]) {\n\t        trackers[i].offset(data.length);\n\t       }\n\t       for (var j = 0, jj = objects[i].length; j < jj; j++) {\n\t        data.push(objects[i][j]);\n\t       }\n\t      }\n\t      return data;\n\t     }\n\t    };\n\t    return CFFCompiler;\n\t   }();\n\t   exports.CFFStandardStrings = CFFStandardStrings;\n\t   exports.CFFParser = CFFParser;\n\t   exports.CFF = CFF;\n\t   exports.CFFHeader = CFFHeader;\n\t   exports.CFFStrings = CFFStrings;\n\t   exports.CFFIndex = CFFIndex;\n\t   exports.CFFCharset = CFFCharset;\n\t   exports.CFFTopDict = CFFTopDict;\n\t   exports.CFFPrivateDict = CFFPrivateDict;\n\t   exports.CFFCompiler = CFFCompiler;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCoreChunkedStream = {}, root.pdfjsSharedUtil);\n\t  }(this, function (exports, sharedUtil) {\n\t   var MissingDataException = sharedUtil.MissingDataException;\n\t   var arrayByteLength = sharedUtil.arrayByteLength;\n\t   var arraysToBytes = sharedUtil.arraysToBytes;\n\t   var assert = sharedUtil.assert;\n\t   var createPromiseCapability = sharedUtil.createPromiseCapability;\n\t   var isInt = sharedUtil.isInt;\n\t   var isEmptyObj = sharedUtil.isEmptyObj;\n\t   var ChunkedStream = function ChunkedStreamClosure() {\n\t    function ChunkedStream(length, chunkSize, manager) {\n\t     this.bytes = new Uint8Array(length);\n\t     this.start = 0;\n\t     this.pos = 0;\n\t     this.end = length;\n\t     this.chunkSize = chunkSize;\n\t     this.loadedChunks = [];\n\t     this.numChunksLoaded = 0;\n\t     this.numChunks = Math.ceil(length / chunkSize);\n\t     this.manager = manager;\n\t     this.progressiveDataLength = 0;\n\t     this.lastSuccessfulEnsureByteChunk = -1;\n\t    }\n\t    ChunkedStream.prototype = {\n\t     getMissingChunks: function ChunkedStream_getMissingChunks() {\n\t      var chunks = [];\n\t      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n\t       if (!this.loadedChunks[chunk]) {\n\t        chunks.push(chunk);\n\t       }\n\t      }\n\t      return chunks;\n\t     },\n\t     getBaseStreams: function ChunkedStream_getBaseStreams() {\n\t      return [this];\n\t     },\n\t     allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n\t      return this.numChunksLoaded === this.numChunks;\n\t     },\n\t     onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n\t      var end = begin + chunk.byteLength;\n\t      assert(begin % this.chunkSize === 0, 'Bad begin offset: ' + begin);\n\t      var length = this.bytes.length;\n\t      assert(end % this.chunkSize === 0 || end === length, 'Bad end offset: ' + end);\n\t      this.bytes.set(new Uint8Array(chunk), begin);\n\t      var chunkSize = this.chunkSize;\n\t      var beginChunk = Math.floor(begin / chunkSize);\n\t      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n\t      var curChunk;\n\t      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n\t       if (!this.loadedChunks[curChunk]) {\n\t        this.loadedChunks[curChunk] = true;\n\t        ++this.numChunksLoaded;\n\t       }\n\t      }\n\t     },\n\t     onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\n\t      var position = this.progressiveDataLength;\n\t      var beginChunk = Math.floor(position / this.chunkSize);\n\t      this.bytes.set(new Uint8Array(data), position);\n\t      position += data.byteLength;\n\t      this.progressiveDataLength = position;\n\t      var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n\t      var curChunk;\n\t      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n\t       if (!this.loadedChunks[curChunk]) {\n\t        this.loadedChunks[curChunk] = true;\n\t        ++this.numChunksLoaded;\n\t       }\n\t      }\n\t     },\n\t     ensureByte: function ChunkedStream_ensureByte(pos) {\n\t      var chunk = Math.floor(pos / this.chunkSize);\n\t      if (chunk === this.lastSuccessfulEnsureByteChunk) {\n\t       return;\n\t      }\n\t      if (!this.loadedChunks[chunk]) {\n\t       throw new MissingDataException(pos, pos + 1);\n\t      }\n\t      this.lastSuccessfulEnsureByteChunk = chunk;\n\t     },\n\t     ensureRange: function ChunkedStream_ensureRange(begin, end) {\n\t      if (begin >= end) {\n\t       return;\n\t      }\n\t      if (end <= this.progressiveDataLength) {\n\t       return;\n\t      }\n\t      var chunkSize = this.chunkSize;\n\t      var beginChunk = Math.floor(begin / chunkSize);\n\t      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n\t      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n\t       if (!this.loadedChunks[chunk]) {\n\t        throw new MissingDataException(begin, end);\n\t       }\n\t      }\n\t     },\n\t     nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n\t      var chunk, numChunks = this.numChunks;\n\t      for (var i = 0; i < numChunks; ++i) {\n\t       chunk = (beginChunk + i) % numChunks;\n\t       if (!this.loadedChunks[chunk]) {\n\t        return chunk;\n\t       }\n\t      }\n\t      return null;\n\t     },\n\t     hasChunk: function ChunkedStream_hasChunk(chunk) {\n\t      return !!this.loadedChunks[chunk];\n\t     },\n\t     get length() {\n\t      return this.end - this.start;\n\t     },\n\t     get isEmpty() {\n\t      return this.length === 0;\n\t     },\n\t     getByte: function ChunkedStream_getByte() {\n\t      var pos = this.pos;\n\t      if (pos >= this.end) {\n\t       return -1;\n\t      }\n\t      this.ensureByte(pos);\n\t      return this.bytes[this.pos++];\n\t     },\n\t     getUint16: function ChunkedStream_getUint16() {\n\t      var b0 = this.getByte();\n\t      var b1 = this.getByte();\n\t      if (b0 === -1 || b1 === -1) {\n\t       return -1;\n\t      }\n\t      return (b0 << 8) + b1;\n\t     },\n\t     getInt32: function ChunkedStream_getInt32() {\n\t      var b0 = this.getByte();\n\t      var b1 = this.getByte();\n\t      var b2 = this.getByte();\n\t      var b3 = this.getByte();\n\t      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n\t     },\n\t     getBytes: function ChunkedStream_getBytes(length) {\n\t      var bytes = this.bytes;\n\t      var pos = this.pos;\n\t      var strEnd = this.end;\n\t      if (!length) {\n\t       this.ensureRange(pos, strEnd);\n\t       return bytes.subarray(pos, strEnd);\n\t      }\n\t      var end = pos + length;\n\t      if (end > strEnd) {\n\t       end = strEnd;\n\t      }\n\t      this.ensureRange(pos, end);\n\t      this.pos = end;\n\t      return bytes.subarray(pos, end);\n\t     },\n\t     peekByte: function ChunkedStream_peekByte() {\n\t      var peekedByte = this.getByte();\n\t      this.pos--;\n\t      return peekedByte;\n\t     },\n\t     peekBytes: function ChunkedStream_peekBytes(length) {\n\t      var bytes = this.getBytes(length);\n\t      this.pos -= bytes.length;\n\t      return bytes;\n\t     },\n\t     getByteRange: function ChunkedStream_getBytes(begin, end) {\n\t      this.ensureRange(begin, end);\n\t      return this.bytes.subarray(begin, end);\n\t     },\n\t     skip: function ChunkedStream_skip(n) {\n\t      if (!n) {\n\t       n = 1;\n\t      }\n\t      this.pos += n;\n\t     },\n\t     reset: function ChunkedStream_reset() {\n\t      this.pos = this.start;\n\t     },\n\t     moveStart: function ChunkedStream_moveStart() {\n\t      this.start = this.pos;\n\t     },\n\t     makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n\t      this.ensureRange(start, start + length);\n\t      function ChunkedStreamSubstream() {\n\t      }\n\t      ChunkedStreamSubstream.prototype = Object.create(this);\n\t      ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n\t       var chunkSize = this.chunkSize;\n\t       var beginChunk = Math.floor(this.start / chunkSize);\n\t       var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n\t       var missingChunks = [];\n\t       for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n\t        if (!this.loadedChunks[chunk]) {\n\t         missingChunks.push(chunk);\n\t        }\n\t       }\n\t       return missingChunks;\n\t      };\n\t      var subStream = new ChunkedStreamSubstream();\n\t      subStream.pos = subStream.start = start;\n\t      subStream.end = start + length || this.end;\n\t      subStream.dict = dict;\n\t      return subStream;\n\t     },\n\t     isStream: true\n\t    };\n\t    return ChunkedStream;\n\t   }();\n\t   var ChunkedStreamManager = function ChunkedStreamManagerClosure() {\n\t    function ChunkedStreamManager(pdfNetworkStream, args) {\n\t     var chunkSize = args.rangeChunkSize;\n\t     var length = args.length;\n\t     this.stream = new ChunkedStream(length, chunkSize, this);\n\t     this.length = length;\n\t     this.chunkSize = chunkSize;\n\t     this.pdfNetworkStream = pdfNetworkStream;\n\t     this.url = args.url;\n\t     this.disableAutoFetch = args.disableAutoFetch;\n\t     this.msgHandler = args.msgHandler;\n\t     this.currRequestId = 0;\n\t     this.chunksNeededByRequest = Object.create(null);\n\t     this.requestsByChunk = Object.create(null);\n\t     this.promisesByRequest = Object.create(null);\n\t     this.progressiveDataLength = 0;\n\t     this.aborted = false;\n\t     this._loadedStreamCapability = createPromiseCapability();\n\t    }\n\t    ChunkedStreamManager.prototype = {\n\t     onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n\t      return this._loadedStreamCapability.promise;\n\t     },\n\t     sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\n\t      var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n\t      if (!rangeReader.isStreamingSupported) {\n\t       rangeReader.onProgress = this.onProgress.bind(this);\n\t      }\n\t      var chunks = [], loaded = 0;\n\t      var manager = this;\n\t      var promise = new Promise(function (resolve, reject) {\n\t       var readChunk = function (chunk) {\n\t        try {\n\t         if (!chunk.done) {\n\t          var data = chunk.value;\n\t          chunks.push(data);\n\t          loaded += arrayByteLength(data);\n\t          if (rangeReader.isStreamingSupported) {\n\t           manager.onProgress({ loaded: loaded });\n\t          }\n\t          rangeReader.read().then(readChunk, reject);\n\t          return;\n\t         }\n\t         var chunkData = arraysToBytes(chunks);\n\t         chunks = null;\n\t         resolve(chunkData);\n\t        } catch (e) {\n\t         reject(e);\n\t        }\n\t       };\n\t       rangeReader.read().then(readChunk, reject);\n\t      });\n\t      promise.then(function (data) {\n\t       if (this.aborted) {\n\t        return;\n\t       }\n\t       this.onReceiveData({\n\t        chunk: data,\n\t        begin: begin\n\t       });\n\t      }.bind(this));\n\t     },\n\t     requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n\t      var missingChunks = this.stream.getMissingChunks();\n\t      this._requestChunks(missingChunks);\n\t      return this._loadedStreamCapability.promise;\n\t     },\n\t     _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\n\t      var requestId = this.currRequestId++;\n\t      var i, ii;\n\t      var chunksNeeded = Object.create(null);\n\t      this.chunksNeededByRequest[requestId] = chunksNeeded;\n\t      for (i = 0, ii = chunks.length; i < ii; i++) {\n\t       if (!this.stream.hasChunk(chunks[i])) {\n\t        chunksNeeded[chunks[i]] = true;\n\t       }\n\t      }\n\t      if (isEmptyObj(chunksNeeded)) {\n\t       return Promise.resolve();\n\t      }\n\t      var capability = createPromiseCapability();\n\t      this.promisesByRequest[requestId] = capability;\n\t      var chunksToRequest = [];\n\t      for (var chunk in chunksNeeded) {\n\t       chunk = chunk | 0;\n\t       if (!(chunk in this.requestsByChunk)) {\n\t        this.requestsByChunk[chunk] = [];\n\t        chunksToRequest.push(chunk);\n\t       }\n\t       this.requestsByChunk[chunk].push(requestId);\n\t      }\n\t      if (!chunksToRequest.length) {\n\t       return capability.promise;\n\t      }\n\t      var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n\t      for (i = 0; i < groupedChunksToRequest.length; ++i) {\n\t       var groupedChunk = groupedChunksToRequest[i];\n\t       var begin = groupedChunk.beginChunk * this.chunkSize;\n\t       var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n\t       this.sendRequest(begin, end);\n\t      }\n\t      return capability.promise;\n\t     },\n\t     getStream: function ChunkedStreamManager_getStream() {\n\t      return this.stream;\n\t     },\n\t     requestRange: function ChunkedStreamManager_requestRange(begin, end) {\n\t      end = Math.min(end, this.length);\n\t      var beginChunk = this.getBeginChunk(begin);\n\t      var endChunk = this.getEndChunk(end);\n\t      var chunks = [];\n\t      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n\t       chunks.push(chunk);\n\t      }\n\t      return this._requestChunks(chunks);\n\t     },\n\t     requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\n\t      ranges = ranges || [];\n\t      var chunksToRequest = [];\n\t      for (var i = 0; i < ranges.length; i++) {\n\t       var beginChunk = this.getBeginChunk(ranges[i].begin);\n\t       var endChunk = this.getEndChunk(ranges[i].end);\n\t       for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n\t        if (chunksToRequest.indexOf(chunk) < 0) {\n\t         chunksToRequest.push(chunk);\n\t        }\n\t       }\n\t      }\n\t      chunksToRequest.sort(function (a, b) {\n\t       return a - b;\n\t      });\n\t      return this._requestChunks(chunksToRequest);\n\t     },\n\t     groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n\t      var groupedChunks = [];\n\t      var beginChunk = -1;\n\t      var prevChunk = -1;\n\t      for (var i = 0; i < chunks.length; ++i) {\n\t       var chunk = chunks[i];\n\t       if (beginChunk < 0) {\n\t        beginChunk = chunk;\n\t       }\n\t       if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n\t        groupedChunks.push({\n\t         beginChunk: beginChunk,\n\t         endChunk: prevChunk + 1\n\t        });\n\t        beginChunk = chunk;\n\t       }\n\t       if (i + 1 === chunks.length) {\n\t        groupedChunks.push({\n\t         beginChunk: beginChunk,\n\t         endChunk: chunk + 1\n\t        });\n\t       }\n\t       prevChunk = chunk;\n\t      }\n\t      return groupedChunks;\n\t     },\n\t     onProgress: function ChunkedStreamManager_onProgress(args) {\n\t      var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\n\t      this.msgHandler.send('DocProgress', {\n\t       loaded: bytesLoaded,\n\t       total: this.length\n\t      });\n\t     },\n\t     onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n\t      var chunk = args.chunk;\n\t      var isProgressive = args.begin === undefined;\n\t      var begin = isProgressive ? this.progressiveDataLength : args.begin;\n\t      var end = begin + chunk.byteLength;\n\t      var beginChunk = Math.floor(begin / this.chunkSize);\n\t      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n\t      if (isProgressive) {\n\t       this.stream.onReceiveProgressiveData(chunk);\n\t       this.progressiveDataLength = end;\n\t      } else {\n\t       this.stream.onReceiveData(begin, chunk);\n\t      }\n\t      if (this.stream.allChunksLoaded()) {\n\t       this._loadedStreamCapability.resolve(this.stream);\n\t      }\n\t      var loadedRequests = [];\n\t      var i, requestId;\n\t      for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n\t       var requestIds = this.requestsByChunk[chunk] || [];\n\t       delete this.requestsByChunk[chunk];\n\t       for (i = 0; i < requestIds.length; ++i) {\n\t        requestId = requestIds[i];\n\t        var chunksNeeded = this.chunksNeededByRequest[requestId];\n\t        if (chunk in chunksNeeded) {\n\t         delete chunksNeeded[chunk];\n\t        }\n\t        if (!isEmptyObj(chunksNeeded)) {\n\t         continue;\n\t        }\n\t        loadedRequests.push(requestId);\n\t       }\n\t      }\n\t      if (!this.disableAutoFetch && isEmptyObj(this.requestsByChunk)) {\n\t       var nextEmptyChunk;\n\t       if (this.stream.numChunksLoaded === 1) {\n\t        var lastChunk = this.stream.numChunks - 1;\n\t        if (!this.stream.hasChunk(lastChunk)) {\n\t         nextEmptyChunk = lastChunk;\n\t        }\n\t       } else {\n\t        nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n\t       }\n\t       if (isInt(nextEmptyChunk)) {\n\t        this._requestChunks([nextEmptyChunk]);\n\t       }\n\t      }\n\t      for (i = 0; i < loadedRequests.length; ++i) {\n\t       requestId = loadedRequests[i];\n\t       var capability = this.promisesByRequest[requestId];\n\t       delete this.promisesByRequest[requestId];\n\t       capability.resolve();\n\t      }\n\t      this.msgHandler.send('DocProgress', {\n\t       loaded: this.stream.numChunksLoaded * this.chunkSize,\n\t       total: this.length\n\t      });\n\t     },\n\t     onError: function ChunkedStreamManager_onError(err) {\n\t      this._loadedStreamCapability.reject(err);\n\t     },\n\t     getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n\t      var chunk = Math.floor(begin / this.chunkSize);\n\t      return chunk;\n\t     },\n\t     getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n\t      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n\t      return chunk;\n\t     },\n\t     abort: function ChunkedStreamManager_abort() {\n\t      this.aborted = true;\n\t      if (this.pdfNetworkStream) {\n\t       this.pdfNetworkStream.cancelAllRequests('abort');\n\t      }\n\t      for (var requestId in this.promisesByRequest) {\n\t       var capability = this.promisesByRequest[requestId];\n\t       capability.reject(new Error('Request was aborted'));\n\t      }\n\t     }\n\t    };\n\t    return ChunkedStreamManager;\n\t   }();\n\t   exports.ChunkedStream = ChunkedStream;\n\t   exports.ChunkedStreamManager = ChunkedStreamManager;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCoreGlyphList = {}, root.pdfjsSharedUtil);\n\t  }(this, function (exports, sharedUtil) {\n\t   var getLookupTableFactory = sharedUtil.getLookupTableFactory;\n\t   var getGlyphsUnicode = getLookupTableFactory(function (t) {\n\t    t['A'] = 0x0041;\n\t    t['AE'] = 0x00C6;\n\t    t['AEacute'] = 0x01FC;\n\t    t['AEmacron'] = 0x01E2;\n\t    t['AEsmall'] = 0xF7E6;\n\t    t['Aacute'] = 0x00C1;\n\t    t['Aacutesmall'] = 0xF7E1;\n\t    t['Abreve'] = 0x0102;\n\t    t['Abreveacute'] = 0x1EAE;\n\t    t['Abrevecyrillic'] = 0x04D0;\n\t    t['Abrevedotbelow'] = 0x1EB6;\n\t    t['Abrevegrave'] = 0x1EB0;\n\t    t['Abrevehookabove'] = 0x1EB2;\n\t    t['Abrevetilde'] = 0x1EB4;\n\t    t['Acaron'] = 0x01CD;\n\t    t['Acircle'] = 0x24B6;\n\t    t['Acircumflex'] = 0x00C2;\n\t    t['Acircumflexacute'] = 0x1EA4;\n\t    t['Acircumflexdotbelow'] = 0x1EAC;\n\t    t['Acircumflexgrave'] = 0x1EA6;\n\t    t['Acircumflexhookabove'] = 0x1EA8;\n\t    t['Acircumflexsmall'] = 0xF7E2;\n\t    t['Acircumflextilde'] = 0x1EAA;\n\t    t['Acute'] = 0xF6C9;\n\t    t['Acutesmall'] = 0xF7B4;\n\t    t['Acyrillic'] = 0x0410;\n\t    t['Adblgrave'] = 0x0200;\n\t    t['Adieresis'] = 0x00C4;\n\t    t['Adieresiscyrillic'] = 0x04D2;\n\t    t['Adieresismacron'] = 0x01DE;\n\t    t['Adieresissmall'] = 0xF7E4;\n\t    t['Adotbelow'] = 0x1EA0;\n\t    t['Adotmacron'] = 0x01E0;\n\t    t['Agrave'] = 0x00C0;\n\t    t['Agravesmall'] = 0xF7E0;\n\t    t['Ahookabove'] = 0x1EA2;\n\t    t['Aiecyrillic'] = 0x04D4;\n\t    t['Ainvertedbreve'] = 0x0202;\n\t    t['Alpha'] = 0x0391;\n\t    t['Alphatonos'] = 0x0386;\n\t    t['Amacron'] = 0x0100;\n\t    t['Amonospace'] = 0xFF21;\n\t    t['Aogonek'] = 0x0104;\n\t    t['Aring'] = 0x00C5;\n\t    t['Aringacute'] = 0x01FA;\n\t    t['Aringbelow'] = 0x1E00;\n\t    t['Aringsmall'] = 0xF7E5;\n\t    t['Asmall'] = 0xF761;\n\t    t['Atilde'] = 0x00C3;\n\t    t['Atildesmall'] = 0xF7E3;\n\t    t['Aybarmenian'] = 0x0531;\n\t    t['B'] = 0x0042;\n\t    t['Bcircle'] = 0x24B7;\n\t    t['Bdotaccent'] = 0x1E02;\n\t    t['Bdotbelow'] = 0x1E04;\n\t    t['Becyrillic'] = 0x0411;\n\t    t['Benarmenian'] = 0x0532;\n\t    t['Beta'] = 0x0392;\n\t    t['Bhook'] = 0x0181;\n\t    t['Blinebelow'] = 0x1E06;\n\t    t['Bmonospace'] = 0xFF22;\n\t    t['Brevesmall'] = 0xF6F4;\n\t    t['Bsmall'] = 0xF762;\n\t    t['Btopbar'] = 0x0182;\n\t    t['C'] = 0x0043;\n\t    t['Caarmenian'] = 0x053E;\n\t    t['Cacute'] = 0x0106;\n\t    t['Caron'] = 0xF6CA;\n\t    t['Caronsmall'] = 0xF6F5;\n\t    t['Ccaron'] = 0x010C;\n\t    t['Ccedilla'] = 0x00C7;\n\t    t['Ccedillaacute'] = 0x1E08;\n\t    t['Ccedillasmall'] = 0xF7E7;\n\t    t['Ccircle'] = 0x24B8;\n\t    t['Ccircumflex'] = 0x0108;\n\t    t['Cdot'] = 0x010A;\n\t    t['Cdotaccent'] = 0x010A;\n\t    t['Cedillasmall'] = 0xF7B8;\n\t    t['Chaarmenian'] = 0x0549;\n\t    t['Cheabkhasiancyrillic'] = 0x04BC;\n\t    t['Checyrillic'] = 0x0427;\n\t    t['Chedescenderabkhasiancyrillic'] = 0x04BE;\n\t    t['Chedescendercyrillic'] = 0x04B6;\n\t    t['Chedieresiscyrillic'] = 0x04F4;\n\t    t['Cheharmenian'] = 0x0543;\n\t    t['Chekhakassiancyrillic'] = 0x04CB;\n\t    t['Cheverticalstrokecyrillic'] = 0x04B8;\n\t    t['Chi'] = 0x03A7;\n\t    t['Chook'] = 0x0187;\n\t    t['Circumflexsmall'] = 0xF6F6;\n\t    t['Cmonospace'] = 0xFF23;\n\t    t['Coarmenian'] = 0x0551;\n\t    t['Csmall'] = 0xF763;\n\t    t['D'] = 0x0044;\n\t    t['DZ'] = 0x01F1;\n\t    t['DZcaron'] = 0x01C4;\n\t    t['Daarmenian'] = 0x0534;\n\t    t['Dafrican'] = 0x0189;\n\t    t['Dcaron'] = 0x010E;\n\t    t['Dcedilla'] = 0x1E10;\n\t    t['Dcircle'] = 0x24B9;\n\t    t['Dcircumflexbelow'] = 0x1E12;\n\t    t['Dcroat'] = 0x0110;\n\t    t['Ddotaccent'] = 0x1E0A;\n\t    t['Ddotbelow'] = 0x1E0C;\n\t    t['Decyrillic'] = 0x0414;\n\t    t['Deicoptic'] = 0x03EE;\n\t    t['Delta'] = 0x2206;\n\t    t['Deltagreek'] = 0x0394;\n\t    t['Dhook'] = 0x018A;\n\t    t['Dieresis'] = 0xF6CB;\n\t    t['DieresisAcute'] = 0xF6CC;\n\t    t['DieresisGrave'] = 0xF6CD;\n\t    t['Dieresissmall'] = 0xF7A8;\n\t    t['Digammagreek'] = 0x03DC;\n\t    t['Djecyrillic'] = 0x0402;\n\t    t['Dlinebelow'] = 0x1E0E;\n\t    t['Dmonospace'] = 0xFF24;\n\t    t['Dotaccentsmall'] = 0xF6F7;\n\t    t['Dslash'] = 0x0110;\n\t    t['Dsmall'] = 0xF764;\n\t    t['Dtopbar'] = 0x018B;\n\t    t['Dz'] = 0x01F2;\n\t    t['Dzcaron'] = 0x01C5;\n\t    t['Dzeabkhasiancyrillic'] = 0x04E0;\n\t    t['Dzecyrillic'] = 0x0405;\n\t    t['Dzhecyrillic'] = 0x040F;\n\t    t['E'] = 0x0045;\n\t    t['Eacute'] = 0x00C9;\n\t    t['Eacutesmall'] = 0xF7E9;\n\t    t['Ebreve'] = 0x0114;\n\t    t['Ecaron'] = 0x011A;\n\t    t['Ecedillabreve'] = 0x1E1C;\n\t    t['Echarmenian'] = 0x0535;\n\t    t['Ecircle'] = 0x24BA;\n\t    t['Ecircumflex'] = 0x00CA;\n\t    t['Ecircumflexacute'] = 0x1EBE;\n\t    t['Ecircumflexbelow'] = 0x1E18;\n\t    t['Ecircumflexdotbelow'] = 0x1EC6;\n\t    t['Ecircumflexgrave'] = 0x1EC0;\n\t    t['Ecircumflexhookabove'] = 0x1EC2;\n\t    t['Ecircumflexsmall'] = 0xF7EA;\n\t    t['Ecircumflextilde'] = 0x1EC4;\n\t    t['Ecyrillic'] = 0x0404;\n\t    t['Edblgrave'] = 0x0204;\n\t    t['Edieresis'] = 0x00CB;\n\t    t['Edieresissmall'] = 0xF7EB;\n\t    t['Edot'] = 0x0116;\n\t    t['Edotaccent'] = 0x0116;\n\t    t['Edotbelow'] = 0x1EB8;\n\t    t['Efcyrillic'] = 0x0424;\n\t    t['Egrave'] = 0x00C8;\n\t    t['Egravesmall'] = 0xF7E8;\n\t    t['Eharmenian'] = 0x0537;\n\t    t['Ehookabove'] = 0x1EBA;\n\t    t['Eightroman'] = 0x2167;\n\t    t['Einvertedbreve'] = 0x0206;\n\t    t['Eiotifiedcyrillic'] = 0x0464;\n\t    t['Elcyrillic'] = 0x041B;\n\t    t['Elevenroman'] = 0x216A;\n\t    t['Emacron'] = 0x0112;\n\t    t['Emacronacute'] = 0x1E16;\n\t    t['Emacrongrave'] = 0x1E14;\n\t    t['Emcyrillic'] = 0x041C;\n\t    t['Emonospace'] = 0xFF25;\n\t    t['Encyrillic'] = 0x041D;\n\t    t['Endescendercyrillic'] = 0x04A2;\n\t    t['Eng'] = 0x014A;\n\t    t['Enghecyrillic'] = 0x04A4;\n\t    t['Enhookcyrillic'] = 0x04C7;\n\t    t['Eogonek'] = 0x0118;\n\t    t['Eopen'] = 0x0190;\n\t    t['Epsilon'] = 0x0395;\n\t    t['Epsilontonos'] = 0x0388;\n\t    t['Ercyrillic'] = 0x0420;\n\t    t['Ereversed'] = 0x018E;\n\t    t['Ereversedcyrillic'] = 0x042D;\n\t    t['Escyrillic'] = 0x0421;\n\t    t['Esdescendercyrillic'] = 0x04AA;\n\t    t['Esh'] = 0x01A9;\n\t    t['Esmall'] = 0xF765;\n\t    t['Eta'] = 0x0397;\n\t    t['Etarmenian'] = 0x0538;\n\t    t['Etatonos'] = 0x0389;\n\t    t['Eth'] = 0x00D0;\n\t    t['Ethsmall'] = 0xF7F0;\n\t    t['Etilde'] = 0x1EBC;\n\t    t['Etildebelow'] = 0x1E1A;\n\t    t['Euro'] = 0x20AC;\n\t    t['Ezh'] = 0x01B7;\n\t    t['Ezhcaron'] = 0x01EE;\n\t    t['Ezhreversed'] = 0x01B8;\n\t    t['F'] = 0x0046;\n\t    t['Fcircle'] = 0x24BB;\n\t    t['Fdotaccent'] = 0x1E1E;\n\t    t['Feharmenian'] = 0x0556;\n\t    t['Feicoptic'] = 0x03E4;\n\t    t['Fhook'] = 0x0191;\n\t    t['Fitacyrillic'] = 0x0472;\n\t    t['Fiveroman'] = 0x2164;\n\t    t['Fmonospace'] = 0xFF26;\n\t    t['Fourroman'] = 0x2163;\n\t    t['Fsmall'] = 0xF766;\n\t    t['G'] = 0x0047;\n\t    t['GBsquare'] = 0x3387;\n\t    t['Gacute'] = 0x01F4;\n\t    t['Gamma'] = 0x0393;\n\t    t['Gammaafrican'] = 0x0194;\n\t    t['Gangiacoptic'] = 0x03EA;\n\t    t['Gbreve'] = 0x011E;\n\t    t['Gcaron'] = 0x01E6;\n\t    t['Gcedilla'] = 0x0122;\n\t    t['Gcircle'] = 0x24BC;\n\t    t['Gcircumflex'] = 0x011C;\n\t    t['Gcommaaccent'] = 0x0122;\n\t    t['Gdot'] = 0x0120;\n\t    t['Gdotaccent'] = 0x0120;\n\t    t['Gecyrillic'] = 0x0413;\n\t    t['Ghadarmenian'] = 0x0542;\n\t    t['Ghemiddlehookcyrillic'] = 0x0494;\n\t    t['Ghestrokecyrillic'] = 0x0492;\n\t    t['Gheupturncyrillic'] = 0x0490;\n\t    t['Ghook'] = 0x0193;\n\t    t['Gimarmenian'] = 0x0533;\n\t    t['Gjecyrillic'] = 0x0403;\n\t    t['Gmacron'] = 0x1E20;\n\t    t['Gmonospace'] = 0xFF27;\n\t    t['Grave'] = 0xF6CE;\n\t    t['Gravesmall'] = 0xF760;\n\t    t['Gsmall'] = 0xF767;\n\t    t['Gsmallhook'] = 0x029B;\n\t    t['Gstroke'] = 0x01E4;\n\t    t['H'] = 0x0048;\n\t    t['H18533'] = 0x25CF;\n\t    t['H18543'] = 0x25AA;\n\t    t['H18551'] = 0x25AB;\n\t    t['H22073'] = 0x25A1;\n\t    t['HPsquare'] = 0x33CB;\n\t    t['Haabkhasiancyrillic'] = 0x04A8;\n\t    t['Hadescendercyrillic'] = 0x04B2;\n\t    t['Hardsigncyrillic'] = 0x042A;\n\t    t['Hbar'] = 0x0126;\n\t    t['Hbrevebelow'] = 0x1E2A;\n\t    t['Hcedilla'] = 0x1E28;\n\t    t['Hcircle'] = 0x24BD;\n\t    t['Hcircumflex'] = 0x0124;\n\t    t['Hdieresis'] = 0x1E26;\n\t    t['Hdotaccent'] = 0x1E22;\n\t    t['Hdotbelow'] = 0x1E24;\n\t    t['Hmonospace'] = 0xFF28;\n\t    t['Hoarmenian'] = 0x0540;\n\t    t['Horicoptic'] = 0x03E8;\n\t    t['Hsmall'] = 0xF768;\n\t    t['Hungarumlaut'] = 0xF6CF;\n\t    t['Hungarumlautsmall'] = 0xF6F8;\n\t    t['Hzsquare'] = 0x3390;\n\t    t['I'] = 0x0049;\n\t    t['IAcyrillic'] = 0x042F;\n\t    t['IJ'] = 0x0132;\n\t    t['IUcyrillic'] = 0x042E;\n\t    t['Iacute'] = 0x00CD;\n\t    t['Iacutesmall'] = 0xF7ED;\n\t    t['Ibreve'] = 0x012C;\n\t    t['Icaron'] = 0x01CF;\n\t    t['Icircle'] = 0x24BE;\n\t    t['Icircumflex'] = 0x00CE;\n\t    t['Icircumflexsmall'] = 0xF7EE;\n\t    t['Icyrillic'] = 0x0406;\n\t    t['Idblgrave'] = 0x0208;\n\t    t['Idieresis'] = 0x00CF;\n\t    t['Idieresisacute'] = 0x1E2E;\n\t    t['Idieresiscyrillic'] = 0x04E4;\n\t    t['Idieresissmall'] = 0xF7EF;\n\t    t['Idot'] = 0x0130;\n\t    t['Idotaccent'] = 0x0130;\n\t    t['Idotbelow'] = 0x1ECA;\n\t    t['Iebrevecyrillic'] = 0x04D6;\n\t    t['Iecyrillic'] = 0x0415;\n\t    t['Ifraktur'] = 0x2111;\n\t    t['Igrave'] = 0x00CC;\n\t    t['Igravesmall'] = 0xF7EC;\n\t    t['Ihookabove'] = 0x1EC8;\n\t    t['Iicyrillic'] = 0x0418;\n\t    t['Iinvertedbreve'] = 0x020A;\n\t    t['Iishortcyrillic'] = 0x0419;\n\t    t['Imacron'] = 0x012A;\n\t    t['Imacroncyrillic'] = 0x04E2;\n\t    t['Imonospace'] = 0xFF29;\n\t    t['Iniarmenian'] = 0x053B;\n\t    t['Iocyrillic'] = 0x0401;\n\t    t['Iogonek'] = 0x012E;\n\t    t['Iota'] = 0x0399;\n\t    t['Iotaafrican'] = 0x0196;\n\t    t['Iotadieresis'] = 0x03AA;\n\t    t['Iotatonos'] = 0x038A;\n\t    t['Ismall'] = 0xF769;\n\t    t['Istroke'] = 0x0197;\n\t    t['Itilde'] = 0x0128;\n\t    t['Itildebelow'] = 0x1E2C;\n\t    t['Izhitsacyrillic'] = 0x0474;\n\t    t['Izhitsadblgravecyrillic'] = 0x0476;\n\t    t['J'] = 0x004A;\n\t    t['Jaarmenian'] = 0x0541;\n\t    t['Jcircle'] = 0x24BF;\n\t    t['Jcircumflex'] = 0x0134;\n\t    t['Jecyrillic'] = 0x0408;\n\t    t['Jheharmenian'] = 0x054B;\n\t    t['Jmonospace'] = 0xFF2A;\n\t    t['Jsmall'] = 0xF76A;\n\t    t['K'] = 0x004B;\n\t    t['KBsquare'] = 0x3385;\n\t    t['KKsquare'] = 0x33CD;\n\t    t['Kabashkircyrillic'] = 0x04A0;\n\t    t['Kacute'] = 0x1E30;\n\t    t['Kacyrillic'] = 0x041A;\n\t    t['Kadescendercyrillic'] = 0x049A;\n\t    t['Kahookcyrillic'] = 0x04C3;\n\t    t['Kappa'] = 0x039A;\n\t    t['Kastrokecyrillic'] = 0x049E;\n\t    t['Kaverticalstrokecyrillic'] = 0x049C;\n\t    t['Kcaron'] = 0x01E8;\n\t    t['Kcedilla'] = 0x0136;\n\t    t['Kcircle'] = 0x24C0;\n\t    t['Kcommaaccent'] = 0x0136;\n\t    t['Kdotbelow'] = 0x1E32;\n\t    t['Keharmenian'] = 0x0554;\n\t    t['Kenarmenian'] = 0x053F;\n\t    t['Khacyrillic'] = 0x0425;\n\t    t['Kheicoptic'] = 0x03E6;\n\t    t['Khook'] = 0x0198;\n\t    t['Kjecyrillic'] = 0x040C;\n\t    t['Klinebelow'] = 0x1E34;\n\t    t['Kmonospace'] = 0xFF2B;\n\t    t['Koppacyrillic'] = 0x0480;\n\t    t['Koppagreek'] = 0x03DE;\n\t    t['Ksicyrillic'] = 0x046E;\n\t    t['Ksmall'] = 0xF76B;\n\t    t['L'] = 0x004C;\n\t    t['LJ'] = 0x01C7;\n\t    t['LL'] = 0xF6BF;\n\t    t['Lacute'] = 0x0139;\n\t    t['Lambda'] = 0x039B;\n\t    t['Lcaron'] = 0x013D;\n\t    t['Lcedilla'] = 0x013B;\n\t    t['Lcircle'] = 0x24C1;\n\t    t['Lcircumflexbelow'] = 0x1E3C;\n\t    t['Lcommaaccent'] = 0x013B;\n\t    t['Ldot'] = 0x013F;\n\t    t['Ldotaccent'] = 0x013F;\n\t    t['Ldotbelow'] = 0x1E36;\n\t    t['Ldotbelowmacron'] = 0x1E38;\n\t    t['Liwnarmenian'] = 0x053C;\n\t    t['Lj'] = 0x01C8;\n\t    t['Ljecyrillic'] = 0x0409;\n\t    t['Llinebelow'] = 0x1E3A;\n\t    t['Lmonospace'] = 0xFF2C;\n\t    t['Lslash'] = 0x0141;\n\t    t['Lslashsmall'] = 0xF6F9;\n\t    t['Lsmall'] = 0xF76C;\n\t    t['M'] = 0x004D;\n\t    t['MBsquare'] = 0x3386;\n\t    t['Macron'] = 0xF6D0;\n\t    t['Macronsmall'] = 0xF7AF;\n\t    t['Macute'] = 0x1E3E;\n\t    t['Mcircle'] = 0x24C2;\n\t    t['Mdotaccent'] = 0x1E40;\n\t    t['Mdotbelow'] = 0x1E42;\n\t    t['Menarmenian'] = 0x0544;\n\t    t['Mmonospace'] = 0xFF2D;\n\t    t['Msmall'] = 0xF76D;\n\t    t['Mturned'] = 0x019C;\n\t    t['Mu'] = 0x039C;\n\t    t['N'] = 0x004E;\n\t    t['NJ'] = 0x01CA;\n\t    t['Nacute'] = 0x0143;\n\t    t['Ncaron'] = 0x0147;\n\t    t['Ncedilla'] = 0x0145;\n\t    t['Ncircle'] = 0x24C3;\n\t    t['Ncircumflexbelow'] = 0x1E4A;\n\t    t['Ncommaaccent'] = 0x0145;\n\t    t['Ndotaccent'] = 0x1E44;\n\t    t['Ndotbelow'] = 0x1E46;\n\t    t['Nhookleft'] = 0x019D;\n\t    t['Nineroman'] = 0x2168;\n\t    t['Nj'] = 0x01CB;\n\t    t['Njecyrillic'] = 0x040A;\n\t    t['Nlinebelow'] = 0x1E48;\n\t    t['Nmonospace'] = 0xFF2E;\n\t    t['Nowarmenian'] = 0x0546;\n\t    t['Nsmall'] = 0xF76E;\n\t    t['Ntilde'] = 0x00D1;\n\t    t['Ntildesmall'] = 0xF7F1;\n\t    t['Nu'] = 0x039D;\n\t    t['O'] = 0x004F;\n\t    t['OE'] = 0x0152;\n\t    t['OEsmall'] = 0xF6FA;\n\t    t['Oacute'] = 0x00D3;\n\t    t['Oacutesmall'] = 0xF7F3;\n\t    t['Obarredcyrillic'] = 0x04E8;\n\t    t['Obarreddieresiscyrillic'] = 0x04EA;\n\t    t['Obreve'] = 0x014E;\n\t    t['Ocaron'] = 0x01D1;\n\t    t['Ocenteredtilde'] = 0x019F;\n\t    t['Ocircle'] = 0x24C4;\n\t    t['Ocircumflex'] = 0x00D4;\n\t    t['Ocircumflexacute'] = 0x1ED0;\n\t    t['Ocircumflexdotbelow'] = 0x1ED8;\n\t    t['Ocircumflexgrave'] = 0x1ED2;\n\t    t['Ocircumflexhookabove'] = 0x1ED4;\n\t    t['Ocircumflexsmall'] = 0xF7F4;\n\t    t['Ocircumflextilde'] = 0x1ED6;\n\t    t['Ocyrillic'] = 0x041E;\n\t    t['Odblacute'] = 0x0150;\n\t    t['Odblgrave'] = 0x020C;\n\t    t['Odieresis'] = 0x00D6;\n\t    t['Odieresiscyrillic'] = 0x04E6;\n\t    t['Odieresissmall'] = 0xF7F6;\n\t    t['Odotbelow'] = 0x1ECC;\n\t    t['Ogoneksmall'] = 0xF6FB;\n\t    t['Ograve'] = 0x00D2;\n\t    t['Ogravesmall'] = 0xF7F2;\n\t    t['Oharmenian'] = 0x0555;\n\t    t['Ohm'] = 0x2126;\n\t    t['Ohookabove'] = 0x1ECE;\n\t    t['Ohorn'] = 0x01A0;\n\t    t['Ohornacute'] = 0x1EDA;\n\t    t['Ohorndotbelow'] = 0x1EE2;\n\t    t['Ohorngrave'] = 0x1EDC;\n\t    t['Ohornhookabove'] = 0x1EDE;\n\t    t['Ohorntilde'] = 0x1EE0;\n\t    t['Ohungarumlaut'] = 0x0150;\n\t    t['Oi'] = 0x01A2;\n\t    t['Oinvertedbreve'] = 0x020E;\n\t    t['Omacron'] = 0x014C;\n\t    t['Omacronacute'] = 0x1E52;\n\t    t['Omacrongrave'] = 0x1E50;\n\t    t['Omega'] = 0x2126;\n\t    t['Omegacyrillic'] = 0x0460;\n\t    t['Omegagreek'] = 0x03A9;\n\t    t['Omegaroundcyrillic'] = 0x047A;\n\t    t['Omegatitlocyrillic'] = 0x047C;\n\t    t['Omegatonos'] = 0x038F;\n\t    t['Omicron'] = 0x039F;\n\t    t['Omicrontonos'] = 0x038C;\n\t    t['Omonospace'] = 0xFF2F;\n\t    t['Oneroman'] = 0x2160;\n\t    t['Oogonek'] = 0x01EA;\n\t    t['Oogonekmacron'] = 0x01EC;\n\t    t['Oopen'] = 0x0186;\n\t    t['Oslash'] = 0x00D8;\n\t    t['Oslashacute'] = 0x01FE;\n\t    t['Oslashsmall'] = 0xF7F8;\n\t    t['Osmall'] = 0xF76F;\n\t    t['Ostrokeacute'] = 0x01FE;\n\t    t['Otcyrillic'] = 0x047E;\n\t    t['Otilde'] = 0x00D5;\n\t    t['Otildeacute'] = 0x1E4C;\n\t    t['Otildedieresis'] = 0x1E4E;\n\t    t['Otildesmall'] = 0xF7F5;\n\t    t['P'] = 0x0050;\n\t    t['Pacute'] = 0x1E54;\n\t    t['Pcircle'] = 0x24C5;\n\t    t['Pdotaccent'] = 0x1E56;\n\t    t['Pecyrillic'] = 0x041F;\n\t    t['Peharmenian'] = 0x054A;\n\t    t['Pemiddlehookcyrillic'] = 0x04A6;\n\t    t['Phi'] = 0x03A6;\n\t    t['Phook'] = 0x01A4;\n\t    t['Pi'] = 0x03A0;\n\t    t['Piwrarmenian'] = 0x0553;\n\t    t['Pmonospace'] = 0xFF30;\n\t    t['Psi'] = 0x03A8;\n\t    t['Psicyrillic'] = 0x0470;\n\t    t['Psmall'] = 0xF770;\n\t    t['Q'] = 0x0051;\n\t    t['Qcircle'] = 0x24C6;\n\t    t['Qmonospace'] = 0xFF31;\n\t    t['Qsmall'] = 0xF771;\n\t    t['R'] = 0x0052;\n\t    t['Raarmenian'] = 0x054C;\n\t    t['Racute'] = 0x0154;\n\t    t['Rcaron'] = 0x0158;\n\t    t['Rcedilla'] = 0x0156;\n\t    t['Rcircle'] = 0x24C7;\n\t    t['Rcommaaccent'] = 0x0156;\n\t    t['Rdblgrave'] = 0x0210;\n\t    t['Rdotaccent'] = 0x1E58;\n\t    t['Rdotbelow'] = 0x1E5A;\n\t    t['Rdotbelowmacron'] = 0x1E5C;\n\t    t['Reharmenian'] = 0x0550;\n\t    t['Rfraktur'] = 0x211C;\n\t    t['Rho'] = 0x03A1;\n\t    t['Ringsmall'] = 0xF6FC;\n\t    t['Rinvertedbreve'] = 0x0212;\n\t    t['Rlinebelow'] = 0x1E5E;\n\t    t['Rmonospace'] = 0xFF32;\n\t    t['Rsmall'] = 0xF772;\n\t    t['Rsmallinverted'] = 0x0281;\n\t    t['Rsmallinvertedsuperior'] = 0x02B6;\n\t    t['S'] = 0x0053;\n\t    t['SF010000'] = 0x250C;\n\t    t['SF020000'] = 0x2514;\n\t    t['SF030000'] = 0x2510;\n\t    t['SF040000'] = 0x2518;\n\t    t['SF050000'] = 0x253C;\n\t    t['SF060000'] = 0x252C;\n\t    t['SF070000'] = 0x2534;\n\t    t['SF080000'] = 0x251C;\n\t    t['SF090000'] = 0x2524;\n\t    t['SF100000'] = 0x2500;\n\t    t['SF110000'] = 0x2502;\n\t    t['SF190000'] = 0x2561;\n\t    t['SF200000'] = 0x2562;\n\t    t['SF210000'] = 0x2556;\n\t    t['SF220000'] = 0x2555;\n\t    t['SF230000'] = 0x2563;\n\t    t['SF240000'] = 0x2551;\n\t    t['SF250000'] = 0x2557;\n\t    t['SF260000'] = 0x255D;\n\t    t['SF270000'] = 0x255C;\n\t    t['SF280000'] = 0x255B;\n\t    t['SF360000'] = 0x255E;\n\t    t['SF370000'] = 0x255F;\n\t    t['SF380000'] = 0x255A;\n\t    t['SF390000'] = 0x2554;\n\t    t['SF400000'] = 0x2569;\n\t    t['SF410000'] = 0x2566;\n\t    t['SF420000'] = 0x2560;\n\t    t['SF430000'] = 0x2550;\n\t    t['SF440000'] = 0x256C;\n\t    t['SF450000'] = 0x2567;\n\t    t['SF460000'] = 0x2568;\n\t    t['SF470000'] = 0x2564;\n\t    t['SF480000'] = 0x2565;\n\t    t['SF490000'] = 0x2559;\n\t    t['SF500000'] = 0x2558;\n\t    t['SF510000'] = 0x2552;\n\t    t['SF520000'] = 0x2553;\n\t    t['SF530000'] = 0x256B;\n\t    t['SF540000'] = 0x256A;\n\t    t['Sacute'] = 0x015A;\n\t    t['Sacutedotaccent'] = 0x1E64;\n\t    t['Sampigreek'] = 0x03E0;\n\t    t['Scaron'] = 0x0160;\n\t    t['Scarondotaccent'] = 0x1E66;\n\t    t['Scaronsmall'] = 0xF6FD;\n\t    t['Scedilla'] = 0x015E;\n\t    t['Schwa'] = 0x018F;\n\t    t['Schwacyrillic'] = 0x04D8;\n\t    t['Schwadieresiscyrillic'] = 0x04DA;\n\t    t['Scircle'] = 0x24C8;\n\t    t['Scircumflex'] = 0x015C;\n\t    t['Scommaaccent'] = 0x0218;\n\t    t['Sdotaccent'] = 0x1E60;\n\t    t['Sdotbelow'] = 0x1E62;\n\t    t['Sdotbelowdotaccent'] = 0x1E68;\n\t    t['Seharmenian'] = 0x054D;\n\t    t['Sevenroman'] = 0x2166;\n\t    t['Shaarmenian'] = 0x0547;\n\t    t['Shacyrillic'] = 0x0428;\n\t    t['Shchacyrillic'] = 0x0429;\n\t    t['Sheicoptic'] = 0x03E2;\n\t    t['Shhacyrillic'] = 0x04BA;\n\t    t['Shimacoptic'] = 0x03EC;\n\t    t['Sigma'] = 0x03A3;\n\t    t['Sixroman'] = 0x2165;\n\t    t['Smonospace'] = 0xFF33;\n\t    t['Softsigncyrillic'] = 0x042C;\n\t    t['Ssmall'] = 0xF773;\n\t    t['Stigmagreek'] = 0x03DA;\n\t    t['T'] = 0x0054;\n\t    t['Tau'] = 0x03A4;\n\t    t['Tbar'] = 0x0166;\n\t    t['Tcaron'] = 0x0164;\n\t    t['Tcedilla'] = 0x0162;\n\t    t['Tcircle'] = 0x24C9;\n\t    t['Tcircumflexbelow'] = 0x1E70;\n\t    t['Tcommaaccent'] = 0x0162;\n\t    t['Tdotaccent'] = 0x1E6A;\n\t    t['Tdotbelow'] = 0x1E6C;\n\t    t['Tecyrillic'] = 0x0422;\n\t    t['Tedescendercyrillic'] = 0x04AC;\n\t    t['Tenroman'] = 0x2169;\n\t    t['Tetsecyrillic'] = 0x04B4;\n\t    t['Theta'] = 0x0398;\n\t    t['Thook'] = 0x01AC;\n\t    t['Thorn'] = 0x00DE;\n\t    t['Thornsmall'] = 0xF7FE;\n\t    t['Threeroman'] = 0x2162;\n\t    t['Tildesmall'] = 0xF6FE;\n\t    t['Tiwnarmenian'] = 0x054F;\n\t    t['Tlinebelow'] = 0x1E6E;\n\t    t['Tmonospace'] = 0xFF34;\n\t    t['Toarmenian'] = 0x0539;\n\t    t['Tonefive'] = 0x01BC;\n\t    t['Tonesix'] = 0x0184;\n\t    t['Tonetwo'] = 0x01A7;\n\t    t['Tretroflexhook'] = 0x01AE;\n\t    t['Tsecyrillic'] = 0x0426;\n\t    t['Tshecyrillic'] = 0x040B;\n\t    t['Tsmall'] = 0xF774;\n\t    t['Twelveroman'] = 0x216B;\n\t    t['Tworoman'] = 0x2161;\n\t    t['U'] = 0x0055;\n\t    t['Uacute'] = 0x00DA;\n\t    t['Uacutesmall'] = 0xF7FA;\n\t    t['Ubreve'] = 0x016C;\n\t    t['Ucaron'] = 0x01D3;\n\t    t['Ucircle'] = 0x24CA;\n\t    t['Ucircumflex'] = 0x00DB;\n\t    t['Ucircumflexbelow'] = 0x1E76;\n\t    t['Ucircumflexsmall'] = 0xF7FB;\n\t    t['Ucyrillic'] = 0x0423;\n\t    t['Udblacute'] = 0x0170;\n\t    t['Udblgrave'] = 0x0214;\n\t    t['Udieresis'] = 0x00DC;\n\t    t['Udieresisacute'] = 0x01D7;\n\t    t['Udieresisbelow'] = 0x1E72;\n\t    t['Udieresiscaron'] = 0x01D9;\n\t    t['Udieresiscyrillic'] = 0x04F0;\n\t    t['Udieresisgrave'] = 0x01DB;\n\t    t['Udieresismacron'] = 0x01D5;\n\t    t['Udieresissmall'] = 0xF7FC;\n\t    t['Udotbelow'] = 0x1EE4;\n\t    t['Ugrave'] = 0x00D9;\n\t    t['Ugravesmall'] = 0xF7F9;\n\t    t['Uhookabove'] = 0x1EE6;\n\t    t['Uhorn'] = 0x01AF;\n\t    t['Uhornacute'] = 0x1EE8;\n\t    t['Uhorndotbelow'] = 0x1EF0;\n\t    t['Uhorngrave'] = 0x1EEA;\n\t    t['Uhornhookabove'] = 0x1EEC;\n\t    t['Uhorntilde'] = 0x1EEE;\n\t    t['Uhungarumlaut'] = 0x0170;\n\t    t['Uhungarumlautcyrillic'] = 0x04F2;\n\t    t['Uinvertedbreve'] = 0x0216;\n\t    t['Ukcyrillic'] = 0x0478;\n\t    t['Umacron'] = 0x016A;\n\t    t['Umacroncyrillic'] = 0x04EE;\n\t    t['Umacrondieresis'] = 0x1E7A;\n\t    t['Umonospace'] = 0xFF35;\n\t    t['Uogonek'] = 0x0172;\n\t    t['Upsilon'] = 0x03A5;\n\t    t['Upsilon1'] = 0x03D2;\n\t    t['Upsilonacutehooksymbolgreek'] = 0x03D3;\n\t    t['Upsilonafrican'] = 0x01B1;\n\t    t['Upsilondieresis'] = 0x03AB;\n\t    t['Upsilondieresishooksymbolgreek'] = 0x03D4;\n\t    t['Upsilonhooksymbol'] = 0x03D2;\n\t    t['Upsilontonos'] = 0x038E;\n\t    t['Uring'] = 0x016E;\n\t    t['Ushortcyrillic'] = 0x040E;\n\t    t['Usmall'] = 0xF775;\n\t    t['Ustraightcyrillic'] = 0x04AE;\n\t    t['Ustraightstrokecyrillic'] = 0x04B0;\n\t    t['Utilde'] = 0x0168;\n\t    t['Utildeacute'] = 0x1E78;\n\t    t['Utildebelow'] = 0x1E74;\n\t    t['V'] = 0x0056;\n\t    t['Vcircle'] = 0x24CB;\n\t    t['Vdotbelow'] = 0x1E7E;\n\t    t['Vecyrillic'] = 0x0412;\n\t    t['Vewarmenian'] = 0x054E;\n\t    t['Vhook'] = 0x01B2;\n\t    t['Vmonospace'] = 0xFF36;\n\t    t['Voarmenian'] = 0x0548;\n\t    t['Vsmall'] = 0xF776;\n\t    t['Vtilde'] = 0x1E7C;\n\t    t['W'] = 0x0057;\n\t    t['Wacute'] = 0x1E82;\n\t    t['Wcircle'] = 0x24CC;\n\t    t['Wcircumflex'] = 0x0174;\n\t    t['Wdieresis'] = 0x1E84;\n\t    t['Wdotaccent'] = 0x1E86;\n\t    t['Wdotbelow'] = 0x1E88;\n\t    t['Wgrave'] = 0x1E80;\n\t    t['Wmonospace'] = 0xFF37;\n\t    t['Wsmall'] = 0xF777;\n\t    t['X'] = 0x0058;\n\t    t['Xcircle'] = 0x24CD;\n\t    t['Xdieresis'] = 0x1E8C;\n\t    t['Xdotaccent'] = 0x1E8A;\n\t    t['Xeharmenian'] = 0x053D;\n\t    t['Xi'] = 0x039E;\n\t    t['Xmonospace'] = 0xFF38;\n\t    t['Xsmall'] = 0xF778;\n\t    t['Y'] = 0x0059;\n\t    t['Yacute'] = 0x00DD;\n\t    t['Yacutesmall'] = 0xF7FD;\n\t    t['Yatcyrillic'] = 0x0462;\n\t    t['Ycircle'] = 0x24CE;\n\t    t['Ycircumflex'] = 0x0176;\n\t    t['Ydieresis'] = 0x0178;\n\t    t['Ydieresissmall'] = 0xF7FF;\n\t    t['Ydotaccent'] = 0x1E8E;\n\t    t['Ydotbelow'] = 0x1EF4;\n\t    t['Yericyrillic'] = 0x042B;\n\t    t['Yerudieresiscyrillic'] = 0x04F8;\n\t    t['Ygrave'] = 0x1EF2;\n\t    t['Yhook'] = 0x01B3;\n\t    t['Yhookabove'] = 0x1EF6;\n\t    t['Yiarmenian'] = 0x0545;\n\t    t['Yicyrillic'] = 0x0407;\n\t    t['Yiwnarmenian'] = 0x0552;\n\t    t['Ymonospace'] = 0xFF39;\n\t    t['Ysmall'] = 0xF779;\n\t    t['Ytilde'] = 0x1EF8;\n\t    t['Yusbigcyrillic'] = 0x046A;\n\t    t['Yusbigiotifiedcyrillic'] = 0x046C;\n\t    t['Yuslittlecyrillic'] = 0x0466;\n\t    t['Yuslittleiotifiedcyrillic'] = 0x0468;\n\t    t['Z'] = 0x005A;\n\t    t['Zaarmenian'] = 0x0536;\n\t    t['Zacute'] = 0x0179;\n\t    t['Zcaron'] = 0x017D;\n\t    t['Zcaronsmall'] = 0xF6FF;\n\t    t['Zcircle'] = 0x24CF;\n\t    t['Zcircumflex'] = 0x1E90;\n\t    t['Zdot'] = 0x017B;\n\t    t['Zdotaccent'] = 0x017B;\n\t    t['Zdotbelow'] = 0x1E92;\n\t    t['Zecyrillic'] = 0x0417;\n\t    t['Zedescendercyrillic'] = 0x0498;\n\t    t['Zedieresiscyrillic'] = 0x04DE;\n\t    t['Zeta'] = 0x0396;\n\t    t['Zhearmenian'] = 0x053A;\n\t    t['Zhebrevecyrillic'] = 0x04C1;\n\t    t['Zhecyrillic'] = 0x0416;\n\t    t['Zhedescendercyrillic'] = 0x0496;\n\t    t['Zhedieresiscyrillic'] = 0x04DC;\n\t    t['Zlinebelow'] = 0x1E94;\n\t    t['Zmonospace'] = 0xFF3A;\n\t    t['Zsmall'] = 0xF77A;\n\t    t['Zstroke'] = 0x01B5;\n\t    t['a'] = 0x0061;\n\t    t['aabengali'] = 0x0986;\n\t    t['aacute'] = 0x00E1;\n\t    t['aadeva'] = 0x0906;\n\t    t['aagujarati'] = 0x0A86;\n\t    t['aagurmukhi'] = 0x0A06;\n\t    t['aamatragurmukhi'] = 0x0A3E;\n\t    t['aarusquare'] = 0x3303;\n\t    t['aavowelsignbengali'] = 0x09BE;\n\t    t['aavowelsigndeva'] = 0x093E;\n\t    t['aavowelsigngujarati'] = 0x0ABE;\n\t    t['abbreviationmarkarmenian'] = 0x055F;\n\t    t['abbreviationsigndeva'] = 0x0970;\n\t    t['abengali'] = 0x0985;\n\t    t['abopomofo'] = 0x311A;\n\t    t['abreve'] = 0x0103;\n\t    t['abreveacute'] = 0x1EAF;\n\t    t['abrevecyrillic'] = 0x04D1;\n\t    t['abrevedotbelow'] = 0x1EB7;\n\t    t['abrevegrave'] = 0x1EB1;\n\t    t['abrevehookabove'] = 0x1EB3;\n\t    t['abrevetilde'] = 0x1EB5;\n\t    t['acaron'] = 0x01CE;\n\t    t['acircle'] = 0x24D0;\n\t    t['acircumflex'] = 0x00E2;\n\t    t['acircumflexacute'] = 0x1EA5;\n\t    t['acircumflexdotbelow'] = 0x1EAD;\n\t    t['acircumflexgrave'] = 0x1EA7;\n\t    t['acircumflexhookabove'] = 0x1EA9;\n\t    t['acircumflextilde'] = 0x1EAB;\n\t    t['acute'] = 0x00B4;\n\t    t['acutebelowcmb'] = 0x0317;\n\t    t['acutecmb'] = 0x0301;\n\t    t['acutecomb'] = 0x0301;\n\t    t['acutedeva'] = 0x0954;\n\t    t['acutelowmod'] = 0x02CF;\n\t    t['acutetonecmb'] = 0x0341;\n\t    t['acyrillic'] = 0x0430;\n\t    t['adblgrave'] = 0x0201;\n\t    t['addakgurmukhi'] = 0x0A71;\n\t    t['adeva'] = 0x0905;\n\t    t['adieresis'] = 0x00E4;\n\t    t['adieresiscyrillic'] = 0x04D3;\n\t    t['adieresismacron'] = 0x01DF;\n\t    t['adotbelow'] = 0x1EA1;\n\t    t['adotmacron'] = 0x01E1;\n\t    t['ae'] = 0x00E6;\n\t    t['aeacute'] = 0x01FD;\n\t    t['aekorean'] = 0x3150;\n\t    t['aemacron'] = 0x01E3;\n\t    t['afii00208'] = 0x2015;\n\t    t['afii08941'] = 0x20A4;\n\t    t['afii10017'] = 0x0410;\n\t    t['afii10018'] = 0x0411;\n\t    t['afii10019'] = 0x0412;\n\t    t['afii10020'] = 0x0413;\n\t    t['afii10021'] = 0x0414;\n\t    t['afii10022'] = 0x0415;\n\t    t['afii10023'] = 0x0401;\n\t    t['afii10024'] = 0x0416;\n\t    t['afii10025'] = 0x0417;\n\t    t['afii10026'] = 0x0418;\n\t    t['afii10027'] = 0x0419;\n\t    t['afii10028'] = 0x041A;\n\t    t['afii10029'] = 0x041B;\n\t    t['afii10030'] = 0x041C;\n\t    t['afii10031'] = 0x041D;\n\t    t['afii10032'] = 0x041E;\n\t    t['afii10033'] = 0x041F;\n\t    t['afii10034'] = 0x0420;\n\t    t['afii10035'] = 0x0421;\n\t    t['afii10036'] = 0x0422;\n\t    t['afii10037'] = 0x0423;\n\t    t['afii10038'] = 0x0424;\n\t    t['afii10039'] = 0x0425;\n\t    t['afii10040'] = 0x0426;\n\t    t['afii10041'] = 0x0427;\n\t    t['afii10042'] = 0x0428;\n\t    t['afii10043'] = 0x0429;\n\t    t['afii10044'] = 0x042A;\n\t    t['afii10045'] = 0x042B;\n\t    t['afii10046'] = 0x042C;\n\t    t['afii10047'] = 0x042D;\n\t    t['afii10048'] = 0x042E;\n\t    t['afii10049'] = 0x042F;\n\t    t['afii10050'] = 0x0490;\n\t    t['afii10051'] = 0x0402;\n\t    t['afii10052'] = 0x0403;\n\t    t['afii10053'] = 0x0404;\n\t    t['afii10054'] = 0x0405;\n\t    t['afii10055'] = 0x0406;\n\t    t['afii10056'] = 0x0407;\n\t    t['afii10057'] = 0x0408;\n\t    t['afii10058'] = 0x0409;\n\t    t['afii10059'] = 0x040A;\n\t    t['afii10060'] = 0x040B;\n\t    t['afii10061'] = 0x040C;\n\t    t['afii10062'] = 0x040E;\n\t    t['afii10063'] = 0xF6C4;\n\t    t['afii10064'] = 0xF6C5;\n\t    t['afii10065'] = 0x0430;\n\t    t['afii10066'] = 0x0431;\n\t    t['afii10067'] = 0x0432;\n\t    t['afii10068'] = 0x0433;\n\t    t['afii10069'] = 0x0434;\n\t    t['afii10070'] = 0x0435;\n\t    t['afii10071'] = 0x0451;\n\t    t['afii10072'] = 0x0436;\n\t    t['afii10073'] = 0x0437;\n\t    t['afii10074'] = 0x0438;\n\t    t['afii10075'] = 0x0439;\n\t    t['afii10076'] = 0x043A;\n\t    t['afii10077'] = 0x043B;\n\t    t['afii10078'] = 0x043C;\n\t    t['afii10079'] = 0x043D;\n\t    t['afii10080'] = 0x043E;\n\t    t['afii10081'] = 0x043F;\n\t    t['afii10082'] = 0x0440;\n\t    t['afii10083'] = 0x0441;\n\t    t['afii10084'] = 0x0442;\n\t    t['afii10085'] = 0x0443;\n\t    t['afii10086'] = 0x0444;\n\t    t['afii10087'] = 0x0445;\n\t    t['afii10088'] = 0x0446;\n\t    t['afii10089'] = 0x0447;\n\t    t['afii10090'] = 0x0448;\n\t    t['afii10091'] = 0x0449;\n\t    t['afii10092'] = 0x044A;\n\t    t['afii10093'] = 0x044B;\n\t    t['afii10094'] = 0x044C;\n\t    t['afii10095'] = 0x044D;\n\t    t['afii10096'] = 0x044E;\n\t    t['afii10097'] = 0x044F;\n\t    t['afii10098'] = 0x0491;\n\t    t['afii10099'] = 0x0452;\n\t    t['afii10100'] = 0x0453;\n\t    t['afii10101'] = 0x0454;\n\t    t['afii10102'] = 0x0455;\n\t    t['afii10103'] = 0x0456;\n\t    t['afii10104'] = 0x0457;\n\t    t['afii10105'] = 0x0458;\n\t    t['afii10106'] = 0x0459;\n\t    t['afii10107'] = 0x045A;\n\t    t['afii10108'] = 0x045B;\n\t    t['afii10109'] = 0x045C;\n\t    t['afii10110'] = 0x045E;\n\t    t['afii10145'] = 0x040F;\n\t    t['afii10146'] = 0x0462;\n\t    t['afii10147'] = 0x0472;\n\t    t['afii10148'] = 0x0474;\n\t    t['afii10192'] = 0xF6C6;\n\t    t['afii10193'] = 0x045F;\n\t    t['afii10194'] = 0x0463;\n\t    t['afii10195'] = 0x0473;\n\t    t['afii10196'] = 0x0475;\n\t    t['afii10831'] = 0xF6C7;\n\t    t['afii10832'] = 0xF6C8;\n\t    t['afii10846'] = 0x04D9;\n\t    t['afii299'] = 0x200E;\n\t    t['afii300'] = 0x200F;\n\t    t['afii301'] = 0x200D;\n\t    t['afii57381'] = 0x066A;\n\t    t['afii57388'] = 0x060C;\n\t    t['afii57392'] = 0x0660;\n\t    t['afii57393'] = 0x0661;\n\t    t['afii57394'] = 0x0662;\n\t    t['afii57395'] = 0x0663;\n\t    t['afii57396'] = 0x0664;\n\t    t['afii57397'] = 0x0665;\n\t    t['afii57398'] = 0x0666;\n\t    t['afii57399'] = 0x0667;\n\t    t['afii57400'] = 0x0668;\n\t    t['afii57401'] = 0x0669;\n\t    t['afii57403'] = 0x061B;\n\t    t['afii57407'] = 0x061F;\n\t    t['afii57409'] = 0x0621;\n\t    t['afii57410'] = 0x0622;\n\t    t['afii57411'] = 0x0623;\n\t    t['afii57412'] = 0x0624;\n\t    t['afii57413'] = 0x0625;\n\t    t['afii57414'] = 0x0626;\n\t    t['afii57415'] = 0x0627;\n\t    t['afii57416'] = 0x0628;\n\t    t['afii57417'] = 0x0629;\n\t    t['afii57418'] = 0x062A;\n\t    t['afii57419'] = 0x062B;\n\t    t['afii57420'] = 0x062C;\n\t    t['afii57421'] = 0x062D;\n\t    t['afii57422'] = 0x062E;\n\t    t['afii57423'] = 0x062F;\n\t    t['afii57424'] = 0x0630;\n\t    t['afii57425'] = 0x0631;\n\t    t['afii57426'] = 0x0632;\n\t    t['afii57427'] = 0x0633;\n\t    t['afii57428'] = 0x0634;\n\t    t['afii57429'] = 0x0635;\n\t    t['afii57430'] = 0x0636;\n\t    t['afii57431'] = 0x0637;\n\t    t['afii57432'] = 0x0638;\n\t    t['afii57433'] = 0x0639;\n\t    t['afii57434'] = 0x063A;\n\t    t['afii57440'] = 0x0640;\n\t    t['afii57441'] = 0x0641;\n\t    t['afii57442'] = 0x0642;\n\t    t['afii57443'] = 0x0643;\n\t    t['afii57444'] = 0x0644;\n\t    t['afii57445'] = 0x0645;\n\t    t['afii57446'] = 0x0646;\n\t    t['afii57448'] = 0x0648;\n\t    t['afii57449'] = 0x0649;\n\t    t['afii57450'] = 0x064A;\n\t    t['afii57451'] = 0x064B;\n\t    t['afii57452'] = 0x064C;\n\t    t['afii57453'] = 0x064D;\n\t    t['afii57454'] = 0x064E;\n\t    t['afii57455'] = 0x064F;\n\t    t['afii57456'] = 0x0650;\n\t    t['afii57457'] = 0x0651;\n\t    t['afii57458'] = 0x0652;\n\t    t['afii57470'] = 0x0647;\n\t    t['afii57505'] = 0x06A4;\n\t    t['afii57506'] = 0x067E;\n\t    t['afii57507'] = 0x0686;\n\t    t['afii57508'] = 0x0698;\n\t    t['afii57509'] = 0x06AF;\n\t    t['afii57511'] = 0x0679;\n\t    t['afii57512'] = 0x0688;\n\t    t['afii57513'] = 0x0691;\n\t    t['afii57514'] = 0x06BA;\n\t    t['afii57519'] = 0x06D2;\n\t    t['afii57534'] = 0x06D5;\n\t    t['afii57636'] = 0x20AA;\n\t    t['afii57645'] = 0x05BE;\n\t    t['afii57658'] = 0x05C3;\n\t    t['afii57664'] = 0x05D0;\n\t    t['afii57665'] = 0x05D1;\n\t    t['afii57666'] = 0x05D2;\n\t    t['afii57667'] = 0x05D3;\n\t    t['afii57668'] = 0x05D4;\n\t    t['afii57669'] = 0x05D5;\n\t    t['afii57670'] = 0x05D6;\n\t    t['afii57671'] = 0x05D7;\n\t    t['afii57672'] = 0x05D8;\n\t    t['afii57673'] = 0x05D9;\n\t    t['afii57674'] = 0x05DA;\n\t    t['afii57675'] = 0x05DB;\n\t    t['afii57676'] = 0x05DC;\n\t    t['afii57677'] = 0x05DD;\n\t    t['afii57678'] = 0x05DE;\n\t    t['afii57679'] = 0x05DF;\n\t    t['afii57680'] = 0x05E0;\n\t    t['afii57681'] = 0x05E1;\n\t    t['afii57682'] = 0x05E2;\n\t    t['afii57683'] = 0x05E3;\n\t    t['afii57684'] = 0x05E4;\n\t    t['afii57685'] = 0x05E5;\n\t    t['afii57686'] = 0x05E6;\n\t    t['afii57687'] = 0x05E7;\n\t    t['afii57688'] = 0x05E8;\n\t    t['afii57689'] = 0x05E9;\n\t    t['afii57690'] = 0x05EA;\n\t    t['afii57694'] = 0xFB2A;\n\t    t['afii57695'] = 0xFB2B;\n\t    t['afii57700'] = 0xFB4B;\n\t    t['afii57705'] = 0xFB1F;\n\t    t['afii57716'] = 0x05F0;\n\t    t['afii57717'] = 0x05F1;\n\t    t['afii57718'] = 0x05F2;\n\t    t['afii57723'] = 0xFB35;\n\t    t['afii57793'] = 0x05B4;\n\t    t['afii57794'] = 0x05B5;\n\t    t['afii57795'] = 0x05B6;\n\t    t['afii57796'] = 0x05BB;\n\t    t['afii57797'] = 0x05B8;\n\t    t['afii57798'] = 0x05B7;\n\t    t['afii57799'] = 0x05B0;\n\t    t['afii57800'] = 0x05B2;\n\t    t['afii57801'] = 0x05B1;\n\t    t['afii57802'] = 0x05B3;\n\t    t['afii57803'] = 0x05C2;\n\t    t['afii57804'] = 0x05C1;\n\t    t['afii57806'] = 0x05B9;\n\t    t['afii57807'] = 0x05BC;\n\t    t['afii57839'] = 0x05BD;\n\t    t['afii57841'] = 0x05BF;\n\t    t['afii57842'] = 0x05C0;\n\t    t['afii57929'] = 0x02BC;\n\t    t['afii61248'] = 0x2105;\n\t    t['afii61289'] = 0x2113;\n\t    t['afii61352'] = 0x2116;\n\t    t['afii61573'] = 0x202C;\n\t    t['afii61574'] = 0x202D;\n\t    t['afii61575'] = 0x202E;\n\t    t['afii61664'] = 0x200C;\n\t    t['afii63167'] = 0x066D;\n\t    t['afii64937'] = 0x02BD;\n\t    t['agrave'] = 0x00E0;\n\t    t['agujarati'] = 0x0A85;\n\t    t['agurmukhi'] = 0x0A05;\n\t    t['ahiragana'] = 0x3042;\n\t    t['ahookabove'] = 0x1EA3;\n\t    t['aibengali'] = 0x0990;\n\t    t['aibopomofo'] = 0x311E;\n\t    t['aideva'] = 0x0910;\n\t    t['aiecyrillic'] = 0x04D5;\n\t    t['aigujarati'] = 0x0A90;\n\t    t['aigurmukhi'] = 0x0A10;\n\t    t['aimatragurmukhi'] = 0x0A48;\n\t    t['ainarabic'] = 0x0639;\n\t    t['ainfinalarabic'] = 0xFECA;\n\t    t['aininitialarabic'] = 0xFECB;\n\t    t['ainmedialarabic'] = 0xFECC;\n\t    t['ainvertedbreve'] = 0x0203;\n\t    t['aivowelsignbengali'] = 0x09C8;\n\t    t['aivowelsigndeva'] = 0x0948;\n\t    t['aivowelsigngujarati'] = 0x0AC8;\n\t    t['akatakana'] = 0x30A2;\n\t    t['akatakanahalfwidth'] = 0xFF71;\n\t    t['akorean'] = 0x314F;\n\t    t['alef'] = 0x05D0;\n\t    t['alefarabic'] = 0x0627;\n\t    t['alefdageshhebrew'] = 0xFB30;\n\t    t['aleffinalarabic'] = 0xFE8E;\n\t    t['alefhamzaabovearabic'] = 0x0623;\n\t    t['alefhamzaabovefinalarabic'] = 0xFE84;\n\t    t['alefhamzabelowarabic'] = 0x0625;\n\t    t['alefhamzabelowfinalarabic'] = 0xFE88;\n\t    t['alefhebrew'] = 0x05D0;\n\t    t['aleflamedhebrew'] = 0xFB4F;\n\t    t['alefmaddaabovearabic'] = 0x0622;\n\t    t['alefmaddaabovefinalarabic'] = 0xFE82;\n\t    t['alefmaksuraarabic'] = 0x0649;\n\t    t['alefmaksurafinalarabic'] = 0xFEF0;\n\t    t['alefmaksurainitialarabic'] = 0xFEF3;\n\t    t['alefmaksuramedialarabic'] = 0xFEF4;\n\t    t['alefpatahhebrew'] = 0xFB2E;\n\t    t['alefqamatshebrew'] = 0xFB2F;\n\t    t['aleph'] = 0x2135;\n\t    t['allequal'] = 0x224C;\n\t    t['alpha'] = 0x03B1;\n\t    t['alphatonos'] = 0x03AC;\n\t    t['amacron'] = 0x0101;\n\t    t['amonospace'] = 0xFF41;\n\t    t['ampersand'] = 0x0026;\n\t    t['ampersandmonospace'] = 0xFF06;\n\t    t['ampersandsmall'] = 0xF726;\n\t    t['amsquare'] = 0x33C2;\n\t    t['anbopomofo'] = 0x3122;\n\t    t['angbopomofo'] = 0x3124;\n\t    t['angbracketleft'] = 0x3008;\n\t    t['angbracketright'] = 0x3009;\n\t    t['angkhankhuthai'] = 0x0E5A;\n\t    t['angle'] = 0x2220;\n\t    t['anglebracketleft'] = 0x3008;\n\t    t['anglebracketleftvertical'] = 0xFE3F;\n\t    t['anglebracketright'] = 0x3009;\n\t    t['anglebracketrightvertical'] = 0xFE40;\n\t    t['angleleft'] = 0x2329;\n\t    t['angleright'] = 0x232A;\n\t    t['angstrom'] = 0x212B;\n\t    t['anoteleia'] = 0x0387;\n\t    t['anudattadeva'] = 0x0952;\n\t    t['anusvarabengali'] = 0x0982;\n\t    t['anusvaradeva'] = 0x0902;\n\t    t['anusvaragujarati'] = 0x0A82;\n\t    t['aogonek'] = 0x0105;\n\t    t['apaatosquare'] = 0x3300;\n\t    t['aparen'] = 0x249C;\n\t    t['apostrophearmenian'] = 0x055A;\n\t    t['apostrophemod'] = 0x02BC;\n\t    t['apple'] = 0xF8FF;\n\t    t['approaches'] = 0x2250;\n\t    t['approxequal'] = 0x2248;\n\t    t['approxequalorimage'] = 0x2252;\n\t    t['approximatelyequal'] = 0x2245;\n\t    t['araeaekorean'] = 0x318E;\n\t    t['araeakorean'] = 0x318D;\n\t    t['arc'] = 0x2312;\n\t    t['arighthalfring'] = 0x1E9A;\n\t    t['aring'] = 0x00E5;\n\t    t['aringacute'] = 0x01FB;\n\t    t['aringbelow'] = 0x1E01;\n\t    t['arrowboth'] = 0x2194;\n\t    t['arrowdashdown'] = 0x21E3;\n\t    t['arrowdashleft'] = 0x21E0;\n\t    t['arrowdashright'] = 0x21E2;\n\t    t['arrowdashup'] = 0x21E1;\n\t    t['arrowdblboth'] = 0x21D4;\n\t    t['arrowdbldown'] = 0x21D3;\n\t    t['arrowdblleft'] = 0x21D0;\n\t    t['arrowdblright'] = 0x21D2;\n\t    t['arrowdblup'] = 0x21D1;\n\t    t['arrowdown'] = 0x2193;\n\t    t['arrowdownleft'] = 0x2199;\n\t    t['arrowdownright'] = 0x2198;\n\t    t['arrowdownwhite'] = 0x21E9;\n\t    t['arrowheaddownmod'] = 0x02C5;\n\t    t['arrowheadleftmod'] = 0x02C2;\n\t    t['arrowheadrightmod'] = 0x02C3;\n\t    t['arrowheadupmod'] = 0x02C4;\n\t    t['arrowhorizex'] = 0xF8E7;\n\t    t['arrowleft'] = 0x2190;\n\t    t['arrowleftdbl'] = 0x21D0;\n\t    t['arrowleftdblstroke'] = 0x21CD;\n\t    t['arrowleftoverright'] = 0x21C6;\n\t    t['arrowleftwhite'] = 0x21E6;\n\t    t['arrowright'] = 0x2192;\n\t    t['arrowrightdblstroke'] = 0x21CF;\n\t    t['arrowrightheavy'] = 0x279E;\n\t    t['arrowrightoverleft'] = 0x21C4;\n\t    t['arrowrightwhite'] = 0x21E8;\n\t    t['arrowtableft'] = 0x21E4;\n\t    t['arrowtabright'] = 0x21E5;\n\t    t['arrowup'] = 0x2191;\n\t    t['arrowupdn'] = 0x2195;\n\t    t['arrowupdnbse'] = 0x21A8;\n\t    t['arrowupdownbase'] = 0x21A8;\n\t    t['arrowupleft'] = 0x2196;\n\t    t['arrowupleftofdown'] = 0x21C5;\n\t    t['arrowupright'] = 0x2197;\n\t    t['arrowupwhite'] = 0x21E7;\n\t    t['arrowvertex'] = 0xF8E6;\n\t    t['asciicircum'] = 0x005E;\n\t    t['asciicircummonospace'] = 0xFF3E;\n\t    t['asciitilde'] = 0x007E;\n\t    t['asciitildemonospace'] = 0xFF5E;\n\t    t['ascript'] = 0x0251;\n\t    t['ascriptturned'] = 0x0252;\n\t    t['asmallhiragana'] = 0x3041;\n\t    t['asmallkatakana'] = 0x30A1;\n\t    t['asmallkatakanahalfwidth'] = 0xFF67;\n\t    t['asterisk'] = 0x002A;\n\t    t['asteriskaltonearabic'] = 0x066D;\n\t    t['asteriskarabic'] = 0x066D;\n\t    t['asteriskmath'] = 0x2217;\n\t    t['asteriskmonospace'] = 0xFF0A;\n\t    t['asterisksmall'] = 0xFE61;\n\t    t['asterism'] = 0x2042;\n\t    t['asuperior'] = 0xF6E9;\n\t    t['asymptoticallyequal'] = 0x2243;\n\t    t['at'] = 0x0040;\n\t    t['atilde'] = 0x00E3;\n\t    t['atmonospace'] = 0xFF20;\n\t    t['atsmall'] = 0xFE6B;\n\t    t['aturned'] = 0x0250;\n\t    t['aubengali'] = 0x0994;\n\t    t['aubopomofo'] = 0x3120;\n\t    t['audeva'] = 0x0914;\n\t    t['augujarati'] = 0x0A94;\n\t    t['augurmukhi'] = 0x0A14;\n\t    t['aulengthmarkbengali'] = 0x09D7;\n\t    t['aumatragurmukhi'] = 0x0A4C;\n\t    t['auvowelsignbengali'] = 0x09CC;\n\t    t['auvowelsigndeva'] = 0x094C;\n\t    t['auvowelsigngujarati'] = 0x0ACC;\n\t    t['avagrahadeva'] = 0x093D;\n\t    t['aybarmenian'] = 0x0561;\n\t    t['ayin'] = 0x05E2;\n\t    t['ayinaltonehebrew'] = 0xFB20;\n\t    t['ayinhebrew'] = 0x05E2;\n\t    t['b'] = 0x0062;\n\t    t['babengali'] = 0x09AC;\n\t    t['backslash'] = 0x005C;\n\t    t['backslashmonospace'] = 0xFF3C;\n\t    t['badeva'] = 0x092C;\n\t    t['bagujarati'] = 0x0AAC;\n\t    t['bagurmukhi'] = 0x0A2C;\n\t    t['bahiragana'] = 0x3070;\n\t    t['bahtthai'] = 0x0E3F;\n\t    t['bakatakana'] = 0x30D0;\n\t    t['bar'] = 0x007C;\n\t    t['barmonospace'] = 0xFF5C;\n\t    t['bbopomofo'] = 0x3105;\n\t    t['bcircle'] = 0x24D1;\n\t    t['bdotaccent'] = 0x1E03;\n\t    t['bdotbelow'] = 0x1E05;\n\t    t['beamedsixteenthnotes'] = 0x266C;\n\t    t['because'] = 0x2235;\n\t    t['becyrillic'] = 0x0431;\n\t    t['beharabic'] = 0x0628;\n\t    t['behfinalarabic'] = 0xFE90;\n\t    t['behinitialarabic'] = 0xFE91;\n\t    t['behiragana'] = 0x3079;\n\t    t['behmedialarabic'] = 0xFE92;\n\t    t['behmeeminitialarabic'] = 0xFC9F;\n\t    t['behmeemisolatedarabic'] = 0xFC08;\n\t    t['behnoonfinalarabic'] = 0xFC6D;\n\t    t['bekatakana'] = 0x30D9;\n\t    t['benarmenian'] = 0x0562;\n\t    t['bet'] = 0x05D1;\n\t    t['beta'] = 0x03B2;\n\t    t['betasymbolgreek'] = 0x03D0;\n\t    t['betdagesh'] = 0xFB31;\n\t    t['betdageshhebrew'] = 0xFB31;\n\t    t['bethebrew'] = 0x05D1;\n\t    t['betrafehebrew'] = 0xFB4C;\n\t    t['bhabengali'] = 0x09AD;\n\t    t['bhadeva'] = 0x092D;\n\t    t['bhagujarati'] = 0x0AAD;\n\t    t['bhagurmukhi'] = 0x0A2D;\n\t    t['bhook'] = 0x0253;\n\t    t['bihiragana'] = 0x3073;\n\t    t['bikatakana'] = 0x30D3;\n\t    t['bilabialclick'] = 0x0298;\n\t    t['bindigurmukhi'] = 0x0A02;\n\t    t['birusquare'] = 0x3331;\n\t    t['blackcircle'] = 0x25CF;\n\t    t['blackdiamond'] = 0x25C6;\n\t    t['blackdownpointingtriangle'] = 0x25BC;\n\t    t['blackleftpointingpointer'] = 0x25C4;\n\t    t['blackleftpointingtriangle'] = 0x25C0;\n\t    t['blacklenticularbracketleft'] = 0x3010;\n\t    t['blacklenticularbracketleftvertical'] = 0xFE3B;\n\t    t['blacklenticularbracketright'] = 0x3011;\n\t    t['blacklenticularbracketrightvertical'] = 0xFE3C;\n\t    t['blacklowerlefttriangle'] = 0x25E3;\n\t    t['blacklowerrighttriangle'] = 0x25E2;\n\t    t['blackrectangle'] = 0x25AC;\n\t    t['blackrightpointingpointer'] = 0x25BA;\n\t    t['blackrightpointingtriangle'] = 0x25B6;\n\t    t['blacksmallsquare'] = 0x25AA;\n\t    t['blacksmilingface'] = 0x263B;\n\t    t['blacksquare'] = 0x25A0;\n\t    t['blackstar'] = 0x2605;\n\t    t['blackupperlefttriangle'] = 0x25E4;\n\t    t['blackupperrighttriangle'] = 0x25E5;\n\t    t['blackuppointingsmalltriangle'] = 0x25B4;\n\t    t['blackuppointingtriangle'] = 0x25B2;\n\t    t['blank'] = 0x2423;\n\t    t['blinebelow'] = 0x1E07;\n\t    t['block'] = 0x2588;\n\t    t['bmonospace'] = 0xFF42;\n\t    t['bobaimaithai'] = 0x0E1A;\n\t    t['bohiragana'] = 0x307C;\n\t    t['bokatakana'] = 0x30DC;\n\t    t['bparen'] = 0x249D;\n\t    t['bqsquare'] = 0x33C3;\n\t    t['braceex'] = 0xF8F4;\n\t    t['braceleft'] = 0x007B;\n\t    t['braceleftbt'] = 0xF8F3;\n\t    t['braceleftmid'] = 0xF8F2;\n\t    t['braceleftmonospace'] = 0xFF5B;\n\t    t['braceleftsmall'] = 0xFE5B;\n\t    t['bracelefttp'] = 0xF8F1;\n\t    t['braceleftvertical'] = 0xFE37;\n\t    t['braceright'] = 0x007D;\n\t    t['bracerightbt'] = 0xF8FE;\n\t    t['bracerightmid'] = 0xF8FD;\n\t    t['bracerightmonospace'] = 0xFF5D;\n\t    t['bracerightsmall'] = 0xFE5C;\n\t    t['bracerighttp'] = 0xF8FC;\n\t    t['bracerightvertical'] = 0xFE38;\n\t    t['bracketleft'] = 0x005B;\n\t    t['bracketleftbt'] = 0xF8F0;\n\t    t['bracketleftex'] = 0xF8EF;\n\t    t['bracketleftmonospace'] = 0xFF3B;\n\t    t['bracketlefttp'] = 0xF8EE;\n\t    t['bracketright'] = 0x005D;\n\t    t['bracketrightbt'] = 0xF8FB;\n\t    t['bracketrightex'] = 0xF8FA;\n\t    t['bracketrightmonospace'] = 0xFF3D;\n\t    t['bracketrighttp'] = 0xF8F9;\n\t    t['breve'] = 0x02D8;\n\t    t['brevebelowcmb'] = 0x032E;\n\t    t['brevecmb'] = 0x0306;\n\t    t['breveinvertedbelowcmb'] = 0x032F;\n\t    t['breveinvertedcmb'] = 0x0311;\n\t    t['breveinverteddoublecmb'] = 0x0361;\n\t    t['bridgebelowcmb'] = 0x032A;\n\t    t['bridgeinvertedbelowcmb'] = 0x033A;\n\t    t['brokenbar'] = 0x00A6;\n\t    t['bstroke'] = 0x0180;\n\t    t['bsuperior'] = 0xF6EA;\n\t    t['btopbar'] = 0x0183;\n\t    t['buhiragana'] = 0x3076;\n\t    t['bukatakana'] = 0x30D6;\n\t    t['bullet'] = 0x2022;\n\t    t['bulletinverse'] = 0x25D8;\n\t    t['bulletoperator'] = 0x2219;\n\t    t['bullseye'] = 0x25CE;\n\t    t['c'] = 0x0063;\n\t    t['caarmenian'] = 0x056E;\n\t    t['cabengali'] = 0x099A;\n\t    t['cacute'] = 0x0107;\n\t    t['cadeva'] = 0x091A;\n\t    t['cagujarati'] = 0x0A9A;\n\t    t['cagurmukhi'] = 0x0A1A;\n\t    t['calsquare'] = 0x3388;\n\t    t['candrabindubengali'] = 0x0981;\n\t    t['candrabinducmb'] = 0x0310;\n\t    t['candrabindudeva'] = 0x0901;\n\t    t['candrabindugujarati'] = 0x0A81;\n\t    t['capslock'] = 0x21EA;\n\t    t['careof'] = 0x2105;\n\t    t['caron'] = 0x02C7;\n\t    t['caronbelowcmb'] = 0x032C;\n\t    t['caroncmb'] = 0x030C;\n\t    t['carriagereturn'] = 0x21B5;\n\t    t['cbopomofo'] = 0x3118;\n\t    t['ccaron'] = 0x010D;\n\t    t['ccedilla'] = 0x00E7;\n\t    t['ccedillaacute'] = 0x1E09;\n\t    t['ccircle'] = 0x24D2;\n\t    t['ccircumflex'] = 0x0109;\n\t    t['ccurl'] = 0x0255;\n\t    t['cdot'] = 0x010B;\n\t    t['cdotaccent'] = 0x010B;\n\t    t['cdsquare'] = 0x33C5;\n\t    t['cedilla'] = 0x00B8;\n\t    t['cedillacmb'] = 0x0327;\n\t    t['cent'] = 0x00A2;\n\t    t['centigrade'] = 0x2103;\n\t    t['centinferior'] = 0xF6DF;\n\t    t['centmonospace'] = 0xFFE0;\n\t    t['centoldstyle'] = 0xF7A2;\n\t    t['centsuperior'] = 0xF6E0;\n\t    t['chaarmenian'] = 0x0579;\n\t    t['chabengali'] = 0x099B;\n\t    t['chadeva'] = 0x091B;\n\t    t['chagujarati'] = 0x0A9B;\n\t    t['chagurmukhi'] = 0x0A1B;\n\t    t['chbopomofo'] = 0x3114;\n\t    t['cheabkhasiancyrillic'] = 0x04BD;\n\t    t['checkmark'] = 0x2713;\n\t    t['checyrillic'] = 0x0447;\n\t    t['chedescenderabkhasiancyrillic'] = 0x04BF;\n\t    t['chedescendercyrillic'] = 0x04B7;\n\t    t['chedieresiscyrillic'] = 0x04F5;\n\t    t['cheharmenian'] = 0x0573;\n\t    t['chekhakassiancyrillic'] = 0x04CC;\n\t    t['cheverticalstrokecyrillic'] = 0x04B9;\n\t    t['chi'] = 0x03C7;\n\t    t['chieuchacirclekorean'] = 0x3277;\n\t    t['chieuchaparenkorean'] = 0x3217;\n\t    t['chieuchcirclekorean'] = 0x3269;\n\t    t['chieuchkorean'] = 0x314A;\n\t    t['chieuchparenkorean'] = 0x3209;\n\t    t['chochangthai'] = 0x0E0A;\n\t    t['chochanthai'] = 0x0E08;\n\t    t['chochingthai'] = 0x0E09;\n\t    t['chochoethai'] = 0x0E0C;\n\t    t['chook'] = 0x0188;\n\t    t['cieucacirclekorean'] = 0x3276;\n\t    t['cieucaparenkorean'] = 0x3216;\n\t    t['cieuccirclekorean'] = 0x3268;\n\t    t['cieuckorean'] = 0x3148;\n\t    t['cieucparenkorean'] = 0x3208;\n\t    t['cieucuparenkorean'] = 0x321C;\n\t    t['circle'] = 0x25CB;\n\t    t['circlecopyrt'] = 0x00A9;\n\t    t['circlemultiply'] = 0x2297;\n\t    t['circleot'] = 0x2299;\n\t    t['circleplus'] = 0x2295;\n\t    t['circlepostalmark'] = 0x3036;\n\t    t['circlewithlefthalfblack'] = 0x25D0;\n\t    t['circlewithrighthalfblack'] = 0x25D1;\n\t    t['circumflex'] = 0x02C6;\n\t    t['circumflexbelowcmb'] = 0x032D;\n\t    t['circumflexcmb'] = 0x0302;\n\t    t['clear'] = 0x2327;\n\t    t['clickalveolar'] = 0x01C2;\n\t    t['clickdental'] = 0x01C0;\n\t    t['clicklateral'] = 0x01C1;\n\t    t['clickretroflex'] = 0x01C3;\n\t    t['club'] = 0x2663;\n\t    t['clubsuitblack'] = 0x2663;\n\t    t['clubsuitwhite'] = 0x2667;\n\t    t['cmcubedsquare'] = 0x33A4;\n\t    t['cmonospace'] = 0xFF43;\n\t    t['cmsquaredsquare'] = 0x33A0;\n\t    t['coarmenian'] = 0x0581;\n\t    t['colon'] = 0x003A;\n\t    t['colonmonetary'] = 0x20A1;\n\t    t['colonmonospace'] = 0xFF1A;\n\t    t['colonsign'] = 0x20A1;\n\t    t['colonsmall'] = 0xFE55;\n\t    t['colontriangularhalfmod'] = 0x02D1;\n\t    t['colontriangularmod'] = 0x02D0;\n\t    t['comma'] = 0x002C;\n\t    t['commaabovecmb'] = 0x0313;\n\t    t['commaaboverightcmb'] = 0x0315;\n\t    t['commaaccent'] = 0xF6C3;\n\t    t['commaarabic'] = 0x060C;\n\t    t['commaarmenian'] = 0x055D;\n\t    t['commainferior'] = 0xF6E1;\n\t    t['commamonospace'] = 0xFF0C;\n\t    t['commareversedabovecmb'] = 0x0314;\n\t    t['commareversedmod'] = 0x02BD;\n\t    t['commasmall'] = 0xFE50;\n\t    t['commasuperior'] = 0xF6E2;\n\t    t['commaturnedabovecmb'] = 0x0312;\n\t    t['commaturnedmod'] = 0x02BB;\n\t    t['compass'] = 0x263C;\n\t    t['congruent'] = 0x2245;\n\t    t['contourintegral'] = 0x222E;\n\t    t['control'] = 0x2303;\n\t    t['controlACK'] = 0x0006;\n\t    t['controlBEL'] = 0x0007;\n\t    t['controlBS'] = 0x0008;\n\t    t['controlCAN'] = 0x0018;\n\t    t['controlCR'] = 0x000D;\n\t    t['controlDC1'] = 0x0011;\n\t    t['controlDC2'] = 0x0012;\n\t    t['controlDC3'] = 0x0013;\n\t    t['controlDC4'] = 0x0014;\n\t    t['controlDEL'] = 0x007F;\n\t    t['controlDLE'] = 0x0010;\n\t    t['controlEM'] = 0x0019;\n\t    t['controlENQ'] = 0x0005;\n\t    t['controlEOT'] = 0x0004;\n\t    t['controlESC'] = 0x001B;\n\t    t['controlETB'] = 0x0017;\n\t    t['controlETX'] = 0x0003;\n\t    t['controlFF'] = 0x000C;\n\t    t['controlFS'] = 0x001C;\n\t    t['controlGS'] = 0x001D;\n\t    t['controlHT'] = 0x0009;\n\t    t['controlLF'] = 0x000A;\n\t    t['controlNAK'] = 0x0015;\n\t    t['controlNULL'] = 0x0000;\n\t    t['controlRS'] = 0x001E;\n\t    t['controlSI'] = 0x000F;\n\t    t['controlSO'] = 0x000E;\n\t    t['controlSOT'] = 0x0002;\n\t    t['controlSTX'] = 0x0001;\n\t    t['controlSUB'] = 0x001A;\n\t    t['controlSYN'] = 0x0016;\n\t    t['controlUS'] = 0x001F;\n\t    t['controlVT'] = 0x000B;\n\t    t['copyright'] = 0x00A9;\n\t    t['copyrightsans'] = 0xF8E9;\n\t    t['copyrightserif'] = 0xF6D9;\n\t    t['cornerbracketleft'] = 0x300C;\n\t    t['cornerbracketlefthalfwidth'] = 0xFF62;\n\t    t['cornerbracketleftvertical'] = 0xFE41;\n\t    t['cornerbracketright'] = 0x300D;\n\t    t['cornerbracketrighthalfwidth'] = 0xFF63;\n\t    t['cornerbracketrightvertical'] = 0xFE42;\n\t    t['corporationsquare'] = 0x337F;\n\t    t['cosquare'] = 0x33C7;\n\t    t['coverkgsquare'] = 0x33C6;\n\t    t['cparen'] = 0x249E;\n\t    t['cruzeiro'] = 0x20A2;\n\t    t['cstretched'] = 0x0297;\n\t    t['curlyand'] = 0x22CF;\n\t    t['curlyor'] = 0x22CE;\n\t    t['currency'] = 0x00A4;\n\t    t['cyrBreve'] = 0xF6D1;\n\t    t['cyrFlex'] = 0xF6D2;\n\t    t['cyrbreve'] = 0xF6D4;\n\t    t['cyrflex'] = 0xF6D5;\n\t    t['d'] = 0x0064;\n\t    t['daarmenian'] = 0x0564;\n\t    t['dabengali'] = 0x09A6;\n\t    t['dadarabic'] = 0x0636;\n\t    t['dadeva'] = 0x0926;\n\t    t['dadfinalarabic'] = 0xFEBE;\n\t    t['dadinitialarabic'] = 0xFEBF;\n\t    t['dadmedialarabic'] = 0xFEC0;\n\t    t['dagesh'] = 0x05BC;\n\t    t['dageshhebrew'] = 0x05BC;\n\t    t['dagger'] = 0x2020;\n\t    t['daggerdbl'] = 0x2021;\n\t    t['dagujarati'] = 0x0AA6;\n\t    t['dagurmukhi'] = 0x0A26;\n\t    t['dahiragana'] = 0x3060;\n\t    t['dakatakana'] = 0x30C0;\n\t    t['dalarabic'] = 0x062F;\n\t    t['dalet'] = 0x05D3;\n\t    t['daletdagesh'] = 0xFB33;\n\t    t['daletdageshhebrew'] = 0xFB33;\n\t    t['dalethebrew'] = 0x05D3;\n\t    t['dalfinalarabic'] = 0xFEAA;\n\t    t['dammaarabic'] = 0x064F;\n\t    t['dammalowarabic'] = 0x064F;\n\t    t['dammatanaltonearabic'] = 0x064C;\n\t    t['dammatanarabic'] = 0x064C;\n\t    t['danda'] = 0x0964;\n\t    t['dargahebrew'] = 0x05A7;\n\t    t['dargalefthebrew'] = 0x05A7;\n\t    t['dasiapneumatacyrilliccmb'] = 0x0485;\n\t    t['dblGrave'] = 0xF6D3;\n\t    t['dblanglebracketleft'] = 0x300A;\n\t    t['dblanglebracketleftvertical'] = 0xFE3D;\n\t    t['dblanglebracketright'] = 0x300B;\n\t    t['dblanglebracketrightvertical'] = 0xFE3E;\n\t    t['dblarchinvertedbelowcmb'] = 0x032B;\n\t    t['dblarrowleft'] = 0x21D4;\n\t    t['dblarrowright'] = 0x21D2;\n\t    t['dbldanda'] = 0x0965;\n\t    t['dblgrave'] = 0xF6D6;\n\t    t['dblgravecmb'] = 0x030F;\n\t    t['dblintegral'] = 0x222C;\n\t    t['dbllowline'] = 0x2017;\n\t    t['dbllowlinecmb'] = 0x0333;\n\t    t['dbloverlinecmb'] = 0x033F;\n\t    t['dblprimemod'] = 0x02BA;\n\t    t['dblverticalbar'] = 0x2016;\n\t    t['dblverticallineabovecmb'] = 0x030E;\n\t    t['dbopomofo'] = 0x3109;\n\t    t['dbsquare'] = 0x33C8;\n\t    t['dcaron'] = 0x010F;\n\t    t['dcedilla'] = 0x1E11;\n\t    t['dcircle'] = 0x24D3;\n\t    t['dcircumflexbelow'] = 0x1E13;\n\t    t['dcroat'] = 0x0111;\n\t    t['ddabengali'] = 0x09A1;\n\t    t['ddadeva'] = 0x0921;\n\t    t['ddagujarati'] = 0x0AA1;\n\t    t['ddagurmukhi'] = 0x0A21;\n\t    t['ddalarabic'] = 0x0688;\n\t    t['ddalfinalarabic'] = 0xFB89;\n\t    t['dddhadeva'] = 0x095C;\n\t    t['ddhabengali'] = 0x09A2;\n\t    t['ddhadeva'] = 0x0922;\n\t    t['ddhagujarati'] = 0x0AA2;\n\t    t['ddhagurmukhi'] = 0x0A22;\n\t    t['ddotaccent'] = 0x1E0B;\n\t    t['ddotbelow'] = 0x1E0D;\n\t    t['decimalseparatorarabic'] = 0x066B;\n\t    t['decimalseparatorpersian'] = 0x066B;\n\t    t['decyrillic'] = 0x0434;\n\t    t['degree'] = 0x00B0;\n\t    t['dehihebrew'] = 0x05AD;\n\t    t['dehiragana'] = 0x3067;\n\t    t['deicoptic'] = 0x03EF;\n\t    t['dekatakana'] = 0x30C7;\n\t    t['deleteleft'] = 0x232B;\n\t    t['deleteright'] = 0x2326;\n\t    t['delta'] = 0x03B4;\n\t    t['deltaturned'] = 0x018D;\n\t    t['denominatorminusonenumeratorbengali'] = 0x09F8;\n\t    t['dezh'] = 0x02A4;\n\t    t['dhabengali'] = 0x09A7;\n\t    t['dhadeva'] = 0x0927;\n\t    t['dhagujarati'] = 0x0AA7;\n\t    t['dhagurmukhi'] = 0x0A27;\n\t    t['dhook'] = 0x0257;\n\t    t['dialytikatonos'] = 0x0385;\n\t    t['dialytikatonoscmb'] = 0x0344;\n\t    t['diamond'] = 0x2666;\n\t    t['diamondsuitwhite'] = 0x2662;\n\t    t['dieresis'] = 0x00A8;\n\t    t['dieresisacute'] = 0xF6D7;\n\t    t['dieresisbelowcmb'] = 0x0324;\n\t    t['dieresiscmb'] = 0x0308;\n\t    t['dieresisgrave'] = 0xF6D8;\n\t    t['dieresistonos'] = 0x0385;\n\t    t['dihiragana'] = 0x3062;\n\t    t['dikatakana'] = 0x30C2;\n\t    t['dittomark'] = 0x3003;\n\t    t['divide'] = 0x00F7;\n\t    t['divides'] = 0x2223;\n\t    t['divisionslash'] = 0x2215;\n\t    t['djecyrillic'] = 0x0452;\n\t    t['dkshade'] = 0x2593;\n\t    t['dlinebelow'] = 0x1E0F;\n\t    t['dlsquare'] = 0x3397;\n\t    t['dmacron'] = 0x0111;\n\t    t['dmonospace'] = 0xFF44;\n\t    t['dnblock'] = 0x2584;\n\t    t['dochadathai'] = 0x0E0E;\n\t    t['dodekthai'] = 0x0E14;\n\t    t['dohiragana'] = 0x3069;\n\t    t['dokatakana'] = 0x30C9;\n\t    t['dollar'] = 0x0024;\n\t    t['dollarinferior'] = 0xF6E3;\n\t    t['dollarmonospace'] = 0xFF04;\n\t    t['dollaroldstyle'] = 0xF724;\n\t    t['dollarsmall'] = 0xFE69;\n\t    t['dollarsuperior'] = 0xF6E4;\n\t    t['dong'] = 0x20AB;\n\t    t['dorusquare'] = 0x3326;\n\t    t['dotaccent'] = 0x02D9;\n\t    t['dotaccentcmb'] = 0x0307;\n\t    t['dotbelowcmb'] = 0x0323;\n\t    t['dotbelowcomb'] = 0x0323;\n\t    t['dotkatakana'] = 0x30FB;\n\t    t['dotlessi'] = 0x0131;\n\t    t['dotlessj'] = 0xF6BE;\n\t    t['dotlessjstrokehook'] = 0x0284;\n\t    t['dotmath'] = 0x22C5;\n\t    t['dottedcircle'] = 0x25CC;\n\t    t['doubleyodpatah'] = 0xFB1F;\n\t    t['doubleyodpatahhebrew'] = 0xFB1F;\n\t    t['downtackbelowcmb'] = 0x031E;\n\t    t['downtackmod'] = 0x02D5;\n\t    t['dparen'] = 0x249F;\n\t    t['dsuperior'] = 0xF6EB;\n\t    t['dtail'] = 0x0256;\n\t    t['dtopbar'] = 0x018C;\n\t    t['duhiragana'] = 0x3065;\n\t    t['dukatakana'] = 0x30C5;\n\t    t['dz'] = 0x01F3;\n\t    t['dzaltone'] = 0x02A3;\n\t    t['dzcaron'] = 0x01C6;\n\t    t['dzcurl'] = 0x02A5;\n\t    t['dzeabkhasiancyrillic'] = 0x04E1;\n\t    t['dzecyrillic'] = 0x0455;\n\t    t['dzhecyrillic'] = 0x045F;\n\t    t['e'] = 0x0065;\n\t    t['eacute'] = 0x00E9;\n\t    t['earth'] = 0x2641;\n\t    t['ebengali'] = 0x098F;\n\t    t['ebopomofo'] = 0x311C;\n\t    t['ebreve'] = 0x0115;\n\t    t['ecandradeva'] = 0x090D;\n\t    t['ecandragujarati'] = 0x0A8D;\n\t    t['ecandravowelsigndeva'] = 0x0945;\n\t    t['ecandravowelsigngujarati'] = 0x0AC5;\n\t    t['ecaron'] = 0x011B;\n\t    t['ecedillabreve'] = 0x1E1D;\n\t    t['echarmenian'] = 0x0565;\n\t    t['echyiwnarmenian'] = 0x0587;\n\t    t['ecircle'] = 0x24D4;\n\t    t['ecircumflex'] = 0x00EA;\n\t    t['ecircumflexacute'] = 0x1EBF;\n\t    t['ecircumflexbelow'] = 0x1E19;\n\t    t['ecircumflexdotbelow'] = 0x1EC7;\n\t    t['ecircumflexgrave'] = 0x1EC1;\n\t    t['ecircumflexhookabove'] = 0x1EC3;\n\t    t['ecircumflextilde'] = 0x1EC5;\n\t    t['ecyrillic'] = 0x0454;\n\t    t['edblgrave'] = 0x0205;\n\t    t['edeva'] = 0x090F;\n\t    t['edieresis'] = 0x00EB;\n\t    t['edot'] = 0x0117;\n\t    t['edotaccent'] = 0x0117;\n\t    t['edotbelow'] = 0x1EB9;\n\t    t['eegurmukhi'] = 0x0A0F;\n\t    t['eematragurmukhi'] = 0x0A47;\n\t    t['efcyrillic'] = 0x0444;\n\t    t['egrave'] = 0x00E8;\n\t    t['egujarati'] = 0x0A8F;\n\t    t['eharmenian'] = 0x0567;\n\t    t['ehbopomofo'] = 0x311D;\n\t    t['ehiragana'] = 0x3048;\n\t    t['ehookabove'] = 0x1EBB;\n\t    t['eibopomofo'] = 0x311F;\n\t    t['eight'] = 0x0038;\n\t    t['eightarabic'] = 0x0668;\n\t    t['eightbengali'] = 0x09EE;\n\t    t['eightcircle'] = 0x2467;\n\t    t['eightcircleinversesansserif'] = 0x2791;\n\t    t['eightdeva'] = 0x096E;\n\t    t['eighteencircle'] = 0x2471;\n\t    t['eighteenparen'] = 0x2485;\n\t    t['eighteenperiod'] = 0x2499;\n\t    t['eightgujarati'] = 0x0AEE;\n\t    t['eightgurmukhi'] = 0x0A6E;\n\t    t['eighthackarabic'] = 0x0668;\n\t    t['eighthangzhou'] = 0x3028;\n\t    t['eighthnotebeamed'] = 0x266B;\n\t    t['eightideographicparen'] = 0x3227;\n\t    t['eightinferior'] = 0x2088;\n\t    t['eightmonospace'] = 0xFF18;\n\t    t['eightoldstyle'] = 0xF738;\n\t    t['eightparen'] = 0x247B;\n\t    t['eightperiod'] = 0x248F;\n\t    t['eightpersian'] = 0x06F8;\n\t    t['eightroman'] = 0x2177;\n\t    t['eightsuperior'] = 0x2078;\n\t    t['eightthai'] = 0x0E58;\n\t    t['einvertedbreve'] = 0x0207;\n\t    t['eiotifiedcyrillic'] = 0x0465;\n\t    t['ekatakana'] = 0x30A8;\n\t    t['ekatakanahalfwidth'] = 0xFF74;\n\t    t['ekonkargurmukhi'] = 0x0A74;\n\t    t['ekorean'] = 0x3154;\n\t    t['elcyrillic'] = 0x043B;\n\t    t['element'] = 0x2208;\n\t    t['elevencircle'] = 0x246A;\n\t    t['elevenparen'] = 0x247E;\n\t    t['elevenperiod'] = 0x2492;\n\t    t['elevenroman'] = 0x217A;\n\t    t['ellipsis'] = 0x2026;\n\t    t['ellipsisvertical'] = 0x22EE;\n\t    t['emacron'] = 0x0113;\n\t    t['emacronacute'] = 0x1E17;\n\t    t['emacrongrave'] = 0x1E15;\n\t    t['emcyrillic'] = 0x043C;\n\t    t['emdash'] = 0x2014;\n\t    t['emdashvertical'] = 0xFE31;\n\t    t['emonospace'] = 0xFF45;\n\t    t['emphasismarkarmenian'] = 0x055B;\n\t    t['emptyset'] = 0x2205;\n\t    t['enbopomofo'] = 0x3123;\n\t    t['encyrillic'] = 0x043D;\n\t    t['endash'] = 0x2013;\n\t    t['endashvertical'] = 0xFE32;\n\t    t['endescendercyrillic'] = 0x04A3;\n\t    t['eng'] = 0x014B;\n\t    t['engbopomofo'] = 0x3125;\n\t    t['enghecyrillic'] = 0x04A5;\n\t    t['enhookcyrillic'] = 0x04C8;\n\t    t['enspace'] = 0x2002;\n\t    t['eogonek'] = 0x0119;\n\t    t['eokorean'] = 0x3153;\n\t    t['eopen'] = 0x025B;\n\t    t['eopenclosed'] = 0x029A;\n\t    t['eopenreversed'] = 0x025C;\n\t    t['eopenreversedclosed'] = 0x025E;\n\t    t['eopenreversedhook'] = 0x025D;\n\t    t['eparen'] = 0x24A0;\n\t    t['epsilon'] = 0x03B5;\n\t    t['epsilontonos'] = 0x03AD;\n\t    t['equal'] = 0x003D;\n\t    t['equalmonospace'] = 0xFF1D;\n\t    t['equalsmall'] = 0xFE66;\n\t    t['equalsuperior'] = 0x207C;\n\t    t['equivalence'] = 0x2261;\n\t    t['erbopomofo'] = 0x3126;\n\t    t['ercyrillic'] = 0x0440;\n\t    t['ereversed'] = 0x0258;\n\t    t['ereversedcyrillic'] = 0x044D;\n\t    t['escyrillic'] = 0x0441;\n\t    t['esdescendercyrillic'] = 0x04AB;\n\t    t['esh'] = 0x0283;\n\t    t['eshcurl'] = 0x0286;\n\t    t['eshortdeva'] = 0x090E;\n\t    t['eshortvowelsigndeva'] = 0x0946;\n\t    t['eshreversedloop'] = 0x01AA;\n\t    t['eshsquatreversed'] = 0x0285;\n\t    t['esmallhiragana'] = 0x3047;\n\t    t['esmallkatakana'] = 0x30A7;\n\t    t['esmallkatakanahalfwidth'] = 0xFF6A;\n\t    t['estimated'] = 0x212E;\n\t    t['esuperior'] = 0xF6EC;\n\t    t['eta'] = 0x03B7;\n\t    t['etarmenian'] = 0x0568;\n\t    t['etatonos'] = 0x03AE;\n\t    t['eth'] = 0x00F0;\n\t    t['etilde'] = 0x1EBD;\n\t    t['etildebelow'] = 0x1E1B;\n\t    t['etnahtafoukhhebrew'] = 0x0591;\n\t    t['etnahtafoukhlefthebrew'] = 0x0591;\n\t    t['etnahtahebrew'] = 0x0591;\n\t    t['etnahtalefthebrew'] = 0x0591;\n\t    t['eturned'] = 0x01DD;\n\t    t['eukorean'] = 0x3161;\n\t    t['euro'] = 0x20AC;\n\t    t['evowelsignbengali'] = 0x09C7;\n\t    t['evowelsigndeva'] = 0x0947;\n\t    t['evowelsigngujarati'] = 0x0AC7;\n\t    t['exclam'] = 0x0021;\n\t    t['exclamarmenian'] = 0x055C;\n\t    t['exclamdbl'] = 0x203C;\n\t    t['exclamdown'] = 0x00A1;\n\t    t['exclamdownsmall'] = 0xF7A1;\n\t    t['exclammonospace'] = 0xFF01;\n\t    t['exclamsmall'] = 0xF721;\n\t    t['existential'] = 0x2203;\n\t    t['ezh'] = 0x0292;\n\t    t['ezhcaron'] = 0x01EF;\n\t    t['ezhcurl'] = 0x0293;\n\t    t['ezhreversed'] = 0x01B9;\n\t    t['ezhtail'] = 0x01BA;\n\t    t['f'] = 0x0066;\n\t    t['fadeva'] = 0x095E;\n\t    t['fagurmukhi'] = 0x0A5E;\n\t    t['fahrenheit'] = 0x2109;\n\t    t['fathaarabic'] = 0x064E;\n\t    t['fathalowarabic'] = 0x064E;\n\t    t['fathatanarabic'] = 0x064B;\n\t    t['fbopomofo'] = 0x3108;\n\t    t['fcircle'] = 0x24D5;\n\t    t['fdotaccent'] = 0x1E1F;\n\t    t['feharabic'] = 0x0641;\n\t    t['feharmenian'] = 0x0586;\n\t    t['fehfinalarabic'] = 0xFED2;\n\t    t['fehinitialarabic'] = 0xFED3;\n\t    t['fehmedialarabic'] = 0xFED4;\n\t    t['feicoptic'] = 0x03E5;\n\t    t['female'] = 0x2640;\n\t    t['ff'] = 0xFB00;\n\t    t['ffi'] = 0xFB03;\n\t    t['ffl'] = 0xFB04;\n\t    t['fi'] = 0xFB01;\n\t    t['fifteencircle'] = 0x246E;\n\t    t['fifteenparen'] = 0x2482;\n\t    t['fifteenperiod'] = 0x2496;\n\t    t['figuredash'] = 0x2012;\n\t    t['filledbox'] = 0x25A0;\n\t    t['filledrect'] = 0x25AC;\n\t    t['finalkaf'] = 0x05DA;\n\t    t['finalkafdagesh'] = 0xFB3A;\n\t    t['finalkafdageshhebrew'] = 0xFB3A;\n\t    t['finalkafhebrew'] = 0x05DA;\n\t    t['finalmem'] = 0x05DD;\n\t    t['finalmemhebrew'] = 0x05DD;\n\t    t['finalnun'] = 0x05DF;\n\t    t['finalnunhebrew'] = 0x05DF;\n\t    t['finalpe'] = 0x05E3;\n\t    t['finalpehebrew'] = 0x05E3;\n\t    t['finaltsadi'] = 0x05E5;\n\t    t['finaltsadihebrew'] = 0x05E5;\n\t    t['firsttonechinese'] = 0x02C9;\n\t    t['fisheye'] = 0x25C9;\n\t    t['fitacyrillic'] = 0x0473;\n\t    t['five'] = 0x0035;\n\t    t['fivearabic'] = 0x0665;\n\t    t['fivebengali'] = 0x09EB;\n\t    t['fivecircle'] = 0x2464;\n\t    t['fivecircleinversesansserif'] = 0x278E;\n\t    t['fivedeva'] = 0x096B;\n\t    t['fiveeighths'] = 0x215D;\n\t    t['fivegujarati'] = 0x0AEB;\n\t    t['fivegurmukhi'] = 0x0A6B;\n\t    t['fivehackarabic'] = 0x0665;\n\t    t['fivehangzhou'] = 0x3025;\n\t    t['fiveideographicparen'] = 0x3224;\n\t    t['fiveinferior'] = 0x2085;\n\t    t['fivemonospace'] = 0xFF15;\n\t    t['fiveoldstyle'] = 0xF735;\n\t    t['fiveparen'] = 0x2478;\n\t    t['fiveperiod'] = 0x248C;\n\t    t['fivepersian'] = 0x06F5;\n\t    t['fiveroman'] = 0x2174;\n\t    t['fivesuperior'] = 0x2075;\n\t    t['fivethai'] = 0x0E55;\n\t    t['fl'] = 0xFB02;\n\t    t['florin'] = 0x0192;\n\t    t['fmonospace'] = 0xFF46;\n\t    t['fmsquare'] = 0x3399;\n\t    t['fofanthai'] = 0x0E1F;\n\t    t['fofathai'] = 0x0E1D;\n\t    t['fongmanthai'] = 0x0E4F;\n\t    t['forall'] = 0x2200;\n\t    t['four'] = 0x0034;\n\t    t['fourarabic'] = 0x0664;\n\t    t['fourbengali'] = 0x09EA;\n\t    t['fourcircle'] = 0x2463;\n\t    t['fourcircleinversesansserif'] = 0x278D;\n\t    t['fourdeva'] = 0x096A;\n\t    t['fourgujarati'] = 0x0AEA;\n\t    t['fourgurmukhi'] = 0x0A6A;\n\t    t['fourhackarabic'] = 0x0664;\n\t    t['fourhangzhou'] = 0x3024;\n\t    t['fourideographicparen'] = 0x3223;\n\t    t['fourinferior'] = 0x2084;\n\t    t['fourmonospace'] = 0xFF14;\n\t    t['fournumeratorbengali'] = 0x09F7;\n\t    t['fouroldstyle'] = 0xF734;\n\t    t['fourparen'] = 0x2477;\n\t    t['fourperiod'] = 0x248B;\n\t    t['fourpersian'] = 0x06F4;\n\t    t['fourroman'] = 0x2173;\n\t    t['foursuperior'] = 0x2074;\n\t    t['fourteencircle'] = 0x246D;\n\t    t['fourteenparen'] = 0x2481;\n\t    t['fourteenperiod'] = 0x2495;\n\t    t['fourthai'] = 0x0E54;\n\t    t['fourthtonechinese'] = 0x02CB;\n\t    t['fparen'] = 0x24A1;\n\t    t['fraction'] = 0x2044;\n\t    t['franc'] = 0x20A3;\n\t    t['g'] = 0x0067;\n\t    t['gabengali'] = 0x0997;\n\t    t['gacute'] = 0x01F5;\n\t    t['gadeva'] = 0x0917;\n\t    t['gafarabic'] = 0x06AF;\n\t    t['gaffinalarabic'] = 0xFB93;\n\t    t['gafinitialarabic'] = 0xFB94;\n\t    t['gafmedialarabic'] = 0xFB95;\n\t    t['gagujarati'] = 0x0A97;\n\t    t['gagurmukhi'] = 0x0A17;\n\t    t['gahiragana'] = 0x304C;\n\t    t['gakatakana'] = 0x30AC;\n\t    t['gamma'] = 0x03B3;\n\t    t['gammalatinsmall'] = 0x0263;\n\t    t['gammasuperior'] = 0x02E0;\n\t    t['gangiacoptic'] = 0x03EB;\n\t    t['gbopomofo'] = 0x310D;\n\t    t['gbreve'] = 0x011F;\n\t    t['gcaron'] = 0x01E7;\n\t    t['gcedilla'] = 0x0123;\n\t    t['gcircle'] = 0x24D6;\n\t    t['gcircumflex'] = 0x011D;\n\t    t['gcommaaccent'] = 0x0123;\n\t    t['gdot'] = 0x0121;\n\t    t['gdotaccent'] = 0x0121;\n\t    t['gecyrillic'] = 0x0433;\n\t    t['gehiragana'] = 0x3052;\n\t    t['gekatakana'] = 0x30B2;\n\t    t['geometricallyequal'] = 0x2251;\n\t    t['gereshaccenthebrew'] = 0x059C;\n\t    t['gereshhebrew'] = 0x05F3;\n\t    t['gereshmuqdamhebrew'] = 0x059D;\n\t    t['germandbls'] = 0x00DF;\n\t    t['gershayimaccenthebrew'] = 0x059E;\n\t    t['gershayimhebrew'] = 0x05F4;\n\t    t['getamark'] = 0x3013;\n\t    t['ghabengali'] = 0x0998;\n\t    t['ghadarmenian'] = 0x0572;\n\t    t['ghadeva'] = 0x0918;\n\t    t['ghagujarati'] = 0x0A98;\n\t    t['ghagurmukhi'] = 0x0A18;\n\t    t['ghainarabic'] = 0x063A;\n\t    t['ghainfinalarabic'] = 0xFECE;\n\t    t['ghaininitialarabic'] = 0xFECF;\n\t    t['ghainmedialarabic'] = 0xFED0;\n\t    t['ghemiddlehookcyrillic'] = 0x0495;\n\t    t['ghestrokecyrillic'] = 0x0493;\n\t    t['gheupturncyrillic'] = 0x0491;\n\t    t['ghhadeva'] = 0x095A;\n\t    t['ghhagurmukhi'] = 0x0A5A;\n\t    t['ghook'] = 0x0260;\n\t    t['ghzsquare'] = 0x3393;\n\t    t['gihiragana'] = 0x304E;\n\t    t['gikatakana'] = 0x30AE;\n\t    t['gimarmenian'] = 0x0563;\n\t    t['gimel'] = 0x05D2;\n\t    t['gimeldagesh'] = 0xFB32;\n\t    t['gimeldageshhebrew'] = 0xFB32;\n\t    t['gimelhebrew'] = 0x05D2;\n\t    t['gjecyrillic'] = 0x0453;\n\t    t['glottalinvertedstroke'] = 0x01BE;\n\t    t['glottalstop'] = 0x0294;\n\t    t['glottalstopinverted'] = 0x0296;\n\t    t['glottalstopmod'] = 0x02C0;\n\t    t['glottalstopreversed'] = 0x0295;\n\t    t['glottalstopreversedmod'] = 0x02C1;\n\t    t['glottalstopreversedsuperior'] = 0x02E4;\n\t    t['glottalstopstroke'] = 0x02A1;\n\t    t['glottalstopstrokereversed'] = 0x02A2;\n\t    t['gmacron'] = 0x1E21;\n\t    t['gmonospace'] = 0xFF47;\n\t    t['gohiragana'] = 0x3054;\n\t    t['gokatakana'] = 0x30B4;\n\t    t['gparen'] = 0x24A2;\n\t    t['gpasquare'] = 0x33AC;\n\t    t['gradient'] = 0x2207;\n\t    t['grave'] = 0x0060;\n\t    t['gravebelowcmb'] = 0x0316;\n\t    t['gravecmb'] = 0x0300;\n\t    t['gravecomb'] = 0x0300;\n\t    t['gravedeva'] = 0x0953;\n\t    t['gravelowmod'] = 0x02CE;\n\t    t['gravemonospace'] = 0xFF40;\n\t    t['gravetonecmb'] = 0x0340;\n\t    t['greater'] = 0x003E;\n\t    t['greaterequal'] = 0x2265;\n\t    t['greaterequalorless'] = 0x22DB;\n\t    t['greatermonospace'] = 0xFF1E;\n\t    t['greaterorequivalent'] = 0x2273;\n\t    t['greaterorless'] = 0x2277;\n\t    t['greateroverequal'] = 0x2267;\n\t    t['greatersmall'] = 0xFE65;\n\t    t['gscript'] = 0x0261;\n\t    t['gstroke'] = 0x01E5;\n\t    t['guhiragana'] = 0x3050;\n\t    t['guillemotleft'] = 0x00AB;\n\t    t['guillemotright'] = 0x00BB;\n\t    t['guilsinglleft'] = 0x2039;\n\t    t['guilsinglright'] = 0x203A;\n\t    t['gukatakana'] = 0x30B0;\n\t    t['guramusquare'] = 0x3318;\n\t    t['gysquare'] = 0x33C9;\n\t    t['h'] = 0x0068;\n\t    t['haabkhasiancyrillic'] = 0x04A9;\n\t    t['haaltonearabic'] = 0x06C1;\n\t    t['habengali'] = 0x09B9;\n\t    t['hadescendercyrillic'] = 0x04B3;\n\t    t['hadeva'] = 0x0939;\n\t    t['hagujarati'] = 0x0AB9;\n\t    t['hagurmukhi'] = 0x0A39;\n\t    t['haharabic'] = 0x062D;\n\t    t['hahfinalarabic'] = 0xFEA2;\n\t    t['hahinitialarabic'] = 0xFEA3;\n\t    t['hahiragana'] = 0x306F;\n\t    t['hahmedialarabic'] = 0xFEA4;\n\t    t['haitusquare'] = 0x332A;\n\t    t['hakatakana'] = 0x30CF;\n\t    t['hakatakanahalfwidth'] = 0xFF8A;\n\t    t['halantgurmukhi'] = 0x0A4D;\n\t    t['hamzaarabic'] = 0x0621;\n\t    t['hamzalowarabic'] = 0x0621;\n\t    t['hangulfiller'] = 0x3164;\n\t    t['hardsigncyrillic'] = 0x044A;\n\t    t['harpoonleftbarbup'] = 0x21BC;\n\t    t['harpoonrightbarbup'] = 0x21C0;\n\t    t['hasquare'] = 0x33CA;\n\t    t['hatafpatah'] = 0x05B2;\n\t    t['hatafpatah16'] = 0x05B2;\n\t    t['hatafpatah23'] = 0x05B2;\n\t    t['hatafpatah2f'] = 0x05B2;\n\t    t['hatafpatahhebrew'] = 0x05B2;\n\t    t['hatafpatahnarrowhebrew'] = 0x05B2;\n\t    t['hatafpatahquarterhebrew'] = 0x05B2;\n\t    t['hatafpatahwidehebrew'] = 0x05B2;\n\t    t['hatafqamats'] = 0x05B3;\n\t    t['hatafqamats1b'] = 0x05B3;\n\t    t['hatafqamats28'] = 0x05B3;\n\t    t['hatafqamats34'] = 0x05B3;\n\t    t['hatafqamatshebrew'] = 0x05B3;\n\t    t['hatafqamatsnarrowhebrew'] = 0x05B3;\n\t    t['hatafqamatsquarterhebrew'] = 0x05B3;\n\t    t['hatafqamatswidehebrew'] = 0x05B3;\n\t    t['hatafsegol'] = 0x05B1;\n\t    t['hatafsegol17'] = 0x05B1;\n\t    t['hatafsegol24'] = 0x05B1;\n\t    t['hatafsegol30'] = 0x05B1;\n\t    t['hatafsegolhebrew'] = 0x05B1;\n\t    t['hatafsegolnarrowhebrew'] = 0x05B1;\n\t    t['hatafsegolquarterhebrew'] = 0x05B1;\n\t    t['hatafsegolwidehebrew'] = 0x05B1;\n\t    t['hbar'] = 0x0127;\n\t    t['hbopomofo'] = 0x310F;\n\t    t['hbrevebelow'] = 0x1E2B;\n\t    t['hcedilla'] = 0x1E29;\n\t    t['hcircle'] = 0x24D7;\n\t    t['hcircumflex'] = 0x0125;\n\t    t['hdieresis'] = 0x1E27;\n\t    t['hdotaccent'] = 0x1E23;\n\t    t['hdotbelow'] = 0x1E25;\n\t    t['he'] = 0x05D4;\n\t    t['heart'] = 0x2665;\n\t    t['heartsuitblack'] = 0x2665;\n\t    t['heartsuitwhite'] = 0x2661;\n\t    t['hedagesh'] = 0xFB34;\n\t    t['hedageshhebrew'] = 0xFB34;\n\t    t['hehaltonearabic'] = 0x06C1;\n\t    t['heharabic'] = 0x0647;\n\t    t['hehebrew'] = 0x05D4;\n\t    t['hehfinalaltonearabic'] = 0xFBA7;\n\t    t['hehfinalalttwoarabic'] = 0xFEEA;\n\t    t['hehfinalarabic'] = 0xFEEA;\n\t    t['hehhamzaabovefinalarabic'] = 0xFBA5;\n\t    t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\n\t    t['hehinitialaltonearabic'] = 0xFBA8;\n\t    t['hehinitialarabic'] = 0xFEEB;\n\t    t['hehiragana'] = 0x3078;\n\t    t['hehmedialaltonearabic'] = 0xFBA9;\n\t    t['hehmedialarabic'] = 0xFEEC;\n\t    t['heiseierasquare'] = 0x337B;\n\t    t['hekatakana'] = 0x30D8;\n\t    t['hekatakanahalfwidth'] = 0xFF8D;\n\t    t['hekutaarusquare'] = 0x3336;\n\t    t['henghook'] = 0x0267;\n\t    t['herutusquare'] = 0x3339;\n\t    t['het'] = 0x05D7;\n\t    t['hethebrew'] = 0x05D7;\n\t    t['hhook'] = 0x0266;\n\t    t['hhooksuperior'] = 0x02B1;\n\t    t['hieuhacirclekorean'] = 0x327B;\n\t    t['hieuhaparenkorean'] = 0x321B;\n\t    t['hieuhcirclekorean'] = 0x326D;\n\t    t['hieuhkorean'] = 0x314E;\n\t    t['hieuhparenkorean'] = 0x320D;\n\t    t['hihiragana'] = 0x3072;\n\t    t['hikatakana'] = 0x30D2;\n\t    t['hikatakanahalfwidth'] = 0xFF8B;\n\t    t['hiriq'] = 0x05B4;\n\t    t['hiriq14'] = 0x05B4;\n\t    t['hiriq21'] = 0x05B4;\n\t    t['hiriq2d'] = 0x05B4;\n\t    t['hiriqhebrew'] = 0x05B4;\n\t    t['hiriqnarrowhebrew'] = 0x05B4;\n\t    t['hiriqquarterhebrew'] = 0x05B4;\n\t    t['hiriqwidehebrew'] = 0x05B4;\n\t    t['hlinebelow'] = 0x1E96;\n\t    t['hmonospace'] = 0xFF48;\n\t    t['hoarmenian'] = 0x0570;\n\t    t['hohipthai'] = 0x0E2B;\n\t    t['hohiragana'] = 0x307B;\n\t    t['hokatakana'] = 0x30DB;\n\t    t['hokatakanahalfwidth'] = 0xFF8E;\n\t    t['holam'] = 0x05B9;\n\t    t['holam19'] = 0x05B9;\n\t    t['holam26'] = 0x05B9;\n\t    t['holam32'] = 0x05B9;\n\t    t['holamhebrew'] = 0x05B9;\n\t    t['holamnarrowhebrew'] = 0x05B9;\n\t    t['holamquarterhebrew'] = 0x05B9;\n\t    t['holamwidehebrew'] = 0x05B9;\n\t    t['honokhukthai'] = 0x0E2E;\n\t    t['hookabovecomb'] = 0x0309;\n\t    t['hookcmb'] = 0x0309;\n\t    t['hookpalatalizedbelowcmb'] = 0x0321;\n\t    t['hookretroflexbelowcmb'] = 0x0322;\n\t    t['hoonsquare'] = 0x3342;\n\t    t['horicoptic'] = 0x03E9;\n\t    t['horizontalbar'] = 0x2015;\n\t    t['horncmb'] = 0x031B;\n\t    t['hotsprings'] = 0x2668;\n\t    t['house'] = 0x2302;\n\t    t['hparen'] = 0x24A3;\n\t    t['hsuperior'] = 0x02B0;\n\t    t['hturned'] = 0x0265;\n\t    t['huhiragana'] = 0x3075;\n\t    t['huiitosquare'] = 0x3333;\n\t    t['hukatakana'] = 0x30D5;\n\t    t['hukatakanahalfwidth'] = 0xFF8C;\n\t    t['hungarumlaut'] = 0x02DD;\n\t    t['hungarumlautcmb'] = 0x030B;\n\t    t['hv'] = 0x0195;\n\t    t['hyphen'] = 0x002D;\n\t    t['hypheninferior'] = 0xF6E5;\n\t    t['hyphenmonospace'] = 0xFF0D;\n\t    t['hyphensmall'] = 0xFE63;\n\t    t['hyphensuperior'] = 0xF6E6;\n\t    t['hyphentwo'] = 0x2010;\n\t    t['i'] = 0x0069;\n\t    t['iacute'] = 0x00ED;\n\t    t['iacyrillic'] = 0x044F;\n\t    t['ibengali'] = 0x0987;\n\t    t['ibopomofo'] = 0x3127;\n\t    t['ibreve'] = 0x012D;\n\t    t['icaron'] = 0x01D0;\n\t    t['icircle'] = 0x24D8;\n\t    t['icircumflex'] = 0x00EE;\n\t    t['icyrillic'] = 0x0456;\n\t    t['idblgrave'] = 0x0209;\n\t    t['ideographearthcircle'] = 0x328F;\n\t    t['ideographfirecircle'] = 0x328B;\n\t    t['ideographicallianceparen'] = 0x323F;\n\t    t['ideographiccallparen'] = 0x323A;\n\t    t['ideographiccentrecircle'] = 0x32A5;\n\t    t['ideographicclose'] = 0x3006;\n\t    t['ideographiccomma'] = 0x3001;\n\t    t['ideographiccommaleft'] = 0xFF64;\n\t    t['ideographiccongratulationparen'] = 0x3237;\n\t    t['ideographiccorrectcircle'] = 0x32A3;\n\t    t['ideographicearthparen'] = 0x322F;\n\t    t['ideographicenterpriseparen'] = 0x323D;\n\t    t['ideographicexcellentcircle'] = 0x329D;\n\t    t['ideographicfestivalparen'] = 0x3240;\n\t    t['ideographicfinancialcircle'] = 0x3296;\n\t    t['ideographicfinancialparen'] = 0x3236;\n\t    t['ideographicfireparen'] = 0x322B;\n\t    t['ideographichaveparen'] = 0x3232;\n\t    t['ideographichighcircle'] = 0x32A4;\n\t    t['ideographiciterationmark'] = 0x3005;\n\t    t['ideographiclaborcircle'] = 0x3298;\n\t    t['ideographiclaborparen'] = 0x3238;\n\t    t['ideographicleftcircle'] = 0x32A7;\n\t    t['ideographiclowcircle'] = 0x32A6;\n\t    t['ideographicmedicinecircle'] = 0x32A9;\n\t    t['ideographicmetalparen'] = 0x322E;\n\t    t['ideographicmoonparen'] = 0x322A;\n\t    t['ideographicnameparen'] = 0x3234;\n\t    t['ideographicperiod'] = 0x3002;\n\t    t['ideographicprintcircle'] = 0x329E;\n\t    t['ideographicreachparen'] = 0x3243;\n\t    t['ideographicrepresentparen'] = 0x3239;\n\t    t['ideographicresourceparen'] = 0x323E;\n\t    t['ideographicrightcircle'] = 0x32A8;\n\t    t['ideographicsecretcircle'] = 0x3299;\n\t    t['ideographicselfparen'] = 0x3242;\n\t    t['ideographicsocietyparen'] = 0x3233;\n\t    t['ideographicspace'] = 0x3000;\n\t    t['ideographicspecialparen'] = 0x3235;\n\t    t['ideographicstockparen'] = 0x3231;\n\t    t['ideographicstudyparen'] = 0x323B;\n\t    t['ideographicsunparen'] = 0x3230;\n\t    t['ideographicsuperviseparen'] = 0x323C;\n\t    t['ideographicwaterparen'] = 0x322C;\n\t    t['ideographicwoodparen'] = 0x322D;\n\t    t['ideographiczero'] = 0x3007;\n\t    t['ideographmetalcircle'] = 0x328E;\n\t    t['ideographmooncircle'] = 0x328A;\n\t    t['ideographnamecircle'] = 0x3294;\n\t    t['ideographsuncircle'] = 0x3290;\n\t    t['ideographwatercircle'] = 0x328C;\n\t    t['ideographwoodcircle'] = 0x328D;\n\t    t['ideva'] = 0x0907;\n\t    t['idieresis'] = 0x00EF;\n\t    t['idieresisacute'] = 0x1E2F;\n\t    t['idieresiscyrillic'] = 0x04E5;\n\t    t['idotbelow'] = 0x1ECB;\n\t    t['iebrevecyrillic'] = 0x04D7;\n\t    t['iecyrillic'] = 0x0435;\n\t    t['ieungacirclekorean'] = 0x3275;\n\t    t['ieungaparenkorean'] = 0x3215;\n\t    t['ieungcirclekorean'] = 0x3267;\n\t    t['ieungkorean'] = 0x3147;\n\t    t['ieungparenkorean'] = 0x3207;\n\t    t['igrave'] = 0x00EC;\n\t    t['igujarati'] = 0x0A87;\n\t    t['igurmukhi'] = 0x0A07;\n\t    t['ihiragana'] = 0x3044;\n\t    t['ihookabove'] = 0x1EC9;\n\t    t['iibengali'] = 0x0988;\n\t    t['iicyrillic'] = 0x0438;\n\t    t['iideva'] = 0x0908;\n\t    t['iigujarati'] = 0x0A88;\n\t    t['iigurmukhi'] = 0x0A08;\n\t    t['iimatragurmukhi'] = 0x0A40;\n\t    t['iinvertedbreve'] = 0x020B;\n\t    t['iishortcyrillic'] = 0x0439;\n\t    t['iivowelsignbengali'] = 0x09C0;\n\t    t['iivowelsigndeva'] = 0x0940;\n\t    t['iivowelsigngujarati'] = 0x0AC0;\n\t    t['ij'] = 0x0133;\n\t    t['ikatakana'] = 0x30A4;\n\t    t['ikatakanahalfwidth'] = 0xFF72;\n\t    t['ikorean'] = 0x3163;\n\t    t['ilde'] = 0x02DC;\n\t    t['iluyhebrew'] = 0x05AC;\n\t    t['imacron'] = 0x012B;\n\t    t['imacroncyrillic'] = 0x04E3;\n\t    t['imageorapproximatelyequal'] = 0x2253;\n\t    t['imatragurmukhi'] = 0x0A3F;\n\t    t['imonospace'] = 0xFF49;\n\t    t['increment'] = 0x2206;\n\t    t['infinity'] = 0x221E;\n\t    t['iniarmenian'] = 0x056B;\n\t    t['integral'] = 0x222B;\n\t    t['integralbottom'] = 0x2321;\n\t    t['integralbt'] = 0x2321;\n\t    t['integralex'] = 0xF8F5;\n\t    t['integraltop'] = 0x2320;\n\t    t['integraltp'] = 0x2320;\n\t    t['intersection'] = 0x2229;\n\t    t['intisquare'] = 0x3305;\n\t    t['invbullet'] = 0x25D8;\n\t    t['invcircle'] = 0x25D9;\n\t    t['invsmileface'] = 0x263B;\n\t    t['iocyrillic'] = 0x0451;\n\t    t['iogonek'] = 0x012F;\n\t    t['iota'] = 0x03B9;\n\t    t['iotadieresis'] = 0x03CA;\n\t    t['iotadieresistonos'] = 0x0390;\n\t    t['iotalatin'] = 0x0269;\n\t    t['iotatonos'] = 0x03AF;\n\t    t['iparen'] = 0x24A4;\n\t    t['irigurmukhi'] = 0x0A72;\n\t    t['ismallhiragana'] = 0x3043;\n\t    t['ismallkatakana'] = 0x30A3;\n\t    t['ismallkatakanahalfwidth'] = 0xFF68;\n\t    t['issharbengali'] = 0x09FA;\n\t    t['istroke'] = 0x0268;\n\t    t['isuperior'] = 0xF6ED;\n\t    t['iterationhiragana'] = 0x309D;\n\t    t['iterationkatakana'] = 0x30FD;\n\t    t['itilde'] = 0x0129;\n\t    t['itildebelow'] = 0x1E2D;\n\t    t['iubopomofo'] = 0x3129;\n\t    t['iucyrillic'] = 0x044E;\n\t    t['ivowelsignbengali'] = 0x09BF;\n\t    t['ivowelsigndeva'] = 0x093F;\n\t    t['ivowelsigngujarati'] = 0x0ABF;\n\t    t['izhitsacyrillic'] = 0x0475;\n\t    t['izhitsadblgravecyrillic'] = 0x0477;\n\t    t['j'] = 0x006A;\n\t    t['jaarmenian'] = 0x0571;\n\t    t['jabengali'] = 0x099C;\n\t    t['jadeva'] = 0x091C;\n\t    t['jagujarati'] = 0x0A9C;\n\t    t['jagurmukhi'] = 0x0A1C;\n\t    t['jbopomofo'] = 0x3110;\n\t    t['jcaron'] = 0x01F0;\n\t    t['jcircle'] = 0x24D9;\n\t    t['jcircumflex'] = 0x0135;\n\t    t['jcrossedtail'] = 0x029D;\n\t    t['jdotlessstroke'] = 0x025F;\n\t    t['jecyrillic'] = 0x0458;\n\t    t['jeemarabic'] = 0x062C;\n\t    t['jeemfinalarabic'] = 0xFE9E;\n\t    t['jeeminitialarabic'] = 0xFE9F;\n\t    t['jeemmedialarabic'] = 0xFEA0;\n\t    t['jeharabic'] = 0x0698;\n\t    t['jehfinalarabic'] = 0xFB8B;\n\t    t['jhabengali'] = 0x099D;\n\t    t['jhadeva'] = 0x091D;\n\t    t['jhagujarati'] = 0x0A9D;\n\t    t['jhagurmukhi'] = 0x0A1D;\n\t    t['jheharmenian'] = 0x057B;\n\t    t['jis'] = 0x3004;\n\t    t['jmonospace'] = 0xFF4A;\n\t    t['jparen'] = 0x24A5;\n\t    t['jsuperior'] = 0x02B2;\n\t    t['k'] = 0x006B;\n\t    t['kabashkircyrillic'] = 0x04A1;\n\t    t['kabengali'] = 0x0995;\n\t    t['kacute'] = 0x1E31;\n\t    t['kacyrillic'] = 0x043A;\n\t    t['kadescendercyrillic'] = 0x049B;\n\t    t['kadeva'] = 0x0915;\n\t    t['kaf'] = 0x05DB;\n\t    t['kafarabic'] = 0x0643;\n\t    t['kafdagesh'] = 0xFB3B;\n\t    t['kafdageshhebrew'] = 0xFB3B;\n\t    t['kaffinalarabic'] = 0xFEDA;\n\t    t['kafhebrew'] = 0x05DB;\n\t    t['kafinitialarabic'] = 0xFEDB;\n\t    t['kafmedialarabic'] = 0xFEDC;\n\t    t['kafrafehebrew'] = 0xFB4D;\n\t    t['kagujarati'] = 0x0A95;\n\t    t['kagurmukhi'] = 0x0A15;\n\t    t['kahiragana'] = 0x304B;\n\t    t['kahookcyrillic'] = 0x04C4;\n\t    t['kakatakana'] = 0x30AB;\n\t    t['kakatakanahalfwidth'] = 0xFF76;\n\t    t['kappa'] = 0x03BA;\n\t    t['kappasymbolgreek'] = 0x03F0;\n\t    t['kapyeounmieumkorean'] = 0x3171;\n\t    t['kapyeounphieuphkorean'] = 0x3184;\n\t    t['kapyeounpieupkorean'] = 0x3178;\n\t    t['kapyeounssangpieupkorean'] = 0x3179;\n\t    t['karoriisquare'] = 0x330D;\n\t    t['kashidaautoarabic'] = 0x0640;\n\t    t['kashidaautonosidebearingarabic'] = 0x0640;\n\t    t['kasmallkatakana'] = 0x30F5;\n\t    t['kasquare'] = 0x3384;\n\t    t['kasraarabic'] = 0x0650;\n\t    t['kasratanarabic'] = 0x064D;\n\t    t['kastrokecyrillic'] = 0x049F;\n\t    t['katahiraprolongmarkhalfwidth'] = 0xFF70;\n\t    t['kaverticalstrokecyrillic'] = 0x049D;\n\t    t['kbopomofo'] = 0x310E;\n\t    t['kcalsquare'] = 0x3389;\n\t    t['kcaron'] = 0x01E9;\n\t    t['kcedilla'] = 0x0137;\n\t    t['kcircle'] = 0x24DA;\n\t    t['kcommaaccent'] = 0x0137;\n\t    t['kdotbelow'] = 0x1E33;\n\t    t['keharmenian'] = 0x0584;\n\t    t['kehiragana'] = 0x3051;\n\t    t['kekatakana'] = 0x30B1;\n\t    t['kekatakanahalfwidth'] = 0xFF79;\n\t    t['kenarmenian'] = 0x056F;\n\t    t['kesmallkatakana'] = 0x30F6;\n\t    t['kgreenlandic'] = 0x0138;\n\t    t['khabengali'] = 0x0996;\n\t    t['khacyrillic'] = 0x0445;\n\t    t['khadeva'] = 0x0916;\n\t    t['khagujarati'] = 0x0A96;\n\t    t['khagurmukhi'] = 0x0A16;\n\t    t['khaharabic'] = 0x062E;\n\t    t['khahfinalarabic'] = 0xFEA6;\n\t    t['khahinitialarabic'] = 0xFEA7;\n\t    t['khahmedialarabic'] = 0xFEA8;\n\t    t['kheicoptic'] = 0x03E7;\n\t    t['khhadeva'] = 0x0959;\n\t    t['khhagurmukhi'] = 0x0A59;\n\t    t['khieukhacirclekorean'] = 0x3278;\n\t    t['khieukhaparenkorean'] = 0x3218;\n\t    t['khieukhcirclekorean'] = 0x326A;\n\t    t['khieukhkorean'] = 0x314B;\n\t    t['khieukhparenkorean'] = 0x320A;\n\t    t['khokhaithai'] = 0x0E02;\n\t    t['khokhonthai'] = 0x0E05;\n\t    t['khokhuatthai'] = 0x0E03;\n\t    t['khokhwaithai'] = 0x0E04;\n\t    t['khomutthai'] = 0x0E5B;\n\t    t['khook'] = 0x0199;\n\t    t['khorakhangthai'] = 0x0E06;\n\t    t['khzsquare'] = 0x3391;\n\t    t['kihiragana'] = 0x304D;\n\t    t['kikatakana'] = 0x30AD;\n\t    t['kikatakanahalfwidth'] = 0xFF77;\n\t    t['kiroguramusquare'] = 0x3315;\n\t    t['kiromeetorusquare'] = 0x3316;\n\t    t['kirosquare'] = 0x3314;\n\t    t['kiyeokacirclekorean'] = 0x326E;\n\t    t['kiyeokaparenkorean'] = 0x320E;\n\t    t['kiyeokcirclekorean'] = 0x3260;\n\t    t['kiyeokkorean'] = 0x3131;\n\t    t['kiyeokparenkorean'] = 0x3200;\n\t    t['kiyeoksioskorean'] = 0x3133;\n\t    t['kjecyrillic'] = 0x045C;\n\t    t['klinebelow'] = 0x1E35;\n\t    t['klsquare'] = 0x3398;\n\t    t['kmcubedsquare'] = 0x33A6;\n\t    t['kmonospace'] = 0xFF4B;\n\t    t['kmsquaredsquare'] = 0x33A2;\n\t    t['kohiragana'] = 0x3053;\n\t    t['kohmsquare'] = 0x33C0;\n\t    t['kokaithai'] = 0x0E01;\n\t    t['kokatakana'] = 0x30B3;\n\t    t['kokatakanahalfwidth'] = 0xFF7A;\n\t    t['kooposquare'] = 0x331E;\n\t    t['koppacyrillic'] = 0x0481;\n\t    t['koreanstandardsymbol'] = 0x327F;\n\t    t['koroniscmb'] = 0x0343;\n\t    t['kparen'] = 0x24A6;\n\t    t['kpasquare'] = 0x33AA;\n\t    t['ksicyrillic'] = 0x046F;\n\t    t['ktsquare'] = 0x33CF;\n\t    t['kturned'] = 0x029E;\n\t    t['kuhiragana'] = 0x304F;\n\t    t['kukatakana'] = 0x30AF;\n\t    t['kukatakanahalfwidth'] = 0xFF78;\n\t    t['kvsquare'] = 0x33B8;\n\t    t['kwsquare'] = 0x33BE;\n\t    t['l'] = 0x006C;\n\t    t['labengali'] = 0x09B2;\n\t    t['lacute'] = 0x013A;\n\t    t['ladeva'] = 0x0932;\n\t    t['lagujarati'] = 0x0AB2;\n\t    t['lagurmukhi'] = 0x0A32;\n\t    t['lakkhangyaothai'] = 0x0E45;\n\t    t['lamaleffinalarabic'] = 0xFEFC;\n\t    t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\n\t    t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\n\t    t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\n\t    t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\n\t    t['lamalefisolatedarabic'] = 0xFEFB;\n\t    t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\n\t    t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\n\t    t['lamarabic'] = 0x0644;\n\t    t['lambda'] = 0x03BB;\n\t    t['lambdastroke'] = 0x019B;\n\t    t['lamed'] = 0x05DC;\n\t    t['lameddagesh'] = 0xFB3C;\n\t    t['lameddageshhebrew'] = 0xFB3C;\n\t    t['lamedhebrew'] = 0x05DC;\n\t    t['lamfinalarabic'] = 0xFEDE;\n\t    t['lamhahinitialarabic'] = 0xFCCA;\n\t    t['laminitialarabic'] = 0xFEDF;\n\t    t['lamjeeminitialarabic'] = 0xFCC9;\n\t    t['lamkhahinitialarabic'] = 0xFCCB;\n\t    t['lamlamhehisolatedarabic'] = 0xFDF2;\n\t    t['lammedialarabic'] = 0xFEE0;\n\t    t['lammeemhahinitialarabic'] = 0xFD88;\n\t    t['lammeeminitialarabic'] = 0xFCCC;\n\t    t['largecircle'] = 0x25EF;\n\t    t['lbar'] = 0x019A;\n\t    t['lbelt'] = 0x026C;\n\t    t['lbopomofo'] = 0x310C;\n\t    t['lcaron'] = 0x013E;\n\t    t['lcedilla'] = 0x013C;\n\t    t['lcircle'] = 0x24DB;\n\t    t['lcircumflexbelow'] = 0x1E3D;\n\t    t['lcommaaccent'] = 0x013C;\n\t    t['ldot'] = 0x0140;\n\t    t['ldotaccent'] = 0x0140;\n\t    t['ldotbelow'] = 0x1E37;\n\t    t['ldotbelowmacron'] = 0x1E39;\n\t    t['leftangleabovecmb'] = 0x031A;\n\t    t['lefttackbelowcmb'] = 0x0318;\n\t    t['less'] = 0x003C;\n\t    t['lessequal'] = 0x2264;\n\t    t['lessequalorgreater'] = 0x22DA;\n\t    t['lessmonospace'] = 0xFF1C;\n\t    t['lessorequivalent'] = 0x2272;\n\t    t['lessorgreater'] = 0x2276;\n\t    t['lessoverequal'] = 0x2266;\n\t    t['lesssmall'] = 0xFE64;\n\t    t['lezh'] = 0x026E;\n\t    t['lfblock'] = 0x258C;\n\t    t['lhookretroflex'] = 0x026D;\n\t    t['lira'] = 0x20A4;\n\t    t['liwnarmenian'] = 0x056C;\n\t    t['lj'] = 0x01C9;\n\t    t['ljecyrillic'] = 0x0459;\n\t    t['ll'] = 0xF6C0;\n\t    t['lladeva'] = 0x0933;\n\t    t['llagujarati'] = 0x0AB3;\n\t    t['llinebelow'] = 0x1E3B;\n\t    t['llladeva'] = 0x0934;\n\t    t['llvocalicbengali'] = 0x09E1;\n\t    t['llvocalicdeva'] = 0x0961;\n\t    t['llvocalicvowelsignbengali'] = 0x09E3;\n\t    t['llvocalicvowelsigndeva'] = 0x0963;\n\t    t['lmiddletilde'] = 0x026B;\n\t    t['lmonospace'] = 0xFF4C;\n\t    t['lmsquare'] = 0x33D0;\n\t    t['lochulathai'] = 0x0E2C;\n\t    t['logicaland'] = 0x2227;\n\t    t['logicalnot'] = 0x00AC;\n\t    t['logicalnotreversed'] = 0x2310;\n\t    t['logicalor'] = 0x2228;\n\t    t['lolingthai'] = 0x0E25;\n\t    t['longs'] = 0x017F;\n\t    t['lowlinecenterline'] = 0xFE4E;\n\t    t['lowlinecmb'] = 0x0332;\n\t    t['lowlinedashed'] = 0xFE4D;\n\t    t['lozenge'] = 0x25CA;\n\t    t['lparen'] = 0x24A7;\n\t    t['lslash'] = 0x0142;\n\t    t['lsquare'] = 0x2113;\n\t    t['lsuperior'] = 0xF6EE;\n\t    t['ltshade'] = 0x2591;\n\t    t['luthai'] = 0x0E26;\n\t    t['lvocalicbengali'] = 0x098C;\n\t    t['lvocalicdeva'] = 0x090C;\n\t    t['lvocalicvowelsignbengali'] = 0x09E2;\n\t    t['lvocalicvowelsigndeva'] = 0x0962;\n\t    t['lxsquare'] = 0x33D3;\n\t    t['m'] = 0x006D;\n\t    t['mabengali'] = 0x09AE;\n\t    t['macron'] = 0x00AF;\n\t    t['macronbelowcmb'] = 0x0331;\n\t    t['macroncmb'] = 0x0304;\n\t    t['macronlowmod'] = 0x02CD;\n\t    t['macronmonospace'] = 0xFFE3;\n\t    t['macute'] = 0x1E3F;\n\t    t['madeva'] = 0x092E;\n\t    t['magujarati'] = 0x0AAE;\n\t    t['magurmukhi'] = 0x0A2E;\n\t    t['mahapakhhebrew'] = 0x05A4;\n\t    t['mahapakhlefthebrew'] = 0x05A4;\n\t    t['mahiragana'] = 0x307E;\n\t    t['maichattawalowleftthai'] = 0xF895;\n\t    t['maichattawalowrightthai'] = 0xF894;\n\t    t['maichattawathai'] = 0x0E4B;\n\t    t['maichattawaupperleftthai'] = 0xF893;\n\t    t['maieklowleftthai'] = 0xF88C;\n\t    t['maieklowrightthai'] = 0xF88B;\n\t    t['maiekthai'] = 0x0E48;\n\t    t['maiekupperleftthai'] = 0xF88A;\n\t    t['maihanakatleftthai'] = 0xF884;\n\t    t['maihanakatthai'] = 0x0E31;\n\t    t['maitaikhuleftthai'] = 0xF889;\n\t    t['maitaikhuthai'] = 0x0E47;\n\t    t['maitholowleftthai'] = 0xF88F;\n\t    t['maitholowrightthai'] = 0xF88E;\n\t    t['maithothai'] = 0x0E49;\n\t    t['maithoupperleftthai'] = 0xF88D;\n\t    t['maitrilowleftthai'] = 0xF892;\n\t    t['maitrilowrightthai'] = 0xF891;\n\t    t['maitrithai'] = 0x0E4A;\n\t    t['maitriupperleftthai'] = 0xF890;\n\t    t['maiyamokthai'] = 0x0E46;\n\t    t['makatakana'] = 0x30DE;\n\t    t['makatakanahalfwidth'] = 0xFF8F;\n\t    t['male'] = 0x2642;\n\t    t['mansyonsquare'] = 0x3347;\n\t    t['maqafhebrew'] = 0x05BE;\n\t    t['mars'] = 0x2642;\n\t    t['masoracirclehebrew'] = 0x05AF;\n\t    t['masquare'] = 0x3383;\n\t    t['mbopomofo'] = 0x3107;\n\t    t['mbsquare'] = 0x33D4;\n\t    t['mcircle'] = 0x24DC;\n\t    t['mcubedsquare'] = 0x33A5;\n\t    t['mdotaccent'] = 0x1E41;\n\t    t['mdotbelow'] = 0x1E43;\n\t    t['meemarabic'] = 0x0645;\n\t    t['meemfinalarabic'] = 0xFEE2;\n\t    t['meeminitialarabic'] = 0xFEE3;\n\t    t['meemmedialarabic'] = 0xFEE4;\n\t    t['meemmeeminitialarabic'] = 0xFCD1;\n\t    t['meemmeemisolatedarabic'] = 0xFC48;\n\t    t['meetorusquare'] = 0x334D;\n\t    t['mehiragana'] = 0x3081;\n\t    t['meizierasquare'] = 0x337E;\n\t    t['mekatakana'] = 0x30E1;\n\t    t['mekatakanahalfwidth'] = 0xFF92;\n\t    t['mem'] = 0x05DE;\n\t    t['memdagesh'] = 0xFB3E;\n\t    t['memdageshhebrew'] = 0xFB3E;\n\t    t['memhebrew'] = 0x05DE;\n\t    t['menarmenian'] = 0x0574;\n\t    t['merkhahebrew'] = 0x05A5;\n\t    t['merkhakefulahebrew'] = 0x05A6;\n\t    t['merkhakefulalefthebrew'] = 0x05A6;\n\t    t['merkhalefthebrew'] = 0x05A5;\n\t    t['mhook'] = 0x0271;\n\t    t['mhzsquare'] = 0x3392;\n\t    t['middledotkatakanahalfwidth'] = 0xFF65;\n\t    t['middot'] = 0x00B7;\n\t    t['mieumacirclekorean'] = 0x3272;\n\t    t['mieumaparenkorean'] = 0x3212;\n\t    t['mieumcirclekorean'] = 0x3264;\n\t    t['mieumkorean'] = 0x3141;\n\t    t['mieumpansioskorean'] = 0x3170;\n\t    t['mieumparenkorean'] = 0x3204;\n\t    t['mieumpieupkorean'] = 0x316E;\n\t    t['mieumsioskorean'] = 0x316F;\n\t    t['mihiragana'] = 0x307F;\n\t    t['mikatakana'] = 0x30DF;\n\t    t['mikatakanahalfwidth'] = 0xFF90;\n\t    t['minus'] = 0x2212;\n\t    t['minusbelowcmb'] = 0x0320;\n\t    t['minuscircle'] = 0x2296;\n\t    t['minusmod'] = 0x02D7;\n\t    t['minusplus'] = 0x2213;\n\t    t['minute'] = 0x2032;\n\t    t['miribaarusquare'] = 0x334A;\n\t    t['mirisquare'] = 0x3349;\n\t    t['mlonglegturned'] = 0x0270;\n\t    t['mlsquare'] = 0x3396;\n\t    t['mmcubedsquare'] = 0x33A3;\n\t    t['mmonospace'] = 0xFF4D;\n\t    t['mmsquaredsquare'] = 0x339F;\n\t    t['mohiragana'] = 0x3082;\n\t    t['mohmsquare'] = 0x33C1;\n\t    t['mokatakana'] = 0x30E2;\n\t    t['mokatakanahalfwidth'] = 0xFF93;\n\t    t['molsquare'] = 0x33D6;\n\t    t['momathai'] = 0x0E21;\n\t    t['moverssquare'] = 0x33A7;\n\t    t['moverssquaredsquare'] = 0x33A8;\n\t    t['mparen'] = 0x24A8;\n\t    t['mpasquare'] = 0x33AB;\n\t    t['mssquare'] = 0x33B3;\n\t    t['msuperior'] = 0xF6EF;\n\t    t['mturned'] = 0x026F;\n\t    t['mu'] = 0x00B5;\n\t    t['mu1'] = 0x00B5;\n\t    t['muasquare'] = 0x3382;\n\t    t['muchgreater'] = 0x226B;\n\t    t['muchless'] = 0x226A;\n\t    t['mufsquare'] = 0x338C;\n\t    t['mugreek'] = 0x03BC;\n\t    t['mugsquare'] = 0x338D;\n\t    t['muhiragana'] = 0x3080;\n\t    t['mukatakana'] = 0x30E0;\n\t    t['mukatakanahalfwidth'] = 0xFF91;\n\t    t['mulsquare'] = 0x3395;\n\t    t['multiply'] = 0x00D7;\n\t    t['mumsquare'] = 0x339B;\n\t    t['munahhebrew'] = 0x05A3;\n\t    t['munahlefthebrew'] = 0x05A3;\n\t    t['musicalnote'] = 0x266A;\n\t    t['musicalnotedbl'] = 0x266B;\n\t    t['musicflatsign'] = 0x266D;\n\t    t['musicsharpsign'] = 0x266F;\n\t    t['mussquare'] = 0x33B2;\n\t    t['muvsquare'] = 0x33B6;\n\t    t['muwsquare'] = 0x33BC;\n\t    t['mvmegasquare'] = 0x33B9;\n\t    t['mvsquare'] = 0x33B7;\n\t    t['mwmegasquare'] = 0x33BF;\n\t    t['mwsquare'] = 0x33BD;\n\t    t['n'] = 0x006E;\n\t    t['nabengali'] = 0x09A8;\n\t    t['nabla'] = 0x2207;\n\t    t['nacute'] = 0x0144;\n\t    t['nadeva'] = 0x0928;\n\t    t['nagujarati'] = 0x0AA8;\n\t    t['nagurmukhi'] = 0x0A28;\n\t    t['nahiragana'] = 0x306A;\n\t    t['nakatakana'] = 0x30CA;\n\t    t['nakatakanahalfwidth'] = 0xFF85;\n\t    t['napostrophe'] = 0x0149;\n\t    t['nasquare'] = 0x3381;\n\t    t['nbopomofo'] = 0x310B;\n\t    t['nbspace'] = 0x00A0;\n\t    t['ncaron'] = 0x0148;\n\t    t['ncedilla'] = 0x0146;\n\t    t['ncircle'] = 0x24DD;\n\t    t['ncircumflexbelow'] = 0x1E4B;\n\t    t['ncommaaccent'] = 0x0146;\n\t    t['ndotaccent'] = 0x1E45;\n\t    t['ndotbelow'] = 0x1E47;\n\t    t['nehiragana'] = 0x306D;\n\t    t['nekatakana'] = 0x30CD;\n\t    t['nekatakanahalfwidth'] = 0xFF88;\n\t    t['newsheqelsign'] = 0x20AA;\n\t    t['nfsquare'] = 0x338B;\n\t    t['ngabengali'] = 0x0999;\n\t    t['ngadeva'] = 0x0919;\n\t    t['ngagujarati'] = 0x0A99;\n\t    t['ngagurmukhi'] = 0x0A19;\n\t    t['ngonguthai'] = 0x0E07;\n\t    t['nhiragana'] = 0x3093;\n\t    t['nhookleft'] = 0x0272;\n\t    t['nhookretroflex'] = 0x0273;\n\t    t['nieunacirclekorean'] = 0x326F;\n\t    t['nieunaparenkorean'] = 0x320F;\n\t    t['nieuncieuckorean'] = 0x3135;\n\t    t['nieuncirclekorean'] = 0x3261;\n\t    t['nieunhieuhkorean'] = 0x3136;\n\t    t['nieunkorean'] = 0x3134;\n\t    t['nieunpansioskorean'] = 0x3168;\n\t    t['nieunparenkorean'] = 0x3201;\n\t    t['nieunsioskorean'] = 0x3167;\n\t    t['nieuntikeutkorean'] = 0x3166;\n\t    t['nihiragana'] = 0x306B;\n\t    t['nikatakana'] = 0x30CB;\n\t    t['nikatakanahalfwidth'] = 0xFF86;\n\t    t['nikhahitleftthai'] = 0xF899;\n\t    t['nikhahitthai'] = 0x0E4D;\n\t    t['nine'] = 0x0039;\n\t    t['ninearabic'] = 0x0669;\n\t    t['ninebengali'] = 0x09EF;\n\t    t['ninecircle'] = 0x2468;\n\t    t['ninecircleinversesansserif'] = 0x2792;\n\t    t['ninedeva'] = 0x096F;\n\t    t['ninegujarati'] = 0x0AEF;\n\t    t['ninegurmukhi'] = 0x0A6F;\n\t    t['ninehackarabic'] = 0x0669;\n\t    t['ninehangzhou'] = 0x3029;\n\t    t['nineideographicparen'] = 0x3228;\n\t    t['nineinferior'] = 0x2089;\n\t    t['ninemonospace'] = 0xFF19;\n\t    t['nineoldstyle'] = 0xF739;\n\t    t['nineparen'] = 0x247C;\n\t    t['nineperiod'] = 0x2490;\n\t    t['ninepersian'] = 0x06F9;\n\t    t['nineroman'] = 0x2178;\n\t    t['ninesuperior'] = 0x2079;\n\t    t['nineteencircle'] = 0x2472;\n\t    t['nineteenparen'] = 0x2486;\n\t    t['nineteenperiod'] = 0x249A;\n\t    t['ninethai'] = 0x0E59;\n\t    t['nj'] = 0x01CC;\n\t    t['njecyrillic'] = 0x045A;\n\t    t['nkatakana'] = 0x30F3;\n\t    t['nkatakanahalfwidth'] = 0xFF9D;\n\t    t['nlegrightlong'] = 0x019E;\n\t    t['nlinebelow'] = 0x1E49;\n\t    t['nmonospace'] = 0xFF4E;\n\t    t['nmsquare'] = 0x339A;\n\t    t['nnabengali'] = 0x09A3;\n\t    t['nnadeva'] = 0x0923;\n\t    t['nnagujarati'] = 0x0AA3;\n\t    t['nnagurmukhi'] = 0x0A23;\n\t    t['nnnadeva'] = 0x0929;\n\t    t['nohiragana'] = 0x306E;\n\t    t['nokatakana'] = 0x30CE;\n\t    t['nokatakanahalfwidth'] = 0xFF89;\n\t    t['nonbreakingspace'] = 0x00A0;\n\t    t['nonenthai'] = 0x0E13;\n\t    t['nonuthai'] = 0x0E19;\n\t    t['noonarabic'] = 0x0646;\n\t    t['noonfinalarabic'] = 0xFEE6;\n\t    t['noonghunnaarabic'] = 0x06BA;\n\t    t['noonghunnafinalarabic'] = 0xFB9F;\n\t    t['nooninitialarabic'] = 0xFEE7;\n\t    t['noonjeeminitialarabic'] = 0xFCD2;\n\t    t['noonjeemisolatedarabic'] = 0xFC4B;\n\t    t['noonmedialarabic'] = 0xFEE8;\n\t    t['noonmeeminitialarabic'] = 0xFCD5;\n\t    t['noonmeemisolatedarabic'] = 0xFC4E;\n\t    t['noonnoonfinalarabic'] = 0xFC8D;\n\t    t['notcontains'] = 0x220C;\n\t    t['notelement'] = 0x2209;\n\t    t['notelementof'] = 0x2209;\n\t    t['notequal'] = 0x2260;\n\t    t['notgreater'] = 0x226F;\n\t    t['notgreaternorequal'] = 0x2271;\n\t    t['notgreaternorless'] = 0x2279;\n\t    t['notidentical'] = 0x2262;\n\t    t['notless'] = 0x226E;\n\t    t['notlessnorequal'] = 0x2270;\n\t    t['notparallel'] = 0x2226;\n\t    t['notprecedes'] = 0x2280;\n\t    t['notsubset'] = 0x2284;\n\t    t['notsucceeds'] = 0x2281;\n\t    t['notsuperset'] = 0x2285;\n\t    t['nowarmenian'] = 0x0576;\n\t    t['nparen'] = 0x24A9;\n\t    t['nssquare'] = 0x33B1;\n\t    t['nsuperior'] = 0x207F;\n\t    t['ntilde'] = 0x00F1;\n\t    t['nu'] = 0x03BD;\n\t    t['nuhiragana'] = 0x306C;\n\t    t['nukatakana'] = 0x30CC;\n\t    t['nukatakanahalfwidth'] = 0xFF87;\n\t    t['nuktabengali'] = 0x09BC;\n\t    t['nuktadeva'] = 0x093C;\n\t    t['nuktagujarati'] = 0x0ABC;\n\t    t['nuktagurmukhi'] = 0x0A3C;\n\t    t['numbersign'] = 0x0023;\n\t    t['numbersignmonospace'] = 0xFF03;\n\t    t['numbersignsmall'] = 0xFE5F;\n\t    t['numeralsigngreek'] = 0x0374;\n\t    t['numeralsignlowergreek'] = 0x0375;\n\t    t['numero'] = 0x2116;\n\t    t['nun'] = 0x05E0;\n\t    t['nundagesh'] = 0xFB40;\n\t    t['nundageshhebrew'] = 0xFB40;\n\t    t['nunhebrew'] = 0x05E0;\n\t    t['nvsquare'] = 0x33B5;\n\t    t['nwsquare'] = 0x33BB;\n\t    t['nyabengali'] = 0x099E;\n\t    t['nyadeva'] = 0x091E;\n\t    t['nyagujarati'] = 0x0A9E;\n\t    t['nyagurmukhi'] = 0x0A1E;\n\t    t['o'] = 0x006F;\n\t    t['oacute'] = 0x00F3;\n\t    t['oangthai'] = 0x0E2D;\n\t    t['obarred'] = 0x0275;\n\t    t['obarredcyrillic'] = 0x04E9;\n\t    t['obarreddieresiscyrillic'] = 0x04EB;\n\t    t['obengali'] = 0x0993;\n\t    t['obopomofo'] = 0x311B;\n\t    t['obreve'] = 0x014F;\n\t    t['ocandradeva'] = 0x0911;\n\t    t['ocandragujarati'] = 0x0A91;\n\t    t['ocandravowelsigndeva'] = 0x0949;\n\t    t['ocandravowelsigngujarati'] = 0x0AC9;\n\t    t['ocaron'] = 0x01D2;\n\t    t['ocircle'] = 0x24DE;\n\t    t['ocircumflex'] = 0x00F4;\n\t    t['ocircumflexacute'] = 0x1ED1;\n\t    t['ocircumflexdotbelow'] = 0x1ED9;\n\t    t['ocircumflexgrave'] = 0x1ED3;\n\t    t['ocircumflexhookabove'] = 0x1ED5;\n\t    t['ocircumflextilde'] = 0x1ED7;\n\t    t['ocyrillic'] = 0x043E;\n\t    t['odblacute'] = 0x0151;\n\t    t['odblgrave'] = 0x020D;\n\t    t['odeva'] = 0x0913;\n\t    t['odieresis'] = 0x00F6;\n\t    t['odieresiscyrillic'] = 0x04E7;\n\t    t['odotbelow'] = 0x1ECD;\n\t    t['oe'] = 0x0153;\n\t    t['oekorean'] = 0x315A;\n\t    t['ogonek'] = 0x02DB;\n\t    t['ogonekcmb'] = 0x0328;\n\t    t['ograve'] = 0x00F2;\n\t    t['ogujarati'] = 0x0A93;\n\t    t['oharmenian'] = 0x0585;\n\t    t['ohiragana'] = 0x304A;\n\t    t['ohookabove'] = 0x1ECF;\n\t    t['ohorn'] = 0x01A1;\n\t    t['ohornacute'] = 0x1EDB;\n\t    t['ohorndotbelow'] = 0x1EE3;\n\t    t['ohorngrave'] = 0x1EDD;\n\t    t['ohornhookabove'] = 0x1EDF;\n\t    t['ohorntilde'] = 0x1EE1;\n\t    t['ohungarumlaut'] = 0x0151;\n\t    t['oi'] = 0x01A3;\n\t    t['oinvertedbreve'] = 0x020F;\n\t    t['okatakana'] = 0x30AA;\n\t    t['okatakanahalfwidth'] = 0xFF75;\n\t    t['okorean'] = 0x3157;\n\t    t['olehebrew'] = 0x05AB;\n\t    t['omacron'] = 0x014D;\n\t    t['omacronacute'] = 0x1E53;\n\t    t['omacrongrave'] = 0x1E51;\n\t    t['omdeva'] = 0x0950;\n\t    t['omega'] = 0x03C9;\n\t    t['omega1'] = 0x03D6;\n\t    t['omegacyrillic'] = 0x0461;\n\t    t['omegalatinclosed'] = 0x0277;\n\t    t['omegaroundcyrillic'] = 0x047B;\n\t    t['omegatitlocyrillic'] = 0x047D;\n\t    t['omegatonos'] = 0x03CE;\n\t    t['omgujarati'] = 0x0AD0;\n\t    t['omicron'] = 0x03BF;\n\t    t['omicrontonos'] = 0x03CC;\n\t    t['omonospace'] = 0xFF4F;\n\t    t['one'] = 0x0031;\n\t    t['onearabic'] = 0x0661;\n\t    t['onebengali'] = 0x09E7;\n\t    t['onecircle'] = 0x2460;\n\t    t['onecircleinversesansserif'] = 0x278A;\n\t    t['onedeva'] = 0x0967;\n\t    t['onedotenleader'] = 0x2024;\n\t    t['oneeighth'] = 0x215B;\n\t    t['onefitted'] = 0xF6DC;\n\t    t['onegujarati'] = 0x0AE7;\n\t    t['onegurmukhi'] = 0x0A67;\n\t    t['onehackarabic'] = 0x0661;\n\t    t['onehalf'] = 0x00BD;\n\t    t['onehangzhou'] = 0x3021;\n\t    t['oneideographicparen'] = 0x3220;\n\t    t['oneinferior'] = 0x2081;\n\t    t['onemonospace'] = 0xFF11;\n\t    t['onenumeratorbengali'] = 0x09F4;\n\t    t['oneoldstyle'] = 0xF731;\n\t    t['oneparen'] = 0x2474;\n\t    t['oneperiod'] = 0x2488;\n\t    t['onepersian'] = 0x06F1;\n\t    t['onequarter'] = 0x00BC;\n\t    t['oneroman'] = 0x2170;\n\t    t['onesuperior'] = 0x00B9;\n\t    t['onethai'] = 0x0E51;\n\t    t['onethird'] = 0x2153;\n\t    t['oogonek'] = 0x01EB;\n\t    t['oogonekmacron'] = 0x01ED;\n\t    t['oogurmukhi'] = 0x0A13;\n\t    t['oomatragurmukhi'] = 0x0A4B;\n\t    t['oopen'] = 0x0254;\n\t    t['oparen'] = 0x24AA;\n\t    t['openbullet'] = 0x25E6;\n\t    t['option'] = 0x2325;\n\t    t['ordfeminine'] = 0x00AA;\n\t    t['ordmasculine'] = 0x00BA;\n\t    t['orthogonal'] = 0x221F;\n\t    t['oshortdeva'] = 0x0912;\n\t    t['oshortvowelsigndeva'] = 0x094A;\n\t    t['oslash'] = 0x00F8;\n\t    t['oslashacute'] = 0x01FF;\n\t    t['osmallhiragana'] = 0x3049;\n\t    t['osmallkatakana'] = 0x30A9;\n\t    t['osmallkatakanahalfwidth'] = 0xFF6B;\n\t    t['ostrokeacute'] = 0x01FF;\n\t    t['osuperior'] = 0xF6F0;\n\t    t['otcyrillic'] = 0x047F;\n\t    t['otilde'] = 0x00F5;\n\t    t['otildeacute'] = 0x1E4D;\n\t    t['otildedieresis'] = 0x1E4F;\n\t    t['oubopomofo'] = 0x3121;\n\t    t['overline'] = 0x203E;\n\t    t['overlinecenterline'] = 0xFE4A;\n\t    t['overlinecmb'] = 0x0305;\n\t    t['overlinedashed'] = 0xFE49;\n\t    t['overlinedblwavy'] = 0xFE4C;\n\t    t['overlinewavy'] = 0xFE4B;\n\t    t['overscore'] = 0x00AF;\n\t    t['ovowelsignbengali'] = 0x09CB;\n\t    t['ovowelsigndeva'] = 0x094B;\n\t    t['ovowelsigngujarati'] = 0x0ACB;\n\t    t['p'] = 0x0070;\n\t    t['paampssquare'] = 0x3380;\n\t    t['paasentosquare'] = 0x332B;\n\t    t['pabengali'] = 0x09AA;\n\t    t['pacute'] = 0x1E55;\n\t    t['padeva'] = 0x092A;\n\t    t['pagedown'] = 0x21DF;\n\t    t['pageup'] = 0x21DE;\n\t    t['pagujarati'] = 0x0AAA;\n\t    t['pagurmukhi'] = 0x0A2A;\n\t    t['pahiragana'] = 0x3071;\n\t    t['paiyannoithai'] = 0x0E2F;\n\t    t['pakatakana'] = 0x30D1;\n\t    t['palatalizationcyrilliccmb'] = 0x0484;\n\t    t['palochkacyrillic'] = 0x04C0;\n\t    t['pansioskorean'] = 0x317F;\n\t    t['paragraph'] = 0x00B6;\n\t    t['parallel'] = 0x2225;\n\t    t['parenleft'] = 0x0028;\n\t    t['parenleftaltonearabic'] = 0xFD3E;\n\t    t['parenleftbt'] = 0xF8ED;\n\t    t['parenleftex'] = 0xF8EC;\n\t    t['parenleftinferior'] = 0x208D;\n\t    t['parenleftmonospace'] = 0xFF08;\n\t    t['parenleftsmall'] = 0xFE59;\n\t    t['parenleftsuperior'] = 0x207D;\n\t    t['parenlefttp'] = 0xF8EB;\n\t    t['parenleftvertical'] = 0xFE35;\n\t    t['parenright'] = 0x0029;\n\t    t['parenrightaltonearabic'] = 0xFD3F;\n\t    t['parenrightbt'] = 0xF8F8;\n\t    t['parenrightex'] = 0xF8F7;\n\t    t['parenrightinferior'] = 0x208E;\n\t    t['parenrightmonospace'] = 0xFF09;\n\t    t['parenrightsmall'] = 0xFE5A;\n\t    t['parenrightsuperior'] = 0x207E;\n\t    t['parenrighttp'] = 0xF8F6;\n\t    t['parenrightvertical'] = 0xFE36;\n\t    t['partialdiff'] = 0x2202;\n\t    t['paseqhebrew'] = 0x05C0;\n\t    t['pashtahebrew'] = 0x0599;\n\t    t['pasquare'] = 0x33A9;\n\t    t['patah'] = 0x05B7;\n\t    t['patah11'] = 0x05B7;\n\t    t['patah1d'] = 0x05B7;\n\t    t['patah2a'] = 0x05B7;\n\t    t['patahhebrew'] = 0x05B7;\n\t    t['patahnarrowhebrew'] = 0x05B7;\n\t    t['patahquarterhebrew'] = 0x05B7;\n\t    t['patahwidehebrew'] = 0x05B7;\n\t    t['pazerhebrew'] = 0x05A1;\n\t    t['pbopomofo'] = 0x3106;\n\t    t['pcircle'] = 0x24DF;\n\t    t['pdotaccent'] = 0x1E57;\n\t    t['pe'] = 0x05E4;\n\t    t['pecyrillic'] = 0x043F;\n\t    t['pedagesh'] = 0xFB44;\n\t    t['pedageshhebrew'] = 0xFB44;\n\t    t['peezisquare'] = 0x333B;\n\t    t['pefinaldageshhebrew'] = 0xFB43;\n\t    t['peharabic'] = 0x067E;\n\t    t['peharmenian'] = 0x057A;\n\t    t['pehebrew'] = 0x05E4;\n\t    t['pehfinalarabic'] = 0xFB57;\n\t    t['pehinitialarabic'] = 0xFB58;\n\t    t['pehiragana'] = 0x307A;\n\t    t['pehmedialarabic'] = 0xFB59;\n\t    t['pekatakana'] = 0x30DA;\n\t    t['pemiddlehookcyrillic'] = 0x04A7;\n\t    t['perafehebrew'] = 0xFB4E;\n\t    t['percent'] = 0x0025;\n\t    t['percentarabic'] = 0x066A;\n\t    t['percentmonospace'] = 0xFF05;\n\t    t['percentsmall'] = 0xFE6A;\n\t    t['period'] = 0x002E;\n\t    t['periodarmenian'] = 0x0589;\n\t    t['periodcentered'] = 0x00B7;\n\t    t['periodhalfwidth'] = 0xFF61;\n\t    t['periodinferior'] = 0xF6E7;\n\t    t['periodmonospace'] = 0xFF0E;\n\t    t['periodsmall'] = 0xFE52;\n\t    t['periodsuperior'] = 0xF6E8;\n\t    t['perispomenigreekcmb'] = 0x0342;\n\t    t['perpendicular'] = 0x22A5;\n\t    t['perthousand'] = 0x2030;\n\t    t['peseta'] = 0x20A7;\n\t    t['pfsquare'] = 0x338A;\n\t    t['phabengali'] = 0x09AB;\n\t    t['phadeva'] = 0x092B;\n\t    t['phagujarati'] = 0x0AAB;\n\t    t['phagurmukhi'] = 0x0A2B;\n\t    t['phi'] = 0x03C6;\n\t    t['phi1'] = 0x03D5;\n\t    t['phieuphacirclekorean'] = 0x327A;\n\t    t['phieuphaparenkorean'] = 0x321A;\n\t    t['phieuphcirclekorean'] = 0x326C;\n\t    t['phieuphkorean'] = 0x314D;\n\t    t['phieuphparenkorean'] = 0x320C;\n\t    t['philatin'] = 0x0278;\n\t    t['phinthuthai'] = 0x0E3A;\n\t    t['phisymbolgreek'] = 0x03D5;\n\t    t['phook'] = 0x01A5;\n\t    t['phophanthai'] = 0x0E1E;\n\t    t['phophungthai'] = 0x0E1C;\n\t    t['phosamphaothai'] = 0x0E20;\n\t    t['pi'] = 0x03C0;\n\t    t['pieupacirclekorean'] = 0x3273;\n\t    t['pieupaparenkorean'] = 0x3213;\n\t    t['pieupcieuckorean'] = 0x3176;\n\t    t['pieupcirclekorean'] = 0x3265;\n\t    t['pieupkiyeokkorean'] = 0x3172;\n\t    t['pieupkorean'] = 0x3142;\n\t    t['pieupparenkorean'] = 0x3205;\n\t    t['pieupsioskiyeokkorean'] = 0x3174;\n\t    t['pieupsioskorean'] = 0x3144;\n\t    t['pieupsiostikeutkorean'] = 0x3175;\n\t    t['pieupthieuthkorean'] = 0x3177;\n\t    t['pieuptikeutkorean'] = 0x3173;\n\t    t['pihiragana'] = 0x3074;\n\t    t['pikatakana'] = 0x30D4;\n\t    t['pisymbolgreek'] = 0x03D6;\n\t    t['piwrarmenian'] = 0x0583;\n\t    t['plus'] = 0x002B;\n\t    t['plusbelowcmb'] = 0x031F;\n\t    t['pluscircle'] = 0x2295;\n\t    t['plusminus'] = 0x00B1;\n\t    t['plusmod'] = 0x02D6;\n\t    t['plusmonospace'] = 0xFF0B;\n\t    t['plussmall'] = 0xFE62;\n\t    t['plussuperior'] = 0x207A;\n\t    t['pmonospace'] = 0xFF50;\n\t    t['pmsquare'] = 0x33D8;\n\t    t['pohiragana'] = 0x307D;\n\t    t['pointingindexdownwhite'] = 0x261F;\n\t    t['pointingindexleftwhite'] = 0x261C;\n\t    t['pointingindexrightwhite'] = 0x261E;\n\t    t['pointingindexupwhite'] = 0x261D;\n\t    t['pokatakana'] = 0x30DD;\n\t    t['poplathai'] = 0x0E1B;\n\t    t['postalmark'] = 0x3012;\n\t    t['postalmarkface'] = 0x3020;\n\t    t['pparen'] = 0x24AB;\n\t    t['precedes'] = 0x227A;\n\t    t['prescription'] = 0x211E;\n\t    t['primemod'] = 0x02B9;\n\t    t['primereversed'] = 0x2035;\n\t    t['product'] = 0x220F;\n\t    t['projective'] = 0x2305;\n\t    t['prolongedkana'] = 0x30FC;\n\t    t['propellor'] = 0x2318;\n\t    t['propersubset'] = 0x2282;\n\t    t['propersuperset'] = 0x2283;\n\t    t['proportion'] = 0x2237;\n\t    t['proportional'] = 0x221D;\n\t    t['psi'] = 0x03C8;\n\t    t['psicyrillic'] = 0x0471;\n\t    t['psilipneumatacyrilliccmb'] = 0x0486;\n\t    t['pssquare'] = 0x33B0;\n\t    t['puhiragana'] = 0x3077;\n\t    t['pukatakana'] = 0x30D7;\n\t    t['pvsquare'] = 0x33B4;\n\t    t['pwsquare'] = 0x33BA;\n\t    t['q'] = 0x0071;\n\t    t['qadeva'] = 0x0958;\n\t    t['qadmahebrew'] = 0x05A8;\n\t    t['qafarabic'] = 0x0642;\n\t    t['qaffinalarabic'] = 0xFED6;\n\t    t['qafinitialarabic'] = 0xFED7;\n\t    t['qafmedialarabic'] = 0xFED8;\n\t    t['qamats'] = 0x05B8;\n\t    t['qamats10'] = 0x05B8;\n\t    t['qamats1a'] = 0x05B8;\n\t    t['qamats1c'] = 0x05B8;\n\t    t['qamats27'] = 0x05B8;\n\t    t['qamats29'] = 0x05B8;\n\t    t['qamats33'] = 0x05B8;\n\t    t['qamatsde'] = 0x05B8;\n\t    t['qamatshebrew'] = 0x05B8;\n\t    t['qamatsnarrowhebrew'] = 0x05B8;\n\t    t['qamatsqatanhebrew'] = 0x05B8;\n\t    t['qamatsqatannarrowhebrew'] = 0x05B8;\n\t    t['qamatsqatanquarterhebrew'] = 0x05B8;\n\t    t['qamatsqatanwidehebrew'] = 0x05B8;\n\t    t['qamatsquarterhebrew'] = 0x05B8;\n\t    t['qamatswidehebrew'] = 0x05B8;\n\t    t['qarneyparahebrew'] = 0x059F;\n\t    t['qbopomofo'] = 0x3111;\n\t    t['qcircle'] = 0x24E0;\n\t    t['qhook'] = 0x02A0;\n\t    t['qmonospace'] = 0xFF51;\n\t    t['qof'] = 0x05E7;\n\t    t['qofdagesh'] = 0xFB47;\n\t    t['qofdageshhebrew'] = 0xFB47;\n\t    t['qofhebrew'] = 0x05E7;\n\t    t['qparen'] = 0x24AC;\n\t    t['quarternote'] = 0x2669;\n\t    t['qubuts'] = 0x05BB;\n\t    t['qubuts18'] = 0x05BB;\n\t    t['qubuts25'] = 0x05BB;\n\t    t['qubuts31'] = 0x05BB;\n\t    t['qubutshebrew'] = 0x05BB;\n\t    t['qubutsnarrowhebrew'] = 0x05BB;\n\t    t['qubutsquarterhebrew'] = 0x05BB;\n\t    t['qubutswidehebrew'] = 0x05BB;\n\t    t['question'] = 0x003F;\n\t    t['questionarabic'] = 0x061F;\n\t    t['questionarmenian'] = 0x055E;\n\t    t['questiondown'] = 0x00BF;\n\t    t['questiondownsmall'] = 0xF7BF;\n\t    t['questiongreek'] = 0x037E;\n\t    t['questionmonospace'] = 0xFF1F;\n\t    t['questionsmall'] = 0xF73F;\n\t    t['quotedbl'] = 0x0022;\n\t    t['quotedblbase'] = 0x201E;\n\t    t['quotedblleft'] = 0x201C;\n\t    t['quotedblmonospace'] = 0xFF02;\n\t    t['quotedblprime'] = 0x301E;\n\t    t['quotedblprimereversed'] = 0x301D;\n\t    t['quotedblright'] = 0x201D;\n\t    t['quoteleft'] = 0x2018;\n\t    t['quoteleftreversed'] = 0x201B;\n\t    t['quotereversed'] = 0x201B;\n\t    t['quoteright'] = 0x2019;\n\t    t['quoterightn'] = 0x0149;\n\t    t['quotesinglbase'] = 0x201A;\n\t    t['quotesingle'] = 0x0027;\n\t    t['quotesinglemonospace'] = 0xFF07;\n\t    t['r'] = 0x0072;\n\t    t['raarmenian'] = 0x057C;\n\t    t['rabengali'] = 0x09B0;\n\t    t['racute'] = 0x0155;\n\t    t['radeva'] = 0x0930;\n\t    t['radical'] = 0x221A;\n\t    t['radicalex'] = 0xF8E5;\n\t    t['radoverssquare'] = 0x33AE;\n\t    t['radoverssquaredsquare'] = 0x33AF;\n\t    t['radsquare'] = 0x33AD;\n\t    t['rafe'] = 0x05BF;\n\t    t['rafehebrew'] = 0x05BF;\n\t    t['ragujarati'] = 0x0AB0;\n\t    t['ragurmukhi'] = 0x0A30;\n\t    t['rahiragana'] = 0x3089;\n\t    t['rakatakana'] = 0x30E9;\n\t    t['rakatakanahalfwidth'] = 0xFF97;\n\t    t['ralowerdiagonalbengali'] = 0x09F1;\n\t    t['ramiddlediagonalbengali'] = 0x09F0;\n\t    t['ramshorn'] = 0x0264;\n\t    t['ratio'] = 0x2236;\n\t    t['rbopomofo'] = 0x3116;\n\t    t['rcaron'] = 0x0159;\n\t    t['rcedilla'] = 0x0157;\n\t    t['rcircle'] = 0x24E1;\n\t    t['rcommaaccent'] = 0x0157;\n\t    t['rdblgrave'] = 0x0211;\n\t    t['rdotaccent'] = 0x1E59;\n\t    t['rdotbelow'] = 0x1E5B;\n\t    t['rdotbelowmacron'] = 0x1E5D;\n\t    t['referencemark'] = 0x203B;\n\t    t['reflexsubset'] = 0x2286;\n\t    t['reflexsuperset'] = 0x2287;\n\t    t['registered'] = 0x00AE;\n\t    t['registersans'] = 0xF8E8;\n\t    t['registerserif'] = 0xF6DA;\n\t    t['reharabic'] = 0x0631;\n\t    t['reharmenian'] = 0x0580;\n\t    t['rehfinalarabic'] = 0xFEAE;\n\t    t['rehiragana'] = 0x308C;\n\t    t['rekatakana'] = 0x30EC;\n\t    t['rekatakanahalfwidth'] = 0xFF9A;\n\t    t['resh'] = 0x05E8;\n\t    t['reshdageshhebrew'] = 0xFB48;\n\t    t['reshhebrew'] = 0x05E8;\n\t    t['reversedtilde'] = 0x223D;\n\t    t['reviahebrew'] = 0x0597;\n\t    t['reviamugrashhebrew'] = 0x0597;\n\t    t['revlogicalnot'] = 0x2310;\n\t    t['rfishhook'] = 0x027E;\n\t    t['rfishhookreversed'] = 0x027F;\n\t    t['rhabengali'] = 0x09DD;\n\t    t['rhadeva'] = 0x095D;\n\t    t['rho'] = 0x03C1;\n\t    t['rhook'] = 0x027D;\n\t    t['rhookturned'] = 0x027B;\n\t    t['rhookturnedsuperior'] = 0x02B5;\n\t    t['rhosymbolgreek'] = 0x03F1;\n\t    t['rhotichookmod'] = 0x02DE;\n\t    t['rieulacirclekorean'] = 0x3271;\n\t    t['rieulaparenkorean'] = 0x3211;\n\t    t['rieulcirclekorean'] = 0x3263;\n\t    t['rieulhieuhkorean'] = 0x3140;\n\t    t['rieulkiyeokkorean'] = 0x313A;\n\t    t['rieulkiyeoksioskorean'] = 0x3169;\n\t    t['rieulkorean'] = 0x3139;\n\t    t['rieulmieumkorean'] = 0x313B;\n\t    t['rieulpansioskorean'] = 0x316C;\n\t    t['rieulparenkorean'] = 0x3203;\n\t    t['rieulphieuphkorean'] = 0x313F;\n\t    t['rieulpieupkorean'] = 0x313C;\n\t    t['rieulpieupsioskorean'] = 0x316B;\n\t    t['rieulsioskorean'] = 0x313D;\n\t    t['rieulthieuthkorean'] = 0x313E;\n\t    t['rieultikeutkorean'] = 0x316A;\n\t    t['rieulyeorinhieuhkorean'] = 0x316D;\n\t    t['rightangle'] = 0x221F;\n\t    t['righttackbelowcmb'] = 0x0319;\n\t    t['righttriangle'] = 0x22BF;\n\t    t['rihiragana'] = 0x308A;\n\t    t['rikatakana'] = 0x30EA;\n\t    t['rikatakanahalfwidth'] = 0xFF98;\n\t    t['ring'] = 0x02DA;\n\t    t['ringbelowcmb'] = 0x0325;\n\t    t['ringcmb'] = 0x030A;\n\t    t['ringhalfleft'] = 0x02BF;\n\t    t['ringhalfleftarmenian'] = 0x0559;\n\t    t['ringhalfleftbelowcmb'] = 0x031C;\n\t    t['ringhalfleftcentered'] = 0x02D3;\n\t    t['ringhalfright'] = 0x02BE;\n\t    t['ringhalfrightbelowcmb'] = 0x0339;\n\t    t['ringhalfrightcentered'] = 0x02D2;\n\t    t['rinvertedbreve'] = 0x0213;\n\t    t['rittorusquare'] = 0x3351;\n\t    t['rlinebelow'] = 0x1E5F;\n\t    t['rlongleg'] = 0x027C;\n\t    t['rlonglegturned'] = 0x027A;\n\t    t['rmonospace'] = 0xFF52;\n\t    t['rohiragana'] = 0x308D;\n\t    t['rokatakana'] = 0x30ED;\n\t    t['rokatakanahalfwidth'] = 0xFF9B;\n\t    t['roruathai'] = 0x0E23;\n\t    t['rparen'] = 0x24AD;\n\t    t['rrabengali'] = 0x09DC;\n\t    t['rradeva'] = 0x0931;\n\t    t['rragurmukhi'] = 0x0A5C;\n\t    t['rreharabic'] = 0x0691;\n\t    t['rrehfinalarabic'] = 0xFB8D;\n\t    t['rrvocalicbengali'] = 0x09E0;\n\t    t['rrvocalicdeva'] = 0x0960;\n\t    t['rrvocalicgujarati'] = 0x0AE0;\n\t    t['rrvocalicvowelsignbengali'] = 0x09C4;\n\t    t['rrvocalicvowelsigndeva'] = 0x0944;\n\t    t['rrvocalicvowelsigngujarati'] = 0x0AC4;\n\t    t['rsuperior'] = 0xF6F1;\n\t    t['rtblock'] = 0x2590;\n\t    t['rturned'] = 0x0279;\n\t    t['rturnedsuperior'] = 0x02B4;\n\t    t['ruhiragana'] = 0x308B;\n\t    t['rukatakana'] = 0x30EB;\n\t    t['rukatakanahalfwidth'] = 0xFF99;\n\t    t['rupeemarkbengali'] = 0x09F2;\n\t    t['rupeesignbengali'] = 0x09F3;\n\t    t['rupiah'] = 0xF6DD;\n\t    t['ruthai'] = 0x0E24;\n\t    t['rvocalicbengali'] = 0x098B;\n\t    t['rvocalicdeva'] = 0x090B;\n\t    t['rvocalicgujarati'] = 0x0A8B;\n\t    t['rvocalicvowelsignbengali'] = 0x09C3;\n\t    t['rvocalicvowelsigndeva'] = 0x0943;\n\t    t['rvocalicvowelsigngujarati'] = 0x0AC3;\n\t    t['s'] = 0x0073;\n\t    t['sabengali'] = 0x09B8;\n\t    t['sacute'] = 0x015B;\n\t    t['sacutedotaccent'] = 0x1E65;\n\t    t['sadarabic'] = 0x0635;\n\t    t['sadeva'] = 0x0938;\n\t    t['sadfinalarabic'] = 0xFEBA;\n\t    t['sadinitialarabic'] = 0xFEBB;\n\t    t['sadmedialarabic'] = 0xFEBC;\n\t    t['sagujarati'] = 0x0AB8;\n\t    t['sagurmukhi'] = 0x0A38;\n\t    t['sahiragana'] = 0x3055;\n\t    t['sakatakana'] = 0x30B5;\n\t    t['sakatakanahalfwidth'] = 0xFF7B;\n\t    t['sallallahoualayhewasallamarabic'] = 0xFDFA;\n\t    t['samekh'] = 0x05E1;\n\t    t['samekhdagesh'] = 0xFB41;\n\t    t['samekhdageshhebrew'] = 0xFB41;\n\t    t['samekhhebrew'] = 0x05E1;\n\t    t['saraaathai'] = 0x0E32;\n\t    t['saraaethai'] = 0x0E41;\n\t    t['saraaimaimalaithai'] = 0x0E44;\n\t    t['saraaimaimuanthai'] = 0x0E43;\n\t    t['saraamthai'] = 0x0E33;\n\t    t['saraathai'] = 0x0E30;\n\t    t['saraethai'] = 0x0E40;\n\t    t['saraiileftthai'] = 0xF886;\n\t    t['saraiithai'] = 0x0E35;\n\t    t['saraileftthai'] = 0xF885;\n\t    t['saraithai'] = 0x0E34;\n\t    t['saraothai'] = 0x0E42;\n\t    t['saraueeleftthai'] = 0xF888;\n\t    t['saraueethai'] = 0x0E37;\n\t    t['saraueleftthai'] = 0xF887;\n\t    t['sarauethai'] = 0x0E36;\n\t    t['sarauthai'] = 0x0E38;\n\t    t['sarauuthai'] = 0x0E39;\n\t    t['sbopomofo'] = 0x3119;\n\t    t['scaron'] = 0x0161;\n\t    t['scarondotaccent'] = 0x1E67;\n\t    t['scedilla'] = 0x015F;\n\t    t['schwa'] = 0x0259;\n\t    t['schwacyrillic'] = 0x04D9;\n\t    t['schwadieresiscyrillic'] = 0x04DB;\n\t    t['schwahook'] = 0x025A;\n\t    t['scircle'] = 0x24E2;\n\t    t['scircumflex'] = 0x015D;\n\t    t['scommaaccent'] = 0x0219;\n\t    t['sdotaccent'] = 0x1E61;\n\t    t['sdotbelow'] = 0x1E63;\n\t    t['sdotbelowdotaccent'] = 0x1E69;\n\t    t['seagullbelowcmb'] = 0x033C;\n\t    t['second'] = 0x2033;\n\t    t['secondtonechinese'] = 0x02CA;\n\t    t['section'] = 0x00A7;\n\t    t['seenarabic'] = 0x0633;\n\t    t['seenfinalarabic'] = 0xFEB2;\n\t    t['seeninitialarabic'] = 0xFEB3;\n\t    t['seenmedialarabic'] = 0xFEB4;\n\t    t['segol'] = 0x05B6;\n\t    t['segol13'] = 0x05B6;\n\t    t['segol1f'] = 0x05B6;\n\t    t['segol2c'] = 0x05B6;\n\t    t['segolhebrew'] = 0x05B6;\n\t    t['segolnarrowhebrew'] = 0x05B6;\n\t    t['segolquarterhebrew'] = 0x05B6;\n\t    t['segoltahebrew'] = 0x0592;\n\t    t['segolwidehebrew'] = 0x05B6;\n\t    t['seharmenian'] = 0x057D;\n\t    t['sehiragana'] = 0x305B;\n\t    t['sekatakana'] = 0x30BB;\n\t    t['sekatakanahalfwidth'] = 0xFF7E;\n\t    t['semicolon'] = 0x003B;\n\t    t['semicolonarabic'] = 0x061B;\n\t    t['semicolonmonospace'] = 0xFF1B;\n\t    t['semicolonsmall'] = 0xFE54;\n\t    t['semivoicedmarkkana'] = 0x309C;\n\t    t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\n\t    t['sentisquare'] = 0x3322;\n\t    t['sentosquare'] = 0x3323;\n\t    t['seven'] = 0x0037;\n\t    t['sevenarabic'] = 0x0667;\n\t    t['sevenbengali'] = 0x09ED;\n\t    t['sevencircle'] = 0x2466;\n\t    t['sevencircleinversesansserif'] = 0x2790;\n\t    t['sevendeva'] = 0x096D;\n\t    t['seveneighths'] = 0x215E;\n\t    t['sevengujarati'] = 0x0AED;\n\t    t['sevengurmukhi'] = 0x0A6D;\n\t    t['sevenhackarabic'] = 0x0667;\n\t    t['sevenhangzhou'] = 0x3027;\n\t    t['sevenideographicparen'] = 0x3226;\n\t    t['seveninferior'] = 0x2087;\n\t    t['sevenmonospace'] = 0xFF17;\n\t    t['sevenoldstyle'] = 0xF737;\n\t    t['sevenparen'] = 0x247A;\n\t    t['sevenperiod'] = 0x248E;\n\t    t['sevenpersian'] = 0x06F7;\n\t    t['sevenroman'] = 0x2176;\n\t    t['sevensuperior'] = 0x2077;\n\t    t['seventeencircle'] = 0x2470;\n\t    t['seventeenparen'] = 0x2484;\n\t    t['seventeenperiod'] = 0x2498;\n\t    t['seventhai'] = 0x0E57;\n\t    t['sfthyphen'] = 0x00AD;\n\t    t['shaarmenian'] = 0x0577;\n\t    t['shabengali'] = 0x09B6;\n\t    t['shacyrillic'] = 0x0448;\n\t    t['shaddaarabic'] = 0x0651;\n\t    t['shaddadammaarabic'] = 0xFC61;\n\t    t['shaddadammatanarabic'] = 0xFC5E;\n\t    t['shaddafathaarabic'] = 0xFC60;\n\t    t['shaddakasraarabic'] = 0xFC62;\n\t    t['shaddakasratanarabic'] = 0xFC5F;\n\t    t['shade'] = 0x2592;\n\t    t['shadedark'] = 0x2593;\n\t    t['shadelight'] = 0x2591;\n\t    t['shademedium'] = 0x2592;\n\t    t['shadeva'] = 0x0936;\n\t    t['shagujarati'] = 0x0AB6;\n\t    t['shagurmukhi'] = 0x0A36;\n\t    t['shalshelethebrew'] = 0x0593;\n\t    t['shbopomofo'] = 0x3115;\n\t    t['shchacyrillic'] = 0x0449;\n\t    t['sheenarabic'] = 0x0634;\n\t    t['sheenfinalarabic'] = 0xFEB6;\n\t    t['sheeninitialarabic'] = 0xFEB7;\n\t    t['sheenmedialarabic'] = 0xFEB8;\n\t    t['sheicoptic'] = 0x03E3;\n\t    t['sheqel'] = 0x20AA;\n\t    t['sheqelhebrew'] = 0x20AA;\n\t    t['sheva'] = 0x05B0;\n\t    t['sheva115'] = 0x05B0;\n\t    t['sheva15'] = 0x05B0;\n\t    t['sheva22'] = 0x05B0;\n\t    t['sheva2e'] = 0x05B0;\n\t    t['shevahebrew'] = 0x05B0;\n\t    t['shevanarrowhebrew'] = 0x05B0;\n\t    t['shevaquarterhebrew'] = 0x05B0;\n\t    t['shevawidehebrew'] = 0x05B0;\n\t    t['shhacyrillic'] = 0x04BB;\n\t    t['shimacoptic'] = 0x03ED;\n\t    t['shin'] = 0x05E9;\n\t    t['shindagesh'] = 0xFB49;\n\t    t['shindageshhebrew'] = 0xFB49;\n\t    t['shindageshshindot'] = 0xFB2C;\n\t    t['shindageshshindothebrew'] = 0xFB2C;\n\t    t['shindageshsindot'] = 0xFB2D;\n\t    t['shindageshsindothebrew'] = 0xFB2D;\n\t    t['shindothebrew'] = 0x05C1;\n\t    t['shinhebrew'] = 0x05E9;\n\t    t['shinshindot'] = 0xFB2A;\n\t    t['shinshindothebrew'] = 0xFB2A;\n\t    t['shinsindot'] = 0xFB2B;\n\t    t['shinsindothebrew'] = 0xFB2B;\n\t    t['shook'] = 0x0282;\n\t    t['sigma'] = 0x03C3;\n\t    t['sigma1'] = 0x03C2;\n\t    t['sigmafinal'] = 0x03C2;\n\t    t['sigmalunatesymbolgreek'] = 0x03F2;\n\t    t['sihiragana'] = 0x3057;\n\t    t['sikatakana'] = 0x30B7;\n\t    t['sikatakanahalfwidth'] = 0xFF7C;\n\t    t['siluqhebrew'] = 0x05BD;\n\t    t['siluqlefthebrew'] = 0x05BD;\n\t    t['similar'] = 0x223C;\n\t    t['sindothebrew'] = 0x05C2;\n\t    t['siosacirclekorean'] = 0x3274;\n\t    t['siosaparenkorean'] = 0x3214;\n\t    t['sioscieuckorean'] = 0x317E;\n\t    t['sioscirclekorean'] = 0x3266;\n\t    t['sioskiyeokkorean'] = 0x317A;\n\t    t['sioskorean'] = 0x3145;\n\t    t['siosnieunkorean'] = 0x317B;\n\t    t['siosparenkorean'] = 0x3206;\n\t    t['siospieupkorean'] = 0x317D;\n\t    t['siostikeutkorean'] = 0x317C;\n\t    t['six'] = 0x0036;\n\t    t['sixarabic'] = 0x0666;\n\t    t['sixbengali'] = 0x09EC;\n\t    t['sixcircle'] = 0x2465;\n\t    t['sixcircleinversesansserif'] = 0x278F;\n\t    t['sixdeva'] = 0x096C;\n\t    t['sixgujarati'] = 0x0AEC;\n\t    t['sixgurmukhi'] = 0x0A6C;\n\t    t['sixhackarabic'] = 0x0666;\n\t    t['sixhangzhou'] = 0x3026;\n\t    t['sixideographicparen'] = 0x3225;\n\t    t['sixinferior'] = 0x2086;\n\t    t['sixmonospace'] = 0xFF16;\n\t    t['sixoldstyle'] = 0xF736;\n\t    t['sixparen'] = 0x2479;\n\t    t['sixperiod'] = 0x248D;\n\t    t['sixpersian'] = 0x06F6;\n\t    t['sixroman'] = 0x2175;\n\t    t['sixsuperior'] = 0x2076;\n\t    t['sixteencircle'] = 0x246F;\n\t    t['sixteencurrencydenominatorbengali'] = 0x09F9;\n\t    t['sixteenparen'] = 0x2483;\n\t    t['sixteenperiod'] = 0x2497;\n\t    t['sixthai'] = 0x0E56;\n\t    t['slash'] = 0x002F;\n\t    t['slashmonospace'] = 0xFF0F;\n\t    t['slong'] = 0x017F;\n\t    t['slongdotaccent'] = 0x1E9B;\n\t    t['smileface'] = 0x263A;\n\t    t['smonospace'] = 0xFF53;\n\t    t['sofpasuqhebrew'] = 0x05C3;\n\t    t['softhyphen'] = 0x00AD;\n\t    t['softsigncyrillic'] = 0x044C;\n\t    t['sohiragana'] = 0x305D;\n\t    t['sokatakana'] = 0x30BD;\n\t    t['sokatakanahalfwidth'] = 0xFF7F;\n\t    t['soliduslongoverlaycmb'] = 0x0338;\n\t    t['solidusshortoverlaycmb'] = 0x0337;\n\t    t['sorusithai'] = 0x0E29;\n\t    t['sosalathai'] = 0x0E28;\n\t    t['sosothai'] = 0x0E0B;\n\t    t['sosuathai'] = 0x0E2A;\n\t    t['space'] = 0x0020;\n\t    t['spacehackarabic'] = 0x0020;\n\t    t['spade'] = 0x2660;\n\t    t['spadesuitblack'] = 0x2660;\n\t    t['spadesuitwhite'] = 0x2664;\n\t    t['sparen'] = 0x24AE;\n\t    t['squarebelowcmb'] = 0x033B;\n\t    t['squarecc'] = 0x33C4;\n\t    t['squarecm'] = 0x339D;\n\t    t['squarediagonalcrosshatchfill'] = 0x25A9;\n\t    t['squarehorizontalfill'] = 0x25A4;\n\t    t['squarekg'] = 0x338F;\n\t    t['squarekm'] = 0x339E;\n\t    t['squarekmcapital'] = 0x33CE;\n\t    t['squareln'] = 0x33D1;\n\t    t['squarelog'] = 0x33D2;\n\t    t['squaremg'] = 0x338E;\n\t    t['squaremil'] = 0x33D5;\n\t    t['squaremm'] = 0x339C;\n\t    t['squaremsquared'] = 0x33A1;\n\t    t['squareorthogonalcrosshatchfill'] = 0x25A6;\n\t    t['squareupperlefttolowerrightfill'] = 0x25A7;\n\t    t['squareupperrighttolowerleftfill'] = 0x25A8;\n\t    t['squareverticalfill'] = 0x25A5;\n\t    t['squarewhitewithsmallblack'] = 0x25A3;\n\t    t['srsquare'] = 0x33DB;\n\t    t['ssabengali'] = 0x09B7;\n\t    t['ssadeva'] = 0x0937;\n\t    t['ssagujarati'] = 0x0AB7;\n\t    t['ssangcieuckorean'] = 0x3149;\n\t    t['ssanghieuhkorean'] = 0x3185;\n\t    t['ssangieungkorean'] = 0x3180;\n\t    t['ssangkiyeokkorean'] = 0x3132;\n\t    t['ssangnieunkorean'] = 0x3165;\n\t    t['ssangpieupkorean'] = 0x3143;\n\t    t['ssangsioskorean'] = 0x3146;\n\t    t['ssangtikeutkorean'] = 0x3138;\n\t    t['ssuperior'] = 0xF6F2;\n\t    t['sterling'] = 0x00A3;\n\t    t['sterlingmonospace'] = 0xFFE1;\n\t    t['strokelongoverlaycmb'] = 0x0336;\n\t    t['strokeshortoverlaycmb'] = 0x0335;\n\t    t['subset'] = 0x2282;\n\t    t['subsetnotequal'] = 0x228A;\n\t    t['subsetorequal'] = 0x2286;\n\t    t['succeeds'] = 0x227B;\n\t    t['suchthat'] = 0x220B;\n\t    t['suhiragana'] = 0x3059;\n\t    t['sukatakana'] = 0x30B9;\n\t    t['sukatakanahalfwidth'] = 0xFF7D;\n\t    t['sukunarabic'] = 0x0652;\n\t    t['summation'] = 0x2211;\n\t    t['sun'] = 0x263C;\n\t    t['superset'] = 0x2283;\n\t    t['supersetnotequal'] = 0x228B;\n\t    t['supersetorequal'] = 0x2287;\n\t    t['svsquare'] = 0x33DC;\n\t    t['syouwaerasquare'] = 0x337C;\n\t    t['t'] = 0x0074;\n\t    t['tabengali'] = 0x09A4;\n\t    t['tackdown'] = 0x22A4;\n\t    t['tackleft'] = 0x22A3;\n\t    t['tadeva'] = 0x0924;\n\t    t['tagujarati'] = 0x0AA4;\n\t    t['tagurmukhi'] = 0x0A24;\n\t    t['taharabic'] = 0x0637;\n\t    t['tahfinalarabic'] = 0xFEC2;\n\t    t['tahinitialarabic'] = 0xFEC3;\n\t    t['tahiragana'] = 0x305F;\n\t    t['tahmedialarabic'] = 0xFEC4;\n\t    t['taisyouerasquare'] = 0x337D;\n\t    t['takatakana'] = 0x30BF;\n\t    t['takatakanahalfwidth'] = 0xFF80;\n\t    t['tatweelarabic'] = 0x0640;\n\t    t['tau'] = 0x03C4;\n\t    t['tav'] = 0x05EA;\n\t    t['tavdages'] = 0xFB4A;\n\t    t['tavdagesh'] = 0xFB4A;\n\t    t['tavdageshhebrew'] = 0xFB4A;\n\t    t['tavhebrew'] = 0x05EA;\n\t    t['tbar'] = 0x0167;\n\t    t['tbopomofo'] = 0x310A;\n\t    t['tcaron'] = 0x0165;\n\t    t['tccurl'] = 0x02A8;\n\t    t['tcedilla'] = 0x0163;\n\t    t['tcheharabic'] = 0x0686;\n\t    t['tchehfinalarabic'] = 0xFB7B;\n\t    t['tchehinitialarabic'] = 0xFB7C;\n\t    t['tchehmedialarabic'] = 0xFB7D;\n\t    t['tcircle'] = 0x24E3;\n\t    t['tcircumflexbelow'] = 0x1E71;\n\t    t['tcommaaccent'] = 0x0163;\n\t    t['tdieresis'] = 0x1E97;\n\t    t['tdotaccent'] = 0x1E6B;\n\t    t['tdotbelow'] = 0x1E6D;\n\t    t['tecyrillic'] = 0x0442;\n\t    t['tedescendercyrillic'] = 0x04AD;\n\t    t['teharabic'] = 0x062A;\n\t    t['tehfinalarabic'] = 0xFE96;\n\t    t['tehhahinitialarabic'] = 0xFCA2;\n\t    t['tehhahisolatedarabic'] = 0xFC0C;\n\t    t['tehinitialarabic'] = 0xFE97;\n\t    t['tehiragana'] = 0x3066;\n\t    t['tehjeeminitialarabic'] = 0xFCA1;\n\t    t['tehjeemisolatedarabic'] = 0xFC0B;\n\t    t['tehmarbutaarabic'] = 0x0629;\n\t    t['tehmarbutafinalarabic'] = 0xFE94;\n\t    t['tehmedialarabic'] = 0xFE98;\n\t    t['tehmeeminitialarabic'] = 0xFCA4;\n\t    t['tehmeemisolatedarabic'] = 0xFC0E;\n\t    t['tehnoonfinalarabic'] = 0xFC73;\n\t    t['tekatakana'] = 0x30C6;\n\t    t['tekatakanahalfwidth'] = 0xFF83;\n\t    t['telephone'] = 0x2121;\n\t    t['telephoneblack'] = 0x260E;\n\t    t['telishagedolahebrew'] = 0x05A0;\n\t    t['telishaqetanahebrew'] = 0x05A9;\n\t    t['tencircle'] = 0x2469;\n\t    t['tenideographicparen'] = 0x3229;\n\t    t['tenparen'] = 0x247D;\n\t    t['tenperiod'] = 0x2491;\n\t    t['tenroman'] = 0x2179;\n\t    t['tesh'] = 0x02A7;\n\t    t['tet'] = 0x05D8;\n\t    t['tetdagesh'] = 0xFB38;\n\t    t['tetdageshhebrew'] = 0xFB38;\n\t    t['tethebrew'] = 0x05D8;\n\t    t['tetsecyrillic'] = 0x04B5;\n\t    t['tevirhebrew'] = 0x059B;\n\t    t['tevirlefthebrew'] = 0x059B;\n\t    t['thabengali'] = 0x09A5;\n\t    t['thadeva'] = 0x0925;\n\t    t['thagujarati'] = 0x0AA5;\n\t    t['thagurmukhi'] = 0x0A25;\n\t    t['thalarabic'] = 0x0630;\n\t    t['thalfinalarabic'] = 0xFEAC;\n\t    t['thanthakhatlowleftthai'] = 0xF898;\n\t    t['thanthakhatlowrightthai'] = 0xF897;\n\t    t['thanthakhatthai'] = 0x0E4C;\n\t    t['thanthakhatupperleftthai'] = 0xF896;\n\t    t['theharabic'] = 0x062B;\n\t    t['thehfinalarabic'] = 0xFE9A;\n\t    t['thehinitialarabic'] = 0xFE9B;\n\t    t['thehmedialarabic'] = 0xFE9C;\n\t    t['thereexists'] = 0x2203;\n\t    t['therefore'] = 0x2234;\n\t    t['theta'] = 0x03B8;\n\t    t['theta1'] = 0x03D1;\n\t    t['thetasymbolgreek'] = 0x03D1;\n\t    t['thieuthacirclekorean'] = 0x3279;\n\t    t['thieuthaparenkorean'] = 0x3219;\n\t    t['thieuthcirclekorean'] = 0x326B;\n\t    t['thieuthkorean'] = 0x314C;\n\t    t['thieuthparenkorean'] = 0x320B;\n\t    t['thirteencircle'] = 0x246C;\n\t    t['thirteenparen'] = 0x2480;\n\t    t['thirteenperiod'] = 0x2494;\n\t    t['thonangmonthothai'] = 0x0E11;\n\t    t['thook'] = 0x01AD;\n\t    t['thophuthaothai'] = 0x0E12;\n\t    t['thorn'] = 0x00FE;\n\t    t['thothahanthai'] = 0x0E17;\n\t    t['thothanthai'] = 0x0E10;\n\t    t['thothongthai'] = 0x0E18;\n\t    t['thothungthai'] = 0x0E16;\n\t    t['thousandcyrillic'] = 0x0482;\n\t    t['thousandsseparatorarabic'] = 0x066C;\n\t    t['thousandsseparatorpersian'] = 0x066C;\n\t    t['three'] = 0x0033;\n\t    t['threearabic'] = 0x0663;\n\t    t['threebengali'] = 0x09E9;\n\t    t['threecircle'] = 0x2462;\n\t    t['threecircleinversesansserif'] = 0x278C;\n\t    t['threedeva'] = 0x0969;\n\t    t['threeeighths'] = 0x215C;\n\t    t['threegujarati'] = 0x0AE9;\n\t    t['threegurmukhi'] = 0x0A69;\n\t    t['threehackarabic'] = 0x0663;\n\t    t['threehangzhou'] = 0x3023;\n\t    t['threeideographicparen'] = 0x3222;\n\t    t['threeinferior'] = 0x2083;\n\t    t['threemonospace'] = 0xFF13;\n\t    t['threenumeratorbengali'] = 0x09F6;\n\t    t['threeoldstyle'] = 0xF733;\n\t    t['threeparen'] = 0x2476;\n\t    t['threeperiod'] = 0x248A;\n\t    t['threepersian'] = 0x06F3;\n\t    t['threequarters'] = 0x00BE;\n\t    t['threequartersemdash'] = 0xF6DE;\n\t    t['threeroman'] = 0x2172;\n\t    t['threesuperior'] = 0x00B3;\n\t    t['threethai'] = 0x0E53;\n\t    t['thzsquare'] = 0x3394;\n\t    t['tihiragana'] = 0x3061;\n\t    t['tikatakana'] = 0x30C1;\n\t    t['tikatakanahalfwidth'] = 0xFF81;\n\t    t['tikeutacirclekorean'] = 0x3270;\n\t    t['tikeutaparenkorean'] = 0x3210;\n\t    t['tikeutcirclekorean'] = 0x3262;\n\t    t['tikeutkorean'] = 0x3137;\n\t    t['tikeutparenkorean'] = 0x3202;\n\t    t['tilde'] = 0x02DC;\n\t    t['tildebelowcmb'] = 0x0330;\n\t    t['tildecmb'] = 0x0303;\n\t    t['tildecomb'] = 0x0303;\n\t    t['tildedoublecmb'] = 0x0360;\n\t    t['tildeoperator'] = 0x223C;\n\t    t['tildeoverlaycmb'] = 0x0334;\n\t    t['tildeverticalcmb'] = 0x033E;\n\t    t['timescircle'] = 0x2297;\n\t    t['tipehahebrew'] = 0x0596;\n\t    t['tipehalefthebrew'] = 0x0596;\n\t    t['tippigurmukhi'] = 0x0A70;\n\t    t['titlocyrilliccmb'] = 0x0483;\n\t    t['tiwnarmenian'] = 0x057F;\n\t    t['tlinebelow'] = 0x1E6F;\n\t    t['tmonospace'] = 0xFF54;\n\t    t['toarmenian'] = 0x0569;\n\t    t['tohiragana'] = 0x3068;\n\t    t['tokatakana'] = 0x30C8;\n\t    t['tokatakanahalfwidth'] = 0xFF84;\n\t    t['tonebarextrahighmod'] = 0x02E5;\n\t    t['tonebarextralowmod'] = 0x02E9;\n\t    t['tonebarhighmod'] = 0x02E6;\n\t    t['tonebarlowmod'] = 0x02E8;\n\t    t['tonebarmidmod'] = 0x02E7;\n\t    t['tonefive'] = 0x01BD;\n\t    t['tonesix'] = 0x0185;\n\t    t['tonetwo'] = 0x01A8;\n\t    t['tonos'] = 0x0384;\n\t    t['tonsquare'] = 0x3327;\n\t    t['topatakthai'] = 0x0E0F;\n\t    t['tortoiseshellbracketleft'] = 0x3014;\n\t    t['tortoiseshellbracketleftsmall'] = 0xFE5D;\n\t    t['tortoiseshellbracketleftvertical'] = 0xFE39;\n\t    t['tortoiseshellbracketright'] = 0x3015;\n\t    t['tortoiseshellbracketrightsmall'] = 0xFE5E;\n\t    t['tortoiseshellbracketrightvertical'] = 0xFE3A;\n\t    t['totaothai'] = 0x0E15;\n\t    t['tpalatalhook'] = 0x01AB;\n\t    t['tparen'] = 0x24AF;\n\t    t['trademark'] = 0x2122;\n\t    t['trademarksans'] = 0xF8EA;\n\t    t['trademarkserif'] = 0xF6DB;\n\t    t['tretroflexhook'] = 0x0288;\n\t    t['triagdn'] = 0x25BC;\n\t    t['triaglf'] = 0x25C4;\n\t    t['triagrt'] = 0x25BA;\n\t    t['triagup'] = 0x25B2;\n\t    t['ts'] = 0x02A6;\n\t    t['tsadi'] = 0x05E6;\n\t    t['tsadidagesh'] = 0xFB46;\n\t    t['tsadidageshhebrew'] = 0xFB46;\n\t    t['tsadihebrew'] = 0x05E6;\n\t    t['tsecyrillic'] = 0x0446;\n\t    t['tsere'] = 0x05B5;\n\t    t['tsere12'] = 0x05B5;\n\t    t['tsere1e'] = 0x05B5;\n\t    t['tsere2b'] = 0x05B5;\n\t    t['tserehebrew'] = 0x05B5;\n\t    t['tserenarrowhebrew'] = 0x05B5;\n\t    t['tserequarterhebrew'] = 0x05B5;\n\t    t['tserewidehebrew'] = 0x05B5;\n\t    t['tshecyrillic'] = 0x045B;\n\t    t['tsuperior'] = 0xF6F3;\n\t    t['ttabengali'] = 0x099F;\n\t    t['ttadeva'] = 0x091F;\n\t    t['ttagujarati'] = 0x0A9F;\n\t    t['ttagurmukhi'] = 0x0A1F;\n\t    t['tteharabic'] = 0x0679;\n\t    t['ttehfinalarabic'] = 0xFB67;\n\t    t['ttehinitialarabic'] = 0xFB68;\n\t    t['ttehmedialarabic'] = 0xFB69;\n\t    t['tthabengali'] = 0x09A0;\n\t    t['tthadeva'] = 0x0920;\n\t    t['tthagujarati'] = 0x0AA0;\n\t    t['tthagurmukhi'] = 0x0A20;\n\t    t['tturned'] = 0x0287;\n\t    t['tuhiragana'] = 0x3064;\n\t    t['tukatakana'] = 0x30C4;\n\t    t['tukatakanahalfwidth'] = 0xFF82;\n\t    t['tusmallhiragana'] = 0x3063;\n\t    t['tusmallkatakana'] = 0x30C3;\n\t    t['tusmallkatakanahalfwidth'] = 0xFF6F;\n\t    t['twelvecircle'] = 0x246B;\n\t    t['twelveparen'] = 0x247F;\n\t    t['twelveperiod'] = 0x2493;\n\t    t['twelveroman'] = 0x217B;\n\t    t['twentycircle'] = 0x2473;\n\t    t['twentyhangzhou'] = 0x5344;\n\t    t['twentyparen'] = 0x2487;\n\t    t['twentyperiod'] = 0x249B;\n\t    t['two'] = 0x0032;\n\t    t['twoarabic'] = 0x0662;\n\t    t['twobengali'] = 0x09E8;\n\t    t['twocircle'] = 0x2461;\n\t    t['twocircleinversesansserif'] = 0x278B;\n\t    t['twodeva'] = 0x0968;\n\t    t['twodotenleader'] = 0x2025;\n\t    t['twodotleader'] = 0x2025;\n\t    t['twodotleadervertical'] = 0xFE30;\n\t    t['twogujarati'] = 0x0AE8;\n\t    t['twogurmukhi'] = 0x0A68;\n\t    t['twohackarabic'] = 0x0662;\n\t    t['twohangzhou'] = 0x3022;\n\t    t['twoideographicparen'] = 0x3221;\n\t    t['twoinferior'] = 0x2082;\n\t    t['twomonospace'] = 0xFF12;\n\t    t['twonumeratorbengali'] = 0x09F5;\n\t    t['twooldstyle'] = 0xF732;\n\t    t['twoparen'] = 0x2475;\n\t    t['twoperiod'] = 0x2489;\n\t    t['twopersian'] = 0x06F2;\n\t    t['tworoman'] = 0x2171;\n\t    t['twostroke'] = 0x01BB;\n\t    t['twosuperior'] = 0x00B2;\n\t    t['twothai'] = 0x0E52;\n\t    t['twothirds'] = 0x2154;\n\t    t['u'] = 0x0075;\n\t    t['uacute'] = 0x00FA;\n\t    t['ubar'] = 0x0289;\n\t    t['ubengali'] = 0x0989;\n\t    t['ubopomofo'] = 0x3128;\n\t    t['ubreve'] = 0x016D;\n\t    t['ucaron'] = 0x01D4;\n\t    t['ucircle'] = 0x24E4;\n\t    t['ucircumflex'] = 0x00FB;\n\t    t['ucircumflexbelow'] = 0x1E77;\n\t    t['ucyrillic'] = 0x0443;\n\t    t['udattadeva'] = 0x0951;\n\t    t['udblacute'] = 0x0171;\n\t    t['udblgrave'] = 0x0215;\n\t    t['udeva'] = 0x0909;\n\t    t['udieresis'] = 0x00FC;\n\t    t['udieresisacute'] = 0x01D8;\n\t    t['udieresisbelow'] = 0x1E73;\n\t    t['udieresiscaron'] = 0x01DA;\n\t    t['udieresiscyrillic'] = 0x04F1;\n\t    t['udieresisgrave'] = 0x01DC;\n\t    t['udieresismacron'] = 0x01D6;\n\t    t['udotbelow'] = 0x1EE5;\n\t    t['ugrave'] = 0x00F9;\n\t    t['ugujarati'] = 0x0A89;\n\t    t['ugurmukhi'] = 0x0A09;\n\t    t['uhiragana'] = 0x3046;\n\t    t['uhookabove'] = 0x1EE7;\n\t    t['uhorn'] = 0x01B0;\n\t    t['uhornacute'] = 0x1EE9;\n\t    t['uhorndotbelow'] = 0x1EF1;\n\t    t['uhorngrave'] = 0x1EEB;\n\t    t['uhornhookabove'] = 0x1EED;\n\t    t['uhorntilde'] = 0x1EEF;\n\t    t['uhungarumlaut'] = 0x0171;\n\t    t['uhungarumlautcyrillic'] = 0x04F3;\n\t    t['uinvertedbreve'] = 0x0217;\n\t    t['ukatakana'] = 0x30A6;\n\t    t['ukatakanahalfwidth'] = 0xFF73;\n\t    t['ukcyrillic'] = 0x0479;\n\t    t['ukorean'] = 0x315C;\n\t    t['umacron'] = 0x016B;\n\t    t['umacroncyrillic'] = 0x04EF;\n\t    t['umacrondieresis'] = 0x1E7B;\n\t    t['umatragurmukhi'] = 0x0A41;\n\t    t['umonospace'] = 0xFF55;\n\t    t['underscore'] = 0x005F;\n\t    t['underscoredbl'] = 0x2017;\n\t    t['underscoremonospace'] = 0xFF3F;\n\t    t['underscorevertical'] = 0xFE33;\n\t    t['underscorewavy'] = 0xFE4F;\n\t    t['union'] = 0x222A;\n\t    t['universal'] = 0x2200;\n\t    t['uogonek'] = 0x0173;\n\t    t['uparen'] = 0x24B0;\n\t    t['upblock'] = 0x2580;\n\t    t['upperdothebrew'] = 0x05C4;\n\t    t['upsilon'] = 0x03C5;\n\t    t['upsilondieresis'] = 0x03CB;\n\t    t['upsilondieresistonos'] = 0x03B0;\n\t    t['upsilonlatin'] = 0x028A;\n\t    t['upsilontonos'] = 0x03CD;\n\t    t['uptackbelowcmb'] = 0x031D;\n\t    t['uptackmod'] = 0x02D4;\n\t    t['uragurmukhi'] = 0x0A73;\n\t    t['uring'] = 0x016F;\n\t    t['ushortcyrillic'] = 0x045E;\n\t    t['usmallhiragana'] = 0x3045;\n\t    t['usmallkatakana'] = 0x30A5;\n\t    t['usmallkatakanahalfwidth'] = 0xFF69;\n\t    t['ustraightcyrillic'] = 0x04AF;\n\t    t['ustraightstrokecyrillic'] = 0x04B1;\n\t    t['utilde'] = 0x0169;\n\t    t['utildeacute'] = 0x1E79;\n\t    t['utildebelow'] = 0x1E75;\n\t    t['uubengali'] = 0x098A;\n\t    t['uudeva'] = 0x090A;\n\t    t['uugujarati'] = 0x0A8A;\n\t    t['uugurmukhi'] = 0x0A0A;\n\t    t['uumatragurmukhi'] = 0x0A42;\n\t    t['uuvowelsignbengali'] = 0x09C2;\n\t    t['uuvowelsigndeva'] = 0x0942;\n\t    t['uuvowelsigngujarati'] = 0x0AC2;\n\t    t['uvowelsignbengali'] = 0x09C1;\n\t    t['uvowelsigndeva'] = 0x0941;\n\t    t['uvowelsigngujarati'] = 0x0AC1;\n\t    t['v'] = 0x0076;\n\t    t['vadeva'] = 0x0935;\n\t    t['vagujarati'] = 0x0AB5;\n\t    t['vagurmukhi'] = 0x0A35;\n\t    t['vakatakana'] = 0x30F7;\n\t    t['vav'] = 0x05D5;\n\t    t['vavdagesh'] = 0xFB35;\n\t    t['vavdagesh65'] = 0xFB35;\n\t    t['vavdageshhebrew'] = 0xFB35;\n\t    t['vavhebrew'] = 0x05D5;\n\t    t['vavholam'] = 0xFB4B;\n\t    t['vavholamhebrew'] = 0xFB4B;\n\t    t['vavvavhebrew'] = 0x05F0;\n\t    t['vavyodhebrew'] = 0x05F1;\n\t    t['vcircle'] = 0x24E5;\n\t    t['vdotbelow'] = 0x1E7F;\n\t    t['vecyrillic'] = 0x0432;\n\t    t['veharabic'] = 0x06A4;\n\t    t['vehfinalarabic'] = 0xFB6B;\n\t    t['vehinitialarabic'] = 0xFB6C;\n\t    t['vehmedialarabic'] = 0xFB6D;\n\t    t['vekatakana'] = 0x30F9;\n\t    t['venus'] = 0x2640;\n\t    t['verticalbar'] = 0x007C;\n\t    t['verticallineabovecmb'] = 0x030D;\n\t    t['verticallinebelowcmb'] = 0x0329;\n\t    t['verticallinelowmod'] = 0x02CC;\n\t    t['verticallinemod'] = 0x02C8;\n\t    t['vewarmenian'] = 0x057E;\n\t    t['vhook'] = 0x028B;\n\t    t['vikatakana'] = 0x30F8;\n\t    t['viramabengali'] = 0x09CD;\n\t    t['viramadeva'] = 0x094D;\n\t    t['viramagujarati'] = 0x0ACD;\n\t    t['visargabengali'] = 0x0983;\n\t    t['visargadeva'] = 0x0903;\n\t    t['visargagujarati'] = 0x0A83;\n\t    t['vmonospace'] = 0xFF56;\n\t    t['voarmenian'] = 0x0578;\n\t    t['voicediterationhiragana'] = 0x309E;\n\t    t['voicediterationkatakana'] = 0x30FE;\n\t    t['voicedmarkkana'] = 0x309B;\n\t    t['voicedmarkkanahalfwidth'] = 0xFF9E;\n\t    t['vokatakana'] = 0x30FA;\n\t    t['vparen'] = 0x24B1;\n\t    t['vtilde'] = 0x1E7D;\n\t    t['vturned'] = 0x028C;\n\t    t['vuhiragana'] = 0x3094;\n\t    t['vukatakana'] = 0x30F4;\n\t    t['w'] = 0x0077;\n\t    t['wacute'] = 0x1E83;\n\t    t['waekorean'] = 0x3159;\n\t    t['wahiragana'] = 0x308F;\n\t    t['wakatakana'] = 0x30EF;\n\t    t['wakatakanahalfwidth'] = 0xFF9C;\n\t    t['wakorean'] = 0x3158;\n\t    t['wasmallhiragana'] = 0x308E;\n\t    t['wasmallkatakana'] = 0x30EE;\n\t    t['wattosquare'] = 0x3357;\n\t    t['wavedash'] = 0x301C;\n\t    t['wavyunderscorevertical'] = 0xFE34;\n\t    t['wawarabic'] = 0x0648;\n\t    t['wawfinalarabic'] = 0xFEEE;\n\t    t['wawhamzaabovearabic'] = 0x0624;\n\t    t['wawhamzaabovefinalarabic'] = 0xFE86;\n\t    t['wbsquare'] = 0x33DD;\n\t    t['wcircle'] = 0x24E6;\n\t    t['wcircumflex'] = 0x0175;\n\t    t['wdieresis'] = 0x1E85;\n\t    t['wdotaccent'] = 0x1E87;\n\t    t['wdotbelow'] = 0x1E89;\n\t    t['wehiragana'] = 0x3091;\n\t    t['weierstrass'] = 0x2118;\n\t    t['wekatakana'] = 0x30F1;\n\t    t['wekorean'] = 0x315E;\n\t    t['weokorean'] = 0x315D;\n\t    t['wgrave'] = 0x1E81;\n\t    t['whitebullet'] = 0x25E6;\n\t    t['whitecircle'] = 0x25CB;\n\t    t['whitecircleinverse'] = 0x25D9;\n\t    t['whitecornerbracketleft'] = 0x300E;\n\t    t['whitecornerbracketleftvertical'] = 0xFE43;\n\t    t['whitecornerbracketright'] = 0x300F;\n\t    t['whitecornerbracketrightvertical'] = 0xFE44;\n\t    t['whitediamond'] = 0x25C7;\n\t    t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\n\t    t['whitedownpointingsmalltriangle'] = 0x25BF;\n\t    t['whitedownpointingtriangle'] = 0x25BD;\n\t    t['whiteleftpointingsmalltriangle'] = 0x25C3;\n\t    t['whiteleftpointingtriangle'] = 0x25C1;\n\t    t['whitelenticularbracketleft'] = 0x3016;\n\t    t['whitelenticularbracketright'] = 0x3017;\n\t    t['whiterightpointingsmalltriangle'] = 0x25B9;\n\t    t['whiterightpointingtriangle'] = 0x25B7;\n\t    t['whitesmallsquare'] = 0x25AB;\n\t    t['whitesmilingface'] = 0x263A;\n\t    t['whitesquare'] = 0x25A1;\n\t    t['whitestar'] = 0x2606;\n\t    t['whitetelephone'] = 0x260F;\n\t    t['whitetortoiseshellbracketleft'] = 0x3018;\n\t    t['whitetortoiseshellbracketright'] = 0x3019;\n\t    t['whiteuppointingsmalltriangle'] = 0x25B5;\n\t    t['whiteuppointingtriangle'] = 0x25B3;\n\t    t['wihiragana'] = 0x3090;\n\t    t['wikatakana'] = 0x30F0;\n\t    t['wikorean'] = 0x315F;\n\t    t['wmonospace'] = 0xFF57;\n\t    t['wohiragana'] = 0x3092;\n\t    t['wokatakana'] = 0x30F2;\n\t    t['wokatakanahalfwidth'] = 0xFF66;\n\t    t['won'] = 0x20A9;\n\t    t['wonmonospace'] = 0xFFE6;\n\t    t['wowaenthai'] = 0x0E27;\n\t    t['wparen'] = 0x24B2;\n\t    t['wring'] = 0x1E98;\n\t    t['wsuperior'] = 0x02B7;\n\t    t['wturned'] = 0x028D;\n\t    t['wynn'] = 0x01BF;\n\t    t['x'] = 0x0078;\n\t    t['xabovecmb'] = 0x033D;\n\t    t['xbopomofo'] = 0x3112;\n\t    t['xcircle'] = 0x24E7;\n\t    t['xdieresis'] = 0x1E8D;\n\t    t['xdotaccent'] = 0x1E8B;\n\t    t['xeharmenian'] = 0x056D;\n\t    t['xi'] = 0x03BE;\n\t    t['xmonospace'] = 0xFF58;\n\t    t['xparen'] = 0x24B3;\n\t    t['xsuperior'] = 0x02E3;\n\t    t['y'] = 0x0079;\n\t    t['yaadosquare'] = 0x334E;\n\t    t['yabengali'] = 0x09AF;\n\t    t['yacute'] = 0x00FD;\n\t    t['yadeva'] = 0x092F;\n\t    t['yaekorean'] = 0x3152;\n\t    t['yagujarati'] = 0x0AAF;\n\t    t['yagurmukhi'] = 0x0A2F;\n\t    t['yahiragana'] = 0x3084;\n\t    t['yakatakana'] = 0x30E4;\n\t    t['yakatakanahalfwidth'] = 0xFF94;\n\t    t['yakorean'] = 0x3151;\n\t    t['yamakkanthai'] = 0x0E4E;\n\t    t['yasmallhiragana'] = 0x3083;\n\t    t['yasmallkatakana'] = 0x30E3;\n\t    t['yasmallkatakanahalfwidth'] = 0xFF6C;\n\t    t['yatcyrillic'] = 0x0463;\n\t    t['ycircle'] = 0x24E8;\n\t    t['ycircumflex'] = 0x0177;\n\t    t['ydieresis'] = 0x00FF;\n\t    t['ydotaccent'] = 0x1E8F;\n\t    t['ydotbelow'] = 0x1EF5;\n\t    t['yeharabic'] = 0x064A;\n\t    t['yehbarreearabic'] = 0x06D2;\n\t    t['yehbarreefinalarabic'] = 0xFBAF;\n\t    t['yehfinalarabic'] = 0xFEF2;\n\t    t['yehhamzaabovearabic'] = 0x0626;\n\t    t['yehhamzaabovefinalarabic'] = 0xFE8A;\n\t    t['yehhamzaaboveinitialarabic'] = 0xFE8B;\n\t    t['yehhamzaabovemedialarabic'] = 0xFE8C;\n\t    t['yehinitialarabic'] = 0xFEF3;\n\t    t['yehmedialarabic'] = 0xFEF4;\n\t    t['yehmeeminitialarabic'] = 0xFCDD;\n\t    t['yehmeemisolatedarabic'] = 0xFC58;\n\t    t['yehnoonfinalarabic'] = 0xFC94;\n\t    t['yehthreedotsbelowarabic'] = 0x06D1;\n\t    t['yekorean'] = 0x3156;\n\t    t['yen'] = 0x00A5;\n\t    t['yenmonospace'] = 0xFFE5;\n\t    t['yeokorean'] = 0x3155;\n\t    t['yeorinhieuhkorean'] = 0x3186;\n\t    t['yerahbenyomohebrew'] = 0x05AA;\n\t    t['yerahbenyomolefthebrew'] = 0x05AA;\n\t    t['yericyrillic'] = 0x044B;\n\t    t['yerudieresiscyrillic'] = 0x04F9;\n\t    t['yesieungkorean'] = 0x3181;\n\t    t['yesieungpansioskorean'] = 0x3183;\n\t    t['yesieungsioskorean'] = 0x3182;\n\t    t['yetivhebrew'] = 0x059A;\n\t    t['ygrave'] = 0x1EF3;\n\t    t['yhook'] = 0x01B4;\n\t    t['yhookabove'] = 0x1EF7;\n\t    t['yiarmenian'] = 0x0575;\n\t    t['yicyrillic'] = 0x0457;\n\t    t['yikorean'] = 0x3162;\n\t    t['yinyang'] = 0x262F;\n\t    t['yiwnarmenian'] = 0x0582;\n\t    t['ymonospace'] = 0xFF59;\n\t    t['yod'] = 0x05D9;\n\t    t['yoddagesh'] = 0xFB39;\n\t    t['yoddageshhebrew'] = 0xFB39;\n\t    t['yodhebrew'] = 0x05D9;\n\t    t['yodyodhebrew'] = 0x05F2;\n\t    t['yodyodpatahhebrew'] = 0xFB1F;\n\t    t['yohiragana'] = 0x3088;\n\t    t['yoikorean'] = 0x3189;\n\t    t['yokatakana'] = 0x30E8;\n\t    t['yokatakanahalfwidth'] = 0xFF96;\n\t    t['yokorean'] = 0x315B;\n\t    t['yosmallhiragana'] = 0x3087;\n\t    t['yosmallkatakana'] = 0x30E7;\n\t    t['yosmallkatakanahalfwidth'] = 0xFF6E;\n\t    t['yotgreek'] = 0x03F3;\n\t    t['yoyaekorean'] = 0x3188;\n\t    t['yoyakorean'] = 0x3187;\n\t    t['yoyakthai'] = 0x0E22;\n\t    t['yoyingthai'] = 0x0E0D;\n\t    t['yparen'] = 0x24B4;\n\t    t['ypogegrammeni'] = 0x037A;\n\t    t['ypogegrammenigreekcmb'] = 0x0345;\n\t    t['yr'] = 0x01A6;\n\t    t['yring'] = 0x1E99;\n\t    t['ysuperior'] = 0x02B8;\n\t    t['ytilde'] = 0x1EF9;\n\t    t['yturned'] = 0x028E;\n\t    t['yuhiragana'] = 0x3086;\n\t    t['yuikorean'] = 0x318C;\n\t    t['yukatakana'] = 0x30E6;\n\t    t['yukatakanahalfwidth'] = 0xFF95;\n\t    t['yukorean'] = 0x3160;\n\t    t['yusbigcyrillic'] = 0x046B;\n\t    t['yusbigiotifiedcyrillic'] = 0x046D;\n\t    t['yuslittlecyrillic'] = 0x0467;\n\t    t['yuslittleiotifiedcyrillic'] = 0x0469;\n\t    t['yusmallhiragana'] = 0x3085;\n\t    t['yusmallkatakana'] = 0x30E5;\n\t    t['yusmallkatakanahalfwidth'] = 0xFF6D;\n\t    t['yuyekorean'] = 0x318B;\n\t    t['yuyeokorean'] = 0x318A;\n\t    t['yyabengali'] = 0x09DF;\n\t    t['yyadeva'] = 0x095F;\n\t    t['z'] = 0x007A;\n\t    t['zaarmenian'] = 0x0566;\n\t    t['zacute'] = 0x017A;\n\t    t['zadeva'] = 0x095B;\n\t    t['zagurmukhi'] = 0x0A5B;\n\t    t['zaharabic'] = 0x0638;\n\t    t['zahfinalarabic'] = 0xFEC6;\n\t    t['zahinitialarabic'] = 0xFEC7;\n\t    t['zahiragana'] = 0x3056;\n\t    t['zahmedialarabic'] = 0xFEC8;\n\t    t['zainarabic'] = 0x0632;\n\t    t['zainfinalarabic'] = 0xFEB0;\n\t    t['zakatakana'] = 0x30B6;\n\t    t['zaqefgadolhebrew'] = 0x0595;\n\t    t['zaqefqatanhebrew'] = 0x0594;\n\t    t['zarqahebrew'] = 0x0598;\n\t    t['zayin'] = 0x05D6;\n\t    t['zayindagesh'] = 0xFB36;\n\t    t['zayindageshhebrew'] = 0xFB36;\n\t    t['zayinhebrew'] = 0x05D6;\n\t    t['zbopomofo'] = 0x3117;\n\t    t['zcaron'] = 0x017E;\n\t    t['zcircle'] = 0x24E9;\n\t    t['zcircumflex'] = 0x1E91;\n\t    t['zcurl'] = 0x0291;\n\t    t['zdot'] = 0x017C;\n\t    t['zdotaccent'] = 0x017C;\n\t    t['zdotbelow'] = 0x1E93;\n\t    t['zecyrillic'] = 0x0437;\n\t    t['zedescendercyrillic'] = 0x0499;\n\t    t['zedieresiscyrillic'] = 0x04DF;\n\t    t['zehiragana'] = 0x305C;\n\t    t['zekatakana'] = 0x30BC;\n\t    t['zero'] = 0x0030;\n\t    t['zeroarabic'] = 0x0660;\n\t    t['zerobengali'] = 0x09E6;\n\t    t['zerodeva'] = 0x0966;\n\t    t['zerogujarati'] = 0x0AE6;\n\t    t['zerogurmukhi'] = 0x0A66;\n\t    t['zerohackarabic'] = 0x0660;\n\t    t['zeroinferior'] = 0x2080;\n\t    t['zeromonospace'] = 0xFF10;\n\t    t['zerooldstyle'] = 0xF730;\n\t    t['zeropersian'] = 0x06F0;\n\t    t['zerosuperior'] = 0x2070;\n\t    t['zerothai'] = 0x0E50;\n\t    t['zerowidthjoiner'] = 0xFEFF;\n\t    t['zerowidthnonjoiner'] = 0x200C;\n\t    t['zerowidthspace'] = 0x200B;\n\t    t['zeta'] = 0x03B6;\n\t    t['zhbopomofo'] = 0x3113;\n\t    t['zhearmenian'] = 0x056A;\n\t    t['zhebrevecyrillic'] = 0x04C2;\n\t    t['zhecyrillic'] = 0x0436;\n\t    t['zhedescendercyrillic'] = 0x0497;\n\t    t['zhedieresiscyrillic'] = 0x04DD;\n\t    t['zihiragana'] = 0x3058;\n\t    t['zikatakana'] = 0x30B8;\n\t    t['zinorhebrew'] = 0x05AE;\n\t    t['zlinebelow'] = 0x1E95;\n\t    t['zmonospace'] = 0xFF5A;\n\t    t['zohiragana'] = 0x305E;\n\t    t['zokatakana'] = 0x30BE;\n\t    t['zparen'] = 0x24B5;\n\t    t['zretroflexhook'] = 0x0290;\n\t    t['zstroke'] = 0x01B6;\n\t    t['zuhiragana'] = 0x305A;\n\t    t['zukatakana'] = 0x30BA;\n\t    t['.notdef'] = 0x0000;\n\t    t['angbracketleftbig'] = 0x2329;\n\t    t['angbracketleftBig'] = 0x2329;\n\t    t['angbracketleftbigg'] = 0x2329;\n\t    t['angbracketleftBigg'] = 0x2329;\n\t    t['angbracketrightBig'] = 0x232A;\n\t    t['angbracketrightbig'] = 0x232A;\n\t    t['angbracketrightBigg'] = 0x232A;\n\t    t['angbracketrightbigg'] = 0x232A;\n\t    t['arrowhookleft'] = 0x21AA;\n\t    t['arrowhookright'] = 0x21A9;\n\t    t['arrowlefttophalf'] = 0x21BC;\n\t    t['arrowleftbothalf'] = 0x21BD;\n\t    t['arrownortheast'] = 0x2197;\n\t    t['arrownorthwest'] = 0x2196;\n\t    t['arrowrighttophalf'] = 0x21C0;\n\t    t['arrowrightbothalf'] = 0x21C1;\n\t    t['arrowsoutheast'] = 0x2198;\n\t    t['arrowsouthwest'] = 0x2199;\n\t    t['backslashbig'] = 0x2216;\n\t    t['backslashBig'] = 0x2216;\n\t    t['backslashBigg'] = 0x2216;\n\t    t['backslashbigg'] = 0x2216;\n\t    t['bardbl'] = 0x2016;\n\t    t['bracehtipdownleft'] = 0xFE37;\n\t    t['bracehtipdownright'] = 0xFE37;\n\t    t['bracehtipupleft'] = 0xFE38;\n\t    t['bracehtipupright'] = 0xFE38;\n\t    t['braceleftBig'] = 0x007B;\n\t    t['braceleftbig'] = 0x007B;\n\t    t['braceleftbigg'] = 0x007B;\n\t    t['braceleftBigg'] = 0x007B;\n\t    t['bracerightBig'] = 0x007D;\n\t    t['bracerightbig'] = 0x007D;\n\t    t['bracerightbigg'] = 0x007D;\n\t    t['bracerightBigg'] = 0x007D;\n\t    t['bracketleftbig'] = 0x005B;\n\t    t['bracketleftBig'] = 0x005B;\n\t    t['bracketleftbigg'] = 0x005B;\n\t    t['bracketleftBigg'] = 0x005B;\n\t    t['bracketrightBig'] = 0x005D;\n\t    t['bracketrightbig'] = 0x005D;\n\t    t['bracketrightbigg'] = 0x005D;\n\t    t['bracketrightBigg'] = 0x005D;\n\t    t['ceilingleftbig'] = 0x2308;\n\t    t['ceilingleftBig'] = 0x2308;\n\t    t['ceilingleftBigg'] = 0x2308;\n\t    t['ceilingleftbigg'] = 0x2308;\n\t    t['ceilingrightbig'] = 0x2309;\n\t    t['ceilingrightBig'] = 0x2309;\n\t    t['ceilingrightbigg'] = 0x2309;\n\t    t['ceilingrightBigg'] = 0x2309;\n\t    t['circledotdisplay'] = 0x2299;\n\t    t['circledottext'] = 0x2299;\n\t    t['circlemultiplydisplay'] = 0x2297;\n\t    t['circlemultiplytext'] = 0x2297;\n\t    t['circleplusdisplay'] = 0x2295;\n\t    t['circleplustext'] = 0x2295;\n\t    t['contintegraldisplay'] = 0x222E;\n\t    t['contintegraltext'] = 0x222E;\n\t    t['coproductdisplay'] = 0x2210;\n\t    t['coproducttext'] = 0x2210;\n\t    t['floorleftBig'] = 0x230A;\n\t    t['floorleftbig'] = 0x230A;\n\t    t['floorleftbigg'] = 0x230A;\n\t    t['floorleftBigg'] = 0x230A;\n\t    t['floorrightbig'] = 0x230B;\n\t    t['floorrightBig'] = 0x230B;\n\t    t['floorrightBigg'] = 0x230B;\n\t    t['floorrightbigg'] = 0x230B;\n\t    t['hatwide'] = 0x0302;\n\t    t['hatwider'] = 0x0302;\n\t    t['hatwidest'] = 0x0302;\n\t    t['intercal'] = 0x1D40;\n\t    t['integraldisplay'] = 0x222B;\n\t    t['integraltext'] = 0x222B;\n\t    t['intersectiondisplay'] = 0x22C2;\n\t    t['intersectiontext'] = 0x22C2;\n\t    t['logicalanddisplay'] = 0x2227;\n\t    t['logicalandtext'] = 0x2227;\n\t    t['logicalordisplay'] = 0x2228;\n\t    t['logicalortext'] = 0x2228;\n\t    t['parenleftBig'] = 0x0028;\n\t    t['parenleftbig'] = 0x0028;\n\t    t['parenleftBigg'] = 0x0028;\n\t    t['parenleftbigg'] = 0x0028;\n\t    t['parenrightBig'] = 0x0029;\n\t    t['parenrightbig'] = 0x0029;\n\t    t['parenrightBigg'] = 0x0029;\n\t    t['parenrightbigg'] = 0x0029;\n\t    t['prime'] = 0x2032;\n\t    t['productdisplay'] = 0x220F;\n\t    t['producttext'] = 0x220F;\n\t    t['radicalbig'] = 0x221A;\n\t    t['radicalBig'] = 0x221A;\n\t    t['radicalBigg'] = 0x221A;\n\t    t['radicalbigg'] = 0x221A;\n\t    t['radicalbt'] = 0x221A;\n\t    t['radicaltp'] = 0x221A;\n\t    t['radicalvertex'] = 0x221A;\n\t    t['slashbig'] = 0x002F;\n\t    t['slashBig'] = 0x002F;\n\t    t['slashBigg'] = 0x002F;\n\t    t['slashbigg'] = 0x002F;\n\t    t['summationdisplay'] = 0x2211;\n\t    t['summationtext'] = 0x2211;\n\t    t['tildewide'] = 0x02DC;\n\t    t['tildewider'] = 0x02DC;\n\t    t['tildewidest'] = 0x02DC;\n\t    t['uniondisplay'] = 0x22C3;\n\t    t['unionmultidisplay'] = 0x228E;\n\t    t['unionmultitext'] = 0x228E;\n\t    t['unionsqdisplay'] = 0x2294;\n\t    t['unionsqtext'] = 0x2294;\n\t    t['uniontext'] = 0x22C3;\n\t    t['vextenddouble'] = 0x2225;\n\t    t['vextendsingle'] = 0x2223;\n\t   });\n\t   var getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n\t    t['space'] = 0x0020;\n\t    t['a1'] = 0x2701;\n\t    t['a2'] = 0x2702;\n\t    t['a202'] = 0x2703;\n\t    t['a3'] = 0x2704;\n\t    t['a4'] = 0x260E;\n\t    t['a5'] = 0x2706;\n\t    t['a119'] = 0x2707;\n\t    t['a118'] = 0x2708;\n\t    t['a117'] = 0x2709;\n\t    t['a11'] = 0x261B;\n\t    t['a12'] = 0x261E;\n\t    t['a13'] = 0x270C;\n\t    t['a14'] = 0x270D;\n\t    t['a15'] = 0x270E;\n\t    t['a16'] = 0x270F;\n\t    t['a105'] = 0x2710;\n\t    t['a17'] = 0x2711;\n\t    t['a18'] = 0x2712;\n\t    t['a19'] = 0x2713;\n\t    t['a20'] = 0x2714;\n\t    t['a21'] = 0x2715;\n\t    t['a22'] = 0x2716;\n\t    t['a23'] = 0x2717;\n\t    t['a24'] = 0x2718;\n\t    t['a25'] = 0x2719;\n\t    t['a26'] = 0x271A;\n\t    t['a27'] = 0x271B;\n\t    t['a28'] = 0x271C;\n\t    t['a6'] = 0x271D;\n\t    t['a7'] = 0x271E;\n\t    t['a8'] = 0x271F;\n\t    t['a9'] = 0x2720;\n\t    t['a10'] = 0x2721;\n\t    t['a29'] = 0x2722;\n\t    t['a30'] = 0x2723;\n\t    t['a31'] = 0x2724;\n\t    t['a32'] = 0x2725;\n\t    t['a33'] = 0x2726;\n\t    t['a34'] = 0x2727;\n\t    t['a35'] = 0x2605;\n\t    t['a36'] = 0x2729;\n\t    t['a37'] = 0x272A;\n\t    t['a38'] = 0x272B;\n\t    t['a39'] = 0x272C;\n\t    t['a40'] = 0x272D;\n\t    t['a41'] = 0x272E;\n\t    t['a42'] = 0x272F;\n\t    t['a43'] = 0x2730;\n\t    t['a44'] = 0x2731;\n\t    t['a45'] = 0x2732;\n\t    t['a46'] = 0x2733;\n\t    t['a47'] = 0x2734;\n\t    t['a48'] = 0x2735;\n\t    t['a49'] = 0x2736;\n\t    t['a50'] = 0x2737;\n\t    t['a51'] = 0x2738;\n\t    t['a52'] = 0x2739;\n\t    t['a53'] = 0x273A;\n\t    t['a54'] = 0x273B;\n\t    t['a55'] = 0x273C;\n\t    t['a56'] = 0x273D;\n\t    t['a57'] = 0x273E;\n\t    t['a58'] = 0x273F;\n\t    t['a59'] = 0x2740;\n\t    t['a60'] = 0x2741;\n\t    t['a61'] = 0x2742;\n\t    t['a62'] = 0x2743;\n\t    t['a63'] = 0x2744;\n\t    t['a64'] = 0x2745;\n\t    t['a65'] = 0x2746;\n\t    t['a66'] = 0x2747;\n\t    t['a67'] = 0x2748;\n\t    t['a68'] = 0x2749;\n\t    t['a69'] = 0x274A;\n\t    t['a70'] = 0x274B;\n\t    t['a71'] = 0x25CF;\n\t    t['a72'] = 0x274D;\n\t    t['a73'] = 0x25A0;\n\t    t['a74'] = 0x274F;\n\t    t['a203'] = 0x2750;\n\t    t['a75'] = 0x2751;\n\t    t['a204'] = 0x2752;\n\t    t['a76'] = 0x25B2;\n\t    t['a77'] = 0x25BC;\n\t    t['a78'] = 0x25C6;\n\t    t['a79'] = 0x2756;\n\t    t['a81'] = 0x25D7;\n\t    t['a82'] = 0x2758;\n\t    t['a83'] = 0x2759;\n\t    t['a84'] = 0x275A;\n\t    t['a97'] = 0x275B;\n\t    t['a98'] = 0x275C;\n\t    t['a99'] = 0x275D;\n\t    t['a100'] = 0x275E;\n\t    t['a101'] = 0x2761;\n\t    t['a102'] = 0x2762;\n\t    t['a103'] = 0x2763;\n\t    t['a104'] = 0x2764;\n\t    t['a106'] = 0x2765;\n\t    t['a107'] = 0x2766;\n\t    t['a108'] = 0x2767;\n\t    t['a112'] = 0x2663;\n\t    t['a111'] = 0x2666;\n\t    t['a110'] = 0x2665;\n\t    t['a109'] = 0x2660;\n\t    t['a120'] = 0x2460;\n\t    t['a121'] = 0x2461;\n\t    t['a122'] = 0x2462;\n\t    t['a123'] = 0x2463;\n\t    t['a124'] = 0x2464;\n\t    t['a125'] = 0x2465;\n\t    t['a126'] = 0x2466;\n\t    t['a127'] = 0x2467;\n\t    t['a128'] = 0x2468;\n\t    t['a129'] = 0x2469;\n\t    t['a130'] = 0x2776;\n\t    t['a131'] = 0x2777;\n\t    t['a132'] = 0x2778;\n\t    t['a133'] = 0x2779;\n\t    t['a134'] = 0x277A;\n\t    t['a135'] = 0x277B;\n\t    t['a136'] = 0x277C;\n\t    t['a137'] = 0x277D;\n\t    t['a138'] = 0x277E;\n\t    t['a139'] = 0x277F;\n\t    t['a140'] = 0x2780;\n\t    t['a141'] = 0x2781;\n\t    t['a142'] = 0x2782;\n\t    t['a143'] = 0x2783;\n\t    t['a144'] = 0x2784;\n\t    t['a145'] = 0x2785;\n\t    t['a146'] = 0x2786;\n\t    t['a147'] = 0x2787;\n\t    t['a148'] = 0x2788;\n\t    t['a149'] = 0x2789;\n\t    t['a150'] = 0x278A;\n\t    t['a151'] = 0x278B;\n\t    t['a152'] = 0x278C;\n\t    t['a153'] = 0x278D;\n\t    t['a154'] = 0x278E;\n\t    t['a155'] = 0x278F;\n\t    t['a156'] = 0x2790;\n\t    t['a157'] = 0x2791;\n\t    t['a158'] = 0x2792;\n\t    t['a159'] = 0x2793;\n\t    t['a160'] = 0x2794;\n\t    t['a161'] = 0x2192;\n\t    t['a163'] = 0x2194;\n\t    t['a164'] = 0x2195;\n\t    t['a196'] = 0x2798;\n\t    t['a165'] = 0x2799;\n\t    t['a192'] = 0x279A;\n\t    t['a166'] = 0x279B;\n\t    t['a167'] = 0x279C;\n\t    t['a168'] = 0x279D;\n\t    t['a169'] = 0x279E;\n\t    t['a170'] = 0x279F;\n\t    t['a171'] = 0x27A0;\n\t    t['a172'] = 0x27A1;\n\t    t['a173'] = 0x27A2;\n\t    t['a162'] = 0x27A3;\n\t    t['a174'] = 0x27A4;\n\t    t['a175'] = 0x27A5;\n\t    t['a176'] = 0x27A6;\n\t    t['a177'] = 0x27A7;\n\t    t['a178'] = 0x27A8;\n\t    t['a179'] = 0x27A9;\n\t    t['a193'] = 0x27AA;\n\t    t['a180'] = 0x27AB;\n\t    t['a199'] = 0x27AC;\n\t    t['a181'] = 0x27AD;\n\t    t['a200'] = 0x27AE;\n\t    t['a182'] = 0x27AF;\n\t    t['a201'] = 0x27B1;\n\t    t['a183'] = 0x27B2;\n\t    t['a184'] = 0x27B3;\n\t    t['a197'] = 0x27B4;\n\t    t['a185'] = 0x27B5;\n\t    t['a194'] = 0x27B6;\n\t    t['a198'] = 0x27B7;\n\t    t['a186'] = 0x27B8;\n\t    t['a195'] = 0x27B9;\n\t    t['a187'] = 0x27BA;\n\t    t['a188'] = 0x27BB;\n\t    t['a189'] = 0x27BC;\n\t    t['a190'] = 0x27BD;\n\t    t['a191'] = 0x27BE;\n\t    t['a89'] = 0x2768;\n\t    t['a90'] = 0x2769;\n\t    t['a93'] = 0x276A;\n\t    t['a94'] = 0x276B;\n\t    t['a91'] = 0x276C;\n\t    t['a92'] = 0x276D;\n\t    t['a205'] = 0x276E;\n\t    t['a85'] = 0x276F;\n\t    t['a206'] = 0x2770;\n\t    t['a86'] = 0x2771;\n\t    t['a87'] = 0x2772;\n\t    t['a88'] = 0x2773;\n\t    t['a95'] = 0x2774;\n\t    t['a96'] = 0x2775;\n\t    t['.notdef'] = 0x0000;\n\t   });\n\t   exports.getGlyphsUnicode = getGlyphsUnicode;\n\t   exports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCoreJbig2 = {}, root.pdfjsSharedUtil, root.pdfjsCoreArithmeticDecoder);\n\t  }(this, function (exports, sharedUtil, coreArithmeticDecoder) {\n\t   var error = sharedUtil.error;\n\t   var log2 = sharedUtil.log2;\n\t   var readInt8 = sharedUtil.readInt8;\n\t   var readUint16 = sharedUtil.readUint16;\n\t   var readUint32 = sharedUtil.readUint32;\n\t   var shadow = sharedUtil.shadow;\n\t   var ArithmeticDecoder = coreArithmeticDecoder.ArithmeticDecoder;\n\t   var Jbig2Image = function Jbig2ImageClosure() {\n\t    function ContextCache() {\n\t    }\n\t    ContextCache.prototype = {\n\t     getContexts: function (id) {\n\t      if (id in this) {\n\t       return this[id];\n\t      }\n\t      return this[id] = new Int8Array(1 << 16);\n\t     }\n\t    };\n\t    function DecodingContext(data, start, end) {\n\t     this.data = data;\n\t     this.start = start;\n\t     this.end = end;\n\t    }\n\t    DecodingContext.prototype = {\n\t     get decoder() {\n\t      var decoder = new ArithmeticDecoder(this.data, this.start, this.end);\n\t      return shadow(this, 'decoder', decoder);\n\t     },\n\t     get contextCache() {\n\t      var cache = new ContextCache();\n\t      return shadow(this, 'contextCache', cache);\n\t     }\n\t    };\n\t    function decodeInteger(contextCache, procedure, decoder) {\n\t     var contexts = contextCache.getContexts(procedure);\n\t     var prev = 1;\n\t     function readBits(length) {\n\t      var v = 0;\n\t      for (var i = 0; i < length; i++) {\n\t       var bit = decoder.readBit(contexts, prev);\n\t       prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n\t       v = v << 1 | bit;\n\t      }\n\t      return v >>> 0;\n\t     }\n\t     var sign = readBits(1);\n\t     var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n\t     return sign === 0 ? value : value > 0 ? -value : null;\n\t    }\n\t    function decodeIAID(contextCache, decoder, codeLength) {\n\t     var contexts = contextCache.getContexts('IAID');\n\t     var prev = 1;\n\t     for (var i = 0; i < codeLength; i++) {\n\t      var bit = decoder.readBit(contexts, prev);\n\t      prev = prev << 1 | bit;\n\t     }\n\t     if (codeLength < 31) {\n\t      return prev & (1 << codeLength) - 1;\n\t     }\n\t     return prev & 0x7FFFFFFF;\n\t    }\n\t    var SegmentTypes = [\n\t     'SymbolDictionary',\n\t     null,\n\t     null,\n\t     null,\n\t     'IntermediateTextRegion',\n\t     null,\n\t     'ImmediateTextRegion',\n\t     'ImmediateLosslessTextRegion',\n\t     null,\n\t     null,\n\t     null,\n\t     null,\n\t     null,\n\t     null,\n\t     null,\n\t     null,\n\t     'patternDictionary',\n\t     null,\n\t     null,\n\t     null,\n\t     'IntermediateHalftoneRegion',\n\t     null,\n\t     'ImmediateHalftoneRegion',\n\t     'ImmediateLosslessHalftoneRegion',\n\t     null,\n\t     null,\n\t     null,\n\t     null,\n\t     null,\n\t     null,\n\t     null,\n\t     null,\n\t     null,\n\t     null,\n\t     null,\n\t     null,\n\t     'IntermediateGenericRegion',\n\t     null,\n\t     'ImmediateGenericRegion',\n\t     'ImmediateLosslessGenericRegion',\n\t     'IntermediateGenericRefinementRegion',\n\t     null,\n\t     'ImmediateGenericRefinementRegion',\n\t     'ImmediateLosslessGenericRefinementRegion',\n\t     null,\n\t     null,\n\t     null,\n\t     null,\n\t     'PageInformation',\n\t     'EndOfPage',\n\t     'EndOfStripe',\n\t     'EndOfFile',\n\t     'Profiles',\n\t     'Tables',\n\t     null,\n\t     null,\n\t     null,\n\t     null,\n\t     null,\n\t     null,\n\t     null,\n\t     null,\n\t     'Extension'\n\t    ];\n\t    var CodingTemplates = [\n\t     [\n\t      {\n\t       x: -1,\n\t       y: -2\n\t      },\n\t      {\n\t       x: 0,\n\t       y: -2\n\t      },\n\t      {\n\t       x: 1,\n\t       y: -2\n\t      },\n\t      {\n\t       x: -2,\n\t       y: -1\n\t      },\n\t      {\n\t       x: -1,\n\t       y: -1\n\t      },\n\t      {\n\t       x: 0,\n\t       y: -1\n\t      },\n\t      {\n\t       x: 1,\n\t       y: -1\n\t      },\n\t      {\n\t       x: 2,\n\t       y: -1\n\t      },\n\t      {\n\t       x: -4,\n\t       y: 0\n\t      },\n\t      {\n\t       x: -3,\n\t       y: 0\n\t      },\n\t      {\n\t       x: -2,\n\t       y: 0\n\t      },\n\t      {\n\t       x: -1,\n\t       y: 0\n\t      }\n\t     ],\n\t     [\n\t      {\n\t       x: -1,\n\t       y: -2\n\t      },\n\t      {\n\t       x: 0,\n\t       y: -2\n\t      },\n\t      {\n\t       x: 1,\n\t       y: -2\n\t      },\n\t      {\n\t       x: 2,\n\t       y: -2\n\t      },\n\t      {\n\t       x: -2,\n\t       y: -1\n\t      },\n\t      {\n\t       x: -1,\n\t       y: -1\n\t      },\n\t      {\n\t       x: 0,\n\t       y: -1\n\t      },\n\t      {\n\t       x: 1,\n\t       y: -1\n\t      },\n\t      {\n\t       x: 2,\n\t       y: -1\n\t      },\n\t      {\n\t       x: -3,\n\t       y: 0\n\t      },\n\t      {\n\t       x: -2,\n\t       y: 0\n\t      },\n\t      {\n\t       x: -1,\n\t       y: 0\n\t      }\n\t     ],\n\t     [\n\t      {\n\t       x: -1,\n\t       y: -2\n\t      },\n\t      {\n\t       x: 0,\n\t       y: -2\n\t      },\n\t      {\n\t       x: 1,\n\t       y: -2\n\t      },\n\t      {\n\t       x: -2,\n\t       y: -1\n\t      },\n\t      {\n\t       x: -1,\n\t       y: -1\n\t      },\n\t      {\n\t       x: 0,\n\t       y: -1\n\t      },\n\t      {\n\t       x: 1,\n\t       y: -1\n\t      },\n\t      {\n\t       x: -2,\n\t       y: 0\n\t      },\n\t      {\n\t       x: -1,\n\t       y: 0\n\t      }\n\t     ],\n\t     [\n\t      {\n\t       x: -3,\n\t       y: -1\n\t      },\n\t      {\n\t       x: -2,\n\t       y: -1\n\t      },\n\t      {\n\t       x: -1,\n\t       y: -1\n\t      },\n\t      {\n\t       x: 0,\n\t       y: -1\n\t      },\n\t      {\n\t       x: 1,\n\t       y: -1\n\t      },\n\t      {\n\t       x: -4,\n\t       y: 0\n\t      },\n\t      {\n\t       x: -3,\n\t       y: 0\n\t      },\n\t      {\n\t       x: -2,\n\t       y: 0\n\t      },\n\t      {\n\t       x: -1,\n\t       y: 0\n\t      }\n\t     ]\n\t    ];\n\t    var RefinementTemplates = [\n\t     {\n\t      coding: [\n\t       {\n\t        x: 0,\n\t        y: -1\n\t       },\n\t       {\n\t        x: 1,\n\t        y: -1\n\t       },\n\t       {\n\t        x: -1,\n\t        y: 0\n\t       }\n\t      ],\n\t      reference: [\n\t       {\n\t        x: 0,\n\t        y: -1\n\t       },\n\t       {\n\t        x: 1,\n\t        y: -1\n\t       },\n\t       {\n\t        x: -1,\n\t        y: 0\n\t       },\n\t       {\n\t        x: 0,\n\t        y: 0\n\t       },\n\t       {\n\t        x: 1,\n\t        y: 0\n\t       },\n\t       {\n\t        x: -1,\n\t        y: 1\n\t       },\n\t       {\n\t        x: 0,\n\t        y: 1\n\t       },\n\t       {\n\t        x: 1,\n\t        y: 1\n\t       }\n\t      ]\n\t     },\n\t     {\n\t      coding: [\n\t       {\n\t        x: -1,\n\t        y: -1\n\t       },\n\t       {\n\t        x: 0,\n\t        y: -1\n\t       },\n\t       {\n\t        x: 1,\n\t        y: -1\n\t       },\n\t       {\n\t        x: -1,\n\t        y: 0\n\t       }\n\t      ],\n\t      reference: [\n\t       {\n\t        x: 0,\n\t        y: -1\n\t       },\n\t       {\n\t        x: -1,\n\t        y: 0\n\t       },\n\t       {\n\t        x: 0,\n\t        y: 0\n\t       },\n\t       {\n\t        x: 1,\n\t        y: 0\n\t       },\n\t       {\n\t        x: 0,\n\t        y: 1\n\t       },\n\t       {\n\t        x: 1,\n\t        y: 1\n\t       }\n\t      ]\n\t     }\n\t    ];\n\t    var ReusedContexts = [\n\t     0x9B25,\n\t     0x0795,\n\t     0x00E5,\n\t     0x0195\n\t    ];\n\t    var RefinementReusedContexts = [\n\t     0x0020,\n\t     0x0008\n\t    ];\n\t    function decodeBitmapTemplate0(width, height, decodingContext) {\n\t     var decoder = decodingContext.decoder;\n\t     var contexts = decodingContext.contextCache.getContexts('GB');\n\t     var contextLabel, i, j, pixel, row, row1, row2, bitmap = [];\n\t     var OLD_PIXEL_MASK = 0x7BF7;\n\t     for (i = 0; i < height; i++) {\n\t      row = bitmap[i] = new Uint8Array(width);\n\t      row1 = i < 1 ? row : bitmap[i - 1];\n\t      row2 = i < 2 ? row : bitmap[i - 2];\n\t      contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n\t      for (j = 0; j < width; j++) {\n\t       row[j] = pixel = decoder.readBit(contexts, contextLabel);\n\t       contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n\t      }\n\t     }\n\t     return bitmap;\n\t    }\n\t    function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n\t     if (mmr) {\n\t      error('JBIG2 error: MMR encoding is not supported');\n\t     }\n\t     if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n\t      return decodeBitmapTemplate0(width, height, decodingContext);\n\t     }\n\t     var useskip = !!skip;\n\t     var template = CodingTemplates[templateIndex].concat(at);\n\t     template.sort(function (a, b) {\n\t      return a.y - b.y || a.x - b.x;\n\t     });\n\t     var templateLength = template.length;\n\t     var templateX = new Int8Array(templateLength);\n\t     var templateY = new Int8Array(templateLength);\n\t     var changingTemplateEntries = [];\n\t     var reuseMask = 0, minX = 0, maxX = 0, minY = 0;\n\t     var c, k;\n\t     for (k = 0; k < templateLength; k++) {\n\t      templateX[k] = template[k].x;\n\t      templateY[k] = template[k].y;\n\t      minX = Math.min(minX, template[k].x);\n\t      maxX = Math.max(maxX, template[k].x);\n\t      minY = Math.min(minY, template[k].y);\n\t      if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n\t       reuseMask |= 1 << templateLength - 1 - k;\n\t      } else {\n\t       changingTemplateEntries.push(k);\n\t      }\n\t     }\n\t     var changingEntriesLength = changingTemplateEntries.length;\n\t     var changingTemplateX = new Int8Array(changingEntriesLength);\n\t     var changingTemplateY = new Int8Array(changingEntriesLength);\n\t     var changingTemplateBit = new Uint16Array(changingEntriesLength);\n\t     for (c = 0; c < changingEntriesLength; c++) {\n\t      k = changingTemplateEntries[c];\n\t      changingTemplateX[c] = template[k].x;\n\t      changingTemplateY[c] = template[k].y;\n\t      changingTemplateBit[c] = 1 << templateLength - 1 - k;\n\t     }\n\t     var sbb_left = -minX;\n\t     var sbb_top = -minY;\n\t     var sbb_right = width - maxX;\n\t     var pseudoPixelContext = ReusedContexts[templateIndex];\n\t     var row = new Uint8Array(width);\n\t     var bitmap = [];\n\t     var decoder = decodingContext.decoder;\n\t     var contexts = decodingContext.contextCache.getContexts('GB');\n\t     var ltp = 0, j, i0, j0, contextLabel = 0, bit, shift;\n\t     for (var i = 0; i < height; i++) {\n\t      if (prediction) {\n\t       var sltp = decoder.readBit(contexts, pseudoPixelContext);\n\t       ltp ^= sltp;\n\t       if (ltp) {\n\t        bitmap.push(row);\n\t        continue;\n\t       }\n\t      }\n\t      row = new Uint8Array(row);\n\t      bitmap.push(row);\n\t      for (j = 0; j < width; j++) {\n\t       if (useskip && skip[i][j]) {\n\t        row[j] = 0;\n\t        continue;\n\t       }\n\t       if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n\t        contextLabel = contextLabel << 1 & reuseMask;\n\t        for (k = 0; k < changingEntriesLength; k++) {\n\t         i0 = i + changingTemplateY[k];\n\t         j0 = j + changingTemplateX[k];\n\t         bit = bitmap[i0][j0];\n\t         if (bit) {\n\t          bit = changingTemplateBit[k];\n\t          contextLabel |= bit;\n\t         }\n\t        }\n\t       } else {\n\t        contextLabel = 0;\n\t        shift = templateLength - 1;\n\t        for (k = 0; k < templateLength; k++, shift--) {\n\t         j0 = j + templateX[k];\n\t         if (j0 >= 0 && j0 < width) {\n\t          i0 = i + templateY[k];\n\t          if (i0 >= 0) {\n\t           bit = bitmap[i0][j0];\n\t           if (bit) {\n\t            contextLabel |= bit << shift;\n\t           }\n\t          }\n\t         }\n\t        }\n\t       }\n\t       var pixel = decoder.readBit(contexts, contextLabel);\n\t       row[j] = pixel;\n\t      }\n\t     }\n\t     return bitmap;\n\t    }\n\t    function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n\t     var codingTemplate = RefinementTemplates[templateIndex].coding;\n\t     if (templateIndex === 0) {\n\t      codingTemplate = codingTemplate.concat([at[0]]);\n\t     }\n\t     var codingTemplateLength = codingTemplate.length;\n\t     var codingTemplateX = new Int32Array(codingTemplateLength);\n\t     var codingTemplateY = new Int32Array(codingTemplateLength);\n\t     var k;\n\t     for (k = 0; k < codingTemplateLength; k++) {\n\t      codingTemplateX[k] = codingTemplate[k].x;\n\t      codingTemplateY[k] = codingTemplate[k].y;\n\t     }\n\t     var referenceTemplate = RefinementTemplates[templateIndex].reference;\n\t     if (templateIndex === 0) {\n\t      referenceTemplate = referenceTemplate.concat([at[1]]);\n\t     }\n\t     var referenceTemplateLength = referenceTemplate.length;\n\t     var referenceTemplateX = new Int32Array(referenceTemplateLength);\n\t     var referenceTemplateY = new Int32Array(referenceTemplateLength);\n\t     for (k = 0; k < referenceTemplateLength; k++) {\n\t      referenceTemplateX[k] = referenceTemplate[k].x;\n\t      referenceTemplateY[k] = referenceTemplate[k].y;\n\t     }\n\t     var referenceWidth = referenceBitmap[0].length;\n\t     var referenceHeight = referenceBitmap.length;\n\t     var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n\t     var bitmap = [];\n\t     var decoder = decodingContext.decoder;\n\t     var contexts = decodingContext.contextCache.getContexts('GR');\n\t     var ltp = 0;\n\t     for (var i = 0; i < height; i++) {\n\t      if (prediction) {\n\t       var sltp = decoder.readBit(contexts, pseudoPixelContext);\n\t       ltp ^= sltp;\n\t       if (ltp) {\n\t        error('JBIG2 error: prediction is not supported');\n\t       }\n\t      }\n\t      var row = new Uint8Array(width);\n\t      bitmap.push(row);\n\t      for (var j = 0; j < width; j++) {\n\t       var i0, j0;\n\t       var contextLabel = 0;\n\t       for (k = 0; k < codingTemplateLength; k++) {\n\t        i0 = i + codingTemplateY[k];\n\t        j0 = j + codingTemplateX[k];\n\t        if (i0 < 0 || j0 < 0 || j0 >= width) {\n\t         contextLabel <<= 1;\n\t        } else\n\t         {\n\t          contextLabel = contextLabel << 1 | bitmap[i0][j0];\n\t         }\n\t       }\n\t       for (k = 0; k < referenceTemplateLength; k++) {\n\t        i0 = i + referenceTemplateY[k] + offsetY;\n\t        j0 = j + referenceTemplateX[k] + offsetX;\n\t        if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n\t         contextLabel <<= 1;\n\t        } else\n\t         {\n\t          contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n\t         }\n\t       }\n\t       var pixel = decoder.readBit(contexts, contextLabel);\n\t       row[j] = pixel;\n\t      }\n\t     }\n\t     return bitmap;\n\t    }\n\t    function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext) {\n\t     if (huffman) {\n\t      error('JBIG2 error: huffman is not supported');\n\t     }\n\t     var newSymbols = [];\n\t     var currentHeight = 0;\n\t     var symbolCodeLength = log2(symbols.length + numberOfNewSymbols);\n\t     var decoder = decodingContext.decoder;\n\t     var contextCache = decodingContext.contextCache;\n\t     while (newSymbols.length < numberOfNewSymbols) {\n\t      var deltaHeight = decodeInteger(contextCache, 'IADH', decoder);\n\t      currentHeight += deltaHeight;\n\t      var currentWidth = 0;\n\t      var totalWidth = 0;\n\t      while (true) {\n\t       var deltaWidth = decodeInteger(contextCache, 'IADW', decoder);\n\t       if (deltaWidth === null) {\n\t        break;\n\t       }\n\t       currentWidth += deltaWidth;\n\t       totalWidth += currentWidth;\n\t       var bitmap;\n\t       if (refinement) {\n\t        var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n\t        if (numberOfInstances > 1) {\n\t         bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext);\n\t        } else {\n\t         var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n\t         var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n\t         var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n\t         var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n\t         bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n\t        }\n\t       } else {\n\t        bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n\t       }\n\t       newSymbols.push(bitmap);\n\t      }\n\t     }\n\t     var exportedSymbols = [];\n\t     var flags = [], currentFlag = false;\n\t     var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n\t     while (flags.length < totalSymbolsLength) {\n\t      var runLength = decodeInteger(contextCache, 'IAEX', decoder);\n\t      while (runLength--) {\n\t       flags.push(currentFlag);\n\t      }\n\t      currentFlag = !currentFlag;\n\t     }\n\t     for (var i = 0, ii = symbols.length; i < ii; i++) {\n\t      if (flags[i]) {\n\t       exportedSymbols.push(symbols[i]);\n\t      }\n\t     }\n\t     for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n\t      if (flags[i]) {\n\t       exportedSymbols.push(newSymbols[j]);\n\t      }\n\t     }\n\t     return exportedSymbols;\n\t    }\n\t    function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext) {\n\t     if (huffman) {\n\t      error('JBIG2 error: huffman is not supported');\n\t     }\n\t     var bitmap = [];\n\t     var i, row;\n\t     for (i = 0; i < height; i++) {\n\t      row = new Uint8Array(width);\n\t      if (defaultPixelValue) {\n\t       for (var j = 0; j < width; j++) {\n\t        row[j] = defaultPixelValue;\n\t       }\n\t      }\n\t      bitmap.push(row);\n\t     }\n\t     var decoder = decodingContext.decoder;\n\t     var contextCache = decodingContext.contextCache;\n\t     var stripT = -decodeInteger(contextCache, 'IADT', decoder);\n\t     var firstS = 0;\n\t     i = 0;\n\t     while (i < numberOfSymbolInstances) {\n\t      var deltaT = decodeInteger(contextCache, 'IADT', decoder);\n\t      stripT += deltaT;\n\t      var deltaFirstS = decodeInteger(contextCache, 'IAFS', decoder);\n\t      firstS += deltaFirstS;\n\t      var currentS = firstS;\n\t      do {\n\t       var currentT = stripSize === 1 ? 0 : decodeInteger(contextCache, 'IAIT', decoder);\n\t       var t = stripSize * stripT + currentT;\n\t       var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n\t       var applyRefinement = refinement && decodeInteger(contextCache, 'IARI', decoder);\n\t       var symbolBitmap = inputSymbols[symbolId];\n\t       var symbolWidth = symbolBitmap[0].length;\n\t       var symbolHeight = symbolBitmap.length;\n\t       if (applyRefinement) {\n\t        var rdw = decodeInteger(contextCache, 'IARDW', decoder);\n\t        var rdh = decodeInteger(contextCache, 'IARDH', decoder);\n\t        var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n\t        var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n\t        symbolWidth += rdw;\n\t        symbolHeight += rdh;\n\t        symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n\t       }\n\t       var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight);\n\t       var offsetS = currentS - (referenceCorner & 2 ? symbolWidth : 0);\n\t       var s2, t2, symbolRow;\n\t       if (transposed) {\n\t        for (s2 = 0; s2 < symbolHeight; s2++) {\n\t         row = bitmap[offsetS + s2];\n\t         if (!row) {\n\t          continue;\n\t         }\n\t         symbolRow = symbolBitmap[s2];\n\t         var maxWidth = Math.min(width - offsetT, symbolWidth);\n\t         switch (combinationOperator) {\n\t         case 0:\n\t          for (t2 = 0; t2 < maxWidth; t2++) {\n\t           row[offsetT + t2] |= symbolRow[t2];\n\t          }\n\t          break;\n\t         case 2:\n\t          for (t2 = 0; t2 < maxWidth; t2++) {\n\t           row[offsetT + t2] ^= symbolRow[t2];\n\t          }\n\t          break;\n\t         default:\n\t          error('JBIG2 error: operator ' + combinationOperator + ' is not supported');\n\t         }\n\t        }\n\t        currentS += symbolHeight - 1;\n\t       } else {\n\t        for (t2 = 0; t2 < symbolHeight; t2++) {\n\t         row = bitmap[offsetT + t2];\n\t         if (!row) {\n\t          continue;\n\t         }\n\t         symbolRow = symbolBitmap[t2];\n\t         switch (combinationOperator) {\n\t         case 0:\n\t          for (s2 = 0; s2 < symbolWidth; s2++) {\n\t           row[offsetS + s2] |= symbolRow[s2];\n\t          }\n\t          break;\n\t         case 2:\n\t          for (s2 = 0; s2 < symbolWidth; s2++) {\n\t           row[offsetS + s2] ^= symbolRow[s2];\n\t          }\n\t          break;\n\t         default:\n\t          error('JBIG2 error: operator ' + combinationOperator + ' is not supported');\n\t         }\n\t        }\n\t        currentS += symbolWidth - 1;\n\t       }\n\t       i++;\n\t       var deltaS = decodeInteger(contextCache, 'IADS', decoder);\n\t       if (deltaS === null) {\n\t        break;\n\t       }\n\t       currentS += deltaS + dsOffset;\n\t      } while (true);\n\t     }\n\t     return bitmap;\n\t    }\n\t    function readSegmentHeader(data, start) {\n\t     var segmentHeader = {};\n\t     segmentHeader.number = readUint32(data, start);\n\t     var flags = data[start + 4];\n\t     var segmentType = flags & 0x3F;\n\t     if (!SegmentTypes[segmentType]) {\n\t      error('JBIG2 error: invalid segment type: ' + segmentType);\n\t     }\n\t     segmentHeader.type = segmentType;\n\t     segmentHeader.typeName = SegmentTypes[segmentType];\n\t     segmentHeader.deferredNonRetain = !!(flags & 0x80);\n\t     var pageAssociationFieldSize = !!(flags & 0x40);\n\t     var referredFlags = data[start + 5];\n\t     var referredToCount = referredFlags >> 5 & 7;\n\t     var retainBits = [referredFlags & 31];\n\t     var position = start + 6;\n\t     if (referredFlags === 7) {\n\t      referredToCount = readUint32(data, position - 1) & 0x1FFFFFFF;\n\t      position += 3;\n\t      var bytes = referredToCount + 7 >> 3;\n\t      retainBits[0] = data[position++];\n\t      while (--bytes > 0) {\n\t       retainBits.push(data[position++]);\n\t      }\n\t     } else if (referredFlags === 5 || referredFlags === 6) {\n\t      error('JBIG2 error: invalid referred-to flags');\n\t     }\n\t     segmentHeader.retainBits = retainBits;\n\t     var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n\t     var referredTo = [];\n\t     var i, ii;\n\t     for (i = 0; i < referredToCount; i++) {\n\t      var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? readUint16(data, position) : readUint32(data, position);\n\t      referredTo.push(number);\n\t      position += referredToSegmentNumberSize;\n\t     }\n\t     segmentHeader.referredTo = referredTo;\n\t     if (!pageAssociationFieldSize) {\n\t      segmentHeader.pageAssociation = data[position++];\n\t     } else {\n\t      segmentHeader.pageAssociation = readUint32(data, position);\n\t      position += 4;\n\t     }\n\t     segmentHeader.length = readUint32(data, position);\n\t     position += 4;\n\t     if (segmentHeader.length === 0xFFFFFFFF) {\n\t      if (segmentType === 38) {\n\t       var genericRegionInfo = readRegionSegmentInformation(data, position);\n\t       var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n\t       var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n\t       var searchPatternLength = 6;\n\t       var searchPattern = new Uint8Array(searchPatternLength);\n\t       if (!genericRegionMmr) {\n\t        searchPattern[0] = 0xFF;\n\t        searchPattern[1] = 0xAC;\n\t       }\n\t       searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\n\t       searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\n\t       searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\n\t       searchPattern[5] = genericRegionInfo.height & 0xFF;\n\t       for (i = position, ii = data.length; i < ii; i++) {\n\t        var j = 0;\n\t        while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n\t         j++;\n\t        }\n\t        if (j === searchPatternLength) {\n\t         segmentHeader.length = i + searchPatternLength;\n\t         break;\n\t        }\n\t       }\n\t       if (segmentHeader.length === 0xFFFFFFFF) {\n\t        error('JBIG2 error: segment end was not found');\n\t       }\n\t      } else {\n\t       error('JBIG2 error: invalid unknown segment length');\n\t      }\n\t     }\n\t     segmentHeader.headerEnd = position;\n\t     return segmentHeader;\n\t    }\n\t    function readSegments(header, data, start, end) {\n\t     var segments = [];\n\t     var position = start;\n\t     while (position < end) {\n\t      var segmentHeader = readSegmentHeader(data, position);\n\t      position = segmentHeader.headerEnd;\n\t      var segment = {\n\t       header: segmentHeader,\n\t       data: data\n\t      };\n\t      if (!header.randomAccess) {\n\t       segment.start = position;\n\t       position += segmentHeader.length;\n\t       segment.end = position;\n\t      }\n\t      segments.push(segment);\n\t      if (segmentHeader.type === 51) {\n\t       break;\n\t      }\n\t     }\n\t     if (header.randomAccess) {\n\t      for (var i = 0, ii = segments.length; i < ii; i++) {\n\t       segments[i].start = position;\n\t       position += segments[i].header.length;\n\t       segments[i].end = position;\n\t      }\n\t     }\n\t     return segments;\n\t    }\n\t    function readRegionSegmentInformation(data, start) {\n\t     return {\n\t      width: readUint32(data, start),\n\t      height: readUint32(data, start + 4),\n\t      x: readUint32(data, start + 8),\n\t      y: readUint32(data, start + 12),\n\t      combinationOperator: data[start + 16] & 7\n\t     };\n\t    }\n\t    var RegionSegmentInformationFieldLength = 17;\n\t    function processSegment(segment, visitor) {\n\t     var header = segment.header;\n\t     var data = segment.data, position = segment.start, end = segment.end;\n\t     var args, at, i, atLength;\n\t     switch (header.type) {\n\t     case 0:\n\t      var dictionary = {};\n\t      var dictionaryFlags = readUint16(data, position);\n\t      dictionary.huffman = !!(dictionaryFlags & 1);\n\t      dictionary.refinement = !!(dictionaryFlags & 2);\n\t      dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n\t      dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n\t      dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n\t      dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n\t      dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n\t      dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n\t      dictionary.template = dictionaryFlags >> 10 & 3;\n\t      dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n\t      position += 2;\n\t      if (!dictionary.huffman) {\n\t       atLength = dictionary.template === 0 ? 4 : 1;\n\t       at = [];\n\t       for (i = 0; i < atLength; i++) {\n\t        at.push({\n\t         x: readInt8(data, position),\n\t         y: readInt8(data, position + 1)\n\t        });\n\t        position += 2;\n\t       }\n\t       dictionary.at = at;\n\t      }\n\t      if (dictionary.refinement && !dictionary.refinementTemplate) {\n\t       at = [];\n\t       for (i = 0; i < 2; i++) {\n\t        at.push({\n\t         x: readInt8(data, position),\n\t         y: readInt8(data, position + 1)\n\t        });\n\t        position += 2;\n\t       }\n\t       dictionary.refinementAt = at;\n\t      }\n\t      dictionary.numberOfExportedSymbols = readUint32(data, position);\n\t      position += 4;\n\t      dictionary.numberOfNewSymbols = readUint32(data, position);\n\t      position += 4;\n\t      args = [\n\t       dictionary,\n\t       header.number,\n\t       header.referredTo,\n\t       data,\n\t       position,\n\t       end\n\t      ];\n\t      break;\n\t     case 6:\n\t     case 7:\n\t      var textRegion = {};\n\t      textRegion.info = readRegionSegmentInformation(data, position);\n\t      position += RegionSegmentInformationFieldLength;\n\t      var textRegionSegmentFlags = readUint16(data, position);\n\t      position += 2;\n\t      textRegion.huffman = !!(textRegionSegmentFlags & 1);\n\t      textRegion.refinement = !!(textRegionSegmentFlags & 2);\n\t      textRegion.stripSize = 1 << (textRegionSegmentFlags >> 2 & 3);\n\t      textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n\t      textRegion.transposed = !!(textRegionSegmentFlags & 64);\n\t      textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n\t      textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n\t      textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n\t      textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n\t      if (textRegion.huffman) {\n\t       var textRegionHuffmanFlags = readUint16(data, position);\n\t       position += 2;\n\t       textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n\t       textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n\t       textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n\t       textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n\t       textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n\t       textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n\t       textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n\t       textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 14);\n\t      }\n\t      if (textRegion.refinement && !textRegion.refinementTemplate) {\n\t       at = [];\n\t       for (i = 0; i < 2; i++) {\n\t        at.push({\n\t         x: readInt8(data, position),\n\t         y: readInt8(data, position + 1)\n\t        });\n\t        position += 2;\n\t       }\n\t       textRegion.refinementAt = at;\n\t      }\n\t      textRegion.numberOfSymbolInstances = readUint32(data, position);\n\t      position += 4;\n\t      if (textRegion.huffman) {\n\t       error('JBIG2 error: huffman is not supported');\n\t      }\n\t      args = [\n\t       textRegion,\n\t       header.referredTo,\n\t       data,\n\t       position,\n\t       end\n\t      ];\n\t      break;\n\t     case 38:\n\t     case 39:\n\t      var genericRegion = {};\n\t      genericRegion.info = readRegionSegmentInformation(data, position);\n\t      position += RegionSegmentInformationFieldLength;\n\t      var genericRegionSegmentFlags = data[position++];\n\t      genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n\t      genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n\t      genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n\t      if (!genericRegion.mmr) {\n\t       atLength = genericRegion.template === 0 ? 4 : 1;\n\t       at = [];\n\t       for (i = 0; i < atLength; i++) {\n\t        at.push({\n\t         x: readInt8(data, position),\n\t         y: readInt8(data, position + 1)\n\t        });\n\t        position += 2;\n\t       }\n\t       genericRegion.at = at;\n\t      }\n\t      args = [\n\t       genericRegion,\n\t       data,\n\t       position,\n\t       end\n\t      ];\n\t      break;\n\t     case 48:\n\t      var pageInfo = {\n\t       width: readUint32(data, position),\n\t       height: readUint32(data, position + 4),\n\t       resolutionX: readUint32(data, position + 8),\n\t       resolutionY: readUint32(data, position + 12)\n\t      };\n\t      if (pageInfo.height === 0xFFFFFFFF) {\n\t       delete pageInfo.height;\n\t      }\n\t      var pageSegmentFlags = data[position + 16];\n\t      var pageStripingInformation = readUint16(data, position + 17);\n\t      pageInfo.lossless = !!(pageSegmentFlags & 1);\n\t      pageInfo.refinement = !!(pageSegmentFlags & 2);\n\t      pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n\t      pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n\t      pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n\t      pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n\t      args = [pageInfo];\n\t      break;\n\t     case 49:\n\t      break;\n\t     case 50:\n\t      break;\n\t     case 51:\n\t      break;\n\t     case 62:\n\t      break;\n\t     default:\n\t      error('JBIG2 error: segment type ' + header.typeName + '(' + header.type + ') is not implemented');\n\t     }\n\t     var callbackName = 'on' + header.typeName;\n\t     if (callbackName in visitor) {\n\t      visitor[callbackName].apply(visitor, args);\n\t     }\n\t    }\n\t    function processSegments(segments, visitor) {\n\t     for (var i = 0, ii = segments.length; i < ii; i++) {\n\t      processSegment(segments[i], visitor);\n\t     }\n\t    }\n\t    function parseJbig2(data, start, end) {\n\t     var position = start;\n\t     if (data[position] !== 0x97 || data[position + 1] !== 0x4A || data[position + 2] !== 0x42 || data[position + 3] !== 0x32 || data[position + 4] !== 0x0D || data[position + 5] !== 0x0A || data[position + 6] !== 0x1A || data[position + 7] !== 0x0A) {\n\t      error('JBIG2 error: invalid header');\n\t     }\n\t     var header = {};\n\t     position += 8;\n\t     var flags = data[position++];\n\t     header.randomAccess = !(flags & 1);\n\t     if (!(flags & 2)) {\n\t      header.numberOfPages = readUint32(data, position);\n\t      position += 4;\n\t     }\n\t     var segments = readSegments(header, data, position, end);\n\t     error('Not implemented');\n\t    }\n\t    function parseJbig2Chunks(chunks) {\n\t     var visitor = new SimpleSegmentVisitor();\n\t     for (var i = 0, ii = chunks.length; i < ii; i++) {\n\t      var chunk = chunks[i];\n\t      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n\t      processSegments(segments, visitor);\n\t     }\n\t     return visitor.buffer;\n\t    }\n\t    function SimpleSegmentVisitor() {\n\t    }\n\t    SimpleSegmentVisitor.prototype = {\n\t     onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n\t      this.currentPageInfo = info;\n\t      var rowSize = info.width + 7 >> 3;\n\t      var buffer = new Uint8Array(rowSize * info.height);\n\t      if (info.defaultPixelValue) {\n\t       for (var i = 0, ii = buffer.length; i < ii; i++) {\n\t        buffer[i] = 0xFF;\n\t       }\n\t      }\n\t      this.buffer = buffer;\n\t     },\n\t     drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n\t      var pageInfo = this.currentPageInfo;\n\t      var width = regionInfo.width, height = regionInfo.height;\n\t      var rowSize = pageInfo.width + 7 >> 3;\n\t      var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n\t      var buffer = this.buffer;\n\t      var mask0 = 128 >> (regionInfo.x & 7);\n\t      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n\t      var i, j, mask, offset;\n\t      switch (combinationOperator) {\n\t      case 0:\n\t       for (i = 0; i < height; i++) {\n\t        mask = mask0;\n\t        offset = offset0;\n\t        for (j = 0; j < width; j++) {\n\t         if (bitmap[i][j]) {\n\t          buffer[offset] |= mask;\n\t         }\n\t         mask >>= 1;\n\t         if (!mask) {\n\t          mask = 128;\n\t          offset++;\n\t         }\n\t        }\n\t        offset0 += rowSize;\n\t       }\n\t       break;\n\t      case 2:\n\t       for (i = 0; i < height; i++) {\n\t        mask = mask0;\n\t        offset = offset0;\n\t        for (j = 0; j < width; j++) {\n\t         if (bitmap[i][j]) {\n\t          buffer[offset] ^= mask;\n\t         }\n\t         mask >>= 1;\n\t         if (!mask) {\n\t          mask = 128;\n\t          offset++;\n\t         }\n\t        }\n\t        offset0 += rowSize;\n\t       }\n\t       break;\n\t      default:\n\t       error('JBIG2 error: operator ' + combinationOperator + ' is not supported');\n\t      }\n\t     },\n\t     onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n\t      var regionInfo = region.info;\n\t      var decodingContext = new DecodingContext(data, start, end);\n\t      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n\t      this.drawBitmap(regionInfo, bitmap);\n\t     },\n\t     onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n\t      this.onImmediateGenericRegion.apply(this, arguments);\n\t     },\n\t     onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n\t      var huffmanTables;\n\t      if (dictionary.huffman) {\n\t       error('JBIG2 error: huffman is not supported');\n\t      }\n\t      var symbols = this.symbols;\n\t      if (!symbols) {\n\t       this.symbols = symbols = {};\n\t      }\n\t      var inputSymbols = [];\n\t      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n\t       inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n\t      }\n\t      var decodingContext = new DecodingContext(data, start, end);\n\t      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext);\n\t     },\n\t     onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n\t      var regionInfo = region.info;\n\t      var huffmanTables;\n\t      var symbols = this.symbols;\n\t      var inputSymbols = [];\n\t      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n\t       inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n\t      }\n\t      var symbolCodeLength = log2(inputSymbols.length);\n\t      var decodingContext = new DecodingContext(data, start, end);\n\t      var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext);\n\t      this.drawBitmap(regionInfo, bitmap);\n\t     },\n\t     onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n\t      this.onImmediateTextRegion.apply(this, arguments);\n\t     }\n\t    };\n\t    function Jbig2Image() {\n\t    }\n\t    Jbig2Image.prototype = {\n\t     parseChunks: function Jbig2Image_parseChunks(chunks) {\n\t      return parseJbig2Chunks(chunks);\n\t     }\n\t    };\n\t    return Jbig2Image;\n\t   }();\n\t   exports.Jbig2Image = Jbig2Image;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCoreJpg = {}, root.pdfjsSharedUtil);\n\t  }(this, function (exports, sharedUtil) {\n\t   var error = sharedUtil.error;\n\t   var JpegImage = function JpegImageClosure() {\n\t    var dctZigZag = new Uint8Array([\n\t     0,\n\t     1,\n\t     8,\n\t     16,\n\t     9,\n\t     2,\n\t     3,\n\t     10,\n\t     17,\n\t     24,\n\t     32,\n\t     25,\n\t     18,\n\t     11,\n\t     4,\n\t     5,\n\t     12,\n\t     19,\n\t     26,\n\t     33,\n\t     40,\n\t     48,\n\t     41,\n\t     34,\n\t     27,\n\t     20,\n\t     13,\n\t     6,\n\t     7,\n\t     14,\n\t     21,\n\t     28,\n\t     35,\n\t     42,\n\t     49,\n\t     56,\n\t     57,\n\t     50,\n\t     43,\n\t     36,\n\t     29,\n\t     22,\n\t     15,\n\t     23,\n\t     30,\n\t     37,\n\t     44,\n\t     51,\n\t     58,\n\t     59,\n\t     52,\n\t     45,\n\t     38,\n\t     31,\n\t     39,\n\t     46,\n\t     53,\n\t     60,\n\t     61,\n\t     54,\n\t     47,\n\t     55,\n\t     62,\n\t     63\n\t    ]);\n\t    var dctCos1 = 4017;\n\t    var dctSin1 = 799;\n\t    var dctCos3 = 3406;\n\t    var dctSin3 = 2276;\n\t    var dctCos6 = 1567;\n\t    var dctSin6 = 3784;\n\t    var dctSqrt2 = 5793;\n\t    var dctSqrt1d2 = 2896;\n\t    function JpegImage() {\n\t     this.decodeTransform = null;\n\t     this.colorTransform = -1;\n\t    }\n\t    function buildHuffmanTable(codeLengths, values) {\n\t     var k = 0, code = [], i, j, length = 16;\n\t     while (length > 0 && !codeLengths[length - 1]) {\n\t      length--;\n\t     }\n\t     code.push({\n\t      children: [],\n\t      index: 0\n\t     });\n\t     var p = code[0], q;\n\t     for (i = 0; i < length; i++) {\n\t      for (j = 0; j < codeLengths[i]; j++) {\n\t       p = code.pop();\n\t       p.children[p.index] = values[k];\n\t       while (p.index > 0) {\n\t        p = code.pop();\n\t       }\n\t       p.index++;\n\t       code.push(p);\n\t       while (code.length <= i) {\n\t        code.push(q = {\n\t         children: [],\n\t         index: 0\n\t        });\n\t        p.children[p.index] = q.children;\n\t        p = q;\n\t       }\n\t       k++;\n\t      }\n\t      if (i + 1 < length) {\n\t       code.push(q = {\n\t        children: [],\n\t        index: 0\n\t       });\n\t       p.children[p.index] = q.children;\n\t       p = q;\n\t      }\n\t     }\n\t     return code[0].children;\n\t    }\n\t    function getBlockBufferOffset(component, row, col) {\n\t     return 64 * ((component.blocksPerLine + 1) * row + col);\n\t    }\n\t    function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n\t     var mcusPerLine = frame.mcusPerLine;\n\t     var progressive = frame.progressive;\n\t     var startOffset = offset, bitsData = 0, bitsCount = 0;\n\t     function readBit() {\n\t      if (bitsCount > 0) {\n\t       bitsCount--;\n\t       return bitsData >> bitsCount & 1;\n\t      }\n\t      bitsData = data[offset++];\n\t      if (bitsData === 0xFF) {\n\t       var nextByte = data[offset++];\n\t       if (nextByte) {\n\t        error('JPEG error: unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\n\t       }\n\t      }\n\t      bitsCount = 7;\n\t      return bitsData >>> 7;\n\t     }\n\t     function decodeHuffman(tree) {\n\t      var node = tree;\n\t      while (true) {\n\t       node = node[readBit()];\n\t       if (typeof node === 'number') {\n\t        return node;\n\t       }\n\t       if (typeof node !== 'object') {\n\t        error('JPEG error: invalid huffman sequence');\n\t       }\n\t      }\n\t     }\n\t     function receive(length) {\n\t      var n = 0;\n\t      while (length > 0) {\n\t       n = n << 1 | readBit();\n\t       length--;\n\t      }\n\t      return n;\n\t     }\n\t     function receiveAndExtend(length) {\n\t      if (length === 1) {\n\t       return readBit() === 1 ? 1 : -1;\n\t      }\n\t      var n = receive(length);\n\t      if (n >= 1 << length - 1) {\n\t       return n;\n\t      }\n\t      return n + (-1 << length) + 1;\n\t     }\n\t     function decodeBaseline(component, offset) {\n\t      var t = decodeHuffman(component.huffmanTableDC);\n\t      var diff = t === 0 ? 0 : receiveAndExtend(t);\n\t      component.blockData[offset] = component.pred += diff;\n\t      var k = 1;\n\t      while (k < 64) {\n\t       var rs = decodeHuffman(component.huffmanTableAC);\n\t       var s = rs & 15, r = rs >> 4;\n\t       if (s === 0) {\n\t        if (r < 15) {\n\t         break;\n\t        }\n\t        k += 16;\n\t        continue;\n\t       }\n\t       k += r;\n\t       var z = dctZigZag[k];\n\t       component.blockData[offset + z] = receiveAndExtend(s);\n\t       k++;\n\t      }\n\t     }\n\t     function decodeDCFirst(component, offset) {\n\t      var t = decodeHuffman(component.huffmanTableDC);\n\t      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n\t      component.blockData[offset] = component.pred += diff;\n\t     }\n\t     function decodeDCSuccessive(component, offset) {\n\t      component.blockData[offset] |= readBit() << successive;\n\t     }\n\t     var eobrun = 0;\n\t     function decodeACFirst(component, offset) {\n\t      if (eobrun > 0) {\n\t       eobrun--;\n\t       return;\n\t      }\n\t      var k = spectralStart, e = spectralEnd;\n\t      while (k <= e) {\n\t       var rs = decodeHuffman(component.huffmanTableAC);\n\t       var s = rs & 15, r = rs >> 4;\n\t       if (s === 0) {\n\t        if (r < 15) {\n\t         eobrun = receive(r) + (1 << r) - 1;\n\t         break;\n\t        }\n\t        k += 16;\n\t        continue;\n\t       }\n\t       k += r;\n\t       var z = dctZigZag[k];\n\t       component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\n\t       k++;\n\t      }\n\t     }\n\t     var successiveACState = 0, successiveACNextValue;\n\t     function decodeACSuccessive(component, offset) {\n\t      var k = spectralStart;\n\t      var e = spectralEnd;\n\t      var r = 0;\n\t      var s;\n\t      var rs;\n\t      while (k <= e) {\n\t       var z = dctZigZag[k];\n\t       switch (successiveACState) {\n\t       case 0:\n\t        rs = decodeHuffman(component.huffmanTableAC);\n\t        s = rs & 15;\n\t        r = rs >> 4;\n\t        if (s === 0) {\n\t         if (r < 15) {\n\t          eobrun = receive(r) + (1 << r);\n\t          successiveACState = 4;\n\t         } else {\n\t          r = 16;\n\t          successiveACState = 1;\n\t         }\n\t        } else {\n\t         if (s !== 1) {\n\t          error('JPEG error: invalid ACn encoding');\n\t         }\n\t         successiveACNextValue = receiveAndExtend(s);\n\t         successiveACState = r ? 2 : 3;\n\t        }\n\t        continue;\n\t       case 1:\n\t       case 2:\n\t        if (component.blockData[offset + z]) {\n\t         component.blockData[offset + z] += readBit() << successive;\n\t        } else {\n\t         r--;\n\t         if (r === 0) {\n\t          successiveACState = successiveACState === 2 ? 3 : 0;\n\t         }\n\t        }\n\t        break;\n\t       case 3:\n\t        if (component.blockData[offset + z]) {\n\t         component.blockData[offset + z] += readBit() << successive;\n\t        } else {\n\t         component.blockData[offset + z] = successiveACNextValue << successive;\n\t         successiveACState = 0;\n\t        }\n\t        break;\n\t       case 4:\n\t        if (component.blockData[offset + z]) {\n\t         component.blockData[offset + z] += readBit() << successive;\n\t        }\n\t        break;\n\t       }\n\t       k++;\n\t      }\n\t      if (successiveACState === 4) {\n\t       eobrun--;\n\t       if (eobrun === 0) {\n\t        successiveACState = 0;\n\t       }\n\t      }\n\t     }\n\t     function decodeMcu(component, decode, mcu, row, col) {\n\t      var mcuRow = mcu / mcusPerLine | 0;\n\t      var mcuCol = mcu % mcusPerLine;\n\t      var blockRow = mcuRow * component.v + row;\n\t      var blockCol = mcuCol * component.h + col;\n\t      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n\t      decode(component, offset);\n\t     }\n\t     function decodeBlock(component, decode, mcu) {\n\t      var blockRow = mcu / component.blocksPerLine | 0;\n\t      var blockCol = mcu % component.blocksPerLine;\n\t      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n\t      decode(component, offset);\n\t     }\n\t     var componentsLength = components.length;\n\t     var component, i, j, k, n;\n\t     var decodeFn;\n\t     if (progressive) {\n\t      if (spectralStart === 0) {\n\t       decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n\t      } else {\n\t       decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n\t      }\n\t     } else {\n\t      decodeFn = decodeBaseline;\n\t     }\n\t     var mcu = 0, marker;\n\t     var mcuExpected;\n\t     if (componentsLength === 1) {\n\t      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n\t     } else {\n\t      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n\t     }\n\t     if (!resetInterval) {\n\t      resetInterval = mcuExpected;\n\t     }\n\t     var h, v;\n\t     while (mcu < mcuExpected) {\n\t      for (i = 0; i < componentsLength; i++) {\n\t       components[i].pred = 0;\n\t      }\n\t      eobrun = 0;\n\t      if (componentsLength === 1) {\n\t       component = components[0];\n\t       for (n = 0; n < resetInterval; n++) {\n\t        decodeBlock(component, decodeFn, mcu);\n\t        mcu++;\n\t       }\n\t      } else {\n\t       for (n = 0; n < resetInterval; n++) {\n\t        for (i = 0; i < componentsLength; i++) {\n\t         component = components[i];\n\t         h = component.h;\n\t         v = component.v;\n\t         for (j = 0; j < v; j++) {\n\t          for (k = 0; k < h; k++) {\n\t           decodeMcu(component, decodeFn, mcu, j, k);\n\t          }\n\t         }\n\t        }\n\t        mcu++;\n\t       }\n\t      }\n\t      bitsCount = 0;\n\t      marker = data[offset] << 8 | data[offset + 1];\n\t      while (data[offset] === 0x00 && offset < data.length - 1) {\n\t       offset++;\n\t       marker = data[offset] << 8 | data[offset + 1];\n\t      }\n\t      if (marker <= 0xFF00) {\n\t       error('JPEG error: marker was not found');\n\t      }\n\t      if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n\t       offset += 2;\n\t      } else {\n\t       break;\n\t      }\n\t     }\n\t     return offset - startOffset;\n\t    }\n\t    function quantizeAndInverse(component, blockBufferOffset, p) {\n\t     var qt = component.quantizationTable, blockData = component.blockData;\n\t     var v0, v1, v2, v3, v4, v5, v6, v7;\n\t     var p0, p1, p2, p3, p4, p5, p6, p7;\n\t     var t;\n\t     if (!qt) {\n\t      error('JPEG error: missing required Quantization Table.');\n\t     }\n\t     for (var row = 0; row < 64; row += 8) {\n\t      p0 = blockData[blockBufferOffset + row];\n\t      p1 = blockData[blockBufferOffset + row + 1];\n\t      p2 = blockData[blockBufferOffset + row + 2];\n\t      p3 = blockData[blockBufferOffset + row + 3];\n\t      p4 = blockData[blockBufferOffset + row + 4];\n\t      p5 = blockData[blockBufferOffset + row + 5];\n\t      p6 = blockData[blockBufferOffset + row + 6];\n\t      p7 = blockData[blockBufferOffset + row + 7];\n\t      p0 *= qt[row];\n\t      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n\t       t = dctSqrt2 * p0 + 512 >> 10;\n\t       p[row] = t;\n\t       p[row + 1] = t;\n\t       p[row + 2] = t;\n\t       p[row + 3] = t;\n\t       p[row + 4] = t;\n\t       p[row + 5] = t;\n\t       p[row + 6] = t;\n\t       p[row + 7] = t;\n\t       continue;\n\t      }\n\t      p1 *= qt[row + 1];\n\t      p2 *= qt[row + 2];\n\t      p3 *= qt[row + 3];\n\t      p4 *= qt[row + 4];\n\t      p5 *= qt[row + 5];\n\t      p6 *= qt[row + 6];\n\t      p7 *= qt[row + 7];\n\t      v0 = dctSqrt2 * p0 + 128 >> 8;\n\t      v1 = dctSqrt2 * p4 + 128 >> 8;\n\t      v2 = p2;\n\t      v3 = p6;\n\t      v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n\t      v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n\t      v5 = p3 << 4;\n\t      v6 = p5 << 4;\n\t      v0 = v0 + v1 + 1 >> 1;\n\t      v1 = v0 - v1;\n\t      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n\t      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n\t      v3 = t;\n\t      v4 = v4 + v6 + 1 >> 1;\n\t      v6 = v4 - v6;\n\t      v7 = v7 + v5 + 1 >> 1;\n\t      v5 = v7 - v5;\n\t      v0 = v0 + v3 + 1 >> 1;\n\t      v3 = v0 - v3;\n\t      v1 = v1 + v2 + 1 >> 1;\n\t      v2 = v1 - v2;\n\t      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n\t      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n\t      v7 = t;\n\t      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n\t      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n\t      v6 = t;\n\t      p[row] = v0 + v7;\n\t      p[row + 7] = v0 - v7;\n\t      p[row + 1] = v1 + v6;\n\t      p[row + 6] = v1 - v6;\n\t      p[row + 2] = v2 + v5;\n\t      p[row + 5] = v2 - v5;\n\t      p[row + 3] = v3 + v4;\n\t      p[row + 4] = v3 - v4;\n\t     }\n\t     for (var col = 0; col < 8; ++col) {\n\t      p0 = p[col];\n\t      p1 = p[col + 8];\n\t      p2 = p[col + 16];\n\t      p3 = p[col + 24];\n\t      p4 = p[col + 32];\n\t      p5 = p[col + 40];\n\t      p6 = p[col + 48];\n\t      p7 = p[col + 56];\n\t      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n\t       t = dctSqrt2 * p0 + 8192 >> 14;\n\t       t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\n\t       blockData[blockBufferOffset + col] = t;\n\t       blockData[blockBufferOffset + col + 8] = t;\n\t       blockData[blockBufferOffset + col + 16] = t;\n\t       blockData[blockBufferOffset + col + 24] = t;\n\t       blockData[blockBufferOffset + col + 32] = t;\n\t       blockData[blockBufferOffset + col + 40] = t;\n\t       blockData[blockBufferOffset + col + 48] = t;\n\t       blockData[blockBufferOffset + col + 56] = t;\n\t       continue;\n\t      }\n\t      v0 = dctSqrt2 * p0 + 2048 >> 12;\n\t      v1 = dctSqrt2 * p4 + 2048 >> 12;\n\t      v2 = p2;\n\t      v3 = p6;\n\t      v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n\t      v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n\t      v5 = p3;\n\t      v6 = p5;\n\t      v0 = (v0 + v1 + 1 >> 1) + 4112;\n\t      v1 = v0 - v1;\n\t      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n\t      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n\t      v3 = t;\n\t      v4 = v4 + v6 + 1 >> 1;\n\t      v6 = v4 - v6;\n\t      v7 = v7 + v5 + 1 >> 1;\n\t      v5 = v7 - v5;\n\t      v0 = v0 + v3 + 1 >> 1;\n\t      v3 = v0 - v3;\n\t      v1 = v1 + v2 + 1 >> 1;\n\t      v2 = v1 - v2;\n\t      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n\t      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n\t      v7 = t;\n\t      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n\t      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n\t      v6 = t;\n\t      p0 = v0 + v7;\n\t      p7 = v0 - v7;\n\t      p1 = v1 + v6;\n\t      p6 = v1 - v6;\n\t      p2 = v2 + v5;\n\t      p5 = v2 - v5;\n\t      p3 = v3 + v4;\n\t      p4 = v3 - v4;\n\t      p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n\t      p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n\t      p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n\t      p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n\t      p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n\t      p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n\t      p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n\t      p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n\t      blockData[blockBufferOffset + col] = p0;\n\t      blockData[blockBufferOffset + col + 8] = p1;\n\t      blockData[blockBufferOffset + col + 16] = p2;\n\t      blockData[blockBufferOffset + col + 24] = p3;\n\t      blockData[blockBufferOffset + col + 32] = p4;\n\t      blockData[blockBufferOffset + col + 40] = p5;\n\t      blockData[blockBufferOffset + col + 48] = p6;\n\t      blockData[blockBufferOffset + col + 56] = p7;\n\t     }\n\t    }\n\t    function buildComponentData(frame, component) {\n\t     var blocksPerLine = component.blocksPerLine;\n\t     var blocksPerColumn = component.blocksPerColumn;\n\t     var computationBuffer = new Int16Array(64);\n\t     for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n\t      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n\t       var offset = getBlockBufferOffset(component, blockRow, blockCol);\n\t       quantizeAndInverse(component, offset, computationBuffer);\n\t      }\n\t     }\n\t     return component.blockData;\n\t    }\n\t    function clamp0to255(a) {\n\t     return a <= 0 ? 0 : a >= 255 ? 255 : a;\n\t    }\n\t    JpegImage.prototype = {\n\t     parse: function parse(data) {\n\t      function readUint16() {\n\t       var value = data[offset] << 8 | data[offset + 1];\n\t       offset += 2;\n\t       return value;\n\t      }\n\t      function readDataBlock() {\n\t       var length = readUint16();\n\t       var array = data.subarray(offset, offset + length - 2);\n\t       offset += array.length;\n\t       return array;\n\t      }\n\t      function prepareComponents(frame) {\n\t       var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n\t       var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n\t       for (var i = 0; i < frame.components.length; i++) {\n\t        component = frame.components[i];\n\t        var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n\t        var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n\t        var blocksPerLineForMcu = mcusPerLine * component.h;\n\t        var blocksPerColumnForMcu = mcusPerColumn * component.v;\n\t        var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n\t        component.blockData = new Int16Array(blocksBufferSize);\n\t        component.blocksPerLine = blocksPerLine;\n\t        component.blocksPerColumn = blocksPerColumn;\n\t       }\n\t       frame.mcusPerLine = mcusPerLine;\n\t       frame.mcusPerColumn = mcusPerColumn;\n\t      }\n\t      var offset = 0;\n\t      var jfif = null;\n\t      var adobe = null;\n\t      var frame, resetInterval;\n\t      var quantizationTables = [];\n\t      var huffmanTablesAC = [], huffmanTablesDC = [];\n\t      var fileMarker = readUint16();\n\t      if (fileMarker !== 0xFFD8) {\n\t       error('JPEG error: SOI not found');\n\t      }\n\t      fileMarker = readUint16();\n\t      while (fileMarker !== 0xFFD9) {\n\t       var i, j, l;\n\t       switch (fileMarker) {\n\t       case 0xFFE0:\n\t       case 0xFFE1:\n\t       case 0xFFE2:\n\t       case 0xFFE3:\n\t       case 0xFFE4:\n\t       case 0xFFE5:\n\t       case 0xFFE6:\n\t       case 0xFFE7:\n\t       case 0xFFE8:\n\t       case 0xFFE9:\n\t       case 0xFFEA:\n\t       case 0xFFEB:\n\t       case 0xFFEC:\n\t       case 0xFFED:\n\t       case 0xFFEE:\n\t       case 0xFFEF:\n\t       case 0xFFFE:\n\t        var appData = readDataBlock();\n\t        if (fileMarker === 0xFFE0) {\n\t         if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n\t          jfif = {\n\t           version: {\n\t            major: appData[5],\n\t            minor: appData[6]\n\t           },\n\t           densityUnits: appData[7],\n\t           xDensity: appData[8] << 8 | appData[9],\n\t           yDensity: appData[10] << 8 | appData[11],\n\t           thumbWidth: appData[12],\n\t           thumbHeight: appData[13],\n\t           thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n\t          };\n\t         }\n\t        }\n\t        if (fileMarker === 0xFFEE) {\n\t         if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\n\t          adobe = {\n\t           version: appData[5] << 8 | appData[6],\n\t           flags0: appData[7] << 8 | appData[8],\n\t           flags1: appData[9] << 8 | appData[10],\n\t           transformCode: appData[11]\n\t          };\n\t         }\n\t        }\n\t        break;\n\t       case 0xFFDB:\n\t        var quantizationTablesLength = readUint16();\n\t        var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n\t        var z;\n\t        while (offset < quantizationTablesEnd) {\n\t         var quantizationTableSpec = data[offset++];\n\t         var tableData = new Uint16Array(64);\n\t         if (quantizationTableSpec >> 4 === 0) {\n\t          for (j = 0; j < 64; j++) {\n\t           z = dctZigZag[j];\n\t           tableData[z] = data[offset++];\n\t          }\n\t         } else if (quantizationTableSpec >> 4 === 1) {\n\t          for (j = 0; j < 64; j++) {\n\t           z = dctZigZag[j];\n\t           tableData[z] = readUint16();\n\t          }\n\t         } else {\n\t          error('JPEG error: DQT - invalid table spec');\n\t         }\n\t         quantizationTables[quantizationTableSpec & 15] = tableData;\n\t        }\n\t        break;\n\t       case 0xFFC0:\n\t       case 0xFFC1:\n\t       case 0xFFC2:\n\t        if (frame) {\n\t         error('JPEG error: Only single frame JPEGs supported');\n\t        }\n\t        readUint16();\n\t        frame = {};\n\t        frame.extended = fileMarker === 0xFFC1;\n\t        frame.progressive = fileMarker === 0xFFC2;\n\t        frame.precision = data[offset++];\n\t        frame.scanLines = readUint16();\n\t        frame.samplesPerLine = readUint16();\n\t        frame.components = [];\n\t        frame.componentIds = {};\n\t        var componentsCount = data[offset++], componentId;\n\t        var maxH = 0, maxV = 0;\n\t        for (i = 0; i < componentsCount; i++) {\n\t         componentId = data[offset];\n\t         var h = data[offset + 1] >> 4;\n\t         var v = data[offset + 1] & 15;\n\t         if (maxH < h) {\n\t          maxH = h;\n\t         }\n\t         if (maxV < v) {\n\t          maxV = v;\n\t         }\n\t         var qId = data[offset + 2];\n\t         l = frame.components.push({\n\t          h: h,\n\t          v: v,\n\t          quantizationId: qId,\n\t          quantizationTable: null\n\t         });\n\t         frame.componentIds[componentId] = l - 1;\n\t         offset += 3;\n\t        }\n\t        frame.maxH = maxH;\n\t        frame.maxV = maxV;\n\t        prepareComponents(frame);\n\t        break;\n\t       case 0xFFC4:\n\t        var huffmanLength = readUint16();\n\t        for (i = 2; i < huffmanLength;) {\n\t         var huffmanTableSpec = data[offset++];\n\t         var codeLengths = new Uint8Array(16);\n\t         var codeLengthSum = 0;\n\t         for (j = 0; j < 16; j++, offset++) {\n\t          codeLengthSum += codeLengths[j] = data[offset];\n\t         }\n\t         var huffmanValues = new Uint8Array(codeLengthSum);\n\t         for (j = 0; j < codeLengthSum; j++, offset++) {\n\t          huffmanValues[j] = data[offset];\n\t         }\n\t         i += 17 + codeLengthSum;\n\t         (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n\t        }\n\t        break;\n\t       case 0xFFDD:\n\t        readUint16();\n\t        resetInterval = readUint16();\n\t        break;\n\t       case 0xFFDA:\n\t        var scanLength = readUint16();\n\t        var selectorsCount = data[offset++];\n\t        var components = [], component;\n\t        for (i = 0; i < selectorsCount; i++) {\n\t         var componentIndex = frame.componentIds[data[offset++]];\n\t         component = frame.components[componentIndex];\n\t         var tableSpec = data[offset++];\n\t         component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n\t         component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n\t         components.push(component);\n\t        }\n\t        var spectralStart = data[offset++];\n\t        var spectralEnd = data[offset++];\n\t        var successiveApproximation = data[offset++];\n\t        var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15);\n\t        offset += processed;\n\t        break;\n\t       case 0xFFFF:\n\t        if (data[offset] !== 0xFF) {\n\t         offset--;\n\t        }\n\t        break;\n\t       default:\n\t        if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n\t         offset -= 3;\n\t         break;\n\t        }\n\t        error('JPEG error: unknown marker ' + fileMarker.toString(16));\n\t       }\n\t       fileMarker = readUint16();\n\t      }\n\t      this.width = frame.samplesPerLine;\n\t      this.height = frame.scanLines;\n\t      this.jfif = jfif;\n\t      this.adobe = adobe;\n\t      this.components = [];\n\t      for (i = 0; i < frame.components.length; i++) {\n\t       component = frame.components[i];\n\t       var quantizationTable = quantizationTables[component.quantizationId];\n\t       if (quantizationTable) {\n\t        component.quantizationTable = quantizationTable;\n\t       }\n\t       this.components.push({\n\t        output: buildComponentData(frame, component),\n\t        scaleX: component.h / frame.maxH,\n\t        scaleY: component.v / frame.maxV,\n\t        blocksPerLine: component.blocksPerLine,\n\t        blocksPerColumn: component.blocksPerColumn\n\t       });\n\t      }\n\t      this.numComponents = this.components.length;\n\t     },\n\t     _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n\t      var scaleX = this.width / width, scaleY = this.height / height;\n\t      var component, componentScaleX, componentScaleY, blocksPerScanline;\n\t      var x, y, i, j, k;\n\t      var index;\n\t      var offset = 0;\n\t      var output;\n\t      var numComponents = this.components.length;\n\t      var dataLength = width * height * numComponents;\n\t      var data = new Uint8Array(dataLength);\n\t      var xScaleBlockOffset = new Uint32Array(width);\n\t      var mask3LSB = 0xfffffff8;\n\t      for (i = 0; i < numComponents; i++) {\n\t       component = this.components[i];\n\t       componentScaleX = component.scaleX * scaleX;\n\t       componentScaleY = component.scaleY * scaleY;\n\t       offset = i;\n\t       output = component.output;\n\t       blocksPerScanline = component.blocksPerLine + 1 << 3;\n\t       for (x = 0; x < width; x++) {\n\t        j = 0 | x * componentScaleX;\n\t        xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n\t       }\n\t       for (y = 0; y < height; y++) {\n\t        j = 0 | y * componentScaleY;\n\t        index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n\t        for (x = 0; x < width; x++) {\n\t         data[offset] = output[index + xScaleBlockOffset[x]];\n\t         offset += numComponents;\n\t        }\n\t       }\n\t      }\n\t      var transform = this.decodeTransform;\n\t      if (transform) {\n\t       for (i = 0; i < dataLength;) {\n\t        for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n\t         data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n\t        }\n\t       }\n\t      }\n\t      return data;\n\t     },\n\t     _isColorConversionNeeded: function isColorConversionNeeded() {\n\t      if (this.adobe && this.adobe.transformCode) {\n\t       return true;\n\t      } else if (this.numComponents === 3) {\n\t       if (!this.adobe && this.colorTransform === 0) {\n\t        return false;\n\t       }\n\t       return true;\n\t      }\n\t      if (!this.adobe && this.colorTransform === 1) {\n\t       return true;\n\t      }\n\t      return false;\n\t     },\n\t     _convertYccToRgb: function convertYccToRgb(data) {\n\t      var Y, Cb, Cr;\n\t      for (var i = 0, length = data.length; i < length; i += 3) {\n\t       Y = data[i];\n\t       Cb = data[i + 1];\n\t       Cr = data[i + 2];\n\t       data[i] = clamp0to255(Y - 179.456 + 1.402 * Cr);\n\t       data[i + 1] = clamp0to255(Y + 135.459 - 0.344 * Cb - 0.714 * Cr);\n\t       data[i + 2] = clamp0to255(Y - 226.816 + 1.772 * Cb);\n\t      }\n\t      return data;\n\t     },\n\t     _convertYcckToRgb: function convertYcckToRgb(data) {\n\t      var Y, Cb, Cr, k;\n\t      var offset = 0;\n\t      for (var i = 0, length = data.length; i < length; i += 4) {\n\t       Y = data[i];\n\t       Cb = data[i + 1];\n\t       Cr = data[i + 2];\n\t       k = data[i + 3];\n\t       var r = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n\t       var g = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n\t       var b = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n\t       data[offset++] = clamp0to255(r);\n\t       data[offset++] = clamp0to255(g);\n\t       data[offset++] = clamp0to255(b);\n\t      }\n\t      return data;\n\t     },\n\t     _convertYcckToCmyk: function convertYcckToCmyk(data) {\n\t      var Y, Cb, Cr;\n\t      for (var i = 0, length = data.length; i < length; i += 4) {\n\t       Y = data[i];\n\t       Cb = data[i + 1];\n\t       Cr = data[i + 2];\n\t       data[i] = clamp0to255(434.456 - Y - 1.402 * Cr);\n\t       data[i + 1] = clamp0to255(119.541 - Y + 0.344 * Cb + 0.714 * Cr);\n\t       data[i + 2] = clamp0to255(481.816 - Y - 1.772 * Cb);\n\t      }\n\t      return data;\n\t     },\n\t     _convertCmykToRgb: function convertCmykToRgb(data) {\n\t      var c, m, y, k;\n\t      var offset = 0;\n\t      var min = -255 * 255 * 255;\n\t      var scale = 1 / 255 / 255;\n\t      for (var i = 0, length = data.length; i < length; i += 4) {\n\t       c = data[i];\n\t       m = data[i + 1];\n\t       y = data[i + 2];\n\t       k = data[i + 3];\n\t       var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 72734.4411664936) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 1401.7366389350734) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 4465.541406466231) - k * (21.86122147463605 * k + 48317.86113160301);\n\t       var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 20220.756542821975) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 48691.05921601825) + y * (4.444339102852739 * y + 9.8632861493405 * k - 6341.191035517494) - k * (20.737325471181034 * k + 47890.15695978492);\n\t       var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 3616.812083916688) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 28620.90484698408) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 49363.43385999684) - k * (22.33816807309886 * k + 45932.16563550634);\n\t       data[offset++] = r >= 0 ? 255 : r <= min ? 0 : 255 + r * scale | 0;\n\t       data[offset++] = g >= 0 ? 255 : g <= min ? 0 : 255 + g * scale | 0;\n\t       data[offset++] = b >= 0 ? 255 : b <= min ? 0 : 255 + b * scale | 0;\n\t      }\n\t      return data;\n\t     },\n\t     getData: function getData(width, height, forceRGBoutput) {\n\t      if (this.numComponents > 4) {\n\t       error('JPEG error: Unsupported color mode');\n\t      }\n\t      var data = this._getLinearizedBlockData(width, height);\n\t      if (this.numComponents === 1 && forceRGBoutput) {\n\t       var dataLength = data.length;\n\t       var rgbData = new Uint8Array(dataLength * 3);\n\t       var offset = 0;\n\t       for (var i = 0; i < dataLength; i++) {\n\t        var grayColor = data[i];\n\t        rgbData[offset++] = grayColor;\n\t        rgbData[offset++] = grayColor;\n\t        rgbData[offset++] = grayColor;\n\t       }\n\t       return rgbData;\n\t      } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\n\t       return this._convertYccToRgb(data);\n\t      } else if (this.numComponents === 4) {\n\t       if (this._isColorConversionNeeded()) {\n\t        if (forceRGBoutput) {\n\t         return this._convertYcckToRgb(data);\n\t        }\n\t        return this._convertYcckToCmyk(data);\n\t       } else if (forceRGBoutput) {\n\t        return this._convertCmykToRgb(data);\n\t       }\n\t      }\n\t      return data;\n\t     }\n\t    };\n\t    return JpegImage;\n\t   }();\n\t   exports.JpegImage = JpegImage;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCoreJpx = {}, root.pdfjsSharedUtil, root.pdfjsCoreArithmeticDecoder);\n\t  }(this, function (exports, sharedUtil, coreArithmeticDecoder) {\n\t   var info = sharedUtil.info;\n\t   var warn = sharedUtil.warn;\n\t   var error = sharedUtil.error;\n\t   var log2 = sharedUtil.log2;\n\t   var readUint16 = sharedUtil.readUint16;\n\t   var readUint32 = sharedUtil.readUint32;\n\t   var ArithmeticDecoder = coreArithmeticDecoder.ArithmeticDecoder;\n\t   var JpxImage = function JpxImageClosure() {\n\t    var SubbandsGainLog2 = {\n\t     'LL': 0,\n\t     'LH': 1,\n\t     'HL': 1,\n\t     'HH': 2\n\t    };\n\t    function JpxImage() {\n\t     this.failOnCorruptedImage = false;\n\t    }\n\t    JpxImage.prototype = {\n\t     parse: function JpxImage_parse(data) {\n\t      var head = readUint16(data, 0);\n\t      if (head === 0xFF4F) {\n\t       this.parseCodestream(data, 0, data.length);\n\t       return;\n\t      }\n\t      var position = 0, length = data.length;\n\t      while (position < length) {\n\t       var headerSize = 8;\n\t       var lbox = readUint32(data, position);\n\t       var tbox = readUint32(data, position + 4);\n\t       position += headerSize;\n\t       if (lbox === 1) {\n\t        lbox = readUint32(data, position) * 4294967296 + readUint32(data, position + 4);\n\t        position += 8;\n\t        headerSize += 8;\n\t       }\n\t       if (lbox === 0) {\n\t        lbox = length - position + headerSize;\n\t       }\n\t       if (lbox < headerSize) {\n\t        error('JPX Error: Invalid box field size');\n\t       }\n\t       var dataLength = lbox - headerSize;\n\t       var jumpDataLength = true;\n\t       switch (tbox) {\n\t       case 0x6A703268:\n\t        jumpDataLength = false;\n\t        break;\n\t       case 0x636F6C72:\n\t        var method = data[position];\n\t        if (method === 1) {\n\t         var colorspace = readUint32(data, position + 3);\n\t         switch (colorspace) {\n\t         case 16:\n\t         case 17:\n\t         case 18:\n\t          break;\n\t         default:\n\t          warn('Unknown colorspace ' + colorspace);\n\t          break;\n\t         }\n\t        } else if (method === 2) {\n\t         info('ICC profile not supported');\n\t        }\n\t        break;\n\t       case 0x6A703263:\n\t        this.parseCodestream(data, position, position + dataLength);\n\t        break;\n\t       case 0x6A502020:\n\t        if (0x0d0a870a !== readUint32(data, position)) {\n\t         warn('Invalid JP2 signature');\n\t        }\n\t        break;\n\t       case 0x6A501A1A:\n\t       case 0x66747970:\n\t       case 0x72726571:\n\t       case 0x72657320:\n\t       case 0x69686472:\n\t        break;\n\t       default:\n\t        var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\n\t        warn('Unsupported header type ' + tbox + ' (' + headerType + ')');\n\t        break;\n\t       }\n\t       if (jumpDataLength) {\n\t        position += dataLength;\n\t       }\n\t      }\n\t     },\n\t     parseImageProperties: function JpxImage_parseImageProperties(stream) {\n\t      var newByte = stream.getByte();\n\t      while (newByte >= 0) {\n\t       var oldByte = newByte;\n\t       newByte = stream.getByte();\n\t       var code = oldByte << 8 | newByte;\n\t       if (code === 0xFF51) {\n\t        stream.skip(4);\n\t        var Xsiz = stream.getInt32() >>> 0;\n\t        var Ysiz = stream.getInt32() >>> 0;\n\t        var XOsiz = stream.getInt32() >>> 0;\n\t        var YOsiz = stream.getInt32() >>> 0;\n\t        stream.skip(16);\n\t        var Csiz = stream.getUint16();\n\t        this.width = Xsiz - XOsiz;\n\t        this.height = Ysiz - YOsiz;\n\t        this.componentsCount = Csiz;\n\t        this.bitsPerComponent = 8;\n\t        return;\n\t       }\n\t      }\n\t      error('JPX Error: No size marker found in JPX stream');\n\t     },\n\t     parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n\t      var context = {};\n\t      var doNotRecover = false;\n\t      try {\n\t       var position = start;\n\t       while (position + 1 < end) {\n\t        var code = readUint16(data, position);\n\t        position += 2;\n\t        var length = 0, j, sqcd, spqcds, spqcdSize, scalarExpounded, tile;\n\t        switch (code) {\n\t        case 0xFF4F:\n\t         context.mainHeader = true;\n\t         break;\n\t        case 0xFFD9:\n\t         break;\n\t        case 0xFF51:\n\t         length = readUint16(data, position);\n\t         var siz = {};\n\t         siz.Xsiz = readUint32(data, position + 4);\n\t         siz.Ysiz = readUint32(data, position + 8);\n\t         siz.XOsiz = readUint32(data, position + 12);\n\t         siz.YOsiz = readUint32(data, position + 16);\n\t         siz.XTsiz = readUint32(data, position + 20);\n\t         siz.YTsiz = readUint32(data, position + 24);\n\t         siz.XTOsiz = readUint32(data, position + 28);\n\t         siz.YTOsiz = readUint32(data, position + 32);\n\t         var componentsCount = readUint16(data, position + 36);\n\t         siz.Csiz = componentsCount;\n\t         var components = [];\n\t         j = position + 38;\n\t         for (var i = 0; i < componentsCount; i++) {\n\t          var component = {\n\t           precision: (data[j] & 0x7F) + 1,\n\t           isSigned: !!(data[j] & 0x80),\n\t           XRsiz: data[j + 1],\n\t           YRsiz: data[j + 1]\n\t          };\n\t          calculateComponentDimensions(component, siz);\n\t          components.push(component);\n\t         }\n\t         context.SIZ = siz;\n\t         context.components = components;\n\t         calculateTileGrids(context, components);\n\t         context.QCC = [];\n\t         context.COC = [];\n\t         break;\n\t        case 0xFF5C:\n\t         length = readUint16(data, position);\n\t         var qcd = {};\n\t         j = position + 2;\n\t         sqcd = data[j++];\n\t         switch (sqcd & 0x1F) {\n\t         case 0:\n\t          spqcdSize = 8;\n\t          scalarExpounded = true;\n\t          break;\n\t         case 1:\n\t          spqcdSize = 16;\n\t          scalarExpounded = false;\n\t          break;\n\t         case 2:\n\t          spqcdSize = 16;\n\t          scalarExpounded = true;\n\t          break;\n\t         default:\n\t          throw new Error('Invalid SQcd value ' + sqcd);\n\t         }\n\t         qcd.noQuantization = spqcdSize === 8;\n\t         qcd.scalarExpounded = scalarExpounded;\n\t         qcd.guardBits = sqcd >> 5;\n\t         spqcds = [];\n\t         while (j < length + position) {\n\t          var spqcd = {};\n\t          if (spqcdSize === 8) {\n\t           spqcd.epsilon = data[j++] >> 3;\n\t           spqcd.mu = 0;\n\t          } else {\n\t           spqcd.epsilon = data[j] >> 3;\n\t           spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n\t           j += 2;\n\t          }\n\t          spqcds.push(spqcd);\n\t         }\n\t         qcd.SPqcds = spqcds;\n\t         if (context.mainHeader) {\n\t          context.QCD = qcd;\n\t         } else {\n\t          context.currentTile.QCD = qcd;\n\t          context.currentTile.QCC = [];\n\t         }\n\t         break;\n\t        case 0xFF5D:\n\t         length = readUint16(data, position);\n\t         var qcc = {};\n\t         j = position + 2;\n\t         var cqcc;\n\t         if (context.SIZ.Csiz < 257) {\n\t          cqcc = data[j++];\n\t         } else {\n\t          cqcc = readUint16(data, j);\n\t          j += 2;\n\t         }\n\t         sqcd = data[j++];\n\t         switch (sqcd & 0x1F) {\n\t         case 0:\n\t          spqcdSize = 8;\n\t          scalarExpounded = true;\n\t          break;\n\t         case 1:\n\t          spqcdSize = 16;\n\t          scalarExpounded = false;\n\t          break;\n\t         case 2:\n\t          spqcdSize = 16;\n\t          scalarExpounded = true;\n\t          break;\n\t         default:\n\t          throw new Error('Invalid SQcd value ' + sqcd);\n\t         }\n\t         qcc.noQuantization = spqcdSize === 8;\n\t         qcc.scalarExpounded = scalarExpounded;\n\t         qcc.guardBits = sqcd >> 5;\n\t         spqcds = [];\n\t         while (j < length + position) {\n\t          spqcd = {};\n\t          if (spqcdSize === 8) {\n\t           spqcd.epsilon = data[j++] >> 3;\n\t           spqcd.mu = 0;\n\t          } else {\n\t           spqcd.epsilon = data[j] >> 3;\n\t           spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n\t           j += 2;\n\t          }\n\t          spqcds.push(spqcd);\n\t         }\n\t         qcc.SPqcds = spqcds;\n\t         if (context.mainHeader) {\n\t          context.QCC[cqcc] = qcc;\n\t         } else {\n\t          context.currentTile.QCC[cqcc] = qcc;\n\t         }\n\t         break;\n\t        case 0xFF52:\n\t         length = readUint16(data, position);\n\t         var cod = {};\n\t         j = position + 2;\n\t         var scod = data[j++];\n\t         cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n\t         cod.sopMarkerUsed = !!(scod & 2);\n\t         cod.ephMarkerUsed = !!(scod & 4);\n\t         cod.progressionOrder = data[j++];\n\t         cod.layersCount = readUint16(data, j);\n\t         j += 2;\n\t         cod.multipleComponentTransform = data[j++];\n\t         cod.decompositionLevelsCount = data[j++];\n\t         cod.xcb = (data[j++] & 0xF) + 2;\n\t         cod.ycb = (data[j++] & 0xF) + 2;\n\t         var blockStyle = data[j++];\n\t         cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n\t         cod.resetContextProbabilities = !!(blockStyle & 2);\n\t         cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n\t         cod.verticalyStripe = !!(blockStyle & 8);\n\t         cod.predictableTermination = !!(blockStyle & 16);\n\t         cod.segmentationSymbolUsed = !!(blockStyle & 32);\n\t         cod.reversibleTransformation = data[j++];\n\t         if (cod.entropyCoderWithCustomPrecincts) {\n\t          var precinctsSizes = [];\n\t          while (j < length + position) {\n\t           var precinctsSize = data[j++];\n\t           precinctsSizes.push({\n\t            PPx: precinctsSize & 0xF,\n\t            PPy: precinctsSize >> 4\n\t           });\n\t          }\n\t          cod.precinctsSizes = precinctsSizes;\n\t         }\n\t         var unsupported = [];\n\t         if (cod.selectiveArithmeticCodingBypass) {\n\t          unsupported.push('selectiveArithmeticCodingBypass');\n\t         }\n\t         if (cod.resetContextProbabilities) {\n\t          unsupported.push('resetContextProbabilities');\n\t         }\n\t         if (cod.terminationOnEachCodingPass) {\n\t          unsupported.push('terminationOnEachCodingPass');\n\t         }\n\t         if (cod.verticalyStripe) {\n\t          unsupported.push('verticalyStripe');\n\t         }\n\t         if (cod.predictableTermination) {\n\t          unsupported.push('predictableTermination');\n\t         }\n\t         if (unsupported.length > 0) {\n\t          doNotRecover = true;\n\t          throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\n\t         }\n\t         if (context.mainHeader) {\n\t          context.COD = cod;\n\t         } else {\n\t          context.currentTile.COD = cod;\n\t          context.currentTile.COC = [];\n\t         }\n\t         break;\n\t        case 0xFF90:\n\t         length = readUint16(data, position);\n\t         tile = {};\n\t         tile.index = readUint16(data, position + 2);\n\t         tile.length = readUint32(data, position + 4);\n\t         tile.dataEnd = tile.length + position - 2;\n\t         tile.partIndex = data[position + 8];\n\t         tile.partsCount = data[position + 9];\n\t         context.mainHeader = false;\n\t         if (tile.partIndex === 0) {\n\t          tile.COD = context.COD;\n\t          tile.COC = context.COC.slice(0);\n\t          tile.QCD = context.QCD;\n\t          tile.QCC = context.QCC.slice(0);\n\t         }\n\t         context.currentTile = tile;\n\t         break;\n\t        case 0xFF93:\n\t         tile = context.currentTile;\n\t         if (tile.partIndex === 0) {\n\t          initializeTile(context, tile.index);\n\t          buildPackets(context);\n\t         }\n\t         length = tile.dataEnd - position;\n\t         parseTilePackets(context, data, position, length);\n\t         break;\n\t        case 0xFF55:\n\t        case 0xFF57:\n\t        case 0xFF58:\n\t        case 0xFF64:\n\t         length = readUint16(data, position);\n\t         break;\n\t        case 0xFF53:\n\t         throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\n\t        default:\n\t         throw new Error('Unknown codestream code: ' + code.toString(16));\n\t        }\n\t        position += length;\n\t       }\n\t      } catch (e) {\n\t       if (doNotRecover || this.failOnCorruptedImage) {\n\t        error('JPX Error: ' + e.message);\n\t       } else {\n\t        warn('JPX: Trying to recover from: ' + e.message);\n\t       }\n\t      }\n\t      this.tiles = transformComponents(context);\n\t      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n\t      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n\t      this.componentsCount = context.SIZ.Csiz;\n\t     }\n\t    };\n\t    function calculateComponentDimensions(component, siz) {\n\t     component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n\t     component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n\t     component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n\t     component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n\t     component.width = component.x1 - component.x0;\n\t     component.height = component.y1 - component.y0;\n\t    }\n\t    function calculateTileGrids(context, components) {\n\t     var siz = context.SIZ;\n\t     var tile, tiles = [];\n\t     var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n\t     var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n\t     for (var q = 0; q < numYtiles; q++) {\n\t      for (var p = 0; p < numXtiles; p++) {\n\t       tile = {};\n\t       tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n\t       tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n\t       tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n\t       tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n\t       tile.width = tile.tx1 - tile.tx0;\n\t       tile.height = tile.ty1 - tile.ty0;\n\t       tile.components = [];\n\t       tiles.push(tile);\n\t      }\n\t     }\n\t     context.tiles = tiles;\n\t     var componentsCount = siz.Csiz;\n\t     for (var i = 0, ii = componentsCount; i < ii; i++) {\n\t      var component = components[i];\n\t      for (var j = 0, jj = tiles.length; j < jj; j++) {\n\t       var tileComponent = {};\n\t       tile = tiles[j];\n\t       tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n\t       tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n\t       tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n\t       tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n\t       tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n\t       tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n\t       tile.components[i] = tileComponent;\n\t      }\n\t     }\n\t    }\n\t    function getBlocksDimensions(context, component, r) {\n\t     var codOrCoc = component.codingStyleParameters;\n\t     var result = {};\n\t     if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n\t      result.PPx = 15;\n\t      result.PPy = 15;\n\t     } else {\n\t      result.PPx = codOrCoc.precinctsSizes[r].PPx;\n\t      result.PPy = codOrCoc.precinctsSizes[r].PPy;\n\t     }\n\t     result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n\t     result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n\t     return result;\n\t    }\n\t    function buildPrecincts(context, resolution, dimensions) {\n\t     var precinctWidth = 1 << dimensions.PPx;\n\t     var precinctHeight = 1 << dimensions.PPy;\n\t     var isZeroRes = resolution.resLevel === 0;\n\t     var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n\t     var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n\t     var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n\t     var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n\t     var numprecincts = numprecinctswide * numprecinctshigh;\n\t     resolution.precinctParameters = {\n\t      precinctWidth: precinctWidth,\n\t      precinctHeight: precinctHeight,\n\t      numprecinctswide: numprecinctswide,\n\t      numprecinctshigh: numprecinctshigh,\n\t      numprecincts: numprecincts,\n\t      precinctWidthInSubband: precinctWidthInSubband,\n\t      precinctHeightInSubband: precinctHeightInSubband\n\t     };\n\t    }\n\t    function buildCodeblocks(context, subband, dimensions) {\n\t     var xcb_ = dimensions.xcb_;\n\t     var ycb_ = dimensions.ycb_;\n\t     var codeblockWidth = 1 << xcb_;\n\t     var codeblockHeight = 1 << ycb_;\n\t     var cbx0 = subband.tbx0 >> xcb_;\n\t     var cby0 = subband.tby0 >> ycb_;\n\t     var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n\t     var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n\t     var precinctParameters = subband.resolution.precinctParameters;\n\t     var codeblocks = [];\n\t     var precincts = [];\n\t     var i, j, codeblock, precinctNumber;\n\t     for (j = cby0; j < cby1; j++) {\n\t      for (i = cbx0; i < cbx1; i++) {\n\t       codeblock = {\n\t        cbx: i,\n\t        cby: j,\n\t        tbx0: codeblockWidth * i,\n\t        tby0: codeblockHeight * j,\n\t        tbx1: codeblockWidth * (i + 1),\n\t        tby1: codeblockHeight * (j + 1)\n\t       };\n\t       codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n\t       codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n\t       codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n\t       codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n\t       var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n\t       var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n\t       precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n\t       codeblock.precinctNumber = precinctNumber;\n\t       codeblock.subbandType = subband.type;\n\t       codeblock.Lblock = 3;\n\t       if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n\t        continue;\n\t       }\n\t       codeblocks.push(codeblock);\n\t       var precinct = precincts[precinctNumber];\n\t       if (precinct !== undefined) {\n\t        if (i < precinct.cbxMin) {\n\t         precinct.cbxMin = i;\n\t        } else if (i > precinct.cbxMax) {\n\t         precinct.cbxMax = i;\n\t        }\n\t        if (j < precinct.cbyMin) {\n\t         precinct.cbxMin = j;\n\t        } else if (j > precinct.cbyMax) {\n\t         precinct.cbyMax = j;\n\t        }\n\t       } else {\n\t        precincts[precinctNumber] = precinct = {\n\t         cbxMin: i,\n\t         cbyMin: j,\n\t         cbxMax: i,\n\t         cbyMax: j\n\t        };\n\t       }\n\t       codeblock.precinct = precinct;\n\t      }\n\t     }\n\t     subband.codeblockParameters = {\n\t      codeblockWidth: xcb_,\n\t      codeblockHeight: ycb_,\n\t      numcodeblockwide: cbx1 - cbx0 + 1,\n\t      numcodeblockhigh: cby1 - cby0 + 1\n\t     };\n\t     subband.codeblocks = codeblocks;\n\t     subband.precincts = precincts;\n\t    }\n\t    function createPacket(resolution, precinctNumber, layerNumber) {\n\t     var precinctCodeblocks = [];\n\t     var subbands = resolution.subbands;\n\t     for (var i = 0, ii = subbands.length; i < ii; i++) {\n\t      var subband = subbands[i];\n\t      var codeblocks = subband.codeblocks;\n\t      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n\t       var codeblock = codeblocks[j];\n\t       if (codeblock.precinctNumber !== precinctNumber) {\n\t        continue;\n\t       }\n\t       precinctCodeblocks.push(codeblock);\n\t      }\n\t     }\n\t     return {\n\t      layerNumber: layerNumber,\n\t      codeblocks: precinctCodeblocks\n\t     };\n\t    }\n\t    function LayerResolutionComponentPositionIterator(context) {\n\t     var siz = context.SIZ;\n\t     var tileIndex = context.currentTile.index;\n\t     var tile = context.tiles[tileIndex];\n\t     var layersCount = tile.codingStyleDefaultParameters.layersCount;\n\t     var componentsCount = siz.Csiz;\n\t     var maxDecompositionLevelsCount = 0;\n\t     for (var q = 0; q < componentsCount; q++) {\n\t      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n\t     }\n\t     var l = 0, r = 0, i = 0, k = 0;\n\t     this.nextPacket = function JpxImage_nextPacket() {\n\t      for (; l < layersCount; l++) {\n\t       for (; r <= maxDecompositionLevelsCount; r++) {\n\t        for (; i < componentsCount; i++) {\n\t         var component = tile.components[i];\n\t         if (r > component.codingStyleParameters.decompositionLevelsCount) {\n\t          continue;\n\t         }\n\t         var resolution = component.resolutions[r];\n\t         var numprecincts = resolution.precinctParameters.numprecincts;\n\t         for (; k < numprecincts;) {\n\t          var packet = createPacket(resolution, k, l);\n\t          k++;\n\t          return packet;\n\t         }\n\t         k = 0;\n\t        }\n\t        i = 0;\n\t       }\n\t       r = 0;\n\t      }\n\t      error('JPX Error: Out of packets');\n\t     };\n\t    }\n\t    function ResolutionLayerComponentPositionIterator(context) {\n\t     var siz = context.SIZ;\n\t     var tileIndex = context.currentTile.index;\n\t     var tile = context.tiles[tileIndex];\n\t     var layersCount = tile.codingStyleDefaultParameters.layersCount;\n\t     var componentsCount = siz.Csiz;\n\t     var maxDecompositionLevelsCount = 0;\n\t     for (var q = 0; q < componentsCount; q++) {\n\t      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n\t     }\n\t     var r = 0, l = 0, i = 0, k = 0;\n\t     this.nextPacket = function JpxImage_nextPacket() {\n\t      for (; r <= maxDecompositionLevelsCount; r++) {\n\t       for (; l < layersCount; l++) {\n\t        for (; i < componentsCount; i++) {\n\t         var component = tile.components[i];\n\t         if (r > component.codingStyleParameters.decompositionLevelsCount) {\n\t          continue;\n\t         }\n\t         var resolution = component.resolutions[r];\n\t         var numprecincts = resolution.precinctParameters.numprecincts;\n\t         for (; k < numprecincts;) {\n\t          var packet = createPacket(resolution, k, l);\n\t          k++;\n\t          return packet;\n\t         }\n\t         k = 0;\n\t        }\n\t        i = 0;\n\t       }\n\t       l = 0;\n\t      }\n\t      error('JPX Error: Out of packets');\n\t     };\n\t    }\n\t    function ResolutionPositionComponentLayerIterator(context) {\n\t     var siz = context.SIZ;\n\t     var tileIndex = context.currentTile.index;\n\t     var tile = context.tiles[tileIndex];\n\t     var layersCount = tile.codingStyleDefaultParameters.layersCount;\n\t     var componentsCount = siz.Csiz;\n\t     var l, r, c, p;\n\t     var maxDecompositionLevelsCount = 0;\n\t     for (c = 0; c < componentsCount; c++) {\n\t      var component = tile.components[c];\n\t      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n\t     }\n\t     var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n\t     for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n\t      var maxNumPrecincts = 0;\n\t      for (c = 0; c < componentsCount; ++c) {\n\t       var resolutions = tile.components[c].resolutions;\n\t       if (r < resolutions.length) {\n\t        maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n\t       }\n\t      }\n\t      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n\t     }\n\t     l = 0;\n\t     r = 0;\n\t     c = 0;\n\t     p = 0;\n\t     this.nextPacket = function JpxImage_nextPacket() {\n\t      for (; r <= maxDecompositionLevelsCount; r++) {\n\t       for (; p < maxNumPrecinctsInLevel[r]; p++) {\n\t        for (; c < componentsCount; c++) {\n\t         var component = tile.components[c];\n\t         if (r > component.codingStyleParameters.decompositionLevelsCount) {\n\t          continue;\n\t         }\n\t         var resolution = component.resolutions[r];\n\t         var numprecincts = resolution.precinctParameters.numprecincts;\n\t         if (p >= numprecincts) {\n\t          continue;\n\t         }\n\t         for (; l < layersCount;) {\n\t          var packet = createPacket(resolution, p, l);\n\t          l++;\n\t          return packet;\n\t         }\n\t         l = 0;\n\t        }\n\t        c = 0;\n\t       }\n\t       p = 0;\n\t      }\n\t      error('JPX Error: Out of packets');\n\t     };\n\t    }\n\t    function PositionComponentResolutionLayerIterator(context) {\n\t     var siz = context.SIZ;\n\t     var tileIndex = context.currentTile.index;\n\t     var tile = context.tiles[tileIndex];\n\t     var layersCount = tile.codingStyleDefaultParameters.layersCount;\n\t     var componentsCount = siz.Csiz;\n\t     var precinctsSizes = getPrecinctSizesInImageScale(tile);\n\t     var precinctsIterationSizes = precinctsSizes;\n\t     var l = 0, r = 0, c = 0, px = 0, py = 0;\n\t     this.nextPacket = function JpxImage_nextPacket() {\n\t      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n\t       for (; px < precinctsIterationSizes.maxNumWide; px++) {\n\t        for (; c < componentsCount; c++) {\n\t         var component = tile.components[c];\n\t         var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n\t         for (; r <= decompositionLevelsCount; r++) {\n\t          var resolution = component.resolutions[r];\n\t          var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n\t          var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n\t          if (k === null) {\n\t           continue;\n\t          }\n\t          for (; l < layersCount;) {\n\t           var packet = createPacket(resolution, k, l);\n\t           l++;\n\t           return packet;\n\t          }\n\t          l = 0;\n\t         }\n\t         r = 0;\n\t        }\n\t        c = 0;\n\t       }\n\t       px = 0;\n\t      }\n\t      error('JPX Error: Out of packets');\n\t     };\n\t    }\n\t    function ComponentPositionResolutionLayerIterator(context) {\n\t     var siz = context.SIZ;\n\t     var tileIndex = context.currentTile.index;\n\t     var tile = context.tiles[tileIndex];\n\t     var layersCount = tile.codingStyleDefaultParameters.layersCount;\n\t     var componentsCount = siz.Csiz;\n\t     var precinctsSizes = getPrecinctSizesInImageScale(tile);\n\t     var l = 0, r = 0, c = 0, px = 0, py = 0;\n\t     this.nextPacket = function JpxImage_nextPacket() {\n\t      for (; c < componentsCount; ++c) {\n\t       var component = tile.components[c];\n\t       var precinctsIterationSizes = precinctsSizes.components[c];\n\t       var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n\t       for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n\t        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n\t         for (; r <= decompositionLevelsCount; r++) {\n\t          var resolution = component.resolutions[r];\n\t          var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n\t          var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n\t          if (k === null) {\n\t           continue;\n\t          }\n\t          for (; l < layersCount;) {\n\t           var packet = createPacket(resolution, k, l);\n\t           l++;\n\t           return packet;\n\t          }\n\t          l = 0;\n\t         }\n\t         r = 0;\n\t        }\n\t        px = 0;\n\t       }\n\t       py = 0;\n\t      }\n\t      error('JPX Error: Out of packets');\n\t     };\n\t    }\n\t    function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n\t     var posX = pxIndex * precinctIterationSizes.minWidth;\n\t     var posY = pyIndex * precinctIterationSizes.minHeight;\n\t     if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n\t      return null;\n\t     }\n\t     var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n\t     return posX / sizeInImageScale.height + startPrecinctRowIndex;\n\t    }\n\t    function getPrecinctSizesInImageScale(tile) {\n\t     var componentsCount = tile.components.length;\n\t     var minWidth = Number.MAX_VALUE;\n\t     var minHeight = Number.MAX_VALUE;\n\t     var maxNumWide = 0;\n\t     var maxNumHigh = 0;\n\t     var sizePerComponent = new Array(componentsCount);\n\t     for (var c = 0; c < componentsCount; c++) {\n\t      var component = tile.components[c];\n\t      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n\t      var sizePerResolution = new Array(decompositionLevelsCount + 1);\n\t      var minWidthCurrentComponent = Number.MAX_VALUE;\n\t      var minHeightCurrentComponent = Number.MAX_VALUE;\n\t      var maxNumWideCurrentComponent = 0;\n\t      var maxNumHighCurrentComponent = 0;\n\t      var scale = 1;\n\t      for (var r = decompositionLevelsCount; r >= 0; --r) {\n\t       var resolution = component.resolutions[r];\n\t       var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n\t       var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n\t       minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n\t       minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n\t       maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n\t       maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n\t       sizePerResolution[r] = {\n\t        width: widthCurrentResolution,\n\t        height: heightCurrentResolution\n\t       };\n\t       scale <<= 1;\n\t      }\n\t      minWidth = Math.min(minWidth, minWidthCurrentComponent);\n\t      minHeight = Math.min(minHeight, minHeightCurrentComponent);\n\t      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n\t      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n\t      sizePerComponent[c] = {\n\t       resolutions: sizePerResolution,\n\t       minWidth: minWidthCurrentComponent,\n\t       minHeight: minHeightCurrentComponent,\n\t       maxNumWide: maxNumWideCurrentComponent,\n\t       maxNumHigh: maxNumHighCurrentComponent\n\t      };\n\t     }\n\t     return {\n\t      components: sizePerComponent,\n\t      minWidth: minWidth,\n\t      minHeight: minHeight,\n\t      maxNumWide: maxNumWide,\n\t      maxNumHigh: maxNumHigh\n\t     };\n\t    }\n\t    function buildPackets(context) {\n\t     var siz = context.SIZ;\n\t     var tileIndex = context.currentTile.index;\n\t     var tile = context.tiles[tileIndex];\n\t     var componentsCount = siz.Csiz;\n\t     for (var c = 0; c < componentsCount; c++) {\n\t      var component = tile.components[c];\n\t      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n\t      var resolutions = [];\n\t      var subbands = [];\n\t      for (var r = 0; r <= decompositionLevelsCount; r++) {\n\t       var blocksDimensions = getBlocksDimensions(context, component, r);\n\t       var resolution = {};\n\t       var scale = 1 << decompositionLevelsCount - r;\n\t       resolution.trx0 = Math.ceil(component.tcx0 / scale);\n\t       resolution.try0 = Math.ceil(component.tcy0 / scale);\n\t       resolution.trx1 = Math.ceil(component.tcx1 / scale);\n\t       resolution.try1 = Math.ceil(component.tcy1 / scale);\n\t       resolution.resLevel = r;\n\t       buildPrecincts(context, resolution, blocksDimensions);\n\t       resolutions.push(resolution);\n\t       var subband;\n\t       if (r === 0) {\n\t        subband = {};\n\t        subband.type = 'LL';\n\t        subband.tbx0 = Math.ceil(component.tcx0 / scale);\n\t        subband.tby0 = Math.ceil(component.tcy0 / scale);\n\t        subband.tbx1 = Math.ceil(component.tcx1 / scale);\n\t        subband.tby1 = Math.ceil(component.tcy1 / scale);\n\t        subband.resolution = resolution;\n\t        buildCodeblocks(context, subband, blocksDimensions);\n\t        subbands.push(subband);\n\t        resolution.subbands = [subband];\n\t       } else {\n\t        var bscale = 1 << decompositionLevelsCount - r + 1;\n\t        var resolutionSubbands = [];\n\t        subband = {};\n\t        subband.type = 'HL';\n\t        subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n\t        subband.tby0 = Math.ceil(component.tcy0 / bscale);\n\t        subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n\t        subband.tby1 = Math.ceil(component.tcy1 / bscale);\n\t        subband.resolution = resolution;\n\t        buildCodeblocks(context, subband, blocksDimensions);\n\t        subbands.push(subband);\n\t        resolutionSubbands.push(subband);\n\t        subband = {};\n\t        subband.type = 'LH';\n\t        subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n\t        subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n\t        subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n\t        subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n\t        subband.resolution = resolution;\n\t        buildCodeblocks(context, subband, blocksDimensions);\n\t        subbands.push(subband);\n\t        resolutionSubbands.push(subband);\n\t        subband = {};\n\t        subband.type = 'HH';\n\t        subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n\t        subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n\t        subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n\t        subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n\t        subband.resolution = resolution;\n\t        buildCodeblocks(context, subband, blocksDimensions);\n\t        subbands.push(subband);\n\t        resolutionSubbands.push(subband);\n\t        resolution.subbands = resolutionSubbands;\n\t       }\n\t      }\n\t      component.resolutions = resolutions;\n\t      component.subbands = subbands;\n\t     }\n\t     var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n\t     switch (progressionOrder) {\n\t     case 0:\n\t      tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n\t      break;\n\t     case 1:\n\t      tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n\t      break;\n\t     case 2:\n\t      tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n\t      break;\n\t     case 3:\n\t      tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n\t      break;\n\t     case 4:\n\t      tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n\t      break;\n\t     default:\n\t      error('JPX Error: Unsupported progression order ' + progressionOrder);\n\t     }\n\t    }\n\t    function parseTilePackets(context, data, offset, dataLength) {\n\t     var position = 0;\n\t     var buffer, bufferSize = 0, skipNextBit = false;\n\t     function readBits(count) {\n\t      while (bufferSize < count) {\n\t       var b = data[offset + position];\n\t       position++;\n\t       if (skipNextBit) {\n\t        buffer = buffer << 7 | b;\n\t        bufferSize += 7;\n\t        skipNextBit = false;\n\t       } else {\n\t        buffer = buffer << 8 | b;\n\t        bufferSize += 8;\n\t       }\n\t       if (b === 0xFF) {\n\t        skipNextBit = true;\n\t       }\n\t      }\n\t      bufferSize -= count;\n\t      return buffer >>> bufferSize & (1 << count) - 1;\n\t     }\n\t     function skipMarkerIfEqual(value) {\n\t      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\n\t       skipBytes(1);\n\t       return true;\n\t      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\n\t       skipBytes(2);\n\t       return true;\n\t      }\n\t      return false;\n\t     }\n\t     function skipBytes(count) {\n\t      position += count;\n\t     }\n\t     function alignToByte() {\n\t      bufferSize = 0;\n\t      if (skipNextBit) {\n\t       position++;\n\t       skipNextBit = false;\n\t      }\n\t     }\n\t     function readCodingpasses() {\n\t      if (readBits(1) === 0) {\n\t       return 1;\n\t      }\n\t      if (readBits(1) === 0) {\n\t       return 2;\n\t      }\n\t      var value = readBits(2);\n\t      if (value < 3) {\n\t       return value + 3;\n\t      }\n\t      value = readBits(5);\n\t      if (value < 31) {\n\t       return value + 6;\n\t      }\n\t      value = readBits(7);\n\t      return value + 37;\n\t     }\n\t     var tileIndex = context.currentTile.index;\n\t     var tile = context.tiles[tileIndex];\n\t     var sopMarkerUsed = context.COD.sopMarkerUsed;\n\t     var ephMarkerUsed = context.COD.ephMarkerUsed;\n\t     var packetsIterator = tile.packetsIterator;\n\t     while (position < dataLength) {\n\t      alignToByte();\n\t      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n\t       skipBytes(4);\n\t      }\n\t      var packet = packetsIterator.nextPacket();\n\t      if (!readBits(1)) {\n\t       continue;\n\t      }\n\t      var layerNumber = packet.layerNumber;\n\t      var queue = [], codeblock;\n\t      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n\t       codeblock = packet.codeblocks[i];\n\t       var precinct = codeblock.precinct;\n\t       var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n\t       var codeblockRow = codeblock.cby - precinct.cbyMin;\n\t       var codeblockIncluded = false;\n\t       var firstTimeInclusion = false;\n\t       var valueReady;\n\t       if (codeblock['included'] !== undefined) {\n\t        codeblockIncluded = !!readBits(1);\n\t       } else {\n\t        precinct = codeblock.precinct;\n\t        var inclusionTree, zeroBitPlanesTree;\n\t        if (precinct['inclusionTree'] !== undefined) {\n\t         inclusionTree = precinct.inclusionTree;\n\t        } else {\n\t         var width = precinct.cbxMax - precinct.cbxMin + 1;\n\t         var height = precinct.cbyMax - precinct.cbyMin + 1;\n\t         inclusionTree = new InclusionTree(width, height, layerNumber);\n\t         zeroBitPlanesTree = new TagTree(width, height);\n\t         precinct.inclusionTree = inclusionTree;\n\t         precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n\t        }\n\t        if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n\t         while (true) {\n\t          if (readBits(1)) {\n\t           valueReady = !inclusionTree.nextLevel();\n\t           if (valueReady) {\n\t            codeblock.included = true;\n\t            codeblockIncluded = firstTimeInclusion = true;\n\t            break;\n\t           }\n\t          } else {\n\t           inclusionTree.incrementValue(layerNumber);\n\t           break;\n\t          }\n\t         }\n\t        }\n\t       }\n\t       if (!codeblockIncluded) {\n\t        continue;\n\t       }\n\t       if (firstTimeInclusion) {\n\t        zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n\t        zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n\t        while (true) {\n\t         if (readBits(1)) {\n\t          valueReady = !zeroBitPlanesTree.nextLevel();\n\t          if (valueReady) {\n\t           break;\n\t          }\n\t         } else {\n\t          zeroBitPlanesTree.incrementValue();\n\t         }\n\t        }\n\t        codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n\t       }\n\t       var codingpasses = readCodingpasses();\n\t       while (readBits(1)) {\n\t        codeblock.Lblock++;\n\t       }\n\t       var codingpassesLog2 = log2(codingpasses);\n\t       var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n\t       var codedDataLength = readBits(bits);\n\t       queue.push({\n\t        codeblock: codeblock,\n\t        codingpasses: codingpasses,\n\t        dataLength: codedDataLength\n\t       });\n\t      }\n\t      alignToByte();\n\t      if (ephMarkerUsed) {\n\t       skipMarkerIfEqual(0x92);\n\t      }\n\t      while (queue.length > 0) {\n\t       var packetItem = queue.shift();\n\t       codeblock = packetItem.codeblock;\n\t       if (codeblock['data'] === undefined) {\n\t        codeblock.data = [];\n\t       }\n\t       codeblock.data.push({\n\t        data: data,\n\t        start: offset + position,\n\t        end: offset + position + packetItem.dataLength,\n\t        codingpasses: packetItem.codingpasses\n\t       });\n\t       position += packetItem.dataLength;\n\t      }\n\t     }\n\t     return position;\n\t    }\n\t    function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n\t     var x0 = subband.tbx0;\n\t     var y0 = subband.tby0;\n\t     var width = subband.tbx1 - subband.tbx0;\n\t     var codeblocks = subband.codeblocks;\n\t     var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n\t     var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n\t     for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n\t      var codeblock = codeblocks[i];\n\t      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n\t      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n\t      if (blockWidth === 0 || blockHeight === 0) {\n\t       continue;\n\t      }\n\t      if (codeblock['data'] === undefined) {\n\t       continue;\n\t      }\n\t      var bitModel, currentCodingpassType;\n\t      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n\t      currentCodingpassType = 2;\n\t      var data = codeblock.data, totalLength = 0, codingpasses = 0;\n\t      var j, jj, dataItem;\n\t      for (j = 0, jj = data.length; j < jj; j++) {\n\t       dataItem = data[j];\n\t       totalLength += dataItem.end - dataItem.start;\n\t       codingpasses += dataItem.codingpasses;\n\t      }\n\t      var encodedData = new Uint8Array(totalLength);\n\t      var position = 0;\n\t      for (j = 0, jj = data.length; j < jj; j++) {\n\t       dataItem = data[j];\n\t       var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n\t       encodedData.set(chunk, position);\n\t       position += chunk.length;\n\t      }\n\t      var decoder = new ArithmeticDecoder(encodedData, 0, totalLength);\n\t      bitModel.setDecoder(decoder);\n\t      for (j = 0; j < codingpasses; j++) {\n\t       switch (currentCodingpassType) {\n\t       case 0:\n\t        bitModel.runSignificancePropagationPass();\n\t        break;\n\t       case 1:\n\t        bitModel.runMagnitudeRefinementPass();\n\t        break;\n\t       case 2:\n\t        bitModel.runCleanupPass();\n\t        if (segmentationSymbolUsed) {\n\t         bitModel.checkSegmentationSymbol();\n\t        }\n\t        break;\n\t       }\n\t       currentCodingpassType = (currentCodingpassType + 1) % 3;\n\t      }\n\t      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n\t      var sign = bitModel.coefficentsSign;\n\t      var magnitude = bitModel.coefficentsMagnitude;\n\t      var bitsDecoded = bitModel.bitsDecoded;\n\t      var magnitudeCorrection = reversible ? 0 : 0.5;\n\t      var k, n, nb;\n\t      position = 0;\n\t      var interleave = subband.type !== 'LL';\n\t      for (j = 0; j < blockHeight; j++) {\n\t       var row = offset / width | 0;\n\t       var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n\t       for (k = 0; k < blockWidth; k++) {\n\t        n = magnitude[position];\n\t        if (n !== 0) {\n\t         n = (n + magnitudeCorrection) * delta;\n\t         if (sign[position] !== 0) {\n\t          n = -n;\n\t         }\n\t         nb = bitsDecoded[position];\n\t         var pos = interleave ? levelOffset + (offset << 1) : offset;\n\t         if (reversible && nb >= mb) {\n\t          coefficients[pos] = n;\n\t         } else {\n\t          coefficients[pos] = n * (1 << mb - nb);\n\t         }\n\t        }\n\t        offset++;\n\t        position++;\n\t       }\n\t       offset += width - blockWidth;\n\t      }\n\t     }\n\t    }\n\t    function transformTile(context, tile, c) {\n\t     var component = tile.components[c];\n\t     var codingStyleParameters = component.codingStyleParameters;\n\t     var quantizationParameters = component.quantizationParameters;\n\t     var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n\t     var spqcds = quantizationParameters.SPqcds;\n\t     var scalarExpounded = quantizationParameters.scalarExpounded;\n\t     var guardBits = quantizationParameters.guardBits;\n\t     var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n\t     var precision = context.components[c].precision;\n\t     var reversible = codingStyleParameters.reversibleTransformation;\n\t     var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n\t     var subbandCoefficients = [];\n\t     var b = 0;\n\t     for (var i = 0; i <= decompositionLevelsCount; i++) {\n\t      var resolution = component.resolutions[i];\n\t      var width = resolution.trx1 - resolution.trx0;\n\t      var height = resolution.try1 - resolution.try0;\n\t      var coefficients = new Float32Array(width * height);\n\t      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n\t       var mu, epsilon;\n\t       if (!scalarExpounded) {\n\t        mu = spqcds[0].mu;\n\t        epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n\t       } else {\n\t        mu = spqcds[b].mu;\n\t        epsilon = spqcds[b].epsilon;\n\t        b++;\n\t       }\n\t       var subband = resolution.subbands[j];\n\t       var gainLog2 = SubbandsGainLog2[subband.type];\n\t       var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n\t       var mb = guardBits + epsilon - 1;\n\t       copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n\t      }\n\t      subbandCoefficients.push({\n\t       width: width,\n\t       height: height,\n\t       items: coefficients\n\t      });\n\t     }\n\t     var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n\t     return {\n\t      left: component.tcx0,\n\t      top: component.tcy0,\n\t      width: result.width,\n\t      height: result.height,\n\t      items: result.items\n\t     };\n\t    }\n\t    function transformComponents(context) {\n\t     var siz = context.SIZ;\n\t     var components = context.components;\n\t     var componentsCount = siz.Csiz;\n\t     var resultImages = [];\n\t     for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n\t      var tile = context.tiles[i];\n\t      var transformedTiles = [];\n\t      var c;\n\t      for (c = 0; c < componentsCount; c++) {\n\t       transformedTiles[c] = transformTile(context, tile, c);\n\t      }\n\t      var tile0 = transformedTiles[0];\n\t      var out = new Uint8Array(tile0.items.length * componentsCount);\n\t      var result = {\n\t       left: tile0.left,\n\t       top: tile0.top,\n\t       width: tile0.width,\n\t       height: tile0.height,\n\t       items: out\n\t      };\n\t      var shift, offset, max, min, maxK;\n\t      var pos = 0, j, jj, y0, y1, y2, r, g, b, k, val;\n\t      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n\t       var fourComponents = componentsCount === 4;\n\t       var y0items = transformedTiles[0].items;\n\t       var y1items = transformedTiles[1].items;\n\t       var y2items = transformedTiles[2].items;\n\t       var y3items = fourComponents ? transformedTiles[3].items : null;\n\t       shift = components[0].precision - 8;\n\t       offset = (128 << shift) + 0.5;\n\t       max = 255 * (1 << shift);\n\t       maxK = max * 0.5;\n\t       min = -maxK;\n\t       var component0 = tile.components[0];\n\t       var alpha01 = componentsCount - 3;\n\t       jj = y0items.length;\n\t       if (!component0.codingStyleParameters.reversibleTransformation) {\n\t        for (j = 0; j < jj; j++, pos += alpha01) {\n\t         y0 = y0items[j] + offset;\n\t         y1 = y1items[j];\n\t         y2 = y2items[j];\n\t         r = y0 + 1.402 * y2;\n\t         g = y0 - 0.34413 * y1 - 0.71414 * y2;\n\t         b = y0 + 1.772 * y1;\n\t         out[pos++] = r <= 0 ? 0 : r >= max ? 255 : r >> shift;\n\t         out[pos++] = g <= 0 ? 0 : g >= max ? 255 : g >> shift;\n\t         out[pos++] = b <= 0 ? 0 : b >= max ? 255 : b >> shift;\n\t        }\n\t       } else {\n\t        for (j = 0; j < jj; j++, pos += alpha01) {\n\t         y0 = y0items[j] + offset;\n\t         y1 = y1items[j];\n\t         y2 = y2items[j];\n\t         g = y0 - (y2 + y1 >> 2);\n\t         r = g + y2;\n\t         b = g + y1;\n\t         out[pos++] = r <= 0 ? 0 : r >= max ? 255 : r >> shift;\n\t         out[pos++] = g <= 0 ? 0 : g >= max ? 255 : g >> shift;\n\t         out[pos++] = b <= 0 ? 0 : b >= max ? 255 : b >> shift;\n\t        }\n\t       }\n\t       if (fourComponents) {\n\t        for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n\t         k = y3items[j];\n\t         out[pos] = k <= min ? 0 : k >= maxK ? 255 : k + offset >> shift;\n\t        }\n\t       }\n\t      } else {\n\t       for (c = 0; c < componentsCount; c++) {\n\t        var items = transformedTiles[c].items;\n\t        shift = components[c].precision - 8;\n\t        offset = (128 << shift) + 0.5;\n\t        max = 127.5 * (1 << shift);\n\t        min = -max;\n\t        for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n\t         val = items[j];\n\t         out[pos] = val <= min ? 0 : val >= max ? 255 : val + offset >> shift;\n\t         pos += componentsCount;\n\t        }\n\t       }\n\t      }\n\t      resultImages.push(result);\n\t     }\n\t     return resultImages;\n\t    }\n\t    function initializeTile(context, tileIndex) {\n\t     var siz = context.SIZ;\n\t     var componentsCount = siz.Csiz;\n\t     var tile = context.tiles[tileIndex];\n\t     for (var c = 0; c < componentsCount; c++) {\n\t      var component = tile.components[c];\n\t      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n\t      component.quantizationParameters = qcdOrQcc;\n\t      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n\t      component.codingStyleParameters = codOrCoc;\n\t     }\n\t     tile.codingStyleDefaultParameters = context.currentTile.COD;\n\t    }\n\t    var TagTree = function TagTreeClosure() {\n\t     function TagTree(width, height) {\n\t      var levelsLength = log2(Math.max(width, height)) + 1;\n\t      this.levels = [];\n\t      for (var i = 0; i < levelsLength; i++) {\n\t       var level = {\n\t        width: width,\n\t        height: height,\n\t        items: []\n\t       };\n\t       this.levels.push(level);\n\t       width = Math.ceil(width / 2);\n\t       height = Math.ceil(height / 2);\n\t      }\n\t     }\n\t     TagTree.prototype = {\n\t      reset: function TagTree_reset(i, j) {\n\t       var currentLevel = 0, value = 0, level;\n\t       while (currentLevel < this.levels.length) {\n\t        level = this.levels[currentLevel];\n\t        var index = i + j * level.width;\n\t        if (level.items[index] !== undefined) {\n\t         value = level.items[index];\n\t         break;\n\t        }\n\t        level.index = index;\n\t        i >>= 1;\n\t        j >>= 1;\n\t        currentLevel++;\n\t       }\n\t       currentLevel--;\n\t       level = this.levels[currentLevel];\n\t       level.items[level.index] = value;\n\t       this.currentLevel = currentLevel;\n\t       delete this.value;\n\t      },\n\t      incrementValue: function TagTree_incrementValue() {\n\t       var level = this.levels[this.currentLevel];\n\t       level.items[level.index]++;\n\t      },\n\t      nextLevel: function TagTree_nextLevel() {\n\t       var currentLevel = this.currentLevel;\n\t       var level = this.levels[currentLevel];\n\t       var value = level.items[level.index];\n\t       currentLevel--;\n\t       if (currentLevel < 0) {\n\t        this.value = value;\n\t        return false;\n\t       }\n\t       this.currentLevel = currentLevel;\n\t       level = this.levels[currentLevel];\n\t       level.items[level.index] = value;\n\t       return true;\n\t      }\n\t     };\n\t     return TagTree;\n\t    }();\n\t    var InclusionTree = function InclusionTreeClosure() {\n\t     function InclusionTree(width, height, defaultValue) {\n\t      var levelsLength = log2(Math.max(width, height)) + 1;\n\t      this.levels = [];\n\t      for (var i = 0; i < levelsLength; i++) {\n\t       var items = new Uint8Array(width * height);\n\t       for (var j = 0, jj = items.length; j < jj; j++) {\n\t        items[j] = defaultValue;\n\t       }\n\t       var level = {\n\t        width: width,\n\t        height: height,\n\t        items: items\n\t       };\n\t       this.levels.push(level);\n\t       width = Math.ceil(width / 2);\n\t       height = Math.ceil(height / 2);\n\t      }\n\t     }\n\t     InclusionTree.prototype = {\n\t      reset: function InclusionTree_reset(i, j, stopValue) {\n\t       var currentLevel = 0;\n\t       while (currentLevel < this.levels.length) {\n\t        var level = this.levels[currentLevel];\n\t        var index = i + j * level.width;\n\t        level.index = index;\n\t        var value = level.items[index];\n\t        if (value === 0xFF) {\n\t         break;\n\t        }\n\t        if (value > stopValue) {\n\t         this.currentLevel = currentLevel;\n\t         this.propagateValues();\n\t         return false;\n\t        }\n\t        i >>= 1;\n\t        j >>= 1;\n\t        currentLevel++;\n\t       }\n\t       this.currentLevel = currentLevel - 1;\n\t       return true;\n\t      },\n\t      incrementValue: function InclusionTree_incrementValue(stopValue) {\n\t       var level = this.levels[this.currentLevel];\n\t       level.items[level.index] = stopValue + 1;\n\t       this.propagateValues();\n\t      },\n\t      propagateValues: function InclusionTree_propagateValues() {\n\t       var levelIndex = this.currentLevel;\n\t       var level = this.levels[levelIndex];\n\t       var currentValue = level.items[level.index];\n\t       while (--levelIndex >= 0) {\n\t        level = this.levels[levelIndex];\n\t        level.items[level.index] = currentValue;\n\t       }\n\t      },\n\t      nextLevel: function InclusionTree_nextLevel() {\n\t       var currentLevel = this.currentLevel;\n\t       var level = this.levels[currentLevel];\n\t       var value = level.items[level.index];\n\t       level.items[level.index] = 0xFF;\n\t       currentLevel--;\n\t       if (currentLevel < 0) {\n\t        return false;\n\t       }\n\t       this.currentLevel = currentLevel;\n\t       level = this.levels[currentLevel];\n\t       level.items[level.index] = value;\n\t       return true;\n\t      }\n\t     };\n\t     return InclusionTree;\n\t    }();\n\t    var BitModel = function BitModelClosure() {\n\t     var UNIFORM_CONTEXT = 17;\n\t     var RUNLENGTH_CONTEXT = 18;\n\t     var LLAndLHContextsLabel = new Uint8Array([\n\t      0,\n\t      5,\n\t      8,\n\t      0,\n\t      3,\n\t      7,\n\t      8,\n\t      0,\n\t      4,\n\t      7,\n\t      8,\n\t      0,\n\t      0,\n\t      0,\n\t      0,\n\t      0,\n\t      1,\n\t      6,\n\t      8,\n\t      0,\n\t      3,\n\t      7,\n\t      8,\n\t      0,\n\t      4,\n\t      7,\n\t      8,\n\t      0,\n\t      0,\n\t      0,\n\t      0,\n\t      0,\n\t      2,\n\t      6,\n\t      8,\n\t      0,\n\t      3,\n\t      7,\n\t      8,\n\t      0,\n\t      4,\n\t      7,\n\t      8,\n\t      0,\n\t      0,\n\t      0,\n\t      0,\n\t      0,\n\t      2,\n\t      6,\n\t      8,\n\t      0,\n\t      3,\n\t      7,\n\t      8,\n\t      0,\n\t      4,\n\t      7,\n\t      8,\n\t      0,\n\t      0,\n\t      0,\n\t      0,\n\t      0,\n\t      2,\n\t      6,\n\t      8,\n\t      0,\n\t      3,\n\t      7,\n\t      8,\n\t      0,\n\t      4,\n\t      7,\n\t      8\n\t     ]);\n\t     var HLContextLabel = new Uint8Array([\n\t      0,\n\t      3,\n\t      4,\n\t      0,\n\t      5,\n\t      7,\n\t      7,\n\t      0,\n\t      8,\n\t      8,\n\t      8,\n\t      0,\n\t      0,\n\t      0,\n\t      0,\n\t      0,\n\t      1,\n\t      3,\n\t      4,\n\t      0,\n\t      6,\n\t      7,\n\t      7,\n\t      0,\n\t      8,\n\t      8,\n\t      8,\n\t      0,\n\t      0,\n\t      0,\n\t      0,\n\t      0,\n\t      2,\n\t      3,\n\t      4,\n\t      0,\n\t      6,\n\t      7,\n\t      7,\n\t      0,\n\t      8,\n\t      8,\n\t      8,\n\t      0,\n\t      0,\n\t      0,\n\t      0,\n\t      0,\n\t      2,\n\t      3,\n\t      4,\n\t      0,\n\t      6,\n\t      7,\n\t      7,\n\t      0,\n\t      8,\n\t      8,\n\t      8,\n\t      0,\n\t      0,\n\t      0,\n\t      0,\n\t      0,\n\t      2,\n\t      3,\n\t      4,\n\t      0,\n\t      6,\n\t      7,\n\t      7,\n\t      0,\n\t      8,\n\t      8,\n\t      8\n\t     ]);\n\t     var HHContextLabel = new Uint8Array([\n\t      0,\n\t      1,\n\t      2,\n\t      0,\n\t      1,\n\t      2,\n\t      2,\n\t      0,\n\t      2,\n\t      2,\n\t      2,\n\t      0,\n\t      0,\n\t      0,\n\t      0,\n\t      0,\n\t      3,\n\t      4,\n\t      5,\n\t      0,\n\t      4,\n\t      5,\n\t      5,\n\t      0,\n\t      5,\n\t      5,\n\t      5,\n\t      0,\n\t      0,\n\t      0,\n\t      0,\n\t      0,\n\t      6,\n\t      7,\n\t      7,\n\t      0,\n\t      7,\n\t      7,\n\t      7,\n\t      0,\n\t      7,\n\t      7,\n\t      7,\n\t      0,\n\t      0,\n\t      0,\n\t      0,\n\t      0,\n\t      8,\n\t      8,\n\t      8,\n\t      0,\n\t      8,\n\t      8,\n\t      8,\n\t      0,\n\t      8,\n\t      8,\n\t      8,\n\t      0,\n\t      0,\n\t      0,\n\t      0,\n\t      0,\n\t      8,\n\t      8,\n\t      8,\n\t      0,\n\t      8,\n\t      8,\n\t      8,\n\t      0,\n\t      8,\n\t      8,\n\t      8\n\t     ]);\n\t     function BitModel(width, height, subband, zeroBitPlanes, mb) {\n\t      this.width = width;\n\t      this.height = height;\n\t      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\n\t      var coefficientCount = width * height;\n\t      this.neighborsSignificance = new Uint8Array(coefficientCount);\n\t      this.coefficentsSign = new Uint8Array(coefficientCount);\n\t      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\n\t      this.processingFlags = new Uint8Array(coefficientCount);\n\t      var bitsDecoded = new Uint8Array(coefficientCount);\n\t      if (zeroBitPlanes !== 0) {\n\t       for (var i = 0; i < coefficientCount; i++) {\n\t        bitsDecoded[i] = zeroBitPlanes;\n\t       }\n\t      }\n\t      this.bitsDecoded = bitsDecoded;\n\t      this.reset();\n\t     }\n\t     BitModel.prototype = {\n\t      setDecoder: function BitModel_setDecoder(decoder) {\n\t       this.decoder = decoder;\n\t      },\n\t      reset: function BitModel_reset() {\n\t       this.contexts = new Int8Array(19);\n\t       this.contexts[0] = 4 << 1 | 0;\n\t       this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n\t       this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n\t      },\n\t      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n\t       var neighborsSignificance = this.neighborsSignificance;\n\t       var width = this.width, height = this.height;\n\t       var left = column > 0;\n\t       var right = column + 1 < width;\n\t       var i;\n\t       if (row > 0) {\n\t        i = index - width;\n\t        if (left) {\n\t         neighborsSignificance[i - 1] += 0x10;\n\t        }\n\t        if (right) {\n\t         neighborsSignificance[i + 1] += 0x10;\n\t        }\n\t        neighborsSignificance[i] += 0x04;\n\t       }\n\t       if (row + 1 < height) {\n\t        i = index + width;\n\t        if (left) {\n\t         neighborsSignificance[i - 1] += 0x10;\n\t        }\n\t        if (right) {\n\t         neighborsSignificance[i + 1] += 0x10;\n\t        }\n\t        neighborsSignificance[i] += 0x04;\n\t       }\n\t       if (left) {\n\t        neighborsSignificance[index - 1] += 0x01;\n\t       }\n\t       if (right) {\n\t        neighborsSignificance[index + 1] += 0x01;\n\t       }\n\t       neighborsSignificance[index] |= 0x80;\n\t      },\n\t      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n\t       var decoder = this.decoder;\n\t       var width = this.width, height = this.height;\n\t       var coefficentsMagnitude = this.coefficentsMagnitude;\n\t       var coefficentsSign = this.coefficentsSign;\n\t       var neighborsSignificance = this.neighborsSignificance;\n\t       var processingFlags = this.processingFlags;\n\t       var contexts = this.contexts;\n\t       var labels = this.contextLabelTable;\n\t       var bitsDecoded = this.bitsDecoded;\n\t       var processedInverseMask = ~1;\n\t       var processedMask = 1;\n\t       var firstMagnitudeBitMask = 2;\n\t       for (var i0 = 0; i0 < height; i0 += 4) {\n\t        for (var j = 0; j < width; j++) {\n\t         var index = i0 * width + j;\n\t         for (var i1 = 0; i1 < 4; i1++, index += width) {\n\t          var i = i0 + i1;\n\t          if (i >= height) {\n\t           break;\n\t          }\n\t          processingFlags[index] &= processedInverseMask;\n\t          if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n\t           continue;\n\t          }\n\t          var contextLabel = labels[neighborsSignificance[index]];\n\t          var decision = decoder.readBit(contexts, contextLabel);\n\t          if (decision) {\n\t           var sign = this.decodeSignBit(i, j, index);\n\t           coefficentsSign[index] = sign;\n\t           coefficentsMagnitude[index] = 1;\n\t           this.setNeighborsSignificance(i, j, index);\n\t           processingFlags[index] |= firstMagnitudeBitMask;\n\t          }\n\t          bitsDecoded[index]++;\n\t          processingFlags[index] |= processedMask;\n\t         }\n\t        }\n\t       }\n\t      },\n\t      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n\t       var width = this.width, height = this.height;\n\t       var coefficentsMagnitude = this.coefficentsMagnitude;\n\t       var coefficentsSign = this.coefficentsSign;\n\t       var contribution, sign0, sign1, significance1;\n\t       var contextLabel, decoded;\n\t       significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n\t       if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n\t        sign1 = coefficentsSign[index + 1];\n\t        if (significance1) {\n\t         sign0 = coefficentsSign[index - 1];\n\t         contribution = 1 - sign1 - sign0;\n\t        } else {\n\t         contribution = 1 - sign1 - sign1;\n\t        }\n\t       } else if (significance1) {\n\t        sign0 = coefficentsSign[index - 1];\n\t        contribution = 1 - sign0 - sign0;\n\t       } else {\n\t        contribution = 0;\n\t       }\n\t       var horizontalContribution = 3 * contribution;\n\t       significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n\t       if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n\t        sign1 = coefficentsSign[index + width];\n\t        if (significance1) {\n\t         sign0 = coefficentsSign[index - width];\n\t         contribution = 1 - sign1 - sign0 + horizontalContribution;\n\t        } else {\n\t         contribution = 1 - sign1 - sign1 + horizontalContribution;\n\t        }\n\t       } else if (significance1) {\n\t        sign0 = coefficentsSign[index - width];\n\t        contribution = 1 - sign0 - sign0 + horizontalContribution;\n\t       } else {\n\t        contribution = horizontalContribution;\n\t       }\n\t       if (contribution >= 0) {\n\t        contextLabel = 9 + contribution;\n\t        decoded = this.decoder.readBit(this.contexts, contextLabel);\n\t       } else {\n\t        contextLabel = 9 - contribution;\n\t        decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n\t       }\n\t       return decoded;\n\t      },\n\t      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n\t       var decoder = this.decoder;\n\t       var width = this.width, height = this.height;\n\t       var coefficentsMagnitude = this.coefficentsMagnitude;\n\t       var neighborsSignificance = this.neighborsSignificance;\n\t       var contexts = this.contexts;\n\t       var bitsDecoded = this.bitsDecoded;\n\t       var processingFlags = this.processingFlags;\n\t       var processedMask = 1;\n\t       var firstMagnitudeBitMask = 2;\n\t       var length = width * height;\n\t       var width4 = width * 4;\n\t       for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n\t        indexNext = Math.min(length, index0 + width4);\n\t        for (var j = 0; j < width; j++) {\n\t         for (var index = index0 + j; index < indexNext; index += width) {\n\t          if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n\t           continue;\n\t          }\n\t          var contextLabel = 16;\n\t          if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n\t           processingFlags[index] ^= firstMagnitudeBitMask;\n\t           var significance = neighborsSignificance[index] & 127;\n\t           contextLabel = significance === 0 ? 15 : 14;\n\t          }\n\t          var bit = decoder.readBit(contexts, contextLabel);\n\t          coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n\t          bitsDecoded[index]++;\n\t          processingFlags[index] |= processedMask;\n\t         }\n\t        }\n\t       }\n\t      },\n\t      runCleanupPass: function BitModel_runCleanupPass() {\n\t       var decoder = this.decoder;\n\t       var width = this.width, height = this.height;\n\t       var neighborsSignificance = this.neighborsSignificance;\n\t       var coefficentsMagnitude = this.coefficentsMagnitude;\n\t       var coefficentsSign = this.coefficentsSign;\n\t       var contexts = this.contexts;\n\t       var labels = this.contextLabelTable;\n\t       var bitsDecoded = this.bitsDecoded;\n\t       var processingFlags = this.processingFlags;\n\t       var processedMask = 1;\n\t       var firstMagnitudeBitMask = 2;\n\t       var oneRowDown = width;\n\t       var twoRowsDown = width * 2;\n\t       var threeRowsDown = width * 3;\n\t       var iNext;\n\t       for (var i0 = 0; i0 < height; i0 = iNext) {\n\t        iNext = Math.min(i0 + 4, height);\n\t        var indexBase = i0 * width;\n\t        var checkAllEmpty = i0 + 3 < height;\n\t        for (var j = 0; j < width; j++) {\n\t         var index0 = indexBase + j;\n\t         var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n\t         var i1 = 0, index = index0;\n\t         var i = i0, sign;\n\t         if (allEmpty) {\n\t          var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n\t          if (!hasSignificantCoefficent) {\n\t           bitsDecoded[index0]++;\n\t           bitsDecoded[index0 + oneRowDown]++;\n\t           bitsDecoded[index0 + twoRowsDown]++;\n\t           bitsDecoded[index0 + threeRowsDown]++;\n\t           continue;\n\t          }\n\t          i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n\t          if (i1 !== 0) {\n\t           i = i0 + i1;\n\t           index += i1 * width;\n\t          }\n\t          sign = this.decodeSignBit(i, j, index);\n\t          coefficentsSign[index] = sign;\n\t          coefficentsMagnitude[index] = 1;\n\t          this.setNeighborsSignificance(i, j, index);\n\t          processingFlags[index] |= firstMagnitudeBitMask;\n\t          index = index0;\n\t          for (var i2 = i0; i2 <= i; i2++, index += width) {\n\t           bitsDecoded[index]++;\n\t          }\n\t          i1++;\n\t         }\n\t         for (i = i0 + i1; i < iNext; i++, index += width) {\n\t          if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n\t           continue;\n\t          }\n\t          var contextLabel = labels[neighborsSignificance[index]];\n\t          var decision = decoder.readBit(contexts, contextLabel);\n\t          if (decision === 1) {\n\t           sign = this.decodeSignBit(i, j, index);\n\t           coefficentsSign[index] = sign;\n\t           coefficentsMagnitude[index] = 1;\n\t           this.setNeighborsSignificance(i, j, index);\n\t           processingFlags[index] |= firstMagnitudeBitMask;\n\t          }\n\t          bitsDecoded[index]++;\n\t         }\n\t        }\n\t       }\n\t      },\n\t      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n\t       var decoder = this.decoder;\n\t       var contexts = this.contexts;\n\t       var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n\t       if (symbol !== 0xA) {\n\t        error('JPX Error: Invalid segmentation symbol');\n\t       }\n\t      }\n\t     };\n\t     return BitModel;\n\t    }();\n\t    var Transform = function TransformClosure() {\n\t     function Transform() {\n\t     }\n\t     Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n\t      var ll = subbands[0];\n\t      for (var i = 1, ii = subbands.length; i < ii; i++) {\n\t       ll = this.iterate(ll, subbands[i], u0, v0);\n\t      }\n\t      return ll;\n\t     };\n\t     Transform.prototype.extend = function extend(buffer, offset, size) {\n\t      var i1 = offset - 1, j1 = offset + 1;\n\t      var i2 = offset + size - 2, j2 = offset + size;\n\t      buffer[i1--] = buffer[j1++];\n\t      buffer[j2++] = buffer[i2--];\n\t      buffer[i1--] = buffer[j1++];\n\t      buffer[j2++] = buffer[i2--];\n\t      buffer[i1--] = buffer[j1++];\n\t      buffer[j2++] = buffer[i2--];\n\t      buffer[i1] = buffer[j1];\n\t      buffer[j2] = buffer[i2];\n\t     };\n\t     Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n\t      var llWidth = ll.width, llHeight = ll.height, llItems = ll.items;\n\t      var width = hl_lh_hh.width;\n\t      var height = hl_lh_hh.height;\n\t      var items = hl_lh_hh.items;\n\t      var i, j, k, l, u, v;\n\t      for (k = 0, i = 0; i < llHeight; i++) {\n\t       l = i * 2 * width;\n\t       for (j = 0; j < llWidth; j++, k++, l += 2) {\n\t        items[l] = llItems[k];\n\t       }\n\t      }\n\t      llItems = ll.items = null;\n\t      var bufferPadding = 4;\n\t      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n\t      if (width === 1) {\n\t       if ((u0 & 1) !== 0) {\n\t        for (v = 0, k = 0; v < height; v++, k += width) {\n\t         items[k] *= 0.5;\n\t        }\n\t       }\n\t      } else {\n\t       for (v = 0, k = 0; v < height; v++, k += width) {\n\t        rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n\t        this.extend(rowBuffer, bufferPadding, width);\n\t        this.filter(rowBuffer, bufferPadding, width);\n\t        items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n\t       }\n\t      }\n\t      var numBuffers = 16;\n\t      var colBuffers = [];\n\t      for (i = 0; i < numBuffers; i++) {\n\t       colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n\t      }\n\t      var b, currentBuffer = 0;\n\t      ll = bufferPadding + height;\n\t      if (height === 1) {\n\t       if ((v0 & 1) !== 0) {\n\t        for (u = 0; u < width; u++) {\n\t         items[u] *= 0.5;\n\t        }\n\t       }\n\t      } else {\n\t       for (u = 0; u < width; u++) {\n\t        if (currentBuffer === 0) {\n\t         numBuffers = Math.min(width - u, numBuffers);\n\t         for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n\t          for (b = 0; b < numBuffers; b++) {\n\t           colBuffers[b][l] = items[k + b];\n\t          }\n\t         }\n\t         currentBuffer = numBuffers;\n\t        }\n\t        currentBuffer--;\n\t        var buffer = colBuffers[currentBuffer];\n\t        this.extend(buffer, bufferPadding, height);\n\t        this.filter(buffer, bufferPadding, height);\n\t        if (currentBuffer === 0) {\n\t         k = u - numBuffers + 1;\n\t         for (l = bufferPadding; l < ll; k += width, l++) {\n\t          for (b = 0; b < numBuffers; b++) {\n\t           items[k + b] = colBuffers[b][l];\n\t          }\n\t         }\n\t        }\n\t       }\n\t      }\n\t      return {\n\t       width: width,\n\t       height: height,\n\t       items: items\n\t      };\n\t     };\n\t     return Transform;\n\t    }();\n\t    var IrreversibleTransform = function IrreversibleTransformClosure() {\n\t     function IrreversibleTransform() {\n\t      Transform.call(this);\n\t     }\n\t     IrreversibleTransform.prototype = Object.create(Transform.prototype);\n\t     IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n\t      var len = length >> 1;\n\t      offset = offset | 0;\n\t      var j, n, current, next;\n\t      var alpha = -1.586134342059924;\n\t      var beta = -0.052980118572961;\n\t      var gamma = 0.882911075530934;\n\t      var delta = 0.443506852043971;\n\t      var K = 1.230174104914001;\n\t      var K_ = 1 / K;\n\t      j = offset - 3;\n\t      for (n = len + 4; n--; j += 2) {\n\t       x[j] *= K_;\n\t      }\n\t      j = offset - 2;\n\t      current = delta * x[j - 1];\n\t      for (n = len + 3; n--; j += 2) {\n\t       next = delta * x[j + 1];\n\t       x[j] = K * x[j] - current - next;\n\t       if (n--) {\n\t        j += 2;\n\t        current = delta * x[j + 1];\n\t        x[j] = K * x[j] - current - next;\n\t       } else {\n\t        break;\n\t       }\n\t      }\n\t      j = offset - 1;\n\t      current = gamma * x[j - 1];\n\t      for (n = len + 2; n--; j += 2) {\n\t       next = gamma * x[j + 1];\n\t       x[j] -= current + next;\n\t       if (n--) {\n\t        j += 2;\n\t        current = gamma * x[j + 1];\n\t        x[j] -= current + next;\n\t       } else {\n\t        break;\n\t       }\n\t      }\n\t      j = offset;\n\t      current = beta * x[j - 1];\n\t      for (n = len + 1; n--; j += 2) {\n\t       next = beta * x[j + 1];\n\t       x[j] -= current + next;\n\t       if (n--) {\n\t        j += 2;\n\t        current = beta * x[j + 1];\n\t        x[j] -= current + next;\n\t       } else {\n\t        break;\n\t       }\n\t      }\n\t      if (len !== 0) {\n\t       j = offset + 1;\n\t       current = alpha * x[j - 1];\n\t       for (n = len; n--; j += 2) {\n\t        next = alpha * x[j + 1];\n\t        x[j] -= current + next;\n\t        if (n--) {\n\t         j += 2;\n\t         current = alpha * x[j + 1];\n\t         x[j] -= current + next;\n\t        } else {\n\t         break;\n\t        }\n\t       }\n\t      }\n\t     };\n\t     return IrreversibleTransform;\n\t    }();\n\t    var ReversibleTransform = function ReversibleTransformClosure() {\n\t     function ReversibleTransform() {\n\t      Transform.call(this);\n\t     }\n\t     ReversibleTransform.prototype = Object.create(Transform.prototype);\n\t     ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n\t      var len = length >> 1;\n\t      offset = offset | 0;\n\t      var j, n;\n\t      for (j = offset, n = len + 1; n--; j += 2) {\n\t       x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n\t      }\n\t      for (j = offset + 1, n = len; n--; j += 2) {\n\t       x[j] += x[j - 1] + x[j + 1] >> 1;\n\t      }\n\t     };\n\t     return ReversibleTransform;\n\t    }();\n\t    return JpxImage;\n\t   }();\n\t   exports.JpxImage = JpxImage;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCoreMetrics = {}, root.pdfjsSharedUtil);\n\t  }(this, function (exports, sharedUtil) {\n\t   var getLookupTableFactory = sharedUtil.getLookupTableFactory;\n\t   var getMetrics = getLookupTableFactory(function (t) {\n\t    t['Courier'] = 600;\n\t    t['Courier-Bold'] = 600;\n\t    t['Courier-BoldOblique'] = 600;\n\t    t['Courier-Oblique'] = 600;\n\t    t['Helvetica'] = getLookupTableFactory(function (t) {\n\t     t['space'] = 278;\n\t     t['exclam'] = 278;\n\t     t['quotedbl'] = 355;\n\t     t['numbersign'] = 556;\n\t     t['dollar'] = 556;\n\t     t['percent'] = 889;\n\t     t['ampersand'] = 667;\n\t     t['quoteright'] = 222;\n\t     t['parenleft'] = 333;\n\t     t['parenright'] = 333;\n\t     t['asterisk'] = 389;\n\t     t['plus'] = 584;\n\t     t['comma'] = 278;\n\t     t['hyphen'] = 333;\n\t     t['period'] = 278;\n\t     t['slash'] = 278;\n\t     t['zero'] = 556;\n\t     t['one'] = 556;\n\t     t['two'] = 556;\n\t     t['three'] = 556;\n\t     t['four'] = 556;\n\t     t['five'] = 556;\n\t     t['six'] = 556;\n\t     t['seven'] = 556;\n\t     t['eight'] = 556;\n\t     t['nine'] = 556;\n\t     t['colon'] = 278;\n\t     t['semicolon'] = 278;\n\t     t['less'] = 584;\n\t     t['equal'] = 584;\n\t     t['greater'] = 584;\n\t     t['question'] = 556;\n\t     t['at'] = 1015;\n\t     t['A'] = 667;\n\t     t['B'] = 667;\n\t     t['C'] = 722;\n\t     t['D'] = 722;\n\t     t['E'] = 667;\n\t     t['F'] = 611;\n\t     t['G'] = 778;\n\t     t['H'] = 722;\n\t     t['I'] = 278;\n\t     t['J'] = 500;\n\t     t['K'] = 667;\n\t     t['L'] = 556;\n\t     t['M'] = 833;\n\t     t['N'] = 722;\n\t     t['O'] = 778;\n\t     t['P'] = 667;\n\t     t['Q'] = 778;\n\t     t['R'] = 722;\n\t     t['S'] = 667;\n\t     t['T'] = 611;\n\t     t['U'] = 722;\n\t     t['V'] = 667;\n\t     t['W'] = 944;\n\t     t['X'] = 667;\n\t     t['Y'] = 667;\n\t     t['Z'] = 611;\n\t     t['bracketleft'] = 278;\n\t     t['backslash'] = 278;\n\t     t['bracketright'] = 278;\n\t     t['asciicircum'] = 469;\n\t     t['underscore'] = 556;\n\t     t['quoteleft'] = 222;\n\t     t['a'] = 556;\n\t     t['b'] = 556;\n\t     t['c'] = 500;\n\t     t['d'] = 556;\n\t     t['e'] = 556;\n\t     t['f'] = 278;\n\t     t['g'] = 556;\n\t     t['h'] = 556;\n\t     t['i'] = 222;\n\t     t['j'] = 222;\n\t     t['k'] = 500;\n\t     t['l'] = 222;\n\t     t['m'] = 833;\n\t     t['n'] = 556;\n\t     t['o'] = 556;\n\t     t['p'] = 556;\n\t     t['q'] = 556;\n\t     t['r'] = 333;\n\t     t['s'] = 500;\n\t     t['t'] = 278;\n\t     t['u'] = 556;\n\t     t['v'] = 500;\n\t     t['w'] = 722;\n\t     t['x'] = 500;\n\t     t['y'] = 500;\n\t     t['z'] = 500;\n\t     t['braceleft'] = 334;\n\t     t['bar'] = 260;\n\t     t['braceright'] = 334;\n\t     t['asciitilde'] = 584;\n\t     t['exclamdown'] = 333;\n\t     t['cent'] = 556;\n\t     t['sterling'] = 556;\n\t     t['fraction'] = 167;\n\t     t['yen'] = 556;\n\t     t['florin'] = 556;\n\t     t['section'] = 556;\n\t     t['currency'] = 556;\n\t     t['quotesingle'] = 191;\n\t     t['quotedblleft'] = 333;\n\t     t['guillemotleft'] = 556;\n\t     t['guilsinglleft'] = 333;\n\t     t['guilsinglright'] = 333;\n\t     t['fi'] = 500;\n\t     t['fl'] = 500;\n\t     t['endash'] = 556;\n\t     t['dagger'] = 556;\n\t     t['daggerdbl'] = 556;\n\t     t['periodcentered'] = 278;\n\t     t['paragraph'] = 537;\n\t     t['bullet'] = 350;\n\t     t['quotesinglbase'] = 222;\n\t     t['quotedblbase'] = 333;\n\t     t['quotedblright'] = 333;\n\t     t['guillemotright'] = 556;\n\t     t['ellipsis'] = 1000;\n\t     t['perthousand'] = 1000;\n\t     t['questiondown'] = 611;\n\t     t['grave'] = 333;\n\t     t['acute'] = 333;\n\t     t['circumflex'] = 333;\n\t     t['tilde'] = 333;\n\t     t['macron'] = 333;\n\t     t['breve'] = 333;\n\t     t['dotaccent'] = 333;\n\t     t['dieresis'] = 333;\n\t     t['ring'] = 333;\n\t     t['cedilla'] = 333;\n\t     t['hungarumlaut'] = 333;\n\t     t['ogonek'] = 333;\n\t     t['caron'] = 333;\n\t     t['emdash'] = 1000;\n\t     t['AE'] = 1000;\n\t     t['ordfeminine'] = 370;\n\t     t['Lslash'] = 556;\n\t     t['Oslash'] = 778;\n\t     t['OE'] = 1000;\n\t     t['ordmasculine'] = 365;\n\t     t['ae'] = 889;\n\t     t['dotlessi'] = 278;\n\t     t['lslash'] = 222;\n\t     t['oslash'] = 611;\n\t     t['oe'] = 944;\n\t     t['germandbls'] = 611;\n\t     t['Idieresis'] = 278;\n\t     t['eacute'] = 556;\n\t     t['abreve'] = 556;\n\t     t['uhungarumlaut'] = 556;\n\t     t['ecaron'] = 556;\n\t     t['Ydieresis'] = 667;\n\t     t['divide'] = 584;\n\t     t['Yacute'] = 667;\n\t     t['Acircumflex'] = 667;\n\t     t['aacute'] = 556;\n\t     t['Ucircumflex'] = 722;\n\t     t['yacute'] = 500;\n\t     t['scommaaccent'] = 500;\n\t     t['ecircumflex'] = 556;\n\t     t['Uring'] = 722;\n\t     t['Udieresis'] = 722;\n\t     t['aogonek'] = 556;\n\t     t['Uacute'] = 722;\n\t     t['uogonek'] = 556;\n\t     t['Edieresis'] = 667;\n\t     t['Dcroat'] = 722;\n\t     t['commaaccent'] = 250;\n\t     t['copyright'] = 737;\n\t     t['Emacron'] = 667;\n\t     t['ccaron'] = 500;\n\t     t['aring'] = 556;\n\t     t['Ncommaaccent'] = 722;\n\t     t['lacute'] = 222;\n\t     t['agrave'] = 556;\n\t     t['Tcommaaccent'] = 611;\n\t     t['Cacute'] = 722;\n\t     t['atilde'] = 556;\n\t     t['Edotaccent'] = 667;\n\t     t['scaron'] = 500;\n\t     t['scedilla'] = 500;\n\t     t['iacute'] = 278;\n\t     t['lozenge'] = 471;\n\t     t['Rcaron'] = 722;\n\t     t['Gcommaaccent'] = 778;\n\t     t['ucircumflex'] = 556;\n\t     t['acircumflex'] = 556;\n\t     t['Amacron'] = 667;\n\t     t['rcaron'] = 333;\n\t     t['ccedilla'] = 500;\n\t     t['Zdotaccent'] = 611;\n\t     t['Thorn'] = 667;\n\t     t['Omacron'] = 778;\n\t     t['Racute'] = 722;\n\t     t['Sacute'] = 667;\n\t     t['dcaron'] = 643;\n\t     t['Umacron'] = 722;\n\t     t['uring'] = 556;\n\t     t['threesuperior'] = 333;\n\t     t['Ograve'] = 778;\n\t     t['Agrave'] = 667;\n\t     t['Abreve'] = 667;\n\t     t['multiply'] = 584;\n\t     t['uacute'] = 556;\n\t     t['Tcaron'] = 611;\n\t     t['partialdiff'] = 476;\n\t     t['ydieresis'] = 500;\n\t     t['Nacute'] = 722;\n\t     t['icircumflex'] = 278;\n\t     t['Ecircumflex'] = 667;\n\t     t['adieresis'] = 556;\n\t     t['edieresis'] = 556;\n\t     t['cacute'] = 500;\n\t     t['nacute'] = 556;\n\t     t['umacron'] = 556;\n\t     t['Ncaron'] = 722;\n\t     t['Iacute'] = 278;\n\t     t['plusminus'] = 584;\n\t     t['brokenbar'] = 260;\n\t     t['registered'] = 737;\n\t     t['Gbreve'] = 778;\n\t     t['Idotaccent'] = 278;\n\t     t['summation'] = 600;\n\t     t['Egrave'] = 667;\n\t     t['racute'] = 333;\n\t     t['omacron'] = 556;\n\t     t['Zacute'] = 611;\n\t     t['Zcaron'] = 611;\n\t     t['greaterequal'] = 549;\n\t     t['Eth'] = 722;\n\t     t['Ccedilla'] = 722;\n\t     t['lcommaaccent'] = 222;\n\t     t['tcaron'] = 317;\n\t     t['eogonek'] = 556;\n\t     t['Uogonek'] = 722;\n\t     t['Aacute'] = 667;\n\t     t['Adieresis'] = 667;\n\t     t['egrave'] = 556;\n\t     t['zacute'] = 500;\n\t     t['iogonek'] = 222;\n\t     t['Oacute'] = 778;\n\t     t['oacute'] = 556;\n\t     t['amacron'] = 556;\n\t     t['sacute'] = 500;\n\t     t['idieresis'] = 278;\n\t     t['Ocircumflex'] = 778;\n\t     t['Ugrave'] = 722;\n\t     t['Delta'] = 612;\n\t     t['thorn'] = 556;\n\t     t['twosuperior'] = 333;\n\t     t['Odieresis'] = 778;\n\t     t['mu'] = 556;\n\t     t['igrave'] = 278;\n\t     t['ohungarumlaut'] = 556;\n\t     t['Eogonek'] = 667;\n\t     t['dcroat'] = 556;\n\t     t['threequarters'] = 834;\n\t     t['Scedilla'] = 667;\n\t     t['lcaron'] = 299;\n\t     t['Kcommaaccent'] = 667;\n\t     t['Lacute'] = 556;\n\t     t['trademark'] = 1000;\n\t     t['edotaccent'] = 556;\n\t     t['Igrave'] = 278;\n\t     t['Imacron'] = 278;\n\t     t['Lcaron'] = 556;\n\t     t['onehalf'] = 834;\n\t     t['lessequal'] = 549;\n\t     t['ocircumflex'] = 556;\n\t     t['ntilde'] = 556;\n\t     t['Uhungarumlaut'] = 722;\n\t     t['Eacute'] = 667;\n\t     t['emacron'] = 556;\n\t     t['gbreve'] = 556;\n\t     t['onequarter'] = 834;\n\t     t['Scaron'] = 667;\n\t     t['Scommaaccent'] = 667;\n\t     t['Ohungarumlaut'] = 778;\n\t     t['degree'] = 400;\n\t     t['ograve'] = 556;\n\t     t['Ccaron'] = 722;\n\t     t['ugrave'] = 556;\n\t     t['radical'] = 453;\n\t     t['Dcaron'] = 722;\n\t     t['rcommaaccent'] = 333;\n\t     t['Ntilde'] = 722;\n\t     t['otilde'] = 556;\n\t     t['Rcommaaccent'] = 722;\n\t     t['Lcommaaccent'] = 556;\n\t     t['Atilde'] = 667;\n\t     t['Aogonek'] = 667;\n\t     t['Aring'] = 667;\n\t     t['Otilde'] = 778;\n\t     t['zdotaccent'] = 500;\n\t     t['Ecaron'] = 667;\n\t     t['Iogonek'] = 278;\n\t     t['kcommaaccent'] = 500;\n\t     t['minus'] = 584;\n\t     t['Icircumflex'] = 278;\n\t     t['ncaron'] = 556;\n\t     t['tcommaaccent'] = 278;\n\t     t['logicalnot'] = 584;\n\t     t['odieresis'] = 556;\n\t     t['udieresis'] = 556;\n\t     t['notequal'] = 549;\n\t     t['gcommaaccent'] = 556;\n\t     t['eth'] = 556;\n\t     t['zcaron'] = 500;\n\t     t['ncommaaccent'] = 556;\n\t     t['onesuperior'] = 333;\n\t     t['imacron'] = 278;\n\t     t['Euro'] = 556;\n\t    });\n\t    t['Helvetica-Bold'] = getLookupTableFactory(function (t) {\n\t     t['space'] = 278;\n\t     t['exclam'] = 333;\n\t     t['quotedbl'] = 474;\n\t     t['numbersign'] = 556;\n\t     t['dollar'] = 556;\n\t     t['percent'] = 889;\n\t     t['ampersand'] = 722;\n\t     t['quoteright'] = 278;\n\t     t['parenleft'] = 333;\n\t     t['parenright'] = 333;\n\t     t['asterisk'] = 389;\n\t     t['plus'] = 584;\n\t     t['comma'] = 278;\n\t     t['hyphen'] = 333;\n\t     t['period'] = 278;\n\t     t['slash'] = 278;\n\t     t['zero'] = 556;\n\t     t['one'] = 556;\n\t     t['two'] = 556;\n\t     t['three'] = 556;\n\t     t['four'] = 556;\n\t     t['five'] = 556;\n\t     t['six'] = 556;\n\t     t['seven'] = 556;\n\t     t['eight'] = 556;\n\t     t['nine'] = 556;\n\t     t['colon'] = 333;\n\t     t['semicolon'] = 333;\n\t     t['less'] = 584;\n\t     t['equal'] = 584;\n\t     t['greater'] = 584;\n\t     t['question'] = 611;\n\t     t['at'] = 975;\n\t     t['A'] = 722;\n\t     t['B'] = 722;\n\t     t['C'] = 722;\n\t     t['D'] = 722;\n\t     t['E'] = 667;\n\t     t['F'] = 611;\n\t     t['G'] = 778;\n\t     t['H'] = 722;\n\t     t['I'] = 278;\n\t     t['J'] = 556;\n\t     t['K'] = 722;\n\t     t['L'] = 611;\n\t     t['M'] = 833;\n\t     t['N'] = 722;\n\t     t['O'] = 778;\n\t     t['P'] = 667;\n\t     t['Q'] = 778;\n\t     t['R'] = 722;\n\t     t['S'] = 667;\n\t     t['T'] = 611;\n\t     t['U'] = 722;\n\t     t['V'] = 667;\n\t     t['W'] = 944;\n\t     t['X'] = 667;\n\t     t['Y'] = 667;\n\t     t['Z'] = 611;\n\t     t['bracketleft'] = 333;\n\t     t['backslash'] = 278;\n\t     t['bracketright'] = 333;\n\t     t['asciicircum'] = 584;\n\t     t['underscore'] = 556;\n\t     t['quoteleft'] = 278;\n\t     t['a'] = 556;\n\t     t['b'] = 611;\n\t     t['c'] = 556;\n\t     t['d'] = 611;\n\t     t['e'] = 556;\n\t     t['f'] = 333;\n\t     t['g'] = 611;\n\t     t['h'] = 611;\n\t     t['i'] = 278;\n\t     t['j'] = 278;\n\t     t['k'] = 556;\n\t     t['l'] = 278;\n\t     t['m'] = 889;\n\t     t['n'] = 611;\n\t     t['o'] = 611;\n\t     t['p'] = 611;\n\t     t['q'] = 611;\n\t     t['r'] = 389;\n\t     t['s'] = 556;\n\t     t['t'] = 333;\n\t     t['u'] = 611;\n\t     t['v'] = 556;\n\t     t['w'] = 778;\n\t     t['x'] = 556;\n\t     t['y'] = 556;\n\t     t['z'] = 500;\n\t     t['braceleft'] = 389;\n\t     t['bar'] = 280;\n\t     t['braceright'] = 389;\n\t     t['asciitilde'] = 584;\n\t     t['exclamdown'] = 333;\n\t     t['cent'] = 556;\n\t     t['sterling'] = 556;\n\t     t['fraction'] = 167;\n\t     t['yen'] = 556;\n\t     t['florin'] = 556;\n\t     t['section'] = 556;\n\t     t['currency'] = 556;\n\t     t['quotesingle'] = 238;\n\t     t['quotedblleft'] = 500;\n\t     t['guillemotleft'] = 556;\n\t     t['guilsinglleft'] = 333;\n\t     t['guilsinglright'] = 333;\n\t     t['fi'] = 611;\n\t     t['fl'] = 611;\n\t     t['endash'] = 556;\n\t     t['dagger'] = 556;\n\t     t['daggerdbl'] = 556;\n\t     t['periodcentered'] = 278;\n\t     t['paragraph'] = 556;\n\t     t['bullet'] = 350;\n\t     t['quotesinglbase'] = 278;\n\t     t['quotedblbase'] = 500;\n\t     t['quotedblright'] = 500;\n\t     t['guillemotright'] = 556;\n\t     t['ellipsis'] = 1000;\n\t     t['perthousand'] = 1000;\n\t     t['questiondown'] = 611;\n\t     t['grave'] = 333;\n\t     t['acute'] = 333;\n\t     t['circumflex'] = 333;\n\t     t['tilde'] = 333;\n\t     t['macron'] = 333;\n\t     t['breve'] = 333;\n\t     t['dotaccent'] = 333;\n\t     t['dieresis'] = 333;\n\t     t['ring'] = 333;\n\t     t['cedilla'] = 333;\n\t     t['hungarumlaut'] = 333;\n\t     t['ogonek'] = 333;\n\t     t['caron'] = 333;\n\t     t['emdash'] = 1000;\n\t     t['AE'] = 1000;\n\t     t['ordfeminine'] = 370;\n\t     t['Lslash'] = 611;\n\t     t['Oslash'] = 778;\n\t     t['OE'] = 1000;\n\t     t['ordmasculine'] = 365;\n\t     t['ae'] = 889;\n\t     t['dotlessi'] = 278;\n\t     t['lslash'] = 278;\n\t     t['oslash'] = 611;\n\t     t['oe'] = 944;\n\t     t['germandbls'] = 611;\n\t     t['Idieresis'] = 278;\n\t     t['eacute'] = 556;\n\t     t['abreve'] = 556;\n\t     t['uhungarumlaut'] = 611;\n\t     t['ecaron'] = 556;\n\t     t['Ydieresis'] = 667;\n\t     t['divide'] = 584;\n\t     t['Yacute'] = 667;\n\t     t['Acircumflex'] = 722;\n\t     t['aacute'] = 556;\n\t     t['Ucircumflex'] = 722;\n\t     t['yacute'] = 556;\n\t     t['scommaaccent'] = 556;\n\t     t['ecircumflex'] = 556;\n\t     t['Uring'] = 722;\n\t     t['Udieresis'] = 722;\n\t     t['aogonek'] = 556;\n\t     t['Uacute'] = 722;\n\t     t['uogonek'] = 611;\n\t     t['Edieresis'] = 667;\n\t     t['Dcroat'] = 722;\n\t     t['commaaccent'] = 250;\n\t     t['copyright'] = 737;\n\t     t['Emacron'] = 667;\n\t     t['ccaron'] = 556;\n\t     t['aring'] = 556;\n\t     t['Ncommaaccent'] = 722;\n\t     t['lacute'] = 278;\n\t     t['agrave'] = 556;\n\t     t['Tcommaaccent'] = 611;\n\t     t['Cacute'] = 722;\n\t     t['atilde'] = 556;\n\t     t['Edotaccent'] = 667;\n\t     t['scaron'] = 556;\n\t     t['scedilla'] = 556;\n\t     t['iacute'] = 278;\n\t     t['lozenge'] = 494;\n\t     t['Rcaron'] = 722;\n\t     t['Gcommaaccent'] = 778;\n\t     t['ucircumflex'] = 611;\n\t     t['acircumflex'] = 556;\n\t     t['Amacron'] = 722;\n\t     t['rcaron'] = 389;\n\t     t['ccedilla'] = 556;\n\t     t['Zdotaccent'] = 611;\n\t     t['Thorn'] = 667;\n\t     t['Omacron'] = 778;\n\t     t['Racute'] = 722;\n\t     t['Sacute'] = 667;\n\t     t['dcaron'] = 743;\n\t     t['Umacron'] = 722;\n\t     t['uring'] = 611;\n\t     t['threesuperior'] = 333;\n\t     t['Ograve'] = 778;\n\t     t['Agrave'] = 722;\n\t     t['Abreve'] = 722;\n\t     t['multiply'] = 584;\n\t     t['uacute'] = 611;\n\t     t['Tcaron'] = 611;\n\t     t['partialdiff'] = 494;\n\t     t['ydieresis'] = 556;\n\t     t['Nacute'] = 722;\n\t     t['icircumflex'] = 278;\n\t     t['Ecircumflex'] = 667;\n\t     t['adieresis'] = 556;\n\t     t['edieresis'] = 556;\n\t     t['cacute'] = 556;\n\t     t['nacute'] = 611;\n\t     t['umacron'] = 611;\n\t     t['Ncaron'] = 722;\n\t     t['Iacute'] = 278;\n\t     t['plusminus'] = 584;\n\t     t['brokenbar'] = 280;\n\t     t['registered'] = 737;\n\t     t['Gbreve'] = 778;\n\t     t['Idotaccent'] = 278;\n\t     t['summation'] = 600;\n\t     t['Egrave'] = 667;\n\t     t['racute'] = 389;\n\t     t['omacron'] = 611;\n\t     t['Zacute'] = 611;\n\t     t['Zcaron'] = 611;\n\t     t['greaterequal'] = 549;\n\t     t['Eth'] = 722;\n\t     t['Ccedilla'] = 722;\n\t     t['lcommaaccent'] = 278;\n\t     t['tcaron'] = 389;\n\t     t['eogonek'] = 556;\n\t     t['Uogonek'] = 722;\n\t     t['Aacute'] = 722;\n\t     t['Adieresis'] = 722;\n\t     t['egrave'] = 556;\n\t     t['zacute'] = 500;\n\t     t['iogonek'] = 278;\n\t     t['Oacute'] = 778;\n\t     t['oacute'] = 611;\n\t     t['amacron'] = 556;\n\t     t['sacute'] = 556;\n\t     t['idieresis'] = 278;\n\t     t['Ocircumflex'] = 778;\n\t     t['Ugrave'] = 722;\n\t     t['Delta'] = 612;\n\t     t['thorn'] = 611;\n\t     t['twosuperior'] = 333;\n\t     t['Odieresis'] = 778;\n\t     t['mu'] = 611;\n\t     t['igrave'] = 278;\n\t     t['ohungarumlaut'] = 611;\n\t     t['Eogonek'] = 667;\n\t     t['dcroat'] = 611;\n\t     t['threequarters'] = 834;\n\t     t['Scedilla'] = 667;\n\t     t['lcaron'] = 400;\n\t     t['Kcommaaccent'] = 722;\n\t     t['Lacute'] = 611;\n\t     t['trademark'] = 1000;\n\t     t['edotaccent'] = 556;\n\t     t['Igrave'] = 278;\n\t     t['Imacron'] = 278;\n\t     t['Lcaron'] = 611;\n\t     t['onehalf'] = 834;\n\t     t['lessequal'] = 549;\n\t     t['ocircumflex'] = 611;\n\t     t['ntilde'] = 611;\n\t     t['Uhungarumlaut'] = 722;\n\t     t['Eacute'] = 667;\n\t     t['emacron'] = 556;\n\t     t['gbreve'] = 611;\n\t     t['onequarter'] = 834;\n\t     t['Scaron'] = 667;\n\t     t['Scommaaccent'] = 667;\n\t     t['Ohungarumlaut'] = 778;\n\t     t['degree'] = 400;\n\t     t['ograve'] = 611;\n\t     t['Ccaron'] = 722;\n\t     t['ugrave'] = 611;\n\t     t['radical'] = 549;\n\t     t['Dcaron'] = 722;\n\t     t['rcommaaccent'] = 389;\n\t     t['Ntilde'] = 722;\n\t     t['otilde'] = 611;\n\t     t['Rcommaaccent'] = 722;\n\t     t['Lcommaaccent'] = 611;\n\t     t['Atilde'] = 722;\n\t     t['Aogonek'] = 722;\n\t     t['Aring'] = 722;\n\t     t['Otilde'] = 778;\n\t     t['zdotaccent'] = 500;\n\t     t['Ecaron'] = 667;\n\t     t['Iogonek'] = 278;\n\t     t['kcommaaccent'] = 556;\n\t     t['minus'] = 584;\n\t     t['Icircumflex'] = 278;\n\t     t['ncaron'] = 611;\n\t     t['tcommaaccent'] = 333;\n\t     t['logicalnot'] = 584;\n\t     t['odieresis'] = 611;\n\t     t['udieresis'] = 611;\n\t     t['notequal'] = 549;\n\t     t['gcommaaccent'] = 611;\n\t     t['eth'] = 611;\n\t     t['zcaron'] = 500;\n\t     t['ncommaaccent'] = 611;\n\t     t['onesuperior'] = 333;\n\t     t['imacron'] = 278;\n\t     t['Euro'] = 556;\n\t    });\n\t    t['Helvetica-BoldOblique'] = getLookupTableFactory(function (t) {\n\t     t['space'] = 278;\n\t     t['exclam'] = 333;\n\t     t['quotedbl'] = 474;\n\t     t['numbersign'] = 556;\n\t     t['dollar'] = 556;\n\t     t['percent'] = 889;\n\t     t['ampersand'] = 722;\n\t     t['quoteright'] = 278;\n\t     t['parenleft'] = 333;\n\t     t['parenright'] = 333;\n\t     t['asterisk'] = 389;\n\t     t['plus'] = 584;\n\t     t['comma'] = 278;\n\t     t['hyphen'] = 333;\n\t     t['period'] = 278;\n\t     t['slash'] = 278;\n\t     t['zero'] = 556;\n\t     t['one'] = 556;\n\t     t['two'] = 556;\n\t     t['three'] = 556;\n\t     t['four'] = 556;\n\t     t['five'] = 556;\n\t     t['six'] = 556;\n\t     t['seven'] = 556;\n\t     t['eight'] = 556;\n\t     t['nine'] = 556;\n\t     t['colon'] = 333;\n\t     t['semicolon'] = 333;\n\t     t['less'] = 584;\n\t     t['equal'] = 584;\n\t     t['greater'] = 584;\n\t     t['question'] = 611;\n\t     t['at'] = 975;\n\t     t['A'] = 722;\n\t     t['B'] = 722;\n\t     t['C'] = 722;\n\t     t['D'] = 722;\n\t     t['E'] = 667;\n\t     t['F'] = 611;\n\t     t['G'] = 778;\n\t     t['H'] = 722;\n\t     t['I'] = 278;\n\t     t['J'] = 556;\n\t     t['K'] = 722;\n\t     t['L'] = 611;\n\t     t['M'] = 833;\n\t     t['N'] = 722;\n\t     t['O'] = 778;\n\t     t['P'] = 667;\n\t     t['Q'] = 778;\n\t     t['R'] = 722;\n\t     t['S'] = 667;\n\t     t['T'] = 611;\n\t     t['U'] = 722;\n\t     t['V'] = 667;\n\t     t['W'] = 944;\n\t     t['X'] = 667;\n\t     t['Y'] = 667;\n\t     t['Z'] = 611;\n\t     t['bracketleft'] = 333;\n\t     t['backslash'] = 278;\n\t     t['bracketright'] = 333;\n\t     t['asciicircum'] = 584;\n\t     t['underscore'] = 556;\n\t     t['quoteleft'] = 278;\n\t     t['a'] = 556;\n\t     t['b'] = 611;\n\t     t['c'] = 556;\n\t     t['d'] = 611;\n\t     t['e'] = 556;\n\t     t['f'] = 333;\n\t     t['g'] = 611;\n\t     t['h'] = 611;\n\t     t['i'] = 278;\n\t     t['j'] = 278;\n\t     t['k'] = 556;\n\t     t['l'] = 278;\n\t     t['m'] = 889;\n\t     t['n'] = 611;\n\t     t['o'] = 611;\n\t     t['p'] = 611;\n\t     t['q'] = 611;\n\t     t['r'] = 389;\n\t     t['s'] = 556;\n\t     t['t'] = 333;\n\t     t['u'] = 611;\n\t     t['v'] = 556;\n\t     t['w'] = 778;\n\t     t['x'] = 556;\n\t     t['y'] = 556;\n\t     t['z'] = 500;\n\t     t['braceleft'] = 389;\n\t     t['bar'] = 280;\n\t     t['braceright'] = 389;\n\t     t['asciitilde'] = 584;\n\t     t['exclamdown'] = 333;\n\t     t['cent'] = 556;\n\t     t['sterling'] = 556;\n\t     t['fraction'] = 167;\n\t     t['yen'] = 556;\n\t     t['florin'] = 556;\n\t     t['section'] = 556;\n\t     t['currency'] = 556;\n\t     t['quotesingle'] = 238;\n\t     t['quotedblleft'] = 500;\n\t     t['guillemotleft'] = 556;\n\t     t['guilsinglleft'] = 333;\n\t     t['guilsinglright'] = 333;\n\t     t['fi'] = 611;\n\t     t['fl'] = 611;\n\t     t['endash'] = 556;\n\t     t['dagger'] = 556;\n\t     t['daggerdbl'] = 556;\n\t     t['periodcentered'] = 278;\n\t     t['paragraph'] = 556;\n\t     t['bullet'] = 350;\n\t     t['quotesinglbase'] = 278;\n\t     t['quotedblbase'] = 500;\n\t     t['quotedblright'] = 500;\n\t     t['guillemotright'] = 556;\n\t     t['ellipsis'] = 1000;\n\t     t['perthousand'] = 1000;\n\t     t['questiondown'] = 611;\n\t     t['grave'] = 333;\n\t     t['acute'] = 333;\n\t     t['circumflex'] = 333;\n\t     t['tilde'] = 333;\n\t     t['macron'] = 333;\n\t     t['breve'] = 333;\n\t     t['dotaccent'] = 333;\n\t     t['dieresis'] = 333;\n\t     t['ring'] = 333;\n\t     t['cedilla'] = 333;\n\t     t['hungarumlaut'] = 333;\n\t     t['ogonek'] = 333;\n\t     t['caron'] = 333;\n\t     t['emdash'] = 1000;\n\t     t['AE'] = 1000;\n\t     t['ordfeminine'] = 370;\n\t     t['Lslash'] = 611;\n\t     t['Oslash'] = 778;\n\t     t['OE'] = 1000;\n\t     t['ordmasculine'] = 365;\n\t     t['ae'] = 889;\n\t     t['dotlessi'] = 278;\n\t     t['lslash'] = 278;\n\t     t['oslash'] = 611;\n\t     t['oe'] = 944;\n\t     t['germandbls'] = 611;\n\t     t['Idieresis'] = 278;\n\t     t['eacute'] = 556;\n\t     t['abreve'] = 556;\n\t     t['uhungarumlaut'] = 611;\n\t     t['ecaron'] = 556;\n\t     t['Ydieresis'] = 667;\n\t     t['divide'] = 584;\n\t     t['Yacute'] = 667;\n\t     t['Acircumflex'] = 722;\n\t     t['aacute'] = 556;\n\t     t['Ucircumflex'] = 722;\n\t     t['yacute'] = 556;\n\t     t['scommaaccent'] = 556;\n\t     t['ecircumflex'] = 556;\n\t     t['Uring'] = 722;\n\t     t['Udieresis'] = 722;\n\t     t['aogonek'] = 556;\n\t     t['Uacute'] = 722;\n\t     t['uogonek'] = 611;\n\t     t['Edieresis'] = 667;\n\t     t['Dcroat'] = 722;\n\t     t['commaaccent'] = 250;\n\t     t['copyright'] = 737;\n\t     t['Emacron'] = 667;\n\t     t['ccaron'] = 556;\n\t     t['aring'] = 556;\n\t     t['Ncommaaccent'] = 722;\n\t     t['lacute'] = 278;\n\t     t['agrave'] = 556;\n\t     t['Tcommaaccent'] = 611;\n\t     t['Cacute'] = 722;\n\t     t['atilde'] = 556;\n\t     t['Edotaccent'] = 667;\n\t     t['scaron'] = 556;\n\t     t['scedilla'] = 556;\n\t     t['iacute'] = 278;\n\t     t['lozenge'] = 494;\n\t     t['Rcaron'] = 722;\n\t     t['Gcommaaccent'] = 778;\n\t     t['ucircumflex'] = 611;\n\t     t['acircumflex'] = 556;\n\t     t['Amacron'] = 722;\n\t     t['rcaron'] = 389;\n\t     t['ccedilla'] = 556;\n\t     t['Zdotaccent'] = 611;\n\t     t['Thorn'] = 667;\n\t     t['Omacron'] = 778;\n\t     t['Racute'] = 722;\n\t     t['Sacute'] = 667;\n\t     t['dcaron'] = 743;\n\t     t['Umacron'] = 722;\n\t     t['uring'] = 611;\n\t     t['threesuperior'] = 333;\n\t     t['Ograve'] = 778;\n\t     t['Agrave'] = 722;\n\t     t['Abreve'] = 722;\n\t     t['multiply'] = 584;\n\t     t['uacute'] = 611;\n\t     t['Tcaron'] = 611;\n\t     t['partialdiff'] = 494;\n\t     t['ydieresis'] = 556;\n\t     t['Nacute'] = 722;\n\t     t['icircumflex'] = 278;\n\t     t['Ecircumflex'] = 667;\n\t     t['adieresis'] = 556;\n\t     t['edieresis'] = 556;\n\t     t['cacute'] = 556;\n\t     t['nacute'] = 611;\n\t     t['umacron'] = 611;\n\t     t['Ncaron'] = 722;\n\t     t['Iacute'] = 278;\n\t     t['plusminus'] = 584;\n\t     t['brokenbar'] = 280;\n\t     t['registered'] = 737;\n\t     t['Gbreve'] = 778;\n\t     t['Idotaccent'] = 278;\n\t     t['summation'] = 600;\n\t     t['Egrave'] = 667;\n\t     t['racute'] = 389;\n\t     t['omacron'] = 611;\n\t     t['Zacute'] = 611;\n\t     t['Zcaron'] = 611;\n\t     t['greaterequal'] = 549;\n\t     t['Eth'] = 722;\n\t     t['Ccedilla'] = 722;\n\t     t['lcommaaccent'] = 278;\n\t     t['tcaron'] = 389;\n\t     t['eogonek'] = 556;\n\t     t['Uogonek'] = 722;\n\t     t['Aacute'] = 722;\n\t     t['Adieresis'] = 722;\n\t     t['egrave'] = 556;\n\t     t['zacute'] = 500;\n\t     t['iogonek'] = 278;\n\t     t['Oacute'] = 778;\n\t     t['oacute'] = 611;\n\t     t['amacron'] = 556;\n\t     t['sacute'] = 556;\n\t     t['idieresis'] = 278;\n\t     t['Ocircumflex'] = 778;\n\t     t['Ugrave'] = 722;\n\t     t['Delta'] = 612;\n\t     t['thorn'] = 611;\n\t     t['twosuperior'] = 333;\n\t     t['Odieresis'] = 778;\n\t     t['mu'] = 611;\n\t     t['igrave'] = 278;\n\t     t['ohungarumlaut'] = 611;\n\t     t['Eogonek'] = 667;\n\t     t['dcroat'] = 611;\n\t     t['threequarters'] = 834;\n\t     t['Scedilla'] = 667;\n\t     t['lcaron'] = 400;\n\t     t['Kcommaaccent'] = 722;\n\t     t['Lacute'] = 611;\n\t     t['trademark'] = 1000;\n\t     t['edotaccent'] = 556;\n\t     t['Igrave'] = 278;\n\t     t['Imacron'] = 278;\n\t     t['Lcaron'] = 611;\n\t     t['onehalf'] = 834;\n\t     t['lessequal'] = 549;\n\t     t['ocircumflex'] = 611;\n\t     t['ntilde'] = 611;\n\t     t['Uhungarumlaut'] = 722;\n\t     t['Eacute'] = 667;\n\t     t['emacron'] = 556;\n\t     t['gbreve'] = 611;\n\t     t['onequarter'] = 834;\n\t     t['Scaron'] = 667;\n\t     t['Scommaaccent'] = 667;\n\t     t['Ohungarumlaut'] = 778;\n\t     t['degree'] = 400;\n\t     t['ograve'] = 611;\n\t     t['Ccaron'] = 722;\n\t     t['ugrave'] = 611;\n\t     t['radical'] = 549;\n\t     t['Dcaron'] = 722;\n\t     t['rcommaaccent'] = 389;\n\t     t['Ntilde'] = 722;\n\t     t['otilde'] = 611;\n\t     t['Rcommaaccent'] = 722;\n\t     t['Lcommaaccent'] = 611;\n\t     t['Atilde'] = 722;\n\t     t['Aogonek'] = 722;\n\t     t['Aring'] = 722;\n\t     t['Otilde'] = 778;\n\t     t['zdotaccent'] = 500;\n\t     t['Ecaron'] = 667;\n\t     t['Iogonek'] = 278;\n\t     t['kcommaaccent'] = 556;\n\t     t['minus'] = 584;\n\t     t['Icircumflex'] = 278;\n\t     t['ncaron'] = 611;\n\t     t['tcommaaccent'] = 333;\n\t     t['logicalnot'] = 584;\n\t     t['odieresis'] = 611;\n\t     t['udieresis'] = 611;\n\t     t['notequal'] = 549;\n\t     t['gcommaaccent'] = 611;\n\t     t['eth'] = 611;\n\t     t['zcaron'] = 500;\n\t     t['ncommaaccent'] = 611;\n\t     t['onesuperior'] = 333;\n\t     t['imacron'] = 278;\n\t     t['Euro'] = 556;\n\t    });\n\t    t['Helvetica-Oblique'] = getLookupTableFactory(function (t) {\n\t     t['space'] = 278;\n\t     t['exclam'] = 278;\n\t     t['quotedbl'] = 355;\n\t     t['numbersign'] = 556;\n\t     t['dollar'] = 556;\n\t     t['percent'] = 889;\n\t     t['ampersand'] = 667;\n\t     t['quoteright'] = 222;\n\t     t['parenleft'] = 333;\n\t     t['parenright'] = 333;\n\t     t['asterisk'] = 389;\n\t     t['plus'] = 584;\n\t     t['comma'] = 278;\n\t     t['hyphen'] = 333;\n\t     t['period'] = 278;\n\t     t['slash'] = 278;\n\t     t['zero'] = 556;\n\t     t['one'] = 556;\n\t     t['two'] = 556;\n\t     t['three'] = 556;\n\t     t['four'] = 556;\n\t     t['five'] = 556;\n\t     t['six'] = 556;\n\t     t['seven'] = 556;\n\t     t['eight'] = 556;\n\t     t['nine'] = 556;\n\t     t['colon'] = 278;\n\t     t['semicolon'] = 278;\n\t     t['less'] = 584;\n\t     t['equal'] = 584;\n\t     t['greater'] = 584;\n\t     t['question'] = 556;\n\t     t['at'] = 1015;\n\t     t['A'] = 667;\n\t     t['B'] = 667;\n\t     t['C'] = 722;\n\t     t['D'] = 722;\n\t     t['E'] = 667;\n\t     t['F'] = 611;\n\t     t['G'] = 778;\n\t     t['H'] = 722;\n\t     t['I'] = 278;\n\t     t['J'] = 500;\n\t     t['K'] = 667;\n\t     t['L'] = 556;\n\t     t['M'] = 833;\n\t     t['N'] = 722;\n\t     t['O'] = 778;\n\t     t['P'] = 667;\n\t     t['Q'] = 778;\n\t     t['R'] = 722;\n\t     t['S'] = 667;\n\t     t['T'] = 611;\n\t     t['U'] = 722;\n\t     t['V'] = 667;\n\t     t['W'] = 944;\n\t     t['X'] = 667;\n\t     t['Y'] = 667;\n\t     t['Z'] = 611;\n\t     t['bracketleft'] = 278;\n\t     t['backslash'] = 278;\n\t     t['bracketright'] = 278;\n\t     t['asciicircum'] = 469;\n\t     t['underscore'] = 556;\n\t     t['quoteleft'] = 222;\n\t     t['a'] = 556;\n\t     t['b'] = 556;\n\t     t['c'] = 500;\n\t     t['d'] = 556;\n\t     t['e'] = 556;\n\t     t['f'] = 278;\n\t     t['g'] = 556;\n\t     t['h'] = 556;\n\t     t['i'] = 222;\n\t     t['j'] = 222;\n\t     t['k'] = 500;\n\t     t['l'] = 222;\n\t     t['m'] = 833;\n\t     t['n'] = 556;\n\t     t['o'] = 556;\n\t     t['p'] = 556;\n\t     t['q'] = 556;\n\t     t['r'] = 333;\n\t     t['s'] = 500;\n\t     t['t'] = 278;\n\t     t['u'] = 556;\n\t     t['v'] = 500;\n\t     t['w'] = 722;\n\t     t['x'] = 500;\n\t     t['y'] = 500;\n\t     t['z'] = 500;\n\t     t['braceleft'] = 334;\n\t     t['bar'] = 260;\n\t     t['braceright'] = 334;\n\t     t['asciitilde'] = 584;\n\t     t['exclamdown'] = 333;\n\t     t['cent'] = 556;\n\t     t['sterling'] = 556;\n\t     t['fraction'] = 167;\n\t     t['yen'] = 556;\n\t     t['florin'] = 556;\n\t     t['section'] = 556;\n\t     t['currency'] = 556;\n\t     t['quotesingle'] = 191;\n\t     t['quotedblleft'] = 333;\n\t     t['guillemotleft'] = 556;\n\t     t['guilsinglleft'] = 333;\n\t     t['guilsinglright'] = 333;\n\t     t['fi'] = 500;\n\t     t['fl'] = 500;\n\t     t['endash'] = 556;\n\t     t['dagger'] = 556;\n\t     t['daggerdbl'] = 556;\n\t     t['periodcentered'] = 278;\n\t     t['paragraph'] = 537;\n\t     t['bullet'] = 350;\n\t     t['quotesinglbase'] = 222;\n\t     t['quotedblbase'] = 333;\n\t     t['quotedblright'] = 333;\n\t     t['guillemotright'] = 556;\n\t     t['ellipsis'] = 1000;\n\t     t['perthousand'] = 1000;\n\t     t['questiondown'] = 611;\n\t     t['grave'] = 333;\n\t     t['acute'] = 333;\n\t     t['circumflex'] = 333;\n\t     t['tilde'] = 333;\n\t     t['macron'] = 333;\n\t     t['breve'] = 333;\n\t     t['dotaccent'] = 333;\n\t     t['dieresis'] = 333;\n\t     t['ring'] = 333;\n\t     t['cedilla'] = 333;\n\t     t['hungarumlaut'] = 333;\n\t     t['ogonek'] = 333;\n\t     t['caron'] = 333;\n\t     t['emdash'] = 1000;\n\t     t['AE'] = 1000;\n\t     t['ordfeminine'] = 370;\n\t     t['Lslash'] = 556;\n\t     t['Oslash'] = 778;\n\t     t['OE'] = 1000;\n\t     t['ordmasculine'] = 365;\n\t     t['ae'] = 889;\n\t     t['dotlessi'] = 278;\n\t     t['lslash'] = 222;\n\t     t['oslash'] = 611;\n\t     t['oe'] = 944;\n\t     t['germandbls'] = 611;\n\t     t['Idieresis'] = 278;\n\t     t['eacute'] = 556;\n\t     t['abreve'] = 556;\n\t     t['uhungarumlaut'] = 556;\n\t     t['ecaron'] = 556;\n\t     t['Ydieresis'] = 667;\n\t     t['divide'] = 584;\n\t     t['Yacute'] = 667;\n\t     t['Acircumflex'] = 667;\n\t     t['aacute'] = 556;\n\t     t['Ucircumflex'] = 722;\n\t     t['yacute'] = 500;\n\t     t['scommaaccent'] = 500;\n\t     t['ecircumflex'] = 556;\n\t     t['Uring'] = 722;\n\t     t['Udieresis'] = 722;\n\t     t['aogonek'] = 556;\n\t     t['Uacute'] = 722;\n\t     t['uogonek'] = 556;\n\t     t['Edieresis'] = 667;\n\t     t['Dcroat'] = 722;\n\t     t['commaaccent'] = 250;\n\t     t['copyright'] = 737;\n\t     t['Emacron'] = 667;\n\t     t['ccaron'] = 500;\n\t     t['aring'] = 556;\n\t     t['Ncommaaccent'] = 722;\n\t     t['lacute'] = 222;\n\t     t['agrave'] = 556;\n\t     t['Tcommaaccent'] = 611;\n\t     t['Cacute'] = 722;\n\t     t['atilde'] = 556;\n\t     t['Edotaccent'] = 667;\n\t     t['scaron'] = 500;\n\t     t['scedilla'] = 500;\n\t     t['iacute'] = 278;\n\t     t['lozenge'] = 471;\n\t     t['Rcaron'] = 722;\n\t     t['Gcommaaccent'] = 778;\n\t     t['ucircumflex'] = 556;\n\t     t['acircumflex'] = 556;\n\t     t['Amacron'] = 667;\n\t     t['rcaron'] = 333;\n\t     t['ccedilla'] = 500;\n\t     t['Zdotaccent'] = 611;\n\t     t['Thorn'] = 667;\n\t     t['Omacron'] = 778;\n\t     t['Racute'] = 722;\n\t     t['Sacute'] = 667;\n\t     t['dcaron'] = 643;\n\t     t['Umacron'] = 722;\n\t     t['uring'] = 556;\n\t     t['threesuperior'] = 333;\n\t     t['Ograve'] = 778;\n\t     t['Agrave'] = 667;\n\t     t['Abreve'] = 667;\n\t     t['multiply'] = 584;\n\t     t['uacute'] = 556;\n\t     t['Tcaron'] = 611;\n\t     t['partialdiff'] = 476;\n\t     t['ydieresis'] = 500;\n\t     t['Nacute'] = 722;\n\t     t['icircumflex'] = 278;\n\t     t['Ecircumflex'] = 667;\n\t     t['adieresis'] = 556;\n\t     t['edieresis'] = 556;\n\t     t['cacute'] = 500;\n\t     t['nacute'] = 556;\n\t     t['umacron'] = 556;\n\t     t['Ncaron'] = 722;\n\t     t['Iacute'] = 278;\n\t     t['plusminus'] = 584;\n\t     t['brokenbar'] = 260;\n\t     t['registered'] = 737;\n\t     t['Gbreve'] = 778;\n\t     t['Idotaccent'] = 278;\n\t     t['summation'] = 600;\n\t     t['Egrave'] = 667;\n\t     t['racute'] = 333;\n\t     t['omacron'] = 556;\n\t     t['Zacute'] = 611;\n\t     t['Zcaron'] = 611;\n\t     t['greaterequal'] = 549;\n\t     t['Eth'] = 722;\n\t     t['Ccedilla'] = 722;\n\t     t['lcommaaccent'] = 222;\n\t     t['tcaron'] = 317;\n\t     t['eogonek'] = 556;\n\t     t['Uogonek'] = 722;\n\t     t['Aacute'] = 667;\n\t     t['Adieresis'] = 667;\n\t     t['egrave'] = 556;\n\t     t['zacute'] = 500;\n\t     t['iogonek'] = 222;\n\t     t['Oacute'] = 778;\n\t     t['oacute'] = 556;\n\t     t['amacron'] = 556;\n\t     t['sacute'] = 500;\n\t     t['idieresis'] = 278;\n\t     t['Ocircumflex'] = 778;\n\t     t['Ugrave'] = 722;\n\t     t['Delta'] = 612;\n\t     t['thorn'] = 556;\n\t     t['twosuperior'] = 333;\n\t     t['Odieresis'] = 778;\n\t     t['mu'] = 556;\n\t     t['igrave'] = 278;\n\t     t['ohungarumlaut'] = 556;\n\t     t['Eogonek'] = 667;\n\t     t['dcroat'] = 556;\n\t     t['threequarters'] = 834;\n\t     t['Scedilla'] = 667;\n\t     t['lcaron'] = 299;\n\t     t['Kcommaaccent'] = 667;\n\t     t['Lacute'] = 556;\n\t     t['trademark'] = 1000;\n\t     t['edotaccent'] = 556;\n\t     t['Igrave'] = 278;\n\t     t['Imacron'] = 278;\n\t     t['Lcaron'] = 556;\n\t     t['onehalf'] = 834;\n\t     t['lessequal'] = 549;\n\t     t['ocircumflex'] = 556;\n\t     t['ntilde'] = 556;\n\t     t['Uhungarumlaut'] = 722;\n\t     t['Eacute'] = 667;\n\t     t['emacron'] = 556;\n\t     t['gbreve'] = 556;\n\t     t['onequarter'] = 834;\n\t     t['Scaron'] = 667;\n\t     t['Scommaaccent'] = 667;\n\t     t['Ohungarumlaut'] = 778;\n\t     t['degree'] = 400;\n\t     t['ograve'] = 556;\n\t     t['Ccaron'] = 722;\n\t     t['ugrave'] = 556;\n\t     t['radical'] = 453;\n\t     t['Dcaron'] = 722;\n\t     t['rcommaaccent'] = 333;\n\t     t['Ntilde'] = 722;\n\t     t['otilde'] = 556;\n\t     t['Rcommaaccent'] = 722;\n\t     t['Lcommaaccent'] = 556;\n\t     t['Atilde'] = 667;\n\t     t['Aogonek'] = 667;\n\t     t['Aring'] = 667;\n\t     t['Otilde'] = 778;\n\t     t['zdotaccent'] = 500;\n\t     t['Ecaron'] = 667;\n\t     t['Iogonek'] = 278;\n\t     t['kcommaaccent'] = 500;\n\t     t['minus'] = 584;\n\t     t['Icircumflex'] = 278;\n\t     t['ncaron'] = 556;\n\t     t['tcommaaccent'] = 278;\n\t     t['logicalnot'] = 584;\n\t     t['odieresis'] = 556;\n\t     t['udieresis'] = 556;\n\t     t['notequal'] = 549;\n\t     t['gcommaaccent'] = 556;\n\t     t['eth'] = 556;\n\t     t['zcaron'] = 500;\n\t     t['ncommaaccent'] = 556;\n\t     t['onesuperior'] = 333;\n\t     t['imacron'] = 278;\n\t     t['Euro'] = 556;\n\t    });\n\t    t['Symbol'] = getLookupTableFactory(function (t) {\n\t     t['space'] = 250;\n\t     t['exclam'] = 333;\n\t     t['universal'] = 713;\n\t     t['numbersign'] = 500;\n\t     t['existential'] = 549;\n\t     t['percent'] = 833;\n\t     t['ampersand'] = 778;\n\t     t['suchthat'] = 439;\n\t     t['parenleft'] = 333;\n\t     t['parenright'] = 333;\n\t     t['asteriskmath'] = 500;\n\t     t['plus'] = 549;\n\t     t['comma'] = 250;\n\t     t['minus'] = 549;\n\t     t['period'] = 250;\n\t     t['slash'] = 278;\n\t     t['zero'] = 500;\n\t     t['one'] = 500;\n\t     t['two'] = 500;\n\t     t['three'] = 500;\n\t     t['four'] = 500;\n\t     t['five'] = 500;\n\t     t['six'] = 500;\n\t     t['seven'] = 500;\n\t     t['eight'] = 500;\n\t     t['nine'] = 500;\n\t     t['colon'] = 278;\n\t     t['semicolon'] = 278;\n\t     t['less'] = 549;\n\t     t['equal'] = 549;\n\t     t['greater'] = 549;\n\t     t['question'] = 444;\n\t     t['congruent'] = 549;\n\t     t['Alpha'] = 722;\n\t     t['Beta'] = 667;\n\t     t['Chi'] = 722;\n\t     t['Delta'] = 612;\n\t     t['Epsilon'] = 611;\n\t     t['Phi'] = 763;\n\t     t['Gamma'] = 603;\n\t     t['Eta'] = 722;\n\t     t['Iota'] = 333;\n\t     t['theta1'] = 631;\n\t     t['Kappa'] = 722;\n\t     t['Lambda'] = 686;\n\t     t['Mu'] = 889;\n\t     t['Nu'] = 722;\n\t     t['Omicron'] = 722;\n\t     t['Pi'] = 768;\n\t     t['Theta'] = 741;\n\t     t['Rho'] = 556;\n\t     t['Sigma'] = 592;\n\t     t['Tau'] = 611;\n\t     t['Upsilon'] = 690;\n\t     t['sigma1'] = 439;\n\t     t['Omega'] = 768;\n\t     t['Xi'] = 645;\n\t     t['Psi'] = 795;\n\t     t['Zeta'] = 611;\n\t     t['bracketleft'] = 333;\n\t     t['therefore'] = 863;\n\t     t['bracketright'] = 333;\n\t     t['perpendicular'] = 658;\n\t     t['underscore'] = 500;\n\t     t['radicalex'] = 500;\n\t     t['alpha'] = 631;\n\t     t['beta'] = 549;\n\t     t['chi'] = 549;\n\t     t['delta'] = 494;\n\t     t['epsilon'] = 439;\n\t     t['phi'] = 521;\n\t     t['gamma'] = 411;\n\t     t['eta'] = 603;\n\t     t['iota'] = 329;\n\t     t['phi1'] = 603;\n\t     t['kappa'] = 549;\n\t     t['lambda'] = 549;\n\t     t['mu'] = 576;\n\t     t['nu'] = 521;\n\t     t['omicron'] = 549;\n\t     t['pi'] = 549;\n\t     t['theta'] = 521;\n\t     t['rho'] = 549;\n\t     t['sigma'] = 603;\n\t     t['tau'] = 439;\n\t     t['upsilon'] = 576;\n\t     t['omega1'] = 713;\n\t     t['omega'] = 686;\n\t     t['xi'] = 493;\n\t     t['psi'] = 686;\n\t     t['zeta'] = 494;\n\t     t['braceleft'] = 480;\n\t     t['bar'] = 200;\n\t     t['braceright'] = 480;\n\t     t['similar'] = 549;\n\t     t['Euro'] = 750;\n\t     t['Upsilon1'] = 620;\n\t     t['minute'] = 247;\n\t     t['lessequal'] = 549;\n\t     t['fraction'] = 167;\n\t     t['infinity'] = 713;\n\t     t['florin'] = 500;\n\t     t['club'] = 753;\n\t     t['diamond'] = 753;\n\t     t['heart'] = 753;\n\t     t['spade'] = 753;\n\t     t['arrowboth'] = 1042;\n\t     t['arrowleft'] = 987;\n\t     t['arrowup'] = 603;\n\t     t['arrowright'] = 987;\n\t     t['arrowdown'] = 603;\n\t     t['degree'] = 400;\n\t     t['plusminus'] = 549;\n\t     t['second'] = 411;\n\t     t['greaterequal'] = 549;\n\t     t['multiply'] = 549;\n\t     t['proportional'] = 713;\n\t     t['partialdiff'] = 494;\n\t     t['bullet'] = 460;\n\t     t['divide'] = 549;\n\t     t['notequal'] = 549;\n\t     t['equivalence'] = 549;\n\t     t['approxequal'] = 549;\n\t     t['ellipsis'] = 1000;\n\t     t['arrowvertex'] = 603;\n\t     t['arrowhorizex'] = 1000;\n\t     t['carriagereturn'] = 658;\n\t     t['aleph'] = 823;\n\t     t['Ifraktur'] = 686;\n\t     t['Rfraktur'] = 795;\n\t     t['weierstrass'] = 987;\n\t     t['circlemultiply'] = 768;\n\t     t['circleplus'] = 768;\n\t     t['emptyset'] = 823;\n\t     t['intersection'] = 768;\n\t     t['union'] = 768;\n\t     t['propersuperset'] = 713;\n\t     t['reflexsuperset'] = 713;\n\t     t['notsubset'] = 713;\n\t     t['propersubset'] = 713;\n\t     t['reflexsubset'] = 713;\n\t     t['element'] = 713;\n\t     t['notelement'] = 713;\n\t     t['angle'] = 768;\n\t     t['gradient'] = 713;\n\t     t['registerserif'] = 790;\n\t     t['copyrightserif'] = 790;\n\t     t['trademarkserif'] = 890;\n\t     t['product'] = 823;\n\t     t['radical'] = 549;\n\t     t['dotmath'] = 250;\n\t     t['logicalnot'] = 713;\n\t     t['logicaland'] = 603;\n\t     t['logicalor'] = 603;\n\t     t['arrowdblboth'] = 1042;\n\t     t['arrowdblleft'] = 987;\n\t     t['arrowdblup'] = 603;\n\t     t['arrowdblright'] = 987;\n\t     t['arrowdbldown'] = 603;\n\t     t['lozenge'] = 494;\n\t     t['angleleft'] = 329;\n\t     t['registersans'] = 790;\n\t     t['copyrightsans'] = 790;\n\t     t['trademarksans'] = 786;\n\t     t['summation'] = 713;\n\t     t['parenlefttp'] = 384;\n\t     t['parenleftex'] = 384;\n\t     t['parenleftbt'] = 384;\n\t     t['bracketlefttp'] = 384;\n\t     t['bracketleftex'] = 384;\n\t     t['bracketleftbt'] = 384;\n\t     t['bracelefttp'] = 494;\n\t     t['braceleftmid'] = 494;\n\t     t['braceleftbt'] = 494;\n\t     t['braceex'] = 494;\n\t     t['angleright'] = 329;\n\t     t['integral'] = 274;\n\t     t['integraltp'] = 686;\n\t     t['integralex'] = 686;\n\t     t['integralbt'] = 686;\n\t     t['parenrighttp'] = 384;\n\t     t['parenrightex'] = 384;\n\t     t['parenrightbt'] = 384;\n\t     t['bracketrighttp'] = 384;\n\t     t['bracketrightex'] = 384;\n\t     t['bracketrightbt'] = 384;\n\t     t['bracerighttp'] = 494;\n\t     t['bracerightmid'] = 494;\n\t     t['bracerightbt'] = 494;\n\t     t['apple'] = 790;\n\t    });\n\t    t['Times-Roman'] = getLookupTableFactory(function (t) {\n\t     t['space'] = 250;\n\t     t['exclam'] = 333;\n\t     t['quotedbl'] = 408;\n\t     t['numbersign'] = 500;\n\t     t['dollar'] = 500;\n\t     t['percent'] = 833;\n\t     t['ampersand'] = 778;\n\t     t['quoteright'] = 333;\n\t     t['parenleft'] = 333;\n\t     t['parenright'] = 333;\n\t     t['asterisk'] = 500;\n\t     t['plus'] = 564;\n\t     t['comma'] = 250;\n\t     t['hyphen'] = 333;\n\t     t['period'] = 250;\n\t     t['slash'] = 278;\n\t     t['zero'] = 500;\n\t     t['one'] = 500;\n\t     t['two'] = 500;\n\t     t['three'] = 500;\n\t     t['four'] = 500;\n\t     t['five'] = 500;\n\t     t['six'] = 500;\n\t     t['seven'] = 500;\n\t     t['eight'] = 500;\n\t     t['nine'] = 500;\n\t     t['colon'] = 278;\n\t     t['semicolon'] = 278;\n\t     t['less'] = 564;\n\t     t['equal'] = 564;\n\t     t['greater'] = 564;\n\t     t['question'] = 444;\n\t     t['at'] = 921;\n\t     t['A'] = 722;\n\t     t['B'] = 667;\n\t     t['C'] = 667;\n\t     t['D'] = 722;\n\t     t['E'] = 611;\n\t     t['F'] = 556;\n\t     t['G'] = 722;\n\t     t['H'] = 722;\n\t     t['I'] = 333;\n\t     t['J'] = 389;\n\t     t['K'] = 722;\n\t     t['L'] = 611;\n\t     t['M'] = 889;\n\t     t['N'] = 722;\n\t     t['O'] = 722;\n\t     t['P'] = 556;\n\t     t['Q'] = 722;\n\t     t['R'] = 667;\n\t     t['S'] = 556;\n\t     t['T'] = 611;\n\t     t['U'] = 722;\n\t     t['V'] = 722;\n\t     t['W'] = 944;\n\t     t['X'] = 722;\n\t     t['Y'] = 722;\n\t     t['Z'] = 611;\n\t     t['bracketleft'] = 333;\n\t     t['backslash'] = 278;\n\t     t['bracketright'] = 333;\n\t     t['asciicircum'] = 469;\n\t     t['underscore'] = 500;\n\t     t['quoteleft'] = 333;\n\t     t['a'] = 444;\n\t     t['b'] = 500;\n\t     t['c'] = 444;\n\t     t['d'] = 500;\n\t     t['e'] = 444;\n\t     t['f'] = 333;\n\t     t['g'] = 500;\n\t     t['h'] = 500;\n\t     t['i'] = 278;\n\t     t['j'] = 278;\n\t     t['k'] = 500;\n\t     t['l'] = 278;\n\t     t['m'] = 778;\n\t     t['n'] = 500;\n\t     t['o'] = 500;\n\t     t['p'] = 500;\n\t     t['q'] = 500;\n\t     t['r'] = 333;\n\t     t['s'] = 389;\n\t     t['t'] = 278;\n\t     t['u'] = 500;\n\t     t['v'] = 500;\n\t     t['w'] = 722;\n\t     t['x'] = 500;\n\t     t['y'] = 500;\n\t     t['z'] = 444;\n\t     t['braceleft'] = 480;\n\t     t['bar'] = 200;\n\t     t['braceright'] = 480;\n\t     t['asciitilde'] = 541;\n\t     t['exclamdown'] = 333;\n\t     t['cent'] = 500;\n\t     t['sterling'] = 500;\n\t     t['fraction'] = 167;\n\t     t['yen'] = 500;\n\t     t['florin'] = 500;\n\t     t['section'] = 500;\n\t     t['currency'] = 500;\n\t     t['quotesingle'] = 180;\n\t     t['quotedblleft'] = 444;\n\t     t['guillemotleft'] = 500;\n\t     t['guilsinglleft'] = 333;\n\t     t['guilsinglright'] = 333;\n\t     t['fi'] = 556;\n\t     t['fl'] = 556;\n\t     t['endash'] = 500;\n\t     t['dagger'] = 500;\n\t     t['daggerdbl'] = 500;\n\t     t['periodcentered'] = 250;\n\t     t['paragraph'] = 453;\n\t     t['bullet'] = 350;\n\t     t['quotesinglbase'] = 333;\n\t     t['quotedblbase'] = 444;\n\t     t['quotedblright'] = 444;\n\t     t['guillemotright'] = 500;\n\t     t['ellipsis'] = 1000;\n\t     t['perthousand'] = 1000;\n\t     t['questiondown'] = 444;\n\t     t['grave'] = 333;\n\t     t['acute'] = 333;\n\t     t['circumflex'] = 333;\n\t     t['tilde'] = 333;\n\t     t['macron'] = 333;\n\t     t['breve'] = 333;\n\t     t['dotaccent'] = 333;\n\t     t['dieresis'] = 333;\n\t     t['ring'] = 333;\n\t     t['cedilla'] = 333;\n\t     t['hungarumlaut'] = 333;\n\t     t['ogonek'] = 333;\n\t     t['caron'] = 333;\n\t     t['emdash'] = 1000;\n\t     t['AE'] = 889;\n\t     t['ordfeminine'] = 276;\n\t     t['Lslash'] = 611;\n\t     t['Oslash'] = 722;\n\t     t['OE'] = 889;\n\t     t['ordmasculine'] = 310;\n\t     t['ae'] = 667;\n\t     t['dotlessi'] = 278;\n\t     t['lslash'] = 278;\n\t     t['oslash'] = 500;\n\t     t['oe'] = 722;\n\t     t['germandbls'] = 500;\n\t     t['Idieresis'] = 333;\n\t     t['eacute'] = 444;\n\t     t['abreve'] = 444;\n\t     t['uhungarumlaut'] = 500;\n\t     t['ecaron'] = 444;\n\t     t['Ydieresis'] = 722;\n\t     t['divide'] = 564;\n\t     t['Yacute'] = 722;\n\t     t['Acircumflex'] = 722;\n\t     t['aacute'] = 444;\n\t     t['Ucircumflex'] = 722;\n\t     t['yacute'] = 500;\n\t     t['scommaaccent'] = 389;\n\t     t['ecircumflex'] = 444;\n\t     t['Uring'] = 722;\n\t     t['Udieresis'] = 722;\n\t     t['aogonek'] = 444;\n\t     t['Uacute'] = 722;\n\t     t['uogonek'] = 500;\n\t     t['Edieresis'] = 611;\n\t     t['Dcroat'] = 722;\n\t     t['commaaccent'] = 250;\n\t     t['copyright'] = 760;\n\t     t['Emacron'] = 611;\n\t     t['ccaron'] = 444;\n\t     t['aring'] = 444;\n\t     t['Ncommaaccent'] = 722;\n\t     t['lacute'] = 278;\n\t     t['agrave'] = 444;\n\t     t['Tcommaaccent'] = 611;\n\t     t['Cacute'] = 667;\n\t     t['atilde'] = 444;\n\t     t['Edotaccent'] = 611;\n\t     t['scaron'] = 389;\n\t     t['scedilla'] = 389;\n\t     t['iacute'] = 278;\n\t     t['lozenge'] = 471;\n\t     t['Rcaron'] = 667;\n\t     t['Gcommaaccent'] = 722;\n\t     t['ucircumflex'] = 500;\n\t     t['acircumflex'] = 444;\n\t     t['Amacron'] = 722;\n\t     t['rcaron'] = 333;\n\t     t['ccedilla'] = 444;\n\t     t['Zdotaccent'] = 611;\n\t     t['Thorn'] = 556;\n\t     t['Omacron'] = 722;\n\t     t['Racute'] = 667;\n\t     t['Sacute'] = 556;\n\t     t['dcaron'] = 588;\n\t     t['Umacron'] = 722;\n\t     t['uring'] = 500;\n\t     t['threesuperior'] = 300;\n\t     t['Ograve'] = 722;\n\t     t['Agrave'] = 722;\n\t     t['Abreve'] = 722;\n\t     t['multiply'] = 564;\n\t     t['uacute'] = 500;\n\t     t['Tcaron'] = 611;\n\t     t['partialdiff'] = 476;\n\t     t['ydieresis'] = 500;\n\t     t['Nacute'] = 722;\n\t     t['icircumflex'] = 278;\n\t     t['Ecircumflex'] = 611;\n\t     t['adieresis'] = 444;\n\t     t['edieresis'] = 444;\n\t     t['cacute'] = 444;\n\t     t['nacute'] = 500;\n\t     t['umacron'] = 500;\n\t     t['Ncaron'] = 722;\n\t     t['Iacute'] = 333;\n\t     t['plusminus'] = 564;\n\t     t['brokenbar'] = 200;\n\t     t['registered'] = 760;\n\t     t['Gbreve'] = 722;\n\t     t['Idotaccent'] = 333;\n\t     t['summation'] = 600;\n\t     t['Egrave'] = 611;\n\t     t['racute'] = 333;\n\t     t['omacron'] = 500;\n\t     t['Zacute'] = 611;\n\t     t['Zcaron'] = 611;\n\t     t['greaterequal'] = 549;\n\t     t['Eth'] = 722;\n\t     t['Ccedilla'] = 667;\n\t     t['lcommaaccent'] = 278;\n\t     t['tcaron'] = 326;\n\t     t['eogonek'] = 444;\n\t     t['Uogonek'] = 722;\n\t     t['Aacute'] = 722;\n\t     t['Adieresis'] = 722;\n\t     t['egrave'] = 444;\n\t     t['zacute'] = 444;\n\t     t['iogonek'] = 278;\n\t     t['Oacute'] = 722;\n\t     t['oacute'] = 500;\n\t     t['amacron'] = 444;\n\t     t['sacute'] = 389;\n\t     t['idieresis'] = 278;\n\t     t['Ocircumflex'] = 722;\n\t     t['Ugrave'] = 722;\n\t     t['Delta'] = 612;\n\t     t['thorn'] = 500;\n\t     t['twosuperior'] = 300;\n\t     t['Odieresis'] = 722;\n\t     t['mu'] = 500;\n\t     t['igrave'] = 278;\n\t     t['ohungarumlaut'] = 500;\n\t     t['Eogonek'] = 611;\n\t     t['dcroat'] = 500;\n\t     t['threequarters'] = 750;\n\t     t['Scedilla'] = 556;\n\t     t['lcaron'] = 344;\n\t     t['Kcommaaccent'] = 722;\n\t     t['Lacute'] = 611;\n\t     t['trademark'] = 980;\n\t     t['edotaccent'] = 444;\n\t     t['Igrave'] = 333;\n\t     t['Imacron'] = 333;\n\t     t['Lcaron'] = 611;\n\t     t['onehalf'] = 750;\n\t     t['lessequal'] = 549;\n\t     t['ocircumflex'] = 500;\n\t     t['ntilde'] = 500;\n\t     t['Uhungarumlaut'] = 722;\n\t     t['Eacute'] = 611;\n\t     t['emacron'] = 444;\n\t     t['gbreve'] = 500;\n\t     t['onequarter'] = 750;\n\t     t['Scaron'] = 556;\n\t     t['Scommaaccent'] = 556;\n\t     t['Ohungarumlaut'] = 722;\n\t     t['degree'] = 400;\n\t     t['ograve'] = 500;\n\t     t['Ccaron'] = 667;\n\t     t['ugrave'] = 500;\n\t     t['radical'] = 453;\n\t     t['Dcaron'] = 722;\n\t     t['rcommaaccent'] = 333;\n\t     t['Ntilde'] = 722;\n\t     t['otilde'] = 500;\n\t     t['Rcommaaccent'] = 667;\n\t     t['Lcommaaccent'] = 611;\n\t     t['Atilde'] = 722;\n\t     t['Aogonek'] = 722;\n\t     t['Aring'] = 722;\n\t     t['Otilde'] = 722;\n\t     t['zdotaccent'] = 444;\n\t     t['Ecaron'] = 611;\n\t     t['Iogonek'] = 333;\n\t     t['kcommaaccent'] = 500;\n\t     t['minus'] = 564;\n\t     t['Icircumflex'] = 333;\n\t     t['ncaron'] = 500;\n\t     t['tcommaaccent'] = 278;\n\t     t['logicalnot'] = 564;\n\t     t['odieresis'] = 500;\n\t     t['udieresis'] = 500;\n\t     t['notequal'] = 549;\n\t     t['gcommaaccent'] = 500;\n\t     t['eth'] = 500;\n\t     t['zcaron'] = 444;\n\t     t['ncommaaccent'] = 500;\n\t     t['onesuperior'] = 300;\n\t     t['imacron'] = 278;\n\t     t['Euro'] = 500;\n\t    });\n\t    t['Times-Bold'] = getLookupTableFactory(function (t) {\n\t     t['space'] = 250;\n\t     t['exclam'] = 333;\n\t     t['quotedbl'] = 555;\n\t     t['numbersign'] = 500;\n\t     t['dollar'] = 500;\n\t     t['percent'] = 1000;\n\t     t['ampersand'] = 833;\n\t     t['quoteright'] = 333;\n\t     t['parenleft'] = 333;\n\t     t['parenright'] = 333;\n\t     t['asterisk'] = 500;\n\t     t['plus'] = 570;\n\t     t['comma'] = 250;\n\t     t['hyphen'] = 333;\n\t     t['period'] = 250;\n\t     t['slash'] = 278;\n\t     t['zero'] = 500;\n\t     t['one'] = 500;\n\t     t['two'] = 500;\n\t     t['three'] = 500;\n\t     t['four'] = 500;\n\t     t['five'] = 500;\n\t     t['six'] = 500;\n\t     t['seven'] = 500;\n\t     t['eight'] = 500;\n\t     t['nine'] = 500;\n\t     t['colon'] = 333;\n\t     t['semicolon'] = 333;\n\t     t['less'] = 570;\n\t     t['equal'] = 570;\n\t     t['greater'] = 570;\n\t     t['question'] = 500;\n\t     t['at'] = 930;\n\t     t['A'] = 722;\n\t     t['B'] = 667;\n\t     t['C'] = 722;\n\t     t['D'] = 722;\n\t     t['E'] = 667;\n\t     t['F'] = 611;\n\t     t['G'] = 778;\n\t     t['H'] = 778;\n\t     t['I'] = 389;\n\t     t['J'] = 500;\n\t     t['K'] = 778;\n\t     t['L'] = 667;\n\t     t['M'] = 944;\n\t     t['N'] = 722;\n\t     t['O'] = 778;\n\t     t['P'] = 611;\n\t     t['Q'] = 778;\n\t     t['R'] = 722;\n\t     t['S'] = 556;\n\t     t['T'] = 667;\n\t     t['U'] = 722;\n\t     t['V'] = 722;\n\t     t['W'] = 1000;\n\t     t['X'] = 722;\n\t     t['Y'] = 722;\n\t     t['Z'] = 667;\n\t     t['bracketleft'] = 333;\n\t     t['backslash'] = 278;\n\t     t['bracketright'] = 333;\n\t     t['asciicircum'] = 581;\n\t     t['underscore'] = 500;\n\t     t['quoteleft'] = 333;\n\t     t['a'] = 500;\n\t     t['b'] = 556;\n\t     t['c'] = 444;\n\t     t['d'] = 556;\n\t     t['e'] = 444;\n\t     t['f'] = 333;\n\t     t['g'] = 500;\n\t     t['h'] = 556;\n\t     t['i'] = 278;\n\t     t['j'] = 333;\n\t     t['k'] = 556;\n\t     t['l'] = 278;\n\t     t['m'] = 833;\n\t     t['n'] = 556;\n\t     t['o'] = 500;\n\t     t['p'] = 556;\n\t     t['q'] = 556;\n\t     t['r'] = 444;\n\t     t['s'] = 389;\n\t     t['t'] = 333;\n\t     t['u'] = 556;\n\t     t['v'] = 500;\n\t     t['w'] = 722;\n\t     t['x'] = 500;\n\t     t['y'] = 500;\n\t     t['z'] = 444;\n\t     t['braceleft'] = 394;\n\t     t['bar'] = 220;\n\t     t['braceright'] = 394;\n\t     t['asciitilde'] = 520;\n\t     t['exclamdown'] = 333;\n\t     t['cent'] = 500;\n\t     t['sterling'] = 500;\n\t     t['fraction'] = 167;\n\t     t['yen'] = 500;\n\t     t['florin'] = 500;\n\t     t['section'] = 500;\n\t     t['currency'] = 500;\n\t     t['quotesingle'] = 278;\n\t     t['quotedblleft'] = 500;\n\t     t['guillemotleft'] = 500;\n\t     t['guilsinglleft'] = 333;\n\t     t['guilsinglright'] = 333;\n\t     t['fi'] = 556;\n\t     t['fl'] = 556;\n\t     t['endash'] = 500;\n\t     t['dagger'] = 500;\n\t     t['daggerdbl'] = 500;\n\t     t['periodcentered'] = 250;\n\t     t['paragraph'] = 540;\n\t     t['bullet'] = 350;\n\t     t['quotesinglbase'] = 333;\n\t     t['quotedblbase'] = 500;\n\t     t['quotedblright'] = 500;\n\t     t['guillemotright'] = 500;\n\t     t['ellipsis'] = 1000;\n\t     t['perthousand'] = 1000;\n\t     t['questiondown'] = 500;\n\t     t['grave'] = 333;\n\t     t['acute'] = 333;\n\t     t['circumflex'] = 333;\n\t     t['tilde'] = 333;\n\t     t['macron'] = 333;\n\t     t['breve'] = 333;\n\t     t['dotaccent'] = 333;\n\t     t['dieresis'] = 333;\n\t     t['ring'] = 333;\n\t     t['cedilla'] = 333;\n\t     t['hungarumlaut'] = 333;\n\t     t['ogonek'] = 333;\n\t     t['caron'] = 333;\n\t     t['emdash'] = 1000;\n\t     t['AE'] = 1000;\n\t     t['ordfeminine'] = 300;\n\t     t['Lslash'] = 667;\n\t     t['Oslash'] = 778;\n\t     t['OE'] = 1000;\n\t     t['ordmasculine'] = 330;\n\t     t['ae'] = 722;\n\t     t['dotlessi'] = 278;\n\t     t['lslash'] = 278;\n\t     t['oslash'] = 500;\n\t     t['oe'] = 722;\n\t     t['germandbls'] = 556;\n\t     t['Idieresis'] = 389;\n\t     t['eacute'] = 444;\n\t     t['abreve'] = 500;\n\t     t['uhungarumlaut'] = 556;\n\t     t['ecaron'] = 444;\n\t     t['Ydieresis'] = 722;\n\t     t['divide'] = 570;\n\t     t['Yacute'] = 722;\n\t     t['Acircumflex'] = 722;\n\t     t['aacute'] = 500;\n\t     t['Ucircumflex'] = 722;\n\t     t['yacute'] = 500;\n\t     t['scommaaccent'] = 389;\n\t     t['ecircumflex'] = 444;\n\t     t['Uring'] = 722;\n\t     t['Udieresis'] = 722;\n\t     t['aogonek'] = 500;\n\t     t['Uacute'] = 722;\n\t     t['uogonek'] = 556;\n\t     t['Edieresis'] = 667;\n\t     t['Dcroat'] = 722;\n\t     t['commaaccent'] = 250;\n\t     t['copyright'] = 747;\n\t     t['Emacron'] = 667;\n\t     t['ccaron'] = 444;\n\t     t['aring'] = 500;\n\t     t['Ncommaaccent'] = 722;\n\t     t['lacute'] = 278;\n\t     t['agrave'] = 500;\n\t     t['Tcommaaccent'] = 667;\n\t     t['Cacute'] = 722;\n\t     t['atilde'] = 500;\n\t     t['Edotaccent'] = 667;\n\t     t['scaron'] = 389;\n\t     t['scedilla'] = 389;\n\t     t['iacute'] = 278;\n\t     t['lozenge'] = 494;\n\t     t['Rcaron'] = 722;\n\t     t['Gcommaaccent'] = 778;\n\t     t['ucircumflex'] = 556;\n\t     t['acircumflex'] = 500;\n\t     t['Amacron'] = 722;\n\t     t['rcaron'] = 444;\n\t     t['ccedilla'] = 444;\n\t     t['Zdotaccent'] = 667;\n\t     t['Thorn'] = 611;\n\t     t['Omacron'] = 778;\n\t     t['Racute'] = 722;\n\t     t['Sacute'] = 556;\n\t     t['dcaron'] = 672;\n\t     t['Umacron'] = 722;\n\t     t['uring'] = 556;\n\t     t['threesuperior'] = 300;\n\t     t['Ograve'] = 778;\n\t     t['Agrave'] = 722;\n\t     t['Abreve'] = 722;\n\t     t['multiply'] = 570;\n\t     t['uacute'] = 556;\n\t     t['Tcaron'] = 667;\n\t     t['partialdiff'] = 494;\n\t     t['ydieresis'] = 500;\n\t     t['Nacute'] = 722;\n\t     t['icircumflex'] = 278;\n\t     t['Ecircumflex'] = 667;\n\t     t['adieresis'] = 500;\n\t     t['edieresis'] = 444;\n\t     t['cacute'] = 444;\n\t     t['nacute'] = 556;\n\t     t['umacron'] = 556;\n\t     t['Ncaron'] = 722;\n\t     t['Iacute'] = 389;\n\t     t['plusminus'] = 570;\n\t     t['brokenbar'] = 220;\n\t     t['registered'] = 747;\n\t     t['Gbreve'] = 778;\n\t     t['Idotaccent'] = 389;\n\t     t['summation'] = 600;\n\t     t['Egrave'] = 667;\n\t     t['racute'] = 444;\n\t     t['omacron'] = 500;\n\t     t['Zacute'] = 667;\n\t     t['Zcaron'] = 667;\n\t     t['greaterequal'] = 549;\n\t     t['Eth'] = 722;\n\t     t['Ccedilla'] = 722;\n\t     t['lcommaaccent'] = 278;\n\t     t['tcaron'] = 416;\n\t     t['eogonek'] = 444;\n\t     t['Uogonek'] = 722;\n\t     t['Aacute'] = 722;\n\t     t['Adieresis'] = 722;\n\t     t['egrave'] = 444;\n\t     t['zacute'] = 444;\n\t     t['iogonek'] = 278;\n\t     t['Oacute'] = 778;\n\t     t['oacute'] = 500;\n\t     t['amacron'] = 500;\n\t     t['sacute'] = 389;\n\t     t['idieresis'] = 278;\n\t     t['Ocircumflex'] = 778;\n\t     t['Ugrave'] = 722;\n\t     t['Delta'] = 612;\n\t     t['thorn'] = 556;\n\t     t['twosuperior'] = 300;\n\t     t['Odieresis'] = 778;\n\t     t['mu'] = 556;\n\t     t['igrave'] = 278;\n\t     t['ohungarumlaut'] = 500;\n\t     t['Eogonek'] = 667;\n\t     t['dcroat'] = 556;\n\t     t['threequarters'] = 750;\n\t     t['Scedilla'] = 556;\n\t     t['lcaron'] = 394;\n\t     t['Kcommaaccent'] = 778;\n\t     t['Lacute'] = 667;\n\t     t['trademark'] = 1000;\n\t     t['edotaccent'] = 444;\n\t     t['Igrave'] = 389;\n\t     t['Imacron'] = 389;\n\t     t['Lcaron'] = 667;\n\t     t['onehalf'] = 750;\n\t     t['lessequal'] = 549;\n\t     t['ocircumflex'] = 500;\n\t     t['ntilde'] = 556;\n\t     t['Uhungarumlaut'] = 722;\n\t     t['Eacute'] = 667;\n\t     t['emacron'] = 444;\n\t     t['gbreve'] = 500;\n\t     t['onequarter'] = 750;\n\t     t['Scaron'] = 556;\n\t     t['Scommaaccent'] = 556;\n\t     t['Ohungarumlaut'] = 778;\n\t     t['degree'] = 400;\n\t     t['ograve'] = 500;\n\t     t['Ccaron'] = 722;\n\t     t['ugrave'] = 556;\n\t     t['radical'] = 549;\n\t     t['Dcaron'] = 722;\n\t     t['rcommaaccent'] = 444;\n\t     t['Ntilde'] = 722;\n\t     t['otilde'] = 500;\n\t     t['Rcommaaccent'] = 722;\n\t     t['Lcommaaccent'] = 667;\n\t     t['Atilde'] = 722;\n\t     t['Aogonek'] = 722;\n\t     t['Aring'] = 722;\n\t     t['Otilde'] = 778;\n\t     t['zdotaccent'] = 444;\n\t     t['Ecaron'] = 667;\n\t     t['Iogonek'] = 389;\n\t     t['kcommaaccent'] = 556;\n\t     t['minus'] = 570;\n\t     t['Icircumflex'] = 389;\n\t     t['ncaron'] = 556;\n\t     t['tcommaaccent'] = 333;\n\t     t['logicalnot'] = 570;\n\t     t['odieresis'] = 500;\n\t     t['udieresis'] = 556;\n\t     t['notequal'] = 549;\n\t     t['gcommaaccent'] = 500;\n\t     t['eth'] = 500;\n\t     t['zcaron'] = 444;\n\t     t['ncommaaccent'] = 556;\n\t     t['onesuperior'] = 300;\n\t     t['imacron'] = 278;\n\t     t['Euro'] = 500;\n\t    });\n\t    t['Times-BoldItalic'] = getLookupTableFactory(function (t) {\n\t     t['space'] = 250;\n\t     t['exclam'] = 389;\n\t     t['quotedbl'] = 555;\n\t     t['numbersign'] = 500;\n\t     t['dollar'] = 500;\n\t     t['percent'] = 833;\n\t     t['ampersand'] = 778;\n\t     t['quoteright'] = 333;\n\t     t['parenleft'] = 333;\n\t     t['parenright'] = 333;\n\t     t['asterisk'] = 500;\n\t     t['plus'] = 570;\n\t     t['comma'] = 250;\n\t     t['hyphen'] = 333;\n\t     t['period'] = 250;\n\t     t['slash'] = 278;\n\t     t['zero'] = 500;\n\t     t['one'] = 500;\n\t     t['two'] = 500;\n\t     t['three'] = 500;\n\t     t['four'] = 500;\n\t     t['five'] = 500;\n\t     t['six'] = 500;\n\t     t['seven'] = 500;\n\t     t['eight'] = 500;\n\t     t['nine'] = 500;\n\t     t['colon'] = 333;\n\t     t['semicolon'] = 333;\n\t     t['less'] = 570;\n\t     t['equal'] = 570;\n\t     t['greater'] = 570;\n\t     t['question'] = 500;\n\t     t['at'] = 832;\n\t     t['A'] = 667;\n\t     t['B'] = 667;\n\t     t['C'] = 667;\n\t     t['D'] = 722;\n\t     t['E'] = 667;\n\t     t['F'] = 667;\n\t     t['G'] = 722;\n\t     t['H'] = 778;\n\t     t['I'] = 389;\n\t     t['J'] = 500;\n\t     t['K'] = 667;\n\t     t['L'] = 611;\n\t     t['M'] = 889;\n\t     t['N'] = 722;\n\t     t['O'] = 722;\n\t     t['P'] = 611;\n\t     t['Q'] = 722;\n\t     t['R'] = 667;\n\t     t['S'] = 556;\n\t     t['T'] = 611;\n\t     t['U'] = 722;\n\t     t['V'] = 667;\n\t     t['W'] = 889;\n\t     t['X'] = 667;\n\t     t['Y'] = 611;\n\t     t['Z'] = 611;\n\t     t['bracketleft'] = 333;\n\t     t['backslash'] = 278;\n\t     t['bracketright'] = 333;\n\t     t['asciicircum'] = 570;\n\t     t['underscore'] = 500;\n\t     t['quoteleft'] = 333;\n\t     t['a'] = 500;\n\t     t['b'] = 500;\n\t     t['c'] = 444;\n\t     t['d'] = 500;\n\t     t['e'] = 444;\n\t     t['f'] = 333;\n\t     t['g'] = 500;\n\t     t['h'] = 556;\n\t     t['i'] = 278;\n\t     t['j'] = 278;\n\t     t['k'] = 500;\n\t     t['l'] = 278;\n\t     t['m'] = 778;\n\t     t['n'] = 556;\n\t     t['o'] = 500;\n\t     t['p'] = 500;\n\t     t['q'] = 500;\n\t     t['r'] = 389;\n\t     t['s'] = 389;\n\t     t['t'] = 278;\n\t     t['u'] = 556;\n\t     t['v'] = 444;\n\t     t['w'] = 667;\n\t     t['x'] = 500;\n\t     t['y'] = 444;\n\t     t['z'] = 389;\n\t     t['braceleft'] = 348;\n\t     t['bar'] = 220;\n\t     t['braceright'] = 348;\n\t     t['asciitilde'] = 570;\n\t     t['exclamdown'] = 389;\n\t     t['cent'] = 500;\n\t     t['sterling'] = 500;\n\t     t['fraction'] = 167;\n\t     t['yen'] = 500;\n\t     t['florin'] = 500;\n\t     t['section'] = 500;\n\t     t['currency'] = 500;\n\t     t['quotesingle'] = 278;\n\t     t['quotedblleft'] = 500;\n\t     t['guillemotleft'] = 500;\n\t     t['guilsinglleft'] = 333;\n\t     t['guilsinglright'] = 333;\n\t     t['fi'] = 556;\n\t     t['fl'] = 556;\n\t     t['endash'] = 500;\n\t     t['dagger'] = 500;\n\t     t['daggerdbl'] = 500;\n\t     t['periodcentered'] = 250;\n\t     t['paragraph'] = 500;\n\t     t['bullet'] = 350;\n\t     t['quotesinglbase'] = 333;\n\t     t['quotedblbase'] = 500;\n\t     t['quotedblright'] = 500;\n\t     t['guillemotright'] = 500;\n\t     t['ellipsis'] = 1000;\n\t     t['perthousand'] = 1000;\n\t     t['questiondown'] = 500;\n\t     t['grave'] = 333;\n\t     t['acute'] = 333;\n\t     t['circumflex'] = 333;\n\t     t['tilde'] = 333;\n\t     t['macron'] = 333;\n\t     t['breve'] = 333;\n\t     t['dotaccent'] = 333;\n\t     t['dieresis'] = 333;\n\t     t['ring'] = 333;\n\t     t['cedilla'] = 333;\n\t     t['hungarumlaut'] = 333;\n\t     t['ogonek'] = 333;\n\t     t['caron'] = 333;\n\t     t['emdash'] = 1000;\n\t     t['AE'] = 944;\n\t     t['ordfeminine'] = 266;\n\t     t['Lslash'] = 611;\n\t     t['Oslash'] = 722;\n\t     t['OE'] = 944;\n\t     t['ordmasculine'] = 300;\n\t     t['ae'] = 722;\n\t     t['dotlessi'] = 278;\n\t     t['lslash'] = 278;\n\t     t['oslash'] = 500;\n\t     t['oe'] = 722;\n\t     t['germandbls'] = 500;\n\t     t['Idieresis'] = 389;\n\t     t['eacute'] = 444;\n\t     t['abreve'] = 500;\n\t     t['uhungarumlaut'] = 556;\n\t     t['ecaron'] = 444;\n\t     t['Ydieresis'] = 611;\n\t     t['divide'] = 570;\n\t     t['Yacute'] = 611;\n\t     t['Acircumflex'] = 667;\n\t     t['aacute'] = 500;\n\t     t['Ucircumflex'] = 722;\n\t     t['yacute'] = 444;\n\t     t['scommaaccent'] = 389;\n\t     t['ecircumflex'] = 444;\n\t     t['Uring'] = 722;\n\t     t['Udieresis'] = 722;\n\t     t['aogonek'] = 500;\n\t     t['Uacute'] = 722;\n\t     t['uogonek'] = 556;\n\t     t['Edieresis'] = 667;\n\t     t['Dcroat'] = 722;\n\t     t['commaaccent'] = 250;\n\t     t['copyright'] = 747;\n\t     t['Emacron'] = 667;\n\t     t['ccaron'] = 444;\n\t     t['aring'] = 500;\n\t     t['Ncommaaccent'] = 722;\n\t     t['lacute'] = 278;\n\t     t['agrave'] = 500;\n\t     t['Tcommaaccent'] = 611;\n\t     t['Cacute'] = 667;\n\t     t['atilde'] = 500;\n\t     t['Edotaccent'] = 667;\n\t     t['scaron'] = 389;\n\t     t['scedilla'] = 389;\n\t     t['iacute'] = 278;\n\t     t['lozenge'] = 494;\n\t     t['Rcaron'] = 667;\n\t     t['Gcommaaccent'] = 722;\n\t     t['ucircumflex'] = 556;\n\t     t['acircumflex'] = 500;\n\t     t['Amacron'] = 667;\n\t     t['rcaron'] = 389;\n\t     t['ccedilla'] = 444;\n\t     t['Zdotaccent'] = 611;\n\t     t['Thorn'] = 611;\n\t     t['Omacron'] = 722;\n\t     t['Racute'] = 667;\n\t     t['Sacute'] = 556;\n\t     t['dcaron'] = 608;\n\t     t['Umacron'] = 722;\n\t     t['uring'] = 556;\n\t     t['threesuperior'] = 300;\n\t     t['Ograve'] = 722;\n\t     t['Agrave'] = 667;\n\t     t['Abreve'] = 667;\n\t     t['multiply'] = 570;\n\t     t['uacute'] = 556;\n\t     t['Tcaron'] = 611;\n\t     t['partialdiff'] = 494;\n\t     t['ydieresis'] = 444;\n\t     t['Nacute'] = 722;\n\t     t['icircumflex'] = 278;\n\t     t['Ecircumflex'] = 667;\n\t     t['adieresis'] = 500;\n\t     t['edieresis'] = 444;\n\t     t['cacute'] = 444;\n\t     t['nacute'] = 556;\n\t     t['umacron'] = 556;\n\t     t['Ncaron'] = 722;\n\t     t['Iacute'] = 389;\n\t     t['plusminus'] = 570;\n\t     t['brokenbar'] = 220;\n\t     t['registered'] = 747;\n\t     t['Gbreve'] = 722;\n\t     t['Idotaccent'] = 389;\n\t     t['summation'] = 600;\n\t     t['Egrave'] = 667;\n\t     t['racute'] = 389;\n\t     t['omacron'] = 500;\n\t     t['Zacute'] = 611;\n\t     t['Zcaron'] = 611;\n\t     t['greaterequal'] = 549;\n\t     t['Eth'] = 722;\n\t     t['Ccedilla'] = 667;\n\t     t['lcommaaccent'] = 278;\n\t     t['tcaron'] = 366;\n\t     t['eogonek'] = 444;\n\t     t['Uogonek'] = 722;\n\t     t['Aacute'] = 667;\n\t     t['Adieresis'] = 667;\n\t     t['egrave'] = 444;\n\t     t['zacute'] = 389;\n\t     t['iogonek'] = 278;\n\t     t['Oacute'] = 722;\n\t     t['oacute'] = 500;\n\t     t['amacron'] = 500;\n\t     t['sacute'] = 389;\n\t     t['idieresis'] = 278;\n\t     t['Ocircumflex'] = 722;\n\t     t['Ugrave'] = 722;\n\t     t['Delta'] = 612;\n\t     t['thorn'] = 500;\n\t     t['twosuperior'] = 300;\n\t     t['Odieresis'] = 722;\n\t     t['mu'] = 576;\n\t     t['igrave'] = 278;\n\t     t['ohungarumlaut'] = 500;\n\t     t['Eogonek'] = 667;\n\t     t['dcroat'] = 500;\n\t     t['threequarters'] = 750;\n\t     t['Scedilla'] = 556;\n\t     t['lcaron'] = 382;\n\t     t['Kcommaaccent'] = 667;\n\t     t['Lacute'] = 611;\n\t     t['trademark'] = 1000;\n\t     t['edotaccent'] = 444;\n\t     t['Igrave'] = 389;\n\t     t['Imacron'] = 389;\n\t     t['Lcaron'] = 611;\n\t     t['onehalf'] = 750;\n\t     t['lessequal'] = 549;\n\t     t['ocircumflex'] = 500;\n\t     t['ntilde'] = 556;\n\t     t['Uhungarumlaut'] = 722;\n\t     t['Eacute'] = 667;\n\t     t['emacron'] = 444;\n\t     t['gbreve'] = 500;\n\t     t['onequarter'] = 750;\n\t     t['Scaron'] = 556;\n\t     t['Scommaaccent'] = 556;\n\t     t['Ohungarumlaut'] = 722;\n\t     t['degree'] = 400;\n\t     t['ograve'] = 500;\n\t     t['Ccaron'] = 667;\n\t     t['ugrave'] = 556;\n\t     t['radical'] = 549;\n\t     t['Dcaron'] = 722;\n\t     t['rcommaaccent'] = 389;\n\t     t['Ntilde'] = 722;\n\t     t['otilde'] = 500;\n\t     t['Rcommaaccent'] = 667;\n\t     t['Lcommaaccent'] = 611;\n\t     t['Atilde'] = 667;\n\t     t['Aogonek'] = 667;\n\t     t['Aring'] = 667;\n\t     t['Otilde'] = 722;\n\t     t['zdotaccent'] = 389;\n\t     t['Ecaron'] = 667;\n\t     t['Iogonek'] = 389;\n\t     t['kcommaaccent'] = 500;\n\t     t['minus'] = 606;\n\t     t['Icircumflex'] = 389;\n\t     t['ncaron'] = 556;\n\t     t['tcommaaccent'] = 278;\n\t     t['logicalnot'] = 606;\n\t     t['odieresis'] = 500;\n\t     t['udieresis'] = 556;\n\t     t['notequal'] = 549;\n\t     t['gcommaaccent'] = 500;\n\t     t['eth'] = 500;\n\t     t['zcaron'] = 389;\n\t     t['ncommaaccent'] = 556;\n\t     t['onesuperior'] = 300;\n\t     t['imacron'] = 278;\n\t     t['Euro'] = 500;\n\t    });\n\t    t['Times-Italic'] = getLookupTableFactory(function (t) {\n\t     t['space'] = 250;\n\t     t['exclam'] = 333;\n\t     t['quotedbl'] = 420;\n\t     t['numbersign'] = 500;\n\t     t['dollar'] = 500;\n\t     t['percent'] = 833;\n\t     t['ampersand'] = 778;\n\t     t['quoteright'] = 333;\n\t     t['parenleft'] = 333;\n\t     t['parenright'] = 333;\n\t     t['asterisk'] = 500;\n\t     t['plus'] = 675;\n\t     t['comma'] = 250;\n\t     t['hyphen'] = 333;\n\t     t['period'] = 250;\n\t     t['slash'] = 278;\n\t     t['zero'] = 500;\n\t     t['one'] = 500;\n\t     t['two'] = 500;\n\t     t['three'] = 500;\n\t     t['four'] = 500;\n\t     t['five'] = 500;\n\t     t['six'] = 500;\n\t     t['seven'] = 500;\n\t     t['eight'] = 500;\n\t     t['nine'] = 500;\n\t     t['colon'] = 333;\n\t     t['semicolon'] = 333;\n\t     t['less'] = 675;\n\t     t['equal'] = 675;\n\t     t['greater'] = 675;\n\t     t['question'] = 500;\n\t     t['at'] = 920;\n\t     t['A'] = 611;\n\t     t['B'] = 611;\n\t     t['C'] = 667;\n\t     t['D'] = 722;\n\t     t['E'] = 611;\n\t     t['F'] = 611;\n\t     t['G'] = 722;\n\t     t['H'] = 722;\n\t     t['I'] = 333;\n\t     t['J'] = 444;\n\t     t['K'] = 667;\n\t     t['L'] = 556;\n\t     t['M'] = 833;\n\t     t['N'] = 667;\n\t     t['O'] = 722;\n\t     t['P'] = 611;\n\t     t['Q'] = 722;\n\t     t['R'] = 611;\n\t     t['S'] = 500;\n\t     t['T'] = 556;\n\t     t['U'] = 722;\n\t     t['V'] = 611;\n\t     t['W'] = 833;\n\t     t['X'] = 611;\n\t     t['Y'] = 556;\n\t     t['Z'] = 556;\n\t     t['bracketleft'] = 389;\n\t     t['backslash'] = 278;\n\t     t['bracketright'] = 389;\n\t     t['asciicircum'] = 422;\n\t     t['underscore'] = 500;\n\t     t['quoteleft'] = 333;\n\t     t['a'] = 500;\n\t     t['b'] = 500;\n\t     t['c'] = 444;\n\t     t['d'] = 500;\n\t     t['e'] = 444;\n\t     t['f'] = 278;\n\t     t['g'] = 500;\n\t     t['h'] = 500;\n\t     t['i'] = 278;\n\t     t['j'] = 278;\n\t     t['k'] = 444;\n\t     t['l'] = 278;\n\t     t['m'] = 722;\n\t     t['n'] = 500;\n\t     t['o'] = 500;\n\t     t['p'] = 500;\n\t     t['q'] = 500;\n\t     t['r'] = 389;\n\t     t['s'] = 389;\n\t     t['t'] = 278;\n\t     t['u'] = 500;\n\t     t['v'] = 444;\n\t     t['w'] = 667;\n\t     t['x'] = 444;\n\t     t['y'] = 444;\n\t     t['z'] = 389;\n\t     t['braceleft'] = 400;\n\t     t['bar'] = 275;\n\t     t['braceright'] = 400;\n\t     t['asciitilde'] = 541;\n\t     t['exclamdown'] = 389;\n\t     t['cent'] = 500;\n\t     t['sterling'] = 500;\n\t     t['fraction'] = 167;\n\t     t['yen'] = 500;\n\t     t['florin'] = 500;\n\t     t['section'] = 500;\n\t     t['currency'] = 500;\n\t     t['quotesingle'] = 214;\n\t     t['quotedblleft'] = 556;\n\t     t['guillemotleft'] = 500;\n\t     t['guilsinglleft'] = 333;\n\t     t['guilsinglright'] = 333;\n\t     t['fi'] = 500;\n\t     t['fl'] = 500;\n\t     t['endash'] = 500;\n\t     t['dagger'] = 500;\n\t     t['daggerdbl'] = 500;\n\t     t['periodcentered'] = 250;\n\t     t['paragraph'] = 523;\n\t     t['bullet'] = 350;\n\t     t['quotesinglbase'] = 333;\n\t     t['quotedblbase'] = 556;\n\t     t['quotedblright'] = 556;\n\t     t['guillemotright'] = 500;\n\t     t['ellipsis'] = 889;\n\t     t['perthousand'] = 1000;\n\t     t['questiondown'] = 500;\n\t     t['grave'] = 333;\n\t     t['acute'] = 333;\n\t     t['circumflex'] = 333;\n\t     t['tilde'] = 333;\n\t     t['macron'] = 333;\n\t     t['breve'] = 333;\n\t     t['dotaccent'] = 333;\n\t     t['dieresis'] = 333;\n\t     t['ring'] = 333;\n\t     t['cedilla'] = 333;\n\t     t['hungarumlaut'] = 333;\n\t     t['ogonek'] = 333;\n\t     t['caron'] = 333;\n\t     t['emdash'] = 889;\n\t     t['AE'] = 889;\n\t     t['ordfeminine'] = 276;\n\t     t['Lslash'] = 556;\n\t     t['Oslash'] = 722;\n\t     t['OE'] = 944;\n\t     t['ordmasculine'] = 310;\n\t     t['ae'] = 667;\n\t     t['dotlessi'] = 278;\n\t     t['lslash'] = 278;\n\t     t['oslash'] = 500;\n\t     t['oe'] = 667;\n\t     t['germandbls'] = 500;\n\t     t['Idieresis'] = 333;\n\t     t['eacute'] = 444;\n\t     t['abreve'] = 500;\n\t     t['uhungarumlaut'] = 500;\n\t     t['ecaron'] = 444;\n\t     t['Ydieresis'] = 556;\n\t     t['divide'] = 675;\n\t     t['Yacute'] = 556;\n\t     t['Acircumflex'] = 611;\n\t     t['aacute'] = 500;\n\t     t['Ucircumflex'] = 722;\n\t     t['yacute'] = 444;\n\t     t['scommaaccent'] = 389;\n\t     t['ecircumflex'] = 444;\n\t     t['Uring'] = 722;\n\t     t['Udieresis'] = 722;\n\t     t['aogonek'] = 500;\n\t     t['Uacute'] = 722;\n\t     t['uogonek'] = 500;\n\t     t['Edieresis'] = 611;\n\t     t['Dcroat'] = 722;\n\t     t['commaaccent'] = 250;\n\t     t['copyright'] = 760;\n\t     t['Emacron'] = 611;\n\t     t['ccaron'] = 444;\n\t     t['aring'] = 500;\n\t     t['Ncommaaccent'] = 667;\n\t     t['lacute'] = 278;\n\t     t['agrave'] = 500;\n\t     t['Tcommaaccent'] = 556;\n\t     t['Cacute'] = 667;\n\t     t['atilde'] = 500;\n\t     t['Edotaccent'] = 611;\n\t     t['scaron'] = 389;\n\t     t['scedilla'] = 389;\n\t     t['iacute'] = 278;\n\t     t['lozenge'] = 471;\n\t     t['Rcaron'] = 611;\n\t     t['Gcommaaccent'] = 722;\n\t     t['ucircumflex'] = 500;\n\t     t['acircumflex'] = 500;\n\t     t['Amacron'] = 611;\n\t     t['rcaron'] = 389;\n\t     t['ccedilla'] = 444;\n\t     t['Zdotaccent'] = 556;\n\t     t['Thorn'] = 611;\n\t     t['Omacron'] = 722;\n\t     t['Racute'] = 611;\n\t     t['Sacute'] = 500;\n\t     t['dcaron'] = 544;\n\t     t['Umacron'] = 722;\n\t     t['uring'] = 500;\n\t     t['threesuperior'] = 300;\n\t     t['Ograve'] = 722;\n\t     t['Agrave'] = 611;\n\t     t['Abreve'] = 611;\n\t     t['multiply'] = 675;\n\t     t['uacute'] = 500;\n\t     t['Tcaron'] = 556;\n\t     t['partialdiff'] = 476;\n\t     t['ydieresis'] = 444;\n\t     t['Nacute'] = 667;\n\t     t['icircumflex'] = 278;\n\t     t['Ecircumflex'] = 611;\n\t     t['adieresis'] = 500;\n\t     t['edieresis'] = 444;\n\t     t['cacute'] = 444;\n\t     t['nacute'] = 500;\n\t     t['umacron'] = 500;\n\t     t['Ncaron'] = 667;\n\t     t['Iacute'] = 333;\n\t     t['plusminus'] = 675;\n\t     t['brokenbar'] = 275;\n\t     t['registered'] = 760;\n\t     t['Gbreve'] = 722;\n\t     t['Idotaccent'] = 333;\n\t     t['summation'] = 600;\n\t     t['Egrave'] = 611;\n\t     t['racute'] = 389;\n\t     t['omacron'] = 500;\n\t     t['Zacute'] = 556;\n\t     t['Zcaron'] = 556;\n\t     t['greaterequal'] = 549;\n\t     t['Eth'] = 722;\n\t     t['Ccedilla'] = 667;\n\t     t['lcommaaccent'] = 278;\n\t     t['tcaron'] = 300;\n\t     t['eogonek'] = 444;\n\t     t['Uogonek'] = 722;\n\t     t['Aacute'] = 611;\n\t     t['Adieresis'] = 611;\n\t     t['egrave'] = 444;\n\t     t['zacute'] = 389;\n\t     t['iogonek'] = 278;\n\t     t['Oacute'] = 722;\n\t     t['oacute'] = 500;\n\t     t['amacron'] = 500;\n\t     t['sacute'] = 389;\n\t     t['idieresis'] = 278;\n\t     t['Ocircumflex'] = 722;\n\t     t['Ugrave'] = 722;\n\t     t['Delta'] = 612;\n\t     t['thorn'] = 500;\n\t     t['twosuperior'] = 300;\n\t     t['Odieresis'] = 722;\n\t     t['mu'] = 500;\n\t     t['igrave'] = 278;\n\t     t['ohungarumlaut'] = 500;\n\t     t['Eogonek'] = 611;\n\t     t['dcroat'] = 500;\n\t     t['threequarters'] = 750;\n\t     t['Scedilla'] = 500;\n\t     t['lcaron'] = 300;\n\t     t['Kcommaaccent'] = 667;\n\t     t['Lacute'] = 556;\n\t     t['trademark'] = 980;\n\t     t['edotaccent'] = 444;\n\t     t['Igrave'] = 333;\n\t     t['Imacron'] = 333;\n\t     t['Lcaron'] = 611;\n\t     t['onehalf'] = 750;\n\t     t['lessequal'] = 549;\n\t     t['ocircumflex'] = 500;\n\t     t['ntilde'] = 500;\n\t     t['Uhungarumlaut'] = 722;\n\t     t['Eacute'] = 611;\n\t     t['emacron'] = 444;\n\t     t['gbreve'] = 500;\n\t     t['onequarter'] = 750;\n\t     t['Scaron'] = 500;\n\t     t['Scommaaccent'] = 500;\n\t     t['Ohungarumlaut'] = 722;\n\t     t['degree'] = 400;\n\t     t['ograve'] = 500;\n\t     t['Ccaron'] = 667;\n\t     t['ugrave'] = 500;\n\t     t['radical'] = 453;\n\t     t['Dcaron'] = 722;\n\t     t['rcommaaccent'] = 389;\n\t     t['Ntilde'] = 667;\n\t     t['otilde'] = 500;\n\t     t['Rcommaaccent'] = 611;\n\t     t['Lcommaaccent'] = 556;\n\t     t['Atilde'] = 611;\n\t     t['Aogonek'] = 611;\n\t     t['Aring'] = 611;\n\t     t['Otilde'] = 722;\n\t     t['zdotaccent'] = 389;\n\t     t['Ecaron'] = 611;\n\t     t['Iogonek'] = 333;\n\t     t['kcommaaccent'] = 444;\n\t     t['minus'] = 675;\n\t     t['Icircumflex'] = 333;\n\t     t['ncaron'] = 500;\n\t     t['tcommaaccent'] = 278;\n\t     t['logicalnot'] = 675;\n\t     t['odieresis'] = 500;\n\t     t['udieresis'] = 500;\n\t     t['notequal'] = 549;\n\t     t['gcommaaccent'] = 500;\n\t     t['eth'] = 500;\n\t     t['zcaron'] = 389;\n\t     t['ncommaaccent'] = 500;\n\t     t['onesuperior'] = 300;\n\t     t['imacron'] = 278;\n\t     t['Euro'] = 500;\n\t    });\n\t    t['ZapfDingbats'] = getLookupTableFactory(function (t) {\n\t     t['space'] = 278;\n\t     t['a1'] = 974;\n\t     t['a2'] = 961;\n\t     t['a202'] = 974;\n\t     t['a3'] = 980;\n\t     t['a4'] = 719;\n\t     t['a5'] = 789;\n\t     t['a119'] = 790;\n\t     t['a118'] = 791;\n\t     t['a117'] = 690;\n\t     t['a11'] = 960;\n\t     t['a12'] = 939;\n\t     t['a13'] = 549;\n\t     t['a14'] = 855;\n\t     t['a15'] = 911;\n\t     t['a16'] = 933;\n\t     t['a105'] = 911;\n\t     t['a17'] = 945;\n\t     t['a18'] = 974;\n\t     t['a19'] = 755;\n\t     t['a20'] = 846;\n\t     t['a21'] = 762;\n\t     t['a22'] = 761;\n\t     t['a23'] = 571;\n\t     t['a24'] = 677;\n\t     t['a25'] = 763;\n\t     t['a26'] = 760;\n\t     t['a27'] = 759;\n\t     t['a28'] = 754;\n\t     t['a6'] = 494;\n\t     t['a7'] = 552;\n\t     t['a8'] = 537;\n\t     t['a9'] = 577;\n\t     t['a10'] = 692;\n\t     t['a29'] = 786;\n\t     t['a30'] = 788;\n\t     t['a31'] = 788;\n\t     t['a32'] = 790;\n\t     t['a33'] = 793;\n\t     t['a34'] = 794;\n\t     t['a35'] = 816;\n\t     t['a36'] = 823;\n\t     t['a37'] = 789;\n\t     t['a38'] = 841;\n\t     t['a39'] = 823;\n\t     t['a40'] = 833;\n\t     t['a41'] = 816;\n\t     t['a42'] = 831;\n\t     t['a43'] = 923;\n\t     t['a44'] = 744;\n\t     t['a45'] = 723;\n\t     t['a46'] = 749;\n\t     t['a47'] = 790;\n\t     t['a48'] = 792;\n\t     t['a49'] = 695;\n\t     t['a50'] = 776;\n\t     t['a51'] = 768;\n\t     t['a52'] = 792;\n\t     t['a53'] = 759;\n\t     t['a54'] = 707;\n\t     t['a55'] = 708;\n\t     t['a56'] = 682;\n\t     t['a57'] = 701;\n\t     t['a58'] = 826;\n\t     t['a59'] = 815;\n\t     t['a60'] = 789;\n\t     t['a61'] = 789;\n\t     t['a62'] = 707;\n\t     t['a63'] = 687;\n\t     t['a64'] = 696;\n\t     t['a65'] = 689;\n\t     t['a66'] = 786;\n\t     t['a67'] = 787;\n\t     t['a68'] = 713;\n\t     t['a69'] = 791;\n\t     t['a70'] = 785;\n\t     t['a71'] = 791;\n\t     t['a72'] = 873;\n\t     t['a73'] = 761;\n\t     t['a74'] = 762;\n\t     t['a203'] = 762;\n\t     t['a75'] = 759;\n\t     t['a204'] = 759;\n\t     t['a76'] = 892;\n\t     t['a77'] = 892;\n\t     t['a78'] = 788;\n\t     t['a79'] = 784;\n\t     t['a81'] = 438;\n\t     t['a82'] = 138;\n\t     t['a83'] = 277;\n\t     t['a84'] = 415;\n\t     t['a97'] = 392;\n\t     t['a98'] = 392;\n\t     t['a99'] = 668;\n\t     t['a100'] = 668;\n\t     t['a89'] = 390;\n\t     t['a90'] = 390;\n\t     t['a93'] = 317;\n\t     t['a94'] = 317;\n\t     t['a91'] = 276;\n\t     t['a92'] = 276;\n\t     t['a205'] = 509;\n\t     t['a85'] = 509;\n\t     t['a206'] = 410;\n\t     t['a86'] = 410;\n\t     t['a87'] = 234;\n\t     t['a88'] = 234;\n\t     t['a95'] = 334;\n\t     t['a96'] = 334;\n\t     t['a101'] = 732;\n\t     t['a102'] = 544;\n\t     t['a103'] = 544;\n\t     t['a104'] = 910;\n\t     t['a106'] = 667;\n\t     t['a107'] = 760;\n\t     t['a108'] = 760;\n\t     t['a112'] = 776;\n\t     t['a111'] = 595;\n\t     t['a110'] = 694;\n\t     t['a109'] = 626;\n\t     t['a120'] = 788;\n\t     t['a121'] = 788;\n\t     t['a122'] = 788;\n\t     t['a123'] = 788;\n\t     t['a124'] = 788;\n\t     t['a125'] = 788;\n\t     t['a126'] = 788;\n\t     t['a127'] = 788;\n\t     t['a128'] = 788;\n\t     t['a129'] = 788;\n\t     t['a130'] = 788;\n\t     t['a131'] = 788;\n\t     t['a132'] = 788;\n\t     t['a133'] = 788;\n\t     t['a134'] = 788;\n\t     t['a135'] = 788;\n\t     t['a136'] = 788;\n\t     t['a137'] = 788;\n\t     t['a138'] = 788;\n\t     t['a139'] = 788;\n\t     t['a140'] = 788;\n\t     t['a141'] = 788;\n\t     t['a142'] = 788;\n\t     t['a143'] = 788;\n\t     t['a144'] = 788;\n\t     t['a145'] = 788;\n\t     t['a146'] = 788;\n\t     t['a147'] = 788;\n\t     t['a148'] = 788;\n\t     t['a149'] = 788;\n\t     t['a150'] = 788;\n\t     t['a151'] = 788;\n\t     t['a152'] = 788;\n\t     t['a153'] = 788;\n\t     t['a154'] = 788;\n\t     t['a155'] = 788;\n\t     t['a156'] = 788;\n\t     t['a157'] = 788;\n\t     t['a158'] = 788;\n\t     t['a159'] = 788;\n\t     t['a160'] = 894;\n\t     t['a161'] = 838;\n\t     t['a163'] = 1016;\n\t     t['a164'] = 458;\n\t     t['a196'] = 748;\n\t     t['a165'] = 924;\n\t     t['a192'] = 748;\n\t     t['a166'] = 918;\n\t     t['a167'] = 927;\n\t     t['a168'] = 928;\n\t     t['a169'] = 928;\n\t     t['a170'] = 834;\n\t     t['a171'] = 873;\n\t     t['a172'] = 828;\n\t     t['a173'] = 924;\n\t     t['a162'] = 924;\n\t     t['a174'] = 917;\n\t     t['a175'] = 930;\n\t     t['a176'] = 931;\n\t     t['a177'] = 463;\n\t     t['a178'] = 883;\n\t     t['a179'] = 836;\n\t     t['a193'] = 836;\n\t     t['a180'] = 867;\n\t     t['a199'] = 867;\n\t     t['a181'] = 696;\n\t     t['a200'] = 696;\n\t     t['a182'] = 874;\n\t     t['a201'] = 874;\n\t     t['a183'] = 760;\n\t     t['a184'] = 946;\n\t     t['a197'] = 771;\n\t     t['a185'] = 865;\n\t     t['a194'] = 771;\n\t     t['a198'] = 888;\n\t     t['a186'] = 967;\n\t     t['a195'] = 888;\n\t     t['a187'] = 831;\n\t     t['a188'] = 873;\n\t     t['a189'] = 927;\n\t     t['a190'] = 970;\n\t     t['a191'] = 918;\n\t    });\n\t   });\n\t   exports.getMetrics = getMetrics;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCoreMurmurHash3 = {}, root.pdfjsSharedUtil);\n\t  }(this, function (exports, sharedUtil) {\n\t   var Uint32ArrayView = sharedUtil.Uint32ArrayView;\n\t   var MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\n\t    var MASK_HIGH = 0xffff0000;\n\t    var MASK_LOW = 0xffff;\n\t    function MurmurHash3_64(seed) {\n\t     var SEED = 0xc3d2e1f0;\n\t     this.h1 = seed ? seed & 0xffffffff : SEED;\n\t     this.h2 = seed ? seed & 0xffffffff : SEED;\n\t    }\n\t    var alwaysUseUint32ArrayView = false;\n\t    try {\n\t     new Uint32Array(new Uint8Array(5).buffer, 0, 1);\n\t    } catch (e) {\n\t     alwaysUseUint32ArrayView = true;\n\t    }\n\t    MurmurHash3_64.prototype = {\n\t     update: function MurmurHash3_64_update(input) {\n\t      var useUint32ArrayView = alwaysUseUint32ArrayView;\n\t      var i;\n\t      if (typeof input === 'string') {\n\t       var data = new Uint8Array(input.length * 2);\n\t       var length = 0;\n\t       for (i = 0; i < input.length; i++) {\n\t        var code = input.charCodeAt(i);\n\t        if (code <= 0xff) {\n\t         data[length++] = code;\n\t        } else {\n\t         data[length++] = code >>> 8;\n\t         data[length++] = code & 0xff;\n\t        }\n\t       }\n\t      } else if (input instanceof Uint8Array) {\n\t       data = input;\n\t       length = data.length;\n\t      } else if (typeof input === 'object' && 'length' in input) {\n\t       data = input;\n\t       length = data.length;\n\t       useUint32ArrayView = true;\n\t      } else {\n\t       throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\n\t      }\n\t      var blockCounts = length >> 2;\n\t      var tailLength = length - blockCounts * 4;\n\t      var dataUint32 = useUint32ArrayView ? new Uint32ArrayView(data, blockCounts) : new Uint32Array(data.buffer, 0, blockCounts);\n\t      var k1 = 0;\n\t      var k2 = 0;\n\t      var h1 = this.h1;\n\t      var h2 = this.h2;\n\t      var C1 = 0xcc9e2d51;\n\t      var C2 = 0x1b873593;\n\t      var C1_LOW = C1 & MASK_LOW;\n\t      var C2_LOW = C2 & MASK_LOW;\n\t      for (i = 0; i < blockCounts; i++) {\n\t       if (i & 1) {\n\t        k1 = dataUint32[i];\n\t        k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n\t        k1 = k1 << 15 | k1 >>> 17;\n\t        k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n\t        h1 ^= k1;\n\t        h1 = h1 << 13 | h1 >>> 19;\n\t        h1 = h1 * 5 + 0xe6546b64;\n\t       } else {\n\t        k2 = dataUint32[i];\n\t        k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n\t        k2 = k2 << 15 | k2 >>> 17;\n\t        k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n\t        h2 ^= k2;\n\t        h2 = h2 << 13 | h2 >>> 19;\n\t        h2 = h2 * 5 + 0xe6546b64;\n\t       }\n\t      }\n\t      k1 = 0;\n\t      switch (tailLength) {\n\t      case 3:\n\t       k1 ^= data[blockCounts * 4 + 2] << 16;\n\t      case 2:\n\t       k1 ^= data[blockCounts * 4 + 1] << 8;\n\t      case 1:\n\t       k1 ^= data[blockCounts * 4];\n\t       k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n\t       k1 = k1 << 15 | k1 >>> 17;\n\t       k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n\t       if (blockCounts & 1) {\n\t        h1 ^= k1;\n\t       } else {\n\t        h2 ^= k1;\n\t       }\n\t      }\n\t      this.h1 = h1;\n\t      this.h2 = h2;\n\t      return this;\n\t     },\n\t     hexdigest: function MurmurHash3_64_hexdigest() {\n\t      var h1 = this.h1;\n\t      var h2 = this.h2;\n\t      h1 ^= h2 >>> 1;\n\t      h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n\t      h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n\t      h1 ^= h2 >>> 1;\n\t      h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n\t      h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n\t      h1 ^= h2 >>> 1;\n\t      for (var i = 0, arr = [\n\t         h1,\n\t         h2\n\t        ], str = ''; i < arr.length; i++) {\n\t       var hex = (arr[i] >>> 0).toString(16);\n\t       while (hex.length < 8) {\n\t        hex = '0' + hex;\n\t       }\n\t       str += hex;\n\t      }\n\t      return str;\n\t     }\n\t    };\n\t    return MurmurHash3_64;\n\t   }();\n\t   exports.MurmurHash3_64 = MurmurHash3_64;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCorePrimitives = {}, root.pdfjsSharedUtil);\n\t  }(this, function (exports, sharedUtil) {\n\t   var isArray = sharedUtil.isArray;\n\t   var EOF = {};\n\t   var Name = function NameClosure() {\n\t    function Name(name) {\n\t     this.name = name;\n\t    }\n\t    Name.prototype = {};\n\t    var nameCache = Object.create(null);\n\t    Name.get = function Name_get(name) {\n\t     var nameValue = nameCache[name];\n\t     return nameValue ? nameValue : nameCache[name] = new Name(name);\n\t    };\n\t    return Name;\n\t   }();\n\t   var Cmd = function CmdClosure() {\n\t    function Cmd(cmd) {\n\t     this.cmd = cmd;\n\t    }\n\t    Cmd.prototype = {};\n\t    var cmdCache = Object.create(null);\n\t    Cmd.get = function Cmd_get(cmd) {\n\t     var cmdValue = cmdCache[cmd];\n\t     return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n\t    };\n\t    return Cmd;\n\t   }();\n\t   var Dict = function DictClosure() {\n\t    var nonSerializable = function nonSerializableClosure() {\n\t     return nonSerializable;\n\t    };\n\t    function Dict(xref) {\n\t     this.map = Object.create(null);\n\t     this.xref = xref;\n\t     this.objId = null;\n\t     this.suppressEncryption = false;\n\t     this.__nonSerializable__ = nonSerializable;\n\t    }\n\t    Dict.prototype = {\n\t     assignXref: function Dict_assignXref(newXref) {\n\t      this.xref = newXref;\n\t     },\n\t     get: function Dict_get(key1, key2, key3) {\n\t      var value;\n\t      var xref = this.xref, suppressEncryption = this.suppressEncryption;\n\t      if (typeof (value = this.map[key1]) !== 'undefined' || key1 in this.map || typeof key2 === 'undefined') {\n\t       return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n\t      }\n\t      if (typeof (value = this.map[key2]) !== 'undefined' || key2 in this.map || typeof key3 === 'undefined') {\n\t       return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n\t      }\n\t      value = this.map[key3] || null;\n\t      return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n\t     },\n\t     getAsync: function Dict_getAsync(key1, key2, key3) {\n\t      var value;\n\t      var xref = this.xref, suppressEncryption = this.suppressEncryption;\n\t      if (typeof (value = this.map[key1]) !== 'undefined' || key1 in this.map || typeof key2 === 'undefined') {\n\t       if (xref) {\n\t        return xref.fetchIfRefAsync(value, suppressEncryption);\n\t       }\n\t       return Promise.resolve(value);\n\t      }\n\t      if (typeof (value = this.map[key2]) !== 'undefined' || key2 in this.map || typeof key3 === 'undefined') {\n\t       if (xref) {\n\t        return xref.fetchIfRefAsync(value, suppressEncryption);\n\t       }\n\t       return Promise.resolve(value);\n\t      }\n\t      value = this.map[key3] || null;\n\t      if (xref) {\n\t       return xref.fetchIfRefAsync(value, suppressEncryption);\n\t      }\n\t      return Promise.resolve(value);\n\t     },\n\t     getArray: function Dict_getArray(key1, key2, key3) {\n\t      var value = this.get(key1, key2, key3);\n\t      var xref = this.xref, suppressEncryption = this.suppressEncryption;\n\t      if (!isArray(value) || !xref) {\n\t       return value;\n\t      }\n\t      value = value.slice();\n\t      for (var i = 0, ii = value.length; i < ii; i++) {\n\t       if (!isRef(value[i])) {\n\t        continue;\n\t       }\n\t       value[i] = xref.fetch(value[i], suppressEncryption);\n\t      }\n\t      return value;\n\t     },\n\t     getRaw: function Dict_getRaw(key) {\n\t      return this.map[key];\n\t     },\n\t     getKeys: function Dict_getKeys() {\n\t      return Object.keys(this.map);\n\t     },\n\t     set: function Dict_set(key, value) {\n\t      this.map[key] = value;\n\t     },\n\t     has: function Dict_has(key) {\n\t      return key in this.map;\n\t     },\n\t     forEach: function Dict_forEach(callback) {\n\t      for (var key in this.map) {\n\t       callback(key, this.get(key));\n\t      }\n\t     }\n\t    };\n\t    Dict.empty = new Dict(null);\n\t    Dict.merge = function Dict_merge(xref, dictArray) {\n\t     var mergedDict = new Dict(xref);\n\t     for (var i = 0, ii = dictArray.length; i < ii; i++) {\n\t      var dict = dictArray[i];\n\t      if (!isDict(dict)) {\n\t       continue;\n\t      }\n\t      for (var keyName in dict.map) {\n\t       if (mergedDict.map[keyName]) {\n\t        continue;\n\t       }\n\t       mergedDict.map[keyName] = dict.map[keyName];\n\t      }\n\t     }\n\t     return mergedDict;\n\t    };\n\t    return Dict;\n\t   }();\n\t   var Ref = function RefClosure() {\n\t    function Ref(num, gen) {\n\t     this.num = num;\n\t     this.gen = gen;\n\t    }\n\t    Ref.prototype = {\n\t     toString: function Ref_toString() {\n\t      var str = this.num + 'R';\n\t      if (this.gen !== 0) {\n\t       str += this.gen;\n\t      }\n\t      return str;\n\t     }\n\t    };\n\t    return Ref;\n\t   }();\n\t   var RefSet = function RefSetClosure() {\n\t    function RefSet() {\n\t     this.dict = Object.create(null);\n\t    }\n\t    RefSet.prototype = {\n\t     has: function RefSet_has(ref) {\n\t      return ref.toString() in this.dict;\n\t     },\n\t     put: function RefSet_put(ref) {\n\t      this.dict[ref.toString()] = true;\n\t     },\n\t     remove: function RefSet_remove(ref) {\n\t      delete this.dict[ref.toString()];\n\t     }\n\t    };\n\t    return RefSet;\n\t   }();\n\t   var RefSetCache = function RefSetCacheClosure() {\n\t    function RefSetCache() {\n\t     this.dict = Object.create(null);\n\t    }\n\t    RefSetCache.prototype = {\n\t     get: function RefSetCache_get(ref) {\n\t      return this.dict[ref.toString()];\n\t     },\n\t     has: function RefSetCache_has(ref) {\n\t      return ref.toString() in this.dict;\n\t     },\n\t     put: function RefSetCache_put(ref, obj) {\n\t      this.dict[ref.toString()] = obj;\n\t     },\n\t     putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n\t      this.dict[ref.toString()] = this.get(aliasRef);\n\t     },\n\t     forEach: function RefSetCache_forEach(fn, thisArg) {\n\t      for (var i in this.dict) {\n\t       fn.call(thisArg, this.dict[i]);\n\t      }\n\t     },\n\t     clear: function RefSetCache_clear() {\n\t      this.dict = Object.create(null);\n\t     }\n\t    };\n\t    return RefSetCache;\n\t   }();\n\t   function isEOF(v) {\n\t    return v === EOF;\n\t   }\n\t   function isName(v, name) {\n\t    return v instanceof Name && (name === undefined || v.name === name);\n\t   }\n\t   function isCmd(v, cmd) {\n\t    return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n\t   }\n\t   function isDict(v, type) {\n\t    return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\n\t   }\n\t   function isRef(v) {\n\t    return v instanceof Ref;\n\t   }\n\t   function isRefsEqual(v1, v2) {\n\t    return v1.num === v2.num && v1.gen === v2.gen;\n\t   }\n\t   function isStream(v) {\n\t    return typeof v === 'object' && v !== null && v.getBytes !== undefined;\n\t   }\n\t   exports.EOF = EOF;\n\t   exports.Cmd = Cmd;\n\t   exports.Dict = Dict;\n\t   exports.Name = Name;\n\t   exports.Ref = Ref;\n\t   exports.RefSet = RefSet;\n\t   exports.RefSetCache = RefSetCache;\n\t   exports.isEOF = isEOF;\n\t   exports.isCmd = isCmd;\n\t   exports.isDict = isDict;\n\t   exports.isName = isName;\n\t   exports.isRef = isRef;\n\t   exports.isRefsEqual = isRefsEqual;\n\t   exports.isStream = isStream;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCoreStandardFonts = {}, root.pdfjsSharedUtil);\n\t  }(this, function (exports, sharedUtil) {\n\t   var getLookupTableFactory = sharedUtil.getLookupTableFactory;\n\t   var getStdFontMap = getLookupTableFactory(function (t) {\n\t    t['ArialNarrow'] = 'Helvetica';\n\t    t['ArialNarrow-Bold'] = 'Helvetica-Bold';\n\t    t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\n\t    t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\n\t    t['ArialBlack'] = 'Helvetica';\n\t    t['ArialBlack-Bold'] = 'Helvetica-Bold';\n\t    t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\n\t    t['ArialBlack-Italic'] = 'Helvetica-Oblique';\n\t    t['Arial-Black'] = 'Helvetica';\n\t    t['Arial-Black-Bold'] = 'Helvetica-Bold';\n\t    t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\n\t    t['Arial-Black-Italic'] = 'Helvetica-Oblique';\n\t    t['Arial'] = 'Helvetica';\n\t    t['Arial-Bold'] = 'Helvetica-Bold';\n\t    t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\n\t    t['Arial-Italic'] = 'Helvetica-Oblique';\n\t    t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\n\t    t['Arial-BoldMT'] = 'Helvetica-Bold';\n\t    t['Arial-ItalicMT'] = 'Helvetica-Oblique';\n\t    t['ArialMT'] = 'Helvetica';\n\t    t['Courier-Bold'] = 'Courier-Bold';\n\t    t['Courier-BoldItalic'] = 'Courier-BoldOblique';\n\t    t['Courier-Italic'] = 'Courier-Oblique';\n\t    t['CourierNew'] = 'Courier';\n\t    t['CourierNew-Bold'] = 'Courier-Bold';\n\t    t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\n\t    t['CourierNew-Italic'] = 'Courier-Oblique';\n\t    t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\n\t    t['CourierNewPS-BoldMT'] = 'Courier-Bold';\n\t    t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\n\t    t['CourierNewPSMT'] = 'Courier';\n\t    t['Helvetica'] = 'Helvetica';\n\t    t['Helvetica-Bold'] = 'Helvetica-Bold';\n\t    t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\n\t    t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\n\t    t['Helvetica-Italic'] = 'Helvetica-Oblique';\n\t    t['Helvetica-Oblique'] = 'Helvetica-Oblique';\n\t    t['Symbol-Bold'] = 'Symbol';\n\t    t['Symbol-BoldItalic'] = 'Symbol';\n\t    t['Symbol-Italic'] = 'Symbol';\n\t    t['TimesNewRoman'] = 'Times-Roman';\n\t    t['TimesNewRoman-Bold'] = 'Times-Bold';\n\t    t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\n\t    t['TimesNewRoman-Italic'] = 'Times-Italic';\n\t    t['TimesNewRomanPS'] = 'Times-Roman';\n\t    t['TimesNewRomanPS-Bold'] = 'Times-Bold';\n\t    t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\n\t    t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\n\t    t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\n\t    t['TimesNewRomanPS-Italic'] = 'Times-Italic';\n\t    t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\n\t    t['TimesNewRomanPSMT'] = 'Times-Roman';\n\t    t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\n\t    t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\n\t    t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\n\t   });\n\t   var getNonStdFontMap = getLookupTableFactory(function (t) {\n\t    t['CenturyGothic'] = 'Helvetica';\n\t    t['CenturyGothic-Bold'] = 'Helvetica-Bold';\n\t    t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\n\t    t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\n\t    t['ComicSansMS'] = 'Comic Sans MS';\n\t    t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\n\t    t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\n\t    t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\n\t    t['LucidaConsole'] = 'Courier';\n\t    t['LucidaConsole-Bold'] = 'Courier-Bold';\n\t    t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\n\t    t['LucidaConsole-Italic'] = 'Courier-Oblique';\n\t    t['MS-Gothic'] = 'MS Gothic';\n\t    t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\n\t    t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\n\t    t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\n\t    t['MS-Mincho'] = 'MS Mincho';\n\t    t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\n\t    t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\n\t    t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\n\t    t['MS-PGothic'] = 'MS PGothic';\n\t    t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\n\t    t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\n\t    t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\n\t    t['MS-PMincho'] = 'MS PMincho';\n\t    t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\n\t    t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\n\t    t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\n\t    t['NuptialScript'] = 'Times-Italic';\n\t    t['Wingdings'] = 'ZapfDingbats';\n\t   });\n\t   var getSerifFonts = getLookupTableFactory(function (t) {\n\t    t['Adobe Jenson'] = true;\n\t    t['Adobe Text'] = true;\n\t    t['Albertus'] = true;\n\t    t['Aldus'] = true;\n\t    t['Alexandria'] = true;\n\t    t['Algerian'] = true;\n\t    t['American Typewriter'] = true;\n\t    t['Antiqua'] = true;\n\t    t['Apex'] = true;\n\t    t['Arno'] = true;\n\t    t['Aster'] = true;\n\t    t['Aurora'] = true;\n\t    t['Baskerville'] = true;\n\t    t['Bell'] = true;\n\t    t['Bembo'] = true;\n\t    t['Bembo Schoolbook'] = true;\n\t    t['Benguiat'] = true;\n\t    t['Berkeley Old Style'] = true;\n\t    t['Bernhard Modern'] = true;\n\t    t['Berthold City'] = true;\n\t    t['Bodoni'] = true;\n\t    t['Bauer Bodoni'] = true;\n\t    t['Book Antiqua'] = true;\n\t    t['Bookman'] = true;\n\t    t['Bordeaux Roman'] = true;\n\t    t['Californian FB'] = true;\n\t    t['Calisto'] = true;\n\t    t['Calvert'] = true;\n\t    t['Capitals'] = true;\n\t    t['Cambria'] = true;\n\t    t['Cartier'] = true;\n\t    t['Caslon'] = true;\n\t    t['Catull'] = true;\n\t    t['Centaur'] = true;\n\t    t['Century Old Style'] = true;\n\t    t['Century Schoolbook'] = true;\n\t    t['Chaparral'] = true;\n\t    t['Charis SIL'] = true;\n\t    t['Cheltenham'] = true;\n\t    t['Cholla Slab'] = true;\n\t    t['Clarendon'] = true;\n\t    t['Clearface'] = true;\n\t    t['Cochin'] = true;\n\t    t['Colonna'] = true;\n\t    t['Computer Modern'] = true;\n\t    t['Concrete Roman'] = true;\n\t    t['Constantia'] = true;\n\t    t['Cooper Black'] = true;\n\t    t['Corona'] = true;\n\t    t['Ecotype'] = true;\n\t    t['Egyptienne'] = true;\n\t    t['Elephant'] = true;\n\t    t['Excelsior'] = true;\n\t    t['Fairfield'] = true;\n\t    t['FF Scala'] = true;\n\t    t['Folkard'] = true;\n\t    t['Footlight'] = true;\n\t    t['FreeSerif'] = true;\n\t    t['Friz Quadrata'] = true;\n\t    t['Garamond'] = true;\n\t    t['Gentium'] = true;\n\t    t['Georgia'] = true;\n\t    t['Gloucester'] = true;\n\t    t['Goudy Old Style'] = true;\n\t    t['Goudy Schoolbook'] = true;\n\t    t['Goudy Pro Font'] = true;\n\t    t['Granjon'] = true;\n\t    t['Guardian Egyptian'] = true;\n\t    t['Heather'] = true;\n\t    t['Hercules'] = true;\n\t    t['High Tower Text'] = true;\n\t    t['Hiroshige'] = true;\n\t    t['Hoefler Text'] = true;\n\t    t['Humana Serif'] = true;\n\t    t['Imprint'] = true;\n\t    t['Ionic No. 5'] = true;\n\t    t['Janson'] = true;\n\t    t['Joanna'] = true;\n\t    t['Korinna'] = true;\n\t    t['Lexicon'] = true;\n\t    t['Liberation Serif'] = true;\n\t    t['Linux Libertine'] = true;\n\t    t['Literaturnaya'] = true;\n\t    t['Lucida'] = true;\n\t    t['Lucida Bright'] = true;\n\t    t['Melior'] = true;\n\t    t['Memphis'] = true;\n\t    t['Miller'] = true;\n\t    t['Minion'] = true;\n\t    t['Modern'] = true;\n\t    t['Mona Lisa'] = true;\n\t    t['Mrs Eaves'] = true;\n\t    t['MS Serif'] = true;\n\t    t['Museo Slab'] = true;\n\t    t['New York'] = true;\n\t    t['Nimbus Roman'] = true;\n\t    t['NPS Rawlinson Roadway'] = true;\n\t    t['NuptialScript'] = true;\n\t    t['Palatino'] = true;\n\t    t['Perpetua'] = true;\n\t    t['Plantin'] = true;\n\t    t['Plantin Schoolbook'] = true;\n\t    t['Playbill'] = true;\n\t    t['Poor Richard'] = true;\n\t    t['Rawlinson Roadway'] = true;\n\t    t['Renault'] = true;\n\t    t['Requiem'] = true;\n\t    t['Rockwell'] = true;\n\t    t['Roman'] = true;\n\t    t['Rotis Serif'] = true;\n\t    t['Sabon'] = true;\n\t    t['Scala'] = true;\n\t    t['Seagull'] = true;\n\t    t['Sistina'] = true;\n\t    t['Souvenir'] = true;\n\t    t['STIX'] = true;\n\t    t['Stone Informal'] = true;\n\t    t['Stone Serif'] = true;\n\t    t['Sylfaen'] = true;\n\t    t['Times'] = true;\n\t    t['Trajan'] = true;\n\t    t['Trinité'] = true;\n\t    t['Trump Mediaeval'] = true;\n\t    t['Utopia'] = true;\n\t    t['Vale Type'] = true;\n\t    t['Bitstream Vera'] = true;\n\t    t['Vera Serif'] = true;\n\t    t['Versailles'] = true;\n\t    t['Wanted'] = true;\n\t    t['Weiss'] = true;\n\t    t['Wide Latin'] = true;\n\t    t['Windsor'] = true;\n\t    t['XITS'] = true;\n\t   });\n\t   var getSymbolsFonts = getLookupTableFactory(function (t) {\n\t    t['Dingbats'] = true;\n\t    t['Symbol'] = true;\n\t    t['ZapfDingbats'] = true;\n\t   });\n\t   var getGlyphMapForStandardFonts = getLookupTableFactory(function (t) {\n\t    t[2] = 10;\n\t    t[3] = 32;\n\t    t[4] = 33;\n\t    t[5] = 34;\n\t    t[6] = 35;\n\t    t[7] = 36;\n\t    t[8] = 37;\n\t    t[9] = 38;\n\t    t[10] = 39;\n\t    t[11] = 40;\n\t    t[12] = 41;\n\t    t[13] = 42;\n\t    t[14] = 43;\n\t    t[15] = 44;\n\t    t[16] = 45;\n\t    t[17] = 46;\n\t    t[18] = 47;\n\t    t[19] = 48;\n\t    t[20] = 49;\n\t    t[21] = 50;\n\t    t[22] = 51;\n\t    t[23] = 52;\n\t    t[24] = 53;\n\t    t[25] = 54;\n\t    t[26] = 55;\n\t    t[27] = 56;\n\t    t[28] = 57;\n\t    t[29] = 58;\n\t    t[30] = 894;\n\t    t[31] = 60;\n\t    t[32] = 61;\n\t    t[33] = 62;\n\t    t[34] = 63;\n\t    t[35] = 64;\n\t    t[36] = 65;\n\t    t[37] = 66;\n\t    t[38] = 67;\n\t    t[39] = 68;\n\t    t[40] = 69;\n\t    t[41] = 70;\n\t    t[42] = 71;\n\t    t[43] = 72;\n\t    t[44] = 73;\n\t    t[45] = 74;\n\t    t[46] = 75;\n\t    t[47] = 76;\n\t    t[48] = 77;\n\t    t[49] = 78;\n\t    t[50] = 79;\n\t    t[51] = 80;\n\t    t[52] = 81;\n\t    t[53] = 82;\n\t    t[54] = 83;\n\t    t[55] = 84;\n\t    t[56] = 85;\n\t    t[57] = 86;\n\t    t[58] = 87;\n\t    t[59] = 88;\n\t    t[60] = 89;\n\t    t[61] = 90;\n\t    t[62] = 91;\n\t    t[63] = 92;\n\t    t[64] = 93;\n\t    t[65] = 94;\n\t    t[66] = 95;\n\t    t[67] = 96;\n\t    t[68] = 97;\n\t    t[69] = 98;\n\t    t[70] = 99;\n\t    t[71] = 100;\n\t    t[72] = 101;\n\t    t[73] = 102;\n\t    t[74] = 103;\n\t    t[75] = 104;\n\t    t[76] = 105;\n\t    t[77] = 106;\n\t    t[78] = 107;\n\t    t[79] = 108;\n\t    t[80] = 109;\n\t    t[81] = 110;\n\t    t[82] = 111;\n\t    t[83] = 112;\n\t    t[84] = 113;\n\t    t[85] = 114;\n\t    t[86] = 115;\n\t    t[87] = 116;\n\t    t[88] = 117;\n\t    t[89] = 118;\n\t    t[90] = 119;\n\t    t[91] = 120;\n\t    t[92] = 121;\n\t    t[93] = 122;\n\t    t[94] = 123;\n\t    t[95] = 124;\n\t    t[96] = 125;\n\t    t[97] = 126;\n\t    t[98] = 196;\n\t    t[99] = 197;\n\t    t[100] = 199;\n\t    t[101] = 201;\n\t    t[102] = 209;\n\t    t[103] = 214;\n\t    t[104] = 220;\n\t    t[105] = 225;\n\t    t[106] = 224;\n\t    t[107] = 226;\n\t    t[108] = 228;\n\t    t[109] = 227;\n\t    t[110] = 229;\n\t    t[111] = 231;\n\t    t[112] = 233;\n\t    t[113] = 232;\n\t    t[114] = 234;\n\t    t[115] = 235;\n\t    t[116] = 237;\n\t    t[117] = 236;\n\t    t[118] = 238;\n\t    t[119] = 239;\n\t    t[120] = 241;\n\t    t[121] = 243;\n\t    t[122] = 242;\n\t    t[123] = 244;\n\t    t[124] = 246;\n\t    t[125] = 245;\n\t    t[126] = 250;\n\t    t[127] = 249;\n\t    t[128] = 251;\n\t    t[129] = 252;\n\t    t[130] = 8224;\n\t    t[131] = 176;\n\t    t[132] = 162;\n\t    t[133] = 163;\n\t    t[134] = 167;\n\t    t[135] = 8226;\n\t    t[136] = 182;\n\t    t[137] = 223;\n\t    t[138] = 174;\n\t    t[139] = 169;\n\t    t[140] = 8482;\n\t    t[141] = 180;\n\t    t[142] = 168;\n\t    t[143] = 8800;\n\t    t[144] = 198;\n\t    t[145] = 216;\n\t    t[146] = 8734;\n\t    t[147] = 177;\n\t    t[148] = 8804;\n\t    t[149] = 8805;\n\t    t[150] = 165;\n\t    t[151] = 181;\n\t    t[152] = 8706;\n\t    t[153] = 8721;\n\t    t[154] = 8719;\n\t    t[156] = 8747;\n\t    t[157] = 170;\n\t    t[158] = 186;\n\t    t[159] = 8486;\n\t    t[160] = 230;\n\t    t[161] = 248;\n\t    t[162] = 191;\n\t    t[163] = 161;\n\t    t[164] = 172;\n\t    t[165] = 8730;\n\t    t[166] = 402;\n\t    t[167] = 8776;\n\t    t[168] = 8710;\n\t    t[169] = 171;\n\t    t[170] = 187;\n\t    t[171] = 8230;\n\t    t[210] = 218;\n\t    t[223] = 711;\n\t    t[224] = 321;\n\t    t[225] = 322;\n\t    t[227] = 353;\n\t    t[229] = 382;\n\t    t[234] = 253;\n\t    t[252] = 263;\n\t    t[253] = 268;\n\t    t[254] = 269;\n\t    t[258] = 258;\n\t    t[260] = 260;\n\t    t[261] = 261;\n\t    t[265] = 280;\n\t    t[266] = 281;\n\t    t[268] = 283;\n\t    t[269] = 313;\n\t    t[275] = 323;\n\t    t[276] = 324;\n\t    t[278] = 328;\n\t    t[284] = 345;\n\t    t[285] = 346;\n\t    t[286] = 347;\n\t    t[292] = 367;\n\t    t[295] = 377;\n\t    t[296] = 378;\n\t    t[298] = 380;\n\t    t[305] = 963;\n\t    t[306] = 964;\n\t    t[307] = 966;\n\t    t[308] = 8215;\n\t    t[309] = 8252;\n\t    t[310] = 8319;\n\t    t[311] = 8359;\n\t    t[312] = 8592;\n\t    t[313] = 8593;\n\t    t[337] = 9552;\n\t    t[493] = 1039;\n\t    t[494] = 1040;\n\t    t[705] = 1524;\n\t    t[706] = 8362;\n\t    t[710] = 64288;\n\t    t[711] = 64298;\n\t    t[759] = 1617;\n\t    t[761] = 1776;\n\t    t[763] = 1778;\n\t    t[775] = 1652;\n\t    t[777] = 1764;\n\t    t[778] = 1780;\n\t    t[779] = 1781;\n\t    t[780] = 1782;\n\t    t[782] = 771;\n\t    t[783] = 64726;\n\t    t[786] = 8363;\n\t    t[788] = 8532;\n\t    t[790] = 768;\n\t    t[791] = 769;\n\t    t[792] = 768;\n\t    t[795] = 803;\n\t    t[797] = 64336;\n\t    t[798] = 64337;\n\t    t[799] = 64342;\n\t    t[800] = 64343;\n\t    t[801] = 64344;\n\t    t[802] = 64345;\n\t    t[803] = 64362;\n\t    t[804] = 64363;\n\t    t[805] = 64364;\n\t    t[2424] = 7821;\n\t    t[2425] = 7822;\n\t    t[2426] = 7823;\n\t    t[2427] = 7824;\n\t    t[2428] = 7825;\n\t    t[2429] = 7826;\n\t    t[2430] = 7827;\n\t    t[2433] = 7682;\n\t    t[2678] = 8045;\n\t    t[2679] = 8046;\n\t    t[2830] = 1552;\n\t    t[2838] = 686;\n\t    t[2840] = 751;\n\t    t[2842] = 753;\n\t    t[2843] = 754;\n\t    t[2844] = 755;\n\t    t[2846] = 757;\n\t    t[2856] = 767;\n\t    t[2857] = 848;\n\t    t[2858] = 849;\n\t    t[2862] = 853;\n\t    t[2863] = 854;\n\t    t[2864] = 855;\n\t    t[2865] = 861;\n\t    t[2866] = 862;\n\t    t[2906] = 7460;\n\t    t[2908] = 7462;\n\t    t[2909] = 7463;\n\t    t[2910] = 7464;\n\t    t[2912] = 7466;\n\t    t[2913] = 7467;\n\t    t[2914] = 7468;\n\t    t[2916] = 7470;\n\t    t[2917] = 7471;\n\t    t[2918] = 7472;\n\t    t[2920] = 7474;\n\t    t[2921] = 7475;\n\t    t[2922] = 7476;\n\t    t[2924] = 7478;\n\t    t[2925] = 7479;\n\t    t[2926] = 7480;\n\t    t[2928] = 7482;\n\t    t[2929] = 7483;\n\t    t[2930] = 7484;\n\t    t[2932] = 7486;\n\t    t[2933] = 7487;\n\t    t[2934] = 7488;\n\t    t[2936] = 7490;\n\t    t[2937] = 7491;\n\t    t[2938] = 7492;\n\t    t[2940] = 7494;\n\t    t[2941] = 7495;\n\t    t[2942] = 7496;\n\t    t[2944] = 7498;\n\t    t[2946] = 7500;\n\t    t[2948] = 7502;\n\t    t[2950] = 7504;\n\t    t[2951] = 7505;\n\t    t[2952] = 7506;\n\t    t[2954] = 7508;\n\t    t[2955] = 7509;\n\t    t[2956] = 7510;\n\t    t[2958] = 7512;\n\t    t[2959] = 7513;\n\t    t[2960] = 7514;\n\t    t[2962] = 7516;\n\t    t[2963] = 7517;\n\t    t[2964] = 7518;\n\t    t[2966] = 7520;\n\t    t[2967] = 7521;\n\t    t[2968] = 7522;\n\t    t[2970] = 7524;\n\t    t[2971] = 7525;\n\t    t[2972] = 7526;\n\t    t[2974] = 7528;\n\t    t[2975] = 7529;\n\t    t[2976] = 7530;\n\t    t[2978] = 1537;\n\t    t[2979] = 1538;\n\t    t[2980] = 1539;\n\t    t[2982] = 1549;\n\t    t[2983] = 1551;\n\t    t[2984] = 1552;\n\t    t[2986] = 1554;\n\t    t[2987] = 1555;\n\t    t[2988] = 1556;\n\t    t[2990] = 1623;\n\t    t[2991] = 1624;\n\t    t[2995] = 1775;\n\t    t[2999] = 1791;\n\t    t[3002] = 64290;\n\t    t[3003] = 64291;\n\t    t[3004] = 64292;\n\t    t[3006] = 64294;\n\t    t[3007] = 64295;\n\t    t[3008] = 64296;\n\t    t[3011] = 1900;\n\t    t[3014] = 8223;\n\t    t[3015] = 8244;\n\t    t[3017] = 7532;\n\t    t[3018] = 7533;\n\t    t[3019] = 7534;\n\t    t[3075] = 7590;\n\t    t[3076] = 7591;\n\t    t[3079] = 7594;\n\t    t[3080] = 7595;\n\t    t[3083] = 7598;\n\t    t[3084] = 7599;\n\t    t[3087] = 7602;\n\t    t[3088] = 7603;\n\t    t[3091] = 7606;\n\t    t[3092] = 7607;\n\t    t[3095] = 7610;\n\t    t[3096] = 7611;\n\t    t[3099] = 7614;\n\t    t[3100] = 7615;\n\t    t[3103] = 7618;\n\t    t[3104] = 7619;\n\t    t[3107] = 8337;\n\t    t[3108] = 8338;\n\t    t[3116] = 1884;\n\t    t[3119] = 1885;\n\t    t[3120] = 1885;\n\t    t[3123] = 1886;\n\t    t[3124] = 1886;\n\t    t[3127] = 1887;\n\t    t[3128] = 1887;\n\t    t[3131] = 1888;\n\t    t[3132] = 1888;\n\t    t[3135] = 1889;\n\t    t[3136] = 1889;\n\t    t[3139] = 1890;\n\t    t[3140] = 1890;\n\t    t[3143] = 1891;\n\t    t[3144] = 1891;\n\t    t[3147] = 1892;\n\t    t[3148] = 1892;\n\t    t[3153] = 580;\n\t    t[3154] = 581;\n\t    t[3157] = 584;\n\t    t[3158] = 585;\n\t    t[3161] = 588;\n\t    t[3162] = 589;\n\t    t[3165] = 891;\n\t    t[3166] = 892;\n\t    t[3169] = 1274;\n\t    t[3170] = 1275;\n\t    t[3173] = 1278;\n\t    t[3174] = 1279;\n\t    t[3181] = 7622;\n\t    t[3182] = 7623;\n\t    t[3282] = 11799;\n\t    t[3316] = 578;\n\t    t[3379] = 42785;\n\t    t[3393] = 1159;\n\t    t[3416] = 8377;\n\t   });\n\t   var getSupplementalGlyphMapForArialBlack = getLookupTableFactory(function (t) {\n\t    t[227] = 322;\n\t    t[264] = 261;\n\t    t[291] = 346;\n\t   });\n\t   exports.getStdFontMap = getStdFontMap;\n\t   exports.getNonStdFontMap = getNonStdFontMap;\n\t   exports.getSerifFonts = getSerifFonts;\n\t   exports.getSymbolsFonts = getSymbolsFonts;\n\t   exports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\n\t   exports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCoreUnicode = {}, root.pdfjsSharedUtil);\n\t  }(this, function (exports, sharedUtil) {\n\t   var getLookupTableFactory = sharedUtil.getLookupTableFactory;\n\t   var getSpecialPUASymbols = getLookupTableFactory(function (t) {\n\t    t[63721] = 0x00A9;\n\t    t[63193] = 0x00A9;\n\t    t[63720] = 0x00AE;\n\t    t[63194] = 0x00AE;\n\t    t[63722] = 0x2122;\n\t    t[63195] = 0x2122;\n\t    t[63729] = 0x23A7;\n\t    t[63730] = 0x23A8;\n\t    t[63731] = 0x23A9;\n\t    t[63740] = 0x23AB;\n\t    t[63741] = 0x23AC;\n\t    t[63742] = 0x23AD;\n\t    t[63726] = 0x23A1;\n\t    t[63727] = 0x23A2;\n\t    t[63728] = 0x23A3;\n\t    t[63737] = 0x23A4;\n\t    t[63738] = 0x23A5;\n\t    t[63739] = 0x23A6;\n\t    t[63723] = 0x239B;\n\t    t[63724] = 0x239C;\n\t    t[63725] = 0x239D;\n\t    t[63734] = 0x239E;\n\t    t[63735] = 0x239F;\n\t    t[63736] = 0x23A0;\n\t   });\n\t   function mapSpecialUnicodeValues(code) {\n\t    if (code >= 0xFFF0 && code <= 0xFFFF) {\n\t     return 0;\n\t    } else if (code >= 0xF600 && code <= 0xF8FF) {\n\t     return getSpecialPUASymbols()[code] || code;\n\t    }\n\t    return code;\n\t   }\n\t   function getUnicodeForGlyph(name, glyphsUnicodeMap) {\n\t    var unicode = glyphsUnicodeMap[name];\n\t    if (unicode !== undefined) {\n\t     return unicode;\n\t    }\n\t    if (!name) {\n\t     return -1;\n\t    }\n\t    if (name[0] === 'u') {\n\t     var nameLen = name.length, hexStr;\n\t     if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\n\t      hexStr = name.substr(3);\n\t     } else if (nameLen >= 5 && nameLen <= 7) {\n\t      hexStr = name.substr(1);\n\t     } else {\n\t      return -1;\n\t     }\n\t     if (hexStr === hexStr.toUpperCase()) {\n\t      unicode = parseInt(hexStr, 16);\n\t      if (unicode >= 0) {\n\t       return unicode;\n\t      }\n\t     }\n\t    }\n\t    return -1;\n\t   }\n\t   var UnicodeRanges = [\n\t    {\n\t     'begin': 0x0000,\n\t     'end': 0x007F\n\t    },\n\t    {\n\t     'begin': 0x0080,\n\t     'end': 0x00FF\n\t    },\n\t    {\n\t     'begin': 0x0100,\n\t     'end': 0x017F\n\t    },\n\t    {\n\t     'begin': 0x0180,\n\t     'end': 0x024F\n\t    },\n\t    {\n\t     'begin': 0x0250,\n\t     'end': 0x02AF\n\t    },\n\t    {\n\t     'begin': 0x02B0,\n\t     'end': 0x02FF\n\t    },\n\t    {\n\t     'begin': 0x0300,\n\t     'end': 0x036F\n\t    },\n\t    {\n\t     'begin': 0x0370,\n\t     'end': 0x03FF\n\t    },\n\t    {\n\t     'begin': 0x2C80,\n\t     'end': 0x2CFF\n\t    },\n\t    {\n\t     'begin': 0x0400,\n\t     'end': 0x04FF\n\t    },\n\t    {\n\t     'begin': 0x0530,\n\t     'end': 0x058F\n\t    },\n\t    {\n\t     'begin': 0x0590,\n\t     'end': 0x05FF\n\t    },\n\t    {\n\t     'begin': 0xA500,\n\t     'end': 0xA63F\n\t    },\n\t    {\n\t     'begin': 0x0600,\n\t     'end': 0x06FF\n\t    },\n\t    {\n\t     'begin': 0x07C0,\n\t     'end': 0x07FF\n\t    },\n\t    {\n\t     'begin': 0x0900,\n\t     'end': 0x097F\n\t    },\n\t    {\n\t     'begin': 0x0980,\n\t     'end': 0x09FF\n\t    },\n\t    {\n\t     'begin': 0x0A00,\n\t     'end': 0x0A7F\n\t    },\n\t    {\n\t     'begin': 0x0A80,\n\t     'end': 0x0AFF\n\t    },\n\t    {\n\t     'begin': 0x0B00,\n\t     'end': 0x0B7F\n\t    },\n\t    {\n\t     'begin': 0x0B80,\n\t     'end': 0x0BFF\n\t    },\n\t    {\n\t     'begin': 0x0C00,\n\t     'end': 0x0C7F\n\t    },\n\t    {\n\t     'begin': 0x0C80,\n\t     'end': 0x0CFF\n\t    },\n\t    {\n\t     'begin': 0x0D00,\n\t     'end': 0x0D7F\n\t    },\n\t    {\n\t     'begin': 0x0E00,\n\t     'end': 0x0E7F\n\t    },\n\t    {\n\t     'begin': 0x0E80,\n\t     'end': 0x0EFF\n\t    },\n\t    {\n\t     'begin': 0x10A0,\n\t     'end': 0x10FF\n\t    },\n\t    {\n\t     'begin': 0x1B00,\n\t     'end': 0x1B7F\n\t    },\n\t    {\n\t     'begin': 0x1100,\n\t     'end': 0x11FF\n\t    },\n\t    {\n\t     'begin': 0x1E00,\n\t     'end': 0x1EFF\n\t    },\n\t    {\n\t     'begin': 0x1F00,\n\t     'end': 0x1FFF\n\t    },\n\t    {\n\t     'begin': 0x2000,\n\t     'end': 0x206F\n\t    },\n\t    {\n\t     'begin': 0x2070,\n\t     'end': 0x209F\n\t    },\n\t    {\n\t     'begin': 0x20A0,\n\t     'end': 0x20CF\n\t    },\n\t    {\n\t     'begin': 0x20D0,\n\t     'end': 0x20FF\n\t    },\n\t    {\n\t     'begin': 0x2100,\n\t     'end': 0x214F\n\t    },\n\t    {\n\t     'begin': 0x2150,\n\t     'end': 0x218F\n\t    },\n\t    {\n\t     'begin': 0x2190,\n\t     'end': 0x21FF\n\t    },\n\t    {\n\t     'begin': 0x2200,\n\t     'end': 0x22FF\n\t    },\n\t    {\n\t     'begin': 0x2300,\n\t     'end': 0x23FF\n\t    },\n\t    {\n\t     'begin': 0x2400,\n\t     'end': 0x243F\n\t    },\n\t    {\n\t     'begin': 0x2440,\n\t     'end': 0x245F\n\t    },\n\t    {\n\t     'begin': 0x2460,\n\t     'end': 0x24FF\n\t    },\n\t    {\n\t     'begin': 0x2500,\n\t     'end': 0x257F\n\t    },\n\t    {\n\t     'begin': 0x2580,\n\t     'end': 0x259F\n\t    },\n\t    {\n\t     'begin': 0x25A0,\n\t     'end': 0x25FF\n\t    },\n\t    {\n\t     'begin': 0x2600,\n\t     'end': 0x26FF\n\t    },\n\t    {\n\t     'begin': 0x2700,\n\t     'end': 0x27BF\n\t    },\n\t    {\n\t     'begin': 0x3000,\n\t     'end': 0x303F\n\t    },\n\t    {\n\t     'begin': 0x3040,\n\t     'end': 0x309F\n\t    },\n\t    {\n\t     'begin': 0x30A0,\n\t     'end': 0x30FF\n\t    },\n\t    {\n\t     'begin': 0x3100,\n\t     'end': 0x312F\n\t    },\n\t    {\n\t     'begin': 0x3130,\n\t     'end': 0x318F\n\t    },\n\t    {\n\t     'begin': 0xA840,\n\t     'end': 0xA87F\n\t    },\n\t    {\n\t     'begin': 0x3200,\n\t     'end': 0x32FF\n\t    },\n\t    {\n\t     'begin': 0x3300,\n\t     'end': 0x33FF\n\t    },\n\t    {\n\t     'begin': 0xAC00,\n\t     'end': 0xD7AF\n\t    },\n\t    {\n\t     'begin': 0xD800,\n\t     'end': 0xDFFF\n\t    },\n\t    {\n\t     'begin': 0x10900,\n\t     'end': 0x1091F\n\t    },\n\t    {\n\t     'begin': 0x4E00,\n\t     'end': 0x9FFF\n\t    },\n\t    {\n\t     'begin': 0xE000,\n\t     'end': 0xF8FF\n\t    },\n\t    {\n\t     'begin': 0x31C0,\n\t     'end': 0x31EF\n\t    },\n\t    {\n\t     'begin': 0xFB00,\n\t     'end': 0xFB4F\n\t    },\n\t    {\n\t     'begin': 0xFB50,\n\t     'end': 0xFDFF\n\t    },\n\t    {\n\t     'begin': 0xFE20,\n\t     'end': 0xFE2F\n\t    },\n\t    {\n\t     'begin': 0xFE10,\n\t     'end': 0xFE1F\n\t    },\n\t    {\n\t     'begin': 0xFE50,\n\t     'end': 0xFE6F\n\t    },\n\t    {\n\t     'begin': 0xFE70,\n\t     'end': 0xFEFF\n\t    },\n\t    {\n\t     'begin': 0xFF00,\n\t     'end': 0xFFEF\n\t    },\n\t    {\n\t     'begin': 0xFFF0,\n\t     'end': 0xFFFF\n\t    },\n\t    {\n\t     'begin': 0x0F00,\n\t     'end': 0x0FFF\n\t    },\n\t    {\n\t     'begin': 0x0700,\n\t     'end': 0x074F\n\t    },\n\t    {\n\t     'begin': 0x0780,\n\t     'end': 0x07BF\n\t    },\n\t    {\n\t     'begin': 0x0D80,\n\t     'end': 0x0DFF\n\t    },\n\t    {\n\t     'begin': 0x1000,\n\t     'end': 0x109F\n\t    },\n\t    {\n\t     'begin': 0x1200,\n\t     'end': 0x137F\n\t    },\n\t    {\n\t     'begin': 0x13A0,\n\t     'end': 0x13FF\n\t    },\n\t    {\n\t     'begin': 0x1400,\n\t     'end': 0x167F\n\t    },\n\t    {\n\t     'begin': 0x1680,\n\t     'end': 0x169F\n\t    },\n\t    {\n\t     'begin': 0x16A0,\n\t     'end': 0x16FF\n\t    },\n\t    {\n\t     'begin': 0x1780,\n\t     'end': 0x17FF\n\t    },\n\t    {\n\t     'begin': 0x1800,\n\t     'end': 0x18AF\n\t    },\n\t    {\n\t     'begin': 0x2800,\n\t     'end': 0x28FF\n\t    },\n\t    {\n\t     'begin': 0xA000,\n\t     'end': 0xA48F\n\t    },\n\t    {\n\t     'begin': 0x1700,\n\t     'end': 0x171F\n\t    },\n\t    {\n\t     'begin': 0x10300,\n\t     'end': 0x1032F\n\t    },\n\t    {\n\t     'begin': 0x10330,\n\t     'end': 0x1034F\n\t    },\n\t    {\n\t     'begin': 0x10400,\n\t     'end': 0x1044F\n\t    },\n\t    {\n\t     'begin': 0x1D000,\n\t     'end': 0x1D0FF\n\t    },\n\t    {\n\t     'begin': 0x1D400,\n\t     'end': 0x1D7FF\n\t    },\n\t    {\n\t     'begin': 0xFF000,\n\t     'end': 0xFFFFD\n\t    },\n\t    {\n\t     'begin': 0xFE00,\n\t     'end': 0xFE0F\n\t    },\n\t    {\n\t     'begin': 0xE0000,\n\t     'end': 0xE007F\n\t    },\n\t    {\n\t     'begin': 0x1900,\n\t     'end': 0x194F\n\t    },\n\t    {\n\t     'begin': 0x1950,\n\t     'end': 0x197F\n\t    },\n\t    {\n\t     'begin': 0x1980,\n\t     'end': 0x19DF\n\t    },\n\t    {\n\t     'begin': 0x1A00,\n\t     'end': 0x1A1F\n\t    },\n\t    {\n\t     'begin': 0x2C00,\n\t     'end': 0x2C5F\n\t    },\n\t    {\n\t     'begin': 0x2D30,\n\t     'end': 0x2D7F\n\t    },\n\t    {\n\t     'begin': 0x4DC0,\n\t     'end': 0x4DFF\n\t    },\n\t    {\n\t     'begin': 0xA800,\n\t     'end': 0xA82F\n\t    },\n\t    {\n\t     'begin': 0x10000,\n\t     'end': 0x1007F\n\t    },\n\t    {\n\t     'begin': 0x10140,\n\t     'end': 0x1018F\n\t    },\n\t    {\n\t     'begin': 0x10380,\n\t     'end': 0x1039F\n\t    },\n\t    {\n\t     'begin': 0x103A0,\n\t     'end': 0x103DF\n\t    },\n\t    {\n\t     'begin': 0x10450,\n\t     'end': 0x1047F\n\t    },\n\t    {\n\t     'begin': 0x10480,\n\t     'end': 0x104AF\n\t    },\n\t    {\n\t     'begin': 0x10800,\n\t     'end': 0x1083F\n\t    },\n\t    {\n\t     'begin': 0x10A00,\n\t     'end': 0x10A5F\n\t    },\n\t    {\n\t     'begin': 0x1D300,\n\t     'end': 0x1D35F\n\t    },\n\t    {\n\t     'begin': 0x12000,\n\t     'end': 0x123FF\n\t    },\n\t    {\n\t     'begin': 0x1D360,\n\t     'end': 0x1D37F\n\t    },\n\t    {\n\t     'begin': 0x1B80,\n\t     'end': 0x1BBF\n\t    },\n\t    {\n\t     'begin': 0x1C00,\n\t     'end': 0x1C4F\n\t    },\n\t    {\n\t     'begin': 0x1C50,\n\t     'end': 0x1C7F\n\t    },\n\t    {\n\t     'begin': 0xA880,\n\t     'end': 0xA8DF\n\t    },\n\t    {\n\t     'begin': 0xA900,\n\t     'end': 0xA92F\n\t    },\n\t    {\n\t     'begin': 0xA930,\n\t     'end': 0xA95F\n\t    },\n\t    {\n\t     'begin': 0xAA00,\n\t     'end': 0xAA5F\n\t    },\n\t    {\n\t     'begin': 0x10190,\n\t     'end': 0x101CF\n\t    },\n\t    {\n\t     'begin': 0x101D0,\n\t     'end': 0x101FF\n\t    },\n\t    {\n\t     'begin': 0x102A0,\n\t     'end': 0x102DF\n\t    },\n\t    {\n\t     'begin': 0x1F030,\n\t     'end': 0x1F09F\n\t    }\n\t   ];\n\t   function getUnicodeRangeFor(value) {\n\t    for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n\t     var range = UnicodeRanges[i];\n\t     if (value >= range.begin && value < range.end) {\n\t      return i;\n\t     }\n\t    }\n\t    return -1;\n\t   }\n\t   function isRTLRangeFor(value) {\n\t    var range = UnicodeRanges[13];\n\t    if (value >= range.begin && value < range.end) {\n\t     return true;\n\t    }\n\t    range = UnicodeRanges[11];\n\t    if (value >= range.begin && value < range.end) {\n\t     return true;\n\t    }\n\t    return false;\n\t   }\n\t   var getNormalizedUnicodes = getLookupTableFactory(function (t) {\n\t    t['\\u00A8'] = '\\u0020\\u0308';\n\t    t['\\u00AF'] = '\\u0020\\u0304';\n\t    t['\\u00B4'] = '\\u0020\\u0301';\n\t    t['\\u00B5'] = '\\u03BC';\n\t    t['\\u00B8'] = '\\u0020\\u0327';\n\t    t['\\u0132'] = '\\u0049\\u004A';\n\t    t['\\u0133'] = '\\u0069\\u006A';\n\t    t['\\u013F'] = '\\u004C\\u00B7';\n\t    t['\\u0140'] = '\\u006C\\u00B7';\n\t    t['\\u0149'] = '\\u02BC\\u006E';\n\t    t['\\u017F'] = '\\u0073';\n\t    t['\\u01C4'] = '\\u0044\\u017D';\n\t    t['\\u01C5'] = '\\u0044\\u017E';\n\t    t['\\u01C6'] = '\\u0064\\u017E';\n\t    t['\\u01C7'] = '\\u004C\\u004A';\n\t    t['\\u01C8'] = '\\u004C\\u006A';\n\t    t['\\u01C9'] = '\\u006C\\u006A';\n\t    t['\\u01CA'] = '\\u004E\\u004A';\n\t    t['\\u01CB'] = '\\u004E\\u006A';\n\t    t['\\u01CC'] = '\\u006E\\u006A';\n\t    t['\\u01F1'] = '\\u0044\\u005A';\n\t    t['\\u01F2'] = '\\u0044\\u007A';\n\t    t['\\u01F3'] = '\\u0064\\u007A';\n\t    t['\\u02D8'] = '\\u0020\\u0306';\n\t    t['\\u02D9'] = '\\u0020\\u0307';\n\t    t['\\u02DA'] = '\\u0020\\u030A';\n\t    t['\\u02DB'] = '\\u0020\\u0328';\n\t    t['\\u02DC'] = '\\u0020\\u0303';\n\t    t['\\u02DD'] = '\\u0020\\u030B';\n\t    t['\\u037A'] = '\\u0020\\u0345';\n\t    t['\\u0384'] = '\\u0020\\u0301';\n\t    t['\\u03D0'] = '\\u03B2';\n\t    t['\\u03D1'] = '\\u03B8';\n\t    t['\\u03D2'] = '\\u03A5';\n\t    t['\\u03D5'] = '\\u03C6';\n\t    t['\\u03D6'] = '\\u03C0';\n\t    t['\\u03F0'] = '\\u03BA';\n\t    t['\\u03F1'] = '\\u03C1';\n\t    t['\\u03F2'] = '\\u03C2';\n\t    t['\\u03F4'] = '\\u0398';\n\t    t['\\u03F5'] = '\\u03B5';\n\t    t['\\u03F9'] = '\\u03A3';\n\t    t['\\u0587'] = '\\u0565\\u0582';\n\t    t['\\u0675'] = '\\u0627\\u0674';\n\t    t['\\u0676'] = '\\u0648\\u0674';\n\t    t['\\u0677'] = '\\u06C7\\u0674';\n\t    t['\\u0678'] = '\\u064A\\u0674';\n\t    t['\\u0E33'] = '\\u0E4D\\u0E32';\n\t    t['\\u0EB3'] = '\\u0ECD\\u0EB2';\n\t    t['\\u0EDC'] = '\\u0EAB\\u0E99';\n\t    t['\\u0EDD'] = '\\u0EAB\\u0EA1';\n\t    t['\\u0F77'] = '\\u0FB2\\u0F81';\n\t    t['\\u0F79'] = '\\u0FB3\\u0F81';\n\t    t['\\u1E9A'] = '\\u0061\\u02BE';\n\t    t['\\u1FBD'] = '\\u0020\\u0313';\n\t    t['\\u1FBF'] = '\\u0020\\u0313';\n\t    t['\\u1FC0'] = '\\u0020\\u0342';\n\t    t['\\u1FFE'] = '\\u0020\\u0314';\n\t    t['\\u2002'] = '\\u0020';\n\t    t['\\u2003'] = '\\u0020';\n\t    t['\\u2004'] = '\\u0020';\n\t    t['\\u2005'] = '\\u0020';\n\t    t['\\u2006'] = '\\u0020';\n\t    t['\\u2008'] = '\\u0020';\n\t    t['\\u2009'] = '\\u0020';\n\t    t['\\u200A'] = '\\u0020';\n\t    t['\\u2017'] = '\\u0020\\u0333';\n\t    t['\\u2024'] = '\\u002E';\n\t    t['\\u2025'] = '\\u002E\\u002E';\n\t    t['\\u2026'] = '\\u002E\\u002E\\u002E';\n\t    t['\\u2033'] = '\\u2032\\u2032';\n\t    t['\\u2034'] = '\\u2032\\u2032\\u2032';\n\t    t['\\u2036'] = '\\u2035\\u2035';\n\t    t['\\u2037'] = '\\u2035\\u2035\\u2035';\n\t    t['\\u203C'] = '\\u0021\\u0021';\n\t    t['\\u203E'] = '\\u0020\\u0305';\n\t    t['\\u2047'] = '\\u003F\\u003F';\n\t    t['\\u2048'] = '\\u003F\\u0021';\n\t    t['\\u2049'] = '\\u0021\\u003F';\n\t    t['\\u2057'] = '\\u2032\\u2032\\u2032\\u2032';\n\t    t['\\u205F'] = '\\u0020';\n\t    t['\\u20A8'] = '\\u0052\\u0073';\n\t    t['\\u2100'] = '\\u0061\\u002F\\u0063';\n\t    t['\\u2101'] = '\\u0061\\u002F\\u0073';\n\t    t['\\u2103'] = '\\u00B0\\u0043';\n\t    t['\\u2105'] = '\\u0063\\u002F\\u006F';\n\t    t['\\u2106'] = '\\u0063\\u002F\\u0075';\n\t    t['\\u2107'] = '\\u0190';\n\t    t['\\u2109'] = '\\u00B0\\u0046';\n\t    t['\\u2116'] = '\\u004E\\u006F';\n\t    t['\\u2121'] = '\\u0054\\u0045\\u004C';\n\t    t['\\u2135'] = '\\u05D0';\n\t    t['\\u2136'] = '\\u05D1';\n\t    t['\\u2137'] = '\\u05D2';\n\t    t['\\u2138'] = '\\u05D3';\n\t    t['\\u213B'] = '\\u0046\\u0041\\u0058';\n\t    t['\\u2160'] = '\\u0049';\n\t    t['\\u2161'] = '\\u0049\\u0049';\n\t    t['\\u2162'] = '\\u0049\\u0049\\u0049';\n\t    t['\\u2163'] = '\\u0049\\u0056';\n\t    t['\\u2164'] = '\\u0056';\n\t    t['\\u2165'] = '\\u0056\\u0049';\n\t    t['\\u2166'] = '\\u0056\\u0049\\u0049';\n\t    t['\\u2167'] = '\\u0056\\u0049\\u0049\\u0049';\n\t    t['\\u2168'] = '\\u0049\\u0058';\n\t    t['\\u2169'] = '\\u0058';\n\t    t['\\u216A'] = '\\u0058\\u0049';\n\t    t['\\u216B'] = '\\u0058\\u0049\\u0049';\n\t    t['\\u216C'] = '\\u004C';\n\t    t['\\u216D'] = '\\u0043';\n\t    t['\\u216E'] = '\\u0044';\n\t    t['\\u216F'] = '\\u004D';\n\t    t['\\u2170'] = '\\u0069';\n\t    t['\\u2171'] = '\\u0069\\u0069';\n\t    t['\\u2172'] = '\\u0069\\u0069\\u0069';\n\t    t['\\u2173'] = '\\u0069\\u0076';\n\t    t['\\u2174'] = '\\u0076';\n\t    t['\\u2175'] = '\\u0076\\u0069';\n\t    t['\\u2176'] = '\\u0076\\u0069\\u0069';\n\t    t['\\u2177'] = '\\u0076\\u0069\\u0069\\u0069';\n\t    t['\\u2178'] = '\\u0069\\u0078';\n\t    t['\\u2179'] = '\\u0078';\n\t    t['\\u217A'] = '\\u0078\\u0069';\n\t    t['\\u217B'] = '\\u0078\\u0069\\u0069';\n\t    t['\\u217C'] = '\\u006C';\n\t    t['\\u217D'] = '\\u0063';\n\t    t['\\u217E'] = '\\u0064';\n\t    t['\\u217F'] = '\\u006D';\n\t    t['\\u222C'] = '\\u222B\\u222B';\n\t    t['\\u222D'] = '\\u222B\\u222B\\u222B';\n\t    t['\\u222F'] = '\\u222E\\u222E';\n\t    t['\\u2230'] = '\\u222E\\u222E\\u222E';\n\t    t['\\u2474'] = '\\u0028\\u0031\\u0029';\n\t    t['\\u2475'] = '\\u0028\\u0032\\u0029';\n\t    t['\\u2476'] = '\\u0028\\u0033\\u0029';\n\t    t['\\u2477'] = '\\u0028\\u0034\\u0029';\n\t    t['\\u2478'] = '\\u0028\\u0035\\u0029';\n\t    t['\\u2479'] = '\\u0028\\u0036\\u0029';\n\t    t['\\u247A'] = '\\u0028\\u0037\\u0029';\n\t    t['\\u247B'] = '\\u0028\\u0038\\u0029';\n\t    t['\\u247C'] = '\\u0028\\u0039\\u0029';\n\t    t['\\u247D'] = '\\u0028\\u0031\\u0030\\u0029';\n\t    t['\\u247E'] = '\\u0028\\u0031\\u0031\\u0029';\n\t    t['\\u247F'] = '\\u0028\\u0031\\u0032\\u0029';\n\t    t['\\u2480'] = '\\u0028\\u0031\\u0033\\u0029';\n\t    t['\\u2481'] = '\\u0028\\u0031\\u0034\\u0029';\n\t    t['\\u2482'] = '\\u0028\\u0031\\u0035\\u0029';\n\t    t['\\u2483'] = '\\u0028\\u0031\\u0036\\u0029';\n\t    t['\\u2484'] = '\\u0028\\u0031\\u0037\\u0029';\n\t    t['\\u2485'] = '\\u0028\\u0031\\u0038\\u0029';\n\t    t['\\u2486'] = '\\u0028\\u0031\\u0039\\u0029';\n\t    t['\\u2487'] = '\\u0028\\u0032\\u0030\\u0029';\n\t    t['\\u2488'] = '\\u0031\\u002E';\n\t    t['\\u2489'] = '\\u0032\\u002E';\n\t    t['\\u248A'] = '\\u0033\\u002E';\n\t    t['\\u248B'] = '\\u0034\\u002E';\n\t    t['\\u248C'] = '\\u0035\\u002E';\n\t    t['\\u248D'] = '\\u0036\\u002E';\n\t    t['\\u248E'] = '\\u0037\\u002E';\n\t    t['\\u248F'] = '\\u0038\\u002E';\n\t    t['\\u2490'] = '\\u0039\\u002E';\n\t    t['\\u2491'] = '\\u0031\\u0030\\u002E';\n\t    t['\\u2492'] = '\\u0031\\u0031\\u002E';\n\t    t['\\u2493'] = '\\u0031\\u0032\\u002E';\n\t    t['\\u2494'] = '\\u0031\\u0033\\u002E';\n\t    t['\\u2495'] = '\\u0031\\u0034\\u002E';\n\t    t['\\u2496'] = '\\u0031\\u0035\\u002E';\n\t    t['\\u2497'] = '\\u0031\\u0036\\u002E';\n\t    t['\\u2498'] = '\\u0031\\u0037\\u002E';\n\t    t['\\u2499'] = '\\u0031\\u0038\\u002E';\n\t    t['\\u249A'] = '\\u0031\\u0039\\u002E';\n\t    t['\\u249B'] = '\\u0032\\u0030\\u002E';\n\t    t['\\u249C'] = '\\u0028\\u0061\\u0029';\n\t    t['\\u249D'] = '\\u0028\\u0062\\u0029';\n\t    t['\\u249E'] = '\\u0028\\u0063\\u0029';\n\t    t['\\u249F'] = '\\u0028\\u0064\\u0029';\n\t    t['\\u24A0'] = '\\u0028\\u0065\\u0029';\n\t    t['\\u24A1'] = '\\u0028\\u0066\\u0029';\n\t    t['\\u24A2'] = '\\u0028\\u0067\\u0029';\n\t    t['\\u24A3'] = '\\u0028\\u0068\\u0029';\n\t    t['\\u24A4'] = '\\u0028\\u0069\\u0029';\n\t    t['\\u24A5'] = '\\u0028\\u006A\\u0029';\n\t    t['\\u24A6'] = '\\u0028\\u006B\\u0029';\n\t    t['\\u24A7'] = '\\u0028\\u006C\\u0029';\n\t    t['\\u24A8'] = '\\u0028\\u006D\\u0029';\n\t    t['\\u24A9'] = '\\u0028\\u006E\\u0029';\n\t    t['\\u24AA'] = '\\u0028\\u006F\\u0029';\n\t    t['\\u24AB'] = '\\u0028\\u0070\\u0029';\n\t    t['\\u24AC'] = '\\u0028\\u0071\\u0029';\n\t    t['\\u24AD'] = '\\u0028\\u0072\\u0029';\n\t    t['\\u24AE'] = '\\u0028\\u0073\\u0029';\n\t    t['\\u24AF'] = '\\u0028\\u0074\\u0029';\n\t    t['\\u24B0'] = '\\u0028\\u0075\\u0029';\n\t    t['\\u24B1'] = '\\u0028\\u0076\\u0029';\n\t    t['\\u24B2'] = '\\u0028\\u0077\\u0029';\n\t    t['\\u24B3'] = '\\u0028\\u0078\\u0029';\n\t    t['\\u24B4'] = '\\u0028\\u0079\\u0029';\n\t    t['\\u24B5'] = '\\u0028\\u007A\\u0029';\n\t    t['\\u2A0C'] = '\\u222B\\u222B\\u222B\\u222B';\n\t    t['\\u2A74'] = '\\u003A\\u003A\\u003D';\n\t    t['\\u2A75'] = '\\u003D\\u003D';\n\t    t['\\u2A76'] = '\\u003D\\u003D\\u003D';\n\t    t['\\u2E9F'] = '\\u6BCD';\n\t    t['\\u2EF3'] = '\\u9F9F';\n\t    t['\\u2F00'] = '\\u4E00';\n\t    t['\\u2F01'] = '\\u4E28';\n\t    t['\\u2F02'] = '\\u4E36';\n\t    t['\\u2F03'] = '\\u4E3F';\n\t    t['\\u2F04'] = '\\u4E59';\n\t    t['\\u2F05'] = '\\u4E85';\n\t    t['\\u2F06'] = '\\u4E8C';\n\t    t['\\u2F07'] = '\\u4EA0';\n\t    t['\\u2F08'] = '\\u4EBA';\n\t    t['\\u2F09'] = '\\u513F';\n\t    t['\\u2F0A'] = '\\u5165';\n\t    t['\\u2F0B'] = '\\u516B';\n\t    t['\\u2F0C'] = '\\u5182';\n\t    t['\\u2F0D'] = '\\u5196';\n\t    t['\\u2F0E'] = '\\u51AB';\n\t    t['\\u2F0F'] = '\\u51E0';\n\t    t['\\u2F10'] = '\\u51F5';\n\t    t['\\u2F11'] = '\\u5200';\n\t    t['\\u2F12'] = '\\u529B';\n\t    t['\\u2F13'] = '\\u52F9';\n\t    t['\\u2F14'] = '\\u5315';\n\t    t['\\u2F15'] = '\\u531A';\n\t    t['\\u2F16'] = '\\u5338';\n\t    t['\\u2F17'] = '\\u5341';\n\t    t['\\u2F18'] = '\\u535C';\n\t    t['\\u2F19'] = '\\u5369';\n\t    t['\\u2F1A'] = '\\u5382';\n\t    t['\\u2F1B'] = '\\u53B6';\n\t    t['\\u2F1C'] = '\\u53C8';\n\t    t['\\u2F1D'] = '\\u53E3';\n\t    t['\\u2F1E'] = '\\u56D7';\n\t    t['\\u2F1F'] = '\\u571F';\n\t    t['\\u2F20'] = '\\u58EB';\n\t    t['\\u2F21'] = '\\u5902';\n\t    t['\\u2F22'] = '\\u590A';\n\t    t['\\u2F23'] = '\\u5915';\n\t    t['\\u2F24'] = '\\u5927';\n\t    t['\\u2F25'] = '\\u5973';\n\t    t['\\u2F26'] = '\\u5B50';\n\t    t['\\u2F27'] = '\\u5B80';\n\t    t['\\u2F28'] = '\\u5BF8';\n\t    t['\\u2F29'] = '\\u5C0F';\n\t    t['\\u2F2A'] = '\\u5C22';\n\t    t['\\u2F2B'] = '\\u5C38';\n\t    t['\\u2F2C'] = '\\u5C6E';\n\t    t['\\u2F2D'] = '\\u5C71';\n\t    t['\\u2F2E'] = '\\u5DDB';\n\t    t['\\u2F2F'] = '\\u5DE5';\n\t    t['\\u2F30'] = '\\u5DF1';\n\t    t['\\u2F31'] = '\\u5DFE';\n\t    t['\\u2F32'] = '\\u5E72';\n\t    t['\\u2F33'] = '\\u5E7A';\n\t    t['\\u2F34'] = '\\u5E7F';\n\t    t['\\u2F35'] = '\\u5EF4';\n\t    t['\\u2F36'] = '\\u5EFE';\n\t    t['\\u2F37'] = '\\u5F0B';\n\t    t['\\u2F38'] = '\\u5F13';\n\t    t['\\u2F39'] = '\\u5F50';\n\t    t['\\u2F3A'] = '\\u5F61';\n\t    t['\\u2F3B'] = '\\u5F73';\n\t    t['\\u2F3C'] = '\\u5FC3';\n\t    t['\\u2F3D'] = '\\u6208';\n\t    t['\\u2F3E'] = '\\u6236';\n\t    t['\\u2F3F'] = '\\u624B';\n\t    t['\\u2F40'] = '\\u652F';\n\t    t['\\u2F41'] = '\\u6534';\n\t    t['\\u2F42'] = '\\u6587';\n\t    t['\\u2F43'] = '\\u6597';\n\t    t['\\u2F44'] = '\\u65A4';\n\t    t['\\u2F45'] = '\\u65B9';\n\t    t['\\u2F46'] = '\\u65E0';\n\t    t['\\u2F47'] = '\\u65E5';\n\t    t['\\u2F48'] = '\\u66F0';\n\t    t['\\u2F49'] = '\\u6708';\n\t    t['\\u2F4A'] = '\\u6728';\n\t    t['\\u2F4B'] = '\\u6B20';\n\t    t['\\u2F4C'] = '\\u6B62';\n\t    t['\\u2F4D'] = '\\u6B79';\n\t    t['\\u2F4E'] = '\\u6BB3';\n\t    t['\\u2F4F'] = '\\u6BCB';\n\t    t['\\u2F50'] = '\\u6BD4';\n\t    t['\\u2F51'] = '\\u6BDB';\n\t    t['\\u2F52'] = '\\u6C0F';\n\t    t['\\u2F53'] = '\\u6C14';\n\t    t['\\u2F54'] = '\\u6C34';\n\t    t['\\u2F55'] = '\\u706B';\n\t    t['\\u2F56'] = '\\u722A';\n\t    t['\\u2F57'] = '\\u7236';\n\t    t['\\u2F58'] = '\\u723B';\n\t    t['\\u2F59'] = '\\u723F';\n\t    t['\\u2F5A'] = '\\u7247';\n\t    t['\\u2F5B'] = '\\u7259';\n\t    t['\\u2F5C'] = '\\u725B';\n\t    t['\\u2F5D'] = '\\u72AC';\n\t    t['\\u2F5E'] = '\\u7384';\n\t    t['\\u2F5F'] = '\\u7389';\n\t    t['\\u2F60'] = '\\u74DC';\n\t    t['\\u2F61'] = '\\u74E6';\n\t    t['\\u2F62'] = '\\u7518';\n\t    t['\\u2F63'] = '\\u751F';\n\t    t['\\u2F64'] = '\\u7528';\n\t    t['\\u2F65'] = '\\u7530';\n\t    t['\\u2F66'] = '\\u758B';\n\t    t['\\u2F67'] = '\\u7592';\n\t    t['\\u2F68'] = '\\u7676';\n\t    t['\\u2F69'] = '\\u767D';\n\t    t['\\u2F6A'] = '\\u76AE';\n\t    t['\\u2F6B'] = '\\u76BF';\n\t    t['\\u2F6C'] = '\\u76EE';\n\t    t['\\u2F6D'] = '\\u77DB';\n\t    t['\\u2F6E'] = '\\u77E2';\n\t    t['\\u2F6F'] = '\\u77F3';\n\t    t['\\u2F70'] = '\\u793A';\n\t    t['\\u2F71'] = '\\u79B8';\n\t    t['\\u2F72'] = '\\u79BE';\n\t    t['\\u2F73'] = '\\u7A74';\n\t    t['\\u2F74'] = '\\u7ACB';\n\t    t['\\u2F75'] = '\\u7AF9';\n\t    t['\\u2F76'] = '\\u7C73';\n\t    t['\\u2F77'] = '\\u7CF8';\n\t    t['\\u2F78'] = '\\u7F36';\n\t    t['\\u2F79'] = '\\u7F51';\n\t    t['\\u2F7A'] = '\\u7F8A';\n\t    t['\\u2F7B'] = '\\u7FBD';\n\t    t['\\u2F7C'] = '\\u8001';\n\t    t['\\u2F7D'] = '\\u800C';\n\t    t['\\u2F7E'] = '\\u8012';\n\t    t['\\u2F7F'] = '\\u8033';\n\t    t['\\u2F80'] = '\\u807F';\n\t    t['\\u2F81'] = '\\u8089';\n\t    t['\\u2F82'] = '\\u81E3';\n\t    t['\\u2F83'] = '\\u81EA';\n\t    t['\\u2F84'] = '\\u81F3';\n\t    t['\\u2F85'] = '\\u81FC';\n\t    t['\\u2F86'] = '\\u820C';\n\t    t['\\u2F87'] = '\\u821B';\n\t    t['\\u2F88'] = '\\u821F';\n\t    t['\\u2F89'] = '\\u826E';\n\t    t['\\u2F8A'] = '\\u8272';\n\t    t['\\u2F8B'] = '\\u8278';\n\t    t['\\u2F8C'] = '\\u864D';\n\t    t['\\u2F8D'] = '\\u866B';\n\t    t['\\u2F8E'] = '\\u8840';\n\t    t['\\u2F8F'] = '\\u884C';\n\t    t['\\u2F90'] = '\\u8863';\n\t    t['\\u2F91'] = '\\u897E';\n\t    t['\\u2F92'] = '\\u898B';\n\t    t['\\u2F93'] = '\\u89D2';\n\t    t['\\u2F94'] = '\\u8A00';\n\t    t['\\u2F95'] = '\\u8C37';\n\t    t['\\u2F96'] = '\\u8C46';\n\t    t['\\u2F97'] = '\\u8C55';\n\t    t['\\u2F98'] = '\\u8C78';\n\t    t['\\u2F99'] = '\\u8C9D';\n\t    t['\\u2F9A'] = '\\u8D64';\n\t    t['\\u2F9B'] = '\\u8D70';\n\t    t['\\u2F9C'] = '\\u8DB3';\n\t    t['\\u2F9D'] = '\\u8EAB';\n\t    t['\\u2F9E'] = '\\u8ECA';\n\t    t['\\u2F9F'] = '\\u8F9B';\n\t    t['\\u2FA0'] = '\\u8FB0';\n\t    t['\\u2FA1'] = '\\u8FB5';\n\t    t['\\u2FA2'] = '\\u9091';\n\t    t['\\u2FA3'] = '\\u9149';\n\t    t['\\u2FA4'] = '\\u91C6';\n\t    t['\\u2FA5'] = '\\u91CC';\n\t    t['\\u2FA6'] = '\\u91D1';\n\t    t['\\u2FA7'] = '\\u9577';\n\t    t['\\u2FA8'] = '\\u9580';\n\t    t['\\u2FA9'] = '\\u961C';\n\t    t['\\u2FAA'] = '\\u96B6';\n\t    t['\\u2FAB'] = '\\u96B9';\n\t    t['\\u2FAC'] = '\\u96E8';\n\t    t['\\u2FAD'] = '\\u9751';\n\t    t['\\u2FAE'] = '\\u975E';\n\t    t['\\u2FAF'] = '\\u9762';\n\t    t['\\u2FB0'] = '\\u9769';\n\t    t['\\u2FB1'] = '\\u97CB';\n\t    t['\\u2FB2'] = '\\u97ED';\n\t    t['\\u2FB3'] = '\\u97F3';\n\t    t['\\u2FB4'] = '\\u9801';\n\t    t['\\u2FB5'] = '\\u98A8';\n\t    t['\\u2FB6'] = '\\u98DB';\n\t    t['\\u2FB7'] = '\\u98DF';\n\t    t['\\u2FB8'] = '\\u9996';\n\t    t['\\u2FB9'] = '\\u9999';\n\t    t['\\u2FBA'] = '\\u99AC';\n\t    t['\\u2FBB'] = '\\u9AA8';\n\t    t['\\u2FBC'] = '\\u9AD8';\n\t    t['\\u2FBD'] = '\\u9ADF';\n\t    t['\\u2FBE'] = '\\u9B25';\n\t    t['\\u2FBF'] = '\\u9B2F';\n\t    t['\\u2FC0'] = '\\u9B32';\n\t    t['\\u2FC1'] = '\\u9B3C';\n\t    t['\\u2FC2'] = '\\u9B5A';\n\t    t['\\u2FC3'] = '\\u9CE5';\n\t    t['\\u2FC4'] = '\\u9E75';\n\t    t['\\u2FC5'] = '\\u9E7F';\n\t    t['\\u2FC6'] = '\\u9EA5';\n\t    t['\\u2FC7'] = '\\u9EBB';\n\t    t['\\u2FC8'] = '\\u9EC3';\n\t    t['\\u2FC9'] = '\\u9ECD';\n\t    t['\\u2FCA'] = '\\u9ED1';\n\t    t['\\u2FCB'] = '\\u9EF9';\n\t    t['\\u2FCC'] = '\\u9EFD';\n\t    t['\\u2FCD'] = '\\u9F0E';\n\t    t['\\u2FCE'] = '\\u9F13';\n\t    t['\\u2FCF'] = '\\u9F20';\n\t    t['\\u2FD0'] = '\\u9F3B';\n\t    t['\\u2FD1'] = '\\u9F4A';\n\t    t['\\u2FD2'] = '\\u9F52';\n\t    t['\\u2FD3'] = '\\u9F8D';\n\t    t['\\u2FD4'] = '\\u9F9C';\n\t    t['\\u2FD5'] = '\\u9FA0';\n\t    t['\\u3036'] = '\\u3012';\n\t    t['\\u3038'] = '\\u5341';\n\t    t['\\u3039'] = '\\u5344';\n\t    t['\\u303A'] = '\\u5345';\n\t    t['\\u309B'] = '\\u0020\\u3099';\n\t    t['\\u309C'] = '\\u0020\\u309A';\n\t    t['\\u3131'] = '\\u1100';\n\t    t['\\u3132'] = '\\u1101';\n\t    t['\\u3133'] = '\\u11AA';\n\t    t['\\u3134'] = '\\u1102';\n\t    t['\\u3135'] = '\\u11AC';\n\t    t['\\u3136'] = '\\u11AD';\n\t    t['\\u3137'] = '\\u1103';\n\t    t['\\u3138'] = '\\u1104';\n\t    t['\\u3139'] = '\\u1105';\n\t    t['\\u313A'] = '\\u11B0';\n\t    t['\\u313B'] = '\\u11B1';\n\t    t['\\u313C'] = '\\u11B2';\n\t    t['\\u313D'] = '\\u11B3';\n\t    t['\\u313E'] = '\\u11B4';\n\t    t['\\u313F'] = '\\u11B5';\n\t    t['\\u3140'] = '\\u111A';\n\t    t['\\u3141'] = '\\u1106';\n\t    t['\\u3142'] = '\\u1107';\n\t    t['\\u3143'] = '\\u1108';\n\t    t['\\u3144'] = '\\u1121';\n\t    t['\\u3145'] = '\\u1109';\n\t    t['\\u3146'] = '\\u110A';\n\t    t['\\u3147'] = '\\u110B';\n\t    t['\\u3148'] = '\\u110C';\n\t    t['\\u3149'] = '\\u110D';\n\t    t['\\u314A'] = '\\u110E';\n\t    t['\\u314B'] = '\\u110F';\n\t    t['\\u314C'] = '\\u1110';\n\t    t['\\u314D'] = '\\u1111';\n\t    t['\\u314E'] = '\\u1112';\n\t    t['\\u314F'] = '\\u1161';\n\t    t['\\u3150'] = '\\u1162';\n\t    t['\\u3151'] = '\\u1163';\n\t    t['\\u3152'] = '\\u1164';\n\t    t['\\u3153'] = '\\u1165';\n\t    t['\\u3154'] = '\\u1166';\n\t    t['\\u3155'] = '\\u1167';\n\t    t['\\u3156'] = '\\u1168';\n\t    t['\\u3157'] = '\\u1169';\n\t    t['\\u3158'] = '\\u116A';\n\t    t['\\u3159'] = '\\u116B';\n\t    t['\\u315A'] = '\\u116C';\n\t    t['\\u315B'] = '\\u116D';\n\t    t['\\u315C'] = '\\u116E';\n\t    t['\\u315D'] = '\\u116F';\n\t    t['\\u315E'] = '\\u1170';\n\t    t['\\u315F'] = '\\u1171';\n\t    t['\\u3160'] = '\\u1172';\n\t    t['\\u3161'] = '\\u1173';\n\t    t['\\u3162'] = '\\u1174';\n\t    t['\\u3163'] = '\\u1175';\n\t    t['\\u3164'] = '\\u1160';\n\t    t['\\u3165'] = '\\u1114';\n\t    t['\\u3166'] = '\\u1115';\n\t    t['\\u3167'] = '\\u11C7';\n\t    t['\\u3168'] = '\\u11C8';\n\t    t['\\u3169'] = '\\u11CC';\n\t    t['\\u316A'] = '\\u11CE';\n\t    t['\\u316B'] = '\\u11D3';\n\t    t['\\u316C'] = '\\u11D7';\n\t    t['\\u316D'] = '\\u11D9';\n\t    t['\\u316E'] = '\\u111C';\n\t    t['\\u316F'] = '\\u11DD';\n\t    t['\\u3170'] = '\\u11DF';\n\t    t['\\u3171'] = '\\u111D';\n\t    t['\\u3172'] = '\\u111E';\n\t    t['\\u3173'] = '\\u1120';\n\t    t['\\u3174'] = '\\u1122';\n\t    t['\\u3175'] = '\\u1123';\n\t    t['\\u3176'] = '\\u1127';\n\t    t['\\u3177'] = '\\u1129';\n\t    t['\\u3178'] = '\\u112B';\n\t    t['\\u3179'] = '\\u112C';\n\t    t['\\u317A'] = '\\u112D';\n\t    t['\\u317B'] = '\\u112E';\n\t    t['\\u317C'] = '\\u112F';\n\t    t['\\u317D'] = '\\u1132';\n\t    t['\\u317E'] = '\\u1136';\n\t    t['\\u317F'] = '\\u1140';\n\t    t['\\u3180'] = '\\u1147';\n\t    t['\\u3181'] = '\\u114C';\n\t    t['\\u3182'] = '\\u11F1';\n\t    t['\\u3183'] = '\\u11F2';\n\t    t['\\u3184'] = '\\u1157';\n\t    t['\\u3185'] = '\\u1158';\n\t    t['\\u3186'] = '\\u1159';\n\t    t['\\u3187'] = '\\u1184';\n\t    t['\\u3188'] = '\\u1185';\n\t    t['\\u3189'] = '\\u1188';\n\t    t['\\u318A'] = '\\u1191';\n\t    t['\\u318B'] = '\\u1192';\n\t    t['\\u318C'] = '\\u1194';\n\t    t['\\u318D'] = '\\u119E';\n\t    t['\\u318E'] = '\\u11A1';\n\t    t['\\u3200'] = '\\u0028\\u1100\\u0029';\n\t    t['\\u3201'] = '\\u0028\\u1102\\u0029';\n\t    t['\\u3202'] = '\\u0028\\u1103\\u0029';\n\t    t['\\u3203'] = '\\u0028\\u1105\\u0029';\n\t    t['\\u3204'] = '\\u0028\\u1106\\u0029';\n\t    t['\\u3205'] = '\\u0028\\u1107\\u0029';\n\t    t['\\u3206'] = '\\u0028\\u1109\\u0029';\n\t    t['\\u3207'] = '\\u0028\\u110B\\u0029';\n\t    t['\\u3208'] = '\\u0028\\u110C\\u0029';\n\t    t['\\u3209'] = '\\u0028\\u110E\\u0029';\n\t    t['\\u320A'] = '\\u0028\\u110F\\u0029';\n\t    t['\\u320B'] = '\\u0028\\u1110\\u0029';\n\t    t['\\u320C'] = '\\u0028\\u1111\\u0029';\n\t    t['\\u320D'] = '\\u0028\\u1112\\u0029';\n\t    t['\\u320E'] = '\\u0028\\u1100\\u1161\\u0029';\n\t    t['\\u320F'] = '\\u0028\\u1102\\u1161\\u0029';\n\t    t['\\u3210'] = '\\u0028\\u1103\\u1161\\u0029';\n\t    t['\\u3211'] = '\\u0028\\u1105\\u1161\\u0029';\n\t    t['\\u3212'] = '\\u0028\\u1106\\u1161\\u0029';\n\t    t['\\u3213'] = '\\u0028\\u1107\\u1161\\u0029';\n\t    t['\\u3214'] = '\\u0028\\u1109\\u1161\\u0029';\n\t    t['\\u3215'] = '\\u0028\\u110B\\u1161\\u0029';\n\t    t['\\u3216'] = '\\u0028\\u110C\\u1161\\u0029';\n\t    t['\\u3217'] = '\\u0028\\u110E\\u1161\\u0029';\n\t    t['\\u3218'] = '\\u0028\\u110F\\u1161\\u0029';\n\t    t['\\u3219'] = '\\u0028\\u1110\\u1161\\u0029';\n\t    t['\\u321A'] = '\\u0028\\u1111\\u1161\\u0029';\n\t    t['\\u321B'] = '\\u0028\\u1112\\u1161\\u0029';\n\t    t['\\u321C'] = '\\u0028\\u110C\\u116E\\u0029';\n\t    t['\\u321D'] = '\\u0028\\u110B\\u1169\\u110C\\u1165\\u11AB\\u0029';\n\t    t['\\u321E'] = '\\u0028\\u110B\\u1169\\u1112\\u116E\\u0029';\n\t    t['\\u3220'] = '\\u0028\\u4E00\\u0029';\n\t    t['\\u3221'] = '\\u0028\\u4E8C\\u0029';\n\t    t['\\u3222'] = '\\u0028\\u4E09\\u0029';\n\t    t['\\u3223'] = '\\u0028\\u56DB\\u0029';\n\t    t['\\u3224'] = '\\u0028\\u4E94\\u0029';\n\t    t['\\u3225'] = '\\u0028\\u516D\\u0029';\n\t    t['\\u3226'] = '\\u0028\\u4E03\\u0029';\n\t    t['\\u3227'] = '\\u0028\\u516B\\u0029';\n\t    t['\\u3228'] = '\\u0028\\u4E5D\\u0029';\n\t    t['\\u3229'] = '\\u0028\\u5341\\u0029';\n\t    t['\\u322A'] = '\\u0028\\u6708\\u0029';\n\t    t['\\u322B'] = '\\u0028\\u706B\\u0029';\n\t    t['\\u322C'] = '\\u0028\\u6C34\\u0029';\n\t    t['\\u322D'] = '\\u0028\\u6728\\u0029';\n\t    t['\\u322E'] = '\\u0028\\u91D1\\u0029';\n\t    t['\\u322F'] = '\\u0028\\u571F\\u0029';\n\t    t['\\u3230'] = '\\u0028\\u65E5\\u0029';\n\t    t['\\u3231'] = '\\u0028\\u682A\\u0029';\n\t    t['\\u3232'] = '\\u0028\\u6709\\u0029';\n\t    t['\\u3233'] = '\\u0028\\u793E\\u0029';\n\t    t['\\u3234'] = '\\u0028\\u540D\\u0029';\n\t    t['\\u3235'] = '\\u0028\\u7279\\u0029';\n\t    t['\\u3236'] = '\\u0028\\u8CA1\\u0029';\n\t    t['\\u3237'] = '\\u0028\\u795D\\u0029';\n\t    t['\\u3238'] = '\\u0028\\u52B4\\u0029';\n\t    t['\\u3239'] = '\\u0028\\u4EE3\\u0029';\n\t    t['\\u323A'] = '\\u0028\\u547C\\u0029';\n\t    t['\\u323B'] = '\\u0028\\u5B66\\u0029';\n\t    t['\\u323C'] = '\\u0028\\u76E3\\u0029';\n\t    t['\\u323D'] = '\\u0028\\u4F01\\u0029';\n\t    t['\\u323E'] = '\\u0028\\u8CC7\\u0029';\n\t    t['\\u323F'] = '\\u0028\\u5354\\u0029';\n\t    t['\\u3240'] = '\\u0028\\u796D\\u0029';\n\t    t['\\u3241'] = '\\u0028\\u4F11\\u0029';\n\t    t['\\u3242'] = '\\u0028\\u81EA\\u0029';\n\t    t['\\u3243'] = '\\u0028\\u81F3\\u0029';\n\t    t['\\u32C0'] = '\\u0031\\u6708';\n\t    t['\\u32C1'] = '\\u0032\\u6708';\n\t    t['\\u32C2'] = '\\u0033\\u6708';\n\t    t['\\u32C3'] = '\\u0034\\u6708';\n\t    t['\\u32C4'] = '\\u0035\\u6708';\n\t    t['\\u32C5'] = '\\u0036\\u6708';\n\t    t['\\u32C6'] = '\\u0037\\u6708';\n\t    t['\\u32C7'] = '\\u0038\\u6708';\n\t    t['\\u32C8'] = '\\u0039\\u6708';\n\t    t['\\u32C9'] = '\\u0031\\u0030\\u6708';\n\t    t['\\u32CA'] = '\\u0031\\u0031\\u6708';\n\t    t['\\u32CB'] = '\\u0031\\u0032\\u6708';\n\t    t['\\u3358'] = '\\u0030\\u70B9';\n\t    t['\\u3359'] = '\\u0031\\u70B9';\n\t    t['\\u335A'] = '\\u0032\\u70B9';\n\t    t['\\u335B'] = '\\u0033\\u70B9';\n\t    t['\\u335C'] = '\\u0034\\u70B9';\n\t    t['\\u335D'] = '\\u0035\\u70B9';\n\t    t['\\u335E'] = '\\u0036\\u70B9';\n\t    t['\\u335F'] = '\\u0037\\u70B9';\n\t    t['\\u3360'] = '\\u0038\\u70B9';\n\t    t['\\u3361'] = '\\u0039\\u70B9';\n\t    t['\\u3362'] = '\\u0031\\u0030\\u70B9';\n\t    t['\\u3363'] = '\\u0031\\u0031\\u70B9';\n\t    t['\\u3364'] = '\\u0031\\u0032\\u70B9';\n\t    t['\\u3365'] = '\\u0031\\u0033\\u70B9';\n\t    t['\\u3366'] = '\\u0031\\u0034\\u70B9';\n\t    t['\\u3367'] = '\\u0031\\u0035\\u70B9';\n\t    t['\\u3368'] = '\\u0031\\u0036\\u70B9';\n\t    t['\\u3369'] = '\\u0031\\u0037\\u70B9';\n\t    t['\\u336A'] = '\\u0031\\u0038\\u70B9';\n\t    t['\\u336B'] = '\\u0031\\u0039\\u70B9';\n\t    t['\\u336C'] = '\\u0032\\u0030\\u70B9';\n\t    t['\\u336D'] = '\\u0032\\u0031\\u70B9';\n\t    t['\\u336E'] = '\\u0032\\u0032\\u70B9';\n\t    t['\\u336F'] = '\\u0032\\u0033\\u70B9';\n\t    t['\\u3370'] = '\\u0032\\u0034\\u70B9';\n\t    t['\\u33E0'] = '\\u0031\\u65E5';\n\t    t['\\u33E1'] = '\\u0032\\u65E5';\n\t    t['\\u33E2'] = '\\u0033\\u65E5';\n\t    t['\\u33E3'] = '\\u0034\\u65E5';\n\t    t['\\u33E4'] = '\\u0035\\u65E5';\n\t    t['\\u33E5'] = '\\u0036\\u65E5';\n\t    t['\\u33E6'] = '\\u0037\\u65E5';\n\t    t['\\u33E7'] = '\\u0038\\u65E5';\n\t    t['\\u33E8'] = '\\u0039\\u65E5';\n\t    t['\\u33E9'] = '\\u0031\\u0030\\u65E5';\n\t    t['\\u33EA'] = '\\u0031\\u0031\\u65E5';\n\t    t['\\u33EB'] = '\\u0031\\u0032\\u65E5';\n\t    t['\\u33EC'] = '\\u0031\\u0033\\u65E5';\n\t    t['\\u33ED'] = '\\u0031\\u0034\\u65E5';\n\t    t['\\u33EE'] = '\\u0031\\u0035\\u65E5';\n\t    t['\\u33EF'] = '\\u0031\\u0036\\u65E5';\n\t    t['\\u33F0'] = '\\u0031\\u0037\\u65E5';\n\t    t['\\u33F1'] = '\\u0031\\u0038\\u65E5';\n\t    t['\\u33F2'] = '\\u0031\\u0039\\u65E5';\n\t    t['\\u33F3'] = '\\u0032\\u0030\\u65E5';\n\t    t['\\u33F4'] = '\\u0032\\u0031\\u65E5';\n\t    t['\\u33F5'] = '\\u0032\\u0032\\u65E5';\n\t    t['\\u33F6'] = '\\u0032\\u0033\\u65E5';\n\t    t['\\u33F7'] = '\\u0032\\u0034\\u65E5';\n\t    t['\\u33F8'] = '\\u0032\\u0035\\u65E5';\n\t    t['\\u33F9'] = '\\u0032\\u0036\\u65E5';\n\t    t['\\u33FA'] = '\\u0032\\u0037\\u65E5';\n\t    t['\\u33FB'] = '\\u0032\\u0038\\u65E5';\n\t    t['\\u33FC'] = '\\u0032\\u0039\\u65E5';\n\t    t['\\u33FD'] = '\\u0033\\u0030\\u65E5';\n\t    t['\\u33FE'] = '\\u0033\\u0031\\u65E5';\n\t    t['\\uFB00'] = '\\u0066\\u0066';\n\t    t['\\uFB01'] = '\\u0066\\u0069';\n\t    t['\\uFB02'] = '\\u0066\\u006C';\n\t    t['\\uFB03'] = '\\u0066\\u0066\\u0069';\n\t    t['\\uFB04'] = '\\u0066\\u0066\\u006C';\n\t    t['\\uFB05'] = '\\u017F\\u0074';\n\t    t['\\uFB06'] = '\\u0073\\u0074';\n\t    t['\\uFB13'] = '\\u0574\\u0576';\n\t    t['\\uFB14'] = '\\u0574\\u0565';\n\t    t['\\uFB15'] = '\\u0574\\u056B';\n\t    t['\\uFB16'] = '\\u057E\\u0576';\n\t    t['\\uFB17'] = '\\u0574\\u056D';\n\t    t['\\uFB4F'] = '\\u05D0\\u05DC';\n\t    t['\\uFB50'] = '\\u0671';\n\t    t['\\uFB51'] = '\\u0671';\n\t    t['\\uFB52'] = '\\u067B';\n\t    t['\\uFB53'] = '\\u067B';\n\t    t['\\uFB54'] = '\\u067B';\n\t    t['\\uFB55'] = '\\u067B';\n\t    t['\\uFB56'] = '\\u067E';\n\t    t['\\uFB57'] = '\\u067E';\n\t    t['\\uFB58'] = '\\u067E';\n\t    t['\\uFB59'] = '\\u067E';\n\t    t['\\uFB5A'] = '\\u0680';\n\t    t['\\uFB5B'] = '\\u0680';\n\t    t['\\uFB5C'] = '\\u0680';\n\t    t['\\uFB5D'] = '\\u0680';\n\t    t['\\uFB5E'] = '\\u067A';\n\t    t['\\uFB5F'] = '\\u067A';\n\t    t['\\uFB60'] = '\\u067A';\n\t    t['\\uFB61'] = '\\u067A';\n\t    t['\\uFB62'] = '\\u067F';\n\t    t['\\uFB63'] = '\\u067F';\n\t    t['\\uFB64'] = '\\u067F';\n\t    t['\\uFB65'] = '\\u067F';\n\t    t['\\uFB66'] = '\\u0679';\n\t    t['\\uFB67'] = '\\u0679';\n\t    t['\\uFB68'] = '\\u0679';\n\t    t['\\uFB69'] = '\\u0679';\n\t    t['\\uFB6A'] = '\\u06A4';\n\t    t['\\uFB6B'] = '\\u06A4';\n\t    t['\\uFB6C'] = '\\u06A4';\n\t    t['\\uFB6D'] = '\\u06A4';\n\t    t['\\uFB6E'] = '\\u06A6';\n\t    t['\\uFB6F'] = '\\u06A6';\n\t    t['\\uFB70'] = '\\u06A6';\n\t    t['\\uFB71'] = '\\u06A6';\n\t    t['\\uFB72'] = '\\u0684';\n\t    t['\\uFB73'] = '\\u0684';\n\t    t['\\uFB74'] = '\\u0684';\n\t    t['\\uFB75'] = '\\u0684';\n\t    t['\\uFB76'] = '\\u0683';\n\t    t['\\uFB77'] = '\\u0683';\n\t    t['\\uFB78'] = '\\u0683';\n\t    t['\\uFB79'] = '\\u0683';\n\t    t['\\uFB7A'] = '\\u0686';\n\t    t['\\uFB7B'] = '\\u0686';\n\t    t['\\uFB7C'] = '\\u0686';\n\t    t['\\uFB7D'] = '\\u0686';\n\t    t['\\uFB7E'] = '\\u0687';\n\t    t['\\uFB7F'] = '\\u0687';\n\t    t['\\uFB80'] = '\\u0687';\n\t    t['\\uFB81'] = '\\u0687';\n\t    t['\\uFB82'] = '\\u068D';\n\t    t['\\uFB83'] = '\\u068D';\n\t    t['\\uFB84'] = '\\u068C';\n\t    t['\\uFB85'] = '\\u068C';\n\t    t['\\uFB86'] = '\\u068E';\n\t    t['\\uFB87'] = '\\u068E';\n\t    t['\\uFB88'] = '\\u0688';\n\t    t['\\uFB89'] = '\\u0688';\n\t    t['\\uFB8A'] = '\\u0698';\n\t    t['\\uFB8B'] = '\\u0698';\n\t    t['\\uFB8C'] = '\\u0691';\n\t    t['\\uFB8D'] = '\\u0691';\n\t    t['\\uFB8E'] = '\\u06A9';\n\t    t['\\uFB8F'] = '\\u06A9';\n\t    t['\\uFB90'] = '\\u06A9';\n\t    t['\\uFB91'] = '\\u06A9';\n\t    t['\\uFB92'] = '\\u06AF';\n\t    t['\\uFB93'] = '\\u06AF';\n\t    t['\\uFB94'] = '\\u06AF';\n\t    t['\\uFB95'] = '\\u06AF';\n\t    t['\\uFB96'] = '\\u06B3';\n\t    t['\\uFB97'] = '\\u06B3';\n\t    t['\\uFB98'] = '\\u06B3';\n\t    t['\\uFB99'] = '\\u06B3';\n\t    t['\\uFB9A'] = '\\u06B1';\n\t    t['\\uFB9B'] = '\\u06B1';\n\t    t['\\uFB9C'] = '\\u06B1';\n\t    t['\\uFB9D'] = '\\u06B1';\n\t    t['\\uFB9E'] = '\\u06BA';\n\t    t['\\uFB9F'] = '\\u06BA';\n\t    t['\\uFBA0'] = '\\u06BB';\n\t    t['\\uFBA1'] = '\\u06BB';\n\t    t['\\uFBA2'] = '\\u06BB';\n\t    t['\\uFBA3'] = '\\u06BB';\n\t    t['\\uFBA4'] = '\\u06C0';\n\t    t['\\uFBA5'] = '\\u06C0';\n\t    t['\\uFBA6'] = '\\u06C1';\n\t    t['\\uFBA7'] = '\\u06C1';\n\t    t['\\uFBA8'] = '\\u06C1';\n\t    t['\\uFBA9'] = '\\u06C1';\n\t    t['\\uFBAA'] = '\\u06BE';\n\t    t['\\uFBAB'] = '\\u06BE';\n\t    t['\\uFBAC'] = '\\u06BE';\n\t    t['\\uFBAD'] = '\\u06BE';\n\t    t['\\uFBAE'] = '\\u06D2';\n\t    t['\\uFBAF'] = '\\u06D2';\n\t    t['\\uFBB0'] = '\\u06D3';\n\t    t['\\uFBB1'] = '\\u06D3';\n\t    t['\\uFBD3'] = '\\u06AD';\n\t    t['\\uFBD4'] = '\\u06AD';\n\t    t['\\uFBD5'] = '\\u06AD';\n\t    t['\\uFBD6'] = '\\u06AD';\n\t    t['\\uFBD7'] = '\\u06C7';\n\t    t['\\uFBD8'] = '\\u06C7';\n\t    t['\\uFBD9'] = '\\u06C6';\n\t    t['\\uFBDA'] = '\\u06C6';\n\t    t['\\uFBDB'] = '\\u06C8';\n\t    t['\\uFBDC'] = '\\u06C8';\n\t    t['\\uFBDD'] = '\\u0677';\n\t    t['\\uFBDE'] = '\\u06CB';\n\t    t['\\uFBDF'] = '\\u06CB';\n\t    t['\\uFBE0'] = '\\u06C5';\n\t    t['\\uFBE1'] = '\\u06C5';\n\t    t['\\uFBE2'] = '\\u06C9';\n\t    t['\\uFBE3'] = '\\u06C9';\n\t    t['\\uFBE4'] = '\\u06D0';\n\t    t['\\uFBE5'] = '\\u06D0';\n\t    t['\\uFBE6'] = '\\u06D0';\n\t    t['\\uFBE7'] = '\\u06D0';\n\t    t['\\uFBE8'] = '\\u0649';\n\t    t['\\uFBE9'] = '\\u0649';\n\t    t['\\uFBEA'] = '\\u0626\\u0627';\n\t    t['\\uFBEB'] = '\\u0626\\u0627';\n\t    t['\\uFBEC'] = '\\u0626\\u06D5';\n\t    t['\\uFBED'] = '\\u0626\\u06D5';\n\t    t['\\uFBEE'] = '\\u0626\\u0648';\n\t    t['\\uFBEF'] = '\\u0626\\u0648';\n\t    t['\\uFBF0'] = '\\u0626\\u06C7';\n\t    t['\\uFBF1'] = '\\u0626\\u06C7';\n\t    t['\\uFBF2'] = '\\u0626\\u06C6';\n\t    t['\\uFBF3'] = '\\u0626\\u06C6';\n\t    t['\\uFBF4'] = '\\u0626\\u06C8';\n\t    t['\\uFBF5'] = '\\u0626\\u06C8';\n\t    t['\\uFBF6'] = '\\u0626\\u06D0';\n\t    t['\\uFBF7'] = '\\u0626\\u06D0';\n\t    t['\\uFBF8'] = '\\u0626\\u06D0';\n\t    t['\\uFBF9'] = '\\u0626\\u0649';\n\t    t['\\uFBFA'] = '\\u0626\\u0649';\n\t    t['\\uFBFB'] = '\\u0626\\u0649';\n\t    t['\\uFBFC'] = '\\u06CC';\n\t    t['\\uFBFD'] = '\\u06CC';\n\t    t['\\uFBFE'] = '\\u06CC';\n\t    t['\\uFBFF'] = '\\u06CC';\n\t    t['\\uFC00'] = '\\u0626\\u062C';\n\t    t['\\uFC01'] = '\\u0626\\u062D';\n\t    t['\\uFC02'] = '\\u0626\\u0645';\n\t    t['\\uFC03'] = '\\u0626\\u0649';\n\t    t['\\uFC04'] = '\\u0626\\u064A';\n\t    t['\\uFC05'] = '\\u0628\\u062C';\n\t    t['\\uFC06'] = '\\u0628\\u062D';\n\t    t['\\uFC07'] = '\\u0628\\u062E';\n\t    t['\\uFC08'] = '\\u0628\\u0645';\n\t    t['\\uFC09'] = '\\u0628\\u0649';\n\t    t['\\uFC0A'] = '\\u0628\\u064A';\n\t    t['\\uFC0B'] = '\\u062A\\u062C';\n\t    t['\\uFC0C'] = '\\u062A\\u062D';\n\t    t['\\uFC0D'] = '\\u062A\\u062E';\n\t    t['\\uFC0E'] = '\\u062A\\u0645';\n\t    t['\\uFC0F'] = '\\u062A\\u0649';\n\t    t['\\uFC10'] = '\\u062A\\u064A';\n\t    t['\\uFC11'] = '\\u062B\\u062C';\n\t    t['\\uFC12'] = '\\u062B\\u0645';\n\t    t['\\uFC13'] = '\\u062B\\u0649';\n\t    t['\\uFC14'] = '\\u062B\\u064A';\n\t    t['\\uFC15'] = '\\u062C\\u062D';\n\t    t['\\uFC16'] = '\\u062C\\u0645';\n\t    t['\\uFC17'] = '\\u062D\\u062C';\n\t    t['\\uFC18'] = '\\u062D\\u0645';\n\t    t['\\uFC19'] = '\\u062E\\u062C';\n\t    t['\\uFC1A'] = '\\u062E\\u062D';\n\t    t['\\uFC1B'] = '\\u062E\\u0645';\n\t    t['\\uFC1C'] = '\\u0633\\u062C';\n\t    t['\\uFC1D'] = '\\u0633\\u062D';\n\t    t['\\uFC1E'] = '\\u0633\\u062E';\n\t    t['\\uFC1F'] = '\\u0633\\u0645';\n\t    t['\\uFC20'] = '\\u0635\\u062D';\n\t    t['\\uFC21'] = '\\u0635\\u0645';\n\t    t['\\uFC22'] = '\\u0636\\u062C';\n\t    t['\\uFC23'] = '\\u0636\\u062D';\n\t    t['\\uFC24'] = '\\u0636\\u062E';\n\t    t['\\uFC25'] = '\\u0636\\u0645';\n\t    t['\\uFC26'] = '\\u0637\\u062D';\n\t    t['\\uFC27'] = '\\u0637\\u0645';\n\t    t['\\uFC28'] = '\\u0638\\u0645';\n\t    t['\\uFC29'] = '\\u0639\\u062C';\n\t    t['\\uFC2A'] = '\\u0639\\u0645';\n\t    t['\\uFC2B'] = '\\u063A\\u062C';\n\t    t['\\uFC2C'] = '\\u063A\\u0645';\n\t    t['\\uFC2D'] = '\\u0641\\u062C';\n\t    t['\\uFC2E'] = '\\u0641\\u062D';\n\t    t['\\uFC2F'] = '\\u0641\\u062E';\n\t    t['\\uFC30'] = '\\u0641\\u0645';\n\t    t['\\uFC31'] = '\\u0641\\u0649';\n\t    t['\\uFC32'] = '\\u0641\\u064A';\n\t    t['\\uFC33'] = '\\u0642\\u062D';\n\t    t['\\uFC34'] = '\\u0642\\u0645';\n\t    t['\\uFC35'] = '\\u0642\\u0649';\n\t    t['\\uFC36'] = '\\u0642\\u064A';\n\t    t['\\uFC37'] = '\\u0643\\u0627';\n\t    t['\\uFC38'] = '\\u0643\\u062C';\n\t    t['\\uFC39'] = '\\u0643\\u062D';\n\t    t['\\uFC3A'] = '\\u0643\\u062E';\n\t    t['\\uFC3B'] = '\\u0643\\u0644';\n\t    t['\\uFC3C'] = '\\u0643\\u0645';\n\t    t['\\uFC3D'] = '\\u0643\\u0649';\n\t    t['\\uFC3E'] = '\\u0643\\u064A';\n\t    t['\\uFC3F'] = '\\u0644\\u062C';\n\t    t['\\uFC40'] = '\\u0644\\u062D';\n\t    t['\\uFC41'] = '\\u0644\\u062E';\n\t    t['\\uFC42'] = '\\u0644\\u0645';\n\t    t['\\uFC43'] = '\\u0644\\u0649';\n\t    t['\\uFC44'] = '\\u0644\\u064A';\n\t    t['\\uFC45'] = '\\u0645\\u062C';\n\t    t['\\uFC46'] = '\\u0645\\u062D';\n\t    t['\\uFC47'] = '\\u0645\\u062E';\n\t    t['\\uFC48'] = '\\u0645\\u0645';\n\t    t['\\uFC49'] = '\\u0645\\u0649';\n\t    t['\\uFC4A'] = '\\u0645\\u064A';\n\t    t['\\uFC4B'] = '\\u0646\\u062C';\n\t    t['\\uFC4C'] = '\\u0646\\u062D';\n\t    t['\\uFC4D'] = '\\u0646\\u062E';\n\t    t['\\uFC4E'] = '\\u0646\\u0645';\n\t    t['\\uFC4F'] = '\\u0646\\u0649';\n\t    t['\\uFC50'] = '\\u0646\\u064A';\n\t    t['\\uFC51'] = '\\u0647\\u062C';\n\t    t['\\uFC52'] = '\\u0647\\u0645';\n\t    t['\\uFC53'] = '\\u0647\\u0649';\n\t    t['\\uFC54'] = '\\u0647\\u064A';\n\t    t['\\uFC55'] = '\\u064A\\u062C';\n\t    t['\\uFC56'] = '\\u064A\\u062D';\n\t    t['\\uFC57'] = '\\u064A\\u062E';\n\t    t['\\uFC58'] = '\\u064A\\u0645';\n\t    t['\\uFC59'] = '\\u064A\\u0649';\n\t    t['\\uFC5A'] = '\\u064A\\u064A';\n\t    t['\\uFC5B'] = '\\u0630\\u0670';\n\t    t['\\uFC5C'] = '\\u0631\\u0670';\n\t    t['\\uFC5D'] = '\\u0649\\u0670';\n\t    t['\\uFC5E'] = '\\u0020\\u064C\\u0651';\n\t    t['\\uFC5F'] = '\\u0020\\u064D\\u0651';\n\t    t['\\uFC60'] = '\\u0020\\u064E\\u0651';\n\t    t['\\uFC61'] = '\\u0020\\u064F\\u0651';\n\t    t['\\uFC62'] = '\\u0020\\u0650\\u0651';\n\t    t['\\uFC63'] = '\\u0020\\u0651\\u0670';\n\t    t['\\uFC64'] = '\\u0626\\u0631';\n\t    t['\\uFC65'] = '\\u0626\\u0632';\n\t    t['\\uFC66'] = '\\u0626\\u0645';\n\t    t['\\uFC67'] = '\\u0626\\u0646';\n\t    t['\\uFC68'] = '\\u0626\\u0649';\n\t    t['\\uFC69'] = '\\u0626\\u064A';\n\t    t['\\uFC6A'] = '\\u0628\\u0631';\n\t    t['\\uFC6B'] = '\\u0628\\u0632';\n\t    t['\\uFC6C'] = '\\u0628\\u0645';\n\t    t['\\uFC6D'] = '\\u0628\\u0646';\n\t    t['\\uFC6E'] = '\\u0628\\u0649';\n\t    t['\\uFC6F'] = '\\u0628\\u064A';\n\t    t['\\uFC70'] = '\\u062A\\u0631';\n\t    t['\\uFC71'] = '\\u062A\\u0632';\n\t    t['\\uFC72'] = '\\u062A\\u0645';\n\t    t['\\uFC73'] = '\\u062A\\u0646';\n\t    t['\\uFC74'] = '\\u062A\\u0649';\n\t    t['\\uFC75'] = '\\u062A\\u064A';\n\t    t['\\uFC76'] = '\\u062B\\u0631';\n\t    t['\\uFC77'] = '\\u062B\\u0632';\n\t    t['\\uFC78'] = '\\u062B\\u0645';\n\t    t['\\uFC79'] = '\\u062B\\u0646';\n\t    t['\\uFC7A'] = '\\u062B\\u0649';\n\t    t['\\uFC7B'] = '\\u062B\\u064A';\n\t    t['\\uFC7C'] = '\\u0641\\u0649';\n\t    t['\\uFC7D'] = '\\u0641\\u064A';\n\t    t['\\uFC7E'] = '\\u0642\\u0649';\n\t    t['\\uFC7F'] = '\\u0642\\u064A';\n\t    t['\\uFC80'] = '\\u0643\\u0627';\n\t    t['\\uFC81'] = '\\u0643\\u0644';\n\t    t['\\uFC82'] = '\\u0643\\u0645';\n\t    t['\\uFC83'] = '\\u0643\\u0649';\n\t    t['\\uFC84'] = '\\u0643\\u064A';\n\t    t['\\uFC85'] = '\\u0644\\u0645';\n\t    t['\\uFC86'] = '\\u0644\\u0649';\n\t    t['\\uFC87'] = '\\u0644\\u064A';\n\t    t['\\uFC88'] = '\\u0645\\u0627';\n\t    t['\\uFC89'] = '\\u0645\\u0645';\n\t    t['\\uFC8A'] = '\\u0646\\u0631';\n\t    t['\\uFC8B'] = '\\u0646\\u0632';\n\t    t['\\uFC8C'] = '\\u0646\\u0645';\n\t    t['\\uFC8D'] = '\\u0646\\u0646';\n\t    t['\\uFC8E'] = '\\u0646\\u0649';\n\t    t['\\uFC8F'] = '\\u0646\\u064A';\n\t    t['\\uFC90'] = '\\u0649\\u0670';\n\t    t['\\uFC91'] = '\\u064A\\u0631';\n\t    t['\\uFC92'] = '\\u064A\\u0632';\n\t    t['\\uFC93'] = '\\u064A\\u0645';\n\t    t['\\uFC94'] = '\\u064A\\u0646';\n\t    t['\\uFC95'] = '\\u064A\\u0649';\n\t    t['\\uFC96'] = '\\u064A\\u064A';\n\t    t['\\uFC97'] = '\\u0626\\u062C';\n\t    t['\\uFC98'] = '\\u0626\\u062D';\n\t    t['\\uFC99'] = '\\u0626\\u062E';\n\t    t['\\uFC9A'] = '\\u0626\\u0645';\n\t    t['\\uFC9B'] = '\\u0626\\u0647';\n\t    t['\\uFC9C'] = '\\u0628\\u062C';\n\t    t['\\uFC9D'] = '\\u0628\\u062D';\n\t    t['\\uFC9E'] = '\\u0628\\u062E';\n\t    t['\\uFC9F'] = '\\u0628\\u0645';\n\t    t['\\uFCA0'] = '\\u0628\\u0647';\n\t    t['\\uFCA1'] = '\\u062A\\u062C';\n\t    t['\\uFCA2'] = '\\u062A\\u062D';\n\t    t['\\uFCA3'] = '\\u062A\\u062E';\n\t    t['\\uFCA4'] = '\\u062A\\u0645';\n\t    t['\\uFCA5'] = '\\u062A\\u0647';\n\t    t['\\uFCA6'] = '\\u062B\\u0645';\n\t    t['\\uFCA7'] = '\\u062C\\u062D';\n\t    t['\\uFCA8'] = '\\u062C\\u0645';\n\t    t['\\uFCA9'] = '\\u062D\\u062C';\n\t    t['\\uFCAA'] = '\\u062D\\u0645';\n\t    t['\\uFCAB'] = '\\u062E\\u062C';\n\t    t['\\uFCAC'] = '\\u062E\\u0645';\n\t    t['\\uFCAD'] = '\\u0633\\u062C';\n\t    t['\\uFCAE'] = '\\u0633\\u062D';\n\t    t['\\uFCAF'] = '\\u0633\\u062E';\n\t    t['\\uFCB0'] = '\\u0633\\u0645';\n\t    t['\\uFCB1'] = '\\u0635\\u062D';\n\t    t['\\uFCB2'] = '\\u0635\\u062E';\n\t    t['\\uFCB3'] = '\\u0635\\u0645';\n\t    t['\\uFCB4'] = '\\u0636\\u062C';\n\t    t['\\uFCB5'] = '\\u0636\\u062D';\n\t    t['\\uFCB6'] = '\\u0636\\u062E';\n\t    t['\\uFCB7'] = '\\u0636\\u0645';\n\t    t['\\uFCB8'] = '\\u0637\\u062D';\n\t    t['\\uFCB9'] = '\\u0638\\u0645';\n\t    t['\\uFCBA'] = '\\u0639\\u062C';\n\t    t['\\uFCBB'] = '\\u0639\\u0645';\n\t    t['\\uFCBC'] = '\\u063A\\u062C';\n\t    t['\\uFCBD'] = '\\u063A\\u0645';\n\t    t['\\uFCBE'] = '\\u0641\\u062C';\n\t    t['\\uFCBF'] = '\\u0641\\u062D';\n\t    t['\\uFCC0'] = '\\u0641\\u062E';\n\t    t['\\uFCC1'] = '\\u0641\\u0645';\n\t    t['\\uFCC2'] = '\\u0642\\u062D';\n\t    t['\\uFCC3'] = '\\u0642\\u0645';\n\t    t['\\uFCC4'] = '\\u0643\\u062C';\n\t    t['\\uFCC5'] = '\\u0643\\u062D';\n\t    t['\\uFCC6'] = '\\u0643\\u062E';\n\t    t['\\uFCC7'] = '\\u0643\\u0644';\n\t    t['\\uFCC8'] = '\\u0643\\u0645';\n\t    t['\\uFCC9'] = '\\u0644\\u062C';\n\t    t['\\uFCCA'] = '\\u0644\\u062D';\n\t    t['\\uFCCB'] = '\\u0644\\u062E';\n\t    t['\\uFCCC'] = '\\u0644\\u0645';\n\t    t['\\uFCCD'] = '\\u0644\\u0647';\n\t    t['\\uFCCE'] = '\\u0645\\u062C';\n\t    t['\\uFCCF'] = '\\u0645\\u062D';\n\t    t['\\uFCD0'] = '\\u0645\\u062E';\n\t    t['\\uFCD1'] = '\\u0645\\u0645';\n\t    t['\\uFCD2'] = '\\u0646\\u062C';\n\t    t['\\uFCD3'] = '\\u0646\\u062D';\n\t    t['\\uFCD4'] = '\\u0646\\u062E';\n\t    t['\\uFCD5'] = '\\u0646\\u0645';\n\t    t['\\uFCD6'] = '\\u0646\\u0647';\n\t    t['\\uFCD7'] = '\\u0647\\u062C';\n\t    t['\\uFCD8'] = '\\u0647\\u0645';\n\t    t['\\uFCD9'] = '\\u0647\\u0670';\n\t    t['\\uFCDA'] = '\\u064A\\u062C';\n\t    t['\\uFCDB'] = '\\u064A\\u062D';\n\t    t['\\uFCDC'] = '\\u064A\\u062E';\n\t    t['\\uFCDD'] = '\\u064A\\u0645';\n\t    t['\\uFCDE'] = '\\u064A\\u0647';\n\t    t['\\uFCDF'] = '\\u0626\\u0645';\n\t    t['\\uFCE0'] = '\\u0626\\u0647';\n\t    t['\\uFCE1'] = '\\u0628\\u0645';\n\t    t['\\uFCE2'] = '\\u0628\\u0647';\n\t    t['\\uFCE3'] = '\\u062A\\u0645';\n\t    t['\\uFCE4'] = '\\u062A\\u0647';\n\t    t['\\uFCE5'] = '\\u062B\\u0645';\n\t    t['\\uFCE6'] = '\\u062B\\u0647';\n\t    t['\\uFCE7'] = '\\u0633\\u0645';\n\t    t['\\uFCE8'] = '\\u0633\\u0647';\n\t    t['\\uFCE9'] = '\\u0634\\u0645';\n\t    t['\\uFCEA'] = '\\u0634\\u0647';\n\t    t['\\uFCEB'] = '\\u0643\\u0644';\n\t    t['\\uFCEC'] = '\\u0643\\u0645';\n\t    t['\\uFCED'] = '\\u0644\\u0645';\n\t    t['\\uFCEE'] = '\\u0646\\u0645';\n\t    t['\\uFCEF'] = '\\u0646\\u0647';\n\t    t['\\uFCF0'] = '\\u064A\\u0645';\n\t    t['\\uFCF1'] = '\\u064A\\u0647';\n\t    t['\\uFCF2'] = '\\u0640\\u064E\\u0651';\n\t    t['\\uFCF3'] = '\\u0640\\u064F\\u0651';\n\t    t['\\uFCF4'] = '\\u0640\\u0650\\u0651';\n\t    t['\\uFCF5'] = '\\u0637\\u0649';\n\t    t['\\uFCF6'] = '\\u0637\\u064A';\n\t    t['\\uFCF7'] = '\\u0639\\u0649';\n\t    t['\\uFCF8'] = '\\u0639\\u064A';\n\t    t['\\uFCF9'] = '\\u063A\\u0649';\n\t    t['\\uFCFA'] = '\\u063A\\u064A';\n\t    t['\\uFCFB'] = '\\u0633\\u0649';\n\t    t['\\uFCFC'] = '\\u0633\\u064A';\n\t    t['\\uFCFD'] = '\\u0634\\u0649';\n\t    t['\\uFCFE'] = '\\u0634\\u064A';\n\t    t['\\uFCFF'] = '\\u062D\\u0649';\n\t    t['\\uFD00'] = '\\u062D\\u064A';\n\t    t['\\uFD01'] = '\\u062C\\u0649';\n\t    t['\\uFD02'] = '\\u062C\\u064A';\n\t    t['\\uFD03'] = '\\u062E\\u0649';\n\t    t['\\uFD04'] = '\\u062E\\u064A';\n\t    t['\\uFD05'] = '\\u0635\\u0649';\n\t    t['\\uFD06'] = '\\u0635\\u064A';\n\t    t['\\uFD07'] = '\\u0636\\u0649';\n\t    t['\\uFD08'] = '\\u0636\\u064A';\n\t    t['\\uFD09'] = '\\u0634\\u062C';\n\t    t['\\uFD0A'] = '\\u0634\\u062D';\n\t    t['\\uFD0B'] = '\\u0634\\u062E';\n\t    t['\\uFD0C'] = '\\u0634\\u0645';\n\t    t['\\uFD0D'] = '\\u0634\\u0631';\n\t    t['\\uFD0E'] = '\\u0633\\u0631';\n\t    t['\\uFD0F'] = '\\u0635\\u0631';\n\t    t['\\uFD10'] = '\\u0636\\u0631';\n\t    t['\\uFD11'] = '\\u0637\\u0649';\n\t    t['\\uFD12'] = '\\u0637\\u064A';\n\t    t['\\uFD13'] = '\\u0639\\u0649';\n\t    t['\\uFD14'] = '\\u0639\\u064A';\n\t    t['\\uFD15'] = '\\u063A\\u0649';\n\t    t['\\uFD16'] = '\\u063A\\u064A';\n\t    t['\\uFD17'] = '\\u0633\\u0649';\n\t    t['\\uFD18'] = '\\u0633\\u064A';\n\t    t['\\uFD19'] = '\\u0634\\u0649';\n\t    t['\\uFD1A'] = '\\u0634\\u064A';\n\t    t['\\uFD1B'] = '\\u062D\\u0649';\n\t    t['\\uFD1C'] = '\\u062D\\u064A';\n\t    t['\\uFD1D'] = '\\u062C\\u0649';\n\t    t['\\uFD1E'] = '\\u062C\\u064A';\n\t    t['\\uFD1F'] = '\\u062E\\u0649';\n\t    t['\\uFD20'] = '\\u062E\\u064A';\n\t    t['\\uFD21'] = '\\u0635\\u0649';\n\t    t['\\uFD22'] = '\\u0635\\u064A';\n\t    t['\\uFD23'] = '\\u0636\\u0649';\n\t    t['\\uFD24'] = '\\u0636\\u064A';\n\t    t['\\uFD25'] = '\\u0634\\u062C';\n\t    t['\\uFD26'] = '\\u0634\\u062D';\n\t    t['\\uFD27'] = '\\u0634\\u062E';\n\t    t['\\uFD28'] = '\\u0634\\u0645';\n\t    t['\\uFD29'] = '\\u0634\\u0631';\n\t    t['\\uFD2A'] = '\\u0633\\u0631';\n\t    t['\\uFD2B'] = '\\u0635\\u0631';\n\t    t['\\uFD2C'] = '\\u0636\\u0631';\n\t    t['\\uFD2D'] = '\\u0634\\u062C';\n\t    t['\\uFD2E'] = '\\u0634\\u062D';\n\t    t['\\uFD2F'] = '\\u0634\\u062E';\n\t    t['\\uFD30'] = '\\u0634\\u0645';\n\t    t['\\uFD31'] = '\\u0633\\u0647';\n\t    t['\\uFD32'] = '\\u0634\\u0647';\n\t    t['\\uFD33'] = '\\u0637\\u0645';\n\t    t['\\uFD34'] = '\\u0633\\u062C';\n\t    t['\\uFD35'] = '\\u0633\\u062D';\n\t    t['\\uFD36'] = '\\u0633\\u062E';\n\t    t['\\uFD37'] = '\\u0634\\u062C';\n\t    t['\\uFD38'] = '\\u0634\\u062D';\n\t    t['\\uFD39'] = '\\u0634\\u062E';\n\t    t['\\uFD3A'] = '\\u0637\\u0645';\n\t    t['\\uFD3B'] = '\\u0638\\u0645';\n\t    t['\\uFD3C'] = '\\u0627\\u064B';\n\t    t['\\uFD3D'] = '\\u0627\\u064B';\n\t    t['\\uFD50'] = '\\u062A\\u062C\\u0645';\n\t    t['\\uFD51'] = '\\u062A\\u062D\\u062C';\n\t    t['\\uFD52'] = '\\u062A\\u062D\\u062C';\n\t    t['\\uFD53'] = '\\u062A\\u062D\\u0645';\n\t    t['\\uFD54'] = '\\u062A\\u062E\\u0645';\n\t    t['\\uFD55'] = '\\u062A\\u0645\\u062C';\n\t    t['\\uFD56'] = '\\u062A\\u0645\\u062D';\n\t    t['\\uFD57'] = '\\u062A\\u0645\\u062E';\n\t    t['\\uFD58'] = '\\u062C\\u0645\\u062D';\n\t    t['\\uFD59'] = '\\u062C\\u0645\\u062D';\n\t    t['\\uFD5A'] = '\\u062D\\u0645\\u064A';\n\t    t['\\uFD5B'] = '\\u062D\\u0645\\u0649';\n\t    t['\\uFD5C'] = '\\u0633\\u062D\\u062C';\n\t    t['\\uFD5D'] = '\\u0633\\u062C\\u062D';\n\t    t['\\uFD5E'] = '\\u0633\\u062C\\u0649';\n\t    t['\\uFD5F'] = '\\u0633\\u0645\\u062D';\n\t    t['\\uFD60'] = '\\u0633\\u0645\\u062D';\n\t    t['\\uFD61'] = '\\u0633\\u0645\\u062C';\n\t    t['\\uFD62'] = '\\u0633\\u0645\\u0645';\n\t    t['\\uFD63'] = '\\u0633\\u0645\\u0645';\n\t    t['\\uFD64'] = '\\u0635\\u062D\\u062D';\n\t    t['\\uFD65'] = '\\u0635\\u062D\\u062D';\n\t    t['\\uFD66'] = '\\u0635\\u0645\\u0645';\n\t    t['\\uFD67'] = '\\u0634\\u062D\\u0645';\n\t    t['\\uFD68'] = '\\u0634\\u062D\\u0645';\n\t    t['\\uFD69'] = '\\u0634\\u062C\\u064A';\n\t    t['\\uFD6A'] = '\\u0634\\u0645\\u062E';\n\t    t['\\uFD6B'] = '\\u0634\\u0645\\u062E';\n\t    t['\\uFD6C'] = '\\u0634\\u0645\\u0645';\n\t    t['\\uFD6D'] = '\\u0634\\u0645\\u0645';\n\t    t['\\uFD6E'] = '\\u0636\\u062D\\u0649';\n\t    t['\\uFD6F'] = '\\u0636\\u062E\\u0645';\n\t    t['\\uFD70'] = '\\u0636\\u062E\\u0645';\n\t    t['\\uFD71'] = '\\u0637\\u0645\\u062D';\n\t    t['\\uFD72'] = '\\u0637\\u0645\\u062D';\n\t    t['\\uFD73'] = '\\u0637\\u0645\\u0645';\n\t    t['\\uFD74'] = '\\u0637\\u0645\\u064A';\n\t    t['\\uFD75'] = '\\u0639\\u062C\\u0645';\n\t    t['\\uFD76'] = '\\u0639\\u0645\\u0645';\n\t    t['\\uFD77'] = '\\u0639\\u0645\\u0645';\n\t    t['\\uFD78'] = '\\u0639\\u0645\\u0649';\n\t    t['\\uFD79'] = '\\u063A\\u0645\\u0645';\n\t    t['\\uFD7A'] = '\\u063A\\u0645\\u064A';\n\t    t['\\uFD7B'] = '\\u063A\\u0645\\u0649';\n\t    t['\\uFD7C'] = '\\u0641\\u062E\\u0645';\n\t    t['\\uFD7D'] = '\\u0641\\u062E\\u0645';\n\t    t['\\uFD7E'] = '\\u0642\\u0645\\u062D';\n\t    t['\\uFD7F'] = '\\u0642\\u0645\\u0645';\n\t    t['\\uFD80'] = '\\u0644\\u062D\\u0645';\n\t    t['\\uFD81'] = '\\u0644\\u062D\\u064A';\n\t    t['\\uFD82'] = '\\u0644\\u062D\\u0649';\n\t    t['\\uFD83'] = '\\u0644\\u062C\\u062C';\n\t    t['\\uFD84'] = '\\u0644\\u062C\\u062C';\n\t    t['\\uFD85'] = '\\u0644\\u062E\\u0645';\n\t    t['\\uFD86'] = '\\u0644\\u062E\\u0645';\n\t    t['\\uFD87'] = '\\u0644\\u0645\\u062D';\n\t    t['\\uFD88'] = '\\u0644\\u0645\\u062D';\n\t    t['\\uFD89'] = '\\u0645\\u062D\\u062C';\n\t    t['\\uFD8A'] = '\\u0645\\u062D\\u0645';\n\t    t['\\uFD8B'] = '\\u0645\\u062D\\u064A';\n\t    t['\\uFD8C'] = '\\u0645\\u062C\\u062D';\n\t    t['\\uFD8D'] = '\\u0645\\u062C\\u0645';\n\t    t['\\uFD8E'] = '\\u0645\\u062E\\u062C';\n\t    t['\\uFD8F'] = '\\u0645\\u062E\\u0645';\n\t    t['\\uFD92'] = '\\u0645\\u062C\\u062E';\n\t    t['\\uFD93'] = '\\u0647\\u0645\\u062C';\n\t    t['\\uFD94'] = '\\u0647\\u0645\\u0645';\n\t    t['\\uFD95'] = '\\u0646\\u062D\\u0645';\n\t    t['\\uFD96'] = '\\u0646\\u062D\\u0649';\n\t    t['\\uFD97'] = '\\u0646\\u062C\\u0645';\n\t    t['\\uFD98'] = '\\u0646\\u062C\\u0645';\n\t    t['\\uFD99'] = '\\u0646\\u062C\\u0649';\n\t    t['\\uFD9A'] = '\\u0646\\u0645\\u064A';\n\t    t['\\uFD9B'] = '\\u0646\\u0645\\u0649';\n\t    t['\\uFD9C'] = '\\u064A\\u0645\\u0645';\n\t    t['\\uFD9D'] = '\\u064A\\u0645\\u0645';\n\t    t['\\uFD9E'] = '\\u0628\\u062E\\u064A';\n\t    t['\\uFD9F'] = '\\u062A\\u062C\\u064A';\n\t    t['\\uFDA0'] = '\\u062A\\u062C\\u0649';\n\t    t['\\uFDA1'] = '\\u062A\\u062E\\u064A';\n\t    t['\\uFDA2'] = '\\u062A\\u062E\\u0649';\n\t    t['\\uFDA3'] = '\\u062A\\u0645\\u064A';\n\t    t['\\uFDA4'] = '\\u062A\\u0645\\u0649';\n\t    t['\\uFDA5'] = '\\u062C\\u0645\\u064A';\n\t    t['\\uFDA6'] = '\\u062C\\u062D\\u0649';\n\t    t['\\uFDA7'] = '\\u062C\\u0645\\u0649';\n\t    t['\\uFDA8'] = '\\u0633\\u062E\\u0649';\n\t    t['\\uFDA9'] = '\\u0635\\u062D\\u064A';\n\t    t['\\uFDAA'] = '\\u0634\\u062D\\u064A';\n\t    t['\\uFDAB'] = '\\u0636\\u062D\\u064A';\n\t    t['\\uFDAC'] = '\\u0644\\u062C\\u064A';\n\t    t['\\uFDAD'] = '\\u0644\\u0645\\u064A';\n\t    t['\\uFDAE'] = '\\u064A\\u062D\\u064A';\n\t    t['\\uFDAF'] = '\\u064A\\u062C\\u064A';\n\t    t['\\uFDB0'] = '\\u064A\\u0645\\u064A';\n\t    t['\\uFDB1'] = '\\u0645\\u0645\\u064A';\n\t    t['\\uFDB2'] = '\\u0642\\u0645\\u064A';\n\t    t['\\uFDB3'] = '\\u0646\\u062D\\u064A';\n\t    t['\\uFDB4'] = '\\u0642\\u0645\\u062D';\n\t    t['\\uFDB5'] = '\\u0644\\u062D\\u0645';\n\t    t['\\uFDB6'] = '\\u0639\\u0645\\u064A';\n\t    t['\\uFDB7'] = '\\u0643\\u0645\\u064A';\n\t    t['\\uFDB8'] = '\\u0646\\u062C\\u062D';\n\t    t['\\uFDB9'] = '\\u0645\\u062E\\u064A';\n\t    t['\\uFDBA'] = '\\u0644\\u062C\\u0645';\n\t    t['\\uFDBB'] = '\\u0643\\u0645\\u0645';\n\t    t['\\uFDBC'] = '\\u0644\\u062C\\u0645';\n\t    t['\\uFDBD'] = '\\u0646\\u062C\\u062D';\n\t    t['\\uFDBE'] = '\\u062C\\u062D\\u064A';\n\t    t['\\uFDBF'] = '\\u062D\\u062C\\u064A';\n\t    t['\\uFDC0'] = '\\u0645\\u062C\\u064A';\n\t    t['\\uFDC1'] = '\\u0641\\u0645\\u064A';\n\t    t['\\uFDC2'] = '\\u0628\\u062D\\u064A';\n\t    t['\\uFDC3'] = '\\u0643\\u0645\\u0645';\n\t    t['\\uFDC4'] = '\\u0639\\u062C\\u0645';\n\t    t['\\uFDC5'] = '\\u0635\\u0645\\u0645';\n\t    t['\\uFDC6'] = '\\u0633\\u062E\\u064A';\n\t    t['\\uFDC7'] = '\\u0646\\u062C\\u064A';\n\t    t['\\uFE49'] = '\\u203E';\n\t    t['\\uFE4A'] = '\\u203E';\n\t    t['\\uFE4B'] = '\\u203E';\n\t    t['\\uFE4C'] = '\\u203E';\n\t    t['\\uFE4D'] = '\\u005F';\n\t    t['\\uFE4E'] = '\\u005F';\n\t    t['\\uFE4F'] = '\\u005F';\n\t    t['\\uFE80'] = '\\u0621';\n\t    t['\\uFE81'] = '\\u0622';\n\t    t['\\uFE82'] = '\\u0622';\n\t    t['\\uFE83'] = '\\u0623';\n\t    t['\\uFE84'] = '\\u0623';\n\t    t['\\uFE85'] = '\\u0624';\n\t    t['\\uFE86'] = '\\u0624';\n\t    t['\\uFE87'] = '\\u0625';\n\t    t['\\uFE88'] = '\\u0625';\n\t    t['\\uFE89'] = '\\u0626';\n\t    t['\\uFE8A'] = '\\u0626';\n\t    t['\\uFE8B'] = '\\u0626';\n\t    t['\\uFE8C'] = '\\u0626';\n\t    t['\\uFE8D'] = '\\u0627';\n\t    t['\\uFE8E'] = '\\u0627';\n\t    t['\\uFE8F'] = '\\u0628';\n\t    t['\\uFE90'] = '\\u0628';\n\t    t['\\uFE91'] = '\\u0628';\n\t    t['\\uFE92'] = '\\u0628';\n\t    t['\\uFE93'] = '\\u0629';\n\t    t['\\uFE94'] = '\\u0629';\n\t    t['\\uFE95'] = '\\u062A';\n\t    t['\\uFE96'] = '\\u062A';\n\t    t['\\uFE97'] = '\\u062A';\n\t    t['\\uFE98'] = '\\u062A';\n\t    t['\\uFE99'] = '\\u062B';\n\t    t['\\uFE9A'] = '\\u062B';\n\t    t['\\uFE9B'] = '\\u062B';\n\t    t['\\uFE9C'] = '\\u062B';\n\t    t['\\uFE9D'] = '\\u062C';\n\t    t['\\uFE9E'] = '\\u062C';\n\t    t['\\uFE9F'] = '\\u062C';\n\t    t['\\uFEA0'] = '\\u062C';\n\t    t['\\uFEA1'] = '\\u062D';\n\t    t['\\uFEA2'] = '\\u062D';\n\t    t['\\uFEA3'] = '\\u062D';\n\t    t['\\uFEA4'] = '\\u062D';\n\t    t['\\uFEA5'] = '\\u062E';\n\t    t['\\uFEA6'] = '\\u062E';\n\t    t['\\uFEA7'] = '\\u062E';\n\t    t['\\uFEA8'] = '\\u062E';\n\t    t['\\uFEA9'] = '\\u062F';\n\t    t['\\uFEAA'] = '\\u062F';\n\t    t['\\uFEAB'] = '\\u0630';\n\t    t['\\uFEAC'] = '\\u0630';\n\t    t['\\uFEAD'] = '\\u0631';\n\t    t['\\uFEAE'] = '\\u0631';\n\t    t['\\uFEAF'] = '\\u0632';\n\t    t['\\uFEB0'] = '\\u0632';\n\t    t['\\uFEB1'] = '\\u0633';\n\t    t['\\uFEB2'] = '\\u0633';\n\t    t['\\uFEB3'] = '\\u0633';\n\t    t['\\uFEB4'] = '\\u0633';\n\t    t['\\uFEB5'] = '\\u0634';\n\t    t['\\uFEB6'] = '\\u0634';\n\t    t['\\uFEB7'] = '\\u0634';\n\t    t['\\uFEB8'] = '\\u0634';\n\t    t['\\uFEB9'] = '\\u0635';\n\t    t['\\uFEBA'] = '\\u0635';\n\t    t['\\uFEBB'] = '\\u0635';\n\t    t['\\uFEBC'] = '\\u0635';\n\t    t['\\uFEBD'] = '\\u0636';\n\t    t['\\uFEBE'] = '\\u0636';\n\t    t['\\uFEBF'] = '\\u0636';\n\t    t['\\uFEC0'] = '\\u0636';\n\t    t['\\uFEC1'] = '\\u0637';\n\t    t['\\uFEC2'] = '\\u0637';\n\t    t['\\uFEC3'] = '\\u0637';\n\t    t['\\uFEC4'] = '\\u0637';\n\t    t['\\uFEC5'] = '\\u0638';\n\t    t['\\uFEC6'] = '\\u0638';\n\t    t['\\uFEC7'] = '\\u0638';\n\t    t['\\uFEC8'] = '\\u0638';\n\t    t['\\uFEC9'] = '\\u0639';\n\t    t['\\uFECA'] = '\\u0639';\n\t    t['\\uFECB'] = '\\u0639';\n\t    t['\\uFECC'] = '\\u0639';\n\t    t['\\uFECD'] = '\\u063A';\n\t    t['\\uFECE'] = '\\u063A';\n\t    t['\\uFECF'] = '\\u063A';\n\t    t['\\uFED0'] = '\\u063A';\n\t    t['\\uFED1'] = '\\u0641';\n\t    t['\\uFED2'] = '\\u0641';\n\t    t['\\uFED3'] = '\\u0641';\n\t    t['\\uFED4'] = '\\u0641';\n\t    t['\\uFED5'] = '\\u0642';\n\t    t['\\uFED6'] = '\\u0642';\n\t    t['\\uFED7'] = '\\u0642';\n\t    t['\\uFED8'] = '\\u0642';\n\t    t['\\uFED9'] = '\\u0643';\n\t    t['\\uFEDA'] = '\\u0643';\n\t    t['\\uFEDB'] = '\\u0643';\n\t    t['\\uFEDC'] = '\\u0643';\n\t    t['\\uFEDD'] = '\\u0644';\n\t    t['\\uFEDE'] = '\\u0644';\n\t    t['\\uFEDF'] = '\\u0644';\n\t    t['\\uFEE0'] = '\\u0644';\n\t    t['\\uFEE1'] = '\\u0645';\n\t    t['\\uFEE2'] = '\\u0645';\n\t    t['\\uFEE3'] = '\\u0645';\n\t    t['\\uFEE4'] = '\\u0645';\n\t    t['\\uFEE5'] = '\\u0646';\n\t    t['\\uFEE6'] = '\\u0646';\n\t    t['\\uFEE7'] = '\\u0646';\n\t    t['\\uFEE8'] = '\\u0646';\n\t    t['\\uFEE9'] = '\\u0647';\n\t    t['\\uFEEA'] = '\\u0647';\n\t    t['\\uFEEB'] = '\\u0647';\n\t    t['\\uFEEC'] = '\\u0647';\n\t    t['\\uFEED'] = '\\u0648';\n\t    t['\\uFEEE'] = '\\u0648';\n\t    t['\\uFEEF'] = '\\u0649';\n\t    t['\\uFEF0'] = '\\u0649';\n\t    t['\\uFEF1'] = '\\u064A';\n\t    t['\\uFEF2'] = '\\u064A';\n\t    t['\\uFEF3'] = '\\u064A';\n\t    t['\\uFEF4'] = '\\u064A';\n\t    t['\\uFEF5'] = '\\u0644\\u0622';\n\t    t['\\uFEF6'] = '\\u0644\\u0622';\n\t    t['\\uFEF7'] = '\\u0644\\u0623';\n\t    t['\\uFEF8'] = '\\u0644\\u0623';\n\t    t['\\uFEF9'] = '\\u0644\\u0625';\n\t    t['\\uFEFA'] = '\\u0644\\u0625';\n\t    t['\\uFEFB'] = '\\u0644\\u0627';\n\t    t['\\uFEFC'] = '\\u0644\\u0627';\n\t   });\n\t   function reverseIfRtl(chars) {\n\t    var charsLength = chars.length;\n\t    if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n\t     return chars;\n\t    }\n\t    var s = '';\n\t    for (var ii = charsLength - 1; ii >= 0; ii--) {\n\t     s += chars[ii];\n\t    }\n\t    return s;\n\t   }\n\t   exports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\n\t   exports.reverseIfRtl = reverseIfRtl;\n\t   exports.getUnicodeRangeFor = getUnicodeRangeFor;\n\t   exports.getNormalizedUnicodes = getNormalizedUnicodes;\n\t   exports.getUnicodeForGlyph = getUnicodeForGlyph;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCorePsParser = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives);\n\t  }(this, function (exports, sharedUtil, corePrimitives) {\n\t   var error = sharedUtil.error;\n\t   var isSpace = sharedUtil.isSpace;\n\t   var EOF = corePrimitives.EOF;\n\t   var PostScriptParser = function PostScriptParserClosure() {\n\t    function PostScriptParser(lexer) {\n\t     this.lexer = lexer;\n\t     this.operators = [];\n\t     this.token = null;\n\t     this.prev = null;\n\t    }\n\t    PostScriptParser.prototype = {\n\t     nextToken: function PostScriptParser_nextToken() {\n\t      this.prev = this.token;\n\t      this.token = this.lexer.getToken();\n\t     },\n\t     accept: function PostScriptParser_accept(type) {\n\t      if (this.token.type === type) {\n\t       this.nextToken();\n\t       return true;\n\t      }\n\t      return false;\n\t     },\n\t     expect: function PostScriptParser_expect(type) {\n\t      if (this.accept(type)) {\n\t       return true;\n\t      }\n\t      error('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\n\t     },\n\t     parse: function PostScriptParser_parse() {\n\t      this.nextToken();\n\t      this.expect(PostScriptTokenTypes.LBRACE);\n\t      this.parseBlock();\n\t      this.expect(PostScriptTokenTypes.RBRACE);\n\t      return this.operators;\n\t     },\n\t     parseBlock: function PostScriptParser_parseBlock() {\n\t      while (true) {\n\t       if (this.accept(PostScriptTokenTypes.NUMBER)) {\n\t        this.operators.push(this.prev.value);\n\t       } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n\t        this.operators.push(this.prev.value);\n\t       } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n\t        this.parseCondition();\n\t       } else {\n\t        return;\n\t       }\n\t      }\n\t     },\n\t     parseCondition: function PostScriptParser_parseCondition() {\n\t      var conditionLocation = this.operators.length;\n\t      this.operators.push(null, null);\n\t      this.parseBlock();\n\t      this.expect(PostScriptTokenTypes.RBRACE);\n\t      if (this.accept(PostScriptTokenTypes.IF)) {\n\t       this.operators[conditionLocation] = this.operators.length;\n\t       this.operators[conditionLocation + 1] = 'jz';\n\t      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n\t       var jumpLocation = this.operators.length;\n\t       this.operators.push(null, null);\n\t       var endOfTrue = this.operators.length;\n\t       this.parseBlock();\n\t       this.expect(PostScriptTokenTypes.RBRACE);\n\t       this.expect(PostScriptTokenTypes.IFELSE);\n\t       this.operators[jumpLocation] = this.operators.length;\n\t       this.operators[jumpLocation + 1] = 'j';\n\t       this.operators[conditionLocation] = endOfTrue;\n\t       this.operators[conditionLocation + 1] = 'jz';\n\t      } else {\n\t       error('PS Function: error parsing conditional.');\n\t      }\n\t     }\n\t    };\n\t    return PostScriptParser;\n\t   }();\n\t   var PostScriptTokenTypes = {\n\t    LBRACE: 0,\n\t    RBRACE: 1,\n\t    NUMBER: 2,\n\t    OPERATOR: 3,\n\t    IF: 4,\n\t    IFELSE: 5\n\t   };\n\t   var PostScriptToken = function PostScriptTokenClosure() {\n\t    function PostScriptToken(type, value) {\n\t     this.type = type;\n\t     this.value = value;\n\t    }\n\t    var opCache = Object.create(null);\n\t    PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n\t     var opValue = opCache[op];\n\t     if (opValue) {\n\t      return opValue;\n\t     }\n\t     return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n\t    };\n\t    PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\n\t    PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\n\t    PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n\t    PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\n\t    return PostScriptToken;\n\t   }();\n\t   var PostScriptLexer = function PostScriptLexerClosure() {\n\t    function PostScriptLexer(stream) {\n\t     this.stream = stream;\n\t     this.nextChar();\n\t     this.strBuf = [];\n\t    }\n\t    PostScriptLexer.prototype = {\n\t     nextChar: function PostScriptLexer_nextChar() {\n\t      return this.currentChar = this.stream.getByte();\n\t     },\n\t     getToken: function PostScriptLexer_getToken() {\n\t      var comment = false;\n\t      var ch = this.currentChar;\n\t      while (true) {\n\t       if (ch < 0) {\n\t        return EOF;\n\t       }\n\t       if (comment) {\n\t        if (ch === 0x0A || ch === 0x0D) {\n\t         comment = false;\n\t        }\n\t       } else if (ch === 0x25) {\n\t        comment = true;\n\t       } else if (!isSpace(ch)) {\n\t        break;\n\t       }\n\t       ch = this.nextChar();\n\t      }\n\t      switch (ch | 0) {\n\t      case 0x30:\n\t      case 0x31:\n\t      case 0x32:\n\t      case 0x33:\n\t      case 0x34:\n\t      case 0x35:\n\t      case 0x36:\n\t      case 0x37:\n\t      case 0x38:\n\t      case 0x39:\n\t      case 0x2B:\n\t      case 0x2D:\n\t      case 0x2E:\n\t       return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n\t      case 0x7B:\n\t       this.nextChar();\n\t       return PostScriptToken.LBRACE;\n\t      case 0x7D:\n\t       this.nextChar();\n\t       return PostScriptToken.RBRACE;\n\t      }\n\t      var strBuf = this.strBuf;\n\t      strBuf.length = 0;\n\t      strBuf[0] = String.fromCharCode(ch);\n\t      while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\n\t       strBuf.push(String.fromCharCode(ch));\n\t      }\n\t      var str = strBuf.join('');\n\t      switch (str.toLowerCase()) {\n\t      case 'if':\n\t       return PostScriptToken.IF;\n\t      case 'ifelse':\n\t       return PostScriptToken.IFELSE;\n\t      default:\n\t       return PostScriptToken.getOperator(str);\n\t      }\n\t     },\n\t     getNumber: function PostScriptLexer_getNumber() {\n\t      var ch = this.currentChar;\n\t      var strBuf = this.strBuf;\n\t      strBuf.length = 0;\n\t      strBuf[0] = String.fromCharCode(ch);\n\t      while ((ch = this.nextChar()) >= 0) {\n\t       if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\n\t        strBuf.push(String.fromCharCode(ch));\n\t       } else {\n\t        break;\n\t       }\n\t      }\n\t      var value = parseFloat(strBuf.join(''));\n\t      if (isNaN(value)) {\n\t       error('Invalid floating point number: ' + value);\n\t      }\n\t      return value;\n\t     }\n\t    };\n\t    return PostScriptLexer;\n\t   }();\n\t   exports.PostScriptLexer = PostScriptLexer;\n\t   exports.PostScriptParser = PostScriptParser;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCoreStream = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreJbig2, root.pdfjsCoreJpg, root.pdfjsCoreJpx);\n\t  }(this, function (exports, sharedUtil, corePrimitives, coreJbig2, coreJpg, coreJpx) {\n\t   var Util = sharedUtil.Util;\n\t   var error = sharedUtil.error;\n\t   var info = sharedUtil.info;\n\t   var isInt = sharedUtil.isInt;\n\t   var isArray = sharedUtil.isArray;\n\t   var createObjectURL = sharedUtil.createObjectURL;\n\t   var shadow = sharedUtil.shadow;\n\t   var warn = sharedUtil.warn;\n\t   var isSpace = sharedUtil.isSpace;\n\t   var Dict = corePrimitives.Dict;\n\t   var isDict = corePrimitives.isDict;\n\t   var isStream = corePrimitives.isStream;\n\t   var Jbig2Image = coreJbig2.Jbig2Image;\n\t   var JpegImage = coreJpg.JpegImage;\n\t   var JpxImage = coreJpx.JpxImage;\n\t   var Stream = function StreamClosure() {\n\t    function Stream(arrayBuffer, start, length, dict) {\n\t     this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n\t     this.start = start || 0;\n\t     this.pos = this.start;\n\t     this.end = start + length || this.bytes.length;\n\t     this.dict = dict;\n\t    }\n\t    Stream.prototype = {\n\t     get length() {\n\t      return this.end - this.start;\n\t     },\n\t     get isEmpty() {\n\t      return this.length === 0;\n\t     },\n\t     getByte: function Stream_getByte() {\n\t      if (this.pos >= this.end) {\n\t       return -1;\n\t      }\n\t      return this.bytes[this.pos++];\n\t     },\n\t     getUint16: function Stream_getUint16() {\n\t      var b0 = this.getByte();\n\t      var b1 = this.getByte();\n\t      if (b0 === -1 || b1 === -1) {\n\t       return -1;\n\t      }\n\t      return (b0 << 8) + b1;\n\t     },\n\t     getInt32: function Stream_getInt32() {\n\t      var b0 = this.getByte();\n\t      var b1 = this.getByte();\n\t      var b2 = this.getByte();\n\t      var b3 = this.getByte();\n\t      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n\t     },\n\t     getBytes: function Stream_getBytes(length) {\n\t      var bytes = this.bytes;\n\t      var pos = this.pos;\n\t      var strEnd = this.end;\n\t      if (!length) {\n\t       return bytes.subarray(pos, strEnd);\n\t      }\n\t      var end = pos + length;\n\t      if (end > strEnd) {\n\t       end = strEnd;\n\t      }\n\t      this.pos = end;\n\t      return bytes.subarray(pos, end);\n\t     },\n\t     peekByte: function Stream_peekByte() {\n\t      var peekedByte = this.getByte();\n\t      this.pos--;\n\t      return peekedByte;\n\t     },\n\t     peekBytes: function Stream_peekBytes(length) {\n\t      var bytes = this.getBytes(length);\n\t      this.pos -= bytes.length;\n\t      return bytes;\n\t     },\n\t     skip: function Stream_skip(n) {\n\t      if (!n) {\n\t       n = 1;\n\t      }\n\t      this.pos += n;\n\t     },\n\t     reset: function Stream_reset() {\n\t      this.pos = this.start;\n\t     },\n\t     moveStart: function Stream_moveStart() {\n\t      this.start = this.pos;\n\t     },\n\t     makeSubStream: function Stream_makeSubStream(start, length, dict) {\n\t      return new Stream(this.bytes.buffer, start, length, dict);\n\t     },\n\t     isStream: true\n\t    };\n\t    return Stream;\n\t   }();\n\t   var StringStream = function StringStreamClosure() {\n\t    function StringStream(str) {\n\t     var length = str.length;\n\t     var bytes = new Uint8Array(length);\n\t     for (var n = 0; n < length; ++n) {\n\t      bytes[n] = str.charCodeAt(n);\n\t     }\n\t     Stream.call(this, bytes);\n\t    }\n\t    StringStream.prototype = Stream.prototype;\n\t    return StringStream;\n\t   }();\n\t   var DecodeStream = function DecodeStreamClosure() {\n\t    var emptyBuffer = new Uint8Array(0);\n\t    function DecodeStream(maybeMinBufferLength) {\n\t     this.pos = 0;\n\t     this.bufferLength = 0;\n\t     this.eof = false;\n\t     this.buffer = emptyBuffer;\n\t     this.minBufferLength = 512;\n\t     if (maybeMinBufferLength) {\n\t      while (this.minBufferLength < maybeMinBufferLength) {\n\t       this.minBufferLength *= 2;\n\t      }\n\t     }\n\t    }\n\t    DecodeStream.prototype = {\n\t     get isEmpty() {\n\t      while (!this.eof && this.bufferLength === 0) {\n\t       this.readBlock();\n\t      }\n\t      return this.bufferLength === 0;\n\t     },\n\t     ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n\t      var buffer = this.buffer;\n\t      if (requested <= buffer.byteLength) {\n\t       return buffer;\n\t      }\n\t      var size = this.minBufferLength;\n\t      while (size < requested) {\n\t       size *= 2;\n\t      }\n\t      var buffer2 = new Uint8Array(size);\n\t      buffer2.set(buffer);\n\t      return this.buffer = buffer2;\n\t     },\n\t     getByte: function DecodeStream_getByte() {\n\t      var pos = this.pos;\n\t      while (this.bufferLength <= pos) {\n\t       if (this.eof) {\n\t        return -1;\n\t       }\n\t       this.readBlock();\n\t      }\n\t      return this.buffer[this.pos++];\n\t     },\n\t     getUint16: function DecodeStream_getUint16() {\n\t      var b0 = this.getByte();\n\t      var b1 = this.getByte();\n\t      if (b0 === -1 || b1 === -1) {\n\t       return -1;\n\t      }\n\t      return (b0 << 8) + b1;\n\t     },\n\t     getInt32: function DecodeStream_getInt32() {\n\t      var b0 = this.getByte();\n\t      var b1 = this.getByte();\n\t      var b2 = this.getByte();\n\t      var b3 = this.getByte();\n\t      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n\t     },\n\t     getBytes: function DecodeStream_getBytes(length) {\n\t      var end, pos = this.pos;\n\t      if (length) {\n\t       this.ensureBuffer(pos + length);\n\t       end = pos + length;\n\t       while (!this.eof && this.bufferLength < end) {\n\t        this.readBlock();\n\t       }\n\t       var bufEnd = this.bufferLength;\n\t       if (end > bufEnd) {\n\t        end = bufEnd;\n\t       }\n\t      } else {\n\t       while (!this.eof) {\n\t        this.readBlock();\n\t       }\n\t       end = this.bufferLength;\n\t      }\n\t      this.pos = end;\n\t      return this.buffer.subarray(pos, end);\n\t     },\n\t     peekByte: function DecodeStream_peekByte() {\n\t      var peekedByte = this.getByte();\n\t      this.pos--;\n\t      return peekedByte;\n\t     },\n\t     peekBytes: function DecodeStream_peekBytes(length) {\n\t      var bytes = this.getBytes(length);\n\t      this.pos -= bytes.length;\n\t      return bytes;\n\t     },\n\t     makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n\t      var end = start + length;\n\t      while (this.bufferLength <= end && !this.eof) {\n\t       this.readBlock();\n\t      }\n\t      return new Stream(this.buffer, start, length, dict);\n\t     },\n\t     skip: function DecodeStream_skip(n) {\n\t      if (!n) {\n\t       n = 1;\n\t      }\n\t      this.pos += n;\n\t     },\n\t     reset: function DecodeStream_reset() {\n\t      this.pos = 0;\n\t     },\n\t     getBaseStreams: function DecodeStream_getBaseStreams() {\n\t      if (this.str && this.str.getBaseStreams) {\n\t       return this.str.getBaseStreams();\n\t      }\n\t      return [];\n\t     }\n\t    };\n\t    return DecodeStream;\n\t   }();\n\t   var StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n\t    function StreamsSequenceStream(streams) {\n\t     this.streams = streams;\n\t     DecodeStream.call(this, null);\n\t    }\n\t    StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n\t    StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n\t     var streams = this.streams;\n\t     if (streams.length === 0) {\n\t      this.eof = true;\n\t      return;\n\t     }\n\t     var stream = streams.shift();\n\t     var chunk = stream.getBytes();\n\t     var bufferLength = this.bufferLength;\n\t     var newLength = bufferLength + chunk.length;\n\t     var buffer = this.ensureBuffer(newLength);\n\t     buffer.set(chunk, bufferLength);\n\t     this.bufferLength = newLength;\n\t    };\n\t    StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n\t     var baseStreams = [];\n\t     for (var i = 0, ii = this.streams.length; i < ii; i++) {\n\t      var stream = this.streams[i];\n\t      if (stream.getBaseStreams) {\n\t       Util.appendToArray(baseStreams, stream.getBaseStreams());\n\t      }\n\t     }\n\t     return baseStreams;\n\t    };\n\t    return StreamsSequenceStream;\n\t   }();\n\t   var FlateStream = function FlateStreamClosure() {\n\t    var codeLenCodeMap = new Int32Array([\n\t     16,\n\t     17,\n\t     18,\n\t     0,\n\t     8,\n\t     7,\n\t     9,\n\t     6,\n\t     10,\n\t     5,\n\t     11,\n\t     4,\n\t     12,\n\t     3,\n\t     13,\n\t     2,\n\t     14,\n\t     1,\n\t     15\n\t    ]);\n\t    var lengthDecode = new Int32Array([\n\t     0x00003,\n\t     0x00004,\n\t     0x00005,\n\t     0x00006,\n\t     0x00007,\n\t     0x00008,\n\t     0x00009,\n\t     0x0000a,\n\t     0x1000b,\n\t     0x1000d,\n\t     0x1000f,\n\t     0x10011,\n\t     0x20013,\n\t     0x20017,\n\t     0x2001b,\n\t     0x2001f,\n\t     0x30023,\n\t     0x3002b,\n\t     0x30033,\n\t     0x3003b,\n\t     0x40043,\n\t     0x40053,\n\t     0x40063,\n\t     0x40073,\n\t     0x50083,\n\t     0x500a3,\n\t     0x500c3,\n\t     0x500e3,\n\t     0x00102,\n\t     0x00102,\n\t     0x00102\n\t    ]);\n\t    var distDecode = new Int32Array([\n\t     0x00001,\n\t     0x00002,\n\t     0x00003,\n\t     0x00004,\n\t     0x10005,\n\t     0x10007,\n\t     0x20009,\n\t     0x2000d,\n\t     0x30011,\n\t     0x30019,\n\t     0x40021,\n\t     0x40031,\n\t     0x50041,\n\t     0x50061,\n\t     0x60081,\n\t     0x600c1,\n\t     0x70101,\n\t     0x70181,\n\t     0x80201,\n\t     0x80301,\n\t     0x90401,\n\t     0x90601,\n\t     0xa0801,\n\t     0xa0c01,\n\t     0xb1001,\n\t     0xb1801,\n\t     0xc2001,\n\t     0xc3001,\n\t     0xd4001,\n\t     0xd6001\n\t    ]);\n\t    var fixedLitCodeTab = [\n\t     new Int32Array([\n\t      0x70100,\n\t      0x80050,\n\t      0x80010,\n\t      0x80118,\n\t      0x70110,\n\t      0x80070,\n\t      0x80030,\n\t      0x900c0,\n\t      0x70108,\n\t      0x80060,\n\t      0x80020,\n\t      0x900a0,\n\t      0x80000,\n\t      0x80080,\n\t      0x80040,\n\t      0x900e0,\n\t      0x70104,\n\t      0x80058,\n\t      0x80018,\n\t      0x90090,\n\t      0x70114,\n\t      0x80078,\n\t      0x80038,\n\t      0x900d0,\n\t      0x7010c,\n\t      0x80068,\n\t      0x80028,\n\t      0x900b0,\n\t      0x80008,\n\t      0x80088,\n\t      0x80048,\n\t      0x900f0,\n\t      0x70102,\n\t      0x80054,\n\t      0x80014,\n\t      0x8011c,\n\t      0x70112,\n\t      0x80074,\n\t      0x80034,\n\t      0x900c8,\n\t      0x7010a,\n\t      0x80064,\n\t      0x80024,\n\t      0x900a8,\n\t      0x80004,\n\t      0x80084,\n\t      0x80044,\n\t      0x900e8,\n\t      0x70106,\n\t      0x8005c,\n\t      0x8001c,\n\t      0x90098,\n\t      0x70116,\n\t      0x8007c,\n\t      0x8003c,\n\t      0x900d8,\n\t      0x7010e,\n\t      0x8006c,\n\t      0x8002c,\n\t      0x900b8,\n\t      0x8000c,\n\t      0x8008c,\n\t      0x8004c,\n\t      0x900f8,\n\t      0x70101,\n\t      0x80052,\n\t      0x80012,\n\t      0x8011a,\n\t      0x70111,\n\t      0x80072,\n\t      0x80032,\n\t      0x900c4,\n\t      0x70109,\n\t      0x80062,\n\t      0x80022,\n\t      0x900a4,\n\t      0x80002,\n\t      0x80082,\n\t      0x80042,\n\t      0x900e4,\n\t      0x70105,\n\t      0x8005a,\n\t      0x8001a,\n\t      0x90094,\n\t      0x70115,\n\t      0x8007a,\n\t      0x8003a,\n\t      0x900d4,\n\t      0x7010d,\n\t      0x8006a,\n\t      0x8002a,\n\t      0x900b4,\n\t      0x8000a,\n\t      0x8008a,\n\t      0x8004a,\n\t      0x900f4,\n\t      0x70103,\n\t      0x80056,\n\t      0x80016,\n\t      0x8011e,\n\t      0x70113,\n\t      0x80076,\n\t      0x80036,\n\t      0x900cc,\n\t      0x7010b,\n\t      0x80066,\n\t      0x80026,\n\t      0x900ac,\n\t      0x80006,\n\t      0x80086,\n\t      0x80046,\n\t      0x900ec,\n\t      0x70107,\n\t      0x8005e,\n\t      0x8001e,\n\t      0x9009c,\n\t      0x70117,\n\t      0x8007e,\n\t      0x8003e,\n\t      0x900dc,\n\t      0x7010f,\n\t      0x8006e,\n\t      0x8002e,\n\t      0x900bc,\n\t      0x8000e,\n\t      0x8008e,\n\t      0x8004e,\n\t      0x900fc,\n\t      0x70100,\n\t      0x80051,\n\t      0x80011,\n\t      0x80119,\n\t      0x70110,\n\t      0x80071,\n\t      0x80031,\n\t      0x900c2,\n\t      0x70108,\n\t      0x80061,\n\t      0x80021,\n\t      0x900a2,\n\t      0x80001,\n\t      0x80081,\n\t      0x80041,\n\t      0x900e2,\n\t      0x70104,\n\t      0x80059,\n\t      0x80019,\n\t      0x90092,\n\t      0x70114,\n\t      0x80079,\n\t      0x80039,\n\t      0x900d2,\n\t      0x7010c,\n\t      0x80069,\n\t      0x80029,\n\t      0x900b2,\n\t      0x80009,\n\t      0x80089,\n\t      0x80049,\n\t      0x900f2,\n\t      0x70102,\n\t      0x80055,\n\t      0x80015,\n\t      0x8011d,\n\t      0x70112,\n\t      0x80075,\n\t      0x80035,\n\t      0x900ca,\n\t      0x7010a,\n\t      0x80065,\n\t      0x80025,\n\t      0x900aa,\n\t      0x80005,\n\t      0x80085,\n\t      0x80045,\n\t      0x900ea,\n\t      0x70106,\n\t      0x8005d,\n\t      0x8001d,\n\t      0x9009a,\n\t      0x70116,\n\t      0x8007d,\n\t      0x8003d,\n\t      0x900da,\n\t      0x7010e,\n\t      0x8006d,\n\t      0x8002d,\n\t      0x900ba,\n\t      0x8000d,\n\t      0x8008d,\n\t      0x8004d,\n\t      0x900fa,\n\t      0x70101,\n\t      0x80053,\n\t      0x80013,\n\t      0x8011b,\n\t      0x70111,\n\t      0x80073,\n\t      0x80033,\n\t      0x900c6,\n\t      0x70109,\n\t      0x80063,\n\t      0x80023,\n\t      0x900a6,\n\t      0x80003,\n\t      0x80083,\n\t      0x80043,\n\t      0x900e6,\n\t      0x70105,\n\t      0x8005b,\n\t      0x8001b,\n\t      0x90096,\n\t      0x70115,\n\t      0x8007b,\n\t      0x8003b,\n\t      0x900d6,\n\t      0x7010d,\n\t      0x8006b,\n\t      0x8002b,\n\t      0x900b6,\n\t      0x8000b,\n\t      0x8008b,\n\t      0x8004b,\n\t      0x900f6,\n\t      0x70103,\n\t      0x80057,\n\t      0x80017,\n\t      0x8011f,\n\t      0x70113,\n\t      0x80077,\n\t      0x80037,\n\t      0x900ce,\n\t      0x7010b,\n\t      0x80067,\n\t      0x80027,\n\t      0x900ae,\n\t      0x80007,\n\t      0x80087,\n\t      0x80047,\n\t      0x900ee,\n\t      0x70107,\n\t      0x8005f,\n\t      0x8001f,\n\t      0x9009e,\n\t      0x70117,\n\t      0x8007f,\n\t      0x8003f,\n\t      0x900de,\n\t      0x7010f,\n\t      0x8006f,\n\t      0x8002f,\n\t      0x900be,\n\t      0x8000f,\n\t      0x8008f,\n\t      0x8004f,\n\t      0x900fe,\n\t      0x70100,\n\t      0x80050,\n\t      0x80010,\n\t      0x80118,\n\t      0x70110,\n\t      0x80070,\n\t      0x80030,\n\t      0x900c1,\n\t      0x70108,\n\t      0x80060,\n\t      0x80020,\n\t      0x900a1,\n\t      0x80000,\n\t      0x80080,\n\t      0x80040,\n\t      0x900e1,\n\t      0x70104,\n\t      0x80058,\n\t      0x80018,\n\t      0x90091,\n\t      0x70114,\n\t      0x80078,\n\t      0x80038,\n\t      0x900d1,\n\t      0x7010c,\n\t      0x80068,\n\t      0x80028,\n\t      0x900b1,\n\t      0x80008,\n\t      0x80088,\n\t      0x80048,\n\t      0x900f1,\n\t      0x70102,\n\t      0x80054,\n\t      0x80014,\n\t      0x8011c,\n\t      0x70112,\n\t      0x80074,\n\t      0x80034,\n\t      0x900c9,\n\t      0x7010a,\n\t      0x80064,\n\t      0x80024,\n\t      0x900a9,\n\t      0x80004,\n\t      0x80084,\n\t      0x80044,\n\t      0x900e9,\n\t      0x70106,\n\t      0x8005c,\n\t      0x8001c,\n\t      0x90099,\n\t      0x70116,\n\t      0x8007c,\n\t      0x8003c,\n\t      0x900d9,\n\t      0x7010e,\n\t      0x8006c,\n\t      0x8002c,\n\t      0x900b9,\n\t      0x8000c,\n\t      0x8008c,\n\t      0x8004c,\n\t      0x900f9,\n\t      0x70101,\n\t      0x80052,\n\t      0x80012,\n\t      0x8011a,\n\t      0x70111,\n\t      0x80072,\n\t      0x80032,\n\t      0x900c5,\n\t      0x70109,\n\t      0x80062,\n\t      0x80022,\n\t      0x900a5,\n\t      0x80002,\n\t      0x80082,\n\t      0x80042,\n\t      0x900e5,\n\t      0x70105,\n\t      0x8005a,\n\t      0x8001a,\n\t      0x90095,\n\t      0x70115,\n\t      0x8007a,\n\t      0x8003a,\n\t      0x900d5,\n\t      0x7010d,\n\t      0x8006a,\n\t      0x8002a,\n\t      0x900b5,\n\t      0x8000a,\n\t      0x8008a,\n\t      0x8004a,\n\t      0x900f5,\n\t      0x70103,\n\t      0x80056,\n\t      0x80016,\n\t      0x8011e,\n\t      0x70113,\n\t      0x80076,\n\t      0x80036,\n\t      0x900cd,\n\t      0x7010b,\n\t      0x80066,\n\t      0x80026,\n\t      0x900ad,\n\t      0x80006,\n\t      0x80086,\n\t      0x80046,\n\t      0x900ed,\n\t      0x70107,\n\t      0x8005e,\n\t      0x8001e,\n\t      0x9009d,\n\t      0x70117,\n\t      0x8007e,\n\t      0x8003e,\n\t      0x900dd,\n\t      0x7010f,\n\t      0x8006e,\n\t      0x8002e,\n\t      0x900bd,\n\t      0x8000e,\n\t      0x8008e,\n\t      0x8004e,\n\t      0x900fd,\n\t      0x70100,\n\t      0x80051,\n\t      0x80011,\n\t      0x80119,\n\t      0x70110,\n\t      0x80071,\n\t      0x80031,\n\t      0x900c3,\n\t      0x70108,\n\t      0x80061,\n\t      0x80021,\n\t      0x900a3,\n\t      0x80001,\n\t      0x80081,\n\t      0x80041,\n\t      0x900e3,\n\t      0x70104,\n\t      0x80059,\n\t      0x80019,\n\t      0x90093,\n\t      0x70114,\n\t      0x80079,\n\t      0x80039,\n\t      0x900d3,\n\t      0x7010c,\n\t      0x80069,\n\t      0x80029,\n\t      0x900b3,\n\t      0x80009,\n\t      0x80089,\n\t      0x80049,\n\t      0x900f3,\n\t      0x70102,\n\t      0x80055,\n\t      0x80015,\n\t      0x8011d,\n\t      0x70112,\n\t      0x80075,\n\t      0x80035,\n\t      0x900cb,\n\t      0x7010a,\n\t      0x80065,\n\t      0x80025,\n\t      0x900ab,\n\t      0x80005,\n\t      0x80085,\n\t      0x80045,\n\t      0x900eb,\n\t      0x70106,\n\t      0x8005d,\n\t      0x8001d,\n\t      0x9009b,\n\t      0x70116,\n\t      0x8007d,\n\t      0x8003d,\n\t      0x900db,\n\t      0x7010e,\n\t      0x8006d,\n\t      0x8002d,\n\t      0x900bb,\n\t      0x8000d,\n\t      0x8008d,\n\t      0x8004d,\n\t      0x900fb,\n\t      0x70101,\n\t      0x80053,\n\t      0x80013,\n\t      0x8011b,\n\t      0x70111,\n\t      0x80073,\n\t      0x80033,\n\t      0x900c7,\n\t      0x70109,\n\t      0x80063,\n\t      0x80023,\n\t      0x900a7,\n\t      0x80003,\n\t      0x80083,\n\t      0x80043,\n\t      0x900e7,\n\t      0x70105,\n\t      0x8005b,\n\t      0x8001b,\n\t      0x90097,\n\t      0x70115,\n\t      0x8007b,\n\t      0x8003b,\n\t      0x900d7,\n\t      0x7010d,\n\t      0x8006b,\n\t      0x8002b,\n\t      0x900b7,\n\t      0x8000b,\n\t      0x8008b,\n\t      0x8004b,\n\t      0x900f7,\n\t      0x70103,\n\t      0x80057,\n\t      0x80017,\n\t      0x8011f,\n\t      0x70113,\n\t      0x80077,\n\t      0x80037,\n\t      0x900cf,\n\t      0x7010b,\n\t      0x80067,\n\t      0x80027,\n\t      0x900af,\n\t      0x80007,\n\t      0x80087,\n\t      0x80047,\n\t      0x900ef,\n\t      0x70107,\n\t      0x8005f,\n\t      0x8001f,\n\t      0x9009f,\n\t      0x70117,\n\t      0x8007f,\n\t      0x8003f,\n\t      0x900df,\n\t      0x7010f,\n\t      0x8006f,\n\t      0x8002f,\n\t      0x900bf,\n\t      0x8000f,\n\t      0x8008f,\n\t      0x8004f,\n\t      0x900ff\n\t     ]),\n\t     9\n\t    ];\n\t    var fixedDistCodeTab = [\n\t     new Int32Array([\n\t      0x50000,\n\t      0x50010,\n\t      0x50008,\n\t      0x50018,\n\t      0x50004,\n\t      0x50014,\n\t      0x5000c,\n\t      0x5001c,\n\t      0x50002,\n\t      0x50012,\n\t      0x5000a,\n\t      0x5001a,\n\t      0x50006,\n\t      0x50016,\n\t      0x5000e,\n\t      0x00000,\n\t      0x50001,\n\t      0x50011,\n\t      0x50009,\n\t      0x50019,\n\t      0x50005,\n\t      0x50015,\n\t      0x5000d,\n\t      0x5001d,\n\t      0x50003,\n\t      0x50013,\n\t      0x5000b,\n\t      0x5001b,\n\t      0x50007,\n\t      0x50017,\n\t      0x5000f,\n\t      0x00000\n\t     ]),\n\t     5\n\t    ];\n\t    function FlateStream(str, maybeLength) {\n\t     this.str = str;\n\t     this.dict = str.dict;\n\t     var cmf = str.getByte();\n\t     var flg = str.getByte();\n\t     if (cmf === -1 || flg === -1) {\n\t      error('Invalid header in flate stream: ' + cmf + ', ' + flg);\n\t     }\n\t     if ((cmf & 0x0f) !== 0x08) {\n\t      error('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n\t     }\n\t     if (((cmf << 8) + flg) % 31 !== 0) {\n\t      error('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n\t     }\n\t     if (flg & 0x20) {\n\t      error('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n\t     }\n\t     this.codeSize = 0;\n\t     this.codeBuf = 0;\n\t     DecodeStream.call(this, maybeLength);\n\t    }\n\t    FlateStream.prototype = Object.create(DecodeStream.prototype);\n\t    FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n\t     var str = this.str;\n\t     var codeSize = this.codeSize;\n\t     var codeBuf = this.codeBuf;\n\t     var b;\n\t     while (codeSize < bits) {\n\t      if ((b = str.getByte()) === -1) {\n\t       error('Bad encoding in flate stream');\n\t      }\n\t      codeBuf |= b << codeSize;\n\t      codeSize += 8;\n\t     }\n\t     b = codeBuf & (1 << bits) - 1;\n\t     this.codeBuf = codeBuf >> bits;\n\t     this.codeSize = codeSize -= bits;\n\t     return b;\n\t    };\n\t    FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n\t     var str = this.str;\n\t     var codes = table[0];\n\t     var maxLen = table[1];\n\t     var codeSize = this.codeSize;\n\t     var codeBuf = this.codeBuf;\n\t     var b;\n\t     while (codeSize < maxLen) {\n\t      if ((b = str.getByte()) === -1) {\n\t       break;\n\t      }\n\t      codeBuf |= b << codeSize;\n\t      codeSize += 8;\n\t     }\n\t     var code = codes[codeBuf & (1 << maxLen) - 1];\n\t     var codeLen = code >> 16;\n\t     var codeVal = code & 0xffff;\n\t     if (codeLen < 1 || codeSize < codeLen) {\n\t      error('Bad encoding in flate stream');\n\t     }\n\t     this.codeBuf = codeBuf >> codeLen;\n\t     this.codeSize = codeSize - codeLen;\n\t     return codeVal;\n\t    };\n\t    FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n\t     var n = lengths.length;\n\t     var maxLen = 0;\n\t     var i;\n\t     for (i = 0; i < n; ++i) {\n\t      if (lengths[i] > maxLen) {\n\t       maxLen = lengths[i];\n\t      }\n\t     }\n\t     var size = 1 << maxLen;\n\t     var codes = new Int32Array(size);\n\t     for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n\t      for (var val = 0; val < n; ++val) {\n\t       if (lengths[val] === len) {\n\t        var code2 = 0;\n\t        var t = code;\n\t        for (i = 0; i < len; ++i) {\n\t         code2 = code2 << 1 | t & 1;\n\t         t >>= 1;\n\t        }\n\t        for (i = code2; i < size; i += skip) {\n\t         codes[i] = len << 16 | val;\n\t        }\n\t        ++code;\n\t       }\n\t      }\n\t     }\n\t     return [\n\t      codes,\n\t      maxLen\n\t     ];\n\t    };\n\t    FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n\t     var buffer, len;\n\t     var str = this.str;\n\t     var hdr = this.getBits(3);\n\t     if (hdr & 1) {\n\t      this.eof = true;\n\t     }\n\t     hdr >>= 1;\n\t     if (hdr === 0) {\n\t      var b;\n\t      if ((b = str.getByte()) === -1) {\n\t       error('Bad block header in flate stream');\n\t      }\n\t      var blockLen = b;\n\t      if ((b = str.getByte()) === -1) {\n\t       error('Bad block header in flate stream');\n\t      }\n\t      blockLen |= b << 8;\n\t      if ((b = str.getByte()) === -1) {\n\t       error('Bad block header in flate stream');\n\t      }\n\t      var check = b;\n\t      if ((b = str.getByte()) === -1) {\n\t       error('Bad block header in flate stream');\n\t      }\n\t      check |= b << 8;\n\t      if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n\t       error('Bad uncompressed block length in flate stream');\n\t      }\n\t      this.codeBuf = 0;\n\t      this.codeSize = 0;\n\t      var bufferLength = this.bufferLength;\n\t      buffer = this.ensureBuffer(bufferLength + blockLen);\n\t      var end = bufferLength + blockLen;\n\t      this.bufferLength = end;\n\t      if (blockLen === 0) {\n\t       if (str.peekByte() === -1) {\n\t        this.eof = true;\n\t       }\n\t      } else {\n\t       for (var n = bufferLength; n < end; ++n) {\n\t        if ((b = str.getByte()) === -1) {\n\t         this.eof = true;\n\t         break;\n\t        }\n\t        buffer[n] = b;\n\t       }\n\t      }\n\t      return;\n\t     }\n\t     var litCodeTable;\n\t     var distCodeTable;\n\t     if (hdr === 1) {\n\t      litCodeTable = fixedLitCodeTab;\n\t      distCodeTable = fixedDistCodeTab;\n\t     } else if (hdr === 2) {\n\t      var numLitCodes = this.getBits(5) + 257;\n\t      var numDistCodes = this.getBits(5) + 1;\n\t      var numCodeLenCodes = this.getBits(4) + 4;\n\t      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n\t      var i;\n\t      for (i = 0; i < numCodeLenCodes; ++i) {\n\t       codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n\t      }\n\t      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n\t      len = 0;\n\t      i = 0;\n\t      var codes = numLitCodes + numDistCodes;\n\t      var codeLengths = new Uint8Array(codes);\n\t      var bitsLength, bitsOffset, what;\n\t      while (i < codes) {\n\t       var code = this.getCode(codeLenCodeTab);\n\t       if (code === 16) {\n\t        bitsLength = 2;\n\t        bitsOffset = 3;\n\t        what = len;\n\t       } else if (code === 17) {\n\t        bitsLength = 3;\n\t        bitsOffset = 3;\n\t        what = len = 0;\n\t       } else if (code === 18) {\n\t        bitsLength = 7;\n\t        bitsOffset = 11;\n\t        what = len = 0;\n\t       } else {\n\t        codeLengths[i++] = len = code;\n\t        continue;\n\t       }\n\t       var repeatLength = this.getBits(bitsLength) + bitsOffset;\n\t       while (repeatLength-- > 0) {\n\t        codeLengths[i++] = what;\n\t       }\n\t      }\n\t      litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n\t      distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n\t     } else {\n\t      error('Unknown block type in flate stream');\n\t     }\n\t     buffer = this.buffer;\n\t     var limit = buffer ? buffer.length : 0;\n\t     var pos = this.bufferLength;\n\t     while (true) {\n\t      var code1 = this.getCode(litCodeTable);\n\t      if (code1 < 256) {\n\t       if (pos + 1 >= limit) {\n\t        buffer = this.ensureBuffer(pos + 1);\n\t        limit = buffer.length;\n\t       }\n\t       buffer[pos++] = code1;\n\t       continue;\n\t      }\n\t      if (code1 === 256) {\n\t       this.bufferLength = pos;\n\t       return;\n\t      }\n\t      code1 -= 257;\n\t      code1 = lengthDecode[code1];\n\t      var code2 = code1 >> 16;\n\t      if (code2 > 0) {\n\t       code2 = this.getBits(code2);\n\t      }\n\t      len = (code1 & 0xffff) + code2;\n\t      code1 = this.getCode(distCodeTable);\n\t      code1 = distDecode[code1];\n\t      code2 = code1 >> 16;\n\t      if (code2 > 0) {\n\t       code2 = this.getBits(code2);\n\t      }\n\t      var dist = (code1 & 0xffff) + code2;\n\t      if (pos + len >= limit) {\n\t       buffer = this.ensureBuffer(pos + len);\n\t       limit = buffer.length;\n\t      }\n\t      for (var k = 0; k < len; ++k, ++pos) {\n\t       buffer[pos] = buffer[pos - dist];\n\t      }\n\t     }\n\t    };\n\t    return FlateStream;\n\t   }();\n\t   var PredictorStream = function PredictorStreamClosure() {\n\t    function PredictorStream(str, maybeLength, params) {\n\t     if (!isDict(params)) {\n\t      return str;\n\t     }\n\t     var predictor = this.predictor = params.get('Predictor') || 1;\n\t     if (predictor <= 1) {\n\t      return str;\n\t     }\n\t     if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n\t      error('Unsupported predictor: ' + predictor);\n\t     }\n\t     if (predictor === 2) {\n\t      this.readBlock = this.readBlockTiff;\n\t     } else {\n\t      this.readBlock = this.readBlockPng;\n\t     }\n\t     this.str = str;\n\t     this.dict = str.dict;\n\t     var colors = this.colors = params.get('Colors') || 1;\n\t     var bits = this.bits = params.get('BitsPerComponent') || 8;\n\t     var columns = this.columns = params.get('Columns') || 1;\n\t     this.pixBytes = colors * bits + 7 >> 3;\n\t     this.rowBytes = columns * colors * bits + 7 >> 3;\n\t     DecodeStream.call(this, maybeLength);\n\t     return this;\n\t    }\n\t    PredictorStream.prototype = Object.create(DecodeStream.prototype);\n\t    PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n\t     var rowBytes = this.rowBytes;\n\t     var bufferLength = this.bufferLength;\n\t     var buffer = this.ensureBuffer(bufferLength + rowBytes);\n\t     var bits = this.bits;\n\t     var colors = this.colors;\n\t     var rawBytes = this.str.getBytes(rowBytes);\n\t     this.eof = !rawBytes.length;\n\t     if (this.eof) {\n\t      return;\n\t     }\n\t     var inbuf = 0, outbuf = 0;\n\t     var inbits = 0, outbits = 0;\n\t     var pos = bufferLength;\n\t     var i;\n\t     if (bits === 1 && colors === 1) {\n\t      for (i = 0; i < rowBytes; ++i) {\n\t       var c = rawBytes[i] ^ inbuf;\n\t       c ^= c >> 1;\n\t       c ^= c >> 2;\n\t       c ^= c >> 4;\n\t       inbuf = (c & 1) << 7;\n\t       buffer[pos++] = c;\n\t      }\n\t     } else if (bits === 8) {\n\t      for (i = 0; i < colors; ++i) {\n\t       buffer[pos++] = rawBytes[i];\n\t      }\n\t      for (; i < rowBytes; ++i) {\n\t       buffer[pos] = buffer[pos - colors] + rawBytes[i];\n\t       pos++;\n\t      }\n\t     } else {\n\t      var compArray = new Uint8Array(colors + 1);\n\t      var bitMask = (1 << bits) - 1;\n\t      var j = 0, k = bufferLength;\n\t      var columns = this.columns;\n\t      for (i = 0; i < columns; ++i) {\n\t       for (var kk = 0; kk < colors; ++kk) {\n\t        if (inbits < bits) {\n\t         inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\n\t         inbits += 8;\n\t        }\n\t        compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n\t        inbits -= bits;\n\t        outbuf = outbuf << bits | compArray[kk];\n\t        outbits += bits;\n\t        if (outbits >= 8) {\n\t         buffer[k++] = outbuf >> outbits - 8 & 0xFF;\n\t         outbits -= 8;\n\t        }\n\t       }\n\t      }\n\t      if (outbits > 0) {\n\t       buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n\t      }\n\t     }\n\t     this.bufferLength += rowBytes;\n\t    };\n\t    PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n\t     var rowBytes = this.rowBytes;\n\t     var pixBytes = this.pixBytes;\n\t     var predictor = this.str.getByte();\n\t     var rawBytes = this.str.getBytes(rowBytes);\n\t     this.eof = !rawBytes.length;\n\t     if (this.eof) {\n\t      return;\n\t     }\n\t     var bufferLength = this.bufferLength;\n\t     var buffer = this.ensureBuffer(bufferLength + rowBytes);\n\t     var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n\t     if (prevRow.length === 0) {\n\t      prevRow = new Uint8Array(rowBytes);\n\t     }\n\t     var i, j = bufferLength, up, c;\n\t     switch (predictor) {\n\t     case 0:\n\t      for (i = 0; i < rowBytes; ++i) {\n\t       buffer[j++] = rawBytes[i];\n\t      }\n\t      break;\n\t     case 1:\n\t      for (i = 0; i < pixBytes; ++i) {\n\t       buffer[j++] = rawBytes[i];\n\t      }\n\t      for (; i < rowBytes; ++i) {\n\t       buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\n\t       j++;\n\t      }\n\t      break;\n\t     case 2:\n\t      for (i = 0; i < rowBytes; ++i) {\n\t       buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\n\t      }\n\t      break;\n\t     case 3:\n\t      for (i = 0; i < pixBytes; ++i) {\n\t       buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n\t      }\n\t      for (; i < rowBytes; ++i) {\n\t       buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\n\t       j++;\n\t      }\n\t      break;\n\t     case 4:\n\t      for (i = 0; i < pixBytes; ++i) {\n\t       up = prevRow[i];\n\t       c = rawBytes[i];\n\t       buffer[j++] = up + c;\n\t      }\n\t      for (; i < rowBytes; ++i) {\n\t       up = prevRow[i];\n\t       var upLeft = prevRow[i - pixBytes];\n\t       var left = buffer[j - pixBytes];\n\t       var p = left + up - upLeft;\n\t       var pa = p - left;\n\t       if (pa < 0) {\n\t        pa = -pa;\n\t       }\n\t       var pb = p - up;\n\t       if (pb < 0) {\n\t        pb = -pb;\n\t       }\n\t       var pc = p - upLeft;\n\t       if (pc < 0) {\n\t        pc = -pc;\n\t       }\n\t       c = rawBytes[i];\n\t       if (pa <= pb && pa <= pc) {\n\t        buffer[j++] = left + c;\n\t       } else if (pb <= pc) {\n\t        buffer[j++] = up + c;\n\t       } else {\n\t        buffer[j++] = upLeft + c;\n\t       }\n\t      }\n\t      break;\n\t     default:\n\t      error('Unsupported predictor: ' + predictor);\n\t     }\n\t     this.bufferLength += rowBytes;\n\t    };\n\t    return PredictorStream;\n\t   }();\n\t   var JpegStream = function JpegStreamClosure() {\n\t    function JpegStream(stream, maybeLength, dict, params) {\n\t     var ch;\n\t     while ((ch = stream.getByte()) !== -1) {\n\t      if (ch === 0xFF) {\n\t       stream.skip(-1);\n\t       break;\n\t      }\n\t     }\n\t     this.stream = stream;\n\t     this.maybeLength = maybeLength;\n\t     this.dict = dict;\n\t     this.params = params;\n\t     DecodeStream.call(this, maybeLength);\n\t    }\n\t    JpegStream.prototype = Object.create(DecodeStream.prototype);\n\t    Object.defineProperty(JpegStream.prototype, 'bytes', {\n\t     get: function JpegStream_bytes() {\n\t      return shadow(this, 'bytes', this.stream.getBytes(this.maybeLength));\n\t     },\n\t     configurable: true\n\t    });\n\t    JpegStream.prototype.ensureBuffer = function JpegStream_ensureBuffer(req) {\n\t     if (this.bufferLength) {\n\t      return;\n\t     }\n\t     var jpegImage = new JpegImage();\n\t     var decodeArr = this.dict.getArray('Decode', 'D');\n\t     if (this.forceRGB && isArray(decodeArr)) {\n\t      var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n\t      var decodeArrLength = decodeArr.length;\n\t      var transform = new Int32Array(decodeArrLength);\n\t      var transformNeeded = false;\n\t      var maxValue = (1 << bitsPerComponent) - 1;\n\t      for (var i = 0; i < decodeArrLength; i += 2) {\n\t       transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n\t       transform[i + 1] = decodeArr[i] * maxValue | 0;\n\t       if (transform[i] !== 256 || transform[i + 1] !== 0) {\n\t        transformNeeded = true;\n\t       }\n\t      }\n\t      if (transformNeeded) {\n\t       jpegImage.decodeTransform = transform;\n\t      }\n\t     }\n\t     if (isDict(this.params)) {\n\t      var colorTransform = this.params.get('ColorTransform');\n\t      if (isInt(colorTransform)) {\n\t       jpegImage.colorTransform = colorTransform;\n\t      }\n\t     }\n\t     jpegImage.parse(this.bytes);\n\t     var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\n\t     this.buffer = data;\n\t     this.bufferLength = data.length;\n\t     this.eof = true;\n\t    };\n\t    JpegStream.prototype.getBytes = function JpegStream_getBytes(length) {\n\t     this.ensureBuffer();\n\t     return this.buffer;\n\t    };\n\t    JpegStream.prototype.getIR = function JpegStream_getIR(forceDataSchema) {\n\t     return createObjectURL(this.bytes, 'image/jpeg', forceDataSchema);\n\t    };\n\t    return JpegStream;\n\t   }();\n\t   var JpxStream = function JpxStreamClosure() {\n\t    function JpxStream(stream, maybeLength, dict, params) {\n\t     this.stream = stream;\n\t     this.maybeLength = maybeLength;\n\t     this.dict = dict;\n\t     this.params = params;\n\t     DecodeStream.call(this, maybeLength);\n\t    }\n\t    JpxStream.prototype = Object.create(DecodeStream.prototype);\n\t    Object.defineProperty(JpxStream.prototype, 'bytes', {\n\t     get: function JpxStream_bytes() {\n\t      return shadow(this, 'bytes', this.stream.getBytes(this.maybeLength));\n\t     },\n\t     configurable: true\n\t    });\n\t    JpxStream.prototype.ensureBuffer = function JpxStream_ensureBuffer(req) {\n\t     if (this.bufferLength) {\n\t      return;\n\t     }\n\t     var jpxImage = new JpxImage();\n\t     jpxImage.parse(this.bytes);\n\t     var width = jpxImage.width;\n\t     var height = jpxImage.height;\n\t     var componentsCount = jpxImage.componentsCount;\n\t     var tileCount = jpxImage.tiles.length;\n\t     if (tileCount === 1) {\n\t      this.buffer = jpxImage.tiles[0].items;\n\t     } else {\n\t      var data = new Uint8Array(width * height * componentsCount);\n\t      for (var k = 0; k < tileCount; k++) {\n\t       var tileComponents = jpxImage.tiles[k];\n\t       var tileWidth = tileComponents.width;\n\t       var tileHeight = tileComponents.height;\n\t       var tileLeft = tileComponents.left;\n\t       var tileTop = tileComponents.top;\n\t       var src = tileComponents.items;\n\t       var srcPosition = 0;\n\t       var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n\t       var imgRowSize = width * componentsCount;\n\t       var tileRowSize = tileWidth * componentsCount;\n\t       for (var j = 0; j < tileHeight; j++) {\n\t        var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n\t        data.set(rowBytes, dataPosition);\n\t        srcPosition += tileRowSize;\n\t        dataPosition += imgRowSize;\n\t       }\n\t      }\n\t      this.buffer = data;\n\t     }\n\t     this.bufferLength = this.buffer.length;\n\t     this.eof = true;\n\t    };\n\t    return JpxStream;\n\t   }();\n\t   var Jbig2Stream = function Jbig2StreamClosure() {\n\t    function Jbig2Stream(stream, maybeLength, dict, params) {\n\t     this.stream = stream;\n\t     this.maybeLength = maybeLength;\n\t     this.dict = dict;\n\t     this.params = params;\n\t     DecodeStream.call(this, maybeLength);\n\t    }\n\t    Jbig2Stream.prototype = Object.create(DecodeStream.prototype);\n\t    Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n\t     get: function Jbig2Stream_bytes() {\n\t      return shadow(this, 'bytes', this.stream.getBytes(this.maybeLength));\n\t     },\n\t     configurable: true\n\t    });\n\t    Jbig2Stream.prototype.ensureBuffer = function Jbig2Stream_ensureBuffer(req) {\n\t     if (this.bufferLength) {\n\t      return;\n\t     }\n\t     var jbig2Image = new Jbig2Image();\n\t     var chunks = [];\n\t     if (isDict(this.params)) {\n\t      var globalsStream = this.params.get('JBIG2Globals');\n\t      if (isStream(globalsStream)) {\n\t       var globals = globalsStream.getBytes();\n\t       chunks.push({\n\t        data: globals,\n\t        start: 0,\n\t        end: globals.length\n\t       });\n\t      }\n\t     }\n\t     chunks.push({\n\t      data: this.bytes,\n\t      start: 0,\n\t      end: this.bytes.length\n\t     });\n\t     var data = jbig2Image.parseChunks(chunks);\n\t     var dataLength = data.length;\n\t     for (var i = 0; i < dataLength; i++) {\n\t      data[i] ^= 0xFF;\n\t     }\n\t     this.buffer = data;\n\t     this.bufferLength = dataLength;\n\t     this.eof = true;\n\t    };\n\t    return Jbig2Stream;\n\t   }();\n\t   var DecryptStream = function DecryptStreamClosure() {\n\t    function DecryptStream(str, maybeLength, decrypt) {\n\t     this.str = str;\n\t     this.dict = str.dict;\n\t     this.decrypt = decrypt;\n\t     this.nextChunk = null;\n\t     this.initialized = false;\n\t     DecodeStream.call(this, maybeLength);\n\t    }\n\t    var chunkSize = 512;\n\t    DecryptStream.prototype = Object.create(DecodeStream.prototype);\n\t    DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n\t     var chunk;\n\t     if (this.initialized) {\n\t      chunk = this.nextChunk;\n\t     } else {\n\t      chunk = this.str.getBytes(chunkSize);\n\t      this.initialized = true;\n\t     }\n\t     if (!chunk || chunk.length === 0) {\n\t      this.eof = true;\n\t      return;\n\t     }\n\t     this.nextChunk = this.str.getBytes(chunkSize);\n\t     var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n\t     var decrypt = this.decrypt;\n\t     chunk = decrypt(chunk, !hasMoreData);\n\t     var bufferLength = this.bufferLength;\n\t     var i, n = chunk.length;\n\t     var buffer = this.ensureBuffer(bufferLength + n);\n\t     for (i = 0; i < n; i++) {\n\t      buffer[bufferLength++] = chunk[i];\n\t     }\n\t     this.bufferLength = bufferLength;\n\t    };\n\t    return DecryptStream;\n\t   }();\n\t   var Ascii85Stream = function Ascii85StreamClosure() {\n\t    function Ascii85Stream(str, maybeLength) {\n\t     this.str = str;\n\t     this.dict = str.dict;\n\t     this.input = new Uint8Array(5);\n\t     if (maybeLength) {\n\t      maybeLength = 0.8 * maybeLength;\n\t     }\n\t     DecodeStream.call(this, maybeLength);\n\t    }\n\t    Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n\t    Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n\t     var TILDA_CHAR = 0x7E;\n\t     var Z_LOWER_CHAR = 0x7A;\n\t     var EOF = -1;\n\t     var str = this.str;\n\t     var c = str.getByte();\n\t     while (isSpace(c)) {\n\t      c = str.getByte();\n\t     }\n\t     if (c === EOF || c === TILDA_CHAR) {\n\t      this.eof = true;\n\t      return;\n\t     }\n\t     var bufferLength = this.bufferLength, buffer;\n\t     var i;\n\t     if (c === Z_LOWER_CHAR) {\n\t      buffer = this.ensureBuffer(bufferLength + 4);\n\t      for (i = 0; i < 4; ++i) {\n\t       buffer[bufferLength + i] = 0;\n\t      }\n\t      this.bufferLength += 4;\n\t     } else {\n\t      var input = this.input;\n\t      input[0] = c;\n\t      for (i = 1; i < 5; ++i) {\n\t       c = str.getByte();\n\t       while (isSpace(c)) {\n\t        c = str.getByte();\n\t       }\n\t       input[i] = c;\n\t       if (c === EOF || c === TILDA_CHAR) {\n\t        break;\n\t       }\n\t      }\n\t      buffer = this.ensureBuffer(bufferLength + i - 1);\n\t      this.bufferLength += i - 1;\n\t      if (i < 5) {\n\t       for (; i < 5; ++i) {\n\t        input[i] = 0x21 + 84;\n\t       }\n\t       this.eof = true;\n\t      }\n\t      var t = 0;\n\t      for (i = 0; i < 5; ++i) {\n\t       t = t * 85 + (input[i] - 0x21);\n\t      }\n\t      for (i = 3; i >= 0; --i) {\n\t       buffer[bufferLength + i] = t & 0xFF;\n\t       t >>= 8;\n\t      }\n\t     }\n\t    };\n\t    return Ascii85Stream;\n\t   }();\n\t   var AsciiHexStream = function AsciiHexStreamClosure() {\n\t    function AsciiHexStream(str, maybeLength) {\n\t     this.str = str;\n\t     this.dict = str.dict;\n\t     this.firstDigit = -1;\n\t     if (maybeLength) {\n\t      maybeLength = 0.5 * maybeLength;\n\t     }\n\t     DecodeStream.call(this, maybeLength);\n\t    }\n\t    AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n\t    AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n\t     var UPSTREAM_BLOCK_SIZE = 8000;\n\t     var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n\t     if (!bytes.length) {\n\t      this.eof = true;\n\t      return;\n\t     }\n\t     var maxDecodeLength = bytes.length + 1 >> 1;\n\t     var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n\t     var bufferLength = this.bufferLength;\n\t     var firstDigit = this.firstDigit;\n\t     for (var i = 0, ii = bytes.length; i < ii; i++) {\n\t      var ch = bytes[i], digit;\n\t      if (ch >= 0x30 && ch <= 0x39) {\n\t       digit = ch & 0x0F;\n\t      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n\t       digit = (ch & 0x0F) + 9;\n\t      } else if (ch === 0x3E) {\n\t       this.eof = true;\n\t       break;\n\t      } else {\n\t       continue;\n\t      }\n\t      if (firstDigit < 0) {\n\t       firstDigit = digit;\n\t      } else {\n\t       buffer[bufferLength++] = firstDigit << 4 | digit;\n\t       firstDigit = -1;\n\t      }\n\t     }\n\t     if (firstDigit >= 0 && this.eof) {\n\t      buffer[bufferLength++] = firstDigit << 4;\n\t      firstDigit = -1;\n\t     }\n\t     this.firstDigit = firstDigit;\n\t     this.bufferLength = bufferLength;\n\t    };\n\t    return AsciiHexStream;\n\t   }();\n\t   var RunLengthStream = function RunLengthStreamClosure() {\n\t    function RunLengthStream(str, maybeLength) {\n\t     this.str = str;\n\t     this.dict = str.dict;\n\t     DecodeStream.call(this, maybeLength);\n\t    }\n\t    RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n\t    RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n\t     var repeatHeader = this.str.getBytes(2);\n\t     if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n\t      this.eof = true;\n\t      return;\n\t     }\n\t     var buffer;\n\t     var bufferLength = this.bufferLength;\n\t     var n = repeatHeader[0];\n\t     if (n < 128) {\n\t      buffer = this.ensureBuffer(bufferLength + n + 1);\n\t      buffer[bufferLength++] = repeatHeader[1];\n\t      if (n > 0) {\n\t       var source = this.str.getBytes(n);\n\t       buffer.set(source, bufferLength);\n\t       bufferLength += n;\n\t      }\n\t     } else {\n\t      n = 257 - n;\n\t      var b = repeatHeader[1];\n\t      buffer = this.ensureBuffer(bufferLength + n + 1);\n\t      for (var i = 0; i < n; i++) {\n\t       buffer[bufferLength++] = b;\n\t      }\n\t     }\n\t     this.bufferLength = bufferLength;\n\t    };\n\t    return RunLengthStream;\n\t   }();\n\t   var CCITTFaxStream = function CCITTFaxStreamClosure() {\n\t    var ccittEOL = -2;\n\t    var ccittEOF = -1;\n\t    var twoDimPass = 0;\n\t    var twoDimHoriz = 1;\n\t    var twoDimVert0 = 2;\n\t    var twoDimVertR1 = 3;\n\t    var twoDimVertL1 = 4;\n\t    var twoDimVertR2 = 5;\n\t    var twoDimVertL2 = 6;\n\t    var twoDimVertR3 = 7;\n\t    var twoDimVertL3 = 8;\n\t    var twoDimTable = [\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      7,\n\t      twoDimVertL3\n\t     ],\n\t     [\n\t      7,\n\t      twoDimVertR3\n\t     ],\n\t     [\n\t      6,\n\t      twoDimVertL2\n\t     ],\n\t     [\n\t      6,\n\t      twoDimVertL2\n\t     ],\n\t     [\n\t      6,\n\t      twoDimVertR2\n\t     ],\n\t     [\n\t      6,\n\t      twoDimVertR2\n\t     ],\n\t     [\n\t      4,\n\t      twoDimPass\n\t     ],\n\t     [\n\t      4,\n\t      twoDimPass\n\t     ],\n\t     [\n\t      4,\n\t      twoDimPass\n\t     ],\n\t     [\n\t      4,\n\t      twoDimPass\n\t     ],\n\t     [\n\t      4,\n\t      twoDimPass\n\t     ],\n\t     [\n\t      4,\n\t      twoDimPass\n\t     ],\n\t     [\n\t      4,\n\t      twoDimPass\n\t     ],\n\t     [\n\t      4,\n\t      twoDimPass\n\t     ],\n\t     [\n\t      3,\n\t      twoDimHoriz\n\t     ],\n\t     [\n\t      3,\n\t      twoDimHoriz\n\t     ],\n\t     [\n\t      3,\n\t      twoDimHoriz\n\t     ],\n\t     [\n\t      3,\n\t      twoDimHoriz\n\t     ],\n\t     [\n\t      3,\n\t      twoDimHoriz\n\t     ],\n\t     [\n\t      3,\n\t      twoDimHoriz\n\t     ],\n\t     [\n\t      3,\n\t      twoDimHoriz\n\t     ],\n\t     [\n\t      3,\n\t      twoDimHoriz\n\t     ],\n\t     [\n\t      3,\n\t      twoDimHoriz\n\t     ],\n\t     [\n\t      3,\n\t      twoDimHoriz\n\t     ],\n\t     [\n\t      3,\n\t      twoDimHoriz\n\t     ],\n\t     [\n\t      3,\n\t      twoDimHoriz\n\t     ],\n\t     [\n\t      3,\n\t      twoDimHoriz\n\t     ],\n\t     [\n\t      3,\n\t      twoDimHoriz\n\t     ],\n\t     [\n\t      3,\n\t      twoDimHoriz\n\t     ],\n\t     [\n\t      3,\n\t      twoDimHoriz\n\t     ],\n\t     [\n\t      3,\n\t      twoDimVertL1\n\t     ],\n\t     [\n\t      3,\n\t      twoDimVertL1\n\t     ],\n\t     [\n\t      3,\n\t      twoDimVertL1\n\t     ],\n\t     [\n\t      3,\n\t      twoDimVertL1\n\t     ],\n\t     [\n\t      3,\n\t      twoDimVertL1\n\t     ],\n\t     [\n\t      3,\n\t      twoDimVertL1\n\t     ],\n\t     [\n\t      3,\n\t      twoDimVertL1\n\t     ],\n\t     [\n\t      3,\n\t      twoDimVertL1\n\t     ],\n\t     [\n\t      3,\n\t      twoDimVertL1\n\t     ],\n\t     [\n\t      3,\n\t      twoDimVertL1\n\t     ],\n\t     [\n\t      3,\n\t      twoDimVertL1\n\t     ],\n\t     [\n\t      3,\n\t      twoDimVertL1\n\t     ],\n\t     [\n\t      3,\n\t      twoDimVertL1\n\t     ],\n\t     [\n\t      3,\n\t      twoDimVertL1\n\t     ],\n\t     [\n\t      3,\n\t      twoDimVertL1\n\t     ],\n\t     [\n\t      3,\n\t      twoDimVertL1\n\t     ],\n\t     [\n\t      3,\n\t      twoDimVertR1\n\t     ],\n\t     [\n\t      3,\n\t      twoDimVertR1\n\t     ],\n\t     [\n\t      3,\n\t      twoDimVertR1\n\t     ],\n\t     [\n\t      3,\n\t      twoDimVertR1\n\t     ],\n\t     [\n\t      3,\n\t      twoDimVertR1\n\t     ],\n\t     [\n\t      3,\n\t      twoDimVertR1\n\t     ],\n\t     [\n\t      3,\n\t      twoDimVertR1\n\t     ],\n\t     [\n\t      3,\n\t      twoDimVertR1\n\t     ],\n\t     [\n\t      3,\n\t      twoDimVertR1\n\t     ],\n\t     [\n\t      3,\n\t      twoDimVertR1\n\t     ],\n\t     [\n\t      3,\n\t      twoDimVertR1\n\t     ],\n\t     [\n\t      3,\n\t      twoDimVertR1\n\t     ],\n\t     [\n\t      3,\n\t      twoDimVertR1\n\t     ],\n\t     [\n\t      3,\n\t      twoDimVertR1\n\t     ],\n\t     [\n\t      3,\n\t      twoDimVertR1\n\t     ],\n\t     [\n\t      3,\n\t      twoDimVertR1\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ],\n\t     [\n\t      1,\n\t      twoDimVert0\n\t     ]\n\t    ];\n\t    var whiteTable1 = [\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      12,\n\t      ccittEOL\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      11,\n\t      1792\n\t     ],\n\t     [\n\t      11,\n\t      1792\n\t     ],\n\t     [\n\t      12,\n\t      1984\n\t     ],\n\t     [\n\t      12,\n\t      2048\n\t     ],\n\t     [\n\t      12,\n\t      2112\n\t     ],\n\t     [\n\t      12,\n\t      2176\n\t     ],\n\t     [\n\t      12,\n\t      2240\n\t     ],\n\t     [\n\t      12,\n\t      2304\n\t     ],\n\t     [\n\t      11,\n\t      1856\n\t     ],\n\t     [\n\t      11,\n\t      1856\n\t     ],\n\t     [\n\t      11,\n\t      1920\n\t     ],\n\t     [\n\t      11,\n\t      1920\n\t     ],\n\t     [\n\t      12,\n\t      2368\n\t     ],\n\t     [\n\t      12,\n\t      2432\n\t     ],\n\t     [\n\t      12,\n\t      2496\n\t     ],\n\t     [\n\t      12,\n\t      2560\n\t     ]\n\t    ];\n\t    var whiteTable2 = [\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      8,\n\t      29\n\t     ],\n\t     [\n\t      8,\n\t      29\n\t     ],\n\t     [\n\t      8,\n\t      30\n\t     ],\n\t     [\n\t      8,\n\t      30\n\t     ],\n\t     [\n\t      8,\n\t      45\n\t     ],\n\t     [\n\t      8,\n\t      45\n\t     ],\n\t     [\n\t      8,\n\t      46\n\t     ],\n\t     [\n\t      8,\n\t      46\n\t     ],\n\t     [\n\t      7,\n\t      22\n\t     ],\n\t     [\n\t      7,\n\t      22\n\t     ],\n\t     [\n\t      7,\n\t      22\n\t     ],\n\t     [\n\t      7,\n\t      22\n\t     ],\n\t     [\n\t      7,\n\t      23\n\t     ],\n\t     [\n\t      7,\n\t      23\n\t     ],\n\t     [\n\t      7,\n\t      23\n\t     ],\n\t     [\n\t      7,\n\t      23\n\t     ],\n\t     [\n\t      8,\n\t      47\n\t     ],\n\t     [\n\t      8,\n\t      47\n\t     ],\n\t     [\n\t      8,\n\t      48\n\t     ],\n\t     [\n\t      8,\n\t      48\n\t     ],\n\t     [\n\t      6,\n\t      13\n\t     ],\n\t     [\n\t      6,\n\t      13\n\t     ],\n\t     [\n\t      6,\n\t      13\n\t     ],\n\t     [\n\t      6,\n\t      13\n\t     ],\n\t     [\n\t      6,\n\t      13\n\t     ],\n\t     [\n\t      6,\n\t      13\n\t     ],\n\t     [\n\t      6,\n\t      13\n\t     ],\n\t     [\n\t      6,\n\t      13\n\t     ],\n\t     [\n\t      7,\n\t      20\n\t     ],\n\t     [\n\t      7,\n\t      20\n\t     ],\n\t     [\n\t      7,\n\t      20\n\t     ],\n\t     [\n\t      7,\n\t      20\n\t     ],\n\t     [\n\t      8,\n\t      33\n\t     ],\n\t     [\n\t      8,\n\t      33\n\t     ],\n\t     [\n\t      8,\n\t      34\n\t     ],\n\t     [\n\t      8,\n\t      34\n\t     ],\n\t     [\n\t      8,\n\t      35\n\t     ],\n\t     [\n\t      8,\n\t      35\n\t     ],\n\t     [\n\t      8,\n\t      36\n\t     ],\n\t     [\n\t      8,\n\t      36\n\t     ],\n\t     [\n\t      8,\n\t      37\n\t     ],\n\t     [\n\t      8,\n\t      37\n\t     ],\n\t     [\n\t      8,\n\t      38\n\t     ],\n\t     [\n\t      8,\n\t      38\n\t     ],\n\t     [\n\t      7,\n\t      19\n\t     ],\n\t     [\n\t      7,\n\t      19\n\t     ],\n\t     [\n\t      7,\n\t      19\n\t     ],\n\t     [\n\t      7,\n\t      19\n\t     ],\n\t     [\n\t      8,\n\t      31\n\t     ],\n\t     [\n\t      8,\n\t      31\n\t     ],\n\t     [\n\t      8,\n\t      32\n\t     ],\n\t     [\n\t      8,\n\t      32\n\t     ],\n\t     [\n\t      6,\n\t      1\n\t     ],\n\t     [\n\t      6,\n\t      1\n\t     ],\n\t     [\n\t      6,\n\t      1\n\t     ],\n\t     [\n\t      6,\n\t      1\n\t     ],\n\t     [\n\t      6,\n\t      1\n\t     ],\n\t     [\n\t      6,\n\t      1\n\t     ],\n\t     [\n\t      6,\n\t      1\n\t     ],\n\t     [\n\t      6,\n\t      1\n\t     ],\n\t     [\n\t      6,\n\t      12\n\t     ],\n\t     [\n\t      6,\n\t      12\n\t     ],\n\t     [\n\t      6,\n\t      12\n\t     ],\n\t     [\n\t      6,\n\t      12\n\t     ],\n\t     [\n\t      6,\n\t      12\n\t     ],\n\t     [\n\t      6,\n\t      12\n\t     ],\n\t     [\n\t      6,\n\t      12\n\t     ],\n\t     [\n\t      6,\n\t      12\n\t     ],\n\t     [\n\t      8,\n\t      53\n\t     ],\n\t     [\n\t      8,\n\t      53\n\t     ],\n\t     [\n\t      8,\n\t      54\n\t     ],\n\t     [\n\t      8,\n\t      54\n\t     ],\n\t     [\n\t      7,\n\t      26\n\t     ],\n\t     [\n\t      7,\n\t      26\n\t     ],\n\t     [\n\t      7,\n\t      26\n\t     ],\n\t     [\n\t      7,\n\t      26\n\t     ],\n\t     [\n\t      8,\n\t      39\n\t     ],\n\t     [\n\t      8,\n\t      39\n\t     ],\n\t     [\n\t      8,\n\t      40\n\t     ],\n\t     [\n\t      8,\n\t      40\n\t     ],\n\t     [\n\t      8,\n\t      41\n\t     ],\n\t     [\n\t      8,\n\t      41\n\t     ],\n\t     [\n\t      8,\n\t      42\n\t     ],\n\t     [\n\t      8,\n\t      42\n\t     ],\n\t     [\n\t      8,\n\t      43\n\t     ],\n\t     [\n\t      8,\n\t      43\n\t     ],\n\t     [\n\t      8,\n\t      44\n\t     ],\n\t     [\n\t      8,\n\t      44\n\t     ],\n\t     [\n\t      7,\n\t      21\n\t     ],\n\t     [\n\t      7,\n\t      21\n\t     ],\n\t     [\n\t      7,\n\t      21\n\t     ],\n\t     [\n\t      7,\n\t      21\n\t     ],\n\t     [\n\t      7,\n\t      28\n\t     ],\n\t     [\n\t      7,\n\t      28\n\t     ],\n\t     [\n\t      7,\n\t      28\n\t     ],\n\t     [\n\t      7,\n\t      28\n\t     ],\n\t     [\n\t      8,\n\t      61\n\t     ],\n\t     [\n\t      8,\n\t      61\n\t     ],\n\t     [\n\t      8,\n\t      62\n\t     ],\n\t     [\n\t      8,\n\t      62\n\t     ],\n\t     [\n\t      8,\n\t      63\n\t     ],\n\t     [\n\t      8,\n\t      63\n\t     ],\n\t     [\n\t      8,\n\t      0\n\t     ],\n\t     [\n\t      8,\n\t      0\n\t     ],\n\t     [\n\t      8,\n\t      320\n\t     ],\n\t     [\n\t      8,\n\t      320\n\t     ],\n\t     [\n\t      8,\n\t      384\n\t     ],\n\t     [\n\t      8,\n\t      384\n\t     ],\n\t     [\n\t      5,\n\t      10\n\t     ],\n\t     [\n\t      5,\n\t      10\n\t     ],\n\t     [\n\t      5,\n\t      10\n\t     ],\n\t     [\n\t      5,\n\t      10\n\t     ],\n\t     [\n\t      5,\n\t      10\n\t     ],\n\t     [\n\t      5,\n\t      10\n\t     ],\n\t     [\n\t      5,\n\t      10\n\t     ],\n\t     [\n\t      5,\n\t      10\n\t     ],\n\t     [\n\t      5,\n\t      10\n\t     ],\n\t     [\n\t      5,\n\t      10\n\t     ],\n\t     [\n\t      5,\n\t      10\n\t     ],\n\t     [\n\t      5,\n\t      10\n\t     ],\n\t     [\n\t      5,\n\t      10\n\t     ],\n\t     [\n\t      5,\n\t      10\n\t     ],\n\t     [\n\t      5,\n\t      10\n\t     ],\n\t     [\n\t      5,\n\t      10\n\t     ],\n\t     [\n\t      5,\n\t      11\n\t     ],\n\t     [\n\t      5,\n\t      11\n\t     ],\n\t     [\n\t      5,\n\t      11\n\t     ],\n\t     [\n\t      5,\n\t      11\n\t     ],\n\t     [\n\t      5,\n\t      11\n\t     ],\n\t     [\n\t      5,\n\t      11\n\t     ],\n\t     [\n\t      5,\n\t      11\n\t     ],\n\t     [\n\t      5,\n\t      11\n\t     ],\n\t     [\n\t      5,\n\t      11\n\t     ],\n\t     [\n\t      5,\n\t      11\n\t     ],\n\t     [\n\t      5,\n\t      11\n\t     ],\n\t     [\n\t      5,\n\t      11\n\t     ],\n\t     [\n\t      5,\n\t      11\n\t     ],\n\t     [\n\t      5,\n\t      11\n\t     ],\n\t     [\n\t      5,\n\t      11\n\t     ],\n\t     [\n\t      5,\n\t      11\n\t     ],\n\t     [\n\t      7,\n\t      27\n\t     ],\n\t     [\n\t      7,\n\t      27\n\t     ],\n\t     [\n\t      7,\n\t      27\n\t     ],\n\t     [\n\t      7,\n\t      27\n\t     ],\n\t     [\n\t      8,\n\t      59\n\t     ],\n\t     [\n\t      8,\n\t      59\n\t     ],\n\t     [\n\t      8,\n\t      60\n\t     ],\n\t     [\n\t      8,\n\t      60\n\t     ],\n\t     [\n\t      9,\n\t      1472\n\t     ],\n\t     [\n\t      9,\n\t      1536\n\t     ],\n\t     [\n\t      9,\n\t      1600\n\t     ],\n\t     [\n\t      9,\n\t      1728\n\t     ],\n\t     [\n\t      7,\n\t      18\n\t     ],\n\t     [\n\t      7,\n\t      18\n\t     ],\n\t     [\n\t      7,\n\t      18\n\t     ],\n\t     [\n\t      7,\n\t      18\n\t     ],\n\t     [\n\t      7,\n\t      24\n\t     ],\n\t     [\n\t      7,\n\t      24\n\t     ],\n\t     [\n\t      7,\n\t      24\n\t     ],\n\t     [\n\t      7,\n\t      24\n\t     ],\n\t     [\n\t      8,\n\t      49\n\t     ],\n\t     [\n\t      8,\n\t      49\n\t     ],\n\t     [\n\t      8,\n\t      50\n\t     ],\n\t     [\n\t      8,\n\t      50\n\t     ],\n\t     [\n\t      8,\n\t      51\n\t     ],\n\t     [\n\t      8,\n\t      51\n\t     ],\n\t     [\n\t      8,\n\t      52\n\t     ],\n\t     [\n\t      8,\n\t      52\n\t     ],\n\t     [\n\t      7,\n\t      25\n\t     ],\n\t     [\n\t      7,\n\t      25\n\t     ],\n\t     [\n\t      7,\n\t      25\n\t     ],\n\t     [\n\t      7,\n\t      25\n\t     ],\n\t     [\n\t      8,\n\t      55\n\t     ],\n\t     [\n\t      8,\n\t      55\n\t     ],\n\t     [\n\t      8,\n\t      56\n\t     ],\n\t     [\n\t      8,\n\t      56\n\t     ],\n\t     [\n\t      8,\n\t      57\n\t     ],\n\t     [\n\t      8,\n\t      57\n\t     ],\n\t     [\n\t      8,\n\t      58\n\t     ],\n\t     [\n\t      8,\n\t      58\n\t     ],\n\t     [\n\t      6,\n\t      192\n\t     ],\n\t     [\n\t      6,\n\t      192\n\t     ],\n\t     [\n\t      6,\n\t      192\n\t     ],\n\t     [\n\t      6,\n\t      192\n\t     ],\n\t     [\n\t      6,\n\t      192\n\t     ],\n\t     [\n\t      6,\n\t      192\n\t     ],\n\t     [\n\t      6,\n\t      192\n\t     ],\n\t     [\n\t      6,\n\t      192\n\t     ],\n\t     [\n\t      6,\n\t      1664\n\t     ],\n\t     [\n\t      6,\n\t      1664\n\t     ],\n\t     [\n\t      6,\n\t      1664\n\t     ],\n\t     [\n\t      6,\n\t      1664\n\t     ],\n\t     [\n\t      6,\n\t      1664\n\t     ],\n\t     [\n\t      6,\n\t      1664\n\t     ],\n\t     [\n\t      6,\n\t      1664\n\t     ],\n\t     [\n\t      6,\n\t      1664\n\t     ],\n\t     [\n\t      8,\n\t      448\n\t     ],\n\t     [\n\t      8,\n\t      448\n\t     ],\n\t     [\n\t      8,\n\t      512\n\t     ],\n\t     [\n\t      8,\n\t      512\n\t     ],\n\t     [\n\t      9,\n\t      704\n\t     ],\n\t     [\n\t      9,\n\t      768\n\t     ],\n\t     [\n\t      8,\n\t      640\n\t     ],\n\t     [\n\t      8,\n\t      640\n\t     ],\n\t     [\n\t      8,\n\t      576\n\t     ],\n\t     [\n\t      8,\n\t      576\n\t     ],\n\t     [\n\t      9,\n\t      832\n\t     ],\n\t     [\n\t      9,\n\t      896\n\t     ],\n\t     [\n\t      9,\n\t      960\n\t     ],\n\t     [\n\t      9,\n\t      1024\n\t     ],\n\t     [\n\t      9,\n\t      1088\n\t     ],\n\t     [\n\t      9,\n\t      1152\n\t     ],\n\t     [\n\t      9,\n\t      1216\n\t     ],\n\t     [\n\t      9,\n\t      1280\n\t     ],\n\t     [\n\t      9,\n\t      1344\n\t     ],\n\t     [\n\t      9,\n\t      1408\n\t     ],\n\t     [\n\t      7,\n\t      256\n\t     ],\n\t     [\n\t      7,\n\t      256\n\t     ],\n\t     [\n\t      7,\n\t      256\n\t     ],\n\t     [\n\t      7,\n\t      256\n\t     ],\n\t     [\n\t      4,\n\t      2\n\t     ],\n\t     [\n\t      4,\n\t      2\n\t     ],\n\t     [\n\t      4,\n\t      2\n\t     ],\n\t     [\n\t      4,\n\t      2\n\t     ],\n\t     [\n\t      4,\n\t      2\n\t     ],\n\t     [\n\t      4,\n\t      2\n\t     ],\n\t     [\n\t      4,\n\t      2\n\t     ],\n\t     [\n\t      4,\n\t      2\n\t     ],\n\t     [\n\t      4,\n\t      2\n\t     ],\n\t     [\n\t      4,\n\t      2\n\t     ],\n\t     [\n\t      4,\n\t      2\n\t     ],\n\t     [\n\t      4,\n\t      2\n\t     ],\n\t     [\n\t      4,\n\t      2\n\t     ],\n\t     [\n\t      4,\n\t      2\n\t     ],\n\t     [\n\t      4,\n\t      2\n\t     ],\n\t     [\n\t      4,\n\t      2\n\t     ],\n\t     [\n\t      4,\n\t      2\n\t     ],\n\t     [\n\t      4,\n\t      2\n\t     ],\n\t     [\n\t      4,\n\t      2\n\t     ],\n\t     [\n\t      4,\n\t      2\n\t     ],\n\t     [\n\t      4,\n\t      2\n\t     ],\n\t     [\n\t      4,\n\t      2\n\t     ],\n\t     [\n\t      4,\n\t      2\n\t     ],\n\t     [\n\t      4,\n\t      2\n\t     ],\n\t     [\n\t      4,\n\t      2\n\t     ],\n\t     [\n\t      4,\n\t      2\n\t     ],\n\t     [\n\t      4,\n\t      2\n\t     ],\n\t     [\n\t      4,\n\t      2\n\t     ],\n\t     [\n\t      4,\n\t      2\n\t     ],\n\t     [\n\t      4,\n\t      2\n\t     ],\n\t     [\n\t      4,\n\t      2\n\t     ],\n\t     [\n\t      4,\n\t      2\n\t     ],\n\t     [\n\t      4,\n\t      3\n\t     ],\n\t     [\n\t      4,\n\t      3\n\t     ],\n\t     [\n\t      4,\n\t      3\n\t     ],\n\t     [\n\t      4,\n\t      3\n\t     ],\n\t     [\n\t      4,\n\t      3\n\t     ],\n\t     [\n\t      4,\n\t      3\n\t     ],\n\t     [\n\t      4,\n\t      3\n\t     ],\n\t     [\n\t      4,\n\t      3\n\t     ],\n\t     [\n\t      4,\n\t      3\n\t     ],\n\t     [\n\t      4,\n\t      3\n\t     ],\n\t     [\n\t      4,\n\t      3\n\t     ],\n\t     [\n\t      4,\n\t      3\n\t     ],\n\t     [\n\t      4,\n\t      3\n\t     ],\n\t     [\n\t      4,\n\t      3\n\t     ],\n\t     [\n\t      4,\n\t      3\n\t     ],\n\t     [\n\t      4,\n\t      3\n\t     ],\n\t     [\n\t      4,\n\t      3\n\t     ],\n\t     [\n\t      4,\n\t      3\n\t     ],\n\t     [\n\t      4,\n\t      3\n\t     ],\n\t     [\n\t      4,\n\t      3\n\t     ],\n\t     [\n\t      4,\n\t      3\n\t     ],\n\t     [\n\t      4,\n\t      3\n\t     ],\n\t     [\n\t      4,\n\t      3\n\t     ],\n\t     [\n\t      4,\n\t      3\n\t     ],\n\t     [\n\t      4,\n\t      3\n\t     ],\n\t     [\n\t      4,\n\t      3\n\t     ],\n\t     [\n\t      4,\n\t      3\n\t     ],\n\t     [\n\t      4,\n\t      3\n\t     ],\n\t     [\n\t      4,\n\t      3\n\t     ],\n\t     [\n\t      4,\n\t      3\n\t     ],\n\t     [\n\t      4,\n\t      3\n\t     ],\n\t     [\n\t      4,\n\t      3\n\t     ],\n\t     [\n\t      5,\n\t      128\n\t     ],\n\t     [\n\t      5,\n\t      128\n\t     ],\n\t     [\n\t      5,\n\t      128\n\t     ],\n\t     [\n\t      5,\n\t      128\n\t     ],\n\t     [\n\t      5,\n\t      128\n\t     ],\n\t     [\n\t      5,\n\t      128\n\t     ],\n\t     [\n\t      5,\n\t      128\n\t     ],\n\t     [\n\t      5,\n\t      128\n\t     ],\n\t     [\n\t      5,\n\t      128\n\t     ],\n\t     [\n\t      5,\n\t      128\n\t     ],\n\t     [\n\t      5,\n\t      128\n\t     ],\n\t     [\n\t      5,\n\t      128\n\t     ],\n\t     [\n\t      5,\n\t      128\n\t     ],\n\t     [\n\t      5,\n\t      128\n\t     ],\n\t     [\n\t      5,\n\t      128\n\t     ],\n\t     [\n\t      5,\n\t      128\n\t     ],\n\t     [\n\t      5,\n\t      8\n\t     ],\n\t     [\n\t      5,\n\t      8\n\t     ],\n\t     [\n\t      5,\n\t      8\n\t     ],\n\t     [\n\t      5,\n\t      8\n\t     ],\n\t     [\n\t      5,\n\t      8\n\t     ],\n\t     [\n\t      5,\n\t      8\n\t     ],\n\t     [\n\t      5,\n\t      8\n\t     ],\n\t     [\n\t      5,\n\t      8\n\t     ],\n\t     [\n\t      5,\n\t      8\n\t     ],\n\t     [\n\t      5,\n\t      8\n\t     ],\n\t     [\n\t      5,\n\t      8\n\t     ],\n\t     [\n\t      5,\n\t      8\n\t     ],\n\t     [\n\t      5,\n\t      8\n\t     ],\n\t     [\n\t      5,\n\t      8\n\t     ],\n\t     [\n\t      5,\n\t      8\n\t     ],\n\t     [\n\t      5,\n\t      8\n\t     ],\n\t     [\n\t      5,\n\t      9\n\t     ],\n\t     [\n\t      5,\n\t      9\n\t     ],\n\t     [\n\t      5,\n\t      9\n\t     ],\n\t     [\n\t      5,\n\t      9\n\t     ],\n\t     [\n\t      5,\n\t      9\n\t     ],\n\t     [\n\t      5,\n\t      9\n\t     ],\n\t     [\n\t      5,\n\t      9\n\t     ],\n\t     [\n\t      5,\n\t      9\n\t     ],\n\t     [\n\t      5,\n\t      9\n\t     ],\n\t     [\n\t      5,\n\t      9\n\t     ],\n\t     [\n\t      5,\n\t      9\n\t     ],\n\t     [\n\t      5,\n\t      9\n\t     ],\n\t     [\n\t      5,\n\t      9\n\t     ],\n\t     [\n\t      5,\n\t      9\n\t     ],\n\t     [\n\t      5,\n\t      9\n\t     ],\n\t     [\n\t      5,\n\t      9\n\t     ],\n\t     [\n\t      6,\n\t      16\n\t     ],\n\t     [\n\t      6,\n\t      16\n\t     ],\n\t     [\n\t      6,\n\t      16\n\t     ],\n\t     [\n\t      6,\n\t      16\n\t     ],\n\t     [\n\t      6,\n\t      16\n\t     ],\n\t     [\n\t      6,\n\t      16\n\t     ],\n\t     [\n\t      6,\n\t      16\n\t     ],\n\t     [\n\t      6,\n\t      16\n\t     ],\n\t     [\n\t      6,\n\t      17\n\t     ],\n\t     [\n\t      6,\n\t      17\n\t     ],\n\t     [\n\t      6,\n\t      17\n\t     ],\n\t     [\n\t      6,\n\t      17\n\t     ],\n\t     [\n\t      6,\n\t      17\n\t     ],\n\t     [\n\t      6,\n\t      17\n\t     ],\n\t     [\n\t      6,\n\t      17\n\t     ],\n\t     [\n\t      6,\n\t      17\n\t     ],\n\t     [\n\t      4,\n\t      4\n\t     ],\n\t     [\n\t      4,\n\t      4\n\t     ],\n\t     [\n\t      4,\n\t      4\n\t     ],\n\t     [\n\t      4,\n\t      4\n\t     ],\n\t     [\n\t      4,\n\t      4\n\t     ],\n\t     [\n\t      4,\n\t      4\n\t     ],\n\t     [\n\t      4,\n\t      4\n\t     ],\n\t     [\n\t      4,\n\t      4\n\t     ],\n\t     [\n\t      4,\n\t      4\n\t     ],\n\t     [\n\t      4,\n\t      4\n\t     ],\n\t     [\n\t      4,\n\t      4\n\t     ],\n\t     [\n\t      4,\n\t      4\n\t     ],\n\t     [\n\t      4,\n\t      4\n\t     ],\n\t     [\n\t      4,\n\t      4\n\t     ],\n\t     [\n\t      4,\n\t      4\n\t     ],\n\t     [\n\t      4,\n\t      4\n\t     ],\n\t     [\n\t      4,\n\t      4\n\t     ],\n\t     [\n\t      4,\n\t      4\n\t     ],\n\t     [\n\t      4,\n\t      4\n\t     ],\n\t     [\n\t      4,\n\t      4\n\t     ],\n\t     [\n\t      4,\n\t      4\n\t     ],\n\t     [\n\t      4,\n\t      4\n\t     ],\n\t     [\n\t      4,\n\t      4\n\t     ],\n\t     [\n\t      4,\n\t      4\n\t     ],\n\t     [\n\t      4,\n\t      4\n\t     ],\n\t     [\n\t      4,\n\t      4\n\t     ],\n\t     [\n\t      4,\n\t      4\n\t     ],\n\t     [\n\t      4,\n\t      4\n\t     ],\n\t     [\n\t      4,\n\t      4\n\t     ],\n\t     [\n\t      4,\n\t      4\n\t     ],\n\t     [\n\t      4,\n\t      4\n\t     ],\n\t     [\n\t      4,\n\t      4\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      6,\n\t      14\n\t     ],\n\t     [\n\t      6,\n\t      14\n\t     ],\n\t     [\n\t      6,\n\t      14\n\t     ],\n\t     [\n\t      6,\n\t      14\n\t     ],\n\t     [\n\t      6,\n\t      14\n\t     ],\n\t     [\n\t      6,\n\t      14\n\t     ],\n\t     [\n\t      6,\n\t      14\n\t     ],\n\t     [\n\t      6,\n\t      14\n\t     ],\n\t     [\n\t      6,\n\t      15\n\t     ],\n\t     [\n\t      6,\n\t      15\n\t     ],\n\t     [\n\t      6,\n\t      15\n\t     ],\n\t     [\n\t      6,\n\t      15\n\t     ],\n\t     [\n\t      6,\n\t      15\n\t     ],\n\t     [\n\t      6,\n\t      15\n\t     ],\n\t     [\n\t      6,\n\t      15\n\t     ],\n\t     [\n\t      6,\n\t      15\n\t     ],\n\t     [\n\t      5,\n\t      64\n\t     ],\n\t     [\n\t      5,\n\t      64\n\t     ],\n\t     [\n\t      5,\n\t      64\n\t     ],\n\t     [\n\t      5,\n\t      64\n\t     ],\n\t     [\n\t      5,\n\t      64\n\t     ],\n\t     [\n\t      5,\n\t      64\n\t     ],\n\t     [\n\t      5,\n\t      64\n\t     ],\n\t     [\n\t      5,\n\t      64\n\t     ],\n\t     [\n\t      5,\n\t      64\n\t     ],\n\t     [\n\t      5,\n\t      64\n\t     ],\n\t     [\n\t      5,\n\t      64\n\t     ],\n\t     [\n\t      5,\n\t      64\n\t     ],\n\t     [\n\t      5,\n\t      64\n\t     ],\n\t     [\n\t      5,\n\t      64\n\t     ],\n\t     [\n\t      5,\n\t      64\n\t     ],\n\t     [\n\t      5,\n\t      64\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      7\n\t     ],\n\t     [\n\t      4,\n\t      7\n\t     ],\n\t     [\n\t      4,\n\t      7\n\t     ],\n\t     [\n\t      4,\n\t      7\n\t     ],\n\t     [\n\t      4,\n\t      7\n\t     ],\n\t     [\n\t      4,\n\t      7\n\t     ],\n\t     [\n\t      4,\n\t      7\n\t     ],\n\t     [\n\t      4,\n\t      7\n\t     ],\n\t     [\n\t      4,\n\t      7\n\t     ],\n\t     [\n\t      4,\n\t      7\n\t     ],\n\t     [\n\t      4,\n\t      7\n\t     ],\n\t     [\n\t      4,\n\t      7\n\t     ],\n\t     [\n\t      4,\n\t      7\n\t     ],\n\t     [\n\t      4,\n\t      7\n\t     ],\n\t     [\n\t      4,\n\t      7\n\t     ],\n\t     [\n\t      4,\n\t      7\n\t     ],\n\t     [\n\t      4,\n\t      7\n\t     ],\n\t     [\n\t      4,\n\t      7\n\t     ],\n\t     [\n\t      4,\n\t      7\n\t     ],\n\t     [\n\t      4,\n\t      7\n\t     ],\n\t     [\n\t      4,\n\t      7\n\t     ],\n\t     [\n\t      4,\n\t      7\n\t     ],\n\t     [\n\t      4,\n\t      7\n\t     ],\n\t     [\n\t      4,\n\t      7\n\t     ],\n\t     [\n\t      4,\n\t      7\n\t     ],\n\t     [\n\t      4,\n\t      7\n\t     ],\n\t     [\n\t      4,\n\t      7\n\t     ],\n\t     [\n\t      4,\n\t      7\n\t     ],\n\t     [\n\t      4,\n\t      7\n\t     ],\n\t     [\n\t      4,\n\t      7\n\t     ],\n\t     [\n\t      4,\n\t      7\n\t     ],\n\t     [\n\t      4,\n\t      7\n\t     ]\n\t    ];\n\t    var blackTable1 = [\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      12,\n\t      ccittEOL\n\t     ],\n\t     [\n\t      12,\n\t      ccittEOL\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      11,\n\t      1792\n\t     ],\n\t     [\n\t      11,\n\t      1792\n\t     ],\n\t     [\n\t      11,\n\t      1792\n\t     ],\n\t     [\n\t      11,\n\t      1792\n\t     ],\n\t     [\n\t      12,\n\t      1984\n\t     ],\n\t     [\n\t      12,\n\t      1984\n\t     ],\n\t     [\n\t      12,\n\t      2048\n\t     ],\n\t     [\n\t      12,\n\t      2048\n\t     ],\n\t     [\n\t      12,\n\t      2112\n\t     ],\n\t     [\n\t      12,\n\t      2112\n\t     ],\n\t     [\n\t      12,\n\t      2176\n\t     ],\n\t     [\n\t      12,\n\t      2176\n\t     ],\n\t     [\n\t      12,\n\t      2240\n\t     ],\n\t     [\n\t      12,\n\t      2240\n\t     ],\n\t     [\n\t      12,\n\t      2304\n\t     ],\n\t     [\n\t      12,\n\t      2304\n\t     ],\n\t     [\n\t      11,\n\t      1856\n\t     ],\n\t     [\n\t      11,\n\t      1856\n\t     ],\n\t     [\n\t      11,\n\t      1856\n\t     ],\n\t     [\n\t      11,\n\t      1856\n\t     ],\n\t     [\n\t      11,\n\t      1920\n\t     ],\n\t     [\n\t      11,\n\t      1920\n\t     ],\n\t     [\n\t      11,\n\t      1920\n\t     ],\n\t     [\n\t      11,\n\t      1920\n\t     ],\n\t     [\n\t      12,\n\t      2368\n\t     ],\n\t     [\n\t      12,\n\t      2368\n\t     ],\n\t     [\n\t      12,\n\t      2432\n\t     ],\n\t     [\n\t      12,\n\t      2432\n\t     ],\n\t     [\n\t      12,\n\t      2496\n\t     ],\n\t     [\n\t      12,\n\t      2496\n\t     ],\n\t     [\n\t      12,\n\t      2560\n\t     ],\n\t     [\n\t      12,\n\t      2560\n\t     ],\n\t     [\n\t      10,\n\t      18\n\t     ],\n\t     [\n\t      10,\n\t      18\n\t     ],\n\t     [\n\t      10,\n\t      18\n\t     ],\n\t     [\n\t      10,\n\t      18\n\t     ],\n\t     [\n\t      10,\n\t      18\n\t     ],\n\t     [\n\t      10,\n\t      18\n\t     ],\n\t     [\n\t      10,\n\t      18\n\t     ],\n\t     [\n\t      10,\n\t      18\n\t     ],\n\t     [\n\t      12,\n\t      52\n\t     ],\n\t     [\n\t      12,\n\t      52\n\t     ],\n\t     [\n\t      13,\n\t      640\n\t     ],\n\t     [\n\t      13,\n\t      704\n\t     ],\n\t     [\n\t      13,\n\t      768\n\t     ],\n\t     [\n\t      13,\n\t      832\n\t     ],\n\t     [\n\t      12,\n\t      55\n\t     ],\n\t     [\n\t      12,\n\t      55\n\t     ],\n\t     [\n\t      12,\n\t      56\n\t     ],\n\t     [\n\t      12,\n\t      56\n\t     ],\n\t     [\n\t      13,\n\t      1280\n\t     ],\n\t     [\n\t      13,\n\t      1344\n\t     ],\n\t     [\n\t      13,\n\t      1408\n\t     ],\n\t     [\n\t      13,\n\t      1472\n\t     ],\n\t     [\n\t      12,\n\t      59\n\t     ],\n\t     [\n\t      12,\n\t      59\n\t     ],\n\t     [\n\t      12,\n\t      60\n\t     ],\n\t     [\n\t      12,\n\t      60\n\t     ],\n\t     [\n\t      13,\n\t      1536\n\t     ],\n\t     [\n\t      13,\n\t      1600\n\t     ],\n\t     [\n\t      11,\n\t      24\n\t     ],\n\t     [\n\t      11,\n\t      24\n\t     ],\n\t     [\n\t      11,\n\t      24\n\t     ],\n\t     [\n\t      11,\n\t      24\n\t     ],\n\t     [\n\t      11,\n\t      25\n\t     ],\n\t     [\n\t      11,\n\t      25\n\t     ],\n\t     [\n\t      11,\n\t      25\n\t     ],\n\t     [\n\t      11,\n\t      25\n\t     ],\n\t     [\n\t      13,\n\t      1664\n\t     ],\n\t     [\n\t      13,\n\t      1728\n\t     ],\n\t     [\n\t      12,\n\t      320\n\t     ],\n\t     [\n\t      12,\n\t      320\n\t     ],\n\t     [\n\t      12,\n\t      384\n\t     ],\n\t     [\n\t      12,\n\t      384\n\t     ],\n\t     [\n\t      12,\n\t      448\n\t     ],\n\t     [\n\t      12,\n\t      448\n\t     ],\n\t     [\n\t      13,\n\t      512\n\t     ],\n\t     [\n\t      13,\n\t      576\n\t     ],\n\t     [\n\t      12,\n\t      53\n\t     ],\n\t     [\n\t      12,\n\t      53\n\t     ],\n\t     [\n\t      12,\n\t      54\n\t     ],\n\t     [\n\t      12,\n\t      54\n\t     ],\n\t     [\n\t      13,\n\t      896\n\t     ],\n\t     [\n\t      13,\n\t      960\n\t     ],\n\t     [\n\t      13,\n\t      1024\n\t     ],\n\t     [\n\t      13,\n\t      1088\n\t     ],\n\t     [\n\t      13,\n\t      1152\n\t     ],\n\t     [\n\t      13,\n\t      1216\n\t     ],\n\t     [\n\t      10,\n\t      64\n\t     ],\n\t     [\n\t      10,\n\t      64\n\t     ],\n\t     [\n\t      10,\n\t      64\n\t     ],\n\t     [\n\t      10,\n\t      64\n\t     ],\n\t     [\n\t      10,\n\t      64\n\t     ],\n\t     [\n\t      10,\n\t      64\n\t     ],\n\t     [\n\t      10,\n\t      64\n\t     ],\n\t     [\n\t      10,\n\t      64\n\t     ]\n\t    ];\n\t    var blackTable2 = [\n\t     [\n\t      8,\n\t      13\n\t     ],\n\t     [\n\t      8,\n\t      13\n\t     ],\n\t     [\n\t      8,\n\t      13\n\t     ],\n\t     [\n\t      8,\n\t      13\n\t     ],\n\t     [\n\t      8,\n\t      13\n\t     ],\n\t     [\n\t      8,\n\t      13\n\t     ],\n\t     [\n\t      8,\n\t      13\n\t     ],\n\t     [\n\t      8,\n\t      13\n\t     ],\n\t     [\n\t      8,\n\t      13\n\t     ],\n\t     [\n\t      8,\n\t      13\n\t     ],\n\t     [\n\t      8,\n\t      13\n\t     ],\n\t     [\n\t      8,\n\t      13\n\t     ],\n\t     [\n\t      8,\n\t      13\n\t     ],\n\t     [\n\t      8,\n\t      13\n\t     ],\n\t     [\n\t      8,\n\t      13\n\t     ],\n\t     [\n\t      8,\n\t      13\n\t     ],\n\t     [\n\t      11,\n\t      23\n\t     ],\n\t     [\n\t      11,\n\t      23\n\t     ],\n\t     [\n\t      12,\n\t      50\n\t     ],\n\t     [\n\t      12,\n\t      51\n\t     ],\n\t     [\n\t      12,\n\t      44\n\t     ],\n\t     [\n\t      12,\n\t      45\n\t     ],\n\t     [\n\t      12,\n\t      46\n\t     ],\n\t     [\n\t      12,\n\t      47\n\t     ],\n\t     [\n\t      12,\n\t      57\n\t     ],\n\t     [\n\t      12,\n\t      58\n\t     ],\n\t     [\n\t      12,\n\t      61\n\t     ],\n\t     [\n\t      12,\n\t      256\n\t     ],\n\t     [\n\t      10,\n\t      16\n\t     ],\n\t     [\n\t      10,\n\t      16\n\t     ],\n\t     [\n\t      10,\n\t      16\n\t     ],\n\t     [\n\t      10,\n\t      16\n\t     ],\n\t     [\n\t      10,\n\t      17\n\t     ],\n\t     [\n\t      10,\n\t      17\n\t     ],\n\t     [\n\t      10,\n\t      17\n\t     ],\n\t     [\n\t      10,\n\t      17\n\t     ],\n\t     [\n\t      12,\n\t      48\n\t     ],\n\t     [\n\t      12,\n\t      49\n\t     ],\n\t     [\n\t      12,\n\t      62\n\t     ],\n\t     [\n\t      12,\n\t      63\n\t     ],\n\t     [\n\t      12,\n\t      30\n\t     ],\n\t     [\n\t      12,\n\t      31\n\t     ],\n\t     [\n\t      12,\n\t      32\n\t     ],\n\t     [\n\t      12,\n\t      33\n\t     ],\n\t     [\n\t      12,\n\t      40\n\t     ],\n\t     [\n\t      12,\n\t      41\n\t     ],\n\t     [\n\t      11,\n\t      22\n\t     ],\n\t     [\n\t      11,\n\t      22\n\t     ],\n\t     [\n\t      8,\n\t      14\n\t     ],\n\t     [\n\t      8,\n\t      14\n\t     ],\n\t     [\n\t      8,\n\t      14\n\t     ],\n\t     [\n\t      8,\n\t      14\n\t     ],\n\t     [\n\t      8,\n\t      14\n\t     ],\n\t     [\n\t      8,\n\t      14\n\t     ],\n\t     [\n\t      8,\n\t      14\n\t     ],\n\t     [\n\t      8,\n\t      14\n\t     ],\n\t     [\n\t      8,\n\t      14\n\t     ],\n\t     [\n\t      8,\n\t      14\n\t     ],\n\t     [\n\t      8,\n\t      14\n\t     ],\n\t     [\n\t      8,\n\t      14\n\t     ],\n\t     [\n\t      8,\n\t      14\n\t     ],\n\t     [\n\t      8,\n\t      14\n\t     ],\n\t     [\n\t      8,\n\t      14\n\t     ],\n\t     [\n\t      8,\n\t      14\n\t     ],\n\t     [\n\t      7,\n\t      10\n\t     ],\n\t     [\n\t      7,\n\t      10\n\t     ],\n\t     [\n\t      7,\n\t      10\n\t     ],\n\t     [\n\t      7,\n\t      10\n\t     ],\n\t     [\n\t      7,\n\t      10\n\t     ],\n\t     [\n\t      7,\n\t      10\n\t     ],\n\t     [\n\t      7,\n\t      10\n\t     ],\n\t     [\n\t      7,\n\t      10\n\t     ],\n\t     [\n\t      7,\n\t      10\n\t     ],\n\t     [\n\t      7,\n\t      10\n\t     ],\n\t     [\n\t      7,\n\t      10\n\t     ],\n\t     [\n\t      7,\n\t      10\n\t     ],\n\t     [\n\t      7,\n\t      10\n\t     ],\n\t     [\n\t      7,\n\t      10\n\t     ],\n\t     [\n\t      7,\n\t      10\n\t     ],\n\t     [\n\t      7,\n\t      10\n\t     ],\n\t     [\n\t      7,\n\t      10\n\t     ],\n\t     [\n\t      7,\n\t      10\n\t     ],\n\t     [\n\t      7,\n\t      10\n\t     ],\n\t     [\n\t      7,\n\t      10\n\t     ],\n\t     [\n\t      7,\n\t      10\n\t     ],\n\t     [\n\t      7,\n\t      10\n\t     ],\n\t     [\n\t      7,\n\t      10\n\t     ],\n\t     [\n\t      7,\n\t      10\n\t     ],\n\t     [\n\t      7,\n\t      10\n\t     ],\n\t     [\n\t      7,\n\t      10\n\t     ],\n\t     [\n\t      7,\n\t      10\n\t     ],\n\t     [\n\t      7,\n\t      10\n\t     ],\n\t     [\n\t      7,\n\t      10\n\t     ],\n\t     [\n\t      7,\n\t      10\n\t     ],\n\t     [\n\t      7,\n\t      10\n\t     ],\n\t     [\n\t      7,\n\t      10\n\t     ],\n\t     [\n\t      7,\n\t      11\n\t     ],\n\t     [\n\t      7,\n\t      11\n\t     ],\n\t     [\n\t      7,\n\t      11\n\t     ],\n\t     [\n\t      7,\n\t      11\n\t     ],\n\t     [\n\t      7,\n\t      11\n\t     ],\n\t     [\n\t      7,\n\t      11\n\t     ],\n\t     [\n\t      7,\n\t      11\n\t     ],\n\t     [\n\t      7,\n\t      11\n\t     ],\n\t     [\n\t      7,\n\t      11\n\t     ],\n\t     [\n\t      7,\n\t      11\n\t     ],\n\t     [\n\t      7,\n\t      11\n\t     ],\n\t     [\n\t      7,\n\t      11\n\t     ],\n\t     [\n\t      7,\n\t      11\n\t     ],\n\t     [\n\t      7,\n\t      11\n\t     ],\n\t     [\n\t      7,\n\t      11\n\t     ],\n\t     [\n\t      7,\n\t      11\n\t     ],\n\t     [\n\t      7,\n\t      11\n\t     ],\n\t     [\n\t      7,\n\t      11\n\t     ],\n\t     [\n\t      7,\n\t      11\n\t     ],\n\t     [\n\t      7,\n\t      11\n\t     ],\n\t     [\n\t      7,\n\t      11\n\t     ],\n\t     [\n\t      7,\n\t      11\n\t     ],\n\t     [\n\t      7,\n\t      11\n\t     ],\n\t     [\n\t      7,\n\t      11\n\t     ],\n\t     [\n\t      7,\n\t      11\n\t     ],\n\t     [\n\t      7,\n\t      11\n\t     ],\n\t     [\n\t      7,\n\t      11\n\t     ],\n\t     [\n\t      7,\n\t      11\n\t     ],\n\t     [\n\t      7,\n\t      11\n\t     ],\n\t     [\n\t      7,\n\t      11\n\t     ],\n\t     [\n\t      7,\n\t      11\n\t     ],\n\t     [\n\t      7,\n\t      11\n\t     ],\n\t     [\n\t      9,\n\t      15\n\t     ],\n\t     [\n\t      9,\n\t      15\n\t     ],\n\t     [\n\t      9,\n\t      15\n\t     ],\n\t     [\n\t      9,\n\t      15\n\t     ],\n\t     [\n\t      9,\n\t      15\n\t     ],\n\t     [\n\t      9,\n\t      15\n\t     ],\n\t     [\n\t      9,\n\t      15\n\t     ],\n\t     [\n\t      9,\n\t      15\n\t     ],\n\t     [\n\t      12,\n\t      128\n\t     ],\n\t     [\n\t      12,\n\t      192\n\t     ],\n\t     [\n\t      12,\n\t      26\n\t     ],\n\t     [\n\t      12,\n\t      27\n\t     ],\n\t     [\n\t      12,\n\t      28\n\t     ],\n\t     [\n\t      12,\n\t      29\n\t     ],\n\t     [\n\t      11,\n\t      19\n\t     ],\n\t     [\n\t      11,\n\t      19\n\t     ],\n\t     [\n\t      11,\n\t      20\n\t     ],\n\t     [\n\t      11,\n\t      20\n\t     ],\n\t     [\n\t      12,\n\t      34\n\t     ],\n\t     [\n\t      12,\n\t      35\n\t     ],\n\t     [\n\t      12,\n\t      36\n\t     ],\n\t     [\n\t      12,\n\t      37\n\t     ],\n\t     [\n\t      12,\n\t      38\n\t     ],\n\t     [\n\t      12,\n\t      39\n\t     ],\n\t     [\n\t      11,\n\t      21\n\t     ],\n\t     [\n\t      11,\n\t      21\n\t     ],\n\t     [\n\t      12,\n\t      42\n\t     ],\n\t     [\n\t      12,\n\t      43\n\t     ],\n\t     [\n\t      10,\n\t      0\n\t     ],\n\t     [\n\t      10,\n\t      0\n\t     ],\n\t     [\n\t      10,\n\t      0\n\t     ],\n\t     [\n\t      10,\n\t      0\n\t     ],\n\t     [\n\t      7,\n\t      12\n\t     ],\n\t     [\n\t      7,\n\t      12\n\t     ],\n\t     [\n\t      7,\n\t      12\n\t     ],\n\t     [\n\t      7,\n\t      12\n\t     ],\n\t     [\n\t      7,\n\t      12\n\t     ],\n\t     [\n\t      7,\n\t      12\n\t     ],\n\t     [\n\t      7,\n\t      12\n\t     ],\n\t     [\n\t      7,\n\t      12\n\t     ],\n\t     [\n\t      7,\n\t      12\n\t     ],\n\t     [\n\t      7,\n\t      12\n\t     ],\n\t     [\n\t      7,\n\t      12\n\t     ],\n\t     [\n\t      7,\n\t      12\n\t     ],\n\t     [\n\t      7,\n\t      12\n\t     ],\n\t     [\n\t      7,\n\t      12\n\t     ],\n\t     [\n\t      7,\n\t      12\n\t     ],\n\t     [\n\t      7,\n\t      12\n\t     ],\n\t     [\n\t      7,\n\t      12\n\t     ],\n\t     [\n\t      7,\n\t      12\n\t     ],\n\t     [\n\t      7,\n\t      12\n\t     ],\n\t     [\n\t      7,\n\t      12\n\t     ],\n\t     [\n\t      7,\n\t      12\n\t     ],\n\t     [\n\t      7,\n\t      12\n\t     ],\n\t     [\n\t      7,\n\t      12\n\t     ],\n\t     [\n\t      7,\n\t      12\n\t     ],\n\t     [\n\t      7,\n\t      12\n\t     ],\n\t     [\n\t      7,\n\t      12\n\t     ],\n\t     [\n\t      7,\n\t      12\n\t     ],\n\t     [\n\t      7,\n\t      12\n\t     ],\n\t     [\n\t      7,\n\t      12\n\t     ],\n\t     [\n\t      7,\n\t      12\n\t     ],\n\t     [\n\t      7,\n\t      12\n\t     ],\n\t     [\n\t      7,\n\t      12\n\t     ]\n\t    ];\n\t    var blackTable3 = [\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      -1,\n\t      -1\n\t     ],\n\t     [\n\t      6,\n\t      9\n\t     ],\n\t     [\n\t      6,\n\t      8\n\t     ],\n\t     [\n\t      5,\n\t      7\n\t     ],\n\t     [\n\t      5,\n\t      7\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      6\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      4,\n\t      5\n\t     ],\n\t     [\n\t      3,\n\t      1\n\t     ],\n\t     [\n\t      3,\n\t      1\n\t     ],\n\t     [\n\t      3,\n\t      1\n\t     ],\n\t     [\n\t      3,\n\t      1\n\t     ],\n\t     [\n\t      3,\n\t      1\n\t     ],\n\t     [\n\t      3,\n\t      1\n\t     ],\n\t     [\n\t      3,\n\t      1\n\t     ],\n\t     [\n\t      3,\n\t      1\n\t     ],\n\t     [\n\t      3,\n\t      4\n\t     ],\n\t     [\n\t      3,\n\t      4\n\t     ],\n\t     [\n\t      3,\n\t      4\n\t     ],\n\t     [\n\t      3,\n\t      4\n\t     ],\n\t     [\n\t      3,\n\t      4\n\t     ],\n\t     [\n\t      3,\n\t      4\n\t     ],\n\t     [\n\t      3,\n\t      4\n\t     ],\n\t     [\n\t      3,\n\t      4\n\t     ],\n\t     [\n\t      2,\n\t      3\n\t     ],\n\t     [\n\t      2,\n\t      3\n\t     ],\n\t     [\n\t      2,\n\t      3\n\t     ],\n\t     [\n\t      2,\n\t      3\n\t     ],\n\t     [\n\t      2,\n\t      3\n\t     ],\n\t     [\n\t      2,\n\t      3\n\t     ],\n\t     [\n\t      2,\n\t      3\n\t     ],\n\t     [\n\t      2,\n\t      3\n\t     ],\n\t     [\n\t      2,\n\t      3\n\t     ],\n\t     [\n\t      2,\n\t      3\n\t     ],\n\t     [\n\t      2,\n\t      3\n\t     ],\n\t     [\n\t      2,\n\t      3\n\t     ],\n\t     [\n\t      2,\n\t      3\n\t     ],\n\t     [\n\t      2,\n\t      3\n\t     ],\n\t     [\n\t      2,\n\t      3\n\t     ],\n\t     [\n\t      2,\n\t      3\n\t     ],\n\t     [\n\t      2,\n\t      2\n\t     ],\n\t     [\n\t      2,\n\t      2\n\t     ],\n\t     [\n\t      2,\n\t      2\n\t     ],\n\t     [\n\t      2,\n\t      2\n\t     ],\n\t     [\n\t      2,\n\t      2\n\t     ],\n\t     [\n\t      2,\n\t      2\n\t     ],\n\t     [\n\t      2,\n\t      2\n\t     ],\n\t     [\n\t      2,\n\t      2\n\t     ],\n\t     [\n\t      2,\n\t      2\n\t     ],\n\t     [\n\t      2,\n\t      2\n\t     ],\n\t     [\n\t      2,\n\t      2\n\t     ],\n\t     [\n\t      2,\n\t      2\n\t     ],\n\t     [\n\t      2,\n\t      2\n\t     ],\n\t     [\n\t      2,\n\t      2\n\t     ],\n\t     [\n\t      2,\n\t      2\n\t     ],\n\t     [\n\t      2,\n\t      2\n\t     ]\n\t    ];\n\t    function CCITTFaxStream(str, maybeLength, params) {\n\t     this.str = str;\n\t     this.dict = str.dict;\n\t     params = params || Dict.empty;\n\t     this.encoding = params.get('K') || 0;\n\t     this.eoline = params.get('EndOfLine') || false;\n\t     this.byteAlign = params.get('EncodedByteAlign') || false;\n\t     this.columns = params.get('Columns') || 1728;\n\t     this.rows = params.get('Rows') || 0;\n\t     var eoblock = params.get('EndOfBlock');\n\t     if (eoblock === null || eoblock === undefined) {\n\t      eoblock = true;\n\t     }\n\t     this.eoblock = eoblock;\n\t     this.black = params.get('BlackIs1') || false;\n\t     this.codingLine = new Uint32Array(this.columns + 1);\n\t     this.refLine = new Uint32Array(this.columns + 2);\n\t     this.codingLine[0] = this.columns;\n\t     this.codingPos = 0;\n\t     this.row = 0;\n\t     this.nextLine2D = this.encoding < 0;\n\t     this.inputBits = 0;\n\t     this.inputBuf = 0;\n\t     this.outputBits = 0;\n\t     var code1;\n\t     while ((code1 = this.lookBits(12)) === 0) {\n\t      this.eatBits(1);\n\t     }\n\t     if (code1 === 1) {\n\t      this.eatBits(12);\n\t     }\n\t     if (this.encoding > 0) {\n\t      this.nextLine2D = !this.lookBits(1);\n\t      this.eatBits(1);\n\t     }\n\t     DecodeStream.call(this, maybeLength);\n\t    }\n\t    CCITTFaxStream.prototype = Object.create(DecodeStream.prototype);\n\t    CCITTFaxStream.prototype.readBlock = function CCITTFaxStream_readBlock() {\n\t     while (!this.eof) {\n\t      var c = this.lookChar();\n\t      this.ensureBuffer(this.bufferLength + 1);\n\t      this.buffer[this.bufferLength++] = c;\n\t     }\n\t    };\n\t    CCITTFaxStream.prototype.addPixels = function ccittFaxStreamAddPixels(a1, blackPixels) {\n\t     var codingLine = this.codingLine;\n\t     var codingPos = this.codingPos;\n\t     if (a1 > codingLine[codingPos]) {\n\t      if (a1 > this.columns) {\n\t       info('row is wrong length');\n\t       this.err = true;\n\t       a1 = this.columns;\n\t      }\n\t      if (codingPos & 1 ^ blackPixels) {\n\t       ++codingPos;\n\t      }\n\t      codingLine[codingPos] = a1;\n\t     }\n\t     this.codingPos = codingPos;\n\t    };\n\t    CCITTFaxStream.prototype.addPixelsNeg = function ccittFaxStreamAddPixelsNeg(a1, blackPixels) {\n\t     var codingLine = this.codingLine;\n\t     var codingPos = this.codingPos;\n\t     if (a1 > codingLine[codingPos]) {\n\t      if (a1 > this.columns) {\n\t       info('row is wrong length');\n\t       this.err = true;\n\t       a1 = this.columns;\n\t      }\n\t      if (codingPos & 1 ^ blackPixels) {\n\t       ++codingPos;\n\t      }\n\t      codingLine[codingPos] = a1;\n\t     } else if (a1 < codingLine[codingPos]) {\n\t      if (a1 < 0) {\n\t       info('invalid code');\n\t       this.err = true;\n\t       a1 = 0;\n\t      }\n\t      while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n\t       --codingPos;\n\t      }\n\t      codingLine[codingPos] = a1;\n\t     }\n\t     this.codingPos = codingPos;\n\t    };\n\t    CCITTFaxStream.prototype.lookChar = function CCITTFaxStream_lookChar() {\n\t     var refLine = this.refLine;\n\t     var codingLine = this.codingLine;\n\t     var columns = this.columns;\n\t     var refPos, blackPixels, bits, i;\n\t     if (this.outputBits === 0) {\n\t      if (this.eof) {\n\t       return null;\n\t      }\n\t      this.err = false;\n\t      var code1, code2, code3;\n\t      if (this.nextLine2D) {\n\t       for (i = 0; codingLine[i] < columns; ++i) {\n\t        refLine[i] = codingLine[i];\n\t       }\n\t       refLine[i++] = columns;\n\t       refLine[i] = columns;\n\t       codingLine[0] = 0;\n\t       this.codingPos = 0;\n\t       refPos = 0;\n\t       blackPixels = 0;\n\t       while (codingLine[this.codingPos] < columns) {\n\t        code1 = this.getTwoDimCode();\n\t        switch (code1) {\n\t        case twoDimPass:\n\t         this.addPixels(refLine[refPos + 1], blackPixels);\n\t         if (refLine[refPos + 1] < columns) {\n\t          refPos += 2;\n\t         }\n\t         break;\n\t        case twoDimHoriz:\n\t         code1 = code2 = 0;\n\t         if (blackPixels) {\n\t          do {\n\t           code1 += code3 = this.getBlackCode();\n\t          } while (code3 >= 64);\n\t          do {\n\t           code2 += code3 = this.getWhiteCode();\n\t          } while (code3 >= 64);\n\t         } else {\n\t          do {\n\t           code1 += code3 = this.getWhiteCode();\n\t          } while (code3 >= 64);\n\t          do {\n\t           code2 += code3 = this.getBlackCode();\n\t          } while (code3 >= 64);\n\t         }\n\t         this.addPixels(codingLine[this.codingPos] + code1, blackPixels);\n\t         if (codingLine[this.codingPos] < columns) {\n\t          this.addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n\t         }\n\t         while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t          refPos += 2;\n\t         }\n\t         break;\n\t        case twoDimVertR3:\n\t         this.addPixels(refLine[refPos] + 3, blackPixels);\n\t         blackPixels ^= 1;\n\t         if (codingLine[this.codingPos] < columns) {\n\t          ++refPos;\n\t          while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t           refPos += 2;\n\t          }\n\t         }\n\t         break;\n\t        case twoDimVertR2:\n\t         this.addPixels(refLine[refPos] + 2, blackPixels);\n\t         blackPixels ^= 1;\n\t         if (codingLine[this.codingPos] < columns) {\n\t          ++refPos;\n\t          while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t           refPos += 2;\n\t          }\n\t         }\n\t         break;\n\t        case twoDimVertR1:\n\t         this.addPixels(refLine[refPos] + 1, blackPixels);\n\t         blackPixels ^= 1;\n\t         if (codingLine[this.codingPos] < columns) {\n\t          ++refPos;\n\t          while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t           refPos += 2;\n\t          }\n\t         }\n\t         break;\n\t        case twoDimVert0:\n\t         this.addPixels(refLine[refPos], blackPixels);\n\t         blackPixels ^= 1;\n\t         if (codingLine[this.codingPos] < columns) {\n\t          ++refPos;\n\t          while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t           refPos += 2;\n\t          }\n\t         }\n\t         break;\n\t        case twoDimVertL3:\n\t         this.addPixelsNeg(refLine[refPos] - 3, blackPixels);\n\t         blackPixels ^= 1;\n\t         if (codingLine[this.codingPos] < columns) {\n\t          if (refPos > 0) {\n\t           --refPos;\n\t          } else {\n\t           ++refPos;\n\t          }\n\t          while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t           refPos += 2;\n\t          }\n\t         }\n\t         break;\n\t        case twoDimVertL2:\n\t         this.addPixelsNeg(refLine[refPos] - 2, blackPixels);\n\t         blackPixels ^= 1;\n\t         if (codingLine[this.codingPos] < columns) {\n\t          if (refPos > 0) {\n\t           --refPos;\n\t          } else {\n\t           ++refPos;\n\t          }\n\t          while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t           refPos += 2;\n\t          }\n\t         }\n\t         break;\n\t        case twoDimVertL1:\n\t         this.addPixelsNeg(refLine[refPos] - 1, blackPixels);\n\t         blackPixels ^= 1;\n\t         if (codingLine[this.codingPos] < columns) {\n\t          if (refPos > 0) {\n\t           --refPos;\n\t          } else {\n\t           ++refPos;\n\t          }\n\t          while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t           refPos += 2;\n\t          }\n\t         }\n\t         break;\n\t        case ccittEOF:\n\t         this.addPixels(columns, 0);\n\t         this.eof = true;\n\t         break;\n\t        default:\n\t         info('bad 2d code');\n\t         this.addPixels(columns, 0);\n\t         this.err = true;\n\t        }\n\t       }\n\t      } else {\n\t       codingLine[0] = 0;\n\t       this.codingPos = 0;\n\t       blackPixels = 0;\n\t       while (codingLine[this.codingPos] < columns) {\n\t        code1 = 0;\n\t        if (blackPixels) {\n\t         do {\n\t          code1 += code3 = this.getBlackCode();\n\t         } while (code3 >= 64);\n\t        } else {\n\t         do {\n\t          code1 += code3 = this.getWhiteCode();\n\t         } while (code3 >= 64);\n\t        }\n\t        this.addPixels(codingLine[this.codingPos] + code1, blackPixels);\n\t        blackPixels ^= 1;\n\t       }\n\t      }\n\t      var gotEOL = false;\n\t      if (this.byteAlign) {\n\t       this.inputBits &= ~7;\n\t      }\n\t      if (!this.eoblock && this.row === this.rows - 1) {\n\t       this.eof = true;\n\t      } else {\n\t       code1 = this.lookBits(12);\n\t       if (this.eoline) {\n\t        while (code1 !== ccittEOF && code1 !== 1) {\n\t         this.eatBits(1);\n\t         code1 = this.lookBits(12);\n\t        }\n\t       } else {\n\t        while (code1 === 0) {\n\t         this.eatBits(1);\n\t         code1 = this.lookBits(12);\n\t        }\n\t       }\n\t       if (code1 === 1) {\n\t        this.eatBits(12);\n\t        gotEOL = true;\n\t       } else if (code1 === ccittEOF) {\n\t        this.eof = true;\n\t       }\n\t      }\n\t      if (!this.eof && this.encoding > 0) {\n\t       this.nextLine2D = !this.lookBits(1);\n\t       this.eatBits(1);\n\t      }\n\t      if (this.eoblock && gotEOL && this.byteAlign) {\n\t       code1 = this.lookBits(12);\n\t       if (code1 === 1) {\n\t        this.eatBits(12);\n\t        if (this.encoding > 0) {\n\t         this.lookBits(1);\n\t         this.eatBits(1);\n\t        }\n\t        if (this.encoding >= 0) {\n\t         for (i = 0; i < 4; ++i) {\n\t          code1 = this.lookBits(12);\n\t          if (code1 !== 1) {\n\t           info('bad rtc code: ' + code1);\n\t          }\n\t          this.eatBits(12);\n\t          if (this.encoding > 0) {\n\t           this.lookBits(1);\n\t           this.eatBits(1);\n\t          }\n\t         }\n\t        }\n\t        this.eof = true;\n\t       }\n\t      } else if (this.err && this.eoline) {\n\t       while (true) {\n\t        code1 = this.lookBits(13);\n\t        if (code1 === ccittEOF) {\n\t         this.eof = true;\n\t         return null;\n\t        }\n\t        if (code1 >> 1 === 1) {\n\t         break;\n\t        }\n\t        this.eatBits(1);\n\t       }\n\t       this.eatBits(12);\n\t       if (this.encoding > 0) {\n\t        this.eatBits(1);\n\t        this.nextLine2D = !(code1 & 1);\n\t       }\n\t      }\n\t      if (codingLine[0] > 0) {\n\t       this.outputBits = codingLine[this.codingPos = 0];\n\t      } else {\n\t       this.outputBits = codingLine[this.codingPos = 1];\n\t      }\n\t      this.row++;\n\t     }\n\t     var c;\n\t     if (this.outputBits >= 8) {\n\t      c = this.codingPos & 1 ? 0 : 0xFF;\n\t      this.outputBits -= 8;\n\t      if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n\t       this.codingPos++;\n\t       this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n\t      }\n\t     } else {\n\t      bits = 8;\n\t      c = 0;\n\t      do {\n\t       if (this.outputBits > bits) {\n\t        c <<= bits;\n\t        if (!(this.codingPos & 1)) {\n\t         c |= 0xFF >> 8 - bits;\n\t        }\n\t        this.outputBits -= bits;\n\t        bits = 0;\n\t       } else {\n\t        c <<= this.outputBits;\n\t        if (!(this.codingPos & 1)) {\n\t         c |= 0xFF >> 8 - this.outputBits;\n\t        }\n\t        bits -= this.outputBits;\n\t        this.outputBits = 0;\n\t        if (codingLine[this.codingPos] < columns) {\n\t         this.codingPos++;\n\t         this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n\t        } else if (bits > 0) {\n\t         c <<= bits;\n\t         bits = 0;\n\t        }\n\t       }\n\t      } while (bits);\n\t     }\n\t     if (this.black) {\n\t      c ^= 0xFF;\n\t     }\n\t     return c;\n\t    };\n\t    CCITTFaxStream.prototype.findTableCode = function ccittFaxStreamFindTableCode(start, end, table, limit) {\n\t     var limitValue = limit || 0;\n\t     for (var i = start; i <= end; ++i) {\n\t      var code = this.lookBits(i);\n\t      if (code === ccittEOF) {\n\t       return [\n\t        true,\n\t        1,\n\t        false\n\t       ];\n\t      }\n\t      if (i < end) {\n\t       code <<= end - i;\n\t      }\n\t      if (!limitValue || code >= limitValue) {\n\t       var p = table[code - limitValue];\n\t       if (p[0] === i) {\n\t        this.eatBits(i);\n\t        return [\n\t         true,\n\t         p[1],\n\t         true\n\t        ];\n\t       }\n\t      }\n\t     }\n\t     return [\n\t      false,\n\t      0,\n\t      false\n\t     ];\n\t    };\n\t    CCITTFaxStream.prototype.getTwoDimCode = function ccittFaxStreamGetTwoDimCode() {\n\t     var code = 0;\n\t     var p;\n\t     if (this.eoblock) {\n\t      code = this.lookBits(7);\n\t      p = twoDimTable[code];\n\t      if (p && p[0] > 0) {\n\t       this.eatBits(p[0]);\n\t       return p[1];\n\t      }\n\t     } else {\n\t      var result = this.findTableCode(1, 7, twoDimTable);\n\t      if (result[0] && result[2]) {\n\t       return result[1];\n\t      }\n\t     }\n\t     info('Bad two dim code');\n\t     return ccittEOF;\n\t    };\n\t    CCITTFaxStream.prototype.getWhiteCode = function ccittFaxStreamGetWhiteCode() {\n\t     var code = 0;\n\t     var p;\n\t     if (this.eoblock) {\n\t      code = this.lookBits(12);\n\t      if (code === ccittEOF) {\n\t       return 1;\n\t      }\n\t      if (code >> 5 === 0) {\n\t       p = whiteTable1[code];\n\t      } else {\n\t       p = whiteTable2[code >> 3];\n\t      }\n\t      if (p[0] > 0) {\n\t       this.eatBits(p[0]);\n\t       return p[1];\n\t      }\n\t     } else {\n\t      var result = this.findTableCode(1, 9, whiteTable2);\n\t      if (result[0]) {\n\t       return result[1];\n\t      }\n\t      result = this.findTableCode(11, 12, whiteTable1);\n\t      if (result[0]) {\n\t       return result[1];\n\t      }\n\t     }\n\t     info('bad white code');\n\t     this.eatBits(1);\n\t     return 1;\n\t    };\n\t    CCITTFaxStream.prototype.getBlackCode = function ccittFaxStreamGetBlackCode() {\n\t     var code, p;\n\t     if (this.eoblock) {\n\t      code = this.lookBits(13);\n\t      if (code === ccittEOF) {\n\t       return 1;\n\t      }\n\t      if (code >> 7 === 0) {\n\t       p = blackTable1[code];\n\t      } else if (code >> 9 === 0 && code >> 7 !== 0) {\n\t       p = blackTable2[(code >> 1) - 64];\n\t      } else {\n\t       p = blackTable3[code >> 7];\n\t      }\n\t      if (p[0] > 0) {\n\t       this.eatBits(p[0]);\n\t       return p[1];\n\t      }\n\t     } else {\n\t      var result = this.findTableCode(2, 6, blackTable3);\n\t      if (result[0]) {\n\t       return result[1];\n\t      }\n\t      result = this.findTableCode(7, 12, blackTable2, 64);\n\t      if (result[0]) {\n\t       return result[1];\n\t      }\n\t      result = this.findTableCode(10, 13, blackTable1);\n\t      if (result[0]) {\n\t       return result[1];\n\t      }\n\t     }\n\t     info('bad black code');\n\t     this.eatBits(1);\n\t     return 1;\n\t    };\n\t    CCITTFaxStream.prototype.lookBits = function CCITTFaxStream_lookBits(n) {\n\t     var c;\n\t     while (this.inputBits < n) {\n\t      if ((c = this.str.getByte()) === -1) {\n\t       if (this.inputBits === 0) {\n\t        return ccittEOF;\n\t       }\n\t       return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\n\t      }\n\t      this.inputBuf = this.inputBuf << 8 | c;\n\t      this.inputBits += 8;\n\t     }\n\t     return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\n\t    };\n\t    CCITTFaxStream.prototype.eatBits = function CCITTFaxStream_eatBits(n) {\n\t     if ((this.inputBits -= n) < 0) {\n\t      this.inputBits = 0;\n\t     }\n\t    };\n\t    return CCITTFaxStream;\n\t   }();\n\t   var LZWStream = function LZWStreamClosure() {\n\t    function LZWStream(str, maybeLength, earlyChange) {\n\t     this.str = str;\n\t     this.dict = str.dict;\n\t     this.cachedData = 0;\n\t     this.bitsCached = 0;\n\t     var maxLzwDictionarySize = 4096;\n\t     var lzwState = {\n\t      earlyChange: earlyChange,\n\t      codeLength: 9,\n\t      nextCode: 258,\n\t      dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n\t      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n\t      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n\t      currentSequence: new Uint8Array(maxLzwDictionarySize),\n\t      currentSequenceLength: 0\n\t     };\n\t     for (var i = 0; i < 256; ++i) {\n\t      lzwState.dictionaryValues[i] = i;\n\t      lzwState.dictionaryLengths[i] = 1;\n\t     }\n\t     this.lzwState = lzwState;\n\t     DecodeStream.call(this, maybeLength);\n\t    }\n\t    LZWStream.prototype = Object.create(DecodeStream.prototype);\n\t    LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n\t     var bitsCached = this.bitsCached;\n\t     var cachedData = this.cachedData;\n\t     while (bitsCached < n) {\n\t      var c = this.str.getByte();\n\t      if (c === -1) {\n\t       this.eof = true;\n\t       return null;\n\t      }\n\t      cachedData = cachedData << 8 | c;\n\t      bitsCached += 8;\n\t     }\n\t     this.bitsCached = bitsCached -= n;\n\t     this.cachedData = cachedData;\n\t     this.lastCode = null;\n\t     return cachedData >>> bitsCached & (1 << n) - 1;\n\t    };\n\t    LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n\t     var blockSize = 512;\n\t     var estimatedDecodedSize = blockSize * 2, decodedSizeDelta = blockSize;\n\t     var i, j, q;\n\t     var lzwState = this.lzwState;\n\t     if (!lzwState) {\n\t      return;\n\t     }\n\t     var earlyChange = lzwState.earlyChange;\n\t     var nextCode = lzwState.nextCode;\n\t     var dictionaryValues = lzwState.dictionaryValues;\n\t     var dictionaryLengths = lzwState.dictionaryLengths;\n\t     var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n\t     var codeLength = lzwState.codeLength;\n\t     var prevCode = lzwState.prevCode;\n\t     var currentSequence = lzwState.currentSequence;\n\t     var currentSequenceLength = lzwState.currentSequenceLength;\n\t     var decodedLength = 0;\n\t     var currentBufferLength = this.bufferLength;\n\t     var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n\t     for (i = 0; i < blockSize; i++) {\n\t      var code = this.readBits(codeLength);\n\t      var hasPrev = currentSequenceLength > 0;\n\t      if (code < 256) {\n\t       currentSequence[0] = code;\n\t       currentSequenceLength = 1;\n\t      } else if (code >= 258) {\n\t       if (code < nextCode) {\n\t        currentSequenceLength = dictionaryLengths[code];\n\t        for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n\t         currentSequence[j] = dictionaryValues[q];\n\t         q = dictionaryPrevCodes[q];\n\t        }\n\t       } else {\n\t        currentSequence[currentSequenceLength++] = currentSequence[0];\n\t       }\n\t      } else if (code === 256) {\n\t       codeLength = 9;\n\t       nextCode = 258;\n\t       currentSequenceLength = 0;\n\t       continue;\n\t      } else {\n\t       this.eof = true;\n\t       delete this.lzwState;\n\t       break;\n\t      }\n\t      if (hasPrev) {\n\t       dictionaryPrevCodes[nextCode] = prevCode;\n\t       dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n\t       dictionaryValues[nextCode] = currentSequence[0];\n\t       nextCode++;\n\t       codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n\t      }\n\t      prevCode = code;\n\t      decodedLength += currentSequenceLength;\n\t      if (estimatedDecodedSize < decodedLength) {\n\t       do {\n\t        estimatedDecodedSize += decodedSizeDelta;\n\t       } while (estimatedDecodedSize < decodedLength);\n\t       buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n\t      }\n\t      for (j = 0; j < currentSequenceLength; j++) {\n\t       buffer[currentBufferLength++] = currentSequence[j];\n\t      }\n\t     }\n\t     lzwState.nextCode = nextCode;\n\t     lzwState.codeLength = codeLength;\n\t     lzwState.prevCode = prevCode;\n\t     lzwState.currentSequenceLength = currentSequenceLength;\n\t     this.bufferLength = currentBufferLength;\n\t    };\n\t    return LZWStream;\n\t   }();\n\t   var NullStream = function NullStreamClosure() {\n\t    function NullStream() {\n\t     Stream.call(this, new Uint8Array(0));\n\t    }\n\t    NullStream.prototype = Stream.prototype;\n\t    return NullStream;\n\t   }();\n\t   exports.Ascii85Stream = Ascii85Stream;\n\t   exports.AsciiHexStream = AsciiHexStream;\n\t   exports.CCITTFaxStream = CCITTFaxStream;\n\t   exports.DecryptStream = DecryptStream;\n\t   exports.DecodeStream = DecodeStream;\n\t   exports.FlateStream = FlateStream;\n\t   exports.Jbig2Stream = Jbig2Stream;\n\t   exports.JpegStream = JpegStream;\n\t   exports.JpxStream = JpxStream;\n\t   exports.NullStream = NullStream;\n\t   exports.PredictorStream = PredictorStream;\n\t   exports.RunLengthStream = RunLengthStream;\n\t   exports.Stream = Stream;\n\t   exports.StreamsSequenceStream = StreamsSequenceStream;\n\t   exports.StringStream = StringStream;\n\t   exports.LZWStream = LZWStream;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCoreCrypto = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreStream);\n\t  }(this, function (exports, sharedUtil, corePrimitives, coreStream) {\n\t   var PasswordException = sharedUtil.PasswordException;\n\t   var PasswordResponses = sharedUtil.PasswordResponses;\n\t   var bytesToString = sharedUtil.bytesToString;\n\t   var warn = sharedUtil.warn;\n\t   var error = sharedUtil.error;\n\t   var assert = sharedUtil.assert;\n\t   var isInt = sharedUtil.isInt;\n\t   var stringToBytes = sharedUtil.stringToBytes;\n\t   var utf8StringToString = sharedUtil.utf8StringToString;\n\t   var Name = corePrimitives.Name;\n\t   var isName = corePrimitives.isName;\n\t   var isDict = corePrimitives.isDict;\n\t   var DecryptStream = coreStream.DecryptStream;\n\t   var ARCFourCipher = function ARCFourCipherClosure() {\n\t    function ARCFourCipher(key) {\n\t     this.a = 0;\n\t     this.b = 0;\n\t     var s = new Uint8Array(256);\n\t     var i, j = 0, tmp, keyLength = key.length;\n\t     for (i = 0; i < 256; ++i) {\n\t      s[i] = i;\n\t     }\n\t     for (i = 0; i < 256; ++i) {\n\t      tmp = s[i];\n\t      j = j + tmp + key[i % keyLength] & 0xFF;\n\t      s[i] = s[j];\n\t      s[j] = tmp;\n\t     }\n\t     this.s = s;\n\t    }\n\t    ARCFourCipher.prototype = {\n\t     encryptBlock: function ARCFourCipher_encryptBlock(data) {\n\t      var i, n = data.length, tmp, tmp2;\n\t      var a = this.a, b = this.b, s = this.s;\n\t      var output = new Uint8Array(n);\n\t      for (i = 0; i < n; ++i) {\n\t       a = a + 1 & 0xFF;\n\t       tmp = s[a];\n\t       b = b + tmp & 0xFF;\n\t       tmp2 = s[b];\n\t       s[a] = tmp2;\n\t       s[b] = tmp;\n\t       output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\n\t      }\n\t      this.a = a;\n\t      this.b = b;\n\t      return output;\n\t     }\n\t    };\n\t    ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n\t    return ARCFourCipher;\n\t   }();\n\t   var calculateMD5 = function calculateMD5Closure() {\n\t    var r = new Uint8Array([\n\t     7,\n\t     12,\n\t     17,\n\t     22,\n\t     7,\n\t     12,\n\t     17,\n\t     22,\n\t     7,\n\t     12,\n\t     17,\n\t     22,\n\t     7,\n\t     12,\n\t     17,\n\t     22,\n\t     5,\n\t     9,\n\t     14,\n\t     20,\n\t     5,\n\t     9,\n\t     14,\n\t     20,\n\t     5,\n\t     9,\n\t     14,\n\t     20,\n\t     5,\n\t     9,\n\t     14,\n\t     20,\n\t     4,\n\t     11,\n\t     16,\n\t     23,\n\t     4,\n\t     11,\n\t     16,\n\t     23,\n\t     4,\n\t     11,\n\t     16,\n\t     23,\n\t     4,\n\t     11,\n\t     16,\n\t     23,\n\t     6,\n\t     10,\n\t     15,\n\t     21,\n\t     6,\n\t     10,\n\t     15,\n\t     21,\n\t     6,\n\t     10,\n\t     15,\n\t     21,\n\t     6,\n\t     10,\n\t     15,\n\t     21\n\t    ]);\n\t    var k = new Int32Array([\n\t     -680876936,\n\t     -389564586,\n\t     606105819,\n\t     -1044525330,\n\t     -176418897,\n\t     1200080426,\n\t     -1473231341,\n\t     -45705983,\n\t     1770035416,\n\t     -1958414417,\n\t     -42063,\n\t     -1990404162,\n\t     1804603682,\n\t     -40341101,\n\t     -1502002290,\n\t     1236535329,\n\t     -165796510,\n\t     -1069501632,\n\t     643717713,\n\t     -373897302,\n\t     -701558691,\n\t     38016083,\n\t     -660478335,\n\t     -405537848,\n\t     568446438,\n\t     -1019803690,\n\t     -187363961,\n\t     1163531501,\n\t     -1444681467,\n\t     -51403784,\n\t     1735328473,\n\t     -1926607734,\n\t     -378558,\n\t     -2022574463,\n\t     1839030562,\n\t     -35309556,\n\t     -1530992060,\n\t     1272893353,\n\t     -155497632,\n\t     -1094730640,\n\t     681279174,\n\t     -358537222,\n\t     -722521979,\n\t     76029189,\n\t     -640364487,\n\t     -421815835,\n\t     530742520,\n\t     -995338651,\n\t     -198630844,\n\t     1126891415,\n\t     -1416354905,\n\t     -57434055,\n\t     1700485571,\n\t     -1894986606,\n\t     -1051523,\n\t     -2054922799,\n\t     1873313359,\n\t     -30611744,\n\t     -1560198380,\n\t     1309151649,\n\t     -145523070,\n\t     -1120210379,\n\t     718787259,\n\t     -343485551\n\t    ]);\n\t    function hash(data, offset, length) {\n\t     var h0 = 1732584193, h1 = -271733879, h2 = -1732584194, h3 = 271733878;\n\t     var paddedLength = length + 72 & ~63;\n\t     var padded = new Uint8Array(paddedLength);\n\t     var i, j, n;\n\t     for (i = 0; i < length; ++i) {\n\t      padded[i] = data[offset++];\n\t     }\n\t     padded[i++] = 0x80;\n\t     n = paddedLength - 8;\n\t     while (i < n) {\n\t      padded[i++] = 0;\n\t     }\n\t     padded[i++] = length << 3 & 0xFF;\n\t     padded[i++] = length >> 5 & 0xFF;\n\t     padded[i++] = length >> 13 & 0xFF;\n\t     padded[i++] = length >> 21 & 0xFF;\n\t     padded[i++] = length >>> 29 & 0xFF;\n\t     padded[i++] = 0;\n\t     padded[i++] = 0;\n\t     padded[i++] = 0;\n\t     var w = new Int32Array(16);\n\t     for (i = 0; i < paddedLength;) {\n\t      for (j = 0; j < 16; ++j, i += 4) {\n\t       w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n\t      }\n\t      var a = h0, b = h1, c = h2, d = h3, f, g;\n\t      for (j = 0; j < 64; ++j) {\n\t       if (j < 16) {\n\t        f = b & c | ~b & d;\n\t        g = j;\n\t       } else if (j < 32) {\n\t        f = d & b | ~d & c;\n\t        g = 5 * j + 1 & 15;\n\t       } else if (j < 48) {\n\t        f = b ^ c ^ d;\n\t        g = 3 * j + 5 & 15;\n\t       } else {\n\t        f = c ^ (b | ~d);\n\t        g = 7 * j & 15;\n\t       }\n\t       var tmp = d, rotateArg = a + f + k[j] + w[g] | 0, rotate = r[j];\n\t       d = c;\n\t       c = b;\n\t       b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n\t       a = tmp;\n\t      }\n\t      h0 = h0 + a | 0;\n\t      h1 = h1 + b | 0;\n\t      h2 = h2 + c | 0;\n\t      h3 = h3 + d | 0;\n\t     }\n\t     return new Uint8Array([\n\t      h0 & 0xFF,\n\t      h0 >> 8 & 0xFF,\n\t      h0 >> 16 & 0xFF,\n\t      h0 >>> 24 & 0xFF,\n\t      h1 & 0xFF,\n\t      h1 >> 8 & 0xFF,\n\t      h1 >> 16 & 0xFF,\n\t      h1 >>> 24 & 0xFF,\n\t      h2 & 0xFF,\n\t      h2 >> 8 & 0xFF,\n\t      h2 >> 16 & 0xFF,\n\t      h2 >>> 24 & 0xFF,\n\t      h3 & 0xFF,\n\t      h3 >> 8 & 0xFF,\n\t      h3 >> 16 & 0xFF,\n\t      h3 >>> 24 & 0xFF\n\t     ]);\n\t    }\n\t    return hash;\n\t   }();\n\t   var Word64 = function Word64Closure() {\n\t    function Word64(highInteger, lowInteger) {\n\t     this.high = highInteger | 0;\n\t     this.low = lowInteger | 0;\n\t    }\n\t    Word64.prototype = {\n\t     and: function Word64_and(word) {\n\t      this.high &= word.high;\n\t      this.low &= word.low;\n\t     },\n\t     xor: function Word64_xor(word) {\n\t      this.high ^= word.high;\n\t      this.low ^= word.low;\n\t     },\n\t     or: function Word64_or(word) {\n\t      this.high |= word.high;\n\t      this.low |= word.low;\n\t     },\n\t     shiftRight: function Word64_shiftRight(places) {\n\t      if (places >= 32) {\n\t       this.low = this.high >>> places - 32 | 0;\n\t       this.high = 0;\n\t      } else {\n\t       this.low = this.low >>> places | this.high << 32 - places;\n\t       this.high = this.high >>> places | 0;\n\t      }\n\t     },\n\t     shiftLeft: function Word64_shiftLeft(places) {\n\t      if (places >= 32) {\n\t       this.high = this.low << places - 32;\n\t       this.low = 0;\n\t      } else {\n\t       this.high = this.high << places | this.low >>> 32 - places;\n\t       this.low = this.low << places;\n\t      }\n\t     },\n\t     rotateRight: function Word64_rotateRight(places) {\n\t      var low, high;\n\t      if (places & 32) {\n\t       high = this.low;\n\t       low = this.high;\n\t      } else {\n\t       low = this.low;\n\t       high = this.high;\n\t      }\n\t      places &= 31;\n\t      this.low = low >>> places | high << 32 - places;\n\t      this.high = high >>> places | low << 32 - places;\n\t     },\n\t     not: function Word64_not() {\n\t      this.high = ~this.high;\n\t      this.low = ~this.low;\n\t     },\n\t     add: function Word64_add(word) {\n\t      var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n\t      var highAdd = (this.high >>> 0) + (word.high >>> 0);\n\t      if (lowAdd > 0xFFFFFFFF) {\n\t       highAdd += 1;\n\t      }\n\t      this.low = lowAdd | 0;\n\t      this.high = highAdd | 0;\n\t     },\n\t     copyTo: function Word64_copyTo(bytes, offset) {\n\t      bytes[offset] = this.high >>> 24 & 0xFF;\n\t      bytes[offset + 1] = this.high >> 16 & 0xFF;\n\t      bytes[offset + 2] = this.high >> 8 & 0xFF;\n\t      bytes[offset + 3] = this.high & 0xFF;\n\t      bytes[offset + 4] = this.low >>> 24 & 0xFF;\n\t      bytes[offset + 5] = this.low >> 16 & 0xFF;\n\t      bytes[offset + 6] = this.low >> 8 & 0xFF;\n\t      bytes[offset + 7] = this.low & 0xFF;\n\t     },\n\t     assign: function Word64_assign(word) {\n\t      this.high = word.high;\n\t      this.low = word.low;\n\t     }\n\t    };\n\t    return Word64;\n\t   }();\n\t   var calculateSHA256 = function calculateSHA256Closure() {\n\t    function rotr(x, n) {\n\t     return x >>> n | x << 32 - n;\n\t    }\n\t    function ch(x, y, z) {\n\t     return x & y ^ ~x & z;\n\t    }\n\t    function maj(x, y, z) {\n\t     return x & y ^ x & z ^ y & z;\n\t    }\n\t    function sigma(x) {\n\t     return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n\t    }\n\t    function sigmaPrime(x) {\n\t     return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n\t    }\n\t    function littleSigma(x) {\n\t     return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n\t    }\n\t    function littleSigmaPrime(x) {\n\t     return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n\t    }\n\t    var k = [\n\t     0x428a2f98,\n\t     0x71374491,\n\t     0xb5c0fbcf,\n\t     0xe9b5dba5,\n\t     0x3956c25b,\n\t     0x59f111f1,\n\t     0x923f82a4,\n\t     0xab1c5ed5,\n\t     0xd807aa98,\n\t     0x12835b01,\n\t     0x243185be,\n\t     0x550c7dc3,\n\t     0x72be5d74,\n\t     0x80deb1fe,\n\t     0x9bdc06a7,\n\t     0xc19bf174,\n\t     0xe49b69c1,\n\t     0xefbe4786,\n\t     0x0fc19dc6,\n\t     0x240ca1cc,\n\t     0x2de92c6f,\n\t     0x4a7484aa,\n\t     0x5cb0a9dc,\n\t     0x76f988da,\n\t     0x983e5152,\n\t     0xa831c66d,\n\t     0xb00327c8,\n\t     0xbf597fc7,\n\t     0xc6e00bf3,\n\t     0xd5a79147,\n\t     0x06ca6351,\n\t     0x14292967,\n\t     0x27b70a85,\n\t     0x2e1b2138,\n\t     0x4d2c6dfc,\n\t     0x53380d13,\n\t     0x650a7354,\n\t     0x766a0abb,\n\t     0x81c2c92e,\n\t     0x92722c85,\n\t     0xa2bfe8a1,\n\t     0xa81a664b,\n\t     0xc24b8b70,\n\t     0xc76c51a3,\n\t     0xd192e819,\n\t     0xd6990624,\n\t     0xf40e3585,\n\t     0x106aa070,\n\t     0x19a4c116,\n\t     0x1e376c08,\n\t     0x2748774c,\n\t     0x34b0bcb5,\n\t     0x391c0cb3,\n\t     0x4ed8aa4a,\n\t     0x5b9cca4f,\n\t     0x682e6ff3,\n\t     0x748f82ee,\n\t     0x78a5636f,\n\t     0x84c87814,\n\t     0x8cc70208,\n\t     0x90befffa,\n\t     0xa4506ceb,\n\t     0xbef9a3f7,\n\t     0xc67178f2\n\t    ];\n\t    function hash(data, offset, length) {\n\t     var h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a, h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;\n\t     var paddedLength = Math.ceil((length + 9) / 64) * 64;\n\t     var padded = new Uint8Array(paddedLength);\n\t     var i, j, n;\n\t     for (i = 0; i < length; ++i) {\n\t      padded[i] = data[offset++];\n\t     }\n\t     padded[i++] = 0x80;\n\t     n = paddedLength - 8;\n\t     while (i < n) {\n\t      padded[i++] = 0;\n\t     }\n\t     padded[i++] = 0;\n\t     padded[i++] = 0;\n\t     padded[i++] = 0;\n\t     padded[i++] = length >>> 29 & 0xFF;\n\t     padded[i++] = length >> 21 & 0xFF;\n\t     padded[i++] = length >> 13 & 0xFF;\n\t     padded[i++] = length >> 5 & 0xFF;\n\t     padded[i++] = length << 3 & 0xFF;\n\t     var w = new Uint32Array(64);\n\t     for (i = 0; i < paddedLength;) {\n\t      for (j = 0; j < 16; ++j) {\n\t       w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n\t       i += 4;\n\t      }\n\t      for (j = 16; j < 64; ++j) {\n\t       w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n\t      }\n\t      var a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, t1, t2;\n\t      for (j = 0; j < 64; ++j) {\n\t       t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n\t       t2 = sigma(a) + maj(a, b, c);\n\t       h = g;\n\t       g = f;\n\t       f = e;\n\t       e = d + t1 | 0;\n\t       d = c;\n\t       c = b;\n\t       b = a;\n\t       a = t1 + t2 | 0;\n\t      }\n\t      h0 = h0 + a | 0;\n\t      h1 = h1 + b | 0;\n\t      h2 = h2 + c | 0;\n\t      h3 = h3 + d | 0;\n\t      h4 = h4 + e | 0;\n\t      h5 = h5 + f | 0;\n\t      h6 = h6 + g | 0;\n\t      h7 = h7 + h | 0;\n\t     }\n\t     return new Uint8Array([\n\t      h0 >> 24 & 0xFF,\n\t      h0 >> 16 & 0xFF,\n\t      h0 >> 8 & 0xFF,\n\t      h0 & 0xFF,\n\t      h1 >> 24 & 0xFF,\n\t      h1 >> 16 & 0xFF,\n\t      h1 >> 8 & 0xFF,\n\t      h1 & 0xFF,\n\t      h2 >> 24 & 0xFF,\n\t      h2 >> 16 & 0xFF,\n\t      h2 >> 8 & 0xFF,\n\t      h2 & 0xFF,\n\t      h3 >> 24 & 0xFF,\n\t      h3 >> 16 & 0xFF,\n\t      h3 >> 8 & 0xFF,\n\t      h3 & 0xFF,\n\t      h4 >> 24 & 0xFF,\n\t      h4 >> 16 & 0xFF,\n\t      h4 >> 8 & 0xFF,\n\t      h4 & 0xFF,\n\t      h5 >> 24 & 0xFF,\n\t      h5 >> 16 & 0xFF,\n\t      h5 >> 8 & 0xFF,\n\t      h5 & 0xFF,\n\t      h6 >> 24 & 0xFF,\n\t      h6 >> 16 & 0xFF,\n\t      h6 >> 8 & 0xFF,\n\t      h6 & 0xFF,\n\t      h7 >> 24 & 0xFF,\n\t      h7 >> 16 & 0xFF,\n\t      h7 >> 8 & 0xFF,\n\t      h7 & 0xFF\n\t     ]);\n\t    }\n\t    return hash;\n\t   }();\n\t   var calculateSHA512 = function calculateSHA512Closure() {\n\t    function ch(result, x, y, z, tmp) {\n\t     result.assign(x);\n\t     result.and(y);\n\t     tmp.assign(x);\n\t     tmp.not();\n\t     tmp.and(z);\n\t     result.xor(tmp);\n\t    }\n\t    function maj(result, x, y, z, tmp) {\n\t     result.assign(x);\n\t     result.and(y);\n\t     tmp.assign(x);\n\t     tmp.and(z);\n\t     result.xor(tmp);\n\t     tmp.assign(y);\n\t     tmp.and(z);\n\t     result.xor(tmp);\n\t    }\n\t    function sigma(result, x, tmp) {\n\t     result.assign(x);\n\t     result.rotateRight(28);\n\t     tmp.assign(x);\n\t     tmp.rotateRight(34);\n\t     result.xor(tmp);\n\t     tmp.assign(x);\n\t     tmp.rotateRight(39);\n\t     result.xor(tmp);\n\t    }\n\t    function sigmaPrime(result, x, tmp) {\n\t     result.assign(x);\n\t     result.rotateRight(14);\n\t     tmp.assign(x);\n\t     tmp.rotateRight(18);\n\t     result.xor(tmp);\n\t     tmp.assign(x);\n\t     tmp.rotateRight(41);\n\t     result.xor(tmp);\n\t    }\n\t    function littleSigma(result, x, tmp) {\n\t     result.assign(x);\n\t     result.rotateRight(1);\n\t     tmp.assign(x);\n\t     tmp.rotateRight(8);\n\t     result.xor(tmp);\n\t     tmp.assign(x);\n\t     tmp.shiftRight(7);\n\t     result.xor(tmp);\n\t    }\n\t    function littleSigmaPrime(result, x, tmp) {\n\t     result.assign(x);\n\t     result.rotateRight(19);\n\t     tmp.assign(x);\n\t     tmp.rotateRight(61);\n\t     result.xor(tmp);\n\t     tmp.assign(x);\n\t     tmp.shiftRight(6);\n\t     result.xor(tmp);\n\t    }\n\t    var k = [\n\t     new Word64(0x428a2f98, 0xd728ae22),\n\t     new Word64(0x71374491, 0x23ef65cd),\n\t     new Word64(0xb5c0fbcf, 0xec4d3b2f),\n\t     new Word64(0xe9b5dba5, 0x8189dbbc),\n\t     new Word64(0x3956c25b, 0xf348b538),\n\t     new Word64(0x59f111f1, 0xb605d019),\n\t     new Word64(0x923f82a4, 0xaf194f9b),\n\t     new Word64(0xab1c5ed5, 0xda6d8118),\n\t     new Word64(0xd807aa98, 0xa3030242),\n\t     new Word64(0x12835b01, 0x45706fbe),\n\t     new Word64(0x243185be, 0x4ee4b28c),\n\t     new Word64(0x550c7dc3, 0xd5ffb4e2),\n\t     new Word64(0x72be5d74, 0xf27b896f),\n\t     new Word64(0x80deb1fe, 0x3b1696b1),\n\t     new Word64(0x9bdc06a7, 0x25c71235),\n\t     new Word64(0xc19bf174, 0xcf692694),\n\t     new Word64(0xe49b69c1, 0x9ef14ad2),\n\t     new Word64(0xefbe4786, 0x384f25e3),\n\t     new Word64(0x0fc19dc6, 0x8b8cd5b5),\n\t     new Word64(0x240ca1cc, 0x77ac9c65),\n\t     new Word64(0x2de92c6f, 0x592b0275),\n\t     new Word64(0x4a7484aa, 0x6ea6e483),\n\t     new Word64(0x5cb0a9dc, 0xbd41fbd4),\n\t     new Word64(0x76f988da, 0x831153b5),\n\t     new Word64(0x983e5152, 0xee66dfab),\n\t     new Word64(0xa831c66d, 0x2db43210),\n\t     new Word64(0xb00327c8, 0x98fb213f),\n\t     new Word64(0xbf597fc7, 0xbeef0ee4),\n\t     new Word64(0xc6e00bf3, 0x3da88fc2),\n\t     new Word64(0xd5a79147, 0x930aa725),\n\t     new Word64(0x06ca6351, 0xe003826f),\n\t     new Word64(0x14292967, 0x0a0e6e70),\n\t     new Word64(0x27b70a85, 0x46d22ffc),\n\t     new Word64(0x2e1b2138, 0x5c26c926),\n\t     new Word64(0x4d2c6dfc, 0x5ac42aed),\n\t     new Word64(0x53380d13, 0x9d95b3df),\n\t     new Word64(0x650a7354, 0x8baf63de),\n\t     new Word64(0x766a0abb, 0x3c77b2a8),\n\t     new Word64(0x81c2c92e, 0x47edaee6),\n\t     new Word64(0x92722c85, 0x1482353b),\n\t     new Word64(0xa2bfe8a1, 0x4cf10364),\n\t     new Word64(0xa81a664b, 0xbc423001),\n\t     new Word64(0xc24b8b70, 0xd0f89791),\n\t     new Word64(0xc76c51a3, 0x0654be30),\n\t     new Word64(0xd192e819, 0xd6ef5218),\n\t     new Word64(0xd6990624, 0x5565a910),\n\t     new Word64(0xf40e3585, 0x5771202a),\n\t     new Word64(0x106aa070, 0x32bbd1b8),\n\t     new Word64(0x19a4c116, 0xb8d2d0c8),\n\t     new Word64(0x1e376c08, 0x5141ab53),\n\t     new Word64(0x2748774c, 0xdf8eeb99),\n\t     new Word64(0x34b0bcb5, 0xe19b48a8),\n\t     new Word64(0x391c0cb3, 0xc5c95a63),\n\t     new Word64(0x4ed8aa4a, 0xe3418acb),\n\t     new Word64(0x5b9cca4f, 0x7763e373),\n\t     new Word64(0x682e6ff3, 0xd6b2b8a3),\n\t     new Word64(0x748f82ee, 0x5defb2fc),\n\t     new Word64(0x78a5636f, 0x43172f60),\n\t     new Word64(0x84c87814, 0xa1f0ab72),\n\t     new Word64(0x8cc70208, 0x1a6439ec),\n\t     new Word64(0x90befffa, 0x23631e28),\n\t     new Word64(0xa4506ceb, 0xde82bde9),\n\t     new Word64(0xbef9a3f7, 0xb2c67915),\n\t     new Word64(0xc67178f2, 0xe372532b),\n\t     new Word64(0xca273ece, 0xea26619c),\n\t     new Word64(0xd186b8c7, 0x21c0c207),\n\t     new Word64(0xeada7dd6, 0xcde0eb1e),\n\t     new Word64(0xf57d4f7f, 0xee6ed178),\n\t     new Word64(0x06f067aa, 0x72176fba),\n\t     new Word64(0x0a637dc5, 0xa2c898a6),\n\t     new Word64(0x113f9804, 0xbef90dae),\n\t     new Word64(0x1b710b35, 0x131c471b),\n\t     new Word64(0x28db77f5, 0x23047d84),\n\t     new Word64(0x32caab7b, 0x40c72493),\n\t     new Word64(0x3c9ebe0a, 0x15c9bebc),\n\t     new Word64(0x431d67c4, 0x9c100d4c),\n\t     new Word64(0x4cc5d4be, 0xcb3e42b6),\n\t     new Word64(0x597f299c, 0xfc657e2a),\n\t     new Word64(0x5fcb6fab, 0x3ad6faec),\n\t     new Word64(0x6c44198c, 0x4a475817)\n\t    ];\n\t    function hash(data, offset, length, mode384) {\n\t     mode384 = !!mode384;\n\t     var h0, h1, h2, h3, h4, h5, h6, h7;\n\t     if (!mode384) {\n\t      h0 = new Word64(0x6a09e667, 0xf3bcc908);\n\t      h1 = new Word64(0xbb67ae85, 0x84caa73b);\n\t      h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n\t      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n\t      h4 = new Word64(0x510e527f, 0xade682d1);\n\t      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n\t      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n\t      h7 = new Word64(0x5be0cd19, 0x137e2179);\n\t     } else {\n\t      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n\t      h1 = new Word64(0x629a292a, 0x367cd507);\n\t      h2 = new Word64(0x9159015a, 0x3070dd17);\n\t      h3 = new Word64(0x152fecd8, 0xf70e5939);\n\t      h4 = new Word64(0x67332667, 0xffc00b31);\n\t      h5 = new Word64(0x8eb44a87, 0x68581511);\n\t      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n\t      h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n\t     }\n\t     var paddedLength = Math.ceil((length + 17) / 128) * 128;\n\t     var padded = new Uint8Array(paddedLength);\n\t     var i, j, n;\n\t     for (i = 0; i < length; ++i) {\n\t      padded[i] = data[offset++];\n\t     }\n\t     padded[i++] = 0x80;\n\t     n = paddedLength - 16;\n\t     while (i < n) {\n\t      padded[i++] = 0;\n\t     }\n\t     padded[i++] = 0;\n\t     padded[i++] = 0;\n\t     padded[i++] = 0;\n\t     padded[i++] = 0;\n\t     padded[i++] = 0;\n\t     padded[i++] = 0;\n\t     padded[i++] = 0;\n\t     padded[i++] = 0;\n\t     padded[i++] = 0;\n\t     padded[i++] = 0;\n\t     padded[i++] = 0;\n\t     padded[i++] = length >>> 29 & 0xFF;\n\t     padded[i++] = length >> 21 & 0xFF;\n\t     padded[i++] = length >> 13 & 0xFF;\n\t     padded[i++] = length >> 5 & 0xFF;\n\t     padded[i++] = length << 3 & 0xFF;\n\t     var w = new Array(80);\n\t     for (i = 0; i < 80; i++) {\n\t      w[i] = new Word64(0, 0);\n\t     }\n\t     var a = new Word64(0, 0), b = new Word64(0, 0), c = new Word64(0, 0);\n\t     var d = new Word64(0, 0), e = new Word64(0, 0), f = new Word64(0, 0);\n\t     var g = new Word64(0, 0), h = new Word64(0, 0);\n\t     var t1 = new Word64(0, 0), t2 = new Word64(0, 0);\n\t     var tmp1 = new Word64(0, 0), tmp2 = new Word64(0, 0), tmp3;\n\t     for (i = 0; i < paddedLength;) {\n\t      for (j = 0; j < 16; ++j) {\n\t       w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n\t       w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n\t       i += 8;\n\t      }\n\t      for (j = 16; j < 80; ++j) {\n\t       tmp3 = w[j];\n\t       littleSigmaPrime(tmp3, w[j - 2], tmp2);\n\t       tmp3.add(w[j - 7]);\n\t       littleSigma(tmp1, w[j - 15], tmp2);\n\t       tmp3.add(tmp1);\n\t       tmp3.add(w[j - 16]);\n\t      }\n\t      a.assign(h0);\n\t      b.assign(h1);\n\t      c.assign(h2);\n\t      d.assign(h3);\n\t      e.assign(h4);\n\t      f.assign(h5);\n\t      g.assign(h6);\n\t      h.assign(h7);\n\t      for (j = 0; j < 80; ++j) {\n\t       t1.assign(h);\n\t       sigmaPrime(tmp1, e, tmp2);\n\t       t1.add(tmp1);\n\t       ch(tmp1, e, f, g, tmp2);\n\t       t1.add(tmp1);\n\t       t1.add(k[j]);\n\t       t1.add(w[j]);\n\t       sigma(t2, a, tmp2);\n\t       maj(tmp1, a, b, c, tmp2);\n\t       t2.add(tmp1);\n\t       tmp3 = h;\n\t       h = g;\n\t       g = f;\n\t       f = e;\n\t       d.add(t1);\n\t       e = d;\n\t       d = c;\n\t       c = b;\n\t       b = a;\n\t       tmp3.assign(t1);\n\t       tmp3.add(t2);\n\t       a = tmp3;\n\t      }\n\t      h0.add(a);\n\t      h1.add(b);\n\t      h2.add(c);\n\t      h3.add(d);\n\t      h4.add(e);\n\t      h5.add(f);\n\t      h6.add(g);\n\t      h7.add(h);\n\t     }\n\t     var result;\n\t     if (!mode384) {\n\t      result = new Uint8Array(64);\n\t      h0.copyTo(result, 0);\n\t      h1.copyTo(result, 8);\n\t      h2.copyTo(result, 16);\n\t      h3.copyTo(result, 24);\n\t      h4.copyTo(result, 32);\n\t      h5.copyTo(result, 40);\n\t      h6.copyTo(result, 48);\n\t      h7.copyTo(result, 56);\n\t     } else {\n\t      result = new Uint8Array(48);\n\t      h0.copyTo(result, 0);\n\t      h1.copyTo(result, 8);\n\t      h2.copyTo(result, 16);\n\t      h3.copyTo(result, 24);\n\t      h4.copyTo(result, 32);\n\t      h5.copyTo(result, 40);\n\t     }\n\t     return result;\n\t    }\n\t    return hash;\n\t   }();\n\t   var calculateSHA384 = function calculateSHA384Closure() {\n\t    function hash(data, offset, length) {\n\t     return calculateSHA512(data, offset, length, true);\n\t    }\n\t    return hash;\n\t   }();\n\t   var NullCipher = function NullCipherClosure() {\n\t    function NullCipher() {\n\t    }\n\t    NullCipher.prototype = {\n\t     decryptBlock: function NullCipher_decryptBlock(data) {\n\t      return data;\n\t     }\n\t    };\n\t    return NullCipher;\n\t   }();\n\t   var AES128Cipher = function AES128CipherClosure() {\n\t    var rcon = new Uint8Array([\n\t     0x8d,\n\t     0x01,\n\t     0x02,\n\t     0x04,\n\t     0x08,\n\t     0x10,\n\t     0x20,\n\t     0x40,\n\t     0x80,\n\t     0x1b,\n\t     0x36,\n\t     0x6c,\n\t     0xd8,\n\t     0xab,\n\t     0x4d,\n\t     0x9a,\n\t     0x2f,\n\t     0x5e,\n\t     0xbc,\n\t     0x63,\n\t     0xc6,\n\t     0x97,\n\t     0x35,\n\t     0x6a,\n\t     0xd4,\n\t     0xb3,\n\t     0x7d,\n\t     0xfa,\n\t     0xef,\n\t     0xc5,\n\t     0x91,\n\t     0x39,\n\t     0x72,\n\t     0xe4,\n\t     0xd3,\n\t     0xbd,\n\t     0x61,\n\t     0xc2,\n\t     0x9f,\n\t     0x25,\n\t     0x4a,\n\t     0x94,\n\t     0x33,\n\t     0x66,\n\t     0xcc,\n\t     0x83,\n\t     0x1d,\n\t     0x3a,\n\t     0x74,\n\t     0xe8,\n\t     0xcb,\n\t     0x8d,\n\t     0x01,\n\t     0x02,\n\t     0x04,\n\t     0x08,\n\t     0x10,\n\t     0x20,\n\t     0x40,\n\t     0x80,\n\t     0x1b,\n\t     0x36,\n\t     0x6c,\n\t     0xd8,\n\t     0xab,\n\t     0x4d,\n\t     0x9a,\n\t     0x2f,\n\t     0x5e,\n\t     0xbc,\n\t     0x63,\n\t     0xc6,\n\t     0x97,\n\t     0x35,\n\t     0x6a,\n\t     0xd4,\n\t     0xb3,\n\t     0x7d,\n\t     0xfa,\n\t     0xef,\n\t     0xc5,\n\t     0x91,\n\t     0x39,\n\t     0x72,\n\t     0xe4,\n\t     0xd3,\n\t     0xbd,\n\t     0x61,\n\t     0xc2,\n\t     0x9f,\n\t     0x25,\n\t     0x4a,\n\t     0x94,\n\t     0x33,\n\t     0x66,\n\t     0xcc,\n\t     0x83,\n\t     0x1d,\n\t     0x3a,\n\t     0x74,\n\t     0xe8,\n\t     0xcb,\n\t     0x8d,\n\t     0x01,\n\t     0x02,\n\t     0x04,\n\t     0x08,\n\t     0x10,\n\t     0x20,\n\t     0x40,\n\t     0x80,\n\t     0x1b,\n\t     0x36,\n\t     0x6c,\n\t     0xd8,\n\t     0xab,\n\t     0x4d,\n\t     0x9a,\n\t     0x2f,\n\t     0x5e,\n\t     0xbc,\n\t     0x63,\n\t     0xc6,\n\t     0x97,\n\t     0x35,\n\t     0x6a,\n\t     0xd4,\n\t     0xb3,\n\t     0x7d,\n\t     0xfa,\n\t     0xef,\n\t     0xc5,\n\t     0x91,\n\t     0x39,\n\t     0x72,\n\t     0xe4,\n\t     0xd3,\n\t     0xbd,\n\t     0x61,\n\t     0xc2,\n\t     0x9f,\n\t     0x25,\n\t     0x4a,\n\t     0x94,\n\t     0x33,\n\t     0x66,\n\t     0xcc,\n\t     0x83,\n\t     0x1d,\n\t     0x3a,\n\t     0x74,\n\t     0xe8,\n\t     0xcb,\n\t     0x8d,\n\t     0x01,\n\t     0x02,\n\t     0x04,\n\t     0x08,\n\t     0x10,\n\t     0x20,\n\t     0x40,\n\t     0x80,\n\t     0x1b,\n\t     0x36,\n\t     0x6c,\n\t     0xd8,\n\t     0xab,\n\t     0x4d,\n\t     0x9a,\n\t     0x2f,\n\t     0x5e,\n\t     0xbc,\n\t     0x63,\n\t     0xc6,\n\t     0x97,\n\t     0x35,\n\t     0x6a,\n\t     0xd4,\n\t     0xb3,\n\t     0x7d,\n\t     0xfa,\n\t     0xef,\n\t     0xc5,\n\t     0x91,\n\t     0x39,\n\t     0x72,\n\t     0xe4,\n\t     0xd3,\n\t     0xbd,\n\t     0x61,\n\t     0xc2,\n\t     0x9f,\n\t     0x25,\n\t     0x4a,\n\t     0x94,\n\t     0x33,\n\t     0x66,\n\t     0xcc,\n\t     0x83,\n\t     0x1d,\n\t     0x3a,\n\t     0x74,\n\t     0xe8,\n\t     0xcb,\n\t     0x8d,\n\t     0x01,\n\t     0x02,\n\t     0x04,\n\t     0x08,\n\t     0x10,\n\t     0x20,\n\t     0x40,\n\t     0x80,\n\t     0x1b,\n\t     0x36,\n\t     0x6c,\n\t     0xd8,\n\t     0xab,\n\t     0x4d,\n\t     0x9a,\n\t     0x2f,\n\t     0x5e,\n\t     0xbc,\n\t     0x63,\n\t     0xc6,\n\t     0x97,\n\t     0x35,\n\t     0x6a,\n\t     0xd4,\n\t     0xb3,\n\t     0x7d,\n\t     0xfa,\n\t     0xef,\n\t     0xc5,\n\t     0x91,\n\t     0x39,\n\t     0x72,\n\t     0xe4,\n\t     0xd3,\n\t     0xbd,\n\t     0x61,\n\t     0xc2,\n\t     0x9f,\n\t     0x25,\n\t     0x4a,\n\t     0x94,\n\t     0x33,\n\t     0x66,\n\t     0xcc,\n\t     0x83,\n\t     0x1d,\n\t     0x3a,\n\t     0x74,\n\t     0xe8,\n\t     0xcb,\n\t     0x8d\n\t    ]);\n\t    var s = new Uint8Array([\n\t     0x63,\n\t     0x7c,\n\t     0x77,\n\t     0x7b,\n\t     0xf2,\n\t     0x6b,\n\t     0x6f,\n\t     0xc5,\n\t     0x30,\n\t     0x01,\n\t     0x67,\n\t     0x2b,\n\t     0xfe,\n\t     0xd7,\n\t     0xab,\n\t     0x76,\n\t     0xca,\n\t     0x82,\n\t     0xc9,\n\t     0x7d,\n\t     0xfa,\n\t     0x59,\n\t     0x47,\n\t     0xf0,\n\t     0xad,\n\t     0xd4,\n\t     0xa2,\n\t     0xaf,\n\t     0x9c,\n\t     0xa4,\n\t     0x72,\n\t     0xc0,\n\t     0xb7,\n\t     0xfd,\n\t     0x93,\n\t     0x26,\n\t     0x36,\n\t     0x3f,\n\t     0xf7,\n\t     0xcc,\n\t     0x34,\n\t     0xa5,\n\t     0xe5,\n\t     0xf1,\n\t     0x71,\n\t     0xd8,\n\t     0x31,\n\t     0x15,\n\t     0x04,\n\t     0xc7,\n\t     0x23,\n\t     0xc3,\n\t     0x18,\n\t     0x96,\n\t     0x05,\n\t     0x9a,\n\t     0x07,\n\t     0x12,\n\t     0x80,\n\t     0xe2,\n\t     0xeb,\n\t     0x27,\n\t     0xb2,\n\t     0x75,\n\t     0x09,\n\t     0x83,\n\t     0x2c,\n\t     0x1a,\n\t     0x1b,\n\t     0x6e,\n\t     0x5a,\n\t     0xa0,\n\t     0x52,\n\t     0x3b,\n\t     0xd6,\n\t     0xb3,\n\t     0x29,\n\t     0xe3,\n\t     0x2f,\n\t     0x84,\n\t     0x53,\n\t     0xd1,\n\t     0x00,\n\t     0xed,\n\t     0x20,\n\t     0xfc,\n\t     0xb1,\n\t     0x5b,\n\t     0x6a,\n\t     0xcb,\n\t     0xbe,\n\t     0x39,\n\t     0x4a,\n\t     0x4c,\n\t     0x58,\n\t     0xcf,\n\t     0xd0,\n\t     0xef,\n\t     0xaa,\n\t     0xfb,\n\t     0x43,\n\t     0x4d,\n\t     0x33,\n\t     0x85,\n\t     0x45,\n\t     0xf9,\n\t     0x02,\n\t     0x7f,\n\t     0x50,\n\t     0x3c,\n\t     0x9f,\n\t     0xa8,\n\t     0x51,\n\t     0xa3,\n\t     0x40,\n\t     0x8f,\n\t     0x92,\n\t     0x9d,\n\t     0x38,\n\t     0xf5,\n\t     0xbc,\n\t     0xb6,\n\t     0xda,\n\t     0x21,\n\t     0x10,\n\t     0xff,\n\t     0xf3,\n\t     0xd2,\n\t     0xcd,\n\t     0x0c,\n\t     0x13,\n\t     0xec,\n\t     0x5f,\n\t     0x97,\n\t     0x44,\n\t     0x17,\n\t     0xc4,\n\t     0xa7,\n\t     0x7e,\n\t     0x3d,\n\t     0x64,\n\t     0x5d,\n\t     0x19,\n\t     0x73,\n\t     0x60,\n\t     0x81,\n\t     0x4f,\n\t     0xdc,\n\t     0x22,\n\t     0x2a,\n\t     0x90,\n\t     0x88,\n\t     0x46,\n\t     0xee,\n\t     0xb8,\n\t     0x14,\n\t     0xde,\n\t     0x5e,\n\t     0x0b,\n\t     0xdb,\n\t     0xe0,\n\t     0x32,\n\t     0x3a,\n\t     0x0a,\n\t     0x49,\n\t     0x06,\n\t     0x24,\n\t     0x5c,\n\t     0xc2,\n\t     0xd3,\n\t     0xac,\n\t     0x62,\n\t     0x91,\n\t     0x95,\n\t     0xe4,\n\t     0x79,\n\t     0xe7,\n\t     0xc8,\n\t     0x37,\n\t     0x6d,\n\t     0x8d,\n\t     0xd5,\n\t     0x4e,\n\t     0xa9,\n\t     0x6c,\n\t     0x56,\n\t     0xf4,\n\t     0xea,\n\t     0x65,\n\t     0x7a,\n\t     0xae,\n\t     0x08,\n\t     0xba,\n\t     0x78,\n\t     0x25,\n\t     0x2e,\n\t     0x1c,\n\t     0xa6,\n\t     0xb4,\n\t     0xc6,\n\t     0xe8,\n\t     0xdd,\n\t     0x74,\n\t     0x1f,\n\t     0x4b,\n\t     0xbd,\n\t     0x8b,\n\t     0x8a,\n\t     0x70,\n\t     0x3e,\n\t     0xb5,\n\t     0x66,\n\t     0x48,\n\t     0x03,\n\t     0xf6,\n\t     0x0e,\n\t     0x61,\n\t     0x35,\n\t     0x57,\n\t     0xb9,\n\t     0x86,\n\t     0xc1,\n\t     0x1d,\n\t     0x9e,\n\t     0xe1,\n\t     0xf8,\n\t     0x98,\n\t     0x11,\n\t     0x69,\n\t     0xd9,\n\t     0x8e,\n\t     0x94,\n\t     0x9b,\n\t     0x1e,\n\t     0x87,\n\t     0xe9,\n\t     0xce,\n\t     0x55,\n\t     0x28,\n\t     0xdf,\n\t     0x8c,\n\t     0xa1,\n\t     0x89,\n\t     0x0d,\n\t     0xbf,\n\t     0xe6,\n\t     0x42,\n\t     0x68,\n\t     0x41,\n\t     0x99,\n\t     0x2d,\n\t     0x0f,\n\t     0xb0,\n\t     0x54,\n\t     0xbb,\n\t     0x16\n\t    ]);\n\t    var inv_s = new Uint8Array([\n\t     0x52,\n\t     0x09,\n\t     0x6a,\n\t     0xd5,\n\t     0x30,\n\t     0x36,\n\t     0xa5,\n\t     0x38,\n\t     0xbf,\n\t     0x40,\n\t     0xa3,\n\t     0x9e,\n\t     0x81,\n\t     0xf3,\n\t     0xd7,\n\t     0xfb,\n\t     0x7c,\n\t     0xe3,\n\t     0x39,\n\t     0x82,\n\t     0x9b,\n\t     0x2f,\n\t     0xff,\n\t     0x87,\n\t     0x34,\n\t     0x8e,\n\t     0x43,\n\t     0x44,\n\t     0xc4,\n\t     0xde,\n\t     0xe9,\n\t     0xcb,\n\t     0x54,\n\t     0x7b,\n\t     0x94,\n\t     0x32,\n\t     0xa6,\n\t     0xc2,\n\t     0x23,\n\t     0x3d,\n\t     0xee,\n\t     0x4c,\n\t     0x95,\n\t     0x0b,\n\t     0x42,\n\t     0xfa,\n\t     0xc3,\n\t     0x4e,\n\t     0x08,\n\t     0x2e,\n\t     0xa1,\n\t     0x66,\n\t     0x28,\n\t     0xd9,\n\t     0x24,\n\t     0xb2,\n\t     0x76,\n\t     0x5b,\n\t     0xa2,\n\t     0x49,\n\t     0x6d,\n\t     0x8b,\n\t     0xd1,\n\t     0x25,\n\t     0x72,\n\t     0xf8,\n\t     0xf6,\n\t     0x64,\n\t     0x86,\n\t     0x68,\n\t     0x98,\n\t     0x16,\n\t     0xd4,\n\t     0xa4,\n\t     0x5c,\n\t     0xcc,\n\t     0x5d,\n\t     0x65,\n\t     0xb6,\n\t     0x92,\n\t     0x6c,\n\t     0x70,\n\t     0x48,\n\t     0x50,\n\t     0xfd,\n\t     0xed,\n\t     0xb9,\n\t     0xda,\n\t     0x5e,\n\t     0x15,\n\t     0x46,\n\t     0x57,\n\t     0xa7,\n\t     0x8d,\n\t     0x9d,\n\t     0x84,\n\t     0x90,\n\t     0xd8,\n\t     0xab,\n\t     0x00,\n\t     0x8c,\n\t     0xbc,\n\t     0xd3,\n\t     0x0a,\n\t     0xf7,\n\t     0xe4,\n\t     0x58,\n\t     0x05,\n\t     0xb8,\n\t     0xb3,\n\t     0x45,\n\t     0x06,\n\t     0xd0,\n\t     0x2c,\n\t     0x1e,\n\t     0x8f,\n\t     0xca,\n\t     0x3f,\n\t     0x0f,\n\t     0x02,\n\t     0xc1,\n\t     0xaf,\n\t     0xbd,\n\t     0x03,\n\t     0x01,\n\t     0x13,\n\t     0x8a,\n\t     0x6b,\n\t     0x3a,\n\t     0x91,\n\t     0x11,\n\t     0x41,\n\t     0x4f,\n\t     0x67,\n\t     0xdc,\n\t     0xea,\n\t     0x97,\n\t     0xf2,\n\t     0xcf,\n\t     0xce,\n\t     0xf0,\n\t     0xb4,\n\t     0xe6,\n\t     0x73,\n\t     0x96,\n\t     0xac,\n\t     0x74,\n\t     0x22,\n\t     0xe7,\n\t     0xad,\n\t     0x35,\n\t     0x85,\n\t     0xe2,\n\t     0xf9,\n\t     0x37,\n\t     0xe8,\n\t     0x1c,\n\t     0x75,\n\t     0xdf,\n\t     0x6e,\n\t     0x47,\n\t     0xf1,\n\t     0x1a,\n\t     0x71,\n\t     0x1d,\n\t     0x29,\n\t     0xc5,\n\t     0x89,\n\t     0x6f,\n\t     0xb7,\n\t     0x62,\n\t     0x0e,\n\t     0xaa,\n\t     0x18,\n\t     0xbe,\n\t     0x1b,\n\t     0xfc,\n\t     0x56,\n\t     0x3e,\n\t     0x4b,\n\t     0xc6,\n\t     0xd2,\n\t     0x79,\n\t     0x20,\n\t     0x9a,\n\t     0xdb,\n\t     0xc0,\n\t     0xfe,\n\t     0x78,\n\t     0xcd,\n\t     0x5a,\n\t     0xf4,\n\t     0x1f,\n\t     0xdd,\n\t     0xa8,\n\t     0x33,\n\t     0x88,\n\t     0x07,\n\t     0xc7,\n\t     0x31,\n\t     0xb1,\n\t     0x12,\n\t     0x10,\n\t     0x59,\n\t     0x27,\n\t     0x80,\n\t     0xec,\n\t     0x5f,\n\t     0x60,\n\t     0x51,\n\t     0x7f,\n\t     0xa9,\n\t     0x19,\n\t     0xb5,\n\t     0x4a,\n\t     0x0d,\n\t     0x2d,\n\t     0xe5,\n\t     0x7a,\n\t     0x9f,\n\t     0x93,\n\t     0xc9,\n\t     0x9c,\n\t     0xef,\n\t     0xa0,\n\t     0xe0,\n\t     0x3b,\n\t     0x4d,\n\t     0xae,\n\t     0x2a,\n\t     0xf5,\n\t     0xb0,\n\t     0xc8,\n\t     0xeb,\n\t     0xbb,\n\t     0x3c,\n\t     0x83,\n\t     0x53,\n\t     0x99,\n\t     0x61,\n\t     0x17,\n\t     0x2b,\n\t     0x04,\n\t     0x7e,\n\t     0xba,\n\t     0x77,\n\t     0xd6,\n\t     0x26,\n\t     0xe1,\n\t     0x69,\n\t     0x14,\n\t     0x63,\n\t     0x55,\n\t     0x21,\n\t     0x0c,\n\t     0x7d\n\t    ]);\n\t    var mixCol = new Uint8Array(256);\n\t    for (var i = 0; i < 256; i++) {\n\t     if (i < 128) {\n\t      mixCol[i] = i << 1;\n\t     } else {\n\t      mixCol[i] = i << 1 ^ 0x1b;\n\t     }\n\t    }\n\t    var mix = new Uint32Array([\n\t     0x00000000,\n\t     0x0e090d0b,\n\t     0x1c121a16,\n\t     0x121b171d,\n\t     0x3824342c,\n\t     0x362d3927,\n\t     0x24362e3a,\n\t     0x2a3f2331,\n\t     0x70486858,\n\t     0x7e416553,\n\t     0x6c5a724e,\n\t     0x62537f45,\n\t     0x486c5c74,\n\t     0x4665517f,\n\t     0x547e4662,\n\t     0x5a774b69,\n\t     0xe090d0b0,\n\t     0xee99ddbb,\n\t     0xfc82caa6,\n\t     0xf28bc7ad,\n\t     0xd8b4e49c,\n\t     0xd6bde997,\n\t     0xc4a6fe8a,\n\t     0xcaaff381,\n\t     0x90d8b8e8,\n\t     0x9ed1b5e3,\n\t     0x8ccaa2fe,\n\t     0x82c3aff5,\n\t     0xa8fc8cc4,\n\t     0xa6f581cf,\n\t     0xb4ee96d2,\n\t     0xbae79bd9,\n\t     0xdb3bbb7b,\n\t     0xd532b670,\n\t     0xc729a16d,\n\t     0xc920ac66,\n\t     0xe31f8f57,\n\t     0xed16825c,\n\t     0xff0d9541,\n\t     0xf104984a,\n\t     0xab73d323,\n\t     0xa57ade28,\n\t     0xb761c935,\n\t     0xb968c43e,\n\t     0x9357e70f,\n\t     0x9d5eea04,\n\t     0x8f45fd19,\n\t     0x814cf012,\n\t     0x3bab6bcb,\n\t     0x35a266c0,\n\t     0x27b971dd,\n\t     0x29b07cd6,\n\t     0x038f5fe7,\n\t     0x0d8652ec,\n\t     0x1f9d45f1,\n\t     0x119448fa,\n\t     0x4be30393,\n\t     0x45ea0e98,\n\t     0x57f11985,\n\t     0x59f8148e,\n\t     0x73c737bf,\n\t     0x7dce3ab4,\n\t     0x6fd52da9,\n\t     0x61dc20a2,\n\t     0xad766df6,\n\t     0xa37f60fd,\n\t     0xb16477e0,\n\t     0xbf6d7aeb,\n\t     0x955259da,\n\t     0x9b5b54d1,\n\t     0x894043cc,\n\t     0x87494ec7,\n\t     0xdd3e05ae,\n\t     0xd33708a5,\n\t     0xc12c1fb8,\n\t     0xcf2512b3,\n\t     0xe51a3182,\n\t     0xeb133c89,\n\t     0xf9082b94,\n\t     0xf701269f,\n\t     0x4de6bd46,\n\t     0x43efb04d,\n\t     0x51f4a750,\n\t     0x5ffdaa5b,\n\t     0x75c2896a,\n\t     0x7bcb8461,\n\t     0x69d0937c,\n\t     0x67d99e77,\n\t     0x3daed51e,\n\t     0x33a7d815,\n\t     0x21bccf08,\n\t     0x2fb5c203,\n\t     0x058ae132,\n\t     0x0b83ec39,\n\t     0x1998fb24,\n\t     0x1791f62f,\n\t     0x764dd68d,\n\t     0x7844db86,\n\t     0x6a5fcc9b,\n\t     0x6456c190,\n\t     0x4e69e2a1,\n\t     0x4060efaa,\n\t     0x527bf8b7,\n\t     0x5c72f5bc,\n\t     0x0605bed5,\n\t     0x080cb3de,\n\t     0x1a17a4c3,\n\t     0x141ea9c8,\n\t     0x3e218af9,\n\t     0x302887f2,\n\t     0x223390ef,\n\t     0x2c3a9de4,\n\t     0x96dd063d,\n\t     0x98d40b36,\n\t     0x8acf1c2b,\n\t     0x84c61120,\n\t     0xaef93211,\n\t     0xa0f03f1a,\n\t     0xb2eb2807,\n\t     0xbce2250c,\n\t     0xe6956e65,\n\t     0xe89c636e,\n\t     0xfa877473,\n\t     0xf48e7978,\n\t     0xdeb15a49,\n\t     0xd0b85742,\n\t     0xc2a3405f,\n\t     0xccaa4d54,\n\t     0x41ecdaf7,\n\t     0x4fe5d7fc,\n\t     0x5dfec0e1,\n\t     0x53f7cdea,\n\t     0x79c8eedb,\n\t     0x77c1e3d0,\n\t     0x65daf4cd,\n\t     0x6bd3f9c6,\n\t     0x31a4b2af,\n\t     0x3fadbfa4,\n\t     0x2db6a8b9,\n\t     0x23bfa5b2,\n\t     0x09808683,\n\t     0x07898b88,\n\t     0x15929c95,\n\t     0x1b9b919e,\n\t     0xa17c0a47,\n\t     0xaf75074c,\n\t     0xbd6e1051,\n\t     0xb3671d5a,\n\t     0x99583e6b,\n\t     0x97513360,\n\t     0x854a247d,\n\t     0x8b432976,\n\t     0xd134621f,\n\t     0xdf3d6f14,\n\t     0xcd267809,\n\t     0xc32f7502,\n\t     0xe9105633,\n\t     0xe7195b38,\n\t     0xf5024c25,\n\t     0xfb0b412e,\n\t     0x9ad7618c,\n\t     0x94de6c87,\n\t     0x86c57b9a,\n\t     0x88cc7691,\n\t     0xa2f355a0,\n\t     0xacfa58ab,\n\t     0xbee14fb6,\n\t     0xb0e842bd,\n\t     0xea9f09d4,\n\t     0xe49604df,\n\t     0xf68d13c2,\n\t     0xf8841ec9,\n\t     0xd2bb3df8,\n\t     0xdcb230f3,\n\t     0xcea927ee,\n\t     0xc0a02ae5,\n\t     0x7a47b13c,\n\t     0x744ebc37,\n\t     0x6655ab2a,\n\t     0x685ca621,\n\t     0x42638510,\n\t     0x4c6a881b,\n\t     0x5e719f06,\n\t     0x5078920d,\n\t     0x0a0fd964,\n\t     0x0406d46f,\n\t     0x161dc372,\n\t     0x1814ce79,\n\t     0x322bed48,\n\t     0x3c22e043,\n\t     0x2e39f75e,\n\t     0x2030fa55,\n\t     0xec9ab701,\n\t     0xe293ba0a,\n\t     0xf088ad17,\n\t     0xfe81a01c,\n\t     0xd4be832d,\n\t     0xdab78e26,\n\t     0xc8ac993b,\n\t     0xc6a59430,\n\t     0x9cd2df59,\n\t     0x92dbd252,\n\t     0x80c0c54f,\n\t     0x8ec9c844,\n\t     0xa4f6eb75,\n\t     0xaaffe67e,\n\t     0xb8e4f163,\n\t     0xb6edfc68,\n\t     0x0c0a67b1,\n\t     0x02036aba,\n\t     0x10187da7,\n\t     0x1e1170ac,\n\t     0x342e539d,\n\t     0x3a275e96,\n\t     0x283c498b,\n\t     0x26354480,\n\t     0x7c420fe9,\n\t     0x724b02e2,\n\t     0x605015ff,\n\t     0x6e5918f4,\n\t     0x44663bc5,\n\t     0x4a6f36ce,\n\t     0x587421d3,\n\t     0x567d2cd8,\n\t     0x37a10c7a,\n\t     0x39a80171,\n\t     0x2bb3166c,\n\t     0x25ba1b67,\n\t     0x0f853856,\n\t     0x018c355d,\n\t     0x13972240,\n\t     0x1d9e2f4b,\n\t     0x47e96422,\n\t     0x49e06929,\n\t     0x5bfb7e34,\n\t     0x55f2733f,\n\t     0x7fcd500e,\n\t     0x71c45d05,\n\t     0x63df4a18,\n\t     0x6dd64713,\n\t     0xd731dcca,\n\t     0xd938d1c1,\n\t     0xcb23c6dc,\n\t     0xc52acbd7,\n\t     0xef15e8e6,\n\t     0xe11ce5ed,\n\t     0xf307f2f0,\n\t     0xfd0efffb,\n\t     0xa779b492,\n\t     0xa970b999,\n\t     0xbb6bae84,\n\t     0xb562a38f,\n\t     0x9f5d80be,\n\t     0x91548db5,\n\t     0x834f9aa8,\n\t     0x8d4697a3\n\t    ]);\n\t    function expandKey128(cipherKey) {\n\t     var b = 176, result = new Uint8Array(b);\n\t     result.set(cipherKey);\n\t     for (var j = 16, i = 1; j < b; ++i) {\n\t      var t1 = result[j - 3], t2 = result[j - 2], t3 = result[j - 1], t4 = result[j - 4];\n\t      t1 = s[t1];\n\t      t2 = s[t2];\n\t      t3 = s[t3];\n\t      t4 = s[t4];\n\t      t1 = t1 ^ rcon[i];\n\t      for (var n = 0; n < 4; ++n) {\n\t       result[j] = t1 ^= result[j - 16];\n\t       j++;\n\t       result[j] = t2 ^= result[j - 16];\n\t       j++;\n\t       result[j] = t3 ^= result[j - 16];\n\t       j++;\n\t       result[j] = t4 ^= result[j - 16];\n\t       j++;\n\t      }\n\t     }\n\t     return result;\n\t    }\n\t    function decrypt128(input, key) {\n\t     var state = new Uint8Array(16);\n\t     state.set(input);\n\t     var i, j, k;\n\t     var t, u, v;\n\t     for (j = 0, k = 160; j < 16; ++j, ++k) {\n\t      state[j] ^= key[k];\n\t     }\n\t     for (i = 9; i >= 1; --i) {\n\t      t = state[13];\n\t      state[13] = state[9];\n\t      state[9] = state[5];\n\t      state[5] = state[1];\n\t      state[1] = t;\n\t      t = state[14];\n\t      u = state[10];\n\t      state[14] = state[6];\n\t      state[10] = state[2];\n\t      state[6] = t;\n\t      state[2] = u;\n\t      t = state[15];\n\t      u = state[11];\n\t      v = state[7];\n\t      state[15] = state[3];\n\t      state[11] = t;\n\t      state[7] = u;\n\t      state[3] = v;\n\t      for (j = 0; j < 16; ++j) {\n\t       state[j] = inv_s[state[j]];\n\t      }\n\t      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n\t       state[j] ^= key[k];\n\t      }\n\t      for (j = 0; j < 16; j += 4) {\n\t       var s0 = mix[state[j]], s1 = mix[state[j + 1]], s2 = mix[state[j + 2]], s3 = mix[state[j + 3]];\n\t       t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n\t       state[j] = t >>> 24 & 0xFF;\n\t       state[j + 1] = t >> 16 & 0xFF;\n\t       state[j + 2] = t >> 8 & 0xFF;\n\t       state[j + 3] = t & 0xFF;\n\t      }\n\t     }\n\t     t = state[13];\n\t     state[13] = state[9];\n\t     state[9] = state[5];\n\t     state[5] = state[1];\n\t     state[1] = t;\n\t     t = state[14];\n\t     u = state[10];\n\t     state[14] = state[6];\n\t     state[10] = state[2];\n\t     state[6] = t;\n\t     state[2] = u;\n\t     t = state[15];\n\t     u = state[11];\n\t     v = state[7];\n\t     state[15] = state[3];\n\t     state[11] = t;\n\t     state[7] = u;\n\t     state[3] = v;\n\t     for (j = 0; j < 16; ++j) {\n\t      state[j] = inv_s[state[j]];\n\t      state[j] ^= key[j];\n\t     }\n\t     return state;\n\t    }\n\t    function encrypt128(input, key) {\n\t     var t, u, v, k;\n\t     var state = new Uint8Array(16);\n\t     state.set(input);\n\t     for (j = 0; j < 16; ++j) {\n\t      state[j] ^= key[j];\n\t     }\n\t     for (i = 1; i < 10; i++) {\n\t      for (j = 0; j < 16; ++j) {\n\t       state[j] = s[state[j]];\n\t      }\n\t      v = state[1];\n\t      state[1] = state[5];\n\t      state[5] = state[9];\n\t      state[9] = state[13];\n\t      state[13] = v;\n\t      v = state[2];\n\t      u = state[6];\n\t      state[2] = state[10];\n\t      state[6] = state[14];\n\t      state[10] = v;\n\t      state[14] = u;\n\t      v = state[3];\n\t      u = state[7];\n\t      t = state[11];\n\t      state[3] = state[15];\n\t      state[7] = v;\n\t      state[11] = u;\n\t      state[15] = t;\n\t      for (var j = 0; j < 16; j += 4) {\n\t       var s0 = state[j + 0], s1 = state[j + 1];\n\t       var s2 = state[j + 2], s3 = state[j + 3];\n\t       t = s0 ^ s1 ^ s2 ^ s3;\n\t       state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n\t       state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n\t       state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n\t       state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n\t      }\n\t      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n\t       state[j] ^= key[k];\n\t      }\n\t     }\n\t     for (j = 0; j < 16; ++j) {\n\t      state[j] = s[state[j]];\n\t     }\n\t     v = state[1];\n\t     state[1] = state[5];\n\t     state[5] = state[9];\n\t     state[9] = state[13];\n\t     state[13] = v;\n\t     v = state[2];\n\t     u = state[6];\n\t     state[2] = state[10];\n\t     state[6] = state[14];\n\t     state[10] = v;\n\t     state[14] = u;\n\t     v = state[3];\n\t     u = state[7];\n\t     t = state[11];\n\t     state[3] = state[15];\n\t     state[7] = v;\n\t     state[11] = u;\n\t     state[15] = t;\n\t     for (j = 0, k = 160; j < 16; ++j, ++k) {\n\t      state[j] ^= key[k];\n\t     }\n\t     return state;\n\t    }\n\t    function AES128Cipher(key) {\n\t     this.key = expandKey128(key);\n\t     this.buffer = new Uint8Array(16);\n\t     this.bufferPosition = 0;\n\t    }\n\t    function decryptBlock2(data, finalize) {\n\t     var i, j, ii, sourceLength = data.length, buffer = this.buffer, bufferLength = this.bufferPosition, result = [], iv = this.iv;\n\t     for (i = 0; i < sourceLength; ++i) {\n\t      buffer[bufferLength] = data[i];\n\t      ++bufferLength;\n\t      if (bufferLength < 16) {\n\t       continue;\n\t      }\n\t      var plain = decrypt128(buffer, this.key);\n\t      for (j = 0; j < 16; ++j) {\n\t       plain[j] ^= iv[j];\n\t      }\n\t      iv = buffer;\n\t      result.push(plain);\n\t      buffer = new Uint8Array(16);\n\t      bufferLength = 0;\n\t     }\n\t     this.buffer = buffer;\n\t     this.bufferLength = bufferLength;\n\t     this.iv = iv;\n\t     if (result.length === 0) {\n\t      return new Uint8Array([]);\n\t     }\n\t     var outputLength = 16 * result.length;\n\t     if (finalize) {\n\t      var lastBlock = result[result.length - 1];\n\t      var psLen = lastBlock[15];\n\t      if (psLen <= 16) {\n\t       for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n\t        if (lastBlock[i] !== psLen) {\n\t         psLen = 0;\n\t         break;\n\t        }\n\t       }\n\t       outputLength -= psLen;\n\t       result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n\t      }\n\t     }\n\t     var output = new Uint8Array(outputLength);\n\t     for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n\t      output.set(result[i], j);\n\t     }\n\t     return output;\n\t    }\n\t    AES128Cipher.prototype = {\n\t     decryptBlock: function AES128Cipher_decryptBlock(data, finalize) {\n\t      var i, sourceLength = data.length;\n\t      var buffer = this.buffer, bufferLength = this.bufferPosition;\n\t      for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n\t       buffer[bufferLength] = data[i];\n\t      }\n\t      if (bufferLength < 16) {\n\t       this.bufferLength = bufferLength;\n\t       return new Uint8Array([]);\n\t      }\n\t      this.iv = buffer;\n\t      this.buffer = new Uint8Array(16);\n\t      this.bufferLength = 0;\n\t      this.decryptBlock = decryptBlock2;\n\t      return this.decryptBlock(data.subarray(16), finalize);\n\t     },\n\t     encrypt: function AES128Cipher_encrypt(data, iv) {\n\t      var i, j, ii, sourceLength = data.length, buffer = this.buffer, bufferLength = this.bufferPosition, result = [];\n\t      if (!iv) {\n\t       iv = new Uint8Array(16);\n\t      }\n\t      for (i = 0; i < sourceLength; ++i) {\n\t       buffer[bufferLength] = data[i];\n\t       ++bufferLength;\n\t       if (bufferLength < 16) {\n\t        continue;\n\t       }\n\t       for (j = 0; j < 16; ++j) {\n\t        buffer[j] ^= iv[j];\n\t       }\n\t       var cipher = encrypt128(buffer, this.key);\n\t       iv = cipher;\n\t       result.push(cipher);\n\t       buffer = new Uint8Array(16);\n\t       bufferLength = 0;\n\t      }\n\t      this.buffer = buffer;\n\t      this.bufferLength = bufferLength;\n\t      this.iv = iv;\n\t      if (result.length === 0) {\n\t       return new Uint8Array([]);\n\t      }\n\t      var outputLength = 16 * result.length;\n\t      var output = new Uint8Array(outputLength);\n\t      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n\t       output.set(result[i], j);\n\t      }\n\t      return output;\n\t     }\n\t    };\n\t    return AES128Cipher;\n\t   }();\n\t   var AES256Cipher = function AES256CipherClosure() {\n\t    var rcon = new Uint8Array([\n\t     0x8d,\n\t     0x01,\n\t     0x02,\n\t     0x04,\n\t     0x08,\n\t     0x10,\n\t     0x20,\n\t     0x40,\n\t     0x80,\n\t     0x1b,\n\t     0x36,\n\t     0x6c,\n\t     0xd8,\n\t     0xab,\n\t     0x4d,\n\t     0x9a,\n\t     0x2f,\n\t     0x5e,\n\t     0xbc,\n\t     0x63,\n\t     0xc6,\n\t     0x97,\n\t     0x35,\n\t     0x6a,\n\t     0xd4,\n\t     0xb3,\n\t     0x7d,\n\t     0xfa,\n\t     0xef,\n\t     0xc5,\n\t     0x91,\n\t     0x39,\n\t     0x72,\n\t     0xe4,\n\t     0xd3,\n\t     0xbd,\n\t     0x61,\n\t     0xc2,\n\t     0x9f,\n\t     0x25,\n\t     0x4a,\n\t     0x94,\n\t     0x33,\n\t     0x66,\n\t     0xcc,\n\t     0x83,\n\t     0x1d,\n\t     0x3a,\n\t     0x74,\n\t     0xe8,\n\t     0xcb,\n\t     0x8d,\n\t     0x01,\n\t     0x02,\n\t     0x04,\n\t     0x08,\n\t     0x10,\n\t     0x20,\n\t     0x40,\n\t     0x80,\n\t     0x1b,\n\t     0x36,\n\t     0x6c,\n\t     0xd8,\n\t     0xab,\n\t     0x4d,\n\t     0x9a,\n\t     0x2f,\n\t     0x5e,\n\t     0xbc,\n\t     0x63,\n\t     0xc6,\n\t     0x97,\n\t     0x35,\n\t     0x6a,\n\t     0xd4,\n\t     0xb3,\n\t     0x7d,\n\t     0xfa,\n\t     0xef,\n\t     0xc5,\n\t     0x91,\n\t     0x39,\n\t     0x72,\n\t     0xe4,\n\t     0xd3,\n\t     0xbd,\n\t     0x61,\n\t     0xc2,\n\t     0x9f,\n\t     0x25,\n\t     0x4a,\n\t     0x94,\n\t     0x33,\n\t     0x66,\n\t     0xcc,\n\t     0x83,\n\t     0x1d,\n\t     0x3a,\n\t     0x74,\n\t     0xe8,\n\t     0xcb,\n\t     0x8d,\n\t     0x01,\n\t     0x02,\n\t     0x04,\n\t     0x08,\n\t     0x10,\n\t     0x20,\n\t     0x40,\n\t     0x80,\n\t     0x1b,\n\t     0x36,\n\t     0x6c,\n\t     0xd8,\n\t     0xab,\n\t     0x4d,\n\t     0x9a,\n\t     0x2f,\n\t     0x5e,\n\t     0xbc,\n\t     0x63,\n\t     0xc6,\n\t     0x97,\n\t     0x35,\n\t     0x6a,\n\t     0xd4,\n\t     0xb3,\n\t     0x7d,\n\t     0xfa,\n\t     0xef,\n\t     0xc5,\n\t     0x91,\n\t     0x39,\n\t     0x72,\n\t     0xe4,\n\t     0xd3,\n\t     0xbd,\n\t     0x61,\n\t     0xc2,\n\t     0x9f,\n\t     0x25,\n\t     0x4a,\n\t     0x94,\n\t     0x33,\n\t     0x66,\n\t     0xcc,\n\t     0x83,\n\t     0x1d,\n\t     0x3a,\n\t     0x74,\n\t     0xe8,\n\t     0xcb,\n\t     0x8d,\n\t     0x01,\n\t     0x02,\n\t     0x04,\n\t     0x08,\n\t     0x10,\n\t     0x20,\n\t     0x40,\n\t     0x80,\n\t     0x1b,\n\t     0x36,\n\t     0x6c,\n\t     0xd8,\n\t     0xab,\n\t     0x4d,\n\t     0x9a,\n\t     0x2f,\n\t     0x5e,\n\t     0xbc,\n\t     0x63,\n\t     0xc6,\n\t     0x97,\n\t     0x35,\n\t     0x6a,\n\t     0xd4,\n\t     0xb3,\n\t     0x7d,\n\t     0xfa,\n\t     0xef,\n\t     0xc5,\n\t     0x91,\n\t     0x39,\n\t     0x72,\n\t     0xe4,\n\t     0xd3,\n\t     0xbd,\n\t     0x61,\n\t     0xc2,\n\t     0x9f,\n\t     0x25,\n\t     0x4a,\n\t     0x94,\n\t     0x33,\n\t     0x66,\n\t     0xcc,\n\t     0x83,\n\t     0x1d,\n\t     0x3a,\n\t     0x74,\n\t     0xe8,\n\t     0xcb,\n\t     0x8d,\n\t     0x01,\n\t     0x02,\n\t     0x04,\n\t     0x08,\n\t     0x10,\n\t     0x20,\n\t     0x40,\n\t     0x80,\n\t     0x1b,\n\t     0x36,\n\t     0x6c,\n\t     0xd8,\n\t     0xab,\n\t     0x4d,\n\t     0x9a,\n\t     0x2f,\n\t     0x5e,\n\t     0xbc,\n\t     0x63,\n\t     0xc6,\n\t     0x97,\n\t     0x35,\n\t     0x6a,\n\t     0xd4,\n\t     0xb3,\n\t     0x7d,\n\t     0xfa,\n\t     0xef,\n\t     0xc5,\n\t     0x91,\n\t     0x39,\n\t     0x72,\n\t     0xe4,\n\t     0xd3,\n\t     0xbd,\n\t     0x61,\n\t     0xc2,\n\t     0x9f,\n\t     0x25,\n\t     0x4a,\n\t     0x94,\n\t     0x33,\n\t     0x66,\n\t     0xcc,\n\t     0x83,\n\t     0x1d,\n\t     0x3a,\n\t     0x74,\n\t     0xe8,\n\t     0xcb,\n\t     0x8d\n\t    ]);\n\t    var s = new Uint8Array([\n\t     0x63,\n\t     0x7c,\n\t     0x77,\n\t     0x7b,\n\t     0xf2,\n\t     0x6b,\n\t     0x6f,\n\t     0xc5,\n\t     0x30,\n\t     0x01,\n\t     0x67,\n\t     0x2b,\n\t     0xfe,\n\t     0xd7,\n\t     0xab,\n\t     0x76,\n\t     0xca,\n\t     0x82,\n\t     0xc9,\n\t     0x7d,\n\t     0xfa,\n\t     0x59,\n\t     0x47,\n\t     0xf0,\n\t     0xad,\n\t     0xd4,\n\t     0xa2,\n\t     0xaf,\n\t     0x9c,\n\t     0xa4,\n\t     0x72,\n\t     0xc0,\n\t     0xb7,\n\t     0xfd,\n\t     0x93,\n\t     0x26,\n\t     0x36,\n\t     0x3f,\n\t     0xf7,\n\t     0xcc,\n\t     0x34,\n\t     0xa5,\n\t     0xe5,\n\t     0xf1,\n\t     0x71,\n\t     0xd8,\n\t     0x31,\n\t     0x15,\n\t     0x04,\n\t     0xc7,\n\t     0x23,\n\t     0xc3,\n\t     0x18,\n\t     0x96,\n\t     0x05,\n\t     0x9a,\n\t     0x07,\n\t     0x12,\n\t     0x80,\n\t     0xe2,\n\t     0xeb,\n\t     0x27,\n\t     0xb2,\n\t     0x75,\n\t     0x09,\n\t     0x83,\n\t     0x2c,\n\t     0x1a,\n\t     0x1b,\n\t     0x6e,\n\t     0x5a,\n\t     0xa0,\n\t     0x52,\n\t     0x3b,\n\t     0xd6,\n\t     0xb3,\n\t     0x29,\n\t     0xe3,\n\t     0x2f,\n\t     0x84,\n\t     0x53,\n\t     0xd1,\n\t     0x00,\n\t     0xed,\n\t     0x20,\n\t     0xfc,\n\t     0xb1,\n\t     0x5b,\n\t     0x6a,\n\t     0xcb,\n\t     0xbe,\n\t     0x39,\n\t     0x4a,\n\t     0x4c,\n\t     0x58,\n\t     0xcf,\n\t     0xd0,\n\t     0xef,\n\t     0xaa,\n\t     0xfb,\n\t     0x43,\n\t     0x4d,\n\t     0x33,\n\t     0x85,\n\t     0x45,\n\t     0xf9,\n\t     0x02,\n\t     0x7f,\n\t     0x50,\n\t     0x3c,\n\t     0x9f,\n\t     0xa8,\n\t     0x51,\n\t     0xa3,\n\t     0x40,\n\t     0x8f,\n\t     0x92,\n\t     0x9d,\n\t     0x38,\n\t     0xf5,\n\t     0xbc,\n\t     0xb6,\n\t     0xda,\n\t     0x21,\n\t     0x10,\n\t     0xff,\n\t     0xf3,\n\t     0xd2,\n\t     0xcd,\n\t     0x0c,\n\t     0x13,\n\t     0xec,\n\t     0x5f,\n\t     0x97,\n\t     0x44,\n\t     0x17,\n\t     0xc4,\n\t     0xa7,\n\t     0x7e,\n\t     0x3d,\n\t     0x64,\n\t     0x5d,\n\t     0x19,\n\t     0x73,\n\t     0x60,\n\t     0x81,\n\t     0x4f,\n\t     0xdc,\n\t     0x22,\n\t     0x2a,\n\t     0x90,\n\t     0x88,\n\t     0x46,\n\t     0xee,\n\t     0xb8,\n\t     0x14,\n\t     0xde,\n\t     0x5e,\n\t     0x0b,\n\t     0xdb,\n\t     0xe0,\n\t     0x32,\n\t     0x3a,\n\t     0x0a,\n\t     0x49,\n\t     0x06,\n\t     0x24,\n\t     0x5c,\n\t     0xc2,\n\t     0xd3,\n\t     0xac,\n\t     0x62,\n\t     0x91,\n\t     0x95,\n\t     0xe4,\n\t     0x79,\n\t     0xe7,\n\t     0xc8,\n\t     0x37,\n\t     0x6d,\n\t     0x8d,\n\t     0xd5,\n\t     0x4e,\n\t     0xa9,\n\t     0x6c,\n\t     0x56,\n\t     0xf4,\n\t     0xea,\n\t     0x65,\n\t     0x7a,\n\t     0xae,\n\t     0x08,\n\t     0xba,\n\t     0x78,\n\t     0x25,\n\t     0x2e,\n\t     0x1c,\n\t     0xa6,\n\t     0xb4,\n\t     0xc6,\n\t     0xe8,\n\t     0xdd,\n\t     0x74,\n\t     0x1f,\n\t     0x4b,\n\t     0xbd,\n\t     0x8b,\n\t     0x8a,\n\t     0x70,\n\t     0x3e,\n\t     0xb5,\n\t     0x66,\n\t     0x48,\n\t     0x03,\n\t     0xf6,\n\t     0x0e,\n\t     0x61,\n\t     0x35,\n\t     0x57,\n\t     0xb9,\n\t     0x86,\n\t     0xc1,\n\t     0x1d,\n\t     0x9e,\n\t     0xe1,\n\t     0xf8,\n\t     0x98,\n\t     0x11,\n\t     0x69,\n\t     0xd9,\n\t     0x8e,\n\t     0x94,\n\t     0x9b,\n\t     0x1e,\n\t     0x87,\n\t     0xe9,\n\t     0xce,\n\t     0x55,\n\t     0x28,\n\t     0xdf,\n\t     0x8c,\n\t     0xa1,\n\t     0x89,\n\t     0x0d,\n\t     0xbf,\n\t     0xe6,\n\t     0x42,\n\t     0x68,\n\t     0x41,\n\t     0x99,\n\t     0x2d,\n\t     0x0f,\n\t     0xb0,\n\t     0x54,\n\t     0xbb,\n\t     0x16\n\t    ]);\n\t    var inv_s = new Uint8Array([\n\t     0x52,\n\t     0x09,\n\t     0x6a,\n\t     0xd5,\n\t     0x30,\n\t     0x36,\n\t     0xa5,\n\t     0x38,\n\t     0xbf,\n\t     0x40,\n\t     0xa3,\n\t     0x9e,\n\t     0x81,\n\t     0xf3,\n\t     0xd7,\n\t     0xfb,\n\t     0x7c,\n\t     0xe3,\n\t     0x39,\n\t     0x82,\n\t     0x9b,\n\t     0x2f,\n\t     0xff,\n\t     0x87,\n\t     0x34,\n\t     0x8e,\n\t     0x43,\n\t     0x44,\n\t     0xc4,\n\t     0xde,\n\t     0xe9,\n\t     0xcb,\n\t     0x54,\n\t     0x7b,\n\t     0x94,\n\t     0x32,\n\t     0xa6,\n\t     0xc2,\n\t     0x23,\n\t     0x3d,\n\t     0xee,\n\t     0x4c,\n\t     0x95,\n\t     0x0b,\n\t     0x42,\n\t     0xfa,\n\t     0xc3,\n\t     0x4e,\n\t     0x08,\n\t     0x2e,\n\t     0xa1,\n\t     0x66,\n\t     0x28,\n\t     0xd9,\n\t     0x24,\n\t     0xb2,\n\t     0x76,\n\t     0x5b,\n\t     0xa2,\n\t     0x49,\n\t     0x6d,\n\t     0x8b,\n\t     0xd1,\n\t     0x25,\n\t     0x72,\n\t     0xf8,\n\t     0xf6,\n\t     0x64,\n\t     0x86,\n\t     0x68,\n\t     0x98,\n\t     0x16,\n\t     0xd4,\n\t     0xa4,\n\t     0x5c,\n\t     0xcc,\n\t     0x5d,\n\t     0x65,\n\t     0xb6,\n\t     0x92,\n\t     0x6c,\n\t     0x70,\n\t     0x48,\n\t     0x50,\n\t     0xfd,\n\t     0xed,\n\t     0xb9,\n\t     0xda,\n\t     0x5e,\n\t     0x15,\n\t     0x46,\n\t     0x57,\n\t     0xa7,\n\t     0x8d,\n\t     0x9d,\n\t     0x84,\n\t     0x90,\n\t     0xd8,\n\t     0xab,\n\t     0x00,\n\t     0x8c,\n\t     0xbc,\n\t     0xd3,\n\t     0x0a,\n\t     0xf7,\n\t     0xe4,\n\t     0x58,\n\t     0x05,\n\t     0xb8,\n\t     0xb3,\n\t     0x45,\n\t     0x06,\n\t     0xd0,\n\t     0x2c,\n\t     0x1e,\n\t     0x8f,\n\t     0xca,\n\t     0x3f,\n\t     0x0f,\n\t     0x02,\n\t     0xc1,\n\t     0xaf,\n\t     0xbd,\n\t     0x03,\n\t     0x01,\n\t     0x13,\n\t     0x8a,\n\t     0x6b,\n\t     0x3a,\n\t     0x91,\n\t     0x11,\n\t     0x41,\n\t     0x4f,\n\t     0x67,\n\t     0xdc,\n\t     0xea,\n\t     0x97,\n\t     0xf2,\n\t     0xcf,\n\t     0xce,\n\t     0xf0,\n\t     0xb4,\n\t     0xe6,\n\t     0x73,\n\t     0x96,\n\t     0xac,\n\t     0x74,\n\t     0x22,\n\t     0xe7,\n\t     0xad,\n\t     0x35,\n\t     0x85,\n\t     0xe2,\n\t     0xf9,\n\t     0x37,\n\t     0xe8,\n\t     0x1c,\n\t     0x75,\n\t     0xdf,\n\t     0x6e,\n\t     0x47,\n\t     0xf1,\n\t     0x1a,\n\t     0x71,\n\t     0x1d,\n\t     0x29,\n\t     0xc5,\n\t     0x89,\n\t     0x6f,\n\t     0xb7,\n\t     0x62,\n\t     0x0e,\n\t     0xaa,\n\t     0x18,\n\t     0xbe,\n\t     0x1b,\n\t     0xfc,\n\t     0x56,\n\t     0x3e,\n\t     0x4b,\n\t     0xc6,\n\t     0xd2,\n\t     0x79,\n\t     0x20,\n\t     0x9a,\n\t     0xdb,\n\t     0xc0,\n\t     0xfe,\n\t     0x78,\n\t     0xcd,\n\t     0x5a,\n\t     0xf4,\n\t     0x1f,\n\t     0xdd,\n\t     0xa8,\n\t     0x33,\n\t     0x88,\n\t     0x07,\n\t     0xc7,\n\t     0x31,\n\t     0xb1,\n\t     0x12,\n\t     0x10,\n\t     0x59,\n\t     0x27,\n\t     0x80,\n\t     0xec,\n\t     0x5f,\n\t     0x60,\n\t     0x51,\n\t     0x7f,\n\t     0xa9,\n\t     0x19,\n\t     0xb5,\n\t     0x4a,\n\t     0x0d,\n\t     0x2d,\n\t     0xe5,\n\t     0x7a,\n\t     0x9f,\n\t     0x93,\n\t     0xc9,\n\t     0x9c,\n\t     0xef,\n\t     0xa0,\n\t     0xe0,\n\t     0x3b,\n\t     0x4d,\n\t     0xae,\n\t     0x2a,\n\t     0xf5,\n\t     0xb0,\n\t     0xc8,\n\t     0xeb,\n\t     0xbb,\n\t     0x3c,\n\t     0x83,\n\t     0x53,\n\t     0x99,\n\t     0x61,\n\t     0x17,\n\t     0x2b,\n\t     0x04,\n\t     0x7e,\n\t     0xba,\n\t     0x77,\n\t     0xd6,\n\t     0x26,\n\t     0xe1,\n\t     0x69,\n\t     0x14,\n\t     0x63,\n\t     0x55,\n\t     0x21,\n\t     0x0c,\n\t     0x7d\n\t    ]);\n\t    var mixCol = new Uint8Array(256);\n\t    for (var i = 0; i < 256; i++) {\n\t     if (i < 128) {\n\t      mixCol[i] = i << 1;\n\t     } else {\n\t      mixCol[i] = i << 1 ^ 0x1b;\n\t     }\n\t    }\n\t    var mix = new Uint32Array([\n\t     0x00000000,\n\t     0x0e090d0b,\n\t     0x1c121a16,\n\t     0x121b171d,\n\t     0x3824342c,\n\t     0x362d3927,\n\t     0x24362e3a,\n\t     0x2a3f2331,\n\t     0x70486858,\n\t     0x7e416553,\n\t     0x6c5a724e,\n\t     0x62537f45,\n\t     0x486c5c74,\n\t     0x4665517f,\n\t     0x547e4662,\n\t     0x5a774b69,\n\t     0xe090d0b0,\n\t     0xee99ddbb,\n\t     0xfc82caa6,\n\t     0xf28bc7ad,\n\t     0xd8b4e49c,\n\t     0xd6bde997,\n\t     0xc4a6fe8a,\n\t     0xcaaff381,\n\t     0x90d8b8e8,\n\t     0x9ed1b5e3,\n\t     0x8ccaa2fe,\n\t     0x82c3aff5,\n\t     0xa8fc8cc4,\n\t     0xa6f581cf,\n\t     0xb4ee96d2,\n\t     0xbae79bd9,\n\t     0xdb3bbb7b,\n\t     0xd532b670,\n\t     0xc729a16d,\n\t     0xc920ac66,\n\t     0xe31f8f57,\n\t     0xed16825c,\n\t     0xff0d9541,\n\t     0xf104984a,\n\t     0xab73d323,\n\t     0xa57ade28,\n\t     0xb761c935,\n\t     0xb968c43e,\n\t     0x9357e70f,\n\t     0x9d5eea04,\n\t     0x8f45fd19,\n\t     0x814cf012,\n\t     0x3bab6bcb,\n\t     0x35a266c0,\n\t     0x27b971dd,\n\t     0x29b07cd6,\n\t     0x038f5fe7,\n\t     0x0d8652ec,\n\t     0x1f9d45f1,\n\t     0x119448fa,\n\t     0x4be30393,\n\t     0x45ea0e98,\n\t     0x57f11985,\n\t     0x59f8148e,\n\t     0x73c737bf,\n\t     0x7dce3ab4,\n\t     0x6fd52da9,\n\t     0x61dc20a2,\n\t     0xad766df6,\n\t     0xa37f60fd,\n\t     0xb16477e0,\n\t     0xbf6d7aeb,\n\t     0x955259da,\n\t     0x9b5b54d1,\n\t     0x894043cc,\n\t     0x87494ec7,\n\t     0xdd3e05ae,\n\t     0xd33708a5,\n\t     0xc12c1fb8,\n\t     0xcf2512b3,\n\t     0xe51a3182,\n\t     0xeb133c89,\n\t     0xf9082b94,\n\t     0xf701269f,\n\t     0x4de6bd46,\n\t     0x43efb04d,\n\t     0x51f4a750,\n\t     0x5ffdaa5b,\n\t     0x75c2896a,\n\t     0x7bcb8461,\n\t     0x69d0937c,\n\t     0x67d99e77,\n\t     0x3daed51e,\n\t     0x33a7d815,\n\t     0x21bccf08,\n\t     0x2fb5c203,\n\t     0x058ae132,\n\t     0x0b83ec39,\n\t     0x1998fb24,\n\t     0x1791f62f,\n\t     0x764dd68d,\n\t     0x7844db86,\n\t     0x6a5fcc9b,\n\t     0x6456c190,\n\t     0x4e69e2a1,\n\t     0x4060efaa,\n\t     0x527bf8b7,\n\t     0x5c72f5bc,\n\t     0x0605bed5,\n\t     0x080cb3de,\n\t     0x1a17a4c3,\n\t     0x141ea9c8,\n\t     0x3e218af9,\n\t     0x302887f2,\n\t     0x223390ef,\n\t     0x2c3a9de4,\n\t     0x96dd063d,\n\t     0x98d40b36,\n\t     0x8acf1c2b,\n\t     0x84c61120,\n\t     0xaef93211,\n\t     0xa0f03f1a,\n\t     0xb2eb2807,\n\t     0xbce2250c,\n\t     0xe6956e65,\n\t     0xe89c636e,\n\t     0xfa877473,\n\t     0xf48e7978,\n\t     0xdeb15a49,\n\t     0xd0b85742,\n\t     0xc2a3405f,\n\t     0xccaa4d54,\n\t     0x41ecdaf7,\n\t     0x4fe5d7fc,\n\t     0x5dfec0e1,\n\t     0x53f7cdea,\n\t     0x79c8eedb,\n\t     0x77c1e3d0,\n\t     0x65daf4cd,\n\t     0x6bd3f9c6,\n\t     0x31a4b2af,\n\t     0x3fadbfa4,\n\t     0x2db6a8b9,\n\t     0x23bfa5b2,\n\t     0x09808683,\n\t     0x07898b88,\n\t     0x15929c95,\n\t     0x1b9b919e,\n\t     0xa17c0a47,\n\t     0xaf75074c,\n\t     0xbd6e1051,\n\t     0xb3671d5a,\n\t     0x99583e6b,\n\t     0x97513360,\n\t     0x854a247d,\n\t     0x8b432976,\n\t     0xd134621f,\n\t     0xdf3d6f14,\n\t     0xcd267809,\n\t     0xc32f7502,\n\t     0xe9105633,\n\t     0xe7195b38,\n\t     0xf5024c25,\n\t     0xfb0b412e,\n\t     0x9ad7618c,\n\t     0x94de6c87,\n\t     0x86c57b9a,\n\t     0x88cc7691,\n\t     0xa2f355a0,\n\t     0xacfa58ab,\n\t     0xbee14fb6,\n\t     0xb0e842bd,\n\t     0xea9f09d4,\n\t     0xe49604df,\n\t     0xf68d13c2,\n\t     0xf8841ec9,\n\t     0xd2bb3df8,\n\t     0xdcb230f3,\n\t     0xcea927ee,\n\t     0xc0a02ae5,\n\t     0x7a47b13c,\n\t     0x744ebc37,\n\t     0x6655ab2a,\n\t     0x685ca621,\n\t     0x42638510,\n\t     0x4c6a881b,\n\t     0x5e719f06,\n\t     0x5078920d,\n\t     0x0a0fd964,\n\t     0x0406d46f,\n\t     0x161dc372,\n\t     0x1814ce79,\n\t     0x322bed48,\n\t     0x3c22e043,\n\t     0x2e39f75e,\n\t     0x2030fa55,\n\t     0xec9ab701,\n\t     0xe293ba0a,\n\t     0xf088ad17,\n\t     0xfe81a01c,\n\t     0xd4be832d,\n\t     0xdab78e26,\n\t     0xc8ac993b,\n\t     0xc6a59430,\n\t     0x9cd2df59,\n\t     0x92dbd252,\n\t     0x80c0c54f,\n\t     0x8ec9c844,\n\t     0xa4f6eb75,\n\t     0xaaffe67e,\n\t     0xb8e4f163,\n\t     0xb6edfc68,\n\t     0x0c0a67b1,\n\t     0x02036aba,\n\t     0x10187da7,\n\t     0x1e1170ac,\n\t     0x342e539d,\n\t     0x3a275e96,\n\t     0x283c498b,\n\t     0x26354480,\n\t     0x7c420fe9,\n\t     0x724b02e2,\n\t     0x605015ff,\n\t     0x6e5918f4,\n\t     0x44663bc5,\n\t     0x4a6f36ce,\n\t     0x587421d3,\n\t     0x567d2cd8,\n\t     0x37a10c7a,\n\t     0x39a80171,\n\t     0x2bb3166c,\n\t     0x25ba1b67,\n\t     0x0f853856,\n\t     0x018c355d,\n\t     0x13972240,\n\t     0x1d9e2f4b,\n\t     0x47e96422,\n\t     0x49e06929,\n\t     0x5bfb7e34,\n\t     0x55f2733f,\n\t     0x7fcd500e,\n\t     0x71c45d05,\n\t     0x63df4a18,\n\t     0x6dd64713,\n\t     0xd731dcca,\n\t     0xd938d1c1,\n\t     0xcb23c6dc,\n\t     0xc52acbd7,\n\t     0xef15e8e6,\n\t     0xe11ce5ed,\n\t     0xf307f2f0,\n\t     0xfd0efffb,\n\t     0xa779b492,\n\t     0xa970b999,\n\t     0xbb6bae84,\n\t     0xb562a38f,\n\t     0x9f5d80be,\n\t     0x91548db5,\n\t     0x834f9aa8,\n\t     0x8d4697a3\n\t    ]);\n\t    function expandKey256(cipherKey) {\n\t     var b = 240, result = new Uint8Array(b);\n\t     var r = 1;\n\t     result.set(cipherKey);\n\t     for (var j = 32, i = 1; j < b; ++i) {\n\t      if (j % 32 === 16) {\n\t       t1 = s[t1];\n\t       t2 = s[t2];\n\t       t3 = s[t3];\n\t       t4 = s[t4];\n\t      } else if (j % 32 === 0) {\n\t       var t1 = result[j - 3], t2 = result[j - 2], t3 = result[j - 1], t4 = result[j - 4];\n\t       t1 = s[t1];\n\t       t2 = s[t2];\n\t       t3 = s[t3];\n\t       t4 = s[t4];\n\t       t1 = t1 ^ r;\n\t       if ((r <<= 1) >= 256) {\n\t        r = (r ^ 0x1b) & 0xFF;\n\t       }\n\t      }\n\t      for (var n = 0; n < 4; ++n) {\n\t       result[j] = t1 ^= result[j - 32];\n\t       j++;\n\t       result[j] = t2 ^= result[j - 32];\n\t       j++;\n\t       result[j] = t3 ^= result[j - 32];\n\t       j++;\n\t       result[j] = t4 ^= result[j - 32];\n\t       j++;\n\t      }\n\t     }\n\t     return result;\n\t    }\n\t    function decrypt256(input, key) {\n\t     var state = new Uint8Array(16);\n\t     state.set(input);\n\t     var i, j, k;\n\t     var t, u, v;\n\t     for (j = 0, k = 224; j < 16; ++j, ++k) {\n\t      state[j] ^= key[k];\n\t     }\n\t     for (i = 13; i >= 1; --i) {\n\t      t = state[13];\n\t      state[13] = state[9];\n\t      state[9] = state[5];\n\t      state[5] = state[1];\n\t      state[1] = t;\n\t      t = state[14];\n\t      u = state[10];\n\t      state[14] = state[6];\n\t      state[10] = state[2];\n\t      state[6] = t;\n\t      state[2] = u;\n\t      t = state[15];\n\t      u = state[11];\n\t      v = state[7];\n\t      state[15] = state[3];\n\t      state[11] = t;\n\t      state[7] = u;\n\t      state[3] = v;\n\t      for (j = 0; j < 16; ++j) {\n\t       state[j] = inv_s[state[j]];\n\t      }\n\t      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n\t       state[j] ^= key[k];\n\t      }\n\t      for (j = 0; j < 16; j += 4) {\n\t       var s0 = mix[state[j]], s1 = mix[state[j + 1]], s2 = mix[state[j + 2]], s3 = mix[state[j + 3]];\n\t       t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n\t       state[j] = t >>> 24 & 0xFF;\n\t       state[j + 1] = t >> 16 & 0xFF;\n\t       state[j + 2] = t >> 8 & 0xFF;\n\t       state[j + 3] = t & 0xFF;\n\t      }\n\t     }\n\t     t = state[13];\n\t     state[13] = state[9];\n\t     state[9] = state[5];\n\t     state[5] = state[1];\n\t     state[1] = t;\n\t     t = state[14];\n\t     u = state[10];\n\t     state[14] = state[6];\n\t     state[10] = state[2];\n\t     state[6] = t;\n\t     state[2] = u;\n\t     t = state[15];\n\t     u = state[11];\n\t     v = state[7];\n\t     state[15] = state[3];\n\t     state[11] = t;\n\t     state[7] = u;\n\t     state[3] = v;\n\t     for (j = 0; j < 16; ++j) {\n\t      state[j] = inv_s[state[j]];\n\t      state[j] ^= key[j];\n\t     }\n\t     return state;\n\t    }\n\t    function encrypt256(input, key) {\n\t     var t, u, v, k;\n\t     var state = new Uint8Array(16);\n\t     state.set(input);\n\t     for (j = 0; j < 16; ++j) {\n\t      state[j] ^= key[j];\n\t     }\n\t     for (i = 1; i < 14; i++) {\n\t      for (j = 0; j < 16; ++j) {\n\t       state[j] = s[state[j]];\n\t      }\n\t      v = state[1];\n\t      state[1] = state[5];\n\t      state[5] = state[9];\n\t      state[9] = state[13];\n\t      state[13] = v;\n\t      v = state[2];\n\t      u = state[6];\n\t      state[2] = state[10];\n\t      state[6] = state[14];\n\t      state[10] = v;\n\t      state[14] = u;\n\t      v = state[3];\n\t      u = state[7];\n\t      t = state[11];\n\t      state[3] = state[15];\n\t      state[7] = v;\n\t      state[11] = u;\n\t      state[15] = t;\n\t      for (var j = 0; j < 16; j += 4) {\n\t       var s0 = state[j + 0], s1 = state[j + 1];\n\t       var s2 = state[j + 2], s3 = state[j + 3];\n\t       t = s0 ^ s1 ^ s2 ^ s3;\n\t       state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n\t       state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n\t       state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n\t       state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n\t      }\n\t      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n\t       state[j] ^= key[k];\n\t      }\n\t     }\n\t     for (j = 0; j < 16; ++j) {\n\t      state[j] = s[state[j]];\n\t     }\n\t     v = state[1];\n\t     state[1] = state[5];\n\t     state[5] = state[9];\n\t     state[9] = state[13];\n\t     state[13] = v;\n\t     v = state[2];\n\t     u = state[6];\n\t     state[2] = state[10];\n\t     state[6] = state[14];\n\t     state[10] = v;\n\t     state[14] = u;\n\t     v = state[3];\n\t     u = state[7];\n\t     t = state[11];\n\t     state[3] = state[15];\n\t     state[7] = v;\n\t     state[11] = u;\n\t     state[15] = t;\n\t     for (j = 0, k = 224; j < 16; ++j, ++k) {\n\t      state[j] ^= key[k];\n\t     }\n\t     return state;\n\t    }\n\t    function AES256Cipher(key) {\n\t     this.key = expandKey256(key);\n\t     this.buffer = new Uint8Array(16);\n\t     this.bufferPosition = 0;\n\t    }\n\t    function decryptBlock2(data, finalize) {\n\t     var i, j, ii, sourceLength = data.length, buffer = this.buffer, bufferLength = this.bufferPosition, result = [], iv = this.iv;\n\t     for (i = 0; i < sourceLength; ++i) {\n\t      buffer[bufferLength] = data[i];\n\t      ++bufferLength;\n\t      if (bufferLength < 16) {\n\t       continue;\n\t      }\n\t      var plain = decrypt256(buffer, this.key);\n\t      for (j = 0; j < 16; ++j) {\n\t       plain[j] ^= iv[j];\n\t      }\n\t      iv = buffer;\n\t      result.push(plain);\n\t      buffer = new Uint8Array(16);\n\t      bufferLength = 0;\n\t     }\n\t     this.buffer = buffer;\n\t     this.bufferLength = bufferLength;\n\t     this.iv = iv;\n\t     if (result.length === 0) {\n\t      return new Uint8Array([]);\n\t     }\n\t     var outputLength = 16 * result.length;\n\t     if (finalize) {\n\t      var lastBlock = result[result.length - 1];\n\t      var psLen = lastBlock[15];\n\t      if (psLen <= 16) {\n\t       for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n\t        if (lastBlock[i] !== psLen) {\n\t         psLen = 0;\n\t         break;\n\t        }\n\t       }\n\t       outputLength -= psLen;\n\t       result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n\t      }\n\t     }\n\t     var output = new Uint8Array(outputLength);\n\t     for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n\t      output.set(result[i], j);\n\t     }\n\t     return output;\n\t    }\n\t    AES256Cipher.prototype = {\n\t     decryptBlock: function AES256Cipher_decryptBlock(data, finalize, iv) {\n\t      var i, sourceLength = data.length;\n\t      var buffer = this.buffer, bufferLength = this.bufferPosition;\n\t      if (iv) {\n\t       this.iv = iv;\n\t      } else {\n\t       for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n\t        buffer[bufferLength] = data[i];\n\t       }\n\t       if (bufferLength < 16) {\n\t        this.bufferLength = bufferLength;\n\t        return new Uint8Array([]);\n\t       }\n\t       this.iv = buffer;\n\t       data = data.subarray(16);\n\t      }\n\t      this.buffer = new Uint8Array(16);\n\t      this.bufferLength = 0;\n\t      this.decryptBlock = decryptBlock2;\n\t      return this.decryptBlock(data, finalize);\n\t     },\n\t     encrypt: function AES256Cipher_encrypt(data, iv) {\n\t      var i, j, ii, sourceLength = data.length, buffer = this.buffer, bufferLength = this.bufferPosition, result = [];\n\t      if (!iv) {\n\t       iv = new Uint8Array(16);\n\t      }\n\t      for (i = 0; i < sourceLength; ++i) {\n\t       buffer[bufferLength] = data[i];\n\t       ++bufferLength;\n\t       if (bufferLength < 16) {\n\t        continue;\n\t       }\n\t       for (j = 0; j < 16; ++j) {\n\t        buffer[j] ^= iv[j];\n\t       }\n\t       var cipher = encrypt256(buffer, this.key);\n\t       this.iv = cipher;\n\t       result.push(cipher);\n\t       buffer = new Uint8Array(16);\n\t       bufferLength = 0;\n\t      }\n\t      this.buffer = buffer;\n\t      this.bufferLength = bufferLength;\n\t      this.iv = iv;\n\t      if (result.length === 0) {\n\t       return new Uint8Array([]);\n\t      }\n\t      var outputLength = 16 * result.length;\n\t      var output = new Uint8Array(outputLength);\n\t      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n\t       output.set(result[i], j);\n\t      }\n\t      return output;\n\t     }\n\t    };\n\t    return AES256Cipher;\n\t   }();\n\t   var PDF17 = function PDF17Closure() {\n\t    function compareByteArrays(array1, array2) {\n\t     if (array1.length !== array2.length) {\n\t      return false;\n\t     }\n\t     for (var i = 0; i < array1.length; i++) {\n\t      if (array1[i] !== array2[i]) {\n\t       return false;\n\t      }\n\t     }\n\t     return true;\n\t    }\n\t    function PDF17() {\n\t    }\n\t    PDF17.prototype = {\n\t     checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n\t      var hashData = new Uint8Array(password.length + 56);\n\t      hashData.set(password, 0);\n\t      hashData.set(ownerValidationSalt, password.length);\n\t      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n\t      var result = calculateSHA256(hashData, 0, hashData.length);\n\t      return compareByteArrays(result, ownerPassword);\n\t     },\n\t     checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n\t      var hashData = new Uint8Array(password.length + 8);\n\t      hashData.set(password, 0);\n\t      hashData.set(userValidationSalt, password.length);\n\t      var result = calculateSHA256(hashData, 0, hashData.length);\n\t      return compareByteArrays(result, userPassword);\n\t     },\n\t     getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n\t      var hashData = new Uint8Array(password.length + 56);\n\t      hashData.set(password, 0);\n\t      hashData.set(ownerKeySalt, password.length);\n\t      hashData.set(userBytes, password.length + ownerKeySalt.length);\n\t      var key = calculateSHA256(hashData, 0, hashData.length);\n\t      var cipher = new AES256Cipher(key);\n\t      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n\t     },\n\t     getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n\t      var hashData = new Uint8Array(password.length + 8);\n\t      hashData.set(password, 0);\n\t      hashData.set(userKeySalt, password.length);\n\t      var key = calculateSHA256(hashData, 0, hashData.length);\n\t      var cipher = new AES256Cipher(key);\n\t      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n\t     }\n\t    };\n\t    return PDF17;\n\t   }();\n\t   var PDF20 = function PDF20Closure() {\n\t    function concatArrays(array1, array2) {\n\t     var t = new Uint8Array(array1.length + array2.length);\n\t     t.set(array1, 0);\n\t     t.set(array2, array1.length);\n\t     return t;\n\t    }\n\t    function calculatePDF20Hash(password, input, userBytes) {\n\t     var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n\t     var e = [0];\n\t     var i = 0;\n\t     while (i < 64 || e[e.length - 1] > i - 32) {\n\t      var arrayLength = password.length + k.length + userBytes.length;\n\t      var k1 = new Uint8Array(arrayLength * 64);\n\t      var array = concatArrays(password, k);\n\t      array = concatArrays(array, userBytes);\n\t      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n\t       k1.set(array, pos);\n\t      }\n\t      var cipher = new AES128Cipher(k.subarray(0, 16));\n\t      e = cipher.encrypt(k1, k.subarray(16, 32));\n\t      var remainder = 0;\n\t      for (var z = 0; z < 16; z++) {\n\t       remainder *= 256 % 3;\n\t       remainder %= 3;\n\t       remainder += (e[z] >>> 0) % 3;\n\t       remainder %= 3;\n\t      }\n\t      if (remainder === 0) {\n\t       k = calculateSHA256(e, 0, e.length);\n\t      } else if (remainder === 1) {\n\t       k = calculateSHA384(e, 0, e.length);\n\t      } else if (remainder === 2) {\n\t       k = calculateSHA512(e, 0, e.length);\n\t      }\n\t      i++;\n\t     }\n\t     return k.subarray(0, 32);\n\t    }\n\t    function PDF20() {\n\t    }\n\t    function compareByteArrays(array1, array2) {\n\t     if (array1.length !== array2.length) {\n\t      return false;\n\t     }\n\t     for (var i = 0; i < array1.length; i++) {\n\t      if (array1[i] !== array2[i]) {\n\t       return false;\n\t      }\n\t     }\n\t     return true;\n\t    }\n\t    PDF20.prototype = {\n\t     hash: function PDF20_hash(password, concatBytes, userBytes) {\n\t      return calculatePDF20Hash(password, concatBytes, userBytes);\n\t     },\n\t     checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n\t      var hashData = new Uint8Array(password.length + 56);\n\t      hashData.set(password, 0);\n\t      hashData.set(ownerValidationSalt, password.length);\n\t      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n\t      var result = calculatePDF20Hash(password, hashData, userBytes);\n\t      return compareByteArrays(result, ownerPassword);\n\t     },\n\t     checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n\t      var hashData = new Uint8Array(password.length + 8);\n\t      hashData.set(password, 0);\n\t      hashData.set(userValidationSalt, password.length);\n\t      var result = calculatePDF20Hash(password, hashData, []);\n\t      return compareByteArrays(result, userPassword);\n\t     },\n\t     getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n\t      var hashData = new Uint8Array(password.length + 56);\n\t      hashData.set(password, 0);\n\t      hashData.set(ownerKeySalt, password.length);\n\t      hashData.set(userBytes, password.length + ownerKeySalt.length);\n\t      var key = calculatePDF20Hash(password, hashData, userBytes);\n\t      var cipher = new AES256Cipher(key);\n\t      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n\t     },\n\t     getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n\t      var hashData = new Uint8Array(password.length + 8);\n\t      hashData.set(password, 0);\n\t      hashData.set(userKeySalt, password.length);\n\t      var key = calculatePDF20Hash(password, hashData, []);\n\t      var cipher = new AES256Cipher(key);\n\t      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n\t     }\n\t    };\n\t    return PDF20;\n\t   }();\n\t   var CipherTransform = function CipherTransformClosure() {\n\t    function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n\t     this.StringCipherConstructor = stringCipherConstructor;\n\t     this.StreamCipherConstructor = streamCipherConstructor;\n\t    }\n\t    CipherTransform.prototype = {\n\t     createStream: function CipherTransform_createStream(stream, length) {\n\t      var cipher = new this.StreamCipherConstructor();\n\t      return new DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n\t       return cipher.decryptBlock(data, finalize);\n\t      });\n\t     },\n\t     decryptString: function CipherTransform_decryptString(s) {\n\t      var cipher = new this.StringCipherConstructor();\n\t      var data = stringToBytes(s);\n\t      data = cipher.decryptBlock(data, true);\n\t      return bytesToString(data);\n\t     }\n\t    };\n\t    return CipherTransform;\n\t   }();\n\t   var CipherTransformFactory = function CipherTransformFactoryClosure() {\n\t    var defaultPasswordBytes = new Uint8Array([\n\t     0x28,\n\t     0xBF,\n\t     0x4E,\n\t     0x5E,\n\t     0x4E,\n\t     0x75,\n\t     0x8A,\n\t     0x41,\n\t     0x64,\n\t     0x00,\n\t     0x4E,\n\t     0x56,\n\t     0xFF,\n\t     0xFA,\n\t     0x01,\n\t     0x08,\n\t     0x2E,\n\t     0x2E,\n\t     0x00,\n\t     0xB6,\n\t     0xD0,\n\t     0x68,\n\t     0x3E,\n\t     0x80,\n\t     0x2F,\n\t     0x0C,\n\t     0xA9,\n\t     0xFE,\n\t     0x64,\n\t     0x53,\n\t     0x69,\n\t     0x7A\n\t    ]);\n\t    function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n\t     if (password) {\n\t      var passwordLength = Math.min(127, password.length);\n\t      password = password.subarray(0, passwordLength);\n\t     } else {\n\t      password = [];\n\t     }\n\t     var pdfAlgorithm;\n\t     if (revision === 6) {\n\t      pdfAlgorithm = new PDF20();\n\t     } else {\n\t      pdfAlgorithm = new PDF17();\n\t     }\n\t     if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n\t      return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n\t     } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n\t      return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n\t     }\n\t     return null;\n\t    }\n\t    function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n\t     var hashDataSize = 40 + ownerPassword.length + fileId.length;\n\t     var hashData = new Uint8Array(hashDataSize), i = 0, j, n;\n\t     if (password) {\n\t      n = Math.min(32, password.length);\n\t      for (; i < n; ++i) {\n\t       hashData[i] = password[i];\n\t      }\n\t     }\n\t     j = 0;\n\t     while (i < 32) {\n\t      hashData[i++] = defaultPasswordBytes[j++];\n\t     }\n\t     for (j = 0, n = ownerPassword.length; j < n; ++j) {\n\t      hashData[i++] = ownerPassword[j];\n\t     }\n\t     hashData[i++] = flags & 0xFF;\n\t     hashData[i++] = flags >> 8 & 0xFF;\n\t     hashData[i++] = flags >> 16 & 0xFF;\n\t     hashData[i++] = flags >>> 24 & 0xFF;\n\t     for (j = 0, n = fileId.length; j < n; ++j) {\n\t      hashData[i++] = fileId[j];\n\t     }\n\t     if (revision >= 4 && !encryptMetadata) {\n\t      hashData[i++] = 0xFF;\n\t      hashData[i++] = 0xFF;\n\t      hashData[i++] = 0xFF;\n\t      hashData[i++] = 0xFF;\n\t     }\n\t     var hash = calculateMD5(hashData, 0, i);\n\t     var keyLengthInBytes = keyLength >> 3;\n\t     if (revision >= 3) {\n\t      for (j = 0; j < 50; ++j) {\n\t       hash = calculateMD5(hash, 0, keyLengthInBytes);\n\t      }\n\t     }\n\t     var encryptionKey = hash.subarray(0, keyLengthInBytes);\n\t     var cipher, checkData;\n\t     if (revision >= 3) {\n\t      for (i = 0; i < 32; ++i) {\n\t       hashData[i] = defaultPasswordBytes[i];\n\t      }\n\t      for (j = 0, n = fileId.length; j < n; ++j) {\n\t       hashData[i++] = fileId[j];\n\t      }\n\t      cipher = new ARCFourCipher(encryptionKey);\n\t      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n\t      n = encryptionKey.length;\n\t      var derivedKey = new Uint8Array(n), k;\n\t      for (j = 1; j <= 19; ++j) {\n\t       for (k = 0; k < n; ++k) {\n\t        derivedKey[k] = encryptionKey[k] ^ j;\n\t       }\n\t       cipher = new ARCFourCipher(derivedKey);\n\t       checkData = cipher.encryptBlock(checkData);\n\t      }\n\t      for (j = 0, n = checkData.length; j < n; ++j) {\n\t       if (userPassword[j] !== checkData[j]) {\n\t        return null;\n\t       }\n\t      }\n\t     } else {\n\t      cipher = new ARCFourCipher(encryptionKey);\n\t      checkData = cipher.encryptBlock(defaultPasswordBytes);\n\t      for (j = 0, n = checkData.length; j < n; ++j) {\n\t       if (userPassword[j] !== checkData[j]) {\n\t        return null;\n\t       }\n\t      }\n\t     }\n\t     return encryptionKey;\n\t    }\n\t    function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n\t     var hashData = new Uint8Array(32), i = 0, j, n;\n\t     n = Math.min(32, password.length);\n\t     for (; i < n; ++i) {\n\t      hashData[i] = password[i];\n\t     }\n\t     j = 0;\n\t     while (i < 32) {\n\t      hashData[i++] = defaultPasswordBytes[j++];\n\t     }\n\t     var hash = calculateMD5(hashData, 0, i);\n\t     var keyLengthInBytes = keyLength >> 3;\n\t     if (revision >= 3) {\n\t      for (j = 0; j < 50; ++j) {\n\t       hash = calculateMD5(hash, 0, hash.length);\n\t      }\n\t     }\n\t     var cipher, userPassword;\n\t     if (revision >= 3) {\n\t      userPassword = ownerPassword;\n\t      var derivedKey = new Uint8Array(keyLengthInBytes), k;\n\t      for (j = 19; j >= 0; j--) {\n\t       for (k = 0; k < keyLengthInBytes; ++k) {\n\t        derivedKey[k] = hash[k] ^ j;\n\t       }\n\t       cipher = new ARCFourCipher(derivedKey);\n\t       userPassword = cipher.encryptBlock(userPassword);\n\t      }\n\t     } else {\n\t      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n\t      userPassword = cipher.encryptBlock(ownerPassword);\n\t     }\n\t     return userPassword;\n\t    }\n\t    var identityName = Name.get('Identity');\n\t    function CipherTransformFactory(dict, fileId, password) {\n\t     var filter = dict.get('Filter');\n\t     if (!isName(filter, 'Standard')) {\n\t      error('unknown encryption method');\n\t     }\n\t     this.dict = dict;\n\t     var algorithm = dict.get('V');\n\t     if (!isInt(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n\t      error('unsupported encryption algorithm');\n\t     }\n\t     this.algorithm = algorithm;\n\t     var keyLength = dict.get('Length');\n\t     if (!keyLength) {\n\t      if (algorithm <= 3) {\n\t       keyLength = 40;\n\t      } else {\n\t       var cfDict = dict.get('CF');\n\t       var streamCryptoName = dict.get('StmF');\n\t       if (isDict(cfDict) && isName(streamCryptoName)) {\n\t        cfDict.suppressEncryption = true;\n\t        var handlerDict = cfDict.get(streamCryptoName.name);\n\t        keyLength = handlerDict && handlerDict.get('Length') || 128;\n\t        if (keyLength < 40) {\n\t         keyLength <<= 3;\n\t        }\n\t       }\n\t      }\n\t     }\n\t     if (!isInt(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n\t      error('invalid key length');\n\t     }\n\t     var ownerPassword = stringToBytes(dict.get('O')).subarray(0, 32);\n\t     var userPassword = stringToBytes(dict.get('U')).subarray(0, 32);\n\t     var flags = dict.get('P');\n\t     var revision = dict.get('R');\n\t     var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\n\t     this.encryptMetadata = encryptMetadata;\n\t     var fileIdBytes = stringToBytes(fileId);\n\t     var passwordBytes;\n\t     if (password) {\n\t      if (revision === 6) {\n\t       try {\n\t        password = utf8StringToString(password);\n\t       } catch (ex) {\n\t        warn('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\n\t       }\n\t      }\n\t      passwordBytes = stringToBytes(password);\n\t     }\n\t     var encryptionKey;\n\t     if (algorithm !== 5) {\n\t      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n\t     } else {\n\t      var ownerValidationSalt = stringToBytes(dict.get('O')).subarray(32, 40);\n\t      var ownerKeySalt = stringToBytes(dict.get('O')).subarray(40, 48);\n\t      var uBytes = stringToBytes(dict.get('U')).subarray(0, 48);\n\t      var userValidationSalt = stringToBytes(dict.get('U')).subarray(32, 40);\n\t      var userKeySalt = stringToBytes(dict.get('U')).subarray(40, 48);\n\t      var ownerEncryption = stringToBytes(dict.get('OE'));\n\t      var userEncryption = stringToBytes(dict.get('UE'));\n\t      var perms = stringToBytes(dict.get('Perms'));\n\t      encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n\t     }\n\t     if (!encryptionKey && !password) {\n\t      throw new PasswordException('No password given', PasswordResponses.NEED_PASSWORD);\n\t     } else if (!encryptionKey && password) {\n\t      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n\t      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n\t     }\n\t     if (!encryptionKey) {\n\t      throw new PasswordException('Incorrect Password', PasswordResponses.INCORRECT_PASSWORD);\n\t     }\n\t     this.encryptionKey = encryptionKey;\n\t     if (algorithm >= 4) {\n\t      var cf = dict.get('CF');\n\t      if (isDict(cf)) {\n\t       cf.suppressEncryption = true;\n\t      }\n\t      this.cf = cf;\n\t      this.stmf = dict.get('StmF') || identityName;\n\t      this.strf = dict.get('StrF') || identityName;\n\t      this.eff = dict.get('EFF') || this.stmf;\n\t     }\n\t    }\n\t    function buildObjectKey(num, gen, encryptionKey, isAes) {\n\t     var key = new Uint8Array(encryptionKey.length + 9), i, n;\n\t     for (i = 0, n = encryptionKey.length; i < n; ++i) {\n\t      key[i] = encryptionKey[i];\n\t     }\n\t     key[i++] = num & 0xFF;\n\t     key[i++] = num >> 8 & 0xFF;\n\t     key[i++] = num >> 16 & 0xFF;\n\t     key[i++] = gen & 0xFF;\n\t     key[i++] = gen >> 8 & 0xFF;\n\t     if (isAes) {\n\t      key[i++] = 0x73;\n\t      key[i++] = 0x41;\n\t      key[i++] = 0x6C;\n\t      key[i++] = 0x54;\n\t     }\n\t     var hash = calculateMD5(key, 0, i);\n\t     return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n\t    }\n\t    function buildCipherConstructor(cf, name, num, gen, key) {\n\t     assert(isName(name), 'Invalid crypt filter name.');\n\t     var cryptFilter = cf.get(name.name);\n\t     var cfm;\n\t     if (cryptFilter !== null && cryptFilter !== undefined) {\n\t      cfm = cryptFilter.get('CFM');\n\t     }\n\t     if (!cfm || cfm.name === 'None') {\n\t      return function cipherTransformFactoryBuildCipherConstructorNone() {\n\t       return new NullCipher();\n\t      };\n\t     }\n\t     if (cfm.name === 'V2') {\n\t      return function cipherTransformFactoryBuildCipherConstructorV2() {\n\t       return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n\t      };\n\t     }\n\t     if (cfm.name === 'AESV2') {\n\t      return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n\t       return new AES128Cipher(buildObjectKey(num, gen, key, true));\n\t      };\n\t     }\n\t     if (cfm.name === 'AESV3') {\n\t      return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n\t       return new AES256Cipher(key);\n\t      };\n\t     }\n\t     error('Unknown crypto method');\n\t    }\n\t    CipherTransformFactory.prototype = {\n\t     createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n\t      if (this.algorithm === 4 || this.algorithm === 5) {\n\t       return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n\t      }\n\t      var key = buildObjectKey(num, gen, this.encryptionKey, false);\n\t      var cipherConstructor = function buildCipherCipherConstructor() {\n\t       return new ARCFourCipher(key);\n\t      };\n\t      return new CipherTransform(cipherConstructor, cipherConstructor);\n\t     }\n\t    };\n\t    return CipherTransformFactory;\n\t   }();\n\t   exports.AES128Cipher = AES128Cipher;\n\t   exports.AES256Cipher = AES256Cipher;\n\t   exports.ARCFourCipher = ARCFourCipher;\n\t   exports.CipherTransformFactory = CipherTransformFactory;\n\t   exports.PDF17 = PDF17;\n\t   exports.PDF20 = PDF20;\n\t   exports.calculateMD5 = calculateMD5;\n\t   exports.calculateSHA256 = calculateSHA256;\n\t   exports.calculateSHA384 = calculateSHA384;\n\t   exports.calculateSHA512 = calculateSHA512;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCoreFontRenderer = {}, root.pdfjsSharedUtil, root.pdfjsCoreStream, root.pdfjsCoreGlyphList, root.pdfjsCoreEncodings, root.pdfjsCoreCFFParser);\n\t  }(this, function (exports, sharedUtil, coreStream, coreGlyphList, coreEncodings, coreCFFParser) {\n\t   var Util = sharedUtil.Util;\n\t   var bytesToString = sharedUtil.bytesToString;\n\t   var error = sharedUtil.error;\n\t   var Stream = coreStream.Stream;\n\t   var getGlyphsUnicode = coreGlyphList.getGlyphsUnicode;\n\t   var StandardEncoding = coreEncodings.StandardEncoding;\n\t   var CFFParser = coreCFFParser.CFFParser;\n\t   var FontRendererFactory = function FontRendererFactoryClosure() {\n\t    function getLong(data, offset) {\n\t     return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n\t    }\n\t    function getUshort(data, offset) {\n\t     return data[offset] << 8 | data[offset + 1];\n\t    }\n\t    function parseCmap(data, start, end) {\n\t     var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n\t     var format = getUshort(data, start + offset);\n\t     var length, ranges, p, i;\n\t     if (format === 4) {\n\t      length = getUshort(data, start + offset + 2);\n\t      var segCount = getUshort(data, start + offset + 6) >> 1;\n\t      p = start + offset + 14;\n\t      ranges = [];\n\t      for (i = 0; i < segCount; i++, p += 2) {\n\t       ranges[i] = { end: getUshort(data, p) };\n\t      }\n\t      p += 2;\n\t      for (i = 0; i < segCount; i++, p += 2) {\n\t       ranges[i].start = getUshort(data, p);\n\t      }\n\t      for (i = 0; i < segCount; i++, p += 2) {\n\t       ranges[i].idDelta = getUshort(data, p);\n\t      }\n\t      for (i = 0; i < segCount; i++, p += 2) {\n\t       var idOffset = getUshort(data, p);\n\t       if (idOffset === 0) {\n\t        continue;\n\t       }\n\t       ranges[i].ids = [];\n\t       for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n\t        ranges[i].ids[j] = getUshort(data, p + idOffset);\n\t        idOffset += 2;\n\t       }\n\t      }\n\t      return ranges;\n\t     } else if (format === 12) {\n\t      length = getLong(data, start + offset + 4);\n\t      var groups = getLong(data, start + offset + 12);\n\t      p = start + offset + 16;\n\t      ranges = [];\n\t      for (i = 0; i < groups; i++) {\n\t       ranges.push({\n\t        start: getLong(data, p),\n\t        end: getLong(data, p + 4),\n\t        idDelta: getLong(data, p + 8) - getLong(data, p)\n\t       });\n\t       p += 12;\n\t      }\n\t      return ranges;\n\t     }\n\t     error('not supported cmap: ' + format);\n\t    }\n\t    function parseCff(data, start, end, seacAnalysisEnabled) {\n\t     var properties = {};\n\t     var parser = new CFFParser(new Stream(data, start, end - start), properties, seacAnalysisEnabled);\n\t     var cff = parser.parse();\n\t     return {\n\t      glyphs: cff.charStrings.objects,\n\t      subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n\t      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects\n\t     };\n\t    }\n\t    function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n\t     var itemSize, itemDecode;\n\t     if (isGlyphLocationsLong) {\n\t      itemSize = 4;\n\t      itemDecode = function fontItemDecodeLong(data, offset) {\n\t       return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n\t      };\n\t     } else {\n\t      itemSize = 2;\n\t      itemDecode = function fontItemDecode(data, offset) {\n\t       return data[offset] << 9 | data[offset + 1] << 1;\n\t      };\n\t     }\n\t     var glyphs = [];\n\t     var startOffset = itemDecode(loca, 0);\n\t     for (var j = itemSize; j < loca.length; j += itemSize) {\n\t      var endOffset = itemDecode(loca, j);\n\t      glyphs.push(glyf.subarray(startOffset, endOffset));\n\t      startOffset = endOffset;\n\t     }\n\t     return glyphs;\n\t    }\n\t    function lookupCmap(ranges, unicode) {\n\t     var code = unicode.charCodeAt(0), gid = 0;\n\t     var l = 0, r = ranges.length - 1;\n\t     while (l < r) {\n\t      var c = l + r + 1 >> 1;\n\t      if (code < ranges[c].start) {\n\t       r = c - 1;\n\t      } else {\n\t       l = c;\n\t      }\n\t     }\n\t     if (ranges[l].start <= code && code <= ranges[l].end) {\n\t      gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\n\t     }\n\t     return {\n\t      charCode: code,\n\t      glyphId: gid\n\t     };\n\t    }\n\t    function compileGlyf(code, cmds, font) {\n\t     function moveTo(x, y) {\n\t      cmds.push({\n\t       cmd: 'moveTo',\n\t       args: [\n\t        x,\n\t        y\n\t       ]\n\t      });\n\t     }\n\t     function lineTo(x, y) {\n\t      cmds.push({\n\t       cmd: 'lineTo',\n\t       args: [\n\t        x,\n\t        y\n\t       ]\n\t      });\n\t     }\n\t     function quadraticCurveTo(xa, ya, x, y) {\n\t      cmds.push({\n\t       cmd: 'quadraticCurveTo',\n\t       args: [\n\t        xa,\n\t        ya,\n\t        x,\n\t        y\n\t       ]\n\t      });\n\t     }\n\t     var i = 0;\n\t     var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n\t     var flags;\n\t     var x = 0, y = 0;\n\t     i += 10;\n\t     if (numberOfContours < 0) {\n\t      do {\n\t       flags = code[i] << 8 | code[i + 1];\n\t       var glyphIndex = code[i + 2] << 8 | code[i + 3];\n\t       i += 4;\n\t       var arg1, arg2;\n\t       if (flags & 0x01) {\n\t        arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n\t        arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n\t        i += 4;\n\t       } else {\n\t        arg1 = code[i++];\n\t        arg2 = code[i++];\n\t       }\n\t       if (flags & 0x02) {\n\t        x = arg1;\n\t        y = arg2;\n\t       } else {\n\t        x = 0;\n\t        y = 0;\n\t       }\n\t       var scaleX = 1, scaleY = 1, scale01 = 0, scale10 = 0;\n\t       if (flags & 0x08) {\n\t        scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n\t        i += 2;\n\t       } else if (flags & 0x40) {\n\t        scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n\t        scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n\t        i += 4;\n\t       } else if (flags & 0x80) {\n\t        scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n\t        scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n\t        scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n\t        scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n\t        i += 8;\n\t       }\n\t       var subglyph = font.glyphs[glyphIndex];\n\t       if (subglyph) {\n\t        cmds.push({ cmd: 'save' });\n\t        cmds.push({\n\t         cmd: 'transform',\n\t         args: [\n\t          scaleX,\n\t          scale01,\n\t          scale10,\n\t          scaleY,\n\t          x,\n\t          y\n\t         ]\n\t        });\n\t        compileGlyf(subglyph, cmds, font);\n\t        cmds.push({ cmd: 'restore' });\n\t       }\n\t      } while (flags & 0x20);\n\t     } else {\n\t      var endPtsOfContours = [];\n\t      var j, jj;\n\t      for (j = 0; j < numberOfContours; j++) {\n\t       endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n\t       i += 2;\n\t      }\n\t      var instructionLength = code[i] << 8 | code[i + 1];\n\t      i += 2 + instructionLength;\n\t      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n\t      var points = [];\n\t      while (points.length < numberOfPoints) {\n\t       flags = code[i++];\n\t       var repeat = 1;\n\t       if (flags & 0x08) {\n\t        repeat += code[i++];\n\t       }\n\t       while (repeat-- > 0) {\n\t        points.push({ flags: flags });\n\t       }\n\t      }\n\t      for (j = 0; j < numberOfPoints; j++) {\n\t       switch (points[j].flags & 0x12) {\n\t       case 0x00:\n\t        x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n\t        i += 2;\n\t        break;\n\t       case 0x02:\n\t        x -= code[i++];\n\t        break;\n\t       case 0x12:\n\t        x += code[i++];\n\t        break;\n\t       }\n\t       points[j].x = x;\n\t      }\n\t      for (j = 0; j < numberOfPoints; j++) {\n\t       switch (points[j].flags & 0x24) {\n\t       case 0x00:\n\t        y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n\t        i += 2;\n\t        break;\n\t       case 0x04:\n\t        y -= code[i++];\n\t        break;\n\t       case 0x24:\n\t        y += code[i++];\n\t        break;\n\t       }\n\t       points[j].y = y;\n\t      }\n\t      var startPoint = 0;\n\t      for (i = 0; i < numberOfContours; i++) {\n\t       var endPoint = endPtsOfContours[i];\n\t       var contour = points.slice(startPoint, endPoint + 1);\n\t       if (contour[0].flags & 1) {\n\t        contour.push(contour[0]);\n\t       } else if (contour[contour.length - 1].flags & 1) {\n\t        contour.unshift(contour[contour.length - 1]);\n\t       } else {\n\t        var p = {\n\t         flags: 1,\n\t         x: (contour[0].x + contour[contour.length - 1].x) / 2,\n\t         y: (contour[0].y + contour[contour.length - 1].y) / 2\n\t        };\n\t        contour.unshift(p);\n\t        contour.push(p);\n\t       }\n\t       moveTo(contour[0].x, contour[0].y);\n\t       for (j = 1, jj = contour.length; j < jj; j++) {\n\t        if (contour[j].flags & 1) {\n\t         lineTo(contour[j].x, contour[j].y);\n\t        } else if (contour[j + 1].flags & 1) {\n\t         quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n\t         j++;\n\t        } else {\n\t         quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n\t        }\n\t       }\n\t       startPoint = endPoint + 1;\n\t      }\n\t     }\n\t    }\n\t    function compileCharString(code, cmds, font) {\n\t     var stack = [];\n\t     var x = 0, y = 0;\n\t     var stems = 0;\n\t     function moveTo(x, y) {\n\t      cmds.push({\n\t       cmd: 'moveTo',\n\t       args: [\n\t        x,\n\t        y\n\t       ]\n\t      });\n\t     }\n\t     function lineTo(x, y) {\n\t      cmds.push({\n\t       cmd: 'lineTo',\n\t       args: [\n\t        x,\n\t        y\n\t       ]\n\t      });\n\t     }\n\t     function bezierCurveTo(x1, y1, x2, y2, x, y) {\n\t      cmds.push({\n\t       cmd: 'bezierCurveTo',\n\t       args: [\n\t        x1,\n\t        y1,\n\t        x2,\n\t        y2,\n\t        x,\n\t        y\n\t       ]\n\t      });\n\t     }\n\t     function parse(code) {\n\t      var i = 0;\n\t      while (i < code.length) {\n\t       var stackClean = false;\n\t       var v = code[i++];\n\t       var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n\t       switch (v) {\n\t       case 1:\n\t        stems += stack.length >> 1;\n\t        stackClean = true;\n\t        break;\n\t       case 3:\n\t        stems += stack.length >> 1;\n\t        stackClean = true;\n\t        break;\n\t       case 4:\n\t        y += stack.pop();\n\t        moveTo(x, y);\n\t        stackClean = true;\n\t        break;\n\t       case 5:\n\t        while (stack.length > 0) {\n\t         x += stack.shift();\n\t         y += stack.shift();\n\t         lineTo(x, y);\n\t        }\n\t        break;\n\t       case 6:\n\t        while (stack.length > 0) {\n\t         x += stack.shift();\n\t         lineTo(x, y);\n\t         if (stack.length === 0) {\n\t          break;\n\t         }\n\t         y += stack.shift();\n\t         lineTo(x, y);\n\t        }\n\t        break;\n\t       case 7:\n\t        while (stack.length > 0) {\n\t         y += stack.shift();\n\t         lineTo(x, y);\n\t         if (stack.length === 0) {\n\t          break;\n\t         }\n\t         x += stack.shift();\n\t         lineTo(x, y);\n\t        }\n\t        break;\n\t       case 8:\n\t        while (stack.length > 0) {\n\t         xa = x + stack.shift();\n\t         ya = y + stack.shift();\n\t         xb = xa + stack.shift();\n\t         yb = ya + stack.shift();\n\t         x = xb + stack.shift();\n\t         y = yb + stack.shift();\n\t         bezierCurveTo(xa, ya, xb, yb, x, y);\n\t        }\n\t        break;\n\t       case 10:\n\t        n = stack.pop() + font.subrsBias;\n\t        subrCode = font.subrs[n];\n\t        if (subrCode) {\n\t         parse(subrCode);\n\t        }\n\t        break;\n\t       case 11:\n\t        return;\n\t       case 12:\n\t        v = code[i++];\n\t        switch (v) {\n\t        case 34:\n\t         xa = x + stack.shift();\n\t         xb = xa + stack.shift();\n\t         y1 = y + stack.shift();\n\t         x = xb + stack.shift();\n\t         bezierCurveTo(xa, y, xb, y1, x, y1);\n\t         xa = x + stack.shift();\n\t         xb = xa + stack.shift();\n\t         x = xb + stack.shift();\n\t         bezierCurveTo(xa, y1, xb, y, x, y);\n\t         break;\n\t        case 35:\n\t         xa = x + stack.shift();\n\t         ya = y + stack.shift();\n\t         xb = xa + stack.shift();\n\t         yb = ya + stack.shift();\n\t         x = xb + stack.shift();\n\t         y = yb + stack.shift();\n\t         bezierCurveTo(xa, ya, xb, yb, x, y);\n\t         xa = x + stack.shift();\n\t         ya = y + stack.shift();\n\t         xb = xa + stack.shift();\n\t         yb = ya + stack.shift();\n\t         x = xb + stack.shift();\n\t         y = yb + stack.shift();\n\t         bezierCurveTo(xa, ya, xb, yb, x, y);\n\t         stack.pop();\n\t         break;\n\t        case 36:\n\t         xa = x + stack.shift();\n\t         y1 = y + stack.shift();\n\t         xb = xa + stack.shift();\n\t         y2 = y1 + stack.shift();\n\t         x = xb + stack.shift();\n\t         bezierCurveTo(xa, y1, xb, y2, x, y2);\n\t         xa = x + stack.shift();\n\t         xb = xa + stack.shift();\n\t         y3 = y2 + stack.shift();\n\t         x = xb + stack.shift();\n\t         bezierCurveTo(xa, y2, xb, y3, x, y);\n\t         break;\n\t        case 37:\n\t         var x0 = x, y0 = y;\n\t         xa = x + stack.shift();\n\t         ya = y + stack.shift();\n\t         xb = xa + stack.shift();\n\t         yb = ya + stack.shift();\n\t         x = xb + stack.shift();\n\t         y = yb + stack.shift();\n\t         bezierCurveTo(xa, ya, xb, yb, x, y);\n\t         xa = x + stack.shift();\n\t         ya = y + stack.shift();\n\t         xb = xa + stack.shift();\n\t         yb = ya + stack.shift();\n\t         x = xb;\n\t         y = yb;\n\t         if (Math.abs(x - x0) > Math.abs(y - y0)) {\n\t          x += stack.shift();\n\t         } else {\n\t          y += stack.shift();\n\t         }\n\t         bezierCurveTo(xa, ya, xb, yb, x, y);\n\t         break;\n\t        default:\n\t         error('unknown operator: 12 ' + v);\n\t        }\n\t        break;\n\t       case 14:\n\t        if (stack.length >= 4) {\n\t         var achar = stack.pop();\n\t         var bchar = stack.pop();\n\t         y = stack.pop();\n\t         x = stack.pop();\n\t         cmds.push({ cmd: 'save' });\n\t         cmds.push({\n\t          cmd: 'translate',\n\t          args: [\n\t           x,\n\t           y\n\t          ]\n\t         });\n\t         var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[StandardEncoding[achar]]));\n\t         compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n\t         cmds.push({ cmd: 'restore' });\n\t         cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[StandardEncoding[bchar]]));\n\t         compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n\t        }\n\t        return;\n\t       case 18:\n\t        stems += stack.length >> 1;\n\t        stackClean = true;\n\t        break;\n\t       case 19:\n\t        stems += stack.length >> 1;\n\t        i += stems + 7 >> 3;\n\t        stackClean = true;\n\t        break;\n\t       case 20:\n\t        stems += stack.length >> 1;\n\t        i += stems + 7 >> 3;\n\t        stackClean = true;\n\t        break;\n\t       case 21:\n\t        y += stack.pop();\n\t        x += stack.pop();\n\t        moveTo(x, y);\n\t        stackClean = true;\n\t        break;\n\t       case 22:\n\t        x += stack.pop();\n\t        moveTo(x, y);\n\t        stackClean = true;\n\t        break;\n\t       case 23:\n\t        stems += stack.length >> 1;\n\t        stackClean = true;\n\t        break;\n\t       case 24:\n\t        while (stack.length > 2) {\n\t         xa = x + stack.shift();\n\t         ya = y + stack.shift();\n\t         xb = xa + stack.shift();\n\t         yb = ya + stack.shift();\n\t         x = xb + stack.shift();\n\t         y = yb + stack.shift();\n\t         bezierCurveTo(xa, ya, xb, yb, x, y);\n\t        }\n\t        x += stack.shift();\n\t        y += stack.shift();\n\t        lineTo(x, y);\n\t        break;\n\t       case 25:\n\t        while (stack.length > 6) {\n\t         x += stack.shift();\n\t         y += stack.shift();\n\t         lineTo(x, y);\n\t        }\n\t        xa = x + stack.shift();\n\t        ya = y + stack.shift();\n\t        xb = xa + stack.shift();\n\t        yb = ya + stack.shift();\n\t        x = xb + stack.shift();\n\t        y = yb + stack.shift();\n\t        bezierCurveTo(xa, ya, xb, yb, x, y);\n\t        break;\n\t       case 26:\n\t        if (stack.length % 2) {\n\t         x += stack.shift();\n\t        }\n\t        while (stack.length > 0) {\n\t         xa = x;\n\t         ya = y + stack.shift();\n\t         xb = xa + stack.shift();\n\t         yb = ya + stack.shift();\n\t         x = xb;\n\t         y = yb + stack.shift();\n\t         bezierCurveTo(xa, ya, xb, yb, x, y);\n\t        }\n\t        break;\n\t       case 27:\n\t        if (stack.length % 2) {\n\t         y += stack.shift();\n\t        }\n\t        while (stack.length > 0) {\n\t         xa = x + stack.shift();\n\t         ya = y;\n\t         xb = xa + stack.shift();\n\t         yb = ya + stack.shift();\n\t         x = xb + stack.shift();\n\t         y = yb;\n\t         bezierCurveTo(xa, ya, xb, yb, x, y);\n\t        }\n\t        break;\n\t       case 28:\n\t        stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n\t        i += 2;\n\t        break;\n\t       case 29:\n\t        n = stack.pop() + font.gsubrsBias;\n\t        subrCode = font.gsubrs[n];\n\t        if (subrCode) {\n\t         parse(subrCode);\n\t        }\n\t        break;\n\t       case 30:\n\t        while (stack.length > 0) {\n\t         xa = x;\n\t         ya = y + stack.shift();\n\t         xb = xa + stack.shift();\n\t         yb = ya + stack.shift();\n\t         x = xb + stack.shift();\n\t         y = yb + (stack.length === 1 ? stack.shift() : 0);\n\t         bezierCurveTo(xa, ya, xb, yb, x, y);\n\t         if (stack.length === 0) {\n\t          break;\n\t         }\n\t         xa = x + stack.shift();\n\t         ya = y;\n\t         xb = xa + stack.shift();\n\t         yb = ya + stack.shift();\n\t         y = yb + stack.shift();\n\t         x = xb + (stack.length === 1 ? stack.shift() : 0);\n\t         bezierCurveTo(xa, ya, xb, yb, x, y);\n\t        }\n\t        break;\n\t       case 31:\n\t        while (stack.length > 0) {\n\t         xa = x + stack.shift();\n\t         ya = y;\n\t         xb = xa + stack.shift();\n\t         yb = ya + stack.shift();\n\t         y = yb + stack.shift();\n\t         x = xb + (stack.length === 1 ? stack.shift() : 0);\n\t         bezierCurveTo(xa, ya, xb, yb, x, y);\n\t         if (stack.length === 0) {\n\t          break;\n\t         }\n\t         xa = x;\n\t         ya = y + stack.shift();\n\t         xb = xa + stack.shift();\n\t         yb = ya + stack.shift();\n\t         x = xb + stack.shift();\n\t         y = yb + (stack.length === 1 ? stack.shift() : 0);\n\t         bezierCurveTo(xa, ya, xb, yb, x, y);\n\t        }\n\t        break;\n\t       default:\n\t        if (v < 32) {\n\t         error('unknown operator: ' + v);\n\t        }\n\t        if (v < 247) {\n\t         stack.push(v - 139);\n\t        } else if (v < 251) {\n\t         stack.push((v - 247) * 256 + code[i++] + 108);\n\t        } else if (v < 255) {\n\t         stack.push(-(v - 251) * 256 - code[i++] - 108);\n\t        } else {\n\t         stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n\t         i += 4;\n\t        }\n\t        break;\n\t       }\n\t       if (stackClean) {\n\t        stack.length = 0;\n\t       }\n\t      }\n\t     }\n\t     parse(code);\n\t    }\n\t    var noop = '';\n\t    function CompiledFont(fontMatrix) {\n\t     this.compiledGlyphs = Object.create(null);\n\t     this.compiledCharCodeToGlyphId = Object.create(null);\n\t     this.fontMatrix = fontMatrix;\n\t    }\n\t    CompiledFont.prototype = {\n\t     getPathJs: function (unicode) {\n\t      var cmap = lookupCmap(this.cmap, unicode);\n\t      var fn = this.compiledGlyphs[cmap.glyphId];\n\t      if (!fn) {\n\t       fn = this.compileGlyph(this.glyphs[cmap.glyphId]);\n\t       this.compiledGlyphs[cmap.glyphId] = fn;\n\t      }\n\t      if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n\t       this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n\t      }\n\t      return fn;\n\t     },\n\t     compileGlyph: function (code) {\n\t      if (!code || code.length === 0 || code[0] === 14) {\n\t       return noop;\n\t      }\n\t      var cmds = [];\n\t      cmds.push({ cmd: 'save' });\n\t      cmds.push({\n\t       cmd: 'transform',\n\t       args: this.fontMatrix.slice()\n\t      });\n\t      cmds.push({\n\t       cmd: 'scale',\n\t       args: [\n\t        'size',\n\t        '-size'\n\t       ]\n\t      });\n\t      this.compileGlyphImpl(code, cmds);\n\t      cmds.push({ cmd: 'restore' });\n\t      return cmds;\n\t     },\n\t     compileGlyphImpl: function () {\n\t      error('Children classes should implement this.');\n\t     },\n\t     hasBuiltPath: function (unicode) {\n\t      var cmap = lookupCmap(this.cmap, unicode);\n\t      return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n\t     }\n\t    };\n\t    function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n\t     fontMatrix = fontMatrix || [\n\t      0.000488,\n\t      0,\n\t      0,\n\t      0.000488,\n\t      0,\n\t      0\n\t     ];\n\t     CompiledFont.call(this, fontMatrix);\n\t     this.glyphs = glyphs;\n\t     this.cmap = cmap;\n\t    }\n\t    Util.inherit(TrueTypeCompiled, CompiledFont, {\n\t     compileGlyphImpl: function (code, cmds) {\n\t      compileGlyf(code, cmds, this);\n\t     }\n\t    });\n\t    function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n\t     fontMatrix = fontMatrix || [\n\t      0.001,\n\t      0,\n\t      0,\n\t      0.001,\n\t      0,\n\t      0\n\t     ];\n\t     CompiledFont.call(this, fontMatrix);\n\t     this.glyphs = cffInfo.glyphs;\n\t     this.gsubrs = cffInfo.gsubrs || [];\n\t     this.subrs = cffInfo.subrs || [];\n\t     this.cmap = cmap;\n\t     this.glyphNameMap = glyphNameMap || getGlyphsUnicode();\n\t     this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\n\t     this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\n\t    }\n\t    Util.inherit(Type2Compiled, CompiledFont, {\n\t     compileGlyphImpl: function (code, cmds) {\n\t      compileCharString(code, cmds, this);\n\t     }\n\t    });\n\t    return {\n\t     create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n\t      var data = new Uint8Array(font.data);\n\t      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n\t      var numTables = getUshort(data, 4);\n\t      for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n\t       var tag = bytesToString(data.subarray(p, p + 4));\n\t       var offset = getLong(data, p + 8);\n\t       var length = getLong(data, p + 12);\n\t       switch (tag) {\n\t       case 'cmap':\n\t        cmap = parseCmap(data, offset, offset + length);\n\t        break;\n\t       case 'glyf':\n\t        glyf = data.subarray(offset, offset + length);\n\t        break;\n\t       case 'loca':\n\t        loca = data.subarray(offset, offset + length);\n\t        break;\n\t       case 'head':\n\t        unitsPerEm = getUshort(data, offset + 18);\n\t        indexToLocFormat = getUshort(data, offset + 50);\n\t        break;\n\t       case 'CFF ':\n\t        cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n\t        break;\n\t       }\n\t      }\n\t      if (glyf) {\n\t       var fontMatrix = !unitsPerEm ? font.fontMatrix : [\n\t        1 / unitsPerEm,\n\t        0,\n\t        0,\n\t        1 / unitsPerEm,\n\t        0,\n\t        0\n\t       ];\n\t       return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n\t      }\n\t      return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n\t     }\n\t    };\n\t   }();\n\t   exports.FontRendererFactory = FontRendererFactory;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCoreFunction = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCorePsParser);\n\t  }(this, function (exports, sharedUtil, corePrimitives, corePsParser) {\n\t   var error = sharedUtil.error;\n\t   var info = sharedUtil.info;\n\t   var isArray = sharedUtil.isArray;\n\t   var isBool = sharedUtil.isBool;\n\t   var isDict = corePrimitives.isDict;\n\t   var isStream = corePrimitives.isStream;\n\t   var PostScriptLexer = corePsParser.PostScriptLexer;\n\t   var PostScriptParser = corePsParser.PostScriptParser;\n\t   var PDFFunction = function PDFFunctionClosure() {\n\t    var CONSTRUCT_SAMPLED = 0;\n\t    var CONSTRUCT_INTERPOLATED = 2;\n\t    var CONSTRUCT_STICHED = 3;\n\t    var CONSTRUCT_POSTSCRIPT = 4;\n\t    return {\n\t     getSampleArray: function PDFFunction_getSampleArray(size, outputSize, bps, str) {\n\t      var i, ii;\n\t      var length = 1;\n\t      for (i = 0, ii = size.length; i < ii; i++) {\n\t       length *= size[i];\n\t      }\n\t      length *= outputSize;\n\t      var array = new Array(length);\n\t      var codeSize = 0;\n\t      var codeBuf = 0;\n\t      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n\t      var strBytes = str.getBytes((length * bps + 7) / 8);\n\t      var strIdx = 0;\n\t      for (i = 0; i < length; i++) {\n\t       while (codeSize < bps) {\n\t        codeBuf <<= 8;\n\t        codeBuf |= strBytes[strIdx++];\n\t        codeSize += 8;\n\t       }\n\t       codeSize -= bps;\n\t       array[i] = (codeBuf >> codeSize) * sampleMul;\n\t       codeBuf &= (1 << codeSize) - 1;\n\t      }\n\t      return array;\n\t     },\n\t     getIR: function PDFFunction_getIR(xref, fn) {\n\t      var dict = fn.dict;\n\t      if (!dict) {\n\t       dict = fn;\n\t      }\n\t      var types = [\n\t       this.constructSampled,\n\t       null,\n\t       this.constructInterpolated,\n\t       this.constructStiched,\n\t       this.constructPostScript\n\t      ];\n\t      var typeNum = dict.get('FunctionType');\n\t      var typeFn = types[typeNum];\n\t      if (!typeFn) {\n\t       error('Unknown type of function');\n\t      }\n\t      return typeFn.call(this, fn, dict, xref);\n\t     },\n\t     fromIR: function PDFFunction_fromIR(IR) {\n\t      var type = IR[0];\n\t      switch (type) {\n\t      case CONSTRUCT_SAMPLED:\n\t       return this.constructSampledFromIR(IR);\n\t      case CONSTRUCT_INTERPOLATED:\n\t       return this.constructInterpolatedFromIR(IR);\n\t      case CONSTRUCT_STICHED:\n\t       return this.constructStichedFromIR(IR);\n\t      default:\n\t       return this.constructPostScriptFromIR(IR);\n\t      }\n\t     },\n\t     parse: function PDFFunction_parse(xref, fn) {\n\t      var IR = this.getIR(xref, fn);\n\t      return this.fromIR(IR);\n\t     },\n\t     parseArray: function PDFFunction_parseArray(xref, fnObj) {\n\t      if (!isArray(fnObj)) {\n\t       return this.parse(xref, fnObj);\n\t      }\n\t      var fnArray = [];\n\t      for (var j = 0, jj = fnObj.length; j < jj; j++) {\n\t       var obj = xref.fetchIfRef(fnObj[j]);\n\t       fnArray.push(PDFFunction.parse(xref, obj));\n\t      }\n\t      return function (src, srcOffset, dest, destOffset) {\n\t       for (var i = 0, ii = fnArray.length; i < ii; i++) {\n\t        fnArray[i](src, srcOffset, dest, destOffset + i);\n\t       }\n\t      };\n\t     },\n\t     constructSampled: function PDFFunction_constructSampled(str, dict) {\n\t      function toMultiArray(arr) {\n\t       var inputLength = arr.length;\n\t       var out = [];\n\t       var index = 0;\n\t       for (var i = 0; i < inputLength; i += 2) {\n\t        out[index] = [\n\t         arr[i],\n\t         arr[i + 1]\n\t        ];\n\t        ++index;\n\t       }\n\t       return out;\n\t      }\n\t      var domain = dict.getArray('Domain');\n\t      var range = dict.getArray('Range');\n\t      if (!domain || !range) {\n\t       error('No domain or range');\n\t      }\n\t      var inputSize = domain.length / 2;\n\t      var outputSize = range.length / 2;\n\t      domain = toMultiArray(domain);\n\t      range = toMultiArray(range);\n\t      var size = dict.get('Size');\n\t      var bps = dict.get('BitsPerSample');\n\t      var order = dict.get('Order') || 1;\n\t      if (order !== 1) {\n\t       info('No support for cubic spline interpolation: ' + order);\n\t      }\n\t      var encode = dict.getArray('Encode');\n\t      if (!encode) {\n\t       encode = [];\n\t       for (var i = 0; i < inputSize; ++i) {\n\t        encode.push(0);\n\t        encode.push(size[i] - 1);\n\t       }\n\t      }\n\t      encode = toMultiArray(encode);\n\t      var decode = dict.getArray('Decode');\n\t      if (!decode) {\n\t       decode = range;\n\t      } else {\n\t       decode = toMultiArray(decode);\n\t      }\n\t      var samples = this.getSampleArray(size, outputSize, bps, str);\n\t      return [\n\t       CONSTRUCT_SAMPLED,\n\t       inputSize,\n\t       domain,\n\t       encode,\n\t       decode,\n\t       samples,\n\t       size,\n\t       outputSize,\n\t       Math.pow(2, bps) - 1,\n\t       range\n\t      ];\n\t     },\n\t     constructSampledFromIR: function PDFFunction_constructSampledFromIR(IR) {\n\t      function interpolate(x, xmin, xmax, ymin, ymax) {\n\t       return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n\t      }\n\t      return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n\t       var m = IR[1];\n\t       var domain = IR[2];\n\t       var encode = IR[3];\n\t       var decode = IR[4];\n\t       var samples = IR[5];\n\t       var size = IR[6];\n\t       var n = IR[7];\n\t       var range = IR[9];\n\t       var cubeVertices = 1 << m;\n\t       var cubeN = new Float64Array(cubeVertices);\n\t       var cubeVertex = new Uint32Array(cubeVertices);\n\t       var i, j;\n\t       for (j = 0; j < cubeVertices; j++) {\n\t        cubeN[j] = 1;\n\t       }\n\t       var k = n, pos = 1;\n\t       for (i = 0; i < m; ++i) {\n\t        var domain_2i = domain[i][0];\n\t        var domain_2i_1 = domain[i][1];\n\t        var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n\t        var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n\t        var size_i = size[i];\n\t        e = Math.min(Math.max(e, 0), size_i - 1);\n\t        var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n\t        var n0 = e0 + 1 - e;\n\t        var n1 = e - e0;\n\t        var offset0 = e0 * k;\n\t        var offset1 = offset0 + k;\n\t        for (j = 0; j < cubeVertices; j++) {\n\t         if (j & pos) {\n\t          cubeN[j] *= n1;\n\t          cubeVertex[j] += offset1;\n\t         } else {\n\t          cubeN[j] *= n0;\n\t          cubeVertex[j] += offset0;\n\t         }\n\t        }\n\t        k *= size_i;\n\t        pos <<= 1;\n\t       }\n\t       for (j = 0; j < n; ++j) {\n\t        var rj = 0;\n\t        for (i = 0; i < cubeVertices; i++) {\n\t         rj += samples[cubeVertex[i] + j] * cubeN[i];\n\t        }\n\t        rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n\t        dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n\t       }\n\t      };\n\t     },\n\t     constructInterpolated: function PDFFunction_constructInterpolated(str, dict) {\n\t      var c0 = dict.getArray('C0') || [0];\n\t      var c1 = dict.getArray('C1') || [1];\n\t      var n = dict.get('N');\n\t      if (!isArray(c0) || !isArray(c1)) {\n\t       error('Illegal dictionary for interpolated function');\n\t      }\n\t      var length = c0.length;\n\t      var diff = [];\n\t      for (var i = 0; i < length; ++i) {\n\t       diff.push(c1[i] - c0[i]);\n\t      }\n\t      return [\n\t       CONSTRUCT_INTERPOLATED,\n\t       c0,\n\t       diff,\n\t       n\n\t      ];\n\t     },\n\t     constructInterpolatedFromIR: function PDFFunction_constructInterpolatedFromIR(IR) {\n\t      var c0 = IR[1];\n\t      var diff = IR[2];\n\t      var n = IR[3];\n\t      var length = diff.length;\n\t      return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n\t       var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n\t       for (var j = 0; j < length; ++j) {\n\t        dest[destOffset + j] = c0[j] + x * diff[j];\n\t       }\n\t      };\n\t     },\n\t     constructStiched: function PDFFunction_constructStiched(fn, dict, xref) {\n\t      var domain = dict.getArray('Domain');\n\t      if (!domain) {\n\t       error('No domain');\n\t      }\n\t      var inputSize = domain.length / 2;\n\t      if (inputSize !== 1) {\n\t       error('Bad domain for stiched function');\n\t      }\n\t      var fnRefs = dict.get('Functions');\n\t      var fns = [];\n\t      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n\t       fns.push(PDFFunction.getIR(xref, xref.fetchIfRef(fnRefs[i])));\n\t      }\n\t      var bounds = dict.getArray('Bounds');\n\t      var encode = dict.getArray('Encode');\n\t      return [\n\t       CONSTRUCT_STICHED,\n\t       domain,\n\t       bounds,\n\t       encode,\n\t       fns\n\t      ];\n\t     },\n\t     constructStichedFromIR: function PDFFunction_constructStichedFromIR(IR) {\n\t      var domain = IR[1];\n\t      var bounds = IR[2];\n\t      var encode = IR[3];\n\t      var fnsIR = IR[4];\n\t      var fns = [];\n\t      var tmpBuf = new Float32Array(1);\n\t      for (var i = 0, ii = fnsIR.length; i < ii; i++) {\n\t       fns.push(PDFFunction.fromIR(fnsIR[i]));\n\t      }\n\t      return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n\t       var clip = function constructStichedFromIRClip(v, min, max) {\n\t        if (v > max) {\n\t         v = max;\n\t        } else if (v < min) {\n\t         v = min;\n\t        }\n\t        return v;\n\t       };\n\t       var v = clip(src[srcOffset], domain[0], domain[1]);\n\t       for (var i = 0, ii = bounds.length; i < ii; ++i) {\n\t        if (v < bounds[i]) {\n\t         break;\n\t        }\n\t       }\n\t       var dmin = domain[0];\n\t       if (i > 0) {\n\t        dmin = bounds[i - 1];\n\t       }\n\t       var dmax = domain[1];\n\t       if (i < bounds.length) {\n\t        dmax = bounds[i];\n\t       }\n\t       var rmin = encode[2 * i];\n\t       var rmax = encode[2 * i + 1];\n\t       tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n\t       fns[i](tmpBuf, 0, dest, destOffset);\n\t      };\n\t     },\n\t     constructPostScript: function PDFFunction_constructPostScript(fn, dict, xref) {\n\t      var domain = dict.getArray('Domain');\n\t      var range = dict.getArray('Range');\n\t      if (!domain) {\n\t       error('No domain.');\n\t      }\n\t      if (!range) {\n\t       error('No range.');\n\t      }\n\t      var lexer = new PostScriptLexer(fn);\n\t      var parser = new PostScriptParser(lexer);\n\t      var code = parser.parse();\n\t      return [\n\t       CONSTRUCT_POSTSCRIPT,\n\t       domain,\n\t       range,\n\t       code\n\t      ];\n\t     },\n\t     constructPostScriptFromIR: function PDFFunction_constructPostScriptFromIR(IR) {\n\t      var domain = IR[1];\n\t      var range = IR[2];\n\t      var code = IR[3];\n\t      var compiled = new PostScriptCompiler().compile(code, domain, range);\n\t      if (compiled) {\n\t       return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n\t      }\n\t      info('Unable to compile PS function');\n\t      var numOutputs = range.length >> 1;\n\t      var numInputs = domain.length >> 1;\n\t      var evaluator = new PostScriptEvaluator(code);\n\t      var cache = Object.create(null);\n\t      var MAX_CACHE_SIZE = 2048 * 4;\n\t      var cache_available = MAX_CACHE_SIZE;\n\t      var tmpBuf = new Float32Array(numInputs);\n\t      return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n\t       var i, value;\n\t       var key = '';\n\t       var input = tmpBuf;\n\t       for (i = 0; i < numInputs; i++) {\n\t        value = src[srcOffset + i];\n\t        input[i] = value;\n\t        key += value + '_';\n\t       }\n\t       var cachedValue = cache[key];\n\t       if (cachedValue !== undefined) {\n\t        dest.set(cachedValue, destOffset);\n\t        return;\n\t       }\n\t       var output = new Float32Array(numOutputs);\n\t       var stack = evaluator.execute(input);\n\t       var stackIndex = stack.length - numOutputs;\n\t       for (i = 0; i < numOutputs; i++) {\n\t        value = stack[stackIndex + i];\n\t        var bound = range[i * 2];\n\t        if (value < bound) {\n\t         value = bound;\n\t        } else {\n\t         bound = range[i * 2 + 1];\n\t         if (value > bound) {\n\t          value = bound;\n\t         }\n\t        }\n\t        output[i] = value;\n\t       }\n\t       if (cache_available > 0) {\n\t        cache_available--;\n\t        cache[key] = output;\n\t       }\n\t       dest.set(output, destOffset);\n\t      };\n\t     }\n\t    };\n\t   }();\n\t   function isPDFFunction(v) {\n\t    var fnDict;\n\t    if (typeof v !== 'object') {\n\t     return false;\n\t    } else if (isDict(v)) {\n\t     fnDict = v;\n\t    } else if (isStream(v)) {\n\t     fnDict = v.dict;\n\t    } else {\n\t     return false;\n\t    }\n\t    return fnDict.has('FunctionType');\n\t   }\n\t   var PostScriptStack = function PostScriptStackClosure() {\n\t    var MAX_STACK_SIZE = 100;\n\t    function PostScriptStack(initialStack) {\n\t     this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n\t    }\n\t    PostScriptStack.prototype = {\n\t     push: function PostScriptStack_push(value) {\n\t      if (this.stack.length >= MAX_STACK_SIZE) {\n\t       error('PostScript function stack overflow.');\n\t      }\n\t      this.stack.push(value);\n\t     },\n\t     pop: function PostScriptStack_pop() {\n\t      if (this.stack.length <= 0) {\n\t       error('PostScript function stack underflow.');\n\t      }\n\t      return this.stack.pop();\n\t     },\n\t     copy: function PostScriptStack_copy(n) {\n\t      if (this.stack.length + n >= MAX_STACK_SIZE) {\n\t       error('PostScript function stack overflow.');\n\t      }\n\t      var stack = this.stack;\n\t      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n\t       stack.push(stack[i]);\n\t      }\n\t     },\n\t     index: function PostScriptStack_index(n) {\n\t      this.push(this.stack[this.stack.length - n - 1]);\n\t     },\n\t     roll: function PostScriptStack_roll(n, p) {\n\t      var stack = this.stack;\n\t      var l = stack.length - n;\n\t      var r = stack.length - 1, c = l + (p - Math.floor(p / n) * n), i, j, t;\n\t      for (i = l, j = r; i < j; i++, j--) {\n\t       t = stack[i];\n\t       stack[i] = stack[j];\n\t       stack[j] = t;\n\t      }\n\t      for (i = l, j = c - 1; i < j; i++, j--) {\n\t       t = stack[i];\n\t       stack[i] = stack[j];\n\t       stack[j] = t;\n\t      }\n\t      for (i = c, j = r; i < j; i++, j--) {\n\t       t = stack[i];\n\t       stack[i] = stack[j];\n\t       stack[j] = t;\n\t      }\n\t     }\n\t    };\n\t    return PostScriptStack;\n\t   }();\n\t   var PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n\t    function PostScriptEvaluator(operators) {\n\t     this.operators = operators;\n\t    }\n\t    PostScriptEvaluator.prototype = {\n\t     execute: function PostScriptEvaluator_execute(initialStack) {\n\t      var stack = new PostScriptStack(initialStack);\n\t      var counter = 0;\n\t      var operators = this.operators;\n\t      var length = operators.length;\n\t      var operator, a, b;\n\t      while (counter < length) {\n\t       operator = operators[counter++];\n\t       if (typeof operator === 'number') {\n\t        stack.push(operator);\n\t        continue;\n\t       }\n\t       switch (operator) {\n\t       case 'jz':\n\t        b = stack.pop();\n\t        a = stack.pop();\n\t        if (!a) {\n\t         counter = b;\n\t        }\n\t        break;\n\t       case 'j':\n\t        a = stack.pop();\n\t        counter = a;\n\t        break;\n\t       case 'abs':\n\t        a = stack.pop();\n\t        stack.push(Math.abs(a));\n\t        break;\n\t       case 'add':\n\t        b = stack.pop();\n\t        a = stack.pop();\n\t        stack.push(a + b);\n\t        break;\n\t       case 'and':\n\t        b = stack.pop();\n\t        a = stack.pop();\n\t        if (isBool(a) && isBool(b)) {\n\t         stack.push(a && b);\n\t        } else {\n\t         stack.push(a & b);\n\t        }\n\t        break;\n\t       case 'atan':\n\t        a = stack.pop();\n\t        stack.push(Math.atan(a));\n\t        break;\n\t       case 'bitshift':\n\t        b = stack.pop();\n\t        a = stack.pop();\n\t        if (a > 0) {\n\t         stack.push(a << b);\n\t        } else {\n\t         stack.push(a >> b);\n\t        }\n\t        break;\n\t       case 'ceiling':\n\t        a = stack.pop();\n\t        stack.push(Math.ceil(a));\n\t        break;\n\t       case 'copy':\n\t        a = stack.pop();\n\t        stack.copy(a);\n\t        break;\n\t       case 'cos':\n\t        a = stack.pop();\n\t        stack.push(Math.cos(a));\n\t        break;\n\t       case 'cvi':\n\t        a = stack.pop() | 0;\n\t        stack.push(a);\n\t        break;\n\t       case 'cvr':\n\t        break;\n\t       case 'div':\n\t        b = stack.pop();\n\t        a = stack.pop();\n\t        stack.push(a / b);\n\t        break;\n\t       case 'dup':\n\t        stack.copy(1);\n\t        break;\n\t       case 'eq':\n\t        b = stack.pop();\n\t        a = stack.pop();\n\t        stack.push(a === b);\n\t        break;\n\t       case 'exch':\n\t        stack.roll(2, 1);\n\t        break;\n\t       case 'exp':\n\t        b = stack.pop();\n\t        a = stack.pop();\n\t        stack.push(Math.pow(a, b));\n\t        break;\n\t       case 'false':\n\t        stack.push(false);\n\t        break;\n\t       case 'floor':\n\t        a = stack.pop();\n\t        stack.push(Math.floor(a));\n\t        break;\n\t       case 'ge':\n\t        b = stack.pop();\n\t        a = stack.pop();\n\t        stack.push(a >= b);\n\t        break;\n\t       case 'gt':\n\t        b = stack.pop();\n\t        a = stack.pop();\n\t        stack.push(a > b);\n\t        break;\n\t       case 'idiv':\n\t        b = stack.pop();\n\t        a = stack.pop();\n\t        stack.push(a / b | 0);\n\t        break;\n\t       case 'index':\n\t        a = stack.pop();\n\t        stack.index(a);\n\t        break;\n\t       case 'le':\n\t        b = stack.pop();\n\t        a = stack.pop();\n\t        stack.push(a <= b);\n\t        break;\n\t       case 'ln':\n\t        a = stack.pop();\n\t        stack.push(Math.log(a));\n\t        break;\n\t       case 'log':\n\t        a = stack.pop();\n\t        stack.push(Math.log(a) / Math.LN10);\n\t        break;\n\t       case 'lt':\n\t        b = stack.pop();\n\t        a = stack.pop();\n\t        stack.push(a < b);\n\t        break;\n\t       case 'mod':\n\t        b = stack.pop();\n\t        a = stack.pop();\n\t        stack.push(a % b);\n\t        break;\n\t       case 'mul':\n\t        b = stack.pop();\n\t        a = stack.pop();\n\t        stack.push(a * b);\n\t        break;\n\t       case 'ne':\n\t        b = stack.pop();\n\t        a = stack.pop();\n\t        stack.push(a !== b);\n\t        break;\n\t       case 'neg':\n\t        a = stack.pop();\n\t        stack.push(-a);\n\t        break;\n\t       case 'not':\n\t        a = stack.pop();\n\t        if (isBool(a)) {\n\t         stack.push(!a);\n\t        } else {\n\t         stack.push(~a);\n\t        }\n\t        break;\n\t       case 'or':\n\t        b = stack.pop();\n\t        a = stack.pop();\n\t        if (isBool(a) && isBool(b)) {\n\t         stack.push(a || b);\n\t        } else {\n\t         stack.push(a | b);\n\t        }\n\t        break;\n\t       case 'pop':\n\t        stack.pop();\n\t        break;\n\t       case 'roll':\n\t        b = stack.pop();\n\t        a = stack.pop();\n\t        stack.roll(a, b);\n\t        break;\n\t       case 'round':\n\t        a = stack.pop();\n\t        stack.push(Math.round(a));\n\t        break;\n\t       case 'sin':\n\t        a = stack.pop();\n\t        stack.push(Math.sin(a));\n\t        break;\n\t       case 'sqrt':\n\t        a = stack.pop();\n\t        stack.push(Math.sqrt(a));\n\t        break;\n\t       case 'sub':\n\t        b = stack.pop();\n\t        a = stack.pop();\n\t        stack.push(a - b);\n\t        break;\n\t       case 'true':\n\t        stack.push(true);\n\t        break;\n\t       case 'truncate':\n\t        a = stack.pop();\n\t        a = a < 0 ? Math.ceil(a) : Math.floor(a);\n\t        stack.push(a);\n\t        break;\n\t       case 'xor':\n\t        b = stack.pop();\n\t        a = stack.pop();\n\t        if (isBool(a) && isBool(b)) {\n\t         stack.push(a !== b);\n\t        } else {\n\t         stack.push(a ^ b);\n\t        }\n\t        break;\n\t       default:\n\t        error('Unknown operator ' + operator);\n\t        break;\n\t       }\n\t      }\n\t      return stack.stack;\n\t     }\n\t    };\n\t    return PostScriptEvaluator;\n\t   }();\n\t   var PostScriptCompiler = function PostScriptCompilerClosure() {\n\t    function AstNode(type) {\n\t     this.type = type;\n\t    }\n\t    AstNode.prototype.visit = function (visitor) {\n\t     throw new Error('abstract method');\n\t    };\n\t    function AstArgument(index, min, max) {\n\t     AstNode.call(this, 'args');\n\t     this.index = index;\n\t     this.min = min;\n\t     this.max = max;\n\t    }\n\t    AstArgument.prototype = Object.create(AstNode.prototype);\n\t    AstArgument.prototype.visit = function (visitor) {\n\t     visitor.visitArgument(this);\n\t    };\n\t    function AstLiteral(number) {\n\t     AstNode.call(this, 'literal');\n\t     this.number = number;\n\t     this.min = number;\n\t     this.max = number;\n\t    }\n\t    AstLiteral.prototype = Object.create(AstNode.prototype);\n\t    AstLiteral.prototype.visit = function (visitor) {\n\t     visitor.visitLiteral(this);\n\t    };\n\t    function AstBinaryOperation(op, arg1, arg2, min, max) {\n\t     AstNode.call(this, 'binary');\n\t     this.op = op;\n\t     this.arg1 = arg1;\n\t     this.arg2 = arg2;\n\t     this.min = min;\n\t     this.max = max;\n\t    }\n\t    AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n\t    AstBinaryOperation.prototype.visit = function (visitor) {\n\t     visitor.visitBinaryOperation(this);\n\t    };\n\t    function AstMin(arg, max) {\n\t     AstNode.call(this, 'max');\n\t     this.arg = arg;\n\t     this.min = arg.min;\n\t     this.max = max;\n\t    }\n\t    AstMin.prototype = Object.create(AstNode.prototype);\n\t    AstMin.prototype.visit = function (visitor) {\n\t     visitor.visitMin(this);\n\t    };\n\t    function AstVariable(index, min, max) {\n\t     AstNode.call(this, 'var');\n\t     this.index = index;\n\t     this.min = min;\n\t     this.max = max;\n\t    }\n\t    AstVariable.prototype = Object.create(AstNode.prototype);\n\t    AstVariable.prototype.visit = function (visitor) {\n\t     visitor.visitVariable(this);\n\t    };\n\t    function AstVariableDefinition(variable, arg) {\n\t     AstNode.call(this, 'definition');\n\t     this.variable = variable;\n\t     this.arg = arg;\n\t    }\n\t    AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n\t    AstVariableDefinition.prototype.visit = function (visitor) {\n\t     visitor.visitVariableDefinition(this);\n\t    };\n\t    function ExpressionBuilderVisitor() {\n\t     this.parts = [];\n\t    }\n\t    ExpressionBuilderVisitor.prototype = {\n\t     visitArgument: function (arg) {\n\t      this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\n\t     },\n\t     visitVariable: function (variable) {\n\t      this.parts.push('v', variable.index);\n\t     },\n\t     visitLiteral: function (literal) {\n\t      this.parts.push(literal.number);\n\t     },\n\t     visitBinaryOperation: function (operation) {\n\t      this.parts.push('(');\n\t      operation.arg1.visit(this);\n\t      this.parts.push(' ', operation.op, ' ');\n\t      operation.arg2.visit(this);\n\t      this.parts.push(')');\n\t     },\n\t     visitVariableDefinition: function (definition) {\n\t      this.parts.push('var ');\n\t      definition.variable.visit(this);\n\t      this.parts.push(' = ');\n\t      definition.arg.visit(this);\n\t      this.parts.push(';');\n\t     },\n\t     visitMin: function (max) {\n\t      this.parts.push('Math.min(');\n\t      max.arg.visit(this);\n\t      this.parts.push(', ', max.max, ')');\n\t     },\n\t     toString: function () {\n\t      return this.parts.join('');\n\t     }\n\t    };\n\t    function buildAddOperation(num1, num2) {\n\t     if (num2.type === 'literal' && num2.number === 0) {\n\t      return num1;\n\t     }\n\t     if (num1.type === 'literal' && num1.number === 0) {\n\t      return num2;\n\t     }\n\t     if (num2.type === 'literal' && num1.type === 'literal') {\n\t      return new AstLiteral(num1.number + num2.number);\n\t     }\n\t     return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\n\t    }\n\t    function buildMulOperation(num1, num2) {\n\t     if (num2.type === 'literal') {\n\t      if (num2.number === 0) {\n\t       return new AstLiteral(0);\n\t      } else if (num2.number === 1) {\n\t       return num1;\n\t      } else if (num1.type === 'literal') {\n\t       return new AstLiteral(num1.number * num2.number);\n\t      }\n\t     }\n\t     if (num1.type === 'literal') {\n\t      if (num1.number === 0) {\n\t       return new AstLiteral(0);\n\t      } else if (num1.number === 1) {\n\t       return num2;\n\t      }\n\t     }\n\t     var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n\t     var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n\t     return new AstBinaryOperation('*', num1, num2, min, max);\n\t    }\n\t    function buildSubOperation(num1, num2) {\n\t     if (num2.type === 'literal') {\n\t      if (num2.number === 0) {\n\t       return num1;\n\t      } else if (num1.type === 'literal') {\n\t       return new AstLiteral(num1.number - num2.number);\n\t      }\n\t     }\n\t     if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n\t      return num2.arg2;\n\t     }\n\t     return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\n\t    }\n\t    function buildMinOperation(num1, max) {\n\t     if (num1.min >= max) {\n\t      return new AstLiteral(max);\n\t     } else if (num1.max <= max) {\n\t      return num1;\n\t     }\n\t     return new AstMin(num1, max);\n\t    }\n\t    function PostScriptCompiler() {\n\t    }\n\t    PostScriptCompiler.prototype = {\n\t     compile: function PostScriptCompiler_compile(code, domain, range) {\n\t      var stack = [];\n\t      var i, ii;\n\t      var instructions = [];\n\t      var inputSize = domain.length >> 1, outputSize = range.length >> 1;\n\t      var lastRegister = 0;\n\t      var n, j;\n\t      var num1, num2, ast1, ast2, tmpVar, item;\n\t      for (i = 0; i < inputSize; i++) {\n\t       stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n\t      }\n\t      for (i = 0, ii = code.length; i < ii; i++) {\n\t       item = code[i];\n\t       if (typeof item === 'number') {\n\t        stack.push(new AstLiteral(item));\n\t        continue;\n\t       }\n\t       switch (item) {\n\t       case 'add':\n\t        if (stack.length < 2) {\n\t         return null;\n\t        }\n\t        num2 = stack.pop();\n\t        num1 = stack.pop();\n\t        stack.push(buildAddOperation(num1, num2));\n\t        break;\n\t       case 'cvr':\n\t        if (stack.length < 1) {\n\t         return null;\n\t        }\n\t        break;\n\t       case 'mul':\n\t        if (stack.length < 2) {\n\t         return null;\n\t        }\n\t        num2 = stack.pop();\n\t        num1 = stack.pop();\n\t        stack.push(buildMulOperation(num1, num2));\n\t        break;\n\t       case 'sub':\n\t        if (stack.length < 2) {\n\t         return null;\n\t        }\n\t        num2 = stack.pop();\n\t        num1 = stack.pop();\n\t        stack.push(buildSubOperation(num1, num2));\n\t        break;\n\t       case 'exch':\n\t        if (stack.length < 2) {\n\t         return null;\n\t        }\n\t        ast1 = stack.pop();\n\t        ast2 = stack.pop();\n\t        stack.push(ast1, ast2);\n\t        break;\n\t       case 'pop':\n\t        if (stack.length < 1) {\n\t         return null;\n\t        }\n\t        stack.pop();\n\t        break;\n\t       case 'index':\n\t        if (stack.length < 1) {\n\t         return null;\n\t        }\n\t        num1 = stack.pop();\n\t        if (num1.type !== 'literal') {\n\t         return null;\n\t        }\n\t        n = num1.number;\n\t        if (n < 0 || (n | 0) !== n || stack.length < n) {\n\t         return null;\n\t        }\n\t        ast1 = stack[stack.length - n - 1];\n\t        if (ast1.type === 'literal' || ast1.type === 'var') {\n\t         stack.push(ast1);\n\t         break;\n\t        }\n\t        tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n\t        stack[stack.length - n - 1] = tmpVar;\n\t        stack.push(tmpVar);\n\t        instructions.push(new AstVariableDefinition(tmpVar, ast1));\n\t        break;\n\t       case 'dup':\n\t        if (stack.length < 1) {\n\t         return null;\n\t        }\n\t        if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n\t         num1 = stack.pop();\n\t         stack.push(buildMinOperation(num1, code[i + 1]));\n\t         i += 6;\n\t         break;\n\t        }\n\t        ast1 = stack[stack.length - 1];\n\t        if (ast1.type === 'literal' || ast1.type === 'var') {\n\t         stack.push(ast1);\n\t         break;\n\t        }\n\t        tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n\t        stack[stack.length - 1] = tmpVar;\n\t        stack.push(tmpVar);\n\t        instructions.push(new AstVariableDefinition(tmpVar, ast1));\n\t        break;\n\t       case 'roll':\n\t        if (stack.length < 2) {\n\t         return null;\n\t        }\n\t        num2 = stack.pop();\n\t        num1 = stack.pop();\n\t        if (num2.type !== 'literal' || num1.type !== 'literal') {\n\t         return null;\n\t        }\n\t        j = num2.number;\n\t        n = num1.number;\n\t        if (n <= 0 || (n | 0) !== n || (j | 0) !== j || stack.length < n) {\n\t         return null;\n\t        }\n\t        j = (j % n + n) % n;\n\t        if (j === 0) {\n\t         break;\n\t        }\n\t        Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n\t        break;\n\t       default:\n\t        return null;\n\t       }\n\t      }\n\t      if (stack.length !== outputSize) {\n\t       return null;\n\t      }\n\t      var result = [];\n\t      instructions.forEach(function (instruction) {\n\t       var statementBuilder = new ExpressionBuilderVisitor();\n\t       instruction.visit(statementBuilder);\n\t       result.push(statementBuilder.toString());\n\t      });\n\t      stack.forEach(function (expr, i) {\n\t       var statementBuilder = new ExpressionBuilderVisitor();\n\t       expr.visit(statementBuilder);\n\t       var min = range[i * 2], max = range[i * 2 + 1];\n\t       var out = [statementBuilder.toString()];\n\t       if (min > expr.min) {\n\t        out.unshift('Math.max(', min, ', ');\n\t        out.push(')');\n\t       }\n\t       if (max < expr.max) {\n\t        out.unshift('Math.min(', max, ', ');\n\t        out.push(')');\n\t       }\n\t       out.unshift('dest[destOffset + ', i, '] = ');\n\t       out.push(';');\n\t       result.push(out.join(''));\n\t      });\n\t      return result.join('\\n');\n\t     }\n\t    };\n\t    return PostScriptCompiler;\n\t   }();\n\t   exports.isPDFFunction = isPDFFunction;\n\t   exports.PDFFunction = PDFFunction;\n\t   exports.PostScriptEvaluator = PostScriptEvaluator;\n\t   exports.PostScriptCompiler = PostScriptCompiler;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCoreParser = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreStream);\n\t  }(this, function (exports, sharedUtil, corePrimitives, coreStream) {\n\t   var MissingDataException = sharedUtil.MissingDataException;\n\t   var StreamType = sharedUtil.StreamType;\n\t   var assert = sharedUtil.assert;\n\t   var error = sharedUtil.error;\n\t   var info = sharedUtil.info;\n\t   var isArray = sharedUtil.isArray;\n\t   var isInt = sharedUtil.isInt;\n\t   var isNum = sharedUtil.isNum;\n\t   var isString = sharedUtil.isString;\n\t   var warn = sharedUtil.warn;\n\t   var EOF = corePrimitives.EOF;\n\t   var Cmd = corePrimitives.Cmd;\n\t   var Dict = corePrimitives.Dict;\n\t   var Name = corePrimitives.Name;\n\t   var Ref = corePrimitives.Ref;\n\t   var isEOF = corePrimitives.isEOF;\n\t   var isCmd = corePrimitives.isCmd;\n\t   var isDict = corePrimitives.isDict;\n\t   var isName = corePrimitives.isName;\n\t   var Ascii85Stream = coreStream.Ascii85Stream;\n\t   var AsciiHexStream = coreStream.AsciiHexStream;\n\t   var CCITTFaxStream = coreStream.CCITTFaxStream;\n\t   var FlateStream = coreStream.FlateStream;\n\t   var Jbig2Stream = coreStream.Jbig2Stream;\n\t   var JpegStream = coreStream.JpegStream;\n\t   var JpxStream = coreStream.JpxStream;\n\t   var LZWStream = coreStream.LZWStream;\n\t   var NullStream = coreStream.NullStream;\n\t   var PredictorStream = coreStream.PredictorStream;\n\t   var RunLengthStream = coreStream.RunLengthStream;\n\t   var MAX_LENGTH_TO_CACHE = 1000;\n\t   var Parser = function ParserClosure() {\n\t    function Parser(lexer, allowStreams, xref, recoveryMode) {\n\t     this.lexer = lexer;\n\t     this.allowStreams = allowStreams;\n\t     this.xref = xref;\n\t     this.recoveryMode = recoveryMode || false;\n\t     this.imageCache = Object.create(null);\n\t     this.refill();\n\t    }\n\t    Parser.prototype = {\n\t     refill: function Parser_refill() {\n\t      this.buf1 = this.lexer.getObj();\n\t      this.buf2 = this.lexer.getObj();\n\t     },\n\t     shift: function Parser_shift() {\n\t      if (isCmd(this.buf2, 'ID')) {\n\t       this.buf1 = this.buf2;\n\t       this.buf2 = null;\n\t      } else {\n\t       this.buf1 = this.buf2;\n\t       this.buf2 = this.lexer.getObj();\n\t      }\n\t     },\n\t     tryShift: function Parser_tryShift() {\n\t      try {\n\t       this.shift();\n\t       return true;\n\t      } catch (e) {\n\t       if (e instanceof MissingDataException) {\n\t        throw e;\n\t       }\n\t       return false;\n\t      }\n\t     },\n\t     getObj: function Parser_getObj(cipherTransform) {\n\t      var buf1 = this.buf1;\n\t      this.shift();\n\t      if (buf1 instanceof Cmd) {\n\t       switch (buf1.cmd) {\n\t       case 'BI':\n\t        return this.makeInlineImage(cipherTransform);\n\t       case '[':\n\t        var array = [];\n\t        while (!isCmd(this.buf1, ']') && !isEOF(this.buf1)) {\n\t         array.push(this.getObj(cipherTransform));\n\t        }\n\t        if (isEOF(this.buf1)) {\n\t         if (!this.recoveryMode) {\n\t          error('End of file inside array');\n\t         }\n\t         return array;\n\t        }\n\t        this.shift();\n\t        return array;\n\t       case '<<':\n\t        var dict = new Dict(this.xref);\n\t        while (!isCmd(this.buf1, '>>') && !isEOF(this.buf1)) {\n\t         if (!isName(this.buf1)) {\n\t          info('Malformed dictionary: key must be a name object');\n\t          this.shift();\n\t          continue;\n\t         }\n\t         var key = this.buf1.name;\n\t         this.shift();\n\t         if (isEOF(this.buf1)) {\n\t          break;\n\t         }\n\t         dict.set(key, this.getObj(cipherTransform));\n\t        }\n\t        if (isEOF(this.buf1)) {\n\t         if (!this.recoveryMode) {\n\t          error('End of file inside dictionary');\n\t         }\n\t         return dict;\n\t        }\n\t        if (isCmd(this.buf2, 'stream')) {\n\t         return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n\t        }\n\t        this.shift();\n\t        return dict;\n\t       default:\n\t        return buf1;\n\t       }\n\t      }\n\t      if (isInt(buf1)) {\n\t       var num = buf1;\n\t       if (isInt(this.buf1) && isCmd(this.buf2, 'R')) {\n\t        var ref = new Ref(num, this.buf1);\n\t        this.shift();\n\t        this.shift();\n\t        return ref;\n\t       }\n\t       return num;\n\t      }\n\t      if (isString(buf1)) {\n\t       var str = buf1;\n\t       if (cipherTransform) {\n\t        str = cipherTransform.decryptString(str);\n\t       }\n\t       return str;\n\t      }\n\t      return buf1;\n\t     },\n\t     findDefaultInlineStreamEnd: function Parser_findDefaultInlineStreamEnd(stream) {\n\t      var E = 0x45, I = 0x49, SPACE = 0x20, LF = 0xA, CR = 0xD;\n\t      var startPos = stream.pos, state = 0, ch, i, n, followingBytes;\n\t      while ((ch = stream.getByte()) !== -1) {\n\t       if (state === 0) {\n\t        state = ch === E ? 1 : 0;\n\t       } else if (state === 1) {\n\t        state = ch === I ? 2 : 0;\n\t       } else {\n\t        assert(state === 2);\n\t        if (ch === SPACE || ch === LF || ch === CR) {\n\t         n = 5;\n\t         followingBytes = stream.peekBytes(n);\n\t         for (i = 0; i < n; i++) {\n\t          ch = followingBytes[i];\n\t          if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n\t           state = 0;\n\t           break;\n\t          }\n\t         }\n\t         if (state === 2) {\n\t          break;\n\t         }\n\t        } else\n\t         {\n\t          state = 0;\n\t         }\n\t       }\n\t      }\n\t      return stream.pos - 4 - startPos;\n\t     },\n\t     findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\n\t      var startPos = stream.pos, foundEOI = false, b, markerLength, length;\n\t      while ((b = stream.getByte()) !== -1) {\n\t       if (b !== 0xFF) {\n\t        continue;\n\t       }\n\t       switch (stream.getByte()) {\n\t       case 0x00:\n\t        break;\n\t       case 0xFF:\n\t        stream.skip(-1);\n\t        break;\n\t       case 0xD9:\n\t        foundEOI = true;\n\t        break;\n\t       case 0xC0:\n\t       case 0xC1:\n\t       case 0xC2:\n\t       case 0xC3:\n\t       case 0xC5:\n\t       case 0xC6:\n\t       case 0xC7:\n\t       case 0xC9:\n\t       case 0xCA:\n\t       case 0xCB:\n\t       case 0xCD:\n\t       case 0xCE:\n\t       case 0xCF:\n\t       case 0xC4:\n\t       case 0xCC:\n\t       case 0xDA:\n\t       case 0xDB:\n\t       case 0xDC:\n\t       case 0xDD:\n\t       case 0xDE:\n\t       case 0xDF:\n\t       case 0xE0:\n\t       case 0xE1:\n\t       case 0xE2:\n\t       case 0xE3:\n\t       case 0xE4:\n\t       case 0xE5:\n\t       case 0xE6:\n\t       case 0xE7:\n\t       case 0xE8:\n\t       case 0xE9:\n\t       case 0xEA:\n\t       case 0xEB:\n\t       case 0xEC:\n\t       case 0xED:\n\t       case 0xEE:\n\t       case 0xEF:\n\t       case 0xFE:\n\t        markerLength = stream.getUint16();\n\t        if (markerLength > 2) {\n\t         stream.skip(markerLength - 2);\n\t        } else\n\t         {\n\t          stream.skip(-2);\n\t         }\n\t        break;\n\t       }\n\t       if (foundEOI) {\n\t        break;\n\t       }\n\t      }\n\t      length = stream.pos - startPos;\n\t      if (b === -1) {\n\t       warn('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\n\t       stream.skip(-length);\n\t       return this.findDefaultInlineStreamEnd(stream);\n\t      }\n\t      this.inlineStreamSkipEI(stream);\n\t      return length;\n\t     },\n\t     findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n\t      var TILDE = 0x7E, GT = 0x3E;\n\t      var startPos = stream.pos, ch, length;\n\t      while ((ch = stream.getByte()) !== -1) {\n\t       if (ch === TILDE && stream.peekByte() === GT) {\n\t        stream.skip();\n\t        break;\n\t       }\n\t      }\n\t      length = stream.pos - startPos;\n\t      if (ch === -1) {\n\t       warn('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n\t       stream.skip(-length);\n\t       return this.findDefaultInlineStreamEnd(stream);\n\t      }\n\t      this.inlineStreamSkipEI(stream);\n\t      return length;\n\t     },\n\t     findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n\t      var GT = 0x3E;\n\t      var startPos = stream.pos, ch, length;\n\t      while ((ch = stream.getByte()) !== -1) {\n\t       if (ch === GT) {\n\t        break;\n\t       }\n\t      }\n\t      length = stream.pos - startPos;\n\t      if (ch === -1) {\n\t       warn('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n\t       stream.skip(-length);\n\t       return this.findDefaultInlineStreamEnd(stream);\n\t      }\n\t      this.inlineStreamSkipEI(stream);\n\t      return length;\n\t     },\n\t     inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n\t      var E = 0x45, I = 0x49;\n\t      var state = 0, ch;\n\t      while ((ch = stream.getByte()) !== -1) {\n\t       if (state === 0) {\n\t        state = ch === E ? 1 : 0;\n\t       } else if (state === 1) {\n\t        state = ch === I ? 2 : 0;\n\t       } else if (state === 2) {\n\t        break;\n\t       }\n\t      }\n\t     },\n\t     makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n\t      var lexer = this.lexer;\n\t      var stream = lexer.stream;\n\t      var dict = new Dict(this.xref);\n\t      while (!isCmd(this.buf1, 'ID') && !isEOF(this.buf1)) {\n\t       if (!isName(this.buf1)) {\n\t        error('Dictionary key must be a name object');\n\t       }\n\t       var key = this.buf1.name;\n\t       this.shift();\n\t       if (isEOF(this.buf1)) {\n\t        break;\n\t       }\n\t       dict.set(key, this.getObj(cipherTransform));\n\t      }\n\t      var filter = dict.get('Filter', 'F'), filterName;\n\t      if (isName(filter)) {\n\t       filterName = filter.name;\n\t      } else if (isArray(filter)) {\n\t       var filterZero = this.xref.fetchIfRef(filter[0]);\n\t       if (isName(filterZero)) {\n\t        filterName = filterZero.name;\n\t       }\n\t      }\n\t      var startPos = stream.pos, length, i, ii;\n\t      if (filterName === 'DCTDecode' || filterName === 'DCT') {\n\t       length = this.findDCTDecodeInlineStreamEnd(stream);\n\t      } else if (filterName === 'ASCII85Decide' || filterName === 'A85') {\n\t       length = this.findASCII85DecodeInlineStreamEnd(stream);\n\t      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n\t       length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n\t      } else {\n\t       length = this.findDefaultInlineStreamEnd(stream);\n\t      }\n\t      var imageStream = stream.makeSubStream(startPos, length, dict);\n\t      var adler32;\n\t      if (length < MAX_LENGTH_TO_CACHE) {\n\t       var imageBytes = imageStream.getBytes();\n\t       imageStream.reset();\n\t       var a = 1;\n\t       var b = 0;\n\t       for (i = 0, ii = imageBytes.length; i < ii; ++i) {\n\t        a += imageBytes[i] & 0xff;\n\t        b += a;\n\t       }\n\t       adler32 = b % 65521 << 16 | a % 65521;\n\t       if (this.imageCache.adler32 === adler32) {\n\t        this.buf2 = Cmd.get('EI');\n\t        this.shift();\n\t        this.imageCache[adler32].reset();\n\t        return this.imageCache[adler32];\n\t       }\n\t      }\n\t      if (cipherTransform) {\n\t       imageStream = cipherTransform.createStream(imageStream, length);\n\t      }\n\t      imageStream = this.filter(imageStream, dict, length);\n\t      imageStream.dict = dict;\n\t      if (adler32 !== undefined) {\n\t       imageStream.cacheKey = 'inline_' + length + '_' + adler32;\n\t       this.imageCache[adler32] = imageStream;\n\t      }\n\t      this.buf2 = Cmd.get('EI');\n\t      this.shift();\n\t      return imageStream;\n\t     },\n\t     makeStream: function Parser_makeStream(dict, cipherTransform) {\n\t      var lexer = this.lexer;\n\t      var stream = lexer.stream;\n\t      lexer.skipToNextLine();\n\t      var pos = stream.pos - 1;\n\t      var length = dict.get('Length');\n\t      if (!isInt(length)) {\n\t       info('Bad ' + length + ' attribute in stream');\n\t       length = 0;\n\t      }\n\t      stream.pos = pos + length;\n\t      lexer.nextChar();\n\t      if (this.tryShift() && isCmd(this.buf2, 'endstream')) {\n\t       this.shift();\n\t      } else\n\t       {\n\t        stream.pos = pos;\n\t        var SCAN_BLOCK_SIZE = 2048;\n\t        var ENDSTREAM_SIGNATURE_LENGTH = 9;\n\t        var ENDSTREAM_SIGNATURE = [\n\t         0x65,\n\t         0x6E,\n\t         0x64,\n\t         0x73,\n\t         0x74,\n\t         0x72,\n\t         0x65,\n\t         0x61,\n\t         0x6D\n\t        ];\n\t        var skipped = 0, found = false, i, j;\n\t        while (stream.pos < stream.end) {\n\t         var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n\t         var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n\t         if (scanLength <= 0) {\n\t          break;\n\t         }\n\t         found = false;\n\t         i = 0;\n\t         while (i < scanLength) {\n\t          j = 0;\n\t          while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\n\t           j++;\n\t          }\n\t          if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n\t           found = true;\n\t           break;\n\t          }\n\t          i++;\n\t         }\n\t         if (found) {\n\t          skipped += i;\n\t          stream.pos += i;\n\t          break;\n\t         }\n\t         skipped += scanLength;\n\t         stream.pos += scanLength;\n\t        }\n\t        if (!found) {\n\t         error('Missing endstream');\n\t        }\n\t        length = skipped;\n\t        lexer.nextChar();\n\t        this.shift();\n\t        this.shift();\n\t       }\n\t      this.shift();\n\t      stream = stream.makeSubStream(pos, length, dict);\n\t      if (cipherTransform) {\n\t       stream = cipherTransform.createStream(stream, length);\n\t      }\n\t      stream = this.filter(stream, dict, length);\n\t      stream.dict = dict;\n\t      return stream;\n\t     },\n\t     filter: function Parser_filter(stream, dict, length) {\n\t      var filter = dict.get('Filter', 'F');\n\t      var params = dict.get('DecodeParms', 'DP');\n\t      if (isName(filter)) {\n\t       if (isArray(params)) {\n\t        params = this.xref.fetchIfRef(params[0]);\n\t       }\n\t       return this.makeFilter(stream, filter.name, length, params);\n\t      }\n\t      var maybeLength = length;\n\t      if (isArray(filter)) {\n\t       var filterArray = filter;\n\t       var paramsArray = params;\n\t       for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n\t        filter = this.xref.fetchIfRef(filterArray[i]);\n\t        if (!isName(filter)) {\n\t         error('Bad filter name: ' + filter);\n\t        }\n\t        params = null;\n\t        if (isArray(paramsArray) && i in paramsArray) {\n\t         params = this.xref.fetchIfRef(paramsArray[i]);\n\t        }\n\t        stream = this.makeFilter(stream, filter.name, maybeLength, params);\n\t        maybeLength = null;\n\t       }\n\t      }\n\t      return stream;\n\t     },\n\t     makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n\t      if (maybeLength === 0) {\n\t       warn('Empty \"' + name + '\" stream.');\n\t       return new NullStream(stream);\n\t      }\n\t      try {\n\t       var xrefStreamStats = this.xref.stats.streamTypes;\n\t       if (name === 'FlateDecode' || name === 'Fl') {\n\t        xrefStreamStats[StreamType.FLATE] = true;\n\t        if (params) {\n\t         return new PredictorStream(new FlateStream(stream, maybeLength), maybeLength, params);\n\t        }\n\t        return new FlateStream(stream, maybeLength);\n\t       }\n\t       if (name === 'LZWDecode' || name === 'LZW') {\n\t        xrefStreamStats[StreamType.LZW] = true;\n\t        var earlyChange = 1;\n\t        if (params) {\n\t         if (params.has('EarlyChange')) {\n\t          earlyChange = params.get('EarlyChange');\n\t         }\n\t         return new PredictorStream(new LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n\t        }\n\t        return new LZWStream(stream, maybeLength, earlyChange);\n\t       }\n\t       if (name === 'DCTDecode' || name === 'DCT') {\n\t        xrefStreamStats[StreamType.DCT] = true;\n\t        return new JpegStream(stream, maybeLength, stream.dict, params);\n\t       }\n\t       if (name === 'JPXDecode' || name === 'JPX') {\n\t        xrefStreamStats[StreamType.JPX] = true;\n\t        return new JpxStream(stream, maybeLength, stream.dict, params);\n\t       }\n\t       if (name === 'ASCII85Decode' || name === 'A85') {\n\t        xrefStreamStats[StreamType.A85] = true;\n\t        return new Ascii85Stream(stream, maybeLength);\n\t       }\n\t       if (name === 'ASCIIHexDecode' || name === 'AHx') {\n\t        xrefStreamStats[StreamType.AHX] = true;\n\t        return new AsciiHexStream(stream, maybeLength);\n\t       }\n\t       if (name === 'CCITTFaxDecode' || name === 'CCF') {\n\t        xrefStreamStats[StreamType.CCF] = true;\n\t        return new CCITTFaxStream(stream, maybeLength, params);\n\t       }\n\t       if (name === 'RunLengthDecode' || name === 'RL') {\n\t        xrefStreamStats[StreamType.RL] = true;\n\t        return new RunLengthStream(stream, maybeLength);\n\t       }\n\t       if (name === 'JBIG2Decode') {\n\t        xrefStreamStats[StreamType.JBIG] = true;\n\t        return new Jbig2Stream(stream, maybeLength, stream.dict, params);\n\t       }\n\t       warn('filter \"' + name + '\" not supported yet');\n\t       return stream;\n\t      } catch (ex) {\n\t       if (ex instanceof MissingDataException) {\n\t        throw ex;\n\t       }\n\t       warn('Invalid stream: \\\"' + ex + '\\\"');\n\t       return new NullStream(stream);\n\t      }\n\t     }\n\t    };\n\t    return Parser;\n\t   }();\n\t   var Lexer = function LexerClosure() {\n\t    function Lexer(stream, knownCommands) {\n\t     this.stream = stream;\n\t     this.nextChar();\n\t     this.strBuf = [];\n\t     this.knownCommands = knownCommands;\n\t    }\n\t    var specialChars = [\n\t     1,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     1,\n\t     1,\n\t     0,\n\t     1,\n\t     1,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     1,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     2,\n\t     0,\n\t     0,\n\t     2,\n\t     2,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     2,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     2,\n\t     0,\n\t     2,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     2,\n\t     0,\n\t     2,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     2,\n\t     0,\n\t     2,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0,\n\t     0\n\t    ];\n\t    function toHexDigit(ch) {\n\t     if (ch >= 0x30 && ch <= 0x39) {\n\t      return ch & 0x0F;\n\t     }\n\t     if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n\t      return (ch & 0x0F) + 9;\n\t     }\n\t     return -1;\n\t    }\n\t    Lexer.prototype = {\n\t     nextChar: function Lexer_nextChar() {\n\t      return this.currentChar = this.stream.getByte();\n\t     },\n\t     peekChar: function Lexer_peekChar() {\n\t      return this.stream.peekByte();\n\t     },\n\t     getNumber: function Lexer_getNumber() {\n\t      var ch = this.currentChar;\n\t      var eNotation = false;\n\t      var divideBy = 0;\n\t      var sign = 1;\n\t      if (ch === 0x2D) {\n\t       sign = -1;\n\t       ch = this.nextChar();\n\t       if (ch === 0x2D) {\n\t        ch = this.nextChar();\n\t       }\n\t      } else if (ch === 0x2B) {\n\t       ch = this.nextChar();\n\t      }\n\t      if (ch === 0x2E) {\n\t       divideBy = 10;\n\t       ch = this.nextChar();\n\t      }\n\t      if (ch < 0x30 || ch > 0x39) {\n\t       error('Invalid number: ' + String.fromCharCode(ch));\n\t       return 0;\n\t      }\n\t      var baseValue = ch - 0x30;\n\t      var powerValue = 0;\n\t      var powerValueSign = 1;\n\t      while ((ch = this.nextChar()) >= 0) {\n\t       if (0x30 <= ch && ch <= 0x39) {\n\t        var currentDigit = ch - 0x30;\n\t        if (eNotation) {\n\t         powerValue = powerValue * 10 + currentDigit;\n\t        } else {\n\t         if (divideBy !== 0) {\n\t          divideBy *= 10;\n\t         }\n\t         baseValue = baseValue * 10 + currentDigit;\n\t        }\n\t       } else if (ch === 0x2E) {\n\t        if (divideBy === 0) {\n\t         divideBy = 1;\n\t        } else {\n\t         break;\n\t        }\n\t       } else if (ch === 0x2D) {\n\t        warn('Badly formatted number');\n\t       } else if (ch === 0x45 || ch === 0x65) {\n\t        ch = this.peekChar();\n\t        if (ch === 0x2B || ch === 0x2D) {\n\t         powerValueSign = ch === 0x2D ? -1 : 1;\n\t         this.nextChar();\n\t        } else if (ch < 0x30 || ch > 0x39) {\n\t         break;\n\t        }\n\t        eNotation = true;\n\t       } else {\n\t        break;\n\t       }\n\t      }\n\t      if (divideBy !== 0) {\n\t       baseValue /= divideBy;\n\t      }\n\t      if (eNotation) {\n\t       baseValue *= Math.pow(10, powerValueSign * powerValue);\n\t      }\n\t      return sign * baseValue;\n\t     },\n\t     getString: function Lexer_getString() {\n\t      var numParen = 1;\n\t      var done = false;\n\t      var strBuf = this.strBuf;\n\t      strBuf.length = 0;\n\t      var ch = this.nextChar();\n\t      while (true) {\n\t       var charBuffered = false;\n\t       switch (ch | 0) {\n\t       case -1:\n\t        warn('Unterminated string');\n\t        done = true;\n\t        break;\n\t       case 0x28:\n\t        ++numParen;\n\t        strBuf.push('(');\n\t        break;\n\t       case 0x29:\n\t        if (--numParen === 0) {\n\t         this.nextChar();\n\t         done = true;\n\t        } else {\n\t         strBuf.push(')');\n\t        }\n\t        break;\n\t       case 0x5C:\n\t        ch = this.nextChar();\n\t        switch (ch) {\n\t        case -1:\n\t         warn('Unterminated string');\n\t         done = true;\n\t         break;\n\t        case 0x6E:\n\t         strBuf.push('\\n');\n\t         break;\n\t        case 0x72:\n\t         strBuf.push('\\r');\n\t         break;\n\t        case 0x74:\n\t         strBuf.push('\\t');\n\t         break;\n\t        case 0x62:\n\t         strBuf.push('\\b');\n\t         break;\n\t        case 0x66:\n\t         strBuf.push('\\f');\n\t         break;\n\t        case 0x5C:\n\t        case 0x28:\n\t        case 0x29:\n\t         strBuf.push(String.fromCharCode(ch));\n\t         break;\n\t        case 0x30:\n\t        case 0x31:\n\t        case 0x32:\n\t        case 0x33:\n\t        case 0x34:\n\t        case 0x35:\n\t        case 0x36:\n\t        case 0x37:\n\t         var x = ch & 0x0F;\n\t         ch = this.nextChar();\n\t         charBuffered = true;\n\t         if (ch >= 0x30 && ch <= 0x37) {\n\t          x = (x << 3) + (ch & 0x0F);\n\t          ch = this.nextChar();\n\t          if (ch >= 0x30 && ch <= 0x37) {\n\t           charBuffered = false;\n\t           x = (x << 3) + (ch & 0x0F);\n\t          }\n\t         }\n\t         strBuf.push(String.fromCharCode(x));\n\t         break;\n\t        case 0x0D:\n\t         if (this.peekChar() === 0x0A) {\n\t          this.nextChar();\n\t         }\n\t         break;\n\t        case 0x0A:\n\t         break;\n\t        default:\n\t         strBuf.push(String.fromCharCode(ch));\n\t         break;\n\t        }\n\t        break;\n\t       default:\n\t        strBuf.push(String.fromCharCode(ch));\n\t        break;\n\t       }\n\t       if (done) {\n\t        break;\n\t       }\n\t       if (!charBuffered) {\n\t        ch = this.nextChar();\n\t       }\n\t      }\n\t      return strBuf.join('');\n\t     },\n\t     getName: function Lexer_getName() {\n\t      var ch, previousCh;\n\t      var strBuf = this.strBuf;\n\t      strBuf.length = 0;\n\t      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n\t       if (ch === 0x23) {\n\t        ch = this.nextChar();\n\t        if (specialChars[ch]) {\n\t         warn('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\n\t         strBuf.push('#');\n\t         break;\n\t        }\n\t        var x = toHexDigit(ch);\n\t        if (x !== -1) {\n\t         previousCh = ch;\n\t         ch = this.nextChar();\n\t         var x2 = toHexDigit(ch);\n\t         if (x2 === -1) {\n\t          warn('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\n\t          strBuf.push('#', String.fromCharCode(previousCh));\n\t          if (specialChars[ch]) {\n\t           break;\n\t          }\n\t          strBuf.push(String.fromCharCode(ch));\n\t          continue;\n\t         }\n\t         strBuf.push(String.fromCharCode(x << 4 | x2));\n\t        } else {\n\t         strBuf.push('#', String.fromCharCode(ch));\n\t        }\n\t       } else {\n\t        strBuf.push(String.fromCharCode(ch));\n\t       }\n\t      }\n\t      if (strBuf.length > 127) {\n\t       warn('name token is longer than allowed by the spec: ' + strBuf.length);\n\t      }\n\t      return Name.get(strBuf.join(''));\n\t     },\n\t     getHexString: function Lexer_getHexString() {\n\t      var strBuf = this.strBuf;\n\t      strBuf.length = 0;\n\t      var ch = this.currentChar;\n\t      var isFirstHex = true;\n\t      var firstDigit;\n\t      var secondDigit;\n\t      while (true) {\n\t       if (ch < 0) {\n\t        warn('Unterminated hex string');\n\t        break;\n\t       } else if (ch === 0x3E) {\n\t        this.nextChar();\n\t        break;\n\t       } else if (specialChars[ch] === 1) {\n\t        ch = this.nextChar();\n\t        continue;\n\t       } else {\n\t        if (isFirstHex) {\n\t         firstDigit = toHexDigit(ch);\n\t         if (firstDigit === -1) {\n\t          warn('Ignoring invalid character \"' + ch + '\" in hex string');\n\t          ch = this.nextChar();\n\t          continue;\n\t         }\n\t        } else {\n\t         secondDigit = toHexDigit(ch);\n\t         if (secondDigit === -1) {\n\t          warn('Ignoring invalid character \"' + ch + '\" in hex string');\n\t          ch = this.nextChar();\n\t          continue;\n\t         }\n\t         strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n\t        }\n\t        isFirstHex = !isFirstHex;\n\t        ch = this.nextChar();\n\t       }\n\t      }\n\t      return strBuf.join('');\n\t     },\n\t     getObj: function Lexer_getObj() {\n\t      var comment = false;\n\t      var ch = this.currentChar;\n\t      while (true) {\n\t       if (ch < 0) {\n\t        return EOF;\n\t       }\n\t       if (comment) {\n\t        if (ch === 0x0A || ch === 0x0D) {\n\t         comment = false;\n\t        }\n\t       } else if (ch === 0x25) {\n\t        comment = true;\n\t       } else if (specialChars[ch] !== 1) {\n\t        break;\n\t       }\n\t       ch = this.nextChar();\n\t      }\n\t      switch (ch | 0) {\n\t      case 0x30:\n\t      case 0x31:\n\t      case 0x32:\n\t      case 0x33:\n\t      case 0x34:\n\t      case 0x35:\n\t      case 0x36:\n\t      case 0x37:\n\t      case 0x38:\n\t      case 0x39:\n\t      case 0x2B:\n\t      case 0x2D:\n\t      case 0x2E:\n\t       return this.getNumber();\n\t      case 0x28:\n\t       return this.getString();\n\t      case 0x2F:\n\t       return this.getName();\n\t      case 0x5B:\n\t       this.nextChar();\n\t       return Cmd.get('[');\n\t      case 0x5D:\n\t       this.nextChar();\n\t       return Cmd.get(']');\n\t      case 0x3C:\n\t       ch = this.nextChar();\n\t       if (ch === 0x3C) {\n\t        this.nextChar();\n\t        return Cmd.get('<<');\n\t       }\n\t       return this.getHexString();\n\t      case 0x3E:\n\t       ch = this.nextChar();\n\t       if (ch === 0x3E) {\n\t        this.nextChar();\n\t        return Cmd.get('>>');\n\t       }\n\t       return Cmd.get('>');\n\t      case 0x7B:\n\t       this.nextChar();\n\t       return Cmd.get('{');\n\t      case 0x7D:\n\t       this.nextChar();\n\t       return Cmd.get('}');\n\t      case 0x29:\n\t       error('Illegal character: ' + ch);\n\t       break;\n\t      }\n\t      var str = String.fromCharCode(ch);\n\t      var knownCommands = this.knownCommands;\n\t      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n\t      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n\t       var possibleCommand = str + String.fromCharCode(ch);\n\t       if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n\t        break;\n\t       }\n\t       if (str.length === 128) {\n\t        error('Command token too long: ' + str.length);\n\t       }\n\t       str = possibleCommand;\n\t       knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n\t      }\n\t      if (str === 'true') {\n\t       return true;\n\t      }\n\t      if (str === 'false') {\n\t       return false;\n\t      }\n\t      if (str === 'null') {\n\t       return null;\n\t      }\n\t      return Cmd.get(str);\n\t     },\n\t     skipToNextLine: function Lexer_skipToNextLine() {\n\t      var ch = this.currentChar;\n\t      while (ch >= 0) {\n\t       if (ch === 0x0D) {\n\t        ch = this.nextChar();\n\t        if (ch === 0x0A) {\n\t         this.nextChar();\n\t        }\n\t        break;\n\t       } else if (ch === 0x0A) {\n\t        this.nextChar();\n\t        break;\n\t       }\n\t       ch = this.nextChar();\n\t      }\n\t     }\n\t    };\n\t    return Lexer;\n\t   }();\n\t   var Linearization = {\n\t    create: function LinearizationCreate(stream) {\n\t     function getInt(name, allowZeroValue) {\n\t      var obj = linDict.get(name);\n\t      if (isInt(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n\t       return obj;\n\t      }\n\t      throw new Error('The \"' + name + '\" parameter in the linearization ' + 'dictionary is invalid.');\n\t     }\n\t     function getHints() {\n\t      var hints = linDict.get('H'), hintsLength, item;\n\t      if (isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n\t       for (var index = 0; index < hintsLength; index++) {\n\t        if (!(isInt(item = hints[index]) && item > 0)) {\n\t         throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\n\t        }\n\t       }\n\t       return hints;\n\t      }\n\t      throw new Error('Hint array in the linearization dictionary is invalid.');\n\t     }\n\t     var parser = new Parser(new Lexer(stream), false, null);\n\t     var obj1 = parser.getObj();\n\t     var obj2 = parser.getObj();\n\t     var obj3 = parser.getObj();\n\t     var linDict = parser.getObj();\n\t     var obj, length;\n\t     if (!(isInt(obj1) && isInt(obj2) && isCmd(obj3, 'obj') && isDict(linDict) && isNum(obj = linDict.get('Linearized')) && obj > 0)) {\n\t      return null;\n\t     } else if ((length = getInt('L')) !== stream.length) {\n\t      throw new Error('The \"L\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\n\t     }\n\t     return {\n\t      length: length,\n\t      hints: getHints(),\n\t      objectNumberFirst: getInt('O'),\n\t      endFirst: getInt('E'),\n\t      numPages: getInt('N'),\n\t      mainXRefEntriesOffset: getInt('T'),\n\t      pageFirst: linDict.has('P') ? getInt('P', true) : 0\n\t     };\n\t    }\n\t   };\n\t   exports.Lexer = Lexer;\n\t   exports.Linearization = Linearization;\n\t   exports.Parser = Parser;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCoreType1Parser = {}, root.pdfjsSharedUtil, root.pdfjsCoreStream, root.pdfjsCoreEncodings);\n\t  }(this, function (exports, sharedUtil, coreStream, coreEncodings) {\n\t   var warn = sharedUtil.warn;\n\t   var isSpace = sharedUtil.isSpace;\n\t   var Stream = coreStream.Stream;\n\t   var getEncoding = coreEncodings.getEncoding;\n\t   var HINTING_ENABLED = false;\n\t   var Type1CharString = function Type1CharStringClosure() {\n\t    var COMMAND_MAP = {\n\t     'hstem': [1],\n\t     'vstem': [3],\n\t     'vmoveto': [4],\n\t     'rlineto': [5],\n\t     'hlineto': [6],\n\t     'vlineto': [7],\n\t     'rrcurveto': [8],\n\t     'callsubr': [10],\n\t     'flex': [\n\t      12,\n\t      35\n\t     ],\n\t     'drop': [\n\t      12,\n\t      18\n\t     ],\n\t     'endchar': [14],\n\t     'rmoveto': [21],\n\t     'hmoveto': [22],\n\t     'vhcurveto': [30],\n\t     'hvcurveto': [31]\n\t    };\n\t    function Type1CharString() {\n\t     this.width = 0;\n\t     this.lsb = 0;\n\t     this.flexing = false;\n\t     this.output = [];\n\t     this.stack = [];\n\t    }\n\t    Type1CharString.prototype = {\n\t     convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n\t      var count = encoded.length;\n\t      var error = false;\n\t      var wx, sbx, subrNumber;\n\t      for (var i = 0; i < count; i++) {\n\t       var value = encoded[i];\n\t       if (value < 32) {\n\t        if (value === 12) {\n\t         value = (value << 8) + encoded[++i];\n\t        }\n\t        switch (value) {\n\t        case 1:\n\t         if (!HINTING_ENABLED) {\n\t          this.stack = [];\n\t          break;\n\t         }\n\t         error = this.executeCommand(2, COMMAND_MAP.hstem);\n\t         break;\n\t        case 3:\n\t         if (!HINTING_ENABLED) {\n\t          this.stack = [];\n\t          break;\n\t         }\n\t         error = this.executeCommand(2, COMMAND_MAP.vstem);\n\t         break;\n\t        case 4:\n\t         if (this.flexing) {\n\t          if (this.stack.length < 1) {\n\t           error = true;\n\t           break;\n\t          }\n\t          var dy = this.stack.pop();\n\t          this.stack.push(0, dy);\n\t          break;\n\t         }\n\t         error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n\t         break;\n\t        case 5:\n\t         error = this.executeCommand(2, COMMAND_MAP.rlineto);\n\t         break;\n\t        case 6:\n\t         error = this.executeCommand(1, COMMAND_MAP.hlineto);\n\t         break;\n\t        case 7:\n\t         error = this.executeCommand(1, COMMAND_MAP.vlineto);\n\t         break;\n\t        case 8:\n\t         error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n\t         break;\n\t        case 9:\n\t         this.stack = [];\n\t         break;\n\t        case 10:\n\t         if (this.stack.length < 1) {\n\t          error = true;\n\t          break;\n\t         }\n\t         subrNumber = this.stack.pop();\n\t         error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n\t         break;\n\t        case 11:\n\t         return error;\n\t        case 13:\n\t         if (this.stack.length < 2) {\n\t          error = true;\n\t          break;\n\t         }\n\t         wx = this.stack.pop();\n\t         sbx = this.stack.pop();\n\t         this.lsb = sbx;\n\t         this.width = wx;\n\t         this.stack.push(wx, sbx);\n\t         error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n\t         break;\n\t        case 14:\n\t         this.output.push(COMMAND_MAP.endchar[0]);\n\t         break;\n\t        case 21:\n\t         if (this.flexing) {\n\t          break;\n\t         }\n\t         error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n\t         break;\n\t        case 22:\n\t         if (this.flexing) {\n\t          this.stack.push(0);\n\t          break;\n\t         }\n\t         error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n\t         break;\n\t        case 30:\n\t         error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n\t         break;\n\t        case 31:\n\t         error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n\t         break;\n\t        case (12 << 8) + 0:\n\t         this.stack = [];\n\t         break;\n\t        case (12 << 8) + 1:\n\t         if (!HINTING_ENABLED) {\n\t          this.stack = [];\n\t          break;\n\t         }\n\t         error = this.executeCommand(2, COMMAND_MAP.vstem);\n\t         break;\n\t        case (12 << 8) + 2:\n\t         if (!HINTING_ENABLED) {\n\t          this.stack = [];\n\t          break;\n\t         }\n\t         error = this.executeCommand(2, COMMAND_MAP.hstem);\n\t         break;\n\t        case (12 << 8) + 6:\n\t         if (seacAnalysisEnabled) {\n\t          this.seac = this.stack.splice(-4, 4);\n\t          error = this.executeCommand(0, COMMAND_MAP.endchar);\n\t         } else {\n\t          error = this.executeCommand(4, COMMAND_MAP.endchar);\n\t         }\n\t         break;\n\t        case (12 << 8) + 7:\n\t         if (this.stack.length < 4) {\n\t          error = true;\n\t          break;\n\t         }\n\t         var wy = this.stack.pop();\n\t         wx = this.stack.pop();\n\t         var sby = this.stack.pop();\n\t         sbx = this.stack.pop();\n\t         this.lsb = sbx;\n\t         this.width = wx;\n\t         this.stack.push(wx, sbx, sby);\n\t         error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n\t         break;\n\t        case (12 << 8) + 12:\n\t         if (this.stack.length < 2) {\n\t          error = true;\n\t          break;\n\t         }\n\t         var num2 = this.stack.pop();\n\t         var num1 = this.stack.pop();\n\t         this.stack.push(num1 / num2);\n\t         break;\n\t        case (12 << 8) + 16:\n\t         if (this.stack.length < 2) {\n\t          error = true;\n\t          break;\n\t         }\n\t         subrNumber = this.stack.pop();\n\t         var numArgs = this.stack.pop();\n\t         if (subrNumber === 0 && numArgs === 3) {\n\t          var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n\t          this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n\t          error = this.executeCommand(13, COMMAND_MAP.flex, true);\n\t          this.flexing = false;\n\t          this.stack.push(flexArgs[15], flexArgs[16]);\n\t         } else if (subrNumber === 1 && numArgs === 0) {\n\t          this.flexing = true;\n\t         }\n\t         break;\n\t        case (12 << 8) + 17:\n\t         break;\n\t        case (12 << 8) + 33:\n\t         this.stack = [];\n\t         break;\n\t        default:\n\t         warn('Unknown type 1 charstring command of \"' + value + '\"');\n\t         break;\n\t        }\n\t        if (error) {\n\t         break;\n\t        }\n\t        continue;\n\t       } else if (value <= 246) {\n\t        value = value - 139;\n\t       } else if (value <= 250) {\n\t        value = (value - 247) * 256 + encoded[++i] + 108;\n\t       } else if (value <= 254) {\n\t        value = -((value - 251) * 256) - encoded[++i] - 108;\n\t       } else {\n\t        value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n\t       }\n\t       this.stack.push(value);\n\t      }\n\t      return error;\n\t     },\n\t     executeCommand: function (howManyArgs, command, keepStack) {\n\t      var stackLength = this.stack.length;\n\t      if (howManyArgs > stackLength) {\n\t       return true;\n\t      }\n\t      var start = stackLength - howManyArgs;\n\t      for (var i = start; i < stackLength; i++) {\n\t       var value = this.stack[i];\n\t       if (value === (value | 0)) {\n\t        this.output.push(28, value >> 8 & 0xff, value & 0xff);\n\t       } else {\n\t        value = 65536 * value | 0;\n\t        this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\n\t       }\n\t      }\n\t      this.output.push.apply(this.output, command);\n\t      if (keepStack) {\n\t       this.stack.splice(start, howManyArgs);\n\t      } else {\n\t       this.stack.length = 0;\n\t      }\n\t      return false;\n\t     }\n\t    };\n\t    return Type1CharString;\n\t   }();\n\t   var Type1Parser = function Type1ParserClosure() {\n\t    var EEXEC_ENCRYPT_KEY = 55665;\n\t    var CHAR_STRS_ENCRYPT_KEY = 4330;\n\t    function isHexDigit(code) {\n\t     return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n\t    }\n\t    function decrypt(data, key, discardNumber) {\n\t     if (discardNumber >= data.length) {\n\t      return new Uint8Array(0);\n\t     }\n\t     var r = key | 0, c1 = 52845, c2 = 22719, i, j;\n\t     for (i = 0; i < discardNumber; i++) {\n\t      r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n\t     }\n\t     var count = data.length - discardNumber;\n\t     var decrypted = new Uint8Array(count);\n\t     for (i = discardNumber, j = 0; j < count; i++, j++) {\n\t      var value = data[i];\n\t      decrypted[j] = value ^ r >> 8;\n\t      r = (value + r) * c1 + c2 & (1 << 16) - 1;\n\t     }\n\t     return decrypted;\n\t    }\n\t    function decryptAscii(data, key, discardNumber) {\n\t     var r = key | 0, c1 = 52845, c2 = 22719;\n\t     var count = data.length, maybeLength = count >>> 1;\n\t     var decrypted = new Uint8Array(maybeLength);\n\t     var i, j;\n\t     for (i = 0, j = 0; i < count; i++) {\n\t      var digit1 = data[i];\n\t      if (!isHexDigit(digit1)) {\n\t       continue;\n\t      }\n\t      i++;\n\t      var digit2;\n\t      while (i < count && !isHexDigit(digit2 = data[i])) {\n\t       i++;\n\t      }\n\t      if (i < count) {\n\t       var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n\t       decrypted[j++] = value ^ r >> 8;\n\t       r = (value + r) * c1 + c2 & (1 << 16) - 1;\n\t      }\n\t     }\n\t     return Array.prototype.slice.call(decrypted, discardNumber, j);\n\t    }\n\t    function isSpecial(c) {\n\t     return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\n\t    }\n\t    function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n\t     if (encrypted) {\n\t      var data = stream.getBytes();\n\t      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\n\t      stream = new Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n\t     }\n\t     this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n\t     this.stream = stream;\n\t     this.nextChar();\n\t    }\n\t    Type1Parser.prototype = {\n\t     readNumberArray: function Type1Parser_readNumberArray() {\n\t      this.getToken();\n\t      var array = [];\n\t      while (true) {\n\t       var token = this.getToken();\n\t       if (token === null || token === ']' || token === '}') {\n\t        break;\n\t       }\n\t       array.push(parseFloat(token || 0));\n\t      }\n\t      return array;\n\t     },\n\t     readNumber: function Type1Parser_readNumber() {\n\t      var token = this.getToken();\n\t      return parseFloat(token || 0);\n\t     },\n\t     readInt: function Type1Parser_readInt() {\n\t      var token = this.getToken();\n\t      return parseInt(token || 0, 10) | 0;\n\t     },\n\t     readBoolean: function Type1Parser_readBoolean() {\n\t      var token = this.getToken();\n\t      return token === 'true' ? 1 : 0;\n\t     },\n\t     nextChar: function Type1_nextChar() {\n\t      return this.currentChar = this.stream.getByte();\n\t     },\n\t     getToken: function Type1Parser_getToken() {\n\t      var comment = false;\n\t      var ch = this.currentChar;\n\t      while (true) {\n\t       if (ch === -1) {\n\t        return null;\n\t       }\n\t       if (comment) {\n\t        if (ch === 0x0A || ch === 0x0D) {\n\t         comment = false;\n\t        }\n\t       } else if (ch === 0x25) {\n\t        comment = true;\n\t       } else if (!isSpace(ch)) {\n\t        break;\n\t       }\n\t       ch = this.nextChar();\n\t      }\n\t      if (isSpecial(ch)) {\n\t       this.nextChar();\n\t       return String.fromCharCode(ch);\n\t      }\n\t      var token = '';\n\t      do {\n\t       token += String.fromCharCode(ch);\n\t       ch = this.nextChar();\n\t      } while (ch >= 0 && !isSpace(ch) && !isSpecial(ch));\n\t      return token;\n\t     },\n\t     extractFontProgram: function Type1Parser_extractFontProgram() {\n\t      var stream = this.stream;\n\t      var subrs = [], charstrings = [];\n\t      var privateData = Object.create(null);\n\t      privateData['lenIV'] = 4;\n\t      var program = {\n\t       subrs: [],\n\t       charstrings: [],\n\t       properties: { 'privateData': privateData }\n\t      };\n\t      var token, length, data, lenIV, encoded;\n\t      while ((token = this.getToken()) !== null) {\n\t       if (token !== '/') {\n\t        continue;\n\t       }\n\t       token = this.getToken();\n\t       switch (token) {\n\t       case 'CharStrings':\n\t        this.getToken();\n\t        this.getToken();\n\t        this.getToken();\n\t        this.getToken();\n\t        while (true) {\n\t         token = this.getToken();\n\t         if (token === null || token === 'end') {\n\t          break;\n\t         }\n\t         if (token !== '/') {\n\t          continue;\n\t         }\n\t         var glyph = this.getToken();\n\t         length = this.readInt();\n\t         this.getToken();\n\t         data = stream.makeSubStream(stream.pos, length);\n\t         lenIV = program.properties.privateData['lenIV'];\n\t         encoded = decrypt(data.getBytes(), CHAR_STRS_ENCRYPT_KEY, lenIV);\n\t         stream.skip(length);\n\t         this.nextChar();\n\t         token = this.getToken();\n\t         if (token === 'noaccess') {\n\t          this.getToken();\n\t         }\n\t         charstrings.push({\n\t          glyph: glyph,\n\t          encoded: encoded\n\t         });\n\t        }\n\t        break;\n\t       case 'Subrs':\n\t        var num = this.readInt();\n\t        this.getToken();\n\t        while ((token = this.getToken()) === 'dup') {\n\t         var index = this.readInt();\n\t         length = this.readInt();\n\t         this.getToken();\n\t         data = stream.makeSubStream(stream.pos, length);\n\t         lenIV = program.properties.privateData['lenIV'];\n\t         encoded = decrypt(data.getBytes(), CHAR_STRS_ENCRYPT_KEY, lenIV);\n\t         stream.skip(length);\n\t         this.nextChar();\n\t         token = this.getToken();\n\t         if (token === 'noaccess') {\n\t          this.getToken();\n\t         }\n\t         subrs[index] = encoded;\n\t        }\n\t        break;\n\t       case 'BlueValues':\n\t       case 'OtherBlues':\n\t       case 'FamilyBlues':\n\t       case 'FamilyOtherBlues':\n\t        var blueArray = this.readNumberArray();\n\t        if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n\t         program.properties.privateData[token] = blueArray;\n\t        }\n\t        break;\n\t       case 'StemSnapH':\n\t       case 'StemSnapV':\n\t        program.properties.privateData[token] = this.readNumberArray();\n\t        break;\n\t       case 'StdHW':\n\t       case 'StdVW':\n\t        program.properties.privateData[token] = this.readNumberArray()[0];\n\t        break;\n\t       case 'BlueShift':\n\t       case 'lenIV':\n\t       case 'BlueFuzz':\n\t       case 'BlueScale':\n\t       case 'LanguageGroup':\n\t       case 'ExpansionFactor':\n\t        program.properties.privateData[token] = this.readNumber();\n\t        break;\n\t       case 'ForceBold':\n\t        program.properties.privateData[token] = this.readBoolean();\n\t        break;\n\t       }\n\t      }\n\t      for (var i = 0; i < charstrings.length; i++) {\n\t       glyph = charstrings[i].glyph;\n\t       encoded = charstrings[i].encoded;\n\t       var charString = new Type1CharString();\n\t       var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n\t       var output = charString.output;\n\t       if (error) {\n\t        output = [14];\n\t       }\n\t       program.charstrings.push({\n\t        glyphName: glyph,\n\t        charstring: output,\n\t        width: charString.width,\n\t        lsb: charString.lsb,\n\t        seac: charString.seac\n\t       });\n\t      }\n\t      return program;\n\t     },\n\t     extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n\t      var token;\n\t      while ((token = this.getToken()) !== null) {\n\t       if (token !== '/') {\n\t        continue;\n\t       }\n\t       token = this.getToken();\n\t       switch (token) {\n\t       case 'FontMatrix':\n\t        var matrix = this.readNumberArray();\n\t        properties.fontMatrix = matrix;\n\t        break;\n\t       case 'Encoding':\n\t        var encodingArg = this.getToken();\n\t        var encoding;\n\t        if (!/^\\d+$/.test(encodingArg)) {\n\t         encoding = getEncoding(encodingArg);\n\t        } else {\n\t         encoding = [];\n\t         var size = parseInt(encodingArg, 10) | 0;\n\t         this.getToken();\n\t         for (var j = 0; j < size; j++) {\n\t          token = this.getToken();\n\t          while (token !== 'dup' && token !== 'def') {\n\t           token = this.getToken();\n\t           if (token === null) {\n\t            return;\n\t           }\n\t          }\n\t          if (token === 'def') {\n\t           break;\n\t          }\n\t          var index = this.readInt();\n\t          this.getToken();\n\t          var glyph = this.getToken();\n\t          encoding[index] = glyph;\n\t          this.getToken();\n\t         }\n\t        }\n\t        properties.builtInEncoding = encoding;\n\t        break;\n\t       case 'FontBBox':\n\t        var fontBBox = this.readNumberArray();\n\t        properties.ascent = fontBBox[3];\n\t        properties.descent = fontBBox[1];\n\t        properties.ascentScaled = true;\n\t        break;\n\t       }\n\t      }\n\t     }\n\t    };\n\t    return Type1Parser;\n\t   }();\n\t   exports.Type1Parser = Type1Parser;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCoreCMap = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreStream, root.pdfjsCoreParser);\n\t  }(this, function (exports, sharedUtil, corePrimitives, coreStream, coreParser) {\n\t   var Util = sharedUtil.Util;\n\t   var assert = sharedUtil.assert;\n\t   var warn = sharedUtil.warn;\n\t   var error = sharedUtil.error;\n\t   var isInt = sharedUtil.isInt;\n\t   var isString = sharedUtil.isString;\n\t   var MissingDataException = sharedUtil.MissingDataException;\n\t   var isEOF = corePrimitives.isEOF;\n\t   var isName = corePrimitives.isName;\n\t   var isCmd = corePrimitives.isCmd;\n\t   var isStream = corePrimitives.isStream;\n\t   var StringStream = coreStream.StringStream;\n\t   var Lexer = coreParser.Lexer;\n\t   var BUILT_IN_CMAPS = [\n\t    'Adobe-GB1-UCS2',\n\t    'Adobe-CNS1-UCS2',\n\t    'Adobe-Japan1-UCS2',\n\t    'Adobe-Korea1-UCS2',\n\t    '78-EUC-H',\n\t    '78-EUC-V',\n\t    '78-H',\n\t    '78-RKSJ-H',\n\t    '78-RKSJ-V',\n\t    '78-V',\n\t    '78ms-RKSJ-H',\n\t    '78ms-RKSJ-V',\n\t    '83pv-RKSJ-H',\n\t    '90ms-RKSJ-H',\n\t    '90ms-RKSJ-V',\n\t    '90msp-RKSJ-H',\n\t    '90msp-RKSJ-V',\n\t    '90pv-RKSJ-H',\n\t    '90pv-RKSJ-V',\n\t    'Add-H',\n\t    'Add-RKSJ-H',\n\t    'Add-RKSJ-V',\n\t    'Add-V',\n\t    'Adobe-CNS1-0',\n\t    'Adobe-CNS1-1',\n\t    'Adobe-CNS1-2',\n\t    'Adobe-CNS1-3',\n\t    'Adobe-CNS1-4',\n\t    'Adobe-CNS1-5',\n\t    'Adobe-CNS1-6',\n\t    'Adobe-GB1-0',\n\t    'Adobe-GB1-1',\n\t    'Adobe-GB1-2',\n\t    'Adobe-GB1-3',\n\t    'Adobe-GB1-4',\n\t    'Adobe-GB1-5',\n\t    'Adobe-Japan1-0',\n\t    'Adobe-Japan1-1',\n\t    'Adobe-Japan1-2',\n\t    'Adobe-Japan1-3',\n\t    'Adobe-Japan1-4',\n\t    'Adobe-Japan1-5',\n\t    'Adobe-Japan1-6',\n\t    'Adobe-Korea1-0',\n\t    'Adobe-Korea1-1',\n\t    'Adobe-Korea1-2',\n\t    'B5-H',\n\t    'B5-V',\n\t    'B5pc-H',\n\t    'B5pc-V',\n\t    'CNS-EUC-H',\n\t    'CNS-EUC-V',\n\t    'CNS1-H',\n\t    'CNS1-V',\n\t    'CNS2-H',\n\t    'CNS2-V',\n\t    'ETHK-B5-H',\n\t    'ETHK-B5-V',\n\t    'ETen-B5-H',\n\t    'ETen-B5-V',\n\t    'ETenms-B5-H',\n\t    'ETenms-B5-V',\n\t    'EUC-H',\n\t    'EUC-V',\n\t    'Ext-H',\n\t    'Ext-RKSJ-H',\n\t    'Ext-RKSJ-V',\n\t    'Ext-V',\n\t    'GB-EUC-H',\n\t    'GB-EUC-V',\n\t    'GB-H',\n\t    'GB-V',\n\t    'GBK-EUC-H',\n\t    'GBK-EUC-V',\n\t    'GBK2K-H',\n\t    'GBK2K-V',\n\t    'GBKp-EUC-H',\n\t    'GBKp-EUC-V',\n\t    'GBT-EUC-H',\n\t    'GBT-EUC-V',\n\t    'GBT-H',\n\t    'GBT-V',\n\t    'GBTpc-EUC-H',\n\t    'GBTpc-EUC-V',\n\t    'GBpc-EUC-H',\n\t    'GBpc-EUC-V',\n\t    'H',\n\t    'HKdla-B5-H',\n\t    'HKdla-B5-V',\n\t    'HKdlb-B5-H',\n\t    'HKdlb-B5-V',\n\t    'HKgccs-B5-H',\n\t    'HKgccs-B5-V',\n\t    'HKm314-B5-H',\n\t    'HKm314-B5-V',\n\t    'HKm471-B5-H',\n\t    'HKm471-B5-V',\n\t    'HKscs-B5-H',\n\t    'HKscs-B5-V',\n\t    'Hankaku',\n\t    'Hiragana',\n\t    'KSC-EUC-H',\n\t    'KSC-EUC-V',\n\t    'KSC-H',\n\t    'KSC-Johab-H',\n\t    'KSC-Johab-V',\n\t    'KSC-V',\n\t    'KSCms-UHC-H',\n\t    'KSCms-UHC-HW-H',\n\t    'KSCms-UHC-HW-V',\n\t    'KSCms-UHC-V',\n\t    'KSCpc-EUC-H',\n\t    'KSCpc-EUC-V',\n\t    'Katakana',\n\t    'NWP-H',\n\t    'NWP-V',\n\t    'RKSJ-H',\n\t    'RKSJ-V',\n\t    'Roman',\n\t    'UniCNS-UCS2-H',\n\t    'UniCNS-UCS2-V',\n\t    'UniCNS-UTF16-H',\n\t    'UniCNS-UTF16-V',\n\t    'UniCNS-UTF32-H',\n\t    'UniCNS-UTF32-V',\n\t    'UniCNS-UTF8-H',\n\t    'UniCNS-UTF8-V',\n\t    'UniGB-UCS2-H',\n\t    'UniGB-UCS2-V',\n\t    'UniGB-UTF16-H',\n\t    'UniGB-UTF16-V',\n\t    'UniGB-UTF32-H',\n\t    'UniGB-UTF32-V',\n\t    'UniGB-UTF8-H',\n\t    'UniGB-UTF8-V',\n\t    'UniJIS-UCS2-H',\n\t    'UniJIS-UCS2-HW-H',\n\t    'UniJIS-UCS2-HW-V',\n\t    'UniJIS-UCS2-V',\n\t    'UniJIS-UTF16-H',\n\t    'UniJIS-UTF16-V',\n\t    'UniJIS-UTF32-H',\n\t    'UniJIS-UTF32-V',\n\t    'UniJIS-UTF8-H',\n\t    'UniJIS-UTF8-V',\n\t    'UniJIS2004-UTF16-H',\n\t    'UniJIS2004-UTF16-V',\n\t    'UniJIS2004-UTF32-H',\n\t    'UniJIS2004-UTF32-V',\n\t    'UniJIS2004-UTF8-H',\n\t    'UniJIS2004-UTF8-V',\n\t    'UniJISPro-UCS2-HW-V',\n\t    'UniJISPro-UCS2-V',\n\t    'UniJISPro-UTF8-V',\n\t    'UniJISX0213-UTF32-H',\n\t    'UniJISX0213-UTF32-V',\n\t    'UniJISX02132004-UTF32-H',\n\t    'UniJISX02132004-UTF32-V',\n\t    'UniKS-UCS2-H',\n\t    'UniKS-UCS2-V',\n\t    'UniKS-UTF16-H',\n\t    'UniKS-UTF16-V',\n\t    'UniKS-UTF32-H',\n\t    'UniKS-UTF32-V',\n\t    'UniKS-UTF8-H',\n\t    'UniKS-UTF8-V',\n\t    'V',\n\t    'WP-Symbol'\n\t   ];\n\t   var CMap = function CMapClosure() {\n\t    function CMap(builtInCMap) {\n\t     this.codespaceRanges = [\n\t      [],\n\t      [],\n\t      [],\n\t      []\n\t     ];\n\t     this.numCodespaceRanges = 0;\n\t     this._map = [];\n\t     this.name = '';\n\t     this.vertical = false;\n\t     this.useCMap = null;\n\t     this.builtInCMap = builtInCMap;\n\t    }\n\t    CMap.prototype = {\n\t     addCodespaceRange: function (n, low, high) {\n\t      this.codespaceRanges[n - 1].push(low, high);\n\t      this.numCodespaceRanges++;\n\t     },\n\t     mapCidRange: function (low, high, dstLow) {\n\t      while (low <= high) {\n\t       this._map[low++] = dstLow++;\n\t      }\n\t     },\n\t     mapBfRange: function (low, high, dstLow) {\n\t      var lastByte = dstLow.length - 1;\n\t      while (low <= high) {\n\t       this._map[low++] = dstLow;\n\t       dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n\t      }\n\t     },\n\t     mapBfRangeToArray: function (low, high, array) {\n\t      var i = 0, ii = array.length;\n\t      while (low <= high && i < ii) {\n\t       this._map[low] = array[i++];\n\t       ++low;\n\t      }\n\t     },\n\t     mapOne: function (src, dst) {\n\t      this._map[src] = dst;\n\t     },\n\t     lookup: function (code) {\n\t      return this._map[code];\n\t     },\n\t     contains: function (code) {\n\t      return this._map[code] !== undefined;\n\t     },\n\t     forEach: function (callback) {\n\t      var map = this._map;\n\t      var length = map.length;\n\t      var i;\n\t      if (length <= 0x10000) {\n\t       for (i = 0; i < length; i++) {\n\t        if (map[i] !== undefined) {\n\t         callback(i, map[i]);\n\t        }\n\t       }\n\t      } else {\n\t       for (i in this._map) {\n\t        callback(i, map[i]);\n\t       }\n\t      }\n\t     },\n\t     charCodeOf: function (value) {\n\t      return this._map.indexOf(value);\n\t     },\n\t     getMap: function () {\n\t      return this._map;\n\t     },\n\t     readCharCode: function (str, offset, out) {\n\t      var c = 0;\n\t      var codespaceRanges = this.codespaceRanges;\n\t      var codespaceRangesLen = this.codespaceRanges.length;\n\t      for (var n = 0; n < codespaceRangesLen; n++) {\n\t       c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n\t       var codespaceRange = codespaceRanges[n];\n\t       for (var k = 0, kk = codespaceRange.length; k < kk;) {\n\t        var low = codespaceRange[k++];\n\t        var high = codespaceRange[k++];\n\t        if (c >= low && c <= high) {\n\t         out.charcode = c;\n\t         out.length = n + 1;\n\t         return;\n\t        }\n\t       }\n\t      }\n\t      out.charcode = 0;\n\t      out.length = 1;\n\t     },\n\t     get length() {\n\t      return this._map.length;\n\t     },\n\t     get isIdentityCMap() {\n\t      if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\n\t       return false;\n\t      }\n\t      if (this._map.length !== 0x10000) {\n\t       return false;\n\t      }\n\t      for (var i = 0; i < 0x10000; i++) {\n\t       if (this._map[i] !== i) {\n\t        return false;\n\t       }\n\t      }\n\t      return true;\n\t     }\n\t    };\n\t    return CMap;\n\t   }();\n\t   var IdentityCMap = function IdentityCMapClosure() {\n\t    function IdentityCMap(vertical, n) {\n\t     CMap.call(this);\n\t     this.vertical = vertical;\n\t     this.addCodespaceRange(n, 0, 0xffff);\n\t    }\n\t    Util.inherit(IdentityCMap, CMap, {});\n\t    IdentityCMap.prototype = {\n\t     addCodespaceRange: CMap.prototype.addCodespaceRange,\n\t     mapCidRange: function (low, high, dstLow) {\n\t      error('should not call mapCidRange');\n\t     },\n\t     mapBfRange: function (low, high, dstLow) {\n\t      error('should not call mapBfRange');\n\t     },\n\t     mapBfRangeToArray: function (low, high, array) {\n\t      error('should not call mapBfRangeToArray');\n\t     },\n\t     mapOne: function (src, dst) {\n\t      error('should not call mapCidOne');\n\t     },\n\t     lookup: function (code) {\n\t      return isInt(code) && code <= 0xffff ? code : undefined;\n\t     },\n\t     contains: function (code) {\n\t      return isInt(code) && code <= 0xffff;\n\t     },\n\t     forEach: function (callback) {\n\t      for (var i = 0; i <= 0xffff; i++) {\n\t       callback(i, i);\n\t      }\n\t     },\n\t     charCodeOf: function (value) {\n\t      return isInt(value) && value <= 0xffff ? value : -1;\n\t     },\n\t     getMap: function () {\n\t      var map = new Array(0x10000);\n\t      for (var i = 0; i <= 0xffff; i++) {\n\t       map[i] = i;\n\t      }\n\t      return map;\n\t     },\n\t     readCharCode: CMap.prototype.readCharCode,\n\t     get length() {\n\t      return 0x10000;\n\t     },\n\t     get isIdentityCMap() {\n\t      error('should not access .isIdentityCMap');\n\t     }\n\t    };\n\t    return IdentityCMap;\n\t   }();\n\t   var BinaryCMapReader = function BinaryCMapReaderClosure() {\n\t    function fetchBinaryData(url) {\n\t     return new Promise(function (resolve, reject) {\n\t      var request = new XMLHttpRequest();\n\t      request.open('GET', url, true);\n\t      request.responseType = 'arraybuffer';\n\t      request.onreadystatechange = function () {\n\t       if (request.readyState === XMLHttpRequest.DONE) {\n\t        if (!request.response || request.status !== 200 && request.status !== 0) {\n\t         reject(new Error('Unable to get binary cMap at: ' + url));\n\t        } else {\n\t         resolve(new Uint8Array(request.response));\n\t        }\n\t       }\n\t      };\n\t      request.send(null);\n\t     });\n\t    }\n\t    function hexToInt(a, size) {\n\t     var n = 0;\n\t     for (var i = 0; i <= size; i++) {\n\t      n = n << 8 | a[i];\n\t     }\n\t     return n >>> 0;\n\t    }\n\t    function hexToStr(a, size) {\n\t     if (size === 1) {\n\t      return String.fromCharCode(a[0], a[1]);\n\t     }\n\t     if (size === 3) {\n\t      return String.fromCharCode(a[0], a[1], a[2], a[3]);\n\t     }\n\t     return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n\t    }\n\t    function addHex(a, b, size) {\n\t     var c = 0;\n\t     for (var i = size; i >= 0; i--) {\n\t      c += a[i] + b[i];\n\t      a[i] = c & 255;\n\t      c >>= 8;\n\t     }\n\t    }\n\t    function incHex(a, size) {\n\t     var c = 1;\n\t     for (var i = size; i >= 0 && c > 0; i--) {\n\t      c += a[i];\n\t      a[i] = c & 255;\n\t      c >>= 8;\n\t     }\n\t    }\n\t    var MAX_NUM_SIZE = 16;\n\t    var MAX_ENCODED_NUM_SIZE = 19;\n\t    function BinaryCMapStream(data) {\n\t     this.buffer = data;\n\t     this.pos = 0;\n\t     this.end = data.length;\n\t     this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n\t    }\n\t    BinaryCMapStream.prototype = {\n\t     readByte: function () {\n\t      if (this.pos >= this.end) {\n\t       return -1;\n\t      }\n\t      return this.buffer[this.pos++];\n\t     },\n\t     readNumber: function () {\n\t      var n = 0;\n\t      var last;\n\t      do {\n\t       var b = this.readByte();\n\t       if (b < 0) {\n\t        error('unexpected EOF in bcmap');\n\t       }\n\t       last = !(b & 0x80);\n\t       n = n << 7 | b & 0x7F;\n\t      } while (!last);\n\t      return n;\n\t     },\n\t     readSigned: function () {\n\t      var n = this.readNumber();\n\t      return n & 1 ? ~(n >>> 1) : n >>> 1;\n\t     },\n\t     readHex: function (num, size) {\n\t      num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n\t      this.pos += size + 1;\n\t     },\n\t     readHexNumber: function (num, size) {\n\t      var last;\n\t      var stack = this.tmpBuf, sp = 0;\n\t      do {\n\t       var b = this.readByte();\n\t       if (b < 0) {\n\t        error('unexpected EOF in bcmap');\n\t       }\n\t       last = !(b & 0x80);\n\t       stack[sp++] = b & 0x7F;\n\t      } while (!last);\n\t      var i = size, buffer = 0, bufferSize = 0;\n\t      while (i >= 0) {\n\t       while (bufferSize < 8 && stack.length > 0) {\n\t        buffer = stack[--sp] << bufferSize | buffer;\n\t        bufferSize += 7;\n\t       }\n\t       num[i] = buffer & 255;\n\t       i--;\n\t       buffer >>= 8;\n\t       bufferSize -= 8;\n\t      }\n\t     },\n\t     readHexSigned: function (num, size) {\n\t      this.readHexNumber(num, size);\n\t      var sign = num[size] & 1 ? 255 : 0;\n\t      var c = 0;\n\t      for (var i = 0; i <= size; i++) {\n\t       c = (c & 1) << 8 | num[i];\n\t       num[i] = c >> 1 ^ sign;\n\t      }\n\t     },\n\t     readString: function () {\n\t      var len = this.readNumber();\n\t      var s = '';\n\t      for (var i = 0; i < len; i++) {\n\t       s += String.fromCharCode(this.readNumber());\n\t      }\n\t      return s;\n\t     }\n\t    };\n\t    function processBinaryCMap(url, cMap, extend) {\n\t     return fetchBinaryData(url).then(function (data) {\n\t      var stream = new BinaryCMapStream(data);\n\t      var header = stream.readByte();\n\t      cMap.vertical = !!(header & 1);\n\t      var useCMap = null;\n\t      var start = new Uint8Array(MAX_NUM_SIZE);\n\t      var end = new Uint8Array(MAX_NUM_SIZE);\n\t      var char = new Uint8Array(MAX_NUM_SIZE);\n\t      var charCode = new Uint8Array(MAX_NUM_SIZE);\n\t      var tmp = new Uint8Array(MAX_NUM_SIZE);\n\t      var code;\n\t      var b;\n\t      while ((b = stream.readByte()) >= 0) {\n\t       var type = b >> 5;\n\t       if (type === 7) {\n\t        switch (b & 0x1F) {\n\t        case 0:\n\t         stream.readString();\n\t         break;\n\t        case 1:\n\t         useCMap = stream.readString();\n\t         break;\n\t        }\n\t        continue;\n\t       }\n\t       var sequence = !!(b & 0x10);\n\t       var dataSize = b & 15;\n\t       assert(dataSize + 1 <= MAX_NUM_SIZE);\n\t       var ucs2DataSize = 1;\n\t       var subitemsCount = stream.readNumber();\n\t       var i;\n\t       switch (type) {\n\t       case 0:\n\t        stream.readHex(start, dataSize);\n\t        stream.readHexNumber(end, dataSize);\n\t        addHex(end, start, dataSize);\n\t        cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n\t        for (i = 1; i < subitemsCount; i++) {\n\t         incHex(end, dataSize);\n\t         stream.readHexNumber(start, dataSize);\n\t         addHex(start, end, dataSize);\n\t         stream.readHexNumber(end, dataSize);\n\t         addHex(end, start, dataSize);\n\t         cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n\t        }\n\t        break;\n\t       case 1:\n\t        stream.readHex(start, dataSize);\n\t        stream.readHexNumber(end, dataSize);\n\t        addHex(end, start, dataSize);\n\t        code = stream.readNumber();\n\t        for (i = 1; i < subitemsCount; i++) {\n\t         incHex(end, dataSize);\n\t         stream.readHexNumber(start, dataSize);\n\t         addHex(start, end, dataSize);\n\t         stream.readHexNumber(end, dataSize);\n\t         addHex(end, start, dataSize);\n\t         code = stream.readNumber();\n\t        }\n\t        break;\n\t       case 2:\n\t        stream.readHex(char, dataSize);\n\t        code = stream.readNumber();\n\t        cMap.mapOne(hexToInt(char, dataSize), code);\n\t        for (i = 1; i < subitemsCount; i++) {\n\t         incHex(char, dataSize);\n\t         if (!sequence) {\n\t          stream.readHexNumber(tmp, dataSize);\n\t          addHex(char, tmp, dataSize);\n\t         }\n\t         code = stream.readSigned() + (code + 1);\n\t         cMap.mapOne(hexToInt(char, dataSize), code);\n\t        }\n\t        break;\n\t       case 3:\n\t        stream.readHex(start, dataSize);\n\t        stream.readHexNumber(end, dataSize);\n\t        addHex(end, start, dataSize);\n\t        code = stream.readNumber();\n\t        cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n\t        for (i = 1; i < subitemsCount; i++) {\n\t         incHex(end, dataSize);\n\t         if (!sequence) {\n\t          stream.readHexNumber(start, dataSize);\n\t          addHex(start, end, dataSize);\n\t         } else {\n\t          start.set(end);\n\t         }\n\t         stream.readHexNumber(end, dataSize);\n\t         addHex(end, start, dataSize);\n\t         code = stream.readNumber();\n\t         cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n\t        }\n\t        break;\n\t       case 4:\n\t        stream.readHex(char, ucs2DataSize);\n\t        stream.readHex(charCode, dataSize);\n\t        cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n\t        for (i = 1; i < subitemsCount; i++) {\n\t         incHex(char, ucs2DataSize);\n\t         if (!sequence) {\n\t          stream.readHexNumber(tmp, ucs2DataSize);\n\t          addHex(char, tmp, ucs2DataSize);\n\t         }\n\t         incHex(charCode, dataSize);\n\t         stream.readHexSigned(tmp, dataSize);\n\t         addHex(charCode, tmp, dataSize);\n\t         cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n\t        }\n\t        break;\n\t       case 5:\n\t        stream.readHex(start, ucs2DataSize);\n\t        stream.readHexNumber(end, ucs2DataSize);\n\t        addHex(end, start, ucs2DataSize);\n\t        stream.readHex(charCode, dataSize);\n\t        cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n\t        for (i = 1; i < subitemsCount; i++) {\n\t         incHex(end, ucs2DataSize);\n\t         if (!sequence) {\n\t          stream.readHexNumber(start, ucs2DataSize);\n\t          addHex(start, end, ucs2DataSize);\n\t         } else {\n\t          start.set(end);\n\t         }\n\t         stream.readHexNumber(end, ucs2DataSize);\n\t         addHex(end, start, ucs2DataSize);\n\t         stream.readHex(charCode, dataSize);\n\t         cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n\t        }\n\t        break;\n\t       default:\n\t        error('Unknown type: ' + type);\n\t        break;\n\t       }\n\t      }\n\t      if (useCMap) {\n\t       return extend(useCMap);\n\t      }\n\t      return cMap;\n\t     });\n\t    }\n\t    function BinaryCMapReader() {\n\t    }\n\t    BinaryCMapReader.prototype = { read: processBinaryCMap };\n\t    return BinaryCMapReader;\n\t   }();\n\t   var CMapFactory = function CMapFactoryClosure() {\n\t    function strToInt(str) {\n\t     var a = 0;\n\t     for (var i = 0; i < str.length; i++) {\n\t      a = a << 8 | str.charCodeAt(i);\n\t     }\n\t     return a >>> 0;\n\t    }\n\t    function expectString(obj) {\n\t     if (!isString(obj)) {\n\t      error('Malformed CMap: expected string.');\n\t     }\n\t    }\n\t    function expectInt(obj) {\n\t     if (!isInt(obj)) {\n\t      error('Malformed CMap: expected int.');\n\t     }\n\t    }\n\t    function parseBfChar(cMap, lexer) {\n\t     while (true) {\n\t      var obj = lexer.getObj();\n\t      if (isEOF(obj)) {\n\t       break;\n\t      }\n\t      if (isCmd(obj, 'endbfchar')) {\n\t       return;\n\t      }\n\t      expectString(obj);\n\t      var src = strToInt(obj);\n\t      obj = lexer.getObj();\n\t      expectString(obj);\n\t      var dst = obj;\n\t      cMap.mapOne(src, dst);\n\t     }\n\t    }\n\t    function parseBfRange(cMap, lexer) {\n\t     while (true) {\n\t      var obj = lexer.getObj();\n\t      if (isEOF(obj)) {\n\t       break;\n\t      }\n\t      if (isCmd(obj, 'endbfrange')) {\n\t       return;\n\t      }\n\t      expectString(obj);\n\t      var low = strToInt(obj);\n\t      obj = lexer.getObj();\n\t      expectString(obj);\n\t      var high = strToInt(obj);\n\t      obj = lexer.getObj();\n\t      if (isInt(obj) || isString(obj)) {\n\t       var dstLow = isInt(obj) ? String.fromCharCode(obj) : obj;\n\t       cMap.mapBfRange(low, high, dstLow);\n\t      } else if (isCmd(obj, '[')) {\n\t       obj = lexer.getObj();\n\t       var array = [];\n\t       while (!isCmd(obj, ']') && !isEOF(obj)) {\n\t        array.push(obj);\n\t        obj = lexer.getObj();\n\t       }\n\t       cMap.mapBfRangeToArray(low, high, array);\n\t      } else {\n\t       break;\n\t      }\n\t     }\n\t     error('Invalid bf range.');\n\t    }\n\t    function parseCidChar(cMap, lexer) {\n\t     while (true) {\n\t      var obj = lexer.getObj();\n\t      if (isEOF(obj)) {\n\t       break;\n\t      }\n\t      if (isCmd(obj, 'endcidchar')) {\n\t       return;\n\t      }\n\t      expectString(obj);\n\t      var src = strToInt(obj);\n\t      obj = lexer.getObj();\n\t      expectInt(obj);\n\t      var dst = obj;\n\t      cMap.mapOne(src, dst);\n\t     }\n\t    }\n\t    function parseCidRange(cMap, lexer) {\n\t     while (true) {\n\t      var obj = lexer.getObj();\n\t      if (isEOF(obj)) {\n\t       break;\n\t      }\n\t      if (isCmd(obj, 'endcidrange')) {\n\t       return;\n\t      }\n\t      expectString(obj);\n\t      var low = strToInt(obj);\n\t      obj = lexer.getObj();\n\t      expectString(obj);\n\t      var high = strToInt(obj);\n\t      obj = lexer.getObj();\n\t      expectInt(obj);\n\t      var dstLow = obj;\n\t      cMap.mapCidRange(low, high, dstLow);\n\t     }\n\t    }\n\t    function parseCodespaceRange(cMap, lexer) {\n\t     while (true) {\n\t      var obj = lexer.getObj();\n\t      if (isEOF(obj)) {\n\t       break;\n\t      }\n\t      if (isCmd(obj, 'endcodespacerange')) {\n\t       return;\n\t      }\n\t      if (!isString(obj)) {\n\t       break;\n\t      }\n\t      var low = strToInt(obj);\n\t      obj = lexer.getObj();\n\t      if (!isString(obj)) {\n\t       break;\n\t      }\n\t      var high = strToInt(obj);\n\t      cMap.addCodespaceRange(obj.length, low, high);\n\t     }\n\t     error('Invalid codespace range.');\n\t    }\n\t    function parseWMode(cMap, lexer) {\n\t     var obj = lexer.getObj();\n\t     if (isInt(obj)) {\n\t      cMap.vertical = !!obj;\n\t     }\n\t    }\n\t    function parseCMapName(cMap, lexer) {\n\t     var obj = lexer.getObj();\n\t     if (isName(obj) && isString(obj.name)) {\n\t      cMap.name = obj.name;\n\t     }\n\t    }\n\t    function parseCMap(cMap, lexer, builtInCMapParams, useCMap) {\n\t     var previous;\n\t     var embededUseCMap;\n\t     objLoop:\n\t      while (true) {\n\t       try {\n\t        var obj = lexer.getObj();\n\t        if (isEOF(obj)) {\n\t         break;\n\t        } else if (isName(obj)) {\n\t         if (obj.name === 'WMode') {\n\t          parseWMode(cMap, lexer);\n\t         } else if (obj.name === 'CMapName') {\n\t          parseCMapName(cMap, lexer);\n\t         }\n\t         previous = obj;\n\t        } else if (isCmd(obj)) {\n\t         switch (obj.cmd) {\n\t         case 'endcmap':\n\t          break objLoop;\n\t         case 'usecmap':\n\t          if (isName(previous)) {\n\t           embededUseCMap = previous.name;\n\t          }\n\t          break;\n\t         case 'begincodespacerange':\n\t          parseCodespaceRange(cMap, lexer);\n\t          break;\n\t         case 'beginbfchar':\n\t          parseBfChar(cMap, lexer);\n\t          break;\n\t         case 'begincidchar':\n\t          parseCidChar(cMap, lexer);\n\t          break;\n\t         case 'beginbfrange':\n\t          parseBfRange(cMap, lexer);\n\t          break;\n\t         case 'begincidrange':\n\t          parseCidRange(cMap, lexer);\n\t          break;\n\t         }\n\t        }\n\t       } catch (ex) {\n\t        if (ex instanceof MissingDataException) {\n\t         throw ex;\n\t        }\n\t        warn('Invalid cMap data: ' + ex);\n\t        continue;\n\t       }\n\t      }\n\t     if (!useCMap && embededUseCMap) {\n\t      useCMap = embededUseCMap;\n\t     }\n\t     if (useCMap) {\n\t      return extendCMap(cMap, builtInCMapParams, useCMap);\n\t     }\n\t     return Promise.resolve(cMap);\n\t    }\n\t    function extendCMap(cMap, builtInCMapParams, useCMap) {\n\t     return createBuiltInCMap(useCMap, builtInCMapParams).then(function (newCMap) {\n\t      cMap.useCMap = newCMap;\n\t      if (cMap.numCodespaceRanges === 0) {\n\t       var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n\t       for (var i = 0; i < useCodespaceRanges.length; i++) {\n\t        cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n\t       }\n\t       cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n\t      }\n\t      cMap.useCMap.forEach(function (key, value) {\n\t       if (!cMap.contains(key)) {\n\t        cMap.mapOne(key, cMap.useCMap.lookup(key));\n\t       }\n\t      });\n\t      return cMap;\n\t     });\n\t    }\n\t    function parseBinaryCMap(name, builtInCMapParams) {\n\t     var url = builtInCMapParams.url + name + '.bcmap';\n\t     var cMap = new CMap(true);\n\t     return new BinaryCMapReader().read(url, cMap, function (useCMap) {\n\t      return extendCMap(cMap, builtInCMapParams, useCMap);\n\t     });\n\t    }\n\t    function createBuiltInCMap(name, builtInCMapParams) {\n\t     if (name === 'Identity-H') {\n\t      return Promise.resolve(new IdentityCMap(false, 2));\n\t     } else if (name === 'Identity-V') {\n\t      return Promise.resolve(new IdentityCMap(true, 2));\n\t     }\n\t     if (BUILT_IN_CMAPS.indexOf(name) === -1) {\n\t      return Promise.reject(new Error('Unknown cMap name: ' + name));\n\t     }\n\t     assert(builtInCMapParams, 'built-in cMap parameters are not provided');\n\t     if (builtInCMapParams.packed) {\n\t      return parseBinaryCMap(name, builtInCMapParams);\n\t     }\n\t     return new Promise(function (resolve, reject) {\n\t      var url = builtInCMapParams.url + name;\n\t      var request = new XMLHttpRequest();\n\t      request.onreadystatechange = function () {\n\t       if (request.readyState === XMLHttpRequest.DONE) {\n\t        if (request.status === 200 || request.status === 0) {\n\t         var cMap = new CMap(true);\n\t         var lexer = new Lexer(new StringStream(request.responseText));\n\t         parseCMap(cMap, lexer, builtInCMapParams, null).then(function (parsedCMap) {\n\t          resolve(parsedCMap);\n\t         });\n\t        } else {\n\t         reject(new Error('Unable to get cMap at: ' + url));\n\t        }\n\t       }\n\t      };\n\t      request.open('GET', url, true);\n\t      request.send(null);\n\t     });\n\t    }\n\t    return {\n\t     create: function (encoding, builtInCMapParams, useCMap) {\n\t      if (isName(encoding)) {\n\t       return createBuiltInCMap(encoding.name, builtInCMapParams);\n\t      } else if (isStream(encoding)) {\n\t       var cMap = new CMap();\n\t       var lexer = new Lexer(encoding);\n\t       return parseCMap(cMap, lexer, builtInCMapParams, useCMap).then(function (parsedCMap) {\n\t        if (parsedCMap.isIdentityCMap) {\n\t         return createBuiltInCMap(parsedCMap.name, builtInCMapParams);\n\t        }\n\t        return parsedCMap;\n\t       });\n\t      }\n\t      return Promise.reject(new Error('Encoding required.'));\n\t     }\n\t    };\n\t   }();\n\t   exports.CMap = CMap;\n\t   exports.CMapFactory = CMapFactory;\n\t   exports.IdentityCMap = IdentityCMap;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCoreColorSpace = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreFunction);\n\t  }(this, function (exports, sharedUtil, corePrimitives, coreFunction) {\n\t   var error = sharedUtil.error;\n\t   var info = sharedUtil.info;\n\t   var isArray = sharedUtil.isArray;\n\t   var isString = sharedUtil.isString;\n\t   var shadow = sharedUtil.shadow;\n\t   var warn = sharedUtil.warn;\n\t   var isDict = corePrimitives.isDict;\n\t   var isName = corePrimitives.isName;\n\t   var isStream = corePrimitives.isStream;\n\t   var PDFFunction = coreFunction.PDFFunction;\n\t   var ColorSpace = function ColorSpaceClosure() {\n\t    function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\n\t     var COMPONENTS = 3;\n\t     alpha01 = alpha01 !== 1 ? 0 : alpha01;\n\t     var xRatio = w1 / w2;\n\t     var yRatio = h1 / h2;\n\t     var i, j, py, newIndex = 0, oldIndex;\n\t     var xScaled = new Uint16Array(w2);\n\t     var w1Scanline = w1 * COMPONENTS;\n\t     for (i = 0; i < w2; i++) {\n\t      xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n\t     }\n\t     for (i = 0; i < h2; i++) {\n\t      py = Math.floor(i * yRatio) * w1Scanline;\n\t      for (j = 0; j < w2; j++) {\n\t       oldIndex = py + xScaled[j];\n\t       dest[newIndex++] = src[oldIndex++];\n\t       dest[newIndex++] = src[oldIndex++];\n\t       dest[newIndex++] = src[oldIndex++];\n\t       newIndex += alpha01;\n\t      }\n\t     }\n\t    }\n\t    function ColorSpace() {\n\t     error('should not call ColorSpace constructor');\n\t    }\n\t    ColorSpace.prototype = {\n\t     getRgb: function ColorSpace_getRgb(src, srcOffset) {\n\t      var rgb = new Uint8Array(3);\n\t      this.getRgbItem(src, srcOffset, rgb, 0);\n\t      return rgb;\n\t     },\n\t     getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      error('Should not call ColorSpace.getRgbItem');\n\t     },\n\t     getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      error('Should not call ColorSpace.getRgbBuffer');\n\t     },\n\t     getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\n\t      error('Should not call ColorSpace.getOutputLength');\n\t     },\n\t     isPassthrough: function ColorSpace_isPassthrough(bits) {\n\t      return false;\n\t     },\n\t     fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n\t      var count = originalWidth * originalHeight;\n\t      var rgbBuf = null;\n\t      var numComponentColors = 1 << bpc;\n\t      var needsResizing = originalHeight !== height || originalWidth !== width;\n\t      var i, ii;\n\t      if (this.isPassthrough(bpc)) {\n\t       rgbBuf = comps;\n\t      } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n\t       var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n\t       var key;\n\t       for (i = 0; i < numComponentColors; i++) {\n\t        allColors[i] = i;\n\t       }\n\t       var colorMap = new Uint8Array(numComponentColors * 3);\n\t       this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n\t       var destPos, rgbPos;\n\t       if (!needsResizing) {\n\t        destPos = 0;\n\t        for (i = 0; i < count; ++i) {\n\t         key = comps[i] * 3;\n\t         dest[destPos++] = colorMap[key];\n\t         dest[destPos++] = colorMap[key + 1];\n\t         dest[destPos++] = colorMap[key + 2];\n\t         destPos += alpha01;\n\t        }\n\t       } else {\n\t        rgbBuf = new Uint8Array(count * 3);\n\t        rgbPos = 0;\n\t        for (i = 0; i < count; ++i) {\n\t         key = comps[i] * 3;\n\t         rgbBuf[rgbPos++] = colorMap[key];\n\t         rgbBuf[rgbPos++] = colorMap[key + 1];\n\t         rgbBuf[rgbPos++] = colorMap[key + 2];\n\t        }\n\t       }\n\t      } else {\n\t       if (!needsResizing) {\n\t        this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n\t       } else {\n\t        rgbBuf = new Uint8Array(count * 3);\n\t        this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n\t       }\n\t      }\n\t      if (rgbBuf) {\n\t       if (needsResizing) {\n\t        resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\n\t       } else {\n\t        rgbPos = 0;\n\t        destPos = 0;\n\t        for (i = 0, ii = width * actualHeight; i < ii; i++) {\n\t         dest[destPos++] = rgbBuf[rgbPos++];\n\t         dest[destPos++] = rgbBuf[rgbPos++];\n\t         dest[destPos++] = rgbBuf[rgbPos++];\n\t         destPos += alpha01;\n\t        }\n\t       }\n\t      }\n\t     },\n\t     usesZeroToOneRange: true\n\t    };\n\t    ColorSpace.parse = function ColorSpace_parse(cs, xref, res) {\n\t     var IR = ColorSpace.parseToIR(cs, xref, res);\n\t     if (IR instanceof AlternateCS) {\n\t      return IR;\n\t     }\n\t     return ColorSpace.fromIR(IR);\n\t    };\n\t    ColorSpace.fromIR = function ColorSpace_fromIR(IR) {\n\t     var name = isArray(IR) ? IR[0] : IR;\n\t     var whitePoint, blackPoint, gamma;\n\t     switch (name) {\n\t     case 'DeviceGrayCS':\n\t      return this.singletons.gray;\n\t     case 'DeviceRgbCS':\n\t      return this.singletons.rgb;\n\t     case 'DeviceCmykCS':\n\t      return this.singletons.cmyk;\n\t     case 'CalGrayCS':\n\t      whitePoint = IR[1];\n\t      blackPoint = IR[2];\n\t      gamma = IR[3];\n\t      return new CalGrayCS(whitePoint, blackPoint, gamma);\n\t     case 'CalRGBCS':\n\t      whitePoint = IR[1];\n\t      blackPoint = IR[2];\n\t      gamma = IR[3];\n\t      var matrix = IR[4];\n\t      return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n\t     case 'PatternCS':\n\t      var basePatternCS = IR[1];\n\t      if (basePatternCS) {\n\t       basePatternCS = ColorSpace.fromIR(basePatternCS);\n\t      }\n\t      return new PatternCS(basePatternCS);\n\t     case 'IndexedCS':\n\t      var baseIndexedCS = IR[1];\n\t      var hiVal = IR[2];\n\t      var lookup = IR[3];\n\t      return new IndexedCS(ColorSpace.fromIR(baseIndexedCS), hiVal, lookup);\n\t     case 'AlternateCS':\n\t      var numComps = IR[1];\n\t      var alt = IR[2];\n\t      var tintFnIR = IR[3];\n\t      return new AlternateCS(numComps, ColorSpace.fromIR(alt), PDFFunction.fromIR(tintFnIR));\n\t     case 'LabCS':\n\t      whitePoint = IR[1];\n\t      blackPoint = IR[2];\n\t      var range = IR[3];\n\t      return new LabCS(whitePoint, blackPoint, range);\n\t     default:\n\t      error('Unknown name ' + name);\n\t     }\n\t     return null;\n\t    };\n\t    ColorSpace.parseToIR = function ColorSpace_parseToIR(cs, xref, res) {\n\t     if (isName(cs)) {\n\t      var colorSpaces = res.get('ColorSpace');\n\t      if (isDict(colorSpaces)) {\n\t       var refcs = colorSpaces.get(cs.name);\n\t       if (refcs) {\n\t        cs = refcs;\n\t       }\n\t      }\n\t     }\n\t     cs = xref.fetchIfRef(cs);\n\t     if (isName(cs)) {\n\t      switch (cs.name) {\n\t      case 'DeviceGray':\n\t      case 'G':\n\t       return 'DeviceGrayCS';\n\t      case 'DeviceRGB':\n\t      case 'RGB':\n\t       return 'DeviceRgbCS';\n\t      case 'DeviceCMYK':\n\t      case 'CMYK':\n\t       return 'DeviceCmykCS';\n\t      case 'Pattern':\n\t       return [\n\t        'PatternCS',\n\t        null\n\t       ];\n\t      default:\n\t       error('unrecognized colorspace ' + cs.name);\n\t      }\n\t     } else if (isArray(cs)) {\n\t      var mode = xref.fetchIfRef(cs[0]).name;\n\t      var numComps, params, alt, whitePoint, blackPoint, gamma;\n\t      switch (mode) {\n\t      case 'DeviceGray':\n\t      case 'G':\n\t       return 'DeviceGrayCS';\n\t      case 'DeviceRGB':\n\t      case 'RGB':\n\t       return 'DeviceRgbCS';\n\t      case 'DeviceCMYK':\n\t      case 'CMYK':\n\t       return 'DeviceCmykCS';\n\t      case 'CalGray':\n\t       params = xref.fetchIfRef(cs[1]);\n\t       whitePoint = params.getArray('WhitePoint');\n\t       blackPoint = params.getArray('BlackPoint');\n\t       gamma = params.get('Gamma');\n\t       return [\n\t        'CalGrayCS',\n\t        whitePoint,\n\t        blackPoint,\n\t        gamma\n\t       ];\n\t      case 'CalRGB':\n\t       params = xref.fetchIfRef(cs[1]);\n\t       whitePoint = params.getArray('WhitePoint');\n\t       blackPoint = params.getArray('BlackPoint');\n\t       gamma = params.getArray('Gamma');\n\t       var matrix = params.getArray('Matrix');\n\t       return [\n\t        'CalRGBCS',\n\t        whitePoint,\n\t        blackPoint,\n\t        gamma,\n\t        matrix\n\t       ];\n\t      case 'ICCBased':\n\t       var stream = xref.fetchIfRef(cs[1]);\n\t       var dict = stream.dict;\n\t       numComps = dict.get('N');\n\t       alt = dict.get('Alternate');\n\t       if (alt) {\n\t        var altIR = ColorSpace.parseToIR(alt, xref, res);\n\t        var altCS = ColorSpace.fromIR(altIR);\n\t        if (altCS.numComps === numComps) {\n\t         return altIR;\n\t        }\n\t        warn('ICCBased color space: Ignoring incorrect /Alternate entry.');\n\t       }\n\t       if (numComps === 1) {\n\t        return 'DeviceGrayCS';\n\t       } else if (numComps === 3) {\n\t        return 'DeviceRgbCS';\n\t       } else if (numComps === 4) {\n\t        return 'DeviceCmykCS';\n\t       }\n\t       break;\n\t      case 'Pattern':\n\t       var basePatternCS = cs[1] || null;\n\t       if (basePatternCS) {\n\t        basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res);\n\t       }\n\t       return [\n\t        'PatternCS',\n\t        basePatternCS\n\t       ];\n\t      case 'Indexed':\n\t      case 'I':\n\t       var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res);\n\t       var hiVal = xref.fetchIfRef(cs[2]) + 1;\n\t       var lookup = xref.fetchIfRef(cs[3]);\n\t       if (isStream(lookup)) {\n\t        lookup = lookup.getBytes();\n\t       }\n\t       return [\n\t        'IndexedCS',\n\t        baseIndexedCS,\n\t        hiVal,\n\t        lookup\n\t       ];\n\t      case 'Separation':\n\t      case 'DeviceN':\n\t       var name = xref.fetchIfRef(cs[1]);\n\t       numComps = isArray(name) ? name.length : 1;\n\t       alt = ColorSpace.parseToIR(cs[2], xref, res);\n\t       var tintFnIR = PDFFunction.getIR(xref, xref.fetchIfRef(cs[3]));\n\t       return [\n\t        'AlternateCS',\n\t        numComps,\n\t        alt,\n\t        tintFnIR\n\t       ];\n\t      case 'Lab':\n\t       params = xref.fetchIfRef(cs[1]);\n\t       whitePoint = params.getArray('WhitePoint');\n\t       blackPoint = params.getArray('BlackPoint');\n\t       var range = params.getArray('Range');\n\t       return [\n\t        'LabCS',\n\t        whitePoint,\n\t        blackPoint,\n\t        range\n\t       ];\n\t      default:\n\t       error('unimplemented color space object \"' + mode + '\"');\n\t      }\n\t     } else {\n\t      error('unrecognized color space object: \"' + cs + '\"');\n\t     }\n\t     return null;\n\t    };\n\t    ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n\t     if (!isArray(decode)) {\n\t      return true;\n\t     }\n\t     if (n * 2 !== decode.length) {\n\t      warn('The decode map is not the correct length');\n\t      return true;\n\t     }\n\t     for (var i = 0, ii = decode.length; i < ii; i += 2) {\n\t      if (decode[i] !== 0 || decode[i + 1] !== 1) {\n\t       return false;\n\t      }\n\t     }\n\t     return true;\n\t    };\n\t    ColorSpace.singletons = {\n\t     get gray() {\n\t      return shadow(this, 'gray', new DeviceGrayCS());\n\t     },\n\t     get rgb() {\n\t      return shadow(this, 'rgb', new DeviceRgbCS());\n\t     },\n\t     get cmyk() {\n\t      return shadow(this, 'cmyk', new DeviceCmykCS());\n\t     }\n\t    };\n\t    return ColorSpace;\n\t   }();\n\t   var AlternateCS = function AlternateCSClosure() {\n\t    function AlternateCS(numComps, base, tintFn) {\n\t     this.name = 'Alternate';\n\t     this.numComps = numComps;\n\t     this.defaultColor = new Float32Array(numComps);\n\t     for (var i = 0; i < numComps; ++i) {\n\t      this.defaultColor[i] = 1;\n\t     }\n\t     this.base = base;\n\t     this.tintFn = tintFn;\n\t     this.tmpBuf = new Float32Array(base.numComps);\n\t    }\n\t    AlternateCS.prototype = {\n\t     getRgb: ColorSpace.prototype.getRgb,\n\t     getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      var tmpBuf = this.tmpBuf;\n\t      this.tintFn(src, srcOffset, tmpBuf, 0);\n\t      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n\t     },\n\t     getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      var tintFn = this.tintFn;\n\t      var base = this.base;\n\t      var scale = 1 / ((1 << bits) - 1);\n\t      var baseNumComps = base.numComps;\n\t      var usesZeroToOneRange = base.usesZeroToOneRange;\n\t      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n\t      var pos = isPassthrough ? destOffset : 0;\n\t      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n\t      var numComps = this.numComps;\n\t      var scaled = new Float32Array(numComps);\n\t      var tinted = new Float32Array(baseNumComps);\n\t      var i, j;\n\t      for (i = 0; i < count; i++) {\n\t       for (j = 0; j < numComps; j++) {\n\t        scaled[j] = src[srcOffset++] * scale;\n\t       }\n\t       tintFn(scaled, 0, tinted, 0);\n\t       if (usesZeroToOneRange) {\n\t        for (j = 0; j < baseNumComps; j++) {\n\t         baseBuf[pos++] = tinted[j] * 255;\n\t        }\n\t       } else {\n\t        base.getRgbItem(tinted, 0, baseBuf, pos);\n\t        pos += baseNumComps;\n\t       }\n\t      }\n\t      if (!isPassthrough) {\n\t       base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n\t      }\n\t     },\n\t     getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\n\t      return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n\t     },\n\t     isPassthrough: ColorSpace.prototype.isPassthrough,\n\t     fillRgb: ColorSpace.prototype.fillRgb,\n\t     isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n\t      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n\t     },\n\t     usesZeroToOneRange: true\n\t    };\n\t    return AlternateCS;\n\t   }();\n\t   var PatternCS = function PatternCSClosure() {\n\t    function PatternCS(baseCS) {\n\t     this.name = 'Pattern';\n\t     this.base = baseCS;\n\t    }\n\t    PatternCS.prototype = {};\n\t    return PatternCS;\n\t   }();\n\t   var IndexedCS = function IndexedCSClosure() {\n\t    function IndexedCS(base, highVal, lookup) {\n\t     this.name = 'Indexed';\n\t     this.numComps = 1;\n\t     this.defaultColor = new Uint8Array(this.numComps);\n\t     this.base = base;\n\t     this.highVal = highVal;\n\t     var baseNumComps = base.numComps;\n\t     var length = baseNumComps * highVal;\n\t     if (isStream(lookup)) {\n\t      this.lookup = new Uint8Array(length);\n\t      var bytes = lookup.getBytes(length);\n\t      this.lookup.set(bytes);\n\t     } else if (isString(lookup)) {\n\t      this.lookup = new Uint8Array(length);\n\t      for (var i = 0; i < length; ++i) {\n\t       this.lookup[i] = lookup.charCodeAt(i);\n\t      }\n\t     } else if (lookup instanceof Uint8Array || lookup instanceof Array) {\n\t      this.lookup = lookup;\n\t     } else {\n\t      error('Unrecognized lookup table: ' + lookup);\n\t     }\n\t    }\n\t    IndexedCS.prototype = {\n\t     getRgb: ColorSpace.prototype.getRgb,\n\t     getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      var numComps = this.base.numComps;\n\t      var start = src[srcOffset] * numComps;\n\t      this.base.getRgbItem(this.lookup, start, dest, destOffset);\n\t     },\n\t     getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      var base = this.base;\n\t      var numComps = base.numComps;\n\t      var outputDelta = base.getOutputLength(numComps, alpha01);\n\t      var lookup = this.lookup;\n\t      for (var i = 0; i < count; ++i) {\n\t       var lookupPos = src[srcOffset++] * numComps;\n\t       base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n\t       destOffset += outputDelta;\n\t      }\n\t     },\n\t     getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n\t      return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n\t     },\n\t     isPassthrough: ColorSpace.prototype.isPassthrough,\n\t     fillRgb: ColorSpace.prototype.fillRgb,\n\t     isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n\t      return true;\n\t     },\n\t     usesZeroToOneRange: true\n\t    };\n\t    return IndexedCS;\n\t   }();\n\t   var DeviceGrayCS = function DeviceGrayCSClosure() {\n\t    function DeviceGrayCS() {\n\t     this.name = 'DeviceGray';\n\t     this.numComps = 1;\n\t     this.defaultColor = new Float32Array(this.numComps);\n\t    }\n\t    DeviceGrayCS.prototype = {\n\t     getRgb: ColorSpace.prototype.getRgb,\n\t     getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      var c = src[srcOffset] * 255 | 0;\n\t      c = c < 0 ? 0 : c > 255 ? 255 : c;\n\t      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n\t     },\n\t     getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      var scale = 255 / ((1 << bits) - 1);\n\t      var j = srcOffset, q = destOffset;\n\t      for (var i = 0; i < count; ++i) {\n\t       var c = scale * src[j++] | 0;\n\t       dest[q++] = c;\n\t       dest[q++] = c;\n\t       dest[q++] = c;\n\t       q += alpha01;\n\t      }\n\t     },\n\t     getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\n\t      return inputLength * (3 + alpha01);\n\t     },\n\t     isPassthrough: ColorSpace.prototype.isPassthrough,\n\t     fillRgb: ColorSpace.prototype.fillRgb,\n\t     isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n\t      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n\t     },\n\t     usesZeroToOneRange: true\n\t    };\n\t    return DeviceGrayCS;\n\t   }();\n\t   var DeviceRgbCS = function DeviceRgbCSClosure() {\n\t    function DeviceRgbCS() {\n\t     this.name = 'DeviceRGB';\n\t     this.numComps = 3;\n\t     this.defaultColor = new Float32Array(this.numComps);\n\t    }\n\t    DeviceRgbCS.prototype = {\n\t     getRgb: ColorSpace.prototype.getRgb,\n\t     getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      var r = src[srcOffset] * 255 | 0;\n\t      var g = src[srcOffset + 1] * 255 | 0;\n\t      var b = src[srcOffset + 2] * 255 | 0;\n\t      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n\t      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n\t      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n\t     },\n\t     getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      if (bits === 8 && alpha01 === 0) {\n\t       dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n\t       return;\n\t      }\n\t      var scale = 255 / ((1 << bits) - 1);\n\t      var j = srcOffset, q = destOffset;\n\t      for (var i = 0; i < count; ++i) {\n\t       dest[q++] = scale * src[j++] | 0;\n\t       dest[q++] = scale * src[j++] | 0;\n\t       dest[q++] = scale * src[j++] | 0;\n\t       q += alpha01;\n\t      }\n\t     },\n\t     getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\n\t      return inputLength * (3 + alpha01) / 3 | 0;\n\t     },\n\t     isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n\t      return bits === 8;\n\t     },\n\t     fillRgb: ColorSpace.prototype.fillRgb,\n\t     isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n\t      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n\t     },\n\t     usesZeroToOneRange: true\n\t    };\n\t    return DeviceRgbCS;\n\t   }();\n\t   var DeviceCmykCS = function DeviceCmykCSClosure() {\n\t    function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n\t     var c = src[srcOffset + 0] * srcScale;\n\t     var m = src[srcOffset + 1] * srcScale;\n\t     var y = src[srcOffset + 2] * srcScale;\n\t     var k = src[srcOffset + 3] * srcScale;\n\t     var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\n\t     var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\n\t     var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\n\t     dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n\t     dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n\t     dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n\t    }\n\t    function DeviceCmykCS() {\n\t     this.name = 'DeviceCMYK';\n\t     this.numComps = 4;\n\t     this.defaultColor = new Float32Array(this.numComps);\n\t     this.defaultColor[3] = 1;\n\t    }\n\t    DeviceCmykCS.prototype = {\n\t     getRgb: ColorSpace.prototype.getRgb,\n\t     getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      convertToRgb(src, srcOffset, 1, dest, destOffset);\n\t     },\n\t     getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      var scale = 1 / ((1 << bits) - 1);\n\t      for (var i = 0; i < count; i++) {\n\t       convertToRgb(src, srcOffset, scale, dest, destOffset);\n\t       srcOffset += 4;\n\t       destOffset += 3 + alpha01;\n\t      }\n\t     },\n\t     getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\n\t      return inputLength / 4 * (3 + alpha01) | 0;\n\t     },\n\t     isPassthrough: ColorSpace.prototype.isPassthrough,\n\t     fillRgb: ColorSpace.prototype.fillRgb,\n\t     isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n\t      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n\t     },\n\t     usesZeroToOneRange: true\n\t    };\n\t    return DeviceCmykCS;\n\t   }();\n\t   var CalGrayCS = function CalGrayCSClosure() {\n\t    function CalGrayCS(whitePoint, blackPoint, gamma) {\n\t     this.name = 'CalGray';\n\t     this.numComps = 1;\n\t     this.defaultColor = new Float32Array(this.numComps);\n\t     if (!whitePoint) {\n\t      error('WhitePoint missing - required for color space CalGray');\n\t     }\n\t     blackPoint = blackPoint || [\n\t      0,\n\t      0,\n\t      0\n\t     ];\n\t     gamma = gamma || 1;\n\t     this.XW = whitePoint[0];\n\t     this.YW = whitePoint[1];\n\t     this.ZW = whitePoint[2];\n\t     this.XB = blackPoint[0];\n\t     this.YB = blackPoint[1];\n\t     this.ZB = blackPoint[2];\n\t     this.G = gamma;\n\t     if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n\t      error('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n\t     }\n\t     if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n\t      info('Invalid BlackPoint for ' + this.name + ', falling back to default');\n\t      this.XB = this.YB = this.ZB = 0;\n\t     }\n\t     if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n\t      warn(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\n\t     }\n\t     if (this.G < 1) {\n\t      info('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\n\t      this.G = 1;\n\t     }\n\t    }\n\t    function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n\t     var A = src[srcOffset] * scale;\n\t     var AG = Math.pow(A, cs.G);\n\t     var L = cs.YW * AG;\n\t     var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n\t     dest[destOffset] = val;\n\t     dest[destOffset + 1] = val;\n\t     dest[destOffset + 2] = val;\n\t    }\n\t    CalGrayCS.prototype = {\n\t     getRgb: ColorSpace.prototype.getRgb,\n\t     getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n\t     },\n\t     getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      var scale = 1 / ((1 << bits) - 1);\n\t      for (var i = 0; i < count; ++i) {\n\t       convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n\t       srcOffset += 1;\n\t       destOffset += 3 + alpha01;\n\t      }\n\t     },\n\t     getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n\t      return inputLength * (3 + alpha01);\n\t     },\n\t     isPassthrough: ColorSpace.prototype.isPassthrough,\n\t     fillRgb: ColorSpace.prototype.fillRgb,\n\t     isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n\t      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n\t     },\n\t     usesZeroToOneRange: true\n\t    };\n\t    return CalGrayCS;\n\t   }();\n\t   var CalRGBCS = function CalRGBCSClosure() {\n\t    var BRADFORD_SCALE_MATRIX = new Float32Array([\n\t     0.8951,\n\t     0.2664,\n\t     -0.1614,\n\t     -0.7502,\n\t     1.7135,\n\t     0.0367,\n\t     0.0389,\n\t     -0.0685,\n\t     1.0296\n\t    ]);\n\t    var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([\n\t     0.9869929,\n\t     -0.1470543,\n\t     0.1599627,\n\t     0.4323053,\n\t     0.5183603,\n\t     0.0492912,\n\t     -0.0085287,\n\t     0.0400428,\n\t     0.9684867\n\t    ]);\n\t    var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([\n\t     3.2404542,\n\t     -1.5371385,\n\t     -0.4985314,\n\t     -0.9692660,\n\t     1.8760108,\n\t     0.0415560,\n\t     0.0556434,\n\t     -0.2040259,\n\t     1.0572252\n\t    ]);\n\t    var FLAT_WHITEPOINT_MATRIX = new Float32Array([\n\t     1,\n\t     1,\n\t     1\n\t    ]);\n\t    var tempNormalizeMatrix = new Float32Array(3);\n\t    var tempConvertMatrix1 = new Float32Array(3);\n\t    var tempConvertMatrix2 = new Float32Array(3);\n\t    var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n\t    function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n\t     this.name = 'CalRGB';\n\t     this.numComps = 3;\n\t     this.defaultColor = new Float32Array(this.numComps);\n\t     if (!whitePoint) {\n\t      error('WhitePoint missing - required for color space CalRGB');\n\t     }\n\t     blackPoint = blackPoint || new Float32Array(3);\n\t     gamma = gamma || new Float32Array([\n\t      1,\n\t      1,\n\t      1\n\t     ]);\n\t     matrix = matrix || new Float32Array([\n\t      1,\n\t      0,\n\t      0,\n\t      0,\n\t      1,\n\t      0,\n\t      0,\n\t      0,\n\t      1\n\t     ]);\n\t     var XW = whitePoint[0];\n\t     var YW = whitePoint[1];\n\t     var ZW = whitePoint[2];\n\t     this.whitePoint = whitePoint;\n\t     var XB = blackPoint[0];\n\t     var YB = blackPoint[1];\n\t     var ZB = blackPoint[2];\n\t     this.blackPoint = blackPoint;\n\t     this.GR = gamma[0];\n\t     this.GG = gamma[1];\n\t     this.GB = gamma[2];\n\t     this.MXA = matrix[0];\n\t     this.MYA = matrix[1];\n\t     this.MZA = matrix[2];\n\t     this.MXB = matrix[3];\n\t     this.MYB = matrix[4];\n\t     this.MZB = matrix[5];\n\t     this.MXC = matrix[6];\n\t     this.MYC = matrix[7];\n\t     this.MZC = matrix[8];\n\t     if (XW < 0 || ZW < 0 || YW !== 1) {\n\t      error('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n\t     }\n\t     if (XB < 0 || YB < 0 || ZB < 0) {\n\t      info('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\n\t      this.blackPoint = new Float32Array(3);\n\t     }\n\t     if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n\t      info('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\n\t      this.GR = this.GG = this.GB = 1;\n\t     }\n\t     if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n\t      info('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\n\t      this.MXA = this.MYB = this.MZC = 1;\n\t      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n\t     }\n\t    }\n\t    function matrixProduct(a, b, result) {\n\t     result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t     result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n\t     result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n\t    }\n\t    function convertToFlat(sourceWhitePoint, LMS, result) {\n\t     result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n\t     result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n\t     result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n\t    }\n\t    function convertToD65(sourceWhitePoint, LMS, result) {\n\t     var D65X = 0.95047;\n\t     var D65Y = 1;\n\t     var D65Z = 1.08883;\n\t     result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n\t     result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n\t     result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n\t    }\n\t    function sRGBTransferFunction(color) {\n\t     if (color <= 0.0031308) {\n\t      return adjustToRange(0, 1, 12.92 * color);\n\t     }\n\t     return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n\t    }\n\t    function adjustToRange(min, max, value) {\n\t     return Math.max(min, Math.min(max, value));\n\t    }\n\t    function decodeL(L) {\n\t     if (L < 0) {\n\t      return -decodeL(-L);\n\t     }\n\t     if (L > 8.0) {\n\t      return Math.pow((L + 16) / 116, 3);\n\t     }\n\t     return L * DECODE_L_CONSTANT;\n\t    }\n\t    function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n\t     if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n\t      result[0] = XYZ_Flat[0];\n\t      result[1] = XYZ_Flat[1];\n\t      result[2] = XYZ_Flat[2];\n\t      return;\n\t     }\n\t     var zeroDecodeL = decodeL(0);\n\t     var X_DST = zeroDecodeL;\n\t     var X_SRC = decodeL(sourceBlackPoint[0]);\n\t     var Y_DST = zeroDecodeL;\n\t     var Y_SRC = decodeL(sourceBlackPoint[1]);\n\t     var Z_DST = zeroDecodeL;\n\t     var Z_SRC = decodeL(sourceBlackPoint[2]);\n\t     var X_Scale = (1 - X_DST) / (1 - X_SRC);\n\t     var X_Offset = 1 - X_Scale;\n\t     var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n\t     var Y_Offset = 1 - Y_Scale;\n\t     var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n\t     var Z_Offset = 1 - Z_Scale;\n\t     result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n\t     result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n\t     result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n\t    }\n\t    function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n\t     if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n\t      result[0] = XYZ_In[0];\n\t      result[1] = XYZ_In[1];\n\t      result[2] = XYZ_In[2];\n\t      return;\n\t     }\n\t     var LMS = result;\n\t     matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n\t     var LMS_Flat = tempNormalizeMatrix;\n\t     convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n\t     matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n\t    }\n\t    function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n\t     var LMS = result;\n\t     matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n\t     var LMS_D65 = tempNormalizeMatrix;\n\t     convertToD65(sourceWhitePoint, LMS, LMS_D65);\n\t     matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n\t    }\n\t    function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n\t     var A = adjustToRange(0, 1, src[srcOffset] * scale);\n\t     var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n\t     var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n\t     var AGR = Math.pow(A, cs.GR);\n\t     var BGG = Math.pow(B, cs.GG);\n\t     var CGB = Math.pow(C, cs.GB);\n\t     var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n\t     var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n\t     var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n\t     var XYZ = tempConvertMatrix1;\n\t     XYZ[0] = X;\n\t     XYZ[1] = Y;\n\t     XYZ[2] = Z;\n\t     var XYZ_Flat = tempConvertMatrix2;\n\t     normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n\t     var XYZ_Black = tempConvertMatrix1;\n\t     compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n\t     var XYZ_D65 = tempConvertMatrix2;\n\t     normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n\t     var SRGB = tempConvertMatrix1;\n\t     matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n\t     var sR = sRGBTransferFunction(SRGB[0]);\n\t     var sG = sRGBTransferFunction(SRGB[1]);\n\t     var sB = sRGBTransferFunction(SRGB[2]);\n\t     dest[destOffset] = Math.round(sR * 255);\n\t     dest[destOffset + 1] = Math.round(sG * 255);\n\t     dest[destOffset + 2] = Math.round(sB * 255);\n\t    }\n\t    CalRGBCS.prototype = {\n\t     getRgb: function CalRGBCS_getRgb(src, srcOffset) {\n\t      var rgb = new Uint8Array(3);\n\t      this.getRgbItem(src, srcOffset, rgb, 0);\n\t      return rgb;\n\t     },\n\t     getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n\t     },\n\t     getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      var scale = 1 / ((1 << bits) - 1);\n\t      for (var i = 0; i < count; ++i) {\n\t       convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n\t       srcOffset += 3;\n\t       destOffset += 3 + alpha01;\n\t      }\n\t     },\n\t     getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n\t      return inputLength * (3 + alpha01) / 3 | 0;\n\t     },\n\t     isPassthrough: ColorSpace.prototype.isPassthrough,\n\t     fillRgb: ColorSpace.prototype.fillRgb,\n\t     isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n\t      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n\t     },\n\t     usesZeroToOneRange: true\n\t    };\n\t    return CalRGBCS;\n\t   }();\n\t   var LabCS = function LabCSClosure() {\n\t    function LabCS(whitePoint, blackPoint, range) {\n\t     this.name = 'Lab';\n\t     this.numComps = 3;\n\t     this.defaultColor = new Float32Array(this.numComps);\n\t     if (!whitePoint) {\n\t      error('WhitePoint missing - required for color space Lab');\n\t     }\n\t     blackPoint = blackPoint || [\n\t      0,\n\t      0,\n\t      0\n\t     ];\n\t     range = range || [\n\t      -100,\n\t      100,\n\t      -100,\n\t      100\n\t     ];\n\t     this.XW = whitePoint[0];\n\t     this.YW = whitePoint[1];\n\t     this.ZW = whitePoint[2];\n\t     this.amin = range[0];\n\t     this.amax = range[1];\n\t     this.bmin = range[2];\n\t     this.bmax = range[3];\n\t     this.XB = blackPoint[0];\n\t     this.YB = blackPoint[1];\n\t     this.ZB = blackPoint[2];\n\t     if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n\t      error('Invalid WhitePoint components, no fallback available');\n\t     }\n\t     if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n\t      info('Invalid BlackPoint, falling back to default');\n\t      this.XB = this.YB = this.ZB = 0;\n\t     }\n\t     if (this.amin > this.amax || this.bmin > this.bmax) {\n\t      info('Invalid Range, falling back to defaults');\n\t      this.amin = -100;\n\t      this.amax = 100;\n\t      this.bmin = -100;\n\t      this.bmax = 100;\n\t     }\n\t    }\n\t    function fn_g(x) {\n\t     var result;\n\t     if (x >= 6 / 29) {\n\t      result = x * x * x;\n\t     } else {\n\t      result = 108 / 841 * (x - 4 / 29);\n\t     }\n\t     return result;\n\t    }\n\t    function decode(value, high1, low2, high2) {\n\t     return low2 + value * (high2 - low2) / high1;\n\t    }\n\t    function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n\t     var Ls = src[srcOffset];\n\t     var as = src[srcOffset + 1];\n\t     var bs = src[srcOffset + 2];\n\t     if (maxVal !== false) {\n\t      Ls = decode(Ls, maxVal, 0, 100);\n\t      as = decode(as, maxVal, cs.amin, cs.amax);\n\t      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n\t     }\n\t     as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n\t     bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n\t     var M = (Ls + 16) / 116;\n\t     var L = M + as / 500;\n\t     var N = M - bs / 200;\n\t     var X = cs.XW * fn_g(L);\n\t     var Y = cs.YW * fn_g(M);\n\t     var Z = cs.ZW * fn_g(N);\n\t     var r, g, b;\n\t     if (cs.ZW < 1) {\n\t      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n\t      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n\t      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n\t     } else {\n\t      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n\t      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n\t      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n\t     }\n\t     dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n\t     dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n\t     dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n\t    }\n\t    LabCS.prototype = {\n\t     getRgb: ColorSpace.prototype.getRgb,\n\t     getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      convertToRgb(this, src, srcOffset, false, dest, destOffset);\n\t     },\n\t     getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      var maxVal = (1 << bits) - 1;\n\t      for (var i = 0; i < count; i++) {\n\t       convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n\t       srcOffset += 3;\n\t       destOffset += 3 + alpha01;\n\t      }\n\t     },\n\t     getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n\t      return inputLength * (3 + alpha01) / 3 | 0;\n\t     },\n\t     isPassthrough: ColorSpace.prototype.isPassthrough,\n\t     fillRgb: ColorSpace.prototype.fillRgb,\n\t     isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n\t      return true;\n\t     },\n\t     usesZeroToOneRange: false\n\t    };\n\t    return LabCS;\n\t   }();\n\t   exports.ColorSpace = ColorSpace;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCoreFonts = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreStream, root.pdfjsCoreGlyphList, root.pdfjsCoreFontRenderer, root.pdfjsCoreEncodings, root.pdfjsCoreStandardFonts, root.pdfjsCoreUnicode, root.pdfjsCoreType1Parser, root.pdfjsCoreCFFParser);\n\t  }(this, function (exports, sharedUtil, corePrimitives, coreStream, coreGlyphList, coreFontRenderer, coreEncodings, coreStandardFonts, coreUnicode, coreType1Parser, coreCFFParser) {\n\t   var FONT_IDENTITY_MATRIX = sharedUtil.FONT_IDENTITY_MATRIX;\n\t   var FontType = sharedUtil.FontType;\n\t   var assert = sharedUtil.assert;\n\t   var bytesToString = sharedUtil.bytesToString;\n\t   var error = sharedUtil.error;\n\t   var info = sharedUtil.info;\n\t   var isArray = sharedUtil.isArray;\n\t   var isInt = sharedUtil.isInt;\n\t   var isNum = sharedUtil.isNum;\n\t   var readUint32 = sharedUtil.readUint32;\n\t   var shadow = sharedUtil.shadow;\n\t   var string32 = sharedUtil.string32;\n\t   var warn = sharedUtil.warn;\n\t   var MissingDataException = sharedUtil.MissingDataException;\n\t   var isSpace = sharedUtil.isSpace;\n\t   var Stream = coreStream.Stream;\n\t   var getGlyphsUnicode = coreGlyphList.getGlyphsUnicode;\n\t   var getDingbatsGlyphsUnicode = coreGlyphList.getDingbatsGlyphsUnicode;\n\t   var FontRendererFactory = coreFontRenderer.FontRendererFactory;\n\t   var StandardEncoding = coreEncodings.StandardEncoding;\n\t   var MacRomanEncoding = coreEncodings.MacRomanEncoding;\n\t   var SymbolSetEncoding = coreEncodings.SymbolSetEncoding;\n\t   var ZapfDingbatsEncoding = coreEncodings.ZapfDingbatsEncoding;\n\t   var getEncoding = coreEncodings.getEncoding;\n\t   var getStdFontMap = coreStandardFonts.getStdFontMap;\n\t   var getNonStdFontMap = coreStandardFonts.getNonStdFontMap;\n\t   var getGlyphMapForStandardFonts = coreStandardFonts.getGlyphMapForStandardFonts;\n\t   var getSupplementalGlyphMapForArialBlack = coreStandardFonts.getSupplementalGlyphMapForArialBlack;\n\t   var getUnicodeRangeFor = coreUnicode.getUnicodeRangeFor;\n\t   var mapSpecialUnicodeValues = coreUnicode.mapSpecialUnicodeValues;\n\t   var getUnicodeForGlyph = coreUnicode.getUnicodeForGlyph;\n\t   var Type1Parser = coreType1Parser.Type1Parser;\n\t   var CFFStandardStrings = coreCFFParser.CFFStandardStrings;\n\t   var CFFParser = coreCFFParser.CFFParser;\n\t   var CFFCompiler = coreCFFParser.CFFCompiler;\n\t   var CFF = coreCFFParser.CFF;\n\t   var CFFHeader = coreCFFParser.CFFHeader;\n\t   var CFFTopDict = coreCFFParser.CFFTopDict;\n\t   var CFFPrivateDict = coreCFFParser.CFFPrivateDict;\n\t   var CFFStrings = coreCFFParser.CFFStrings;\n\t   var CFFIndex = coreCFFParser.CFFIndex;\n\t   var CFFCharset = coreCFFParser.CFFCharset;\n\t   var PRIVATE_USE_OFFSET_START = 0xE000;\n\t   var PRIVATE_USE_OFFSET_END = 0xF8FF;\n\t   var SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\n\t   var PDF_GLYPH_SPACE_UNITS = 1000;\n\t   var SEAC_ANALYSIS_ENABLED = false;\n\t   var FontFlags = {\n\t    FixedPitch: 1,\n\t    Serif: 2,\n\t    Symbolic: 4,\n\t    Script: 8,\n\t    Nonsymbolic: 32,\n\t    Italic: 64,\n\t    AllCap: 65536,\n\t    SmallCap: 131072,\n\t    ForceBold: 262144\n\t   };\n\t   var MacStandardGlyphOrdering = [\n\t    '.notdef',\n\t    '.null',\n\t    'nonmarkingreturn',\n\t    'space',\n\t    'exclam',\n\t    'quotedbl',\n\t    'numbersign',\n\t    'dollar',\n\t    'percent',\n\t    'ampersand',\n\t    'quotesingle',\n\t    'parenleft',\n\t    'parenright',\n\t    'asterisk',\n\t    'plus',\n\t    'comma',\n\t    'hyphen',\n\t    'period',\n\t    'slash',\n\t    'zero',\n\t    'one',\n\t    'two',\n\t    'three',\n\t    'four',\n\t    'five',\n\t    'six',\n\t    'seven',\n\t    'eight',\n\t    'nine',\n\t    'colon',\n\t    'semicolon',\n\t    'less',\n\t    'equal',\n\t    'greater',\n\t    'question',\n\t    'at',\n\t    'A',\n\t    'B',\n\t    'C',\n\t    'D',\n\t    'E',\n\t    'F',\n\t    'G',\n\t    'H',\n\t    'I',\n\t    'J',\n\t    'K',\n\t    'L',\n\t    'M',\n\t    'N',\n\t    'O',\n\t    'P',\n\t    'Q',\n\t    'R',\n\t    'S',\n\t    'T',\n\t    'U',\n\t    'V',\n\t    'W',\n\t    'X',\n\t    'Y',\n\t    'Z',\n\t    'bracketleft',\n\t    'backslash',\n\t    'bracketright',\n\t    'asciicircum',\n\t    'underscore',\n\t    'grave',\n\t    'a',\n\t    'b',\n\t    'c',\n\t    'd',\n\t    'e',\n\t    'f',\n\t    'g',\n\t    'h',\n\t    'i',\n\t    'j',\n\t    'k',\n\t    'l',\n\t    'm',\n\t    'n',\n\t    'o',\n\t    'p',\n\t    'q',\n\t    'r',\n\t    's',\n\t    't',\n\t    'u',\n\t    'v',\n\t    'w',\n\t    'x',\n\t    'y',\n\t    'z',\n\t    'braceleft',\n\t    'bar',\n\t    'braceright',\n\t    'asciitilde',\n\t    'Adieresis',\n\t    'Aring',\n\t    'Ccedilla',\n\t    'Eacute',\n\t    'Ntilde',\n\t    'Odieresis',\n\t    'Udieresis',\n\t    'aacute',\n\t    'agrave',\n\t    'acircumflex',\n\t    'adieresis',\n\t    'atilde',\n\t    'aring',\n\t    'ccedilla',\n\t    'eacute',\n\t    'egrave',\n\t    'ecircumflex',\n\t    'edieresis',\n\t    'iacute',\n\t    'igrave',\n\t    'icircumflex',\n\t    'idieresis',\n\t    'ntilde',\n\t    'oacute',\n\t    'ograve',\n\t    'ocircumflex',\n\t    'odieresis',\n\t    'otilde',\n\t    'uacute',\n\t    'ugrave',\n\t    'ucircumflex',\n\t    'udieresis',\n\t    'dagger',\n\t    'degree',\n\t    'cent',\n\t    'sterling',\n\t    'section',\n\t    'bullet',\n\t    'paragraph',\n\t    'germandbls',\n\t    'registered',\n\t    'copyright',\n\t    'trademark',\n\t    'acute',\n\t    'dieresis',\n\t    'notequal',\n\t    'AE',\n\t    'Oslash',\n\t    'infinity',\n\t    'plusminus',\n\t    'lessequal',\n\t    'greaterequal',\n\t    'yen',\n\t    'mu',\n\t    'partialdiff',\n\t    'summation',\n\t    'product',\n\t    'pi',\n\t    'integral',\n\t    'ordfeminine',\n\t    'ordmasculine',\n\t    'Omega',\n\t    'ae',\n\t    'oslash',\n\t    'questiondown',\n\t    'exclamdown',\n\t    'logicalnot',\n\t    'radical',\n\t    'florin',\n\t    'approxequal',\n\t    'Delta',\n\t    'guillemotleft',\n\t    'guillemotright',\n\t    'ellipsis',\n\t    'nonbreakingspace',\n\t    'Agrave',\n\t    'Atilde',\n\t    'Otilde',\n\t    'OE',\n\t    'oe',\n\t    'endash',\n\t    'emdash',\n\t    'quotedblleft',\n\t    'quotedblright',\n\t    'quoteleft',\n\t    'quoteright',\n\t    'divide',\n\t    'lozenge',\n\t    'ydieresis',\n\t    'Ydieresis',\n\t    'fraction',\n\t    'currency',\n\t    'guilsinglleft',\n\t    'guilsinglright',\n\t    'fi',\n\t    'fl',\n\t    'daggerdbl',\n\t    'periodcentered',\n\t    'quotesinglbase',\n\t    'quotedblbase',\n\t    'perthousand',\n\t    'Acircumflex',\n\t    'Ecircumflex',\n\t    'Aacute',\n\t    'Edieresis',\n\t    'Egrave',\n\t    'Iacute',\n\t    'Icircumflex',\n\t    'Idieresis',\n\t    'Igrave',\n\t    'Oacute',\n\t    'Ocircumflex',\n\t    'apple',\n\t    'Ograve',\n\t    'Uacute',\n\t    'Ucircumflex',\n\t    'Ugrave',\n\t    'dotlessi',\n\t    'circumflex',\n\t    'tilde',\n\t    'macron',\n\t    'breve',\n\t    'dotaccent',\n\t    'ring',\n\t    'cedilla',\n\t    'hungarumlaut',\n\t    'ogonek',\n\t    'caron',\n\t    'Lslash',\n\t    'lslash',\n\t    'Scaron',\n\t    'scaron',\n\t    'Zcaron',\n\t    'zcaron',\n\t    'brokenbar',\n\t    'Eth',\n\t    'eth',\n\t    'Yacute',\n\t    'yacute',\n\t    'Thorn',\n\t    'thorn',\n\t    'minus',\n\t    'multiply',\n\t    'onesuperior',\n\t    'twosuperior',\n\t    'threesuperior',\n\t    'onehalf',\n\t    'onequarter',\n\t    'threequarters',\n\t    'franc',\n\t    'Gbreve',\n\t    'gbreve',\n\t    'Idotaccent',\n\t    'Scedilla',\n\t    'scedilla',\n\t    'Cacute',\n\t    'cacute',\n\t    'Ccaron',\n\t    'ccaron',\n\t    'dcroat'\n\t   ];\n\t   function adjustWidths(properties) {\n\t    if (!properties.fontMatrix) {\n\t     return;\n\t    }\n\t    if (properties.fontMatrix[0] === FONT_IDENTITY_MATRIX[0]) {\n\t     return;\n\t    }\n\t    var scale = 0.001 / properties.fontMatrix[0];\n\t    var glyphsWidths = properties.widths;\n\t    for (var glyph in glyphsWidths) {\n\t     glyphsWidths[glyph] *= scale;\n\t    }\n\t    properties.defaultWidth *= scale;\n\t   }\n\t   function adjustToUnicode(properties, builtInEncoding) {\n\t    if (properties.hasIncludedToUnicodeMap) {\n\t     return;\n\t    }\n\t    if (properties.hasEncoding) {\n\t     return;\n\t    }\n\t    if (builtInEncoding === properties.defaultEncoding) {\n\t     return;\n\t    }\n\t    if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n\t     return;\n\t    }\n\t    var toUnicode = [], glyphsUnicodeMap = getGlyphsUnicode();\n\t    for (var charCode in builtInEncoding) {\n\t     var glyphName = builtInEncoding[charCode];\n\t     var unicode = getUnicodeForGlyph(glyphName, glyphsUnicodeMap);\n\t     if (unicode !== -1) {\n\t      toUnicode[charCode] = String.fromCharCode(unicode);\n\t     }\n\t    }\n\t    properties.toUnicode.amend(toUnicode);\n\t   }\n\t   function getFontType(type, subtype) {\n\t    switch (type) {\n\t    case 'Type1':\n\t     return subtype === 'Type1C' ? FontType.TYPE1C : FontType.TYPE1;\n\t    case 'CIDFontType0':\n\t     return subtype === 'CIDFontType0C' ? FontType.CIDFONTTYPE0C : FontType.CIDFONTTYPE0;\n\t    case 'OpenType':\n\t     return FontType.OPENTYPE;\n\t    case 'TrueType':\n\t     return FontType.TRUETYPE;\n\t    case 'CIDFontType2':\n\t     return FontType.CIDFONTTYPE2;\n\t    case 'MMType1':\n\t     return FontType.MMTYPE1;\n\t    case 'Type0':\n\t     return FontType.TYPE0;\n\t    default:\n\t     return FontType.UNKNOWN;\n\t    }\n\t   }\n\t   function recoverGlyphName(name, glyphsUnicodeMap) {\n\t    if (glyphsUnicodeMap[name] !== undefined) {\n\t     return name;\n\t    }\n\t    var unicode = getUnicodeForGlyph(name, glyphsUnicodeMap);\n\t    if (unicode !== -1) {\n\t     for (var key in glyphsUnicodeMap) {\n\t      if (glyphsUnicodeMap[key] === unicode) {\n\t       return key;\n\t      }\n\t     }\n\t    }\n\t    info('Unable to recover a standard glyph name for: ' + name);\n\t    return name;\n\t   }\n\t   var Glyph = function GlyphClosure() {\n\t    function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n\t     this.fontChar = fontChar;\n\t     this.unicode = unicode;\n\t     this.accent = accent;\n\t     this.width = width;\n\t     this.vmetric = vmetric;\n\t     this.operatorListId = operatorListId;\n\t     this.isSpace = isSpace;\n\t     this.isInFont = isInFont;\n\t    }\n\t    Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n\t     return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n\t    };\n\t    return Glyph;\n\t   }();\n\t   var ToUnicodeMap = function ToUnicodeMapClosure() {\n\t    function ToUnicodeMap(cmap) {\n\t     this._map = cmap;\n\t    }\n\t    ToUnicodeMap.prototype = {\n\t     get length() {\n\t      return this._map.length;\n\t     },\n\t     forEach: function (callback) {\n\t      for (var charCode in this._map) {\n\t       callback(charCode, this._map[charCode].charCodeAt(0));\n\t      }\n\t     },\n\t     has: function (i) {\n\t      return this._map[i] !== undefined;\n\t     },\n\t     get: function (i) {\n\t      return this._map[i];\n\t     },\n\t     charCodeOf: function (v) {\n\t      return this._map.indexOf(v);\n\t     },\n\t     amend: function (map) {\n\t      for (var charCode in map) {\n\t       this._map[charCode] = map[charCode];\n\t      }\n\t     }\n\t    };\n\t    return ToUnicodeMap;\n\t   }();\n\t   var IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n\t    function IdentityToUnicodeMap(firstChar, lastChar) {\n\t     this.firstChar = firstChar;\n\t     this.lastChar = lastChar;\n\t    }\n\t    IdentityToUnicodeMap.prototype = {\n\t     get length() {\n\t      return this.lastChar + 1 - this.firstChar;\n\t     },\n\t     forEach: function (callback) {\n\t      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n\t       callback(i, i);\n\t      }\n\t     },\n\t     has: function (i) {\n\t      return this.firstChar <= i && i <= this.lastChar;\n\t     },\n\t     get: function (i) {\n\t      if (this.firstChar <= i && i <= this.lastChar) {\n\t       return String.fromCharCode(i);\n\t      }\n\t      return undefined;\n\t     },\n\t     charCodeOf: function (v) {\n\t      return isInt(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n\t     },\n\t     amend: function (map) {\n\t      error('Should not call amend()');\n\t     }\n\t    };\n\t    return IdentityToUnicodeMap;\n\t   }();\n\t   var OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n\t    function writeInt16(dest, offset, num) {\n\t     dest[offset] = num >> 8 & 0xFF;\n\t     dest[offset + 1] = num & 0xFF;\n\t    }\n\t    function writeInt32(dest, offset, num) {\n\t     dest[offset] = num >> 24 & 0xFF;\n\t     dest[offset + 1] = num >> 16 & 0xFF;\n\t     dest[offset + 2] = num >> 8 & 0xFF;\n\t     dest[offset + 3] = num & 0xFF;\n\t    }\n\t    function writeData(dest, offset, data) {\n\t     var i, ii;\n\t     if (data instanceof Uint8Array) {\n\t      dest.set(data, offset);\n\t     } else if (typeof data === 'string') {\n\t      for (i = 0, ii = data.length; i < ii; i++) {\n\t       dest[offset++] = data.charCodeAt(i) & 0xFF;\n\t      }\n\t     } else {\n\t      for (i = 0, ii = data.length; i < ii; i++) {\n\t       dest[offset++] = data[i] & 0xFF;\n\t      }\n\t     }\n\t    }\n\t    function OpenTypeFileBuilder(sfnt) {\n\t     this.sfnt = sfnt;\n\t     this.tables = Object.create(null);\n\t    }\n\t    OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n\t     var maxPower2 = 1, log2 = 0;\n\t     while ((maxPower2 ^ entriesCount) > maxPower2) {\n\t      maxPower2 <<= 1;\n\t      log2++;\n\t     }\n\t     var searchRange = maxPower2 * entrySize;\n\t     return {\n\t      range: searchRange,\n\t      entry: log2,\n\t      rangeShift: entrySize * entriesCount - searchRange\n\t     };\n\t    };\n\t    var OTF_HEADER_SIZE = 12;\n\t    var OTF_TABLE_ENTRY_SIZE = 16;\n\t    OpenTypeFileBuilder.prototype = {\n\t     toArray: function OpenTypeFileBuilder_toArray() {\n\t      var sfnt = this.sfnt;\n\t      var tables = this.tables;\n\t      var tablesNames = Object.keys(tables);\n\t      tablesNames.sort();\n\t      var numTables = tablesNames.length;\n\t      var i, j, jj, table, tableName;\n\t      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n\t      var tableOffsets = [offset];\n\t      for (i = 0; i < numTables; i++) {\n\t       table = tables[tablesNames[i]];\n\t       var paddedLength = (table.length + 3 & ~3) >>> 0;\n\t       offset += paddedLength;\n\t       tableOffsets.push(offset);\n\t      }\n\t      var file = new Uint8Array(offset);\n\t      for (i = 0; i < numTables; i++) {\n\t       table = tables[tablesNames[i]];\n\t       writeData(file, tableOffsets[i], table);\n\t      }\n\t      if (sfnt === 'true') {\n\t       sfnt = string32(0x00010000);\n\t      }\n\t      file[0] = sfnt.charCodeAt(0) & 0xFF;\n\t      file[1] = sfnt.charCodeAt(1) & 0xFF;\n\t      file[2] = sfnt.charCodeAt(2) & 0xFF;\n\t      file[3] = sfnt.charCodeAt(3) & 0xFF;\n\t      writeInt16(file, 4, numTables);\n\t      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n\t      writeInt16(file, 6, searchParams.range);\n\t      writeInt16(file, 8, searchParams.entry);\n\t      writeInt16(file, 10, searchParams.rangeShift);\n\t      offset = OTF_HEADER_SIZE;\n\t      for (i = 0; i < numTables; i++) {\n\t       tableName = tablesNames[i];\n\t       file[offset] = tableName.charCodeAt(0) & 0xFF;\n\t       file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n\t       file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n\t       file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n\t       var checksum = 0;\n\t       for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n\t        var quad = readUint32(file, j);\n\t        checksum = checksum + quad >>> 0;\n\t       }\n\t       writeInt32(file, offset + 4, checksum);\n\t       writeInt32(file, offset + 8, tableOffsets[i]);\n\t       writeInt32(file, offset + 12, tables[tableName].length);\n\t       offset += OTF_TABLE_ENTRY_SIZE;\n\t      }\n\t      return file;\n\t     },\n\t     addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n\t      if (tag in this.tables) {\n\t       throw new Error('Table ' + tag + ' already exists');\n\t      }\n\t      this.tables[tag] = data;\n\t     }\n\t    };\n\t    return OpenTypeFileBuilder;\n\t   }();\n\t   var ProblematicCharRanges = new Int32Array([\n\t    0x0000,\n\t    0x0020,\n\t    0x007F,\n\t    0x00A1,\n\t    0x00AD,\n\t    0x00AE,\n\t    0x0600,\n\t    0x0780,\n\t    0x08A0,\n\t    0x10A0,\n\t    0x1780,\n\t    0x1800,\n\t    0x1C00,\n\t    0x1C50,\n\t    0x2000,\n\t    0x2010,\n\t    0x2011,\n\t    0x2012,\n\t    0x2028,\n\t    0x2030,\n\t    0x205F,\n\t    0x2070,\n\t    0x25CC,\n\t    0x25CD,\n\t    0x3000,\n\t    0x3001,\n\t    0xAA60,\n\t    0xAA80,\n\t    0xFFF0,\n\t    0x10000\n\t   ]);\n\t   var Font = function FontClosure() {\n\t    function Font(name, file, properties) {\n\t     var charCode, glyphName, unicode;\n\t     this.name = name;\n\t     this.loadedName = properties.loadedName;\n\t     this.isType3Font = properties.isType3Font;\n\t     this.sizes = [];\n\t     this.missingFile = false;\n\t     this.glyphCache = Object.create(null);\n\t     var names = name.split('+');\n\t     names = names.length > 1 ? names[1] : names[0];\n\t     names = names.split(/[-,_]/g)[0];\n\t     this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n\t     this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n\t     this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n\t     var type = properties.type;\n\t     var subtype = properties.subtype;\n\t     this.type = type;\n\t     this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\n\t     this.differences = properties.differences;\n\t     this.widths = properties.widths;\n\t     this.defaultWidth = properties.defaultWidth;\n\t     this.composite = properties.composite;\n\t     this.wideChars = properties.wideChars;\n\t     this.cMap = properties.cMap;\n\t     this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n\t     this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n\t     this.fontMatrix = properties.fontMatrix;\n\t     this.bbox = properties.bbox;\n\t     this.toUnicode = properties.toUnicode;\n\t     this.toFontChar = [];\n\t     if (properties.type === 'Type3') {\n\t      for (charCode = 0; charCode < 256; charCode++) {\n\t       this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n\t      }\n\t      this.fontType = FontType.TYPE3;\n\t      return;\n\t     }\n\t     this.cidEncoding = properties.cidEncoding;\n\t     this.vertical = properties.vertical;\n\t     if (this.vertical) {\n\t      this.vmetrics = properties.vmetrics;\n\t      this.defaultVMetrics = properties.defaultVMetrics;\n\t     }\n\t     var glyphsUnicodeMap;\n\t     if (!file || file.isEmpty) {\n\t      if (file) {\n\t       warn('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n\t      }\n\t      this.missingFile = true;\n\t      var fontName = name.replace(/[,_]/g, '-');\n\t      var stdFontMap = getStdFontMap(), nonStdFontMap = getNonStdFontMap();\n\t      var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n\t      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n\t      this.bold = fontName.search(/bold/gi) !== -1;\n\t      this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n\t      this.black = name.search(/Black/g) !== -1;\n\t      this.remeasure = Object.keys(this.widths).length > 0;\n\t      if (isStandardFont && type === 'CIDFontType2' && properties.cidEncoding.indexOf('Identity-') === 0) {\n\t       var GlyphMapForStandardFonts = getGlyphMapForStandardFonts();\n\t       var map = [];\n\t       for (charCode in GlyphMapForStandardFonts) {\n\t        map[+charCode] = GlyphMapForStandardFonts[charCode];\n\t       }\n\t       if (/Arial-?Black/i.test(name)) {\n\t        var SupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack();\n\t        for (charCode in SupplementalGlyphMapForArialBlack) {\n\t         map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\n\t        }\n\t       }\n\t       var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n\t       if (!isIdentityUnicode) {\n\t        this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n\t         map[+charCode] = unicodeCharCode;\n\t        });\n\t       }\n\t       this.toFontChar = map;\n\t       this.toUnicode = new ToUnicodeMap(map);\n\t      } else if (/Symbol/i.test(fontName)) {\n\t       this.toFontChar = buildToFontChar(SymbolSetEncoding, getGlyphsUnicode(), properties.differences);\n\t      } else if (/Dingbats/i.test(fontName)) {\n\t       if (/Wingdings/i.test(name)) {\n\t        warn('Non-embedded Wingdings font, falling back to ZapfDingbats.');\n\t       }\n\t       this.toFontChar = buildToFontChar(ZapfDingbatsEncoding, getDingbatsGlyphsUnicode(), properties.differences);\n\t      } else if (isStandardFont) {\n\t       this.toFontChar = buildToFontChar(properties.defaultEncoding, getGlyphsUnicode(), properties.differences);\n\t      } else {\n\t       glyphsUnicodeMap = getGlyphsUnicode();\n\t       this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n\t        if (!this.composite) {\n\t         glyphName = properties.differences[charCode] || properties.defaultEncoding[charCode];\n\t         unicode = getUnicodeForGlyph(glyphName, glyphsUnicodeMap);\n\t         if (unicode !== -1) {\n\t          unicodeCharCode = unicode;\n\t         }\n\t        }\n\t        this.toFontChar[charCode] = unicodeCharCode;\n\t       }.bind(this));\n\t      }\n\t      this.loadedName = fontName.split('-')[0];\n\t      this.loading = false;\n\t      this.fontType = getFontType(type, subtype);\n\t      return;\n\t     }\n\t     if (subtype === 'Type1C') {\n\t      if (type !== 'Type1' && type !== 'MMType1') {\n\t       if (isTrueTypeFile(file)) {\n\t        subtype = 'TrueType';\n\t       } else {\n\t        type = 'Type1';\n\t       }\n\t      } else if (isOpenTypeFile(file)) {\n\t       type = subtype = 'OpenType';\n\t      }\n\t     }\n\t     if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n\t      type = 'CIDFontType0';\n\t     }\n\t     if (subtype === 'OpenType') {\n\t      type = 'OpenType';\n\t     }\n\t     if (type === 'CIDFontType0') {\n\t      if (isType1File(file)) {\n\t       subtype = 'CIDFontType0';\n\t      } else if (isOpenTypeFile(file)) {\n\t       type = subtype = 'OpenType';\n\t      } else {\n\t       subtype = 'CIDFontType0C';\n\t      }\n\t     }\n\t     var data;\n\t     switch (type) {\n\t     case 'MMType1':\n\t      info('MMType1 font (' + name + '), falling back to Type1.');\n\t     case 'Type1':\n\t     case 'CIDFontType0':\n\t      this.mimetype = 'font/opentype';\n\t      var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n\t      adjustWidths(properties);\n\t      data = this.convert(name, cff, properties);\n\t      break;\n\t     case 'OpenType':\n\t     case 'TrueType':\n\t     case 'CIDFontType2':\n\t      this.mimetype = 'font/opentype';\n\t      data = this.checkAndRepair(name, file, properties);\n\t      if (this.isOpenType) {\n\t       adjustWidths(properties);\n\t       type = 'OpenType';\n\t      }\n\t      break;\n\t     default:\n\t      error('Font ' + type + ' is not supported');\n\t      break;\n\t     }\n\t     this.data = data;\n\t     this.fontType = getFontType(type, subtype);\n\t     this.fontMatrix = properties.fontMatrix;\n\t     this.widths = properties.widths;\n\t     this.defaultWidth = properties.defaultWidth;\n\t     this.toUnicode = properties.toUnicode;\n\t     this.encoding = properties.baseEncoding;\n\t     this.seacMap = properties.seacMap;\n\t     this.loading = true;\n\t    }\n\t    Font.getFontID = function () {\n\t     var ID = 1;\n\t     return function Font_getFontID() {\n\t      return String(ID++);\n\t     };\n\t    }();\n\t    function int16(b0, b1) {\n\t     return (b0 << 8) + b1;\n\t    }\n\t    function signedInt16(b0, b1) {\n\t     var value = (b0 << 8) + b1;\n\t     return value & 1 << 15 ? value - 0x10000 : value;\n\t    }\n\t    function int32(b0, b1, b2, b3) {\n\t     return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n\t    }\n\t    function string16(value) {\n\t     return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n\t    }\n\t    function safeString16(value) {\n\t     value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\n\t     return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n\t    }\n\t    function isTrueTypeFile(file) {\n\t     var header = file.peekBytes(4);\n\t     return readUint32(header, 0) === 0x00010000;\n\t    }\n\t    function isOpenTypeFile(file) {\n\t     var header = file.peekBytes(4);\n\t     return bytesToString(header) === 'OTTO';\n\t    }\n\t    function isType1File(file) {\n\t     var header = file.peekBytes(2);\n\t     if (header[0] === 0x25 && header[1] === 0x21) {\n\t      return true;\n\t     }\n\t     if (header[0] === 0x80 && header[1] === 0x01) {\n\t      return true;\n\t     }\n\t     return false;\n\t    }\n\t    function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n\t     var toFontChar = [], unicode;\n\t     for (var i = 0, ii = encoding.length; i < ii; i++) {\n\t      unicode = getUnicodeForGlyph(encoding[i], glyphsUnicodeMap);\n\t      if (unicode !== -1) {\n\t       toFontChar[i] = unicode;\n\t      }\n\t     }\n\t     for (var charCode in differences) {\n\t      unicode = getUnicodeForGlyph(differences[charCode], glyphsUnicodeMap);\n\t      if (unicode !== -1) {\n\t       toFontChar[+charCode] = unicode;\n\t      }\n\t     }\n\t     return toFontChar;\n\t    }\n\t    function isProblematicUnicodeLocation(code) {\n\t     var i = 0, j = ProblematicCharRanges.length - 1;\n\t     while (i < j) {\n\t      var c = i + j + 1 >> 1;\n\t      if (code < ProblematicCharRanges[c]) {\n\t       j = c - 1;\n\t      } else {\n\t       i = c;\n\t      }\n\t     }\n\t     return !(i & 1);\n\t    }\n\t    function adjustMapping(charCodeToGlyphId, properties) {\n\t     var toUnicode = properties.toUnicode;\n\t     var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n\t     var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\n\t     var newMap = Object.create(null);\n\t     var toFontChar = [];\n\t     var usedFontCharCodes = [];\n\t     var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n\t     for (var originalCharCode in charCodeToGlyphId) {\n\t      originalCharCode |= 0;\n\t      var glyphId = charCodeToGlyphId[originalCharCode];\n\t      var fontCharCode = originalCharCode;\n\t      var hasUnicodeValue = false;\n\t      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n\t       hasUnicodeValue = true;\n\t       var unicode = toUnicode.get(fontCharCode);\n\t       if (unicode.length === 1) {\n\t        fontCharCode = unicode.charCodeAt(0);\n\t       }\n\t      }\n\t      if ((usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) && nextAvailableFontCharCode <= PRIVATE_USE_OFFSET_END) {\n\t       do {\n\t        fontCharCode = nextAvailableFontCharCode++;\n\t        if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n\t         fontCharCode = 0xF020;\n\t         nextAvailableFontCharCode = fontCharCode + 1;\n\t        }\n\t       } while (usedFontCharCodes[fontCharCode] !== undefined && nextAvailableFontCharCode <= PRIVATE_USE_OFFSET_END);\n\t      }\n\t      newMap[fontCharCode] = glyphId;\n\t      toFontChar[originalCharCode] = fontCharCode;\n\t      usedFontCharCodes[fontCharCode] = true;\n\t     }\n\t     return {\n\t      toFontChar: toFontChar,\n\t      charCodeToGlyphId: newMap,\n\t      nextAvailableFontCharCode: nextAvailableFontCharCode\n\t     };\n\t    }\n\t    function getRanges(glyphs, numGlyphs) {\n\t     var codes = [];\n\t     for (var charCode in glyphs) {\n\t      if (glyphs[charCode] >= numGlyphs) {\n\t       continue;\n\t      }\n\t      codes.push({\n\t       fontCharCode: charCode | 0,\n\t       glyphId: glyphs[charCode]\n\t      });\n\t     }\n\t     codes.sort(function fontGetRangesSort(a, b) {\n\t      return a.fontCharCode - b.fontCharCode;\n\t     });\n\t     var ranges = [];\n\t     var length = codes.length;\n\t     for (var n = 0; n < length;) {\n\t      var start = codes[n].fontCharCode;\n\t      var codeIndices = [codes[n].glyphId];\n\t      ++n;\n\t      var end = start;\n\t      while (n < length && end + 1 === codes[n].fontCharCode) {\n\t       codeIndices.push(codes[n].glyphId);\n\t       ++end;\n\t       ++n;\n\t       if (end === 0xFFFF) {\n\t        break;\n\t       }\n\t      }\n\t      ranges.push([\n\t       start,\n\t       end,\n\t       codeIndices\n\t      ]);\n\t     }\n\t     return ranges;\n\t    }\n\t    function createCmapTable(glyphs, numGlyphs) {\n\t     var ranges = getRanges(glyphs, numGlyphs);\n\t     var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n\t     var cmap = '\\x00\\x00' + string16(numTables) + '\\x00\\x03' + '\\x00\\x01' + string32(4 + numTables * 8);\n\t     var i, ii, j, jj;\n\t     for (i = ranges.length - 1; i >= 0; --i) {\n\t      if (ranges[i][0] <= 0xFFFF) {\n\t       break;\n\t      }\n\t     }\n\t     var bmpLength = i + 1;\n\t     if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n\t      ranges[i][1] = 0xFFFE;\n\t     }\n\t     var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n\t     var segCount = bmpLength + trailingRangesCount;\n\t     var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n\t     var startCount = '';\n\t     var endCount = '';\n\t     var idDeltas = '';\n\t     var idRangeOffsets = '';\n\t     var glyphsIds = '';\n\t     var bias = 0;\n\t     var range, start, end, codes;\n\t     for (i = 0, ii = bmpLength; i < ii; i++) {\n\t      range = ranges[i];\n\t      start = range[0];\n\t      end = range[1];\n\t      startCount += string16(start);\n\t      endCount += string16(end);\n\t      codes = range[2];\n\t      var contiguous = true;\n\t      for (j = 1, jj = codes.length; j < jj; ++j) {\n\t       if (codes[j] !== codes[j - 1] + 1) {\n\t        contiguous = false;\n\t        break;\n\t       }\n\t      }\n\t      if (!contiguous) {\n\t       var offset = (segCount - i) * 2 + bias * 2;\n\t       bias += end - start + 1;\n\t       idDeltas += string16(0);\n\t       idRangeOffsets += string16(offset);\n\t       for (j = 0, jj = codes.length; j < jj; ++j) {\n\t        glyphsIds += string16(codes[j]);\n\t       }\n\t      } else {\n\t       var startCode = codes[0];\n\t       idDeltas += string16(startCode - start & 0xFFFF);\n\t       idRangeOffsets += string16(0);\n\t      }\n\t     }\n\t     if (trailingRangesCount > 0) {\n\t      endCount += '\\xFF\\xFF';\n\t      startCount += '\\xFF\\xFF';\n\t      idDeltas += '\\x00\\x01';\n\t      idRangeOffsets += '\\x00\\x00';\n\t     }\n\t     var format314 = '\\x00\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\x00\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\n\t     var format31012 = '';\n\t     var header31012 = '';\n\t     if (numTables > 1) {\n\t      cmap += '\\x00\\x03' + '\\x00\\x0A' + string32(4 + numTables * 8 + 4 + format314.length);\n\t      format31012 = '';\n\t      for (i = 0, ii = ranges.length; i < ii; i++) {\n\t       range = ranges[i];\n\t       start = range[0];\n\t       codes = range[2];\n\t       var code = codes[0];\n\t       for (j = 1, jj = codes.length; j < jj; ++j) {\n\t        if (codes[j] !== codes[j - 1] + 1) {\n\t         end = range[0] + j - 1;\n\t         format31012 += string32(start) + string32(end) + string32(code);\n\t         start = end + 1;\n\t         code = codes[j];\n\t        }\n\t       }\n\t       format31012 += string32(start) + string32(range[1]) + string32(code);\n\t      }\n\t      header31012 = '\\x00\\x0C' + '\\x00\\x00' + string32(format31012.length + 16) + '\\x00\\x00\\x00\\x00' + string32(format31012.length / 12);\n\t     }\n\t     return cmap + '\\x00\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\n\t    }\n\t    function validateOS2Table(os2) {\n\t     var stream = new Stream(os2.data);\n\t     var version = stream.getUint16();\n\t     stream.getBytes(60);\n\t     var selection = stream.getUint16();\n\t     if (version < 4 && selection & 0x0300) {\n\t      return false;\n\t     }\n\t     var firstChar = stream.getUint16();\n\t     var lastChar = stream.getUint16();\n\t     if (firstChar > lastChar) {\n\t      return false;\n\t     }\n\t     stream.getBytes(6);\n\t     var usWinAscent = stream.getUint16();\n\t     if (usWinAscent === 0) {\n\t      return false;\n\t     }\n\t     os2.data[8] = os2.data[9] = 0;\n\t     return true;\n\t    }\n\t    function createOS2Table(properties, charstrings, override) {\n\t     override = override || {\n\t      unitsPerEm: 0,\n\t      yMax: 0,\n\t      yMin: 0,\n\t      ascent: 0,\n\t      descent: 0\n\t     };\n\t     var ulUnicodeRange1 = 0;\n\t     var ulUnicodeRange2 = 0;\n\t     var ulUnicodeRange3 = 0;\n\t     var ulUnicodeRange4 = 0;\n\t     var firstCharIndex = null;\n\t     var lastCharIndex = 0;\n\t     if (charstrings) {\n\t      for (var code in charstrings) {\n\t       code |= 0;\n\t       if (firstCharIndex > code || !firstCharIndex) {\n\t        firstCharIndex = code;\n\t       }\n\t       if (lastCharIndex < code) {\n\t        lastCharIndex = code;\n\t       }\n\t       var position = getUnicodeRangeFor(code);\n\t       if (position < 32) {\n\t        ulUnicodeRange1 |= 1 << position;\n\t       } else if (position < 64) {\n\t        ulUnicodeRange2 |= 1 << position - 32;\n\t       } else if (position < 96) {\n\t        ulUnicodeRange3 |= 1 << position - 64;\n\t       } else if (position < 123) {\n\t        ulUnicodeRange4 |= 1 << position - 96;\n\t       } else {\n\t        error('Unicode ranges Bits > 123 are reserved for internal usage');\n\t       }\n\t      }\n\t     } else {\n\t      firstCharIndex = 0;\n\t      lastCharIndex = 255;\n\t     }\n\t     var bbox = properties.bbox || [\n\t      0,\n\t      0,\n\t      0,\n\t      0\n\t     ];\n\t     var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || FONT_IDENTITY_MATRIX)[0];\n\t     var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n\t     var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n\t     var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n\t     if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n\t      typoDescent = -typoDescent;\n\t     }\n\t     var winAscent = override.yMax || typoAscent;\n\t     var winDescent = -override.yMin || -typoDescent;\n\t     return '\\x00\\x03' + '\\x02\\x24' + '\\x01\\xF4' + '\\x00\\x05' + '\\x00\\x00' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x00\\x8C' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x01\\xDF' + '\\x00\\x31' + '\\x01\\x02' + '\\x00\\x00' + '\\x00\\x00\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\x00\\x00\\x00\\x00\\x00\\x00' + string32(ulUnicodeRange1) + string32(ulUnicodeRange2) + string32(ulUnicodeRange3) + string32(ulUnicodeRange4) + '\\x2A\\x32\\x31\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\x00\\x64' + string16(winAscent) + string16(winDescent) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\x00\\x03';\n\t    }\n\t    function createPostTable(properties) {\n\t     var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n\t     return '\\x00\\x03\\x00\\x00' + string32(angle) + '\\x00\\x00' + '\\x00\\x00' + string32(properties.fixedPitch) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00';\n\t    }\n\t    function createNameTable(name, proto) {\n\t     if (!proto) {\n\t      proto = [\n\t       [],\n\t       []\n\t      ];\n\t     }\n\t     var strings = [\n\t      proto[0][0] || 'Original licence',\n\t      proto[0][1] || name,\n\t      proto[0][2] || 'Unknown',\n\t      proto[0][3] || 'uniqueID',\n\t      proto[0][4] || name,\n\t      proto[0][5] || 'Version 0.11',\n\t      proto[0][6] || '',\n\t      proto[0][7] || 'Unknown',\n\t      proto[0][8] || 'Unknown',\n\t      proto[0][9] || 'Unknown'\n\t     ];\n\t     var stringsUnicode = [];\n\t     var i, ii, j, jj, str;\n\t     for (i = 0, ii = strings.length; i < ii; i++) {\n\t      str = proto[1][i] || strings[i];\n\t      var strBufUnicode = [];\n\t      for (j = 0, jj = str.length; j < jj; j++) {\n\t       strBufUnicode.push(string16(str.charCodeAt(j)));\n\t      }\n\t      stringsUnicode.push(strBufUnicode.join(''));\n\t     }\n\t     var names = [\n\t      strings,\n\t      stringsUnicode\n\t     ];\n\t     var platforms = [\n\t      '\\x00\\x01',\n\t      '\\x00\\x03'\n\t     ];\n\t     var encodings = [\n\t      '\\x00\\x00',\n\t      '\\x00\\x01'\n\t     ];\n\t     var languages = [\n\t      '\\x00\\x00',\n\t      '\\x04\\x09'\n\t     ];\n\t     var namesRecordCount = strings.length * platforms.length;\n\t     var nameTable = '\\x00\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n\t     var strOffset = 0;\n\t     for (i = 0, ii = platforms.length; i < ii; i++) {\n\t      var strs = names[i];\n\t      for (j = 0, jj = strs.length; j < jj; j++) {\n\t       str = strs[j];\n\t       var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n\t       nameTable += nameRecord;\n\t       strOffset += str.length;\n\t      }\n\t     }\n\t     nameTable += strings.join('') + stringsUnicode.join('');\n\t     return nameTable;\n\t    }\n\t    Font.prototype = {\n\t     name: null,\n\t     font: null,\n\t     mimetype: null,\n\t     encoding: null,\n\t     get renderer() {\n\t      var renderer = FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n\t      return shadow(this, 'renderer', renderer);\n\t     },\n\t     exportData: function Font_exportData() {\n\t      var data = {};\n\t      for (var i in this) {\n\t       if (this.hasOwnProperty(i)) {\n\t        data[i] = this[i];\n\t       }\n\t      }\n\t      return data;\n\t     },\n\t     checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n\t      function readTableEntry(file) {\n\t       var tag = bytesToString(file.getBytes(4));\n\t       var checksum = file.getInt32() >>> 0;\n\t       var offset = file.getInt32() >>> 0;\n\t       var length = file.getInt32() >>> 0;\n\t       var previousPosition = file.pos;\n\t       file.pos = file.start ? file.start : 0;\n\t       file.skip(offset);\n\t       var data = file.getBytes(length);\n\t       file.pos = previousPosition;\n\t       if (tag === 'head') {\n\t        data[8] = data[9] = data[10] = data[11] = 0;\n\t        data[17] |= 0x20;\n\t       }\n\t       return {\n\t        tag: tag,\n\t        checksum: checksum,\n\t        length: length,\n\t        offset: offset,\n\t        data: data\n\t       };\n\t      }\n\t      function readOpenTypeHeader(ttf) {\n\t       return {\n\t        version: bytesToString(ttf.getBytes(4)),\n\t        numTables: ttf.getUint16(),\n\t        searchRange: ttf.getUint16(),\n\t        entrySelector: ttf.getUint16(),\n\t        rangeShift: ttf.getUint16()\n\t       };\n\t      }\n\t      function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\n\t       if (!cmap) {\n\t        warn('No cmap table available.');\n\t        return {\n\t         platformId: -1,\n\t         encodingId: -1,\n\t         mappings: [],\n\t         hasShortCmap: false\n\t        };\n\t       }\n\t       var segment;\n\t       var start = (font.start ? font.start : 0) + cmap.offset;\n\t       font.pos = start;\n\t       var version = font.getUint16();\n\t       var numTables = font.getUint16();\n\t       var potentialTable;\n\t       var canBreak = false;\n\t       for (var i = 0; i < numTables; i++) {\n\t        var platformId = font.getUint16();\n\t        var encodingId = font.getUint16();\n\t        var offset = font.getInt32() >>> 0;\n\t        var useTable = false;\n\t        if (platformId === 0 && encodingId === 0) {\n\t         useTable = true;\n\t        } else if (platformId === 1 && encodingId === 0) {\n\t         useTable = true;\n\t        } else if (platformId === 3 && encodingId === 1 && (!isSymbolicFont && hasEncoding || !potentialTable)) {\n\t         useTable = true;\n\t         if (!isSymbolicFont) {\n\t          canBreak = true;\n\t         }\n\t        } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n\t         useTable = true;\n\t         canBreak = true;\n\t        }\n\t        if (useTable) {\n\t         potentialTable = {\n\t          platformId: platformId,\n\t          encodingId: encodingId,\n\t          offset: offset\n\t         };\n\t        }\n\t        if (canBreak) {\n\t         break;\n\t        }\n\t       }\n\t       if (potentialTable) {\n\t        font.pos = start + potentialTable.offset;\n\t       }\n\t       if (!potentialTable || font.peekByte() === -1) {\n\t        warn('Could not find a preferred cmap table.');\n\t        return {\n\t         platformId: -1,\n\t         encodingId: -1,\n\t         mappings: [],\n\t         hasShortCmap: false\n\t        };\n\t       }\n\t       var format = font.getUint16();\n\t       var length = font.getUint16();\n\t       var language = font.getUint16();\n\t       var hasShortCmap = false;\n\t       var mappings = [];\n\t       var j, glyphId;\n\t       if (format === 0) {\n\t        for (j = 0; j < 256; j++) {\n\t         var index = font.getByte();\n\t         if (!index) {\n\t          continue;\n\t         }\n\t         mappings.push({\n\t          charCode: j,\n\t          glyphId: index\n\t         });\n\t        }\n\t        hasShortCmap = true;\n\t       } else if (format === 4) {\n\t        var segCount = font.getUint16() >> 1;\n\t        font.getBytes(6);\n\t        var segIndex, segments = [];\n\t        for (segIndex = 0; segIndex < segCount; segIndex++) {\n\t         segments.push({ end: font.getUint16() });\n\t        }\n\t        font.getUint16();\n\t        for (segIndex = 0; segIndex < segCount; segIndex++) {\n\t         segments[segIndex].start = font.getUint16();\n\t        }\n\t        for (segIndex = 0; segIndex < segCount; segIndex++) {\n\t         segments[segIndex].delta = font.getUint16();\n\t        }\n\t        var offsetsCount = 0;\n\t        for (segIndex = 0; segIndex < segCount; segIndex++) {\n\t         segment = segments[segIndex];\n\t         var rangeOffset = font.getUint16();\n\t         if (!rangeOffset) {\n\t          segment.offsetIndex = -1;\n\t          continue;\n\t         }\n\t         var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n\t         segment.offsetIndex = offsetIndex;\n\t         offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n\t        }\n\t        var offsets = [];\n\t        for (j = 0; j < offsetsCount; j++) {\n\t         offsets.push(font.getUint16());\n\t        }\n\t        for (segIndex = 0; segIndex < segCount; segIndex++) {\n\t         segment = segments[segIndex];\n\t         start = segment.start;\n\t         var end = segment.end;\n\t         var delta = segment.delta;\n\t         offsetIndex = segment.offsetIndex;\n\t         for (j = start; j <= end; j++) {\n\t          if (j === 0xFFFF) {\n\t           continue;\n\t          }\n\t          glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n\t          glyphId = glyphId + delta & 0xFFFF;\n\t          if (glyphId === 0) {\n\t           continue;\n\t          }\n\t          mappings.push({\n\t           charCode: j,\n\t           glyphId: glyphId\n\t          });\n\t         }\n\t        }\n\t       } else if (format === 6) {\n\t        var firstCode = font.getUint16();\n\t        var entryCount = font.getUint16();\n\t        for (j = 0; j < entryCount; j++) {\n\t         glyphId = font.getUint16();\n\t         var charCode = firstCode + j;\n\t         mappings.push({\n\t          charCode: charCode,\n\t          glyphId: glyphId\n\t         });\n\t        }\n\t       } else {\n\t        warn('cmap table has unsupported format: ' + format);\n\t        return {\n\t         platformId: -1,\n\t         encodingId: -1,\n\t         mappings: [],\n\t         hasShortCmap: false\n\t        };\n\t       }\n\t       mappings.sort(function (a, b) {\n\t        return a.charCode - b.charCode;\n\t       });\n\t       for (i = 1; i < mappings.length; i++) {\n\t        if (mappings[i - 1].charCode === mappings[i].charCode) {\n\t         mappings.splice(i, 1);\n\t         i--;\n\t        }\n\t       }\n\t       return {\n\t        platformId: potentialTable.platformId,\n\t        encodingId: potentialTable.encodingId,\n\t        mappings: mappings,\n\t        hasShortCmap: hasShortCmap\n\t       };\n\t      }\n\t      function sanitizeMetrics(font, header, metrics, numGlyphs) {\n\t       if (!header) {\n\t        if (metrics) {\n\t         metrics.data = null;\n\t        }\n\t        return;\n\t       }\n\t       font.pos = (font.start ? font.start : 0) + header.offset;\n\t       font.pos += header.length - 2;\n\t       var numOfMetrics = font.getUint16();\n\t       if (numOfMetrics > numGlyphs) {\n\t        info('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\n\t        numOfMetrics = numGlyphs;\n\t        header.data[34] = (numOfMetrics & 0xff00) >> 8;\n\t        header.data[35] = numOfMetrics & 0x00ff;\n\t       }\n\t       var numOfSidebearings = numGlyphs - numOfMetrics;\n\t       var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n\t       if (numMissing > 0) {\n\t        var entries = new Uint8Array(metrics.length + numMissing * 2);\n\t        entries.set(metrics.data);\n\t        metrics.data = entries;\n\t       }\n\t      }\n\t      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n\t       if (sourceEnd - sourceStart <= 12) {\n\t        return 0;\n\t       }\n\t       var glyf = source.subarray(sourceStart, sourceEnd);\n\t       var contoursCount = glyf[0] << 8 | glyf[1];\n\t       if (contoursCount & 0x8000) {\n\t        dest.set(glyf, destStart);\n\t        return glyf.length;\n\t       }\n\t       var i, j = 10, flagsCount = 0;\n\t       for (i = 0; i < contoursCount; i++) {\n\t        var endPoint = glyf[j] << 8 | glyf[j + 1];\n\t        flagsCount = endPoint + 1;\n\t        j += 2;\n\t       }\n\t       var instructionsStart = j;\n\t       var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n\t       j += 2 + instructionsLength;\n\t       var instructionsEnd = j;\n\t       var coordinatesLength = 0;\n\t       for (i = 0; i < flagsCount; i++) {\n\t        var flag = glyf[j++];\n\t        if (flag & 0xC0) {\n\t         glyf[j - 1] = flag & 0x3F;\n\t        }\n\t        var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\n\t        coordinatesLength += xyLength;\n\t        if (flag & 8) {\n\t         var repeat = glyf[j++];\n\t         i += repeat;\n\t         coordinatesLength += repeat * xyLength;\n\t        }\n\t       }\n\t       if (coordinatesLength === 0) {\n\t        return 0;\n\t       }\n\t       var glyphDataLength = j + coordinatesLength;\n\t       if (glyphDataLength > glyf.length) {\n\t        return 0;\n\t       }\n\t       if (!hintsValid && instructionsLength > 0) {\n\t        dest.set(glyf.subarray(0, instructionsStart), destStart);\n\t        dest.set([\n\t         0,\n\t         0\n\t        ], destStart + instructionsStart);\n\t        dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n\t        glyphDataLength -= instructionsLength;\n\t        if (glyf.length - glyphDataLength > 3) {\n\t         glyphDataLength = glyphDataLength + 3 & ~3;\n\t        }\n\t        return glyphDataLength;\n\t       }\n\t       if (glyf.length - glyphDataLength > 3) {\n\t        glyphDataLength = glyphDataLength + 3 & ~3;\n\t        dest.set(glyf.subarray(0, glyphDataLength), destStart);\n\t        return glyphDataLength;\n\t       }\n\t       dest.set(glyf, destStart);\n\t       return glyf.length;\n\t      }\n\t      function sanitizeHead(head, numGlyphs, locaLength) {\n\t       var data = head.data;\n\t       var version = int32(data[0], data[1], data[2], data[3]);\n\t       if (version >> 16 !== 1) {\n\t        info('Attempting to fix invalid version in head table: ' + version);\n\t        data[0] = 0;\n\t        data[1] = 1;\n\t        data[2] = 0;\n\t        data[3] = 0;\n\t       }\n\t       var indexToLocFormat = int16(data[50], data[51]);\n\t       if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n\t        info('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\n\t        var numGlyphsPlusOne = numGlyphs + 1;\n\t        if (locaLength === numGlyphsPlusOne << 1) {\n\t         data[50] = 0;\n\t         data[51] = 0;\n\t        } else if (locaLength === numGlyphsPlusOne << 2) {\n\t         data[50] = 0;\n\t         data[51] = 1;\n\t        } else {\n\t         warn('Could not fix indexToLocFormat: ' + indexToLocFormat);\n\t        }\n\t       }\n\t      }\n\t      function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry) {\n\t       var itemSize, itemDecode, itemEncode;\n\t       if (isGlyphLocationsLong) {\n\t        itemSize = 4;\n\t        itemDecode = function fontItemDecodeLong(data, offset) {\n\t         return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n\t        };\n\t        itemEncode = function fontItemEncodeLong(data, offset, value) {\n\t         data[offset] = value >>> 24 & 0xFF;\n\t         data[offset + 1] = value >> 16 & 0xFF;\n\t         data[offset + 2] = value >> 8 & 0xFF;\n\t         data[offset + 3] = value & 0xFF;\n\t        };\n\t       } else {\n\t        itemSize = 2;\n\t        itemDecode = function fontItemDecode(data, offset) {\n\t         return data[offset] << 9 | data[offset + 1] << 1;\n\t        };\n\t        itemEncode = function fontItemEncode(data, offset, value) {\n\t         data[offset] = value >> 9 & 0xFF;\n\t         data[offset + 1] = value >> 1 & 0xFF;\n\t        };\n\t       }\n\t       var locaData = loca.data;\n\t       var locaDataSize = itemSize * (1 + numGlyphs);\n\t       if (locaData.length !== locaDataSize) {\n\t        locaData = new Uint8Array(locaDataSize);\n\t        locaData.set(loca.data.subarray(0, locaDataSize));\n\t        loca.data = locaData;\n\t       }\n\t       var oldGlyfData = glyf.data;\n\t       var oldGlyfDataLength = oldGlyfData.length;\n\t       var newGlyfData = new Uint8Array(oldGlyfDataLength);\n\t       var startOffset = itemDecode(locaData, 0);\n\t       var writeOffset = 0;\n\t       var missingGlyphData = Object.create(null);\n\t       itemEncode(locaData, 0, writeOffset);\n\t       var i, j;\n\t       for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n\t        var endOffset = itemDecode(locaData, j);\n\t        if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\n\t         endOffset = oldGlyfDataLength;\n\t        }\n\t        if (endOffset > oldGlyfDataLength) {\n\t         itemEncode(locaData, j, writeOffset);\n\t         startOffset = endOffset;\n\t         continue;\n\t        }\n\t        if (startOffset === endOffset) {\n\t         missingGlyphData[i] = true;\n\t        }\n\t        var newLength = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\n\t        writeOffset += newLength;\n\t        itemEncode(locaData, j, writeOffset);\n\t        startOffset = endOffset;\n\t       }\n\t       if (writeOffset === 0) {\n\t        var simpleGlyph = new Uint8Array([\n\t         0,\n\t         1,\n\t         0,\n\t         0,\n\t         0,\n\t         0,\n\t         0,\n\t         0,\n\t         0,\n\t         0,\n\t         0,\n\t         0,\n\t         0,\n\t         0,\n\t         49,\n\t         0\n\t        ]);\n\t        for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n\t         itemEncode(locaData, j, simpleGlyph.length);\n\t        }\n\t        glyf.data = simpleGlyph;\n\t        return missingGlyphData;\n\t       }\n\t       if (dupFirstEntry) {\n\t        var firstEntryLength = itemDecode(locaData, itemSize);\n\t        if (newGlyfData.length > firstEntryLength + writeOffset) {\n\t         glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n\t        } else {\n\t         glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n\t         glyf.data.set(newGlyfData.subarray(0, writeOffset));\n\t        }\n\t        glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n\t        itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n\t       } else {\n\t        glyf.data = newGlyfData.subarray(0, writeOffset);\n\t       }\n\t       return missingGlyphData;\n\t      }\n\t      function readPostScriptTable(post, properties, maxpNumGlyphs) {\n\t       var start = (font.start ? font.start : 0) + post.offset;\n\t       font.pos = start;\n\t       var length = post.length, end = start + length;\n\t       var version = font.getInt32();\n\t       font.getBytes(28);\n\t       var glyphNames;\n\t       var valid = true;\n\t       var i;\n\t       switch (version) {\n\t       case 0x00010000:\n\t        glyphNames = MacStandardGlyphOrdering;\n\t        break;\n\t       case 0x00020000:\n\t        var numGlyphs = font.getUint16();\n\t        if (numGlyphs !== maxpNumGlyphs) {\n\t         valid = false;\n\t         break;\n\t        }\n\t        var glyphNameIndexes = [];\n\t        for (i = 0; i < numGlyphs; ++i) {\n\t         var index = font.getUint16();\n\t         if (index >= 32768) {\n\t          valid = false;\n\t          break;\n\t         }\n\t         glyphNameIndexes.push(index);\n\t        }\n\t        if (!valid) {\n\t         break;\n\t        }\n\t        var customNames = [];\n\t        var strBuf = [];\n\t        while (font.pos < end) {\n\t         var stringLength = font.getByte();\n\t         strBuf.length = stringLength;\n\t         for (i = 0; i < stringLength; ++i) {\n\t          strBuf[i] = String.fromCharCode(font.getByte());\n\t         }\n\t         customNames.push(strBuf.join(''));\n\t        }\n\t        glyphNames = [];\n\t        for (i = 0; i < numGlyphs; ++i) {\n\t         var j = glyphNameIndexes[i];\n\t         if (j < 258) {\n\t          glyphNames.push(MacStandardGlyphOrdering[j]);\n\t          continue;\n\t         }\n\t         glyphNames.push(customNames[j - 258]);\n\t        }\n\t        break;\n\t       case 0x00030000:\n\t        break;\n\t       default:\n\t        warn('Unknown/unsupported post table version ' + version);\n\t        valid = false;\n\t        if (properties.defaultEncoding) {\n\t         glyphNames = properties.defaultEncoding;\n\t        }\n\t        break;\n\t       }\n\t       properties.glyphNames = glyphNames;\n\t       return valid;\n\t      }\n\t      function readNameTable(nameTable) {\n\t       var start = (font.start ? font.start : 0) + nameTable.offset;\n\t       font.pos = start;\n\t       var names = [\n\t        [],\n\t        []\n\t       ];\n\t       var length = nameTable.length, end = start + length;\n\t       var format = font.getUint16();\n\t       var FORMAT_0_HEADER_LENGTH = 6;\n\t       if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n\t        return names;\n\t       }\n\t       var numRecords = font.getUint16();\n\t       var stringsStart = font.getUint16();\n\t       var records = [];\n\t       var NAME_RECORD_LENGTH = 12;\n\t       var i, ii;\n\t       for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n\t        var r = {\n\t         platform: font.getUint16(),\n\t         encoding: font.getUint16(),\n\t         language: font.getUint16(),\n\t         name: font.getUint16(),\n\t         length: font.getUint16(),\n\t         offset: font.getUint16()\n\t        };\n\t        if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n\t         records.push(r);\n\t        }\n\t       }\n\t       for (i = 0, ii = records.length; i < ii; i++) {\n\t        var record = records[i];\n\t        if (record.length <= 0) {\n\t         continue;\n\t        }\n\t        var pos = start + stringsStart + record.offset;\n\t        if (pos + record.length > end) {\n\t         continue;\n\t        }\n\t        font.pos = pos;\n\t        var nameIndex = record.name;\n\t        if (record.encoding) {\n\t         var str = '';\n\t         for (var j = 0, jj = record.length; j < jj; j += 2) {\n\t          str += String.fromCharCode(font.getUint16());\n\t         }\n\t         names[1][nameIndex] = str;\n\t        } else {\n\t         names[0][nameIndex] = bytesToString(font.getBytes(record.length));\n\t        }\n\t       }\n\t       return names;\n\t      }\n\t      var TTOpsStackDeltas = [\n\t       0,\n\t       0,\n\t       0,\n\t       0,\n\t       0,\n\t       0,\n\t       0,\n\t       0,\n\t       -2,\n\t       -2,\n\t       -2,\n\t       -2,\n\t       0,\n\t       0,\n\t       -2,\n\t       -5,\n\t       -1,\n\t       -1,\n\t       -1,\n\t       -1,\n\t       -1,\n\t       -1,\n\t       -1,\n\t       -1,\n\t       0,\n\t       0,\n\t       -1,\n\t       0,\n\t       -1,\n\t       -1,\n\t       -1,\n\t       -1,\n\t       1,\n\t       -1,\n\t       -999,\n\t       0,\n\t       1,\n\t       0,\n\t       -1,\n\t       -2,\n\t       0,\n\t       -1,\n\t       -2,\n\t       -1,\n\t       -1,\n\t       0,\n\t       -1,\n\t       -1,\n\t       0,\n\t       0,\n\t       -999,\n\t       -999,\n\t       -1,\n\t       -1,\n\t       -1,\n\t       -1,\n\t       -2,\n\t       -999,\n\t       -2,\n\t       -2,\n\t       -999,\n\t       0,\n\t       -2,\n\t       -2,\n\t       0,\n\t       0,\n\t       -2,\n\t       0,\n\t       -2,\n\t       0,\n\t       0,\n\t       0,\n\t       -2,\n\t       -1,\n\t       -1,\n\t       1,\n\t       1,\n\t       0,\n\t       0,\n\t       -1,\n\t       -1,\n\t       -1,\n\t       -1,\n\t       -1,\n\t       -1,\n\t       -1,\n\t       0,\n\t       0,\n\t       -1,\n\t       0,\n\t       -1,\n\t       -1,\n\t       0,\n\t       -999,\n\t       -1,\n\t       -1,\n\t       -1,\n\t       -1,\n\t       -1,\n\t       -1,\n\t       0,\n\t       0,\n\t       0,\n\t       0,\n\t       0,\n\t       0,\n\t       0,\n\t       0,\n\t       0,\n\t       0,\n\t       0,\n\t       0,\n\t       -2,\n\t       -999,\n\t       -999,\n\t       -999,\n\t       -999,\n\t       -999,\n\t       -1,\n\t       -1,\n\t       -2,\n\t       -2,\n\t       0,\n\t       0,\n\t       0,\n\t       0,\n\t       -1,\n\t       -1,\n\t       -999,\n\t       -2,\n\t       -2,\n\t       0,\n\t       0,\n\t       -1,\n\t       -2,\n\t       -2,\n\t       0,\n\t       0,\n\t       0,\n\t       -1,\n\t       -1,\n\t       -1,\n\t       -2\n\t      ];\n\t      function sanitizeTTProgram(table, ttContext) {\n\t       var data = table.data;\n\t       var i = 0, j, n, b, funcId, pc, lastEndf = 0, lastDeff = 0;\n\t       var stack = [];\n\t       var callstack = [];\n\t       var functionsCalled = [];\n\t       var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n\t       var inFDEF = false, ifLevel = 0, inELSE = 0;\n\t       for (var ii = data.length; i < ii;) {\n\t        var op = data[i++];\n\t        if (op === 0x40) {\n\t         n = data[i++];\n\t         if (inFDEF || inELSE) {\n\t          i += n;\n\t         } else {\n\t          for (j = 0; j < n; j++) {\n\t           stack.push(data[i++]);\n\t          }\n\t         }\n\t        } else if (op === 0x41) {\n\t         n = data[i++];\n\t         if (inFDEF || inELSE) {\n\t          i += n * 2;\n\t         } else {\n\t          for (j = 0; j < n; j++) {\n\t           b = data[i++];\n\t           stack.push(b << 8 | data[i++]);\n\t          }\n\t         }\n\t        } else if ((op & 0xF8) === 0xB0) {\n\t         n = op - 0xB0 + 1;\n\t         if (inFDEF || inELSE) {\n\t          i += n;\n\t         } else {\n\t          for (j = 0; j < n; j++) {\n\t           stack.push(data[i++]);\n\t          }\n\t         }\n\t        } else if ((op & 0xF8) === 0xB8) {\n\t         n = op - 0xB8 + 1;\n\t         if (inFDEF || inELSE) {\n\t          i += n * 2;\n\t         } else {\n\t          for (j = 0; j < n; j++) {\n\t           b = data[i++];\n\t           stack.push(b << 8 | data[i++]);\n\t          }\n\t         }\n\t        } else if (op === 0x2B && !tooComplexToFollowFunctions) {\n\t         if (!inFDEF && !inELSE) {\n\t          funcId = stack[stack.length - 1];\n\t          ttContext.functionsUsed[funcId] = true;\n\t          if (funcId in ttContext.functionsStackDeltas) {\n\t           stack.length += ttContext.functionsStackDeltas[funcId];\n\t          } else if (funcId in ttContext.functionsDefined && functionsCalled.indexOf(funcId) < 0) {\n\t           callstack.push({\n\t            data: data,\n\t            i: i,\n\t            stackTop: stack.length - 1\n\t           });\n\t           functionsCalled.push(funcId);\n\t           pc = ttContext.functionsDefined[funcId];\n\t           if (!pc) {\n\t            warn('TT: CALL non-existent function');\n\t            ttContext.hintsValid = false;\n\t            return;\n\t           }\n\t           data = pc.data;\n\t           i = pc.i;\n\t          }\n\t         }\n\t        } else if (op === 0x2C && !tooComplexToFollowFunctions) {\n\t         if (inFDEF || inELSE) {\n\t          warn('TT: nested FDEFs not allowed');\n\t          tooComplexToFollowFunctions = true;\n\t         }\n\t         inFDEF = true;\n\t         lastDeff = i;\n\t         funcId = stack.pop();\n\t         ttContext.functionsDefined[funcId] = {\n\t          data: data,\n\t          i: i\n\t         };\n\t        } else if (op === 0x2D) {\n\t         if (inFDEF) {\n\t          inFDEF = false;\n\t          lastEndf = i;\n\t         } else {\n\t          pc = callstack.pop();\n\t          if (!pc) {\n\t           warn('TT: ENDF bad stack');\n\t           ttContext.hintsValid = false;\n\t           return;\n\t          }\n\t          funcId = functionsCalled.pop();\n\t          data = pc.data;\n\t          i = pc.i;\n\t          ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n\t         }\n\t        } else if (op === 0x89) {\n\t         if (inFDEF || inELSE) {\n\t          warn('TT: nested IDEFs not allowed');\n\t          tooComplexToFollowFunctions = true;\n\t         }\n\t         inFDEF = true;\n\t         lastDeff = i;\n\t        } else if (op === 0x58) {\n\t         ++ifLevel;\n\t        } else if (op === 0x1B) {\n\t         inELSE = ifLevel;\n\t        } else if (op === 0x59) {\n\t         if (inELSE === ifLevel) {\n\t          inELSE = 0;\n\t         }\n\t         --ifLevel;\n\t        } else if (op === 0x1C) {\n\t         if (!inFDEF && !inELSE) {\n\t          var offset = stack[stack.length - 1];\n\t          if (offset > 0) {\n\t           i += offset - 1;\n\t          }\n\t         }\n\t        }\n\t        if (!inFDEF && !inELSE) {\n\t         var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n\t         if (op >= 0x71 && op <= 0x75) {\n\t          n = stack.pop();\n\t          if (!isNaN(n)) {\n\t           stackDelta = -n * 2;\n\t          }\n\t         }\n\t         while (stackDelta < 0 && stack.length > 0) {\n\t          stack.pop();\n\t          stackDelta++;\n\t         }\n\t         while (stackDelta > 0) {\n\t          stack.push(NaN);\n\t          stackDelta--;\n\t         }\n\t        }\n\t       }\n\t       ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n\t       var content = [data];\n\t       if (i > data.length) {\n\t        content.push(new Uint8Array(i - data.length));\n\t       }\n\t       if (lastDeff > lastEndf) {\n\t        warn('TT: complementing a missing function tail');\n\t        content.push(new Uint8Array([\n\t         0x22,\n\t         0x2D\n\t        ]));\n\t       }\n\t       foldTTTable(table, content);\n\t      }\n\t      function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n\t       if (ttContext.tooComplexToFollowFunctions) {\n\t        return;\n\t       }\n\t       if (ttContext.functionsDefined.length > maxFunctionDefs) {\n\t        warn('TT: more functions defined than expected');\n\t        ttContext.hintsValid = false;\n\t        return;\n\t       }\n\t       for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n\t        if (j > maxFunctionDefs) {\n\t         warn('TT: invalid function id: ' + j);\n\t         ttContext.hintsValid = false;\n\t         return;\n\t        }\n\t        if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n\t         warn('TT: undefined function: ' + j);\n\t         ttContext.hintsValid = false;\n\t         return;\n\t        }\n\t       }\n\t      }\n\t      function foldTTTable(table, content) {\n\t       if (content.length > 1) {\n\t        var newLength = 0;\n\t        var j, jj;\n\t        for (j = 0, jj = content.length; j < jj; j++) {\n\t         newLength += content[j].length;\n\t        }\n\t        newLength = newLength + 3 & ~3;\n\t        var result = new Uint8Array(newLength);\n\t        var pos = 0;\n\t        for (j = 0, jj = content.length; j < jj; j++) {\n\t         result.set(content[j], pos);\n\t         pos += content[j].length;\n\t        }\n\t        table.data = result;\n\t        table.length = newLength;\n\t       }\n\t      }\n\t      function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n\t       var ttContext = {\n\t        functionsDefined: [],\n\t        functionsUsed: [],\n\t        functionsStackDeltas: [],\n\t        tooComplexToFollowFunctions: false,\n\t        hintsValid: true\n\t       };\n\t       if (fpgm) {\n\t        sanitizeTTProgram(fpgm, ttContext);\n\t       }\n\t       if (prep) {\n\t        sanitizeTTProgram(prep, ttContext);\n\t       }\n\t       if (fpgm) {\n\t        checkInvalidFunctions(ttContext, maxFunctionDefs);\n\t       }\n\t       if (cvt && cvt.length & 1) {\n\t        var cvtData = new Uint8Array(cvt.length + 1);\n\t        cvtData.set(cvt.data);\n\t        cvt.data = cvtData;\n\t       }\n\t       return ttContext.hintsValid;\n\t      }\n\t      font = new Stream(new Uint8Array(font.getBytes()));\n\t      var VALID_TABLES = [\n\t       'OS/2',\n\t       'cmap',\n\t       'head',\n\t       'hhea',\n\t       'hmtx',\n\t       'maxp',\n\t       'name',\n\t       'post',\n\t       'loca',\n\t       'glyf',\n\t       'fpgm',\n\t       'prep',\n\t       'cvt ',\n\t       'CFF '\n\t      ];\n\t      var header = readOpenTypeHeader(font);\n\t      var numTables = header.numTables;\n\t      var cff, cffFile;\n\t      var tables = Object.create(null);\n\t      tables['OS/2'] = null;\n\t      tables['cmap'] = null;\n\t      tables['head'] = null;\n\t      tables['hhea'] = null;\n\t      tables['hmtx'] = null;\n\t      tables['maxp'] = null;\n\t      tables['name'] = null;\n\t      tables['post'] = null;\n\t      var table;\n\t      for (var i = 0; i < numTables; i++) {\n\t       table = readTableEntry(font);\n\t       if (VALID_TABLES.indexOf(table.tag) < 0) {\n\t        continue;\n\t       }\n\t       if (table.length === 0) {\n\t        continue;\n\t       }\n\t       tables[table.tag] = table;\n\t      }\n\t      var isTrueType = !tables['CFF '];\n\t      if (!isTrueType) {\n\t       if (header.version === 'OTTO' && !properties.composite || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\n\t        cffFile = new Stream(tables['CFF '].data);\n\t        cff = new CFFFont(cffFile, properties);\n\t        adjustWidths(properties);\n\t        return this.convert(name, cff, properties);\n\t       }\n\t       delete tables['glyf'];\n\t       delete tables['loca'];\n\t       delete tables['fpgm'];\n\t       delete tables['prep'];\n\t       delete tables['cvt '];\n\t       this.isOpenType = true;\n\t      } else {\n\t       if (!tables['loca']) {\n\t        error('Required \"loca\" table is not found');\n\t       }\n\t       if (!tables['glyf']) {\n\t        warn('Required \"glyf\" table is not found -- trying to recover.');\n\t        tables['glyf'] = {\n\t         tag: 'glyf',\n\t         data: new Uint8Array(0)\n\t        };\n\t       }\n\t       this.isOpenType = false;\n\t      }\n\t      if (!tables['maxp']) {\n\t       error('Required \"maxp\" table is not found');\n\t      }\n\t      font.pos = (font.start || 0) + tables['maxp'].offset;\n\t      var version = font.getInt32();\n\t      var numGlyphs = font.getUint16();\n\t      var maxFunctionDefs = 0;\n\t      if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n\t       font.pos += 8;\n\t       var maxZones = font.getUint16();\n\t       if (maxZones > 2) {\n\t        tables['maxp'].data[14] = 0;\n\t        tables['maxp'].data[15] = 2;\n\t       }\n\t       font.pos += 4;\n\t       maxFunctionDefs = font.getUint16();\n\t      }\n\t      var dupFirstEntry = false;\n\t      if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\u0000') {\n\t       dupFirstEntry = true;\n\t       numGlyphs++;\n\t       tables['maxp'].data[4] = numGlyphs >> 8;\n\t       tables['maxp'].data[5] = numGlyphs & 255;\n\t      }\n\t      var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\n\t      if (!hintsValid) {\n\t       delete tables['fpgm'];\n\t       delete tables['prep'];\n\t       delete tables['cvt '];\n\t      }\n\t      sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\n\t      if (!tables['head']) {\n\t       error('Required \"head\" table is not found');\n\t      }\n\t      sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\n\t      var missingGlyphs = Object.create(null);\n\t      if (isTrueType) {\n\t       var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\n\t       missingGlyphs = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry);\n\t      }\n\t      if (!tables['hhea']) {\n\t       error('Required \"hhea\" table is not found');\n\t      }\n\t      if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\n\t       tables['hhea'].data[10] = 0xFF;\n\t       tables['hhea'].data[11] = 0xFF;\n\t      }\n\t      var metricsOverride = {\n\t       unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\n\t       yMax: int16(tables['head'].data[42], tables['head'].data[43]),\n\t       yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\n\t       ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\n\t       descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\n\t      };\n\t      this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n\t      this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n\t      if (tables['post']) {\n\t       var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\n\t       if (!valid) {\n\t        tables['post'] = null;\n\t       }\n\t      }\n\t      var charCodeToGlyphId = [], charCode;\n\t      var toUnicode = properties.toUnicode, widths = properties.widths;\n\t      var skipToUnicode = toUnicode instanceof IdentityToUnicodeMap || toUnicode.length === 0x10000;\n\t      function hasGlyph(glyphId, charCode, widthCode) {\n\t       if (!missingGlyphs[glyphId]) {\n\t        return true;\n\t       }\n\t       if (!skipToUnicode && charCode >= 0 && toUnicode.has(charCode)) {\n\t        return true;\n\t       }\n\t       if (widths && widthCode >= 0 && isNum(widths[widthCode])) {\n\t        return true;\n\t       }\n\t       return false;\n\t      }\n\t      if (properties.composite) {\n\t       var cidToGidMap = properties.cidToGidMap || [];\n\t       var isCidToGidMapEmpty = cidToGidMap.length === 0;\n\t       properties.cMap.forEach(function (charCode, cid) {\n\t        assert(cid <= 0xffff, 'Max size of CID is 65,535');\n\t        var glyphId = -1;\n\t        if (isCidToGidMapEmpty) {\n\t         glyphId = cid;\n\t        } else if (cidToGidMap[cid] !== undefined) {\n\t         glyphId = cidToGidMap[cid];\n\t        }\n\t        if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId, charCode, cid)) {\n\t         charCodeToGlyphId[charCode] = glyphId;\n\t        }\n\t       });\n\t       if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\n\t        charCodeToGlyphId[0] = numGlyphs - 1;\n\t       }\n\t      } else {\n\t       var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\n\t       var cmapPlatformId = cmapTable.platformId;\n\t       var cmapEncodingId = cmapTable.encodingId;\n\t       var cmapMappings = cmapTable.mappings;\n\t       var cmapMappingsLength = cmapMappings.length;\n\t       if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!getEncoding(properties.baseEncodingName)) {\n\t        var baseEncoding = [];\n\t        if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\n\t         baseEncoding = getEncoding(properties.baseEncodingName);\n\t        }\n\t        var glyphsUnicodeMap = getGlyphsUnicode();\n\t        for (charCode = 0; charCode < 256; charCode++) {\n\t         var glyphName, standardGlyphName;\n\t         if (this.differences && charCode in this.differences) {\n\t          glyphName = this.differences[charCode];\n\t         } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\n\t          glyphName = baseEncoding[charCode];\n\t         } else {\n\t          glyphName = StandardEncoding[charCode];\n\t         }\n\t         if (!glyphName) {\n\t          continue;\n\t         }\n\t         standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n\t         var unicodeOrCharCode, isUnicode = false;\n\t         if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n\t          unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n\t          isUnicode = true;\n\t         } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n\t          unicodeOrCharCode = MacRomanEncoding.indexOf(standardGlyphName);\n\t         }\n\t         var found = false;\n\t         for (i = 0; i < cmapMappingsLength; ++i) {\n\t          if (cmapMappings[i].charCode !== unicodeOrCharCode) {\n\t           continue;\n\t          }\n\t          var code = isUnicode ? charCode : unicodeOrCharCode;\n\t          if (hasGlyph(cmapMappings[i].glyphId, code, -1)) {\n\t           charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n\t           found = true;\n\t           break;\n\t          }\n\t         }\n\t         if (!found && properties.glyphNames) {\n\t          var glyphId = properties.glyphNames.indexOf(glyphName);\n\t          if (glyphId === -1 && standardGlyphName !== glyphName) {\n\t           glyphId = properties.glyphNames.indexOf(standardGlyphName);\n\t          }\n\t          if (glyphId > 0 && hasGlyph(glyphId, -1, -1)) {\n\t           charCodeToGlyphId[charCode] = glyphId;\n\t           found = true;\n\t          }\n\t         }\n\t         if (!found) {\n\t          charCodeToGlyphId[charCode] = 0;\n\t         }\n\t        }\n\t       } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n\t        for (i = 0; i < cmapMappingsLength; ++i) {\n\t         charCodeToGlyphId[cmapMappings[i].charCode] = cmapMappings[i].glyphId;\n\t        }\n\t       } else {\n\t        for (i = 0; i < cmapMappingsLength; ++i) {\n\t         charCode = cmapMappings[i].charCode & 0xFF;\n\t         charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n\t        }\n\t       }\n\t      }\n\t      if (charCodeToGlyphId.length === 0) {\n\t       charCodeToGlyphId[0] = 0;\n\t      }\n\t      var newMapping = adjustMapping(charCodeToGlyphId, properties);\n\t      this.toFontChar = newMapping.toFontChar;\n\t      tables['cmap'] = {\n\t       tag: 'cmap',\n\t       data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\n\t      };\n\t      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n\t       tables['OS/2'] = {\n\t        tag: 'OS/2',\n\t        data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n\t       };\n\t      }\n\t      if (!tables['post']) {\n\t       tables['post'] = {\n\t        tag: 'post',\n\t        data: createPostTable(properties)\n\t       };\n\t      }\n\t      if (!isTrueType) {\n\t       try {\n\t        cffFile = new Stream(tables['CFF '].data);\n\t        var parser = new CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n\t        cff = parser.parse();\n\t        var compiler = new CFFCompiler(cff);\n\t        tables['CFF '].data = compiler.compile();\n\t       } catch (e) {\n\t        warn('Failed to compile font ' + properties.loadedName);\n\t       }\n\t      }\n\t      if (!tables['name']) {\n\t       tables['name'] = {\n\t        tag: 'name',\n\t        data: createNameTable(this.name)\n\t       };\n\t      } else {\n\t       var namePrototype = readNameTable(tables['name']);\n\t       tables['name'].data = createNameTable(name, namePrototype);\n\t      }\n\t      var builder = new OpenTypeFileBuilder(header.version);\n\t      for (var tableTag in tables) {\n\t       builder.addTable(tableTag, tables[tableTag].data);\n\t      }\n\t      return builder.toArray();\n\t     },\n\t     convert: function Font_convert(fontName, font, properties) {\n\t      properties.fixedPitch = false;\n\t      if (properties.builtInEncoding) {\n\t       adjustToUnicode(properties, properties.builtInEncoding);\n\t      }\n\t      var mapping = font.getGlyphMapping(properties);\n\t      var newMapping = adjustMapping(mapping, properties);\n\t      this.toFontChar = newMapping.toFontChar;\n\t      var numGlyphs = font.numGlyphs;\n\t      function getCharCodes(charCodeToGlyphId, glyphId) {\n\t       var charCodes = null;\n\t       for (var charCode in charCodeToGlyphId) {\n\t        if (glyphId === charCodeToGlyphId[charCode]) {\n\t         if (!charCodes) {\n\t          charCodes = [];\n\t         }\n\t         charCodes.push(charCode | 0);\n\t        }\n\t       }\n\t       return charCodes;\n\t      }\n\t      function createCharCode(charCodeToGlyphId, glyphId) {\n\t       for (var charCode in charCodeToGlyphId) {\n\t        if (glyphId === charCodeToGlyphId[charCode]) {\n\t         return charCode | 0;\n\t        }\n\t       }\n\t       newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n\t       return newMapping.nextAvailableFontCharCode++;\n\t      }\n\t      var seacs = font.seacs;\n\t      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n\t       var matrix = properties.fontMatrix || FONT_IDENTITY_MATRIX;\n\t       var charset = font.getCharset();\n\t       var seacMap = Object.create(null);\n\t       for (var glyphId in seacs) {\n\t        glyphId |= 0;\n\t        var seac = seacs[glyphId];\n\t        var baseGlyphName = StandardEncoding[seac[2]];\n\t        var accentGlyphName = StandardEncoding[seac[3]];\n\t        var baseGlyphId = charset.indexOf(baseGlyphName);\n\t        var accentGlyphId = charset.indexOf(accentGlyphName);\n\t        if (baseGlyphId < 0 || accentGlyphId < 0) {\n\t         continue;\n\t        }\n\t        var accentOffset = {\n\t         x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n\t         y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n\t        };\n\t        var charCodes = getCharCodes(mapping, glyphId);\n\t        if (!charCodes) {\n\t         continue;\n\t        }\n\t        for (var i = 0, ii = charCodes.length; i < ii; i++) {\n\t         var charCode = charCodes[i];\n\t         var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n\t         var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n\t         var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n\t         seacMap[charCode] = {\n\t          baseFontCharCode: baseFontCharCode,\n\t          accentFontCharCode: accentFontCharCode,\n\t          accentOffset: accentOffset\n\t         };\n\t        }\n\t       }\n\t       properties.seacMap = seacMap;\n\t      }\n\t      var unitsPerEm = 1 / (properties.fontMatrix || FONT_IDENTITY_MATRIX)[0];\n\t      var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n\t      builder.addTable('CFF ', font.data);\n\t      builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\n\t      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n\t      builder.addTable('head', '\\x00\\x01\\x00\\x00' + '\\x00\\x00\\x10\\x00' + '\\x00\\x00\\x00\\x00' + '\\x5F\\x0F\\x3C\\xF5' + '\\x00\\x00' + safeString16(unitsPerEm) + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00' + safeString16(properties.descent) + '\\x0F\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\x00\\x11' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00');\n\t      builder.addTable('hhea', '\\x00\\x01\\x00\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\x00\\x00' + '\\xFF\\xFF' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + string16(numGlyphs));\n\t      builder.addTable('hmtx', function fontFieldsHmtx() {\n\t       var charstrings = font.charstrings;\n\t       var cffWidths = font.cff ? font.cff.widths : null;\n\t       var hmtx = '\\x00\\x00\\x00\\x00';\n\t       for (var i = 1, ii = numGlyphs; i < ii; i++) {\n\t        var width = 0;\n\t        if (charstrings) {\n\t         var charstring = charstrings[i - 1];\n\t         width = 'width' in charstring ? charstring.width : 0;\n\t        } else if (cffWidths) {\n\t         width = Math.ceil(cffWidths[i] || 0);\n\t        }\n\t        hmtx += string16(width) + string16(0);\n\t       }\n\t       return hmtx;\n\t      }());\n\t      builder.addTable('maxp', '\\x00\\x00\\x50\\x00' + string16(numGlyphs));\n\t      builder.addTable('name', createNameTable(fontName));\n\t      builder.addTable('post', createPostTable(properties));\n\t      return builder.toArray();\n\t     },\n\t     get spaceWidth() {\n\t      if ('_shadowWidth' in this) {\n\t       return this._shadowWidth;\n\t      }\n\t      var possibleSpaceReplacements = [\n\t       'space',\n\t       'minus',\n\t       'one',\n\t       'i',\n\t       'I'\n\t      ];\n\t      var width;\n\t      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n\t       var glyphName = possibleSpaceReplacements[i];\n\t       if (glyphName in this.widths) {\n\t        width = this.widths[glyphName];\n\t        break;\n\t       }\n\t       var glyphsUnicodeMap = getGlyphsUnicode();\n\t       var glyphUnicode = glyphsUnicodeMap[glyphName];\n\t       var charcode = 0;\n\t       if (this.composite) {\n\t        if (this.cMap.contains(glyphUnicode)) {\n\t         charcode = this.cMap.lookup(glyphUnicode);\n\t        }\n\t       }\n\t       if (!charcode && this.toUnicode) {\n\t        charcode = this.toUnicode.charCodeOf(glyphUnicode);\n\t       }\n\t       if (charcode <= 0) {\n\t        charcode = glyphUnicode;\n\t       }\n\t       width = this.widths[charcode];\n\t       if (width) {\n\t        break;\n\t       }\n\t      }\n\t      width = width || this.defaultWidth;\n\t      this._shadowWidth = width;\n\t      return width;\n\t     },\n\t     charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n\t      var fontCharCode, width, operatorListId;\n\t      var widthCode = charcode;\n\t      if (this.cMap && this.cMap.contains(charcode)) {\n\t       widthCode = this.cMap.lookup(charcode);\n\t      }\n\t      width = this.widths[widthCode];\n\t      width = isNum(width) ? width : this.defaultWidth;\n\t      var vmetric = this.vmetrics && this.vmetrics[widthCode];\n\t      var unicode = this.toUnicode.get(charcode) || charcode;\n\t      if (typeof unicode === 'number') {\n\t       unicode = String.fromCharCode(unicode);\n\t      }\n\t      var isInFont = charcode in this.toFontChar;\n\t      fontCharCode = this.toFontChar[charcode] || charcode;\n\t      if (this.missingFile) {\n\t       fontCharCode = mapSpecialUnicodeValues(fontCharCode);\n\t      }\n\t      if (this.isType3Font) {\n\t       operatorListId = fontCharCode;\n\t      }\n\t      var accent = null;\n\t      if (this.seacMap && this.seacMap[charcode]) {\n\t       isInFont = true;\n\t       var seac = this.seacMap[charcode];\n\t       fontCharCode = seac.baseFontCharCode;\n\t       accent = {\n\t        fontChar: String.fromCharCode(seac.accentFontCharCode),\n\t        offset: seac.accentOffset\n\t       };\n\t      }\n\t      var fontChar = String.fromCharCode(fontCharCode);\n\t      var glyph = this.glyphCache[charcode];\n\t      if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n\t       glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n\t       this.glyphCache[charcode] = glyph;\n\t      }\n\t      return glyph;\n\t     },\n\t     charsToGlyphs: function Font_charsToGlyphs(chars) {\n\t      var charsCache = this.charsCache;\n\t      var glyphs, glyph, charcode;\n\t      if (charsCache) {\n\t       glyphs = charsCache[chars];\n\t       if (glyphs) {\n\t        return glyphs;\n\t       }\n\t      }\n\t      if (!charsCache) {\n\t       charsCache = this.charsCache = Object.create(null);\n\t      }\n\t      glyphs = [];\n\t      var charsCacheKey = chars;\n\t      var i = 0, ii;\n\t      if (this.cMap) {\n\t       var c = Object.create(null);\n\t       while (i < chars.length) {\n\t        this.cMap.readCharCode(chars, i, c);\n\t        charcode = c.charcode;\n\t        var length = c.length;\n\t        i += length;\n\t        var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n\t        glyph = this.charToGlyph(charcode, isSpace);\n\t        glyphs.push(glyph);\n\t       }\n\t      } else {\n\t       for (i = 0, ii = chars.length; i < ii; ++i) {\n\t        charcode = chars.charCodeAt(i);\n\t        glyph = this.charToGlyph(charcode, charcode === 0x20);\n\t        glyphs.push(glyph);\n\t       }\n\t      }\n\t      return charsCache[charsCacheKey] = glyphs;\n\t     }\n\t    };\n\t    return Font;\n\t   }();\n\t   var ErrorFont = function ErrorFontClosure() {\n\t    function ErrorFont(error) {\n\t     this.error = error;\n\t     this.loadedName = 'g_font_error';\n\t     this.loading = false;\n\t    }\n\t    ErrorFont.prototype = {\n\t     charsToGlyphs: function ErrorFont_charsToGlyphs() {\n\t      return [];\n\t     },\n\t     exportData: function ErrorFont_exportData() {\n\t      return { error: this.error };\n\t     }\n\t    };\n\t    return ErrorFont;\n\t   }();\n\t   function type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n\t    var charCodeToGlyphId = Object.create(null);\n\t    var glyphId, charCode, baseEncoding;\n\t    var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n\t    if (properties.baseEncodingName) {\n\t     baseEncoding = getEncoding(properties.baseEncodingName);\n\t     for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n\t      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n\t      if (glyphId >= 0) {\n\t       charCodeToGlyphId[charCode] = glyphId;\n\t      } else {\n\t       charCodeToGlyphId[charCode] = 0;\n\t      }\n\t     }\n\t    } else if (isSymbolicFont) {\n\t     for (charCode in builtInEncoding) {\n\t      charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n\t     }\n\t    } else {\n\t     baseEncoding = StandardEncoding;\n\t     for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n\t      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n\t      if (glyphId >= 0) {\n\t       charCodeToGlyphId[charCode] = glyphId;\n\t      } else {\n\t       charCodeToGlyphId[charCode] = 0;\n\t      }\n\t     }\n\t    }\n\t    var differences = properties.differences, glyphsUnicodeMap;\n\t    if (differences) {\n\t     for (charCode in differences) {\n\t      var glyphName = differences[charCode];\n\t      glyphId = glyphNames.indexOf(glyphName);\n\t      if (glyphId === -1) {\n\t       if (!glyphsUnicodeMap) {\n\t        glyphsUnicodeMap = getGlyphsUnicode();\n\t       }\n\t       var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n\t       if (standardGlyphName !== glyphName) {\n\t        glyphId = glyphNames.indexOf(standardGlyphName);\n\t       }\n\t      }\n\t      if (glyphId >= 0) {\n\t       charCodeToGlyphId[charCode] = glyphId;\n\t      } else {\n\t       charCodeToGlyphId[charCode] = 0;\n\t      }\n\t     }\n\t    }\n\t    return charCodeToGlyphId;\n\t   }\n\t   var Type1Font = function Type1FontClosure() {\n\t    function findBlock(streamBytes, signature, startIndex) {\n\t     var streamBytesLength = streamBytes.length;\n\t     var signatureLength = signature.length;\n\t     var scanLength = streamBytesLength - signatureLength;\n\t     var i = startIndex, j, found = false;\n\t     while (i < scanLength) {\n\t      j = 0;\n\t      while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n\t       j++;\n\t      }\n\t      if (j >= signatureLength) {\n\t       i += j;\n\t       while (i < streamBytesLength && isSpace(streamBytes[i])) {\n\t        i++;\n\t       }\n\t       found = true;\n\t       break;\n\t      }\n\t      i++;\n\t     }\n\t     return {\n\t      found: found,\n\t      length: i\n\t     };\n\t    }\n\t    function getHeaderBlock(stream, suggestedLength) {\n\t     var EEXEC_SIGNATURE = [\n\t      0x65,\n\t      0x65,\n\t      0x78,\n\t      0x65,\n\t      0x63\n\t     ];\n\t     var streamStartPos = stream.pos;\n\t     var headerBytes, headerBytesLength, block;\n\t     try {\n\t      headerBytes = stream.getBytes(suggestedLength);\n\t      headerBytesLength = headerBytes.length;\n\t     } catch (ex) {\n\t      if (ex instanceof MissingDataException) {\n\t       throw ex;\n\t      }\n\t     }\n\t     if (headerBytesLength === suggestedLength) {\n\t      block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n\t      if (block.found && block.length === suggestedLength) {\n\t       return {\n\t        stream: new Stream(headerBytes),\n\t        length: suggestedLength\n\t       };\n\t      }\n\t     }\n\t     warn('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n\t     stream.pos = streamStartPos;\n\t     var SCAN_BLOCK_LENGTH = 2048;\n\t     var actualLength;\n\t     while (true) {\n\t      var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n\t      block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n\t      if (block.length === 0) {\n\t       break;\n\t      }\n\t      stream.pos += block.length;\n\t      if (block.found) {\n\t       actualLength = stream.pos - streamStartPos;\n\t       break;\n\t      }\n\t     }\n\t     stream.pos = streamStartPos;\n\t     if (actualLength) {\n\t      return {\n\t       stream: new Stream(stream.getBytes(actualLength)),\n\t       length: actualLength\n\t      };\n\t     }\n\t     warn('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n\t     return {\n\t      stream: new Stream(stream.getBytes(suggestedLength)),\n\t      length: suggestedLength\n\t     };\n\t    }\n\t    function getEexecBlock(stream, suggestedLength) {\n\t     var eexecBytes = stream.getBytes();\n\t     return {\n\t      stream: new Stream(eexecBytes),\n\t      length: eexecBytes.length\n\t     };\n\t    }\n\t    function Type1Font(name, file, properties) {\n\t     var PFB_HEADER_SIZE = 6;\n\t     var headerBlockLength = properties.length1;\n\t     var eexecBlockLength = properties.length2;\n\t     var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n\t     var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n\t     if (pfbHeaderPresent) {\n\t      file.skip(PFB_HEADER_SIZE);\n\t      headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n\t     }\n\t     var headerBlock = getHeaderBlock(file, headerBlockLength);\n\t     headerBlockLength = headerBlock.length;\n\t     var headerBlockParser = new Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n\t     headerBlockParser.extractFontHeader(properties);\n\t     if (pfbHeaderPresent) {\n\t      pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n\t      eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n\t     }\n\t     var eexecBlock = getEexecBlock(file, eexecBlockLength);\n\t     eexecBlockLength = eexecBlock.length;\n\t     var eexecBlockParser = new Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n\t     var data = eexecBlockParser.extractFontProgram();\n\t     for (var info in data.properties) {\n\t      properties[info] = data.properties[info];\n\t     }\n\t     var charstrings = data.charstrings;\n\t     var type2Charstrings = this.getType2Charstrings(charstrings);\n\t     var subrs = this.getType2Subrs(data.subrs);\n\t     this.charstrings = charstrings;\n\t     this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n\t     this.seacs = this.getSeacs(data.charstrings);\n\t    }\n\t    Type1Font.prototype = {\n\t     get numGlyphs() {\n\t      return this.charstrings.length + 1;\n\t     },\n\t     getCharset: function Type1Font_getCharset() {\n\t      var charset = ['.notdef'];\n\t      var charstrings = this.charstrings;\n\t      for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n\t       charset.push(charstrings[glyphId].glyphName);\n\t      }\n\t      return charset;\n\t     },\n\t     getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n\t      var charstrings = this.charstrings;\n\t      var glyphNames = ['.notdef'], glyphId;\n\t      for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n\t       glyphNames.push(charstrings[glyphId].glyphName);\n\t      }\n\t      var encoding = properties.builtInEncoding;\n\t      if (encoding) {\n\t       var builtInEncoding = Object.create(null);\n\t       for (var charCode in encoding) {\n\t        glyphId = glyphNames.indexOf(encoding[charCode]);\n\t        if (glyphId >= 0) {\n\t         builtInEncoding[charCode] = glyphId;\n\t        }\n\t       }\n\t      }\n\t      return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n\t     },\n\t     getSeacs: function Type1Font_getSeacs(charstrings) {\n\t      var i, ii;\n\t      var seacMap = [];\n\t      for (i = 0, ii = charstrings.length; i < ii; i++) {\n\t       var charstring = charstrings[i];\n\t       if (charstring.seac) {\n\t        seacMap[i + 1] = charstring.seac;\n\t       }\n\t      }\n\t      return seacMap;\n\t     },\n\t     getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n\t      var type2Charstrings = [];\n\t      for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n\t       type2Charstrings.push(type1Charstrings[i].charstring);\n\t      }\n\t      return type2Charstrings;\n\t     },\n\t     getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n\t      var bias = 0;\n\t      var count = type1Subrs.length;\n\t      if (count < 1133) {\n\t       bias = 107;\n\t      } else if (count < 33769) {\n\t       bias = 1131;\n\t      } else {\n\t       bias = 32768;\n\t      }\n\t      var type2Subrs = [];\n\t      var i;\n\t      for (i = 0; i < bias; i++) {\n\t       type2Subrs.push([0x0B]);\n\t      }\n\t      for (i = 0; i < count; i++) {\n\t       type2Subrs.push(type1Subrs[i]);\n\t      }\n\t      return type2Subrs;\n\t     },\n\t     wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n\t      var cff = new CFF();\n\t      cff.header = new CFFHeader(1, 0, 4, 4);\n\t      cff.names = [name];\n\t      var topDict = new CFFTopDict();\n\t      topDict.setByName('version', 391);\n\t      topDict.setByName('Notice', 392);\n\t      topDict.setByName('FullName', 393);\n\t      topDict.setByName('FamilyName', 394);\n\t      topDict.setByName('Weight', 395);\n\t      topDict.setByName('Encoding', null);\n\t      topDict.setByName('FontMatrix', properties.fontMatrix);\n\t      topDict.setByName('FontBBox', properties.bbox);\n\t      topDict.setByName('charset', null);\n\t      topDict.setByName('CharStrings', null);\n\t      topDict.setByName('Private', null);\n\t      cff.topDict = topDict;\n\t      var strings = new CFFStrings();\n\t      strings.add('Version 0.11');\n\t      strings.add('See original notice');\n\t      strings.add(name);\n\t      strings.add(name);\n\t      strings.add('Medium');\n\t      cff.strings = strings;\n\t      cff.globalSubrIndex = new CFFIndex();\n\t      var count = glyphs.length;\n\t      var charsetArray = [0];\n\t      var i, ii;\n\t      for (i = 0; i < count; i++) {\n\t       var index = CFFStandardStrings.indexOf(charstrings[i].glyphName);\n\t       if (index === -1) {\n\t        index = 0;\n\t       }\n\t       charsetArray.push(index >> 8 & 0xff, index & 0xff);\n\t      }\n\t      cff.charset = new CFFCharset(false, 0, [], charsetArray);\n\t      var charStringsIndex = new CFFIndex();\n\t      charStringsIndex.add([\n\t       0x8B,\n\t       0x0E\n\t      ]);\n\t      for (i = 0; i < count; i++) {\n\t       var glyph = glyphs[i];\n\t       if (glyph.length === 0) {\n\t        charStringsIndex.add([\n\t         0x8B,\n\t         0x0E\n\t        ]);\n\t        continue;\n\t       }\n\t       charStringsIndex.add(glyph);\n\t      }\n\t      cff.charStrings = charStringsIndex;\n\t      var privateDict = new CFFPrivateDict();\n\t      privateDict.setByName('Subrs', null);\n\t      var fields = [\n\t       'BlueValues',\n\t       'OtherBlues',\n\t       'FamilyBlues',\n\t       'FamilyOtherBlues',\n\t       'StemSnapH',\n\t       'StemSnapV',\n\t       'BlueShift',\n\t       'BlueFuzz',\n\t       'BlueScale',\n\t       'LanguageGroup',\n\t       'ExpansionFactor',\n\t       'ForceBold',\n\t       'StdHW',\n\t       'StdVW'\n\t      ];\n\t      for (i = 0, ii = fields.length; i < ii; i++) {\n\t       var field = fields[i];\n\t       if (!(field in properties.privateData)) {\n\t        continue;\n\t       }\n\t       var value = properties.privateData[field];\n\t       if (isArray(value)) {\n\t        for (var j = value.length - 1; j > 0; j--) {\n\t         value[j] -= value[j - 1];\n\t        }\n\t       }\n\t       privateDict.setByName(field, value);\n\t      }\n\t      cff.topDict.privateDict = privateDict;\n\t      var subrIndex = new CFFIndex();\n\t      for (i = 0, ii = subrs.length; i < ii; i++) {\n\t       subrIndex.add(subrs[i]);\n\t      }\n\t      privateDict.subrsIndex = subrIndex;\n\t      var compiler = new CFFCompiler(cff);\n\t      return compiler.compile();\n\t     }\n\t    };\n\t    return Type1Font;\n\t   }();\n\t   var CFFFont = function CFFFontClosure() {\n\t    function CFFFont(file, properties) {\n\t     this.properties = properties;\n\t     var parser = new CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n\t     this.cff = parser.parse();\n\t     var compiler = new CFFCompiler(this.cff);\n\t     this.seacs = this.cff.seacs;\n\t     try {\n\t      this.data = compiler.compile();\n\t     } catch (e) {\n\t      warn('Failed to compile font ' + properties.loadedName);\n\t      this.data = file;\n\t     }\n\t    }\n\t    CFFFont.prototype = {\n\t     get numGlyphs() {\n\t      return this.cff.charStrings.count;\n\t     },\n\t     getCharset: function CFFFont_getCharset() {\n\t      return this.cff.charset.charset;\n\t     },\n\t     getGlyphMapping: function CFFFont_getGlyphMapping() {\n\t      var cff = this.cff;\n\t      var properties = this.properties;\n\t      var charsets = cff.charset.charset;\n\t      var charCodeToGlyphId;\n\t      var glyphId;\n\t      if (properties.composite) {\n\t       charCodeToGlyphId = Object.create(null);\n\t       if (cff.isCIDFont) {\n\t        for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n\t         var cid = charsets[glyphId];\n\t         var charCode = properties.cMap.charCodeOf(cid);\n\t         charCodeToGlyphId[charCode] = glyphId;\n\t        }\n\t       } else {\n\t        for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n\t         charCodeToGlyphId[glyphId] = glyphId;\n\t        }\n\t       }\n\t       return charCodeToGlyphId;\n\t      }\n\t      var encoding = cff.encoding ? cff.encoding.encoding : null;\n\t      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n\t      return charCodeToGlyphId;\n\t     }\n\t    };\n\t    return CFFFont;\n\t   }();\n\t   (function checkSeacSupport() {\n\t    if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\n\t     SEAC_ANALYSIS_ENABLED = true;\n\t    }\n\t   }());\n\t   (function checkChromeWindows() {\n\t    if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\n\t     SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n\t    }\n\t   }());\n\t   exports.ErrorFont = ErrorFont;\n\t   exports.Font = Font;\n\t   exports.FontFlags = FontFlags;\n\t   exports.IdentityToUnicodeMap = IdentityToUnicodeMap;\n\t   exports.ToUnicodeMap = ToUnicodeMap;\n\t   exports.getFontType = getFontType;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCoreImage = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreColorSpace, root.pdfjsCoreStream, root.pdfjsCoreJpx);\n\t  }(this, function (exports, sharedUtil, corePrimitives, coreColorSpace, coreStream, coreJpx) {\n\t   var ImageKind = sharedUtil.ImageKind;\n\t   var assert = sharedUtil.assert;\n\t   var error = sharedUtil.error;\n\t   var info = sharedUtil.info;\n\t   var isArray = sharedUtil.isArray;\n\t   var warn = sharedUtil.warn;\n\t   var Name = corePrimitives.Name;\n\t   var isStream = corePrimitives.isStream;\n\t   var ColorSpace = coreColorSpace.ColorSpace;\n\t   var DecodeStream = coreStream.DecodeStream;\n\t   var JpegStream = coreStream.JpegStream;\n\t   var JpxImage = coreJpx.JpxImage;\n\t   var PDFImage = function PDFImageClosure() {\n\t    function handleImageData(image, nativeDecoder) {\n\t     if (nativeDecoder && nativeDecoder.canDecode(image)) {\n\t      return nativeDecoder.decode(image);\n\t     }\n\t     return Promise.resolve(image);\n\t    }\n\t    function decodeAndClamp(value, addend, coefficient, max) {\n\t     value = addend + value * coefficient;\n\t     return value < 0 ? 0 : value > max ? max : value;\n\t    }\n\t    function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n\t     var length = w2 * h2;\n\t     var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n\t     var xRatio = w1 / w2;\n\t     var yRatio = h1 / h2;\n\t     var i, j, py, newIndex = 0, oldIndex;\n\t     var xScaled = new Uint16Array(w2);\n\t     var w1Scanline = w1;\n\t     for (i = 0; i < w2; i++) {\n\t      xScaled[i] = Math.floor(i * xRatio);\n\t     }\n\t     for (i = 0; i < h2; i++) {\n\t      py = Math.floor(i * yRatio) * w1Scanline;\n\t      for (j = 0; j < w2; j++) {\n\t       oldIndex = py + xScaled[j];\n\t       dest[newIndex++] = src[oldIndex];\n\t      }\n\t     }\n\t     return dest;\n\t    }\n\t    function PDFImage(xref, res, image, inline, smask, mask, isMask) {\n\t     this.image = image;\n\t     var dict = image.dict;\n\t     if (dict.has('Filter')) {\n\t      var filter = dict.get('Filter').name;\n\t      if (filter === 'JPXDecode') {\n\t       var jpxImage = new JpxImage();\n\t       jpxImage.parseImageProperties(image.stream);\n\t       image.stream.reset();\n\t       image.bitsPerComponent = jpxImage.bitsPerComponent;\n\t       image.numComps = jpxImage.componentsCount;\n\t      } else if (filter === 'JBIG2Decode') {\n\t       image.bitsPerComponent = 1;\n\t       image.numComps = 1;\n\t      }\n\t     }\n\t     this.width = dict.get('Width', 'W');\n\t     this.height = dict.get('Height', 'H');\n\t     if (this.width < 1 || this.height < 1) {\n\t      error('Invalid image width: ' + this.width + ' or height: ' + this.height);\n\t     }\n\t     this.interpolate = dict.get('Interpolate', 'I') || false;\n\t     this.imageMask = dict.get('ImageMask', 'IM') || false;\n\t     this.matte = dict.get('Matte') || false;\n\t     var bitsPerComponent = image.bitsPerComponent;\n\t     if (!bitsPerComponent) {\n\t      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n\t      if (!bitsPerComponent) {\n\t       if (this.imageMask) {\n\t        bitsPerComponent = 1;\n\t       } else {\n\t        error('Bits per component missing in image: ' + this.imageMask);\n\t       }\n\t      }\n\t     }\n\t     this.bpc = bitsPerComponent;\n\t     if (!this.imageMask) {\n\t      var colorSpace = dict.get('ColorSpace', 'CS');\n\t      if (!colorSpace) {\n\t       info('JPX images (which do not require color spaces)');\n\t       switch (image.numComps) {\n\t       case 1:\n\t        colorSpace = Name.get('DeviceGray');\n\t        break;\n\t       case 3:\n\t        colorSpace = Name.get('DeviceRGB');\n\t        break;\n\t       case 4:\n\t        colorSpace = Name.get('DeviceCMYK');\n\t        break;\n\t       default:\n\t        error('JPX images with ' + this.numComps + ' color components not supported.');\n\t       }\n\t      }\n\t      this.colorSpace = ColorSpace.parse(colorSpace, xref, res);\n\t      this.numComps = this.colorSpace.numComps;\n\t     }\n\t     this.decode = dict.getArray('Decode', 'D');\n\t     this.needsDecode = false;\n\t     if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !ColorSpace.isDefaultDecode(this.decode, 1))) {\n\t      this.needsDecode = true;\n\t      var max = (1 << bitsPerComponent) - 1;\n\t      this.decodeCoefficients = [];\n\t      this.decodeAddends = [];\n\t      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n\t       var dmin = this.decode[i];\n\t       var dmax = this.decode[i + 1];\n\t       this.decodeCoefficients[j] = dmax - dmin;\n\t       this.decodeAddends[j] = max * dmin;\n\t      }\n\t     }\n\t     if (smask) {\n\t      this.smask = new PDFImage(xref, res, smask, false);\n\t     } else if (mask) {\n\t      if (isStream(mask)) {\n\t       var maskDict = mask.dict, imageMask = maskDict.get('ImageMask', 'IM');\n\t       if (!imageMask) {\n\t        warn('Ignoring /Mask in image without /ImageMask.');\n\t       } else {\n\t        this.mask = new PDFImage(xref, res, mask, false, null, null, true);\n\t       }\n\t      } else {\n\t       this.mask = mask;\n\t      }\n\t     }\n\t    }\n\t    PDFImage.buildImage = function PDFImage_buildImage(handler, xref, res, image, inline, nativeDecoder) {\n\t     var imagePromise = handleImageData(image, nativeDecoder);\n\t     var smaskPromise;\n\t     var maskPromise;\n\t     var smask = image.dict.get('SMask');\n\t     var mask = image.dict.get('Mask');\n\t     if (smask) {\n\t      smaskPromise = handleImageData(smask, nativeDecoder);\n\t      maskPromise = Promise.resolve(null);\n\t     } else {\n\t      smaskPromise = Promise.resolve(null);\n\t      if (mask) {\n\t       if (isStream(mask)) {\n\t        maskPromise = handleImageData(mask, nativeDecoder);\n\t       } else if (isArray(mask)) {\n\t        maskPromise = Promise.resolve(mask);\n\t       } else {\n\t        warn('Unsupported mask format.');\n\t        maskPromise = Promise.resolve(null);\n\t       }\n\t      } else {\n\t       maskPromise = Promise.resolve(null);\n\t      }\n\t     }\n\t     return Promise.all([\n\t      imagePromise,\n\t      smaskPromise,\n\t      maskPromise\n\t     ]).then(function (results) {\n\t      var imageData = results[0];\n\t      var smaskData = results[1];\n\t      var maskData = results[2];\n\t      return new PDFImage(xref, res, imageData, inline, smaskData, maskData);\n\t     });\n\t    };\n\t    PDFImage.createMask = function PDFImage_createMask(imgArray, width, height, imageIsFromDecodeStream, inverseDecode) {\n\t     var computedLength = (width + 7 >> 3) * height;\n\t     var actualLength = imgArray.byteLength;\n\t     var haveFullData = computedLength === actualLength;\n\t     var data, i;\n\t     if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n\t      data = imgArray;\n\t     } else if (!inverseDecode) {\n\t      data = new Uint8Array(actualLength);\n\t      data.set(imgArray);\n\t     } else {\n\t      data = new Uint8Array(computedLength);\n\t      data.set(imgArray);\n\t      for (i = actualLength; i < computedLength; i++) {\n\t       data[i] = 0xff;\n\t      }\n\t     }\n\t     if (inverseDecode) {\n\t      for (i = 0; i < actualLength; i++) {\n\t       data[i] = ~data[i];\n\t      }\n\t     }\n\t     return {\n\t      data: data,\n\t      width: width,\n\t      height: height\n\t     };\n\t    };\n\t    PDFImage.prototype = {\n\t     get drawWidth() {\n\t      return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n\t     },\n\t     get drawHeight() {\n\t      return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n\t     },\n\t     decodeBuffer: function PDFImage_decodeBuffer(buffer) {\n\t      var bpc = this.bpc;\n\t      var numComps = this.numComps;\n\t      var decodeAddends = this.decodeAddends;\n\t      var decodeCoefficients = this.decodeCoefficients;\n\t      var max = (1 << bpc) - 1;\n\t      var i, ii;\n\t      if (bpc === 1) {\n\t       for (i = 0, ii = buffer.length; i < ii; i++) {\n\t        buffer[i] = +!buffer[i];\n\t       }\n\t       return;\n\t      }\n\t      var index = 0;\n\t      for (i = 0, ii = this.width * this.height; i < ii; i++) {\n\t       for (var j = 0; j < numComps; j++) {\n\t        buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n\t        index++;\n\t       }\n\t      }\n\t     },\n\t     getComponents: function PDFImage_getComponents(buffer) {\n\t      var bpc = this.bpc;\n\t      if (bpc === 8) {\n\t       return buffer;\n\t      }\n\t      var width = this.width;\n\t      var height = this.height;\n\t      var numComps = this.numComps;\n\t      var length = width * height * numComps;\n\t      var bufferPos = 0;\n\t      var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n\t      var rowComps = width * numComps;\n\t      var max = (1 << bpc) - 1;\n\t      var i = 0, ii, buf;\n\t      if (bpc === 1) {\n\t       var mask, loop1End, loop2End;\n\t       for (var j = 0; j < height; j++) {\n\t        loop1End = i + (rowComps & ~7);\n\t        loop2End = i + rowComps;\n\t        while (i < loop1End) {\n\t         buf = buffer[bufferPos++];\n\t         output[i] = buf >> 7 & 1;\n\t         output[i + 1] = buf >> 6 & 1;\n\t         output[i + 2] = buf >> 5 & 1;\n\t         output[i + 3] = buf >> 4 & 1;\n\t         output[i + 4] = buf >> 3 & 1;\n\t         output[i + 5] = buf >> 2 & 1;\n\t         output[i + 6] = buf >> 1 & 1;\n\t         output[i + 7] = buf & 1;\n\t         i += 8;\n\t        }\n\t        if (i < loop2End) {\n\t         buf = buffer[bufferPos++];\n\t         mask = 128;\n\t         while (i < loop2End) {\n\t          output[i++] = +!!(buf & mask);\n\t          mask >>= 1;\n\t         }\n\t        }\n\t       }\n\t      } else {\n\t       var bits = 0;\n\t       buf = 0;\n\t       for (i = 0, ii = length; i < ii; ++i) {\n\t        if (i % rowComps === 0) {\n\t         buf = 0;\n\t         bits = 0;\n\t        }\n\t        while (bits < bpc) {\n\t         buf = buf << 8 | buffer[bufferPos++];\n\t         bits += 8;\n\t        }\n\t        var remainingBits = bits - bpc;\n\t        var value = buf >> remainingBits;\n\t        output[i] = value < 0 ? 0 : value > max ? max : value;\n\t        buf = buf & (1 << remainingBits) - 1;\n\t        bits = remainingBits;\n\t       }\n\t      }\n\t      return output;\n\t     },\n\t     fillOpacity: function PDFImage_fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n\t      var smask = this.smask;\n\t      var mask = this.mask;\n\t      var alphaBuf, sw, sh, i, ii, j;\n\t      if (smask) {\n\t       sw = smask.width;\n\t       sh = smask.height;\n\t       alphaBuf = new Uint8Array(sw * sh);\n\t       smask.fillGrayBuffer(alphaBuf);\n\t       if (sw !== width || sh !== height) {\n\t        alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n\t       }\n\t      } else if (mask) {\n\t       if (mask instanceof PDFImage) {\n\t        sw = mask.width;\n\t        sh = mask.height;\n\t        alphaBuf = new Uint8Array(sw * sh);\n\t        mask.numComps = 1;\n\t        mask.fillGrayBuffer(alphaBuf);\n\t        for (i = 0, ii = sw * sh; i < ii; ++i) {\n\t         alphaBuf[i] = 255 - alphaBuf[i];\n\t        }\n\t        if (sw !== width || sh !== height) {\n\t         alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n\t        }\n\t       } else if (isArray(mask)) {\n\t        alphaBuf = new Uint8Array(width * height);\n\t        var numComps = this.numComps;\n\t        for (i = 0, ii = width * height; i < ii; ++i) {\n\t         var opacity = 0;\n\t         var imageOffset = i * numComps;\n\t         for (j = 0; j < numComps; ++j) {\n\t          var color = image[imageOffset + j];\n\t          var maskOffset = j * 2;\n\t          if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n\t           opacity = 255;\n\t           break;\n\t          }\n\t         }\n\t         alphaBuf[i] = opacity;\n\t        }\n\t       } else {\n\t        error('Unknown mask format.');\n\t       }\n\t      }\n\t      if (alphaBuf) {\n\t       for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n\t        rgbaBuf[j] = alphaBuf[i];\n\t       }\n\t      } else {\n\t       for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n\t        rgbaBuf[j] = 255;\n\t       }\n\t      }\n\t     },\n\t     undoPreblend: function PDFImage_undoPreblend(buffer, width, height) {\n\t      var matte = this.smask && this.smask.matte;\n\t      if (!matte) {\n\t       return;\n\t      }\n\t      var matteRgb = this.colorSpace.getRgb(matte, 0);\n\t      var matteR = matteRgb[0];\n\t      var matteG = matteRgb[1];\n\t      var matteB = matteRgb[2];\n\t      var length = width * height * 4;\n\t      var r, g, b;\n\t      for (var i = 0; i < length; i += 4) {\n\t       var alpha = buffer[i + 3];\n\t       if (alpha === 0) {\n\t        buffer[i] = 255;\n\t        buffer[i + 1] = 255;\n\t        buffer[i + 2] = 255;\n\t        continue;\n\t       }\n\t       var k = 255 / alpha;\n\t       r = (buffer[i] - matteR) * k + matteR;\n\t       g = (buffer[i + 1] - matteG) * k + matteG;\n\t       b = (buffer[i + 2] - matteB) * k + matteB;\n\t       buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n\t       buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n\t       buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n\t      }\n\t     },\n\t     createImageData: function PDFImage_createImageData(forceRGBA) {\n\t      var drawWidth = this.drawWidth;\n\t      var drawHeight = this.drawHeight;\n\t      var imgData = {\n\t       width: drawWidth,\n\t       height: drawHeight\n\t      };\n\t      var numComps = this.numComps;\n\t      var originalWidth = this.width;\n\t      var originalHeight = this.height;\n\t      var bpc = this.bpc;\n\t      var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n\t      var imgArray;\n\t      if (!forceRGBA) {\n\t       var kind;\n\t       if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n\t        kind = ImageKind.GRAYSCALE_1BPP;\n\t       } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\n\t        kind = ImageKind.RGB_24BPP;\n\t       }\n\t       if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n\t        imgData.kind = kind;\n\t        imgArray = this.getImageBytes(originalHeight * rowBytes);\n\t        if (this.image instanceof DecodeStream) {\n\t         imgData.data = imgArray;\n\t        } else {\n\t         var newArray = new Uint8Array(imgArray.length);\n\t         newArray.set(imgArray);\n\t         imgData.data = newArray;\n\t        }\n\t        if (this.needsDecode) {\n\t         assert(kind === ImageKind.GRAYSCALE_1BPP);\n\t         var buffer = imgData.data;\n\t         for (var i = 0, ii = buffer.length; i < ii; i++) {\n\t          buffer[i] ^= 0xff;\n\t         }\n\t        }\n\t        return imgData;\n\t       }\n\t       if (this.image instanceof JpegStream && !this.smask && !this.mask && (this.colorSpace.name === 'DeviceGray' || this.colorSpace.name === 'DeviceRGB' || this.colorSpace.name === 'DeviceCMYK')) {\n\t        imgData.kind = ImageKind.RGB_24BPP;\n\t        imgData.data = this.getImageBytes(originalHeight * rowBytes, drawWidth, drawHeight, true);\n\t        return imgData;\n\t       }\n\t      }\n\t      imgArray = this.getImageBytes(originalHeight * rowBytes);\n\t      var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n\t      var comps = this.getComponents(imgArray);\n\t      var alpha01, maybeUndoPreblend;\n\t      if (!forceRGBA && !this.smask && !this.mask) {\n\t       imgData.kind = ImageKind.RGB_24BPP;\n\t       imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n\t       alpha01 = 0;\n\t       maybeUndoPreblend = false;\n\t      } else {\n\t       imgData.kind = ImageKind.RGBA_32BPP;\n\t       imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n\t       alpha01 = 1;\n\t       maybeUndoPreblend = true;\n\t       this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n\t      }\n\t      if (this.needsDecode) {\n\t       this.decodeBuffer(comps);\n\t      }\n\t      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n\t      if (maybeUndoPreblend) {\n\t       this.undoPreblend(imgData.data, drawWidth, actualHeight);\n\t      }\n\t      return imgData;\n\t     },\n\t     fillGrayBuffer: function PDFImage_fillGrayBuffer(buffer) {\n\t      var numComps = this.numComps;\n\t      if (numComps !== 1) {\n\t       error('Reading gray scale from a color image: ' + numComps);\n\t      }\n\t      var width = this.width;\n\t      var height = this.height;\n\t      var bpc = this.bpc;\n\t      var rowBytes = width * numComps * bpc + 7 >> 3;\n\t      var imgArray = this.getImageBytes(height * rowBytes);\n\t      var comps = this.getComponents(imgArray);\n\t      var i, length;\n\t      if (bpc === 1) {\n\t       length = width * height;\n\t       if (this.needsDecode) {\n\t        for (i = 0; i < length; ++i) {\n\t         buffer[i] = comps[i] - 1 & 255;\n\t        }\n\t       } else {\n\t        for (i = 0; i < length; ++i) {\n\t         buffer[i] = -comps[i] & 255;\n\t        }\n\t       }\n\t       return;\n\t      }\n\t      if (this.needsDecode) {\n\t       this.decodeBuffer(comps);\n\t      }\n\t      length = width * height;\n\t      var scale = 255 / ((1 << bpc) - 1);\n\t      for (i = 0; i < length; ++i) {\n\t       buffer[i] = scale * comps[i] | 0;\n\t      }\n\t     },\n\t     getImageBytes: function PDFImage_getImageBytes(length, drawWidth, drawHeight, forceRGB) {\n\t      this.image.reset();\n\t      this.image.drawWidth = drawWidth || this.width;\n\t      this.image.drawHeight = drawHeight || this.height;\n\t      this.image.forceRGB = !!forceRGB;\n\t      return this.image.getBytes(length);\n\t     }\n\t    };\n\t    return PDFImage;\n\t   }();\n\t   exports.PDFImage = PDFImage;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCoreObj = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreCrypto, root.pdfjsCoreParser, root.pdfjsCoreChunkedStream, root.pdfjsCoreColorSpace);\n\t  }(this, function (exports, sharedUtil, corePrimitives, coreCrypto, coreParser, coreChunkedStream, coreColorSpace) {\n\t   var InvalidPDFException = sharedUtil.InvalidPDFException;\n\t   var MissingDataException = sharedUtil.MissingDataException;\n\t   var XRefParseException = sharedUtil.XRefParseException;\n\t   var assert = sharedUtil.assert;\n\t   var bytesToString = sharedUtil.bytesToString;\n\t   var createPromiseCapability = sharedUtil.createPromiseCapability;\n\t   var error = sharedUtil.error;\n\t   var info = sharedUtil.info;\n\t   var isArray = sharedUtil.isArray;\n\t   var isBool = sharedUtil.isBool;\n\t   var isInt = sharedUtil.isInt;\n\t   var isString = sharedUtil.isString;\n\t   var shadow = sharedUtil.shadow;\n\t   var stringToPDFString = sharedUtil.stringToPDFString;\n\t   var stringToUTF8String = sharedUtil.stringToUTF8String;\n\t   var warn = sharedUtil.warn;\n\t   var createValidAbsoluteUrl = sharedUtil.createValidAbsoluteUrl;\n\t   var Util = sharedUtil.Util;\n\t   var Ref = corePrimitives.Ref;\n\t   var RefSet = corePrimitives.RefSet;\n\t   var RefSetCache = corePrimitives.RefSetCache;\n\t   var isName = corePrimitives.isName;\n\t   var isCmd = corePrimitives.isCmd;\n\t   var isDict = corePrimitives.isDict;\n\t   var isRef = corePrimitives.isRef;\n\t   var isRefsEqual = corePrimitives.isRefsEqual;\n\t   var isStream = corePrimitives.isStream;\n\t   var CipherTransformFactory = coreCrypto.CipherTransformFactory;\n\t   var Lexer = coreParser.Lexer;\n\t   var Parser = coreParser.Parser;\n\t   var ChunkedStream = coreChunkedStream.ChunkedStream;\n\t   var ColorSpace = coreColorSpace.ColorSpace;\n\t   var Catalog = function CatalogClosure() {\n\t    function Catalog(pdfManager, xref, pageFactory) {\n\t     this.pdfManager = pdfManager;\n\t     this.xref = xref;\n\t     this.catDict = xref.getCatalogObj();\n\t     this.fontCache = new RefSetCache();\n\t     assert(isDict(this.catDict), 'catalog object is not a dictionary');\n\t     this.pageFactory = pageFactory;\n\t     this.pagePromises = [];\n\t    }\n\t    Catalog.prototype = {\n\t     get metadata() {\n\t      var streamRef = this.catDict.getRaw('Metadata');\n\t      if (!isRef(streamRef)) {\n\t       return shadow(this, 'metadata', null);\n\t      }\n\t      var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\n\t      var stream = this.xref.fetch(streamRef, !encryptMetadata);\n\t      var metadata;\n\t      if (stream && isDict(stream.dict)) {\n\t       var type = stream.dict.get('Type');\n\t       var subtype = stream.dict.get('Subtype');\n\t       if (isName(type, 'Metadata') && isName(subtype, 'XML')) {\n\t        try {\n\t         metadata = stringToUTF8String(bytesToString(stream.getBytes()));\n\t        } catch (e) {\n\t         info('Skipping invalid metadata.');\n\t        }\n\t       }\n\t      }\n\t      return shadow(this, 'metadata', metadata);\n\t     },\n\t     get toplevelPagesDict() {\n\t      var pagesObj = this.catDict.get('Pages');\n\t      assert(isDict(pagesObj), 'invalid top-level pages dictionary');\n\t      return shadow(this, 'toplevelPagesDict', pagesObj);\n\t     },\n\t     get documentOutline() {\n\t      var obj = null;\n\t      try {\n\t       obj = this.readDocumentOutline();\n\t      } catch (ex) {\n\t       if (ex instanceof MissingDataException) {\n\t        throw ex;\n\t       }\n\t       warn('Unable to read document outline');\n\t      }\n\t      return shadow(this, 'documentOutline', obj);\n\t     },\n\t     readDocumentOutline: function Catalog_readDocumentOutline() {\n\t      var obj = this.catDict.get('Outlines');\n\t      if (!isDict(obj)) {\n\t       return null;\n\t      }\n\t      obj = obj.getRaw('First');\n\t      if (!isRef(obj)) {\n\t       return null;\n\t      }\n\t      var root = { items: [] };\n\t      var queue = [{\n\t        obj: obj,\n\t        parent: root\n\t       }];\n\t      var processed = new RefSet();\n\t      processed.put(obj);\n\t      var xref = this.xref, blackColor = new Uint8Array(3);\n\t      while (queue.length > 0) {\n\t       var i = queue.shift();\n\t       var outlineDict = xref.fetchIfRef(i.obj);\n\t       if (outlineDict === null) {\n\t        continue;\n\t       }\n\t       assert(outlineDict.has('Title'), 'Invalid outline item');\n\t       var data = {\n\t        url: null,\n\t        dest: null\n\t       };\n\t       Catalog.parseDestDictionary({\n\t        destDict: outlineDict,\n\t        resultObj: data,\n\t        docBaseUrl: this.pdfManager.docBaseUrl\n\t       });\n\t       var title = outlineDict.get('Title');\n\t       var flags = outlineDict.get('F') || 0;\n\t       var color = outlineDict.getArray('C'), rgbColor = blackColor;\n\t       if (isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n\t        rgbColor = ColorSpace.singletons.rgb.getRgb(color, 0);\n\t       }\n\t       var outlineItem = {\n\t        dest: data.dest,\n\t        url: data.url,\n\t        unsafeUrl: data.unsafeUrl,\n\t        newWindow: data.newWindow,\n\t        title: stringToPDFString(title),\n\t        color: rgbColor,\n\t        count: outlineDict.get('Count'),\n\t        bold: !!(flags & 2),\n\t        italic: !!(flags & 1),\n\t        items: []\n\t       };\n\t       i.parent.items.push(outlineItem);\n\t       obj = outlineDict.getRaw('First');\n\t       if (isRef(obj) && !processed.has(obj)) {\n\t        queue.push({\n\t         obj: obj,\n\t         parent: outlineItem\n\t        });\n\t        processed.put(obj);\n\t       }\n\t       obj = outlineDict.getRaw('Next');\n\t       if (isRef(obj) && !processed.has(obj)) {\n\t        queue.push({\n\t         obj: obj,\n\t         parent: i.parent\n\t        });\n\t        processed.put(obj);\n\t       }\n\t      }\n\t      return root.items.length > 0 ? root.items : null;\n\t     },\n\t     get numPages() {\n\t      var obj = this.toplevelPagesDict.get('Count');\n\t      assert(isInt(obj), 'page count in top level pages object is not an integer');\n\t      return shadow(this, 'num', obj);\n\t     },\n\t     get destinations() {\n\t      function fetchDestination(dest) {\n\t       return isDict(dest) ? dest.get('D') : dest;\n\t      }\n\t      var xref = this.xref;\n\t      var dests = {}, nameTreeRef, nameDictionaryRef;\n\t      var obj = this.catDict.get('Names');\n\t      if (obj && obj.has('Dests')) {\n\t       nameTreeRef = obj.getRaw('Dests');\n\t      } else if (this.catDict.has('Dests')) {\n\t       nameDictionaryRef = this.catDict.get('Dests');\n\t      }\n\t      if (nameDictionaryRef) {\n\t       obj = nameDictionaryRef;\n\t       obj.forEach(function catalogForEach(key, value) {\n\t        if (!value) {\n\t         return;\n\t        }\n\t        dests[key] = fetchDestination(value);\n\t       });\n\t      }\n\t      if (nameTreeRef) {\n\t       var nameTree = new NameTree(nameTreeRef, xref);\n\t       var names = nameTree.getAll();\n\t       for (var name in names) {\n\t        dests[name] = fetchDestination(names[name]);\n\t       }\n\t      }\n\t      return shadow(this, 'destinations', dests);\n\t     },\n\t     getDestination: function Catalog_getDestination(destinationId) {\n\t      function fetchDestination(dest) {\n\t       return isDict(dest) ? dest.get('D') : dest;\n\t      }\n\t      var xref = this.xref;\n\t      var dest = null, nameTreeRef, nameDictionaryRef;\n\t      var obj = this.catDict.get('Names');\n\t      if (obj && obj.has('Dests')) {\n\t       nameTreeRef = obj.getRaw('Dests');\n\t      } else if (this.catDict.has('Dests')) {\n\t       nameDictionaryRef = this.catDict.get('Dests');\n\t      }\n\t      if (nameDictionaryRef) {\n\t       var value = nameDictionaryRef.get(destinationId);\n\t       if (value) {\n\t        dest = fetchDestination(value);\n\t       }\n\t      }\n\t      if (nameTreeRef) {\n\t       var nameTree = new NameTree(nameTreeRef, xref);\n\t       dest = fetchDestination(nameTree.get(destinationId));\n\t      }\n\t      return dest;\n\t     },\n\t     get pageLabels() {\n\t      var obj = null;\n\t      try {\n\t       obj = this.readPageLabels();\n\t      } catch (ex) {\n\t       if (ex instanceof MissingDataException) {\n\t        throw ex;\n\t       }\n\t       warn('Unable to read page labels.');\n\t      }\n\t      return shadow(this, 'pageLabels', obj);\n\t     },\n\t     readPageLabels: function Catalog_readPageLabels() {\n\t      var obj = this.catDict.getRaw('PageLabels');\n\t      if (!obj) {\n\t       return null;\n\t      }\n\t      var pageLabels = new Array(this.numPages);\n\t      var style = null;\n\t      var prefix = '';\n\t      var numberTree = new NumberTree(obj, this.xref);\n\t      var nums = numberTree.getAll();\n\t      var currentLabel = '', currentIndex = 1;\n\t      for (var i = 0, ii = this.numPages; i < ii; i++) {\n\t       if (i in nums) {\n\t        var labelDict = nums[i];\n\t        assert(isDict(labelDict), 'The PageLabel is not a dictionary.');\n\t        var type = labelDict.get('Type');\n\t        assert(!type || isName(type, 'PageLabel'), 'Invalid type in PageLabel dictionary.');\n\t        var s = labelDict.get('S');\n\t        assert(!s || isName(s), 'Invalid style in PageLabel dictionary.');\n\t        style = s ? s.name : null;\n\t        var p = labelDict.get('P');\n\t        assert(!p || isString(p), 'Invalid prefix in PageLabel dictionary.');\n\t        prefix = p ? stringToPDFString(p) : '';\n\t        var st = labelDict.get('St');\n\t        assert(!st || isInt(st) && st >= 1, 'Invalid start in PageLabel dictionary.');\n\t        currentIndex = st || 1;\n\t       }\n\t       switch (style) {\n\t       case 'D':\n\t        currentLabel = currentIndex;\n\t        break;\n\t       case 'R':\n\t       case 'r':\n\t        currentLabel = Util.toRoman(currentIndex, style === 'r');\n\t        break;\n\t       case 'A':\n\t       case 'a':\n\t        var LIMIT = 26;\n\t        var A_UPPER_CASE = 0x41, A_LOWER_CASE = 0x61;\n\t        var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\n\t        var letterIndex = currentIndex - 1;\n\t        var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n\t        var charBuf = [];\n\t        for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n\t         charBuf.push(character);\n\t        }\n\t        currentLabel = charBuf.join('');\n\t        break;\n\t       default:\n\t        assert(!style, 'Invalid style \"' + style + '\" in PageLabel dictionary.');\n\t       }\n\t       pageLabels[i] = prefix + currentLabel;\n\t       currentLabel = '';\n\t       currentIndex++;\n\t      }\n\t      return pageLabels;\n\t     },\n\t     get attachments() {\n\t      var xref = this.xref;\n\t      var attachments = null, nameTreeRef;\n\t      var obj = this.catDict.get('Names');\n\t      if (obj) {\n\t       nameTreeRef = obj.getRaw('EmbeddedFiles');\n\t      }\n\t      if (nameTreeRef) {\n\t       var nameTree = new NameTree(nameTreeRef, xref);\n\t       var names = nameTree.getAll();\n\t       for (var name in names) {\n\t        var fs = new FileSpec(names[name], xref);\n\t        if (!attachments) {\n\t         attachments = Object.create(null);\n\t        }\n\t        attachments[stringToPDFString(name)] = fs.serializable;\n\t       }\n\t      }\n\t      return shadow(this, 'attachments', attachments);\n\t     },\n\t     get javaScript() {\n\t      var xref = this.xref;\n\t      var obj = this.catDict.get('Names');\n\t      var javaScript = [];\n\t      function appendIfJavaScriptDict(jsDict) {\n\t       var type = jsDict.get('S');\n\t       if (!isName(type, 'JavaScript')) {\n\t        return;\n\t       }\n\t       var js = jsDict.get('JS');\n\t       if (isStream(js)) {\n\t        js = bytesToString(js.getBytes());\n\t       } else if (!isString(js)) {\n\t        return;\n\t       }\n\t       javaScript.push(stringToPDFString(js));\n\t      }\n\t      if (obj && obj.has('JavaScript')) {\n\t       var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n\t       var names = nameTree.getAll();\n\t       for (var name in names) {\n\t        var jsDict = names[name];\n\t        if (isDict(jsDict)) {\n\t         appendIfJavaScriptDict(jsDict);\n\t        }\n\t       }\n\t      }\n\t      var openactionDict = this.catDict.get('OpenAction');\n\t      if (isDict(openactionDict, 'Action')) {\n\t       var actionType = openactionDict.get('S');\n\t       if (isName(actionType, 'Named')) {\n\t        var action = openactionDict.get('N');\n\t        if (isName(action, 'Print')) {\n\t         javaScript.push('print({});');\n\t        }\n\t       } else {\n\t        appendIfJavaScriptDict(openactionDict);\n\t       }\n\t      }\n\t      return shadow(this, 'javaScript', javaScript);\n\t     },\n\t     cleanup: function Catalog_cleanup() {\n\t      var promises = [];\n\t      this.fontCache.forEach(function (promise) {\n\t       promises.push(promise);\n\t      });\n\t      return Promise.all(promises).then(function (translatedFonts) {\n\t       for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n\t        var font = translatedFonts[i].dict;\n\t        delete font.translated;\n\t       }\n\t       this.fontCache.clear();\n\t      }.bind(this));\n\t     },\n\t     getPage: function Catalog_getPage(pageIndex) {\n\t      if (!(pageIndex in this.pagePromises)) {\n\t       this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (a) {\n\t        var dict = a[0];\n\t        var ref = a[1];\n\t        return this.pageFactory.createPage(pageIndex, dict, ref, this.fontCache);\n\t       }.bind(this));\n\t      }\n\t      return this.pagePromises[pageIndex];\n\t     },\n\t     getPageDict: function Catalog_getPageDict(pageIndex) {\n\t      var capability = createPromiseCapability();\n\t      var nodesToVisit = [this.catDict.getRaw('Pages')];\n\t      var currentPageIndex = 0;\n\t      var xref = this.xref;\n\t      var checkAllKids = false;\n\t      function next() {\n\t       while (nodesToVisit.length) {\n\t        var currentNode = nodesToVisit.pop();\n\t        if (isRef(currentNode)) {\n\t         xref.fetchAsync(currentNode).then(function (obj) {\n\t          if (isDict(obj, 'Page') || isDict(obj) && !obj.has('Kids')) {\n\t           if (pageIndex === currentPageIndex) {\n\t            capability.resolve([\n\t             obj,\n\t             currentNode\n\t            ]);\n\t           } else {\n\t            currentPageIndex++;\n\t            next();\n\t           }\n\t           return;\n\t          }\n\t          nodesToVisit.push(obj);\n\t          next();\n\t         }, capability.reject);\n\t         return;\n\t        }\n\t        assert(isDict(currentNode), 'page dictionary kid reference points to wrong type of object');\n\t        var count = currentNode.get('Count');\n\t        if (count === 0) {\n\t         checkAllKids = true;\n\t        }\n\t        if (currentPageIndex + count <= pageIndex) {\n\t         currentPageIndex += count;\n\t         continue;\n\t        }\n\t        var kids = currentNode.get('Kids');\n\t        assert(isArray(kids), 'page dictionary kids object is not an array');\n\t        if (!checkAllKids && count === kids.length) {\n\t         nodesToVisit = [kids[pageIndex - currentPageIndex]];\n\t         currentPageIndex = pageIndex;\n\t         continue;\n\t        } else {\n\t         for (var last = kids.length - 1; last >= 0; last--) {\n\t          nodesToVisit.push(kids[last]);\n\t         }\n\t        }\n\t       }\n\t       capability.reject('Page index ' + pageIndex + ' not found.');\n\t      }\n\t      next();\n\t      return capability.promise;\n\t     },\n\t     getPageIndex: function Catalog_getPageIndex(pageRef) {\n\t      var xref = this.xref;\n\t      function pagesBeforeRef(kidRef) {\n\t       var total = 0;\n\t       var parentRef;\n\t       return xref.fetchAsync(kidRef).then(function (node) {\n\t        if (isRefsEqual(kidRef, pageRef) && !isDict(node, 'Page') && !(isDict(node) && !node.has('Type') && node.has('Contents'))) {\n\t         throw new Error('The reference does not point to a /Page Dict.');\n\t        }\n\t        if (!node) {\n\t         return null;\n\t        }\n\t        assert(isDict(node), 'node must be a Dict.');\n\t        parentRef = node.getRaw('Parent');\n\t        return node.getAsync('Parent');\n\t       }).then(function (parent) {\n\t        if (!parent) {\n\t         return null;\n\t        }\n\t        assert(isDict(parent), 'parent must be a Dict.');\n\t        return parent.getAsync('Kids');\n\t       }).then(function (kids) {\n\t        if (!kids) {\n\t         return null;\n\t        }\n\t        var kidPromises = [];\n\t        var found = false;\n\t        for (var i = 0; i < kids.length; i++) {\n\t         var kid = kids[i];\n\t         assert(isRef(kid), 'kid must be a Ref.');\n\t         if (kid.num === kidRef.num) {\n\t          found = true;\n\t          break;\n\t         }\n\t         kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n\t          if (kid.has('Count')) {\n\t           var count = kid.get('Count');\n\t           total += count;\n\t          } else {\n\t           total++;\n\t          }\n\t         }));\n\t        }\n\t        if (!found) {\n\t         error('kid ref not found in parents kids');\n\t        }\n\t        return Promise.all(kidPromises).then(function () {\n\t         return [\n\t          total,\n\t          parentRef\n\t         ];\n\t        });\n\t       });\n\t      }\n\t      var total = 0;\n\t      function next(ref) {\n\t       return pagesBeforeRef(ref).then(function (args) {\n\t        if (!args) {\n\t         return total;\n\t        }\n\t        var count = args[0];\n\t        var parentRef = args[1];\n\t        total += count;\n\t        return next(parentRef);\n\t       });\n\t      }\n\t      return next(pageRef);\n\t     }\n\t    };\n\t    Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\n\t     function addDefaultProtocolToUrl(url) {\n\t      if (url.indexOf('www.') === 0) {\n\t       return 'http://' + url;\n\t      }\n\t      return url;\n\t     }\n\t     function tryConvertUrlEncoding(url) {\n\t      try {\n\t       return stringToUTF8String(url);\n\t      } catch (e) {\n\t       return url;\n\t      }\n\t     }\n\t     var destDict = params.destDict;\n\t     if (!isDict(destDict)) {\n\t      warn('Catalog_parseDestDictionary: \"destDict\" must be a dictionary.');\n\t      return;\n\t     }\n\t     var resultObj = params.resultObj;\n\t     if (typeof resultObj !== 'object') {\n\t      warn('Catalog_parseDestDictionary: \"resultObj\" must be an object.');\n\t      return;\n\t     }\n\t     var docBaseUrl = params.docBaseUrl || null;\n\t     var action = destDict.get('A'), url, dest;\n\t     if (isDict(action)) {\n\t      var linkType = action.get('S').name;\n\t      switch (linkType) {\n\t      case 'URI':\n\t       url = action.get('URI');\n\t       if (isName(url)) {\n\t        url = '/' + url.name;\n\t       } else if (isString(url)) {\n\t        url = addDefaultProtocolToUrl(url);\n\t       }\n\t       break;\n\t      case 'GoTo':\n\t       dest = action.get('D');\n\t       break;\n\t      case 'Launch':\n\t      case 'GoToR':\n\t       var urlDict = action.get('F');\n\t       if (isDict(urlDict)) {\n\t        url = urlDict.get('F') || null;\n\t       } else if (isString(urlDict)) {\n\t        url = urlDict;\n\t       }\n\t       var remoteDest = action.get('D');\n\t       if (remoteDest) {\n\t        if (isName(remoteDest)) {\n\t         remoteDest = remoteDest.name;\n\t        }\n\t        if (isString(url)) {\n\t         var baseUrl = url.split('#')[0];\n\t         if (isString(remoteDest)) {\n\t          url = baseUrl + '#' + (/^\\d+$/.test(remoteDest) ? 'nameddest=' : '') + remoteDest;\n\t         } else if (isArray(remoteDest)) {\n\t          url = baseUrl + '#' + JSON.stringify(remoteDest);\n\t         }\n\t        }\n\t       }\n\t       var newWindow = action.get('NewWindow');\n\t       if (isBool(newWindow)) {\n\t        resultObj.newWindow = newWindow;\n\t       }\n\t       break;\n\t      case 'Named':\n\t       var namedAction = action.get('N');\n\t       if (isName(namedAction)) {\n\t        resultObj.action = namedAction.name;\n\t       }\n\t       break;\n\t      case 'JavaScript':\n\t       var jsAction = action.get('JS'), js;\n\t       if (isStream(jsAction)) {\n\t        js = bytesToString(jsAction.getBytes());\n\t       } else if (isString(jsAction)) {\n\t        js = jsAction;\n\t       }\n\t       if (js) {\n\t        var URL_OPEN_METHODS = [\n\t         'app.launchURL',\n\t         'window.open'\n\t        ];\n\t        var regex = new RegExp('^(?:' + URL_OPEN_METHODS.join('|') + ')' + '\\\\((?:\\'|\\\")(\\\\S+)(?:\\'|\\\")(?:,|\\\\))');\n\t        var jsUrl = regex.exec(stringToPDFString(js), 'i');\n\t        if (jsUrl && jsUrl[1]) {\n\t         url = jsUrl[1];\n\t         break;\n\t        }\n\t       }\n\t      default:\n\t       warn('Catalog_parseDestDictionary: Unrecognized link type \"' + linkType + '\".');\n\t       break;\n\t      }\n\t     } else if (destDict.has('Dest')) {\n\t      dest = destDict.get('Dest');\n\t     }\n\t     if (isString(url)) {\n\t      url = tryConvertUrlEncoding(url);\n\t      var absoluteUrl = createValidAbsoluteUrl(url, docBaseUrl);\n\t      if (absoluteUrl) {\n\t       resultObj.url = absoluteUrl.href;\n\t      }\n\t      resultObj.unsafeUrl = url;\n\t     }\n\t     if (dest) {\n\t      if (isName(dest)) {\n\t       dest = dest.name;\n\t      }\n\t      if (isString(dest) || isArray(dest)) {\n\t       resultObj.dest = dest;\n\t      }\n\t     }\n\t    };\n\t    return Catalog;\n\t   }();\n\t   var XRef = function XRefClosure() {\n\t    function XRef(stream, pdfManager) {\n\t     this.stream = stream;\n\t     this.pdfManager = pdfManager;\n\t     this.entries = [];\n\t     this.xrefstms = Object.create(null);\n\t     this.cache = [];\n\t     this.stats = {\n\t      streamTypes: [],\n\t      fontTypes: []\n\t     };\n\t    }\n\t    XRef.prototype = {\n\t     setStartXRef: function XRef_setStartXRef(startXRef) {\n\t      this.startXRefQueue = [startXRef];\n\t     },\n\t     parse: function XRef_parse(recoveryMode) {\n\t      var trailerDict;\n\t      if (!recoveryMode) {\n\t       trailerDict = this.readXRef();\n\t      } else {\n\t       warn('Indexing all PDF objects');\n\t       trailerDict = this.indexObjects();\n\t      }\n\t      trailerDict.assignXref(this);\n\t      this.trailer = trailerDict;\n\t      var encrypt = trailerDict.get('Encrypt');\n\t      if (isDict(encrypt)) {\n\t       var ids = trailerDict.get('ID');\n\t       var fileId = ids && ids.length ? ids[0] : '';\n\t       encrypt.suppressEncryption = true;\n\t       this.encrypt = new CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n\t      }\n\t      if (!(this.root = trailerDict.get('Root'))) {\n\t       error('Invalid root reference');\n\t      }\n\t     },\n\t     processXRefTable: function XRef_processXRefTable(parser) {\n\t      if (!('tableState' in this)) {\n\t       this.tableState = {\n\t        entryNum: 0,\n\t        streamPos: parser.lexer.stream.pos,\n\t        parserBuf1: parser.buf1,\n\t        parserBuf2: parser.buf2\n\t       };\n\t      }\n\t      var obj = this.readXRefTable(parser);\n\t      if (!isCmd(obj, 'trailer')) {\n\t       error('Invalid XRef table: could not find trailer dictionary');\n\t      }\n\t      var dict = parser.getObj();\n\t      if (!isDict(dict) && dict.dict) {\n\t       dict = dict.dict;\n\t      }\n\t      if (!isDict(dict)) {\n\t       error('Invalid XRef table: could not parse trailer dictionary');\n\t      }\n\t      delete this.tableState;\n\t      return dict;\n\t     },\n\t     readXRefTable: function XRef_readXRefTable(parser) {\n\t      var stream = parser.lexer.stream;\n\t      var tableState = this.tableState;\n\t      stream.pos = tableState.streamPos;\n\t      parser.buf1 = tableState.parserBuf1;\n\t      parser.buf2 = tableState.parserBuf2;\n\t      var obj;\n\t      while (true) {\n\t       if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n\t        if (isCmd(obj = parser.getObj(), 'trailer')) {\n\t         break;\n\t        }\n\t        tableState.firstEntryNum = obj;\n\t        tableState.entryCount = parser.getObj();\n\t       }\n\t       var first = tableState.firstEntryNum;\n\t       var count = tableState.entryCount;\n\t       if (!isInt(first) || !isInt(count)) {\n\t        error('Invalid XRef table: wrong types in subsection header');\n\t       }\n\t       for (var i = tableState.entryNum; i < count; i++) {\n\t        tableState.streamPos = stream.pos;\n\t        tableState.entryNum = i;\n\t        tableState.parserBuf1 = parser.buf1;\n\t        tableState.parserBuf2 = parser.buf2;\n\t        var entry = {};\n\t        entry.offset = parser.getObj();\n\t        entry.gen = parser.getObj();\n\t        var type = parser.getObj();\n\t        if (isCmd(type, 'f')) {\n\t         entry.free = true;\n\t        } else if (isCmd(type, 'n')) {\n\t         entry.uncompressed = true;\n\t        }\n\t        if (!isInt(entry.offset) || !isInt(entry.gen) || !(entry.free || entry.uncompressed)) {\n\t         error('Invalid entry in XRef subsection: ' + first + ', ' + count);\n\t        }\n\t        if (i === 0 && entry.free && first === 1) {\n\t         first = 0;\n\t        }\n\t        if (!this.entries[i + first]) {\n\t         this.entries[i + first] = entry;\n\t        }\n\t       }\n\t       tableState.entryNum = 0;\n\t       tableState.streamPos = stream.pos;\n\t       tableState.parserBuf1 = parser.buf1;\n\t       tableState.parserBuf2 = parser.buf2;\n\t       delete tableState.firstEntryNum;\n\t       delete tableState.entryCount;\n\t      }\n\t      if (this.entries[0] && !this.entries[0].free) {\n\t       error('Invalid XRef table: unexpected first object');\n\t      }\n\t      return obj;\n\t     },\n\t     processXRefStream: function XRef_processXRefStream(stream) {\n\t      if (!('streamState' in this)) {\n\t       var streamParameters = stream.dict;\n\t       var byteWidths = streamParameters.get('W');\n\t       var range = streamParameters.get('Index');\n\t       if (!range) {\n\t        range = [\n\t         0,\n\t         streamParameters.get('Size')\n\t        ];\n\t       }\n\t       this.streamState = {\n\t        entryRanges: range,\n\t        byteWidths: byteWidths,\n\t        entryNum: 0,\n\t        streamPos: stream.pos\n\t       };\n\t      }\n\t      this.readXRefStream(stream);\n\t      delete this.streamState;\n\t      return stream.dict;\n\t     },\n\t     readXRefStream: function XRef_readXRefStream(stream) {\n\t      var i, j;\n\t      var streamState = this.streamState;\n\t      stream.pos = streamState.streamPos;\n\t      var byteWidths = streamState.byteWidths;\n\t      var typeFieldWidth = byteWidths[0];\n\t      var offsetFieldWidth = byteWidths[1];\n\t      var generationFieldWidth = byteWidths[2];\n\t      var entryRanges = streamState.entryRanges;\n\t      while (entryRanges.length > 0) {\n\t       var first = entryRanges[0];\n\t       var n = entryRanges[1];\n\t       if (!isInt(first) || !isInt(n)) {\n\t        error('Invalid XRef range fields: ' + first + ', ' + n);\n\t       }\n\t       if (!isInt(typeFieldWidth) || !isInt(offsetFieldWidth) || !isInt(generationFieldWidth)) {\n\t        error('Invalid XRef entry fields length: ' + first + ', ' + n);\n\t       }\n\t       for (i = streamState.entryNum; i < n; ++i) {\n\t        streamState.entryNum = i;\n\t        streamState.streamPos = stream.pos;\n\t        var type = 0, offset = 0, generation = 0;\n\t        for (j = 0; j < typeFieldWidth; ++j) {\n\t         type = type << 8 | stream.getByte();\n\t        }\n\t        if (typeFieldWidth === 0) {\n\t         type = 1;\n\t        }\n\t        for (j = 0; j < offsetFieldWidth; ++j) {\n\t         offset = offset << 8 | stream.getByte();\n\t        }\n\t        for (j = 0; j < generationFieldWidth; ++j) {\n\t         generation = generation << 8 | stream.getByte();\n\t        }\n\t        var entry = {};\n\t        entry.offset = offset;\n\t        entry.gen = generation;\n\t        switch (type) {\n\t        case 0:\n\t         entry.free = true;\n\t         break;\n\t        case 1:\n\t         entry.uncompressed = true;\n\t         break;\n\t        case 2:\n\t         break;\n\t        default:\n\t         error('Invalid XRef entry type: ' + type);\n\t        }\n\t        if (!this.entries[first + i]) {\n\t         this.entries[first + i] = entry;\n\t        }\n\t       }\n\t       streamState.entryNum = 0;\n\t       streamState.streamPos = stream.pos;\n\t       entryRanges.splice(0, 2);\n\t      }\n\t     },\n\t     indexObjects: function XRef_indexObjects() {\n\t      var TAB = 0x9, LF = 0xA, CR = 0xD, SPACE = 0x20;\n\t      var PERCENT = 0x25, LT = 0x3C;\n\t      function readToken(data, offset) {\n\t       var token = '', ch = data[offset];\n\t       while (ch !== LF && ch !== CR && ch !== LT) {\n\t        if (++offset >= data.length) {\n\t         break;\n\t        }\n\t        token += String.fromCharCode(ch);\n\t        ch = data[offset];\n\t       }\n\t       return token;\n\t      }\n\t      function skipUntil(data, offset, what) {\n\t       var length = what.length, dataLength = data.length;\n\t       var skipped = 0;\n\t       while (offset < dataLength) {\n\t        var i = 0;\n\t        while (i < length && data[offset + i] === what[i]) {\n\t         ++i;\n\t        }\n\t        if (i >= length) {\n\t         break;\n\t        }\n\t        offset++;\n\t        skipped++;\n\t       }\n\t       return skipped;\n\t      }\n\t      var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n\t      var trailerBytes = new Uint8Array([\n\t       116,\n\t       114,\n\t       97,\n\t       105,\n\t       108,\n\t       101,\n\t       114\n\t      ]);\n\t      var startxrefBytes = new Uint8Array([\n\t       115,\n\t       116,\n\t       97,\n\t       114,\n\t       116,\n\t       120,\n\t       114,\n\t       101,\n\t       102\n\t      ]);\n\t      var endobjBytes = new Uint8Array([\n\t       101,\n\t       110,\n\t       100,\n\t       111,\n\t       98,\n\t       106\n\t      ]);\n\t      var xrefBytes = new Uint8Array([\n\t       47,\n\t       88,\n\t       82,\n\t       101,\n\t       102\n\t      ]);\n\t      this.entries.length = 0;\n\t      var stream = this.stream;\n\t      stream.pos = 0;\n\t      var buffer = stream.getBytes();\n\t      var position = stream.start, length = buffer.length;\n\t      var trailers = [], xrefStms = [];\n\t      while (position < length) {\n\t       var ch = buffer[position];\n\t       if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n\t        ++position;\n\t        continue;\n\t       }\n\t       if (ch === PERCENT) {\n\t        do {\n\t         ++position;\n\t         if (position >= length) {\n\t          break;\n\t         }\n\t         ch = buffer[position];\n\t        } while (ch !== LF && ch !== CR);\n\t        continue;\n\t       }\n\t       var token = readToken(buffer, position);\n\t       var m;\n\t       if (token.indexOf('xref') === 0 && (token.length === 4 || /\\s/.test(token[4]))) {\n\t        position += skipUntil(buffer, position, trailerBytes);\n\t        trailers.push(position);\n\t        position += skipUntil(buffer, position, startxrefBytes);\n\t       } else if (m = objRegExp.exec(token)) {\n\t        if (typeof this.entries[m[1]] === 'undefined') {\n\t         this.entries[m[1]] = {\n\t          offset: position - stream.start,\n\t          gen: m[2] | 0,\n\t          uncompressed: true\n\t         };\n\t        }\n\t        var contentLength = skipUntil(buffer, position, endobjBytes) + 7;\n\t        var content = buffer.subarray(position, position + contentLength);\n\t        var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n\t        if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n\t         xrefStms.push(position - stream.start);\n\t         this.xrefstms[position - stream.start] = 1;\n\t        }\n\t        position += contentLength;\n\t       } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\s/.test(token[7]))) {\n\t        trailers.push(position);\n\t        position += skipUntil(buffer, position, startxrefBytes);\n\t       } else {\n\t        position += token.length + 1;\n\t       }\n\t      }\n\t      var i, ii;\n\t      for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n\t       this.startXRefQueue.push(xrefStms[i]);\n\t       this.readXRef(true);\n\t      }\n\t      var dict;\n\t      for (i = 0, ii = trailers.length; i < ii; ++i) {\n\t       stream.pos = trailers[i];\n\t       var parser = new Parser(new Lexer(stream), true, this, true);\n\t       var obj = parser.getObj();\n\t       if (!isCmd(obj, 'trailer')) {\n\t        continue;\n\t       }\n\t       dict = parser.getObj();\n\t       if (!isDict(dict)) {\n\t        continue;\n\t       }\n\t       if (dict.has('ID')) {\n\t        return dict;\n\t       }\n\t      }\n\t      if (dict) {\n\t       return dict;\n\t      }\n\t      throw new InvalidPDFException('Invalid PDF structure');\n\t     },\n\t     readXRef: function XRef_readXRef(recoveryMode) {\n\t      var stream = this.stream;\n\t      try {\n\t       while (this.startXRefQueue.length) {\n\t        var startXRef = this.startXRefQueue[0];\n\t        stream.pos = startXRef + stream.start;\n\t        var parser = new Parser(new Lexer(stream), true, this);\n\t        var obj = parser.getObj();\n\t        var dict;\n\t        if (isCmd(obj, 'xref')) {\n\t         dict = this.processXRefTable(parser);\n\t         if (!this.topDict) {\n\t          this.topDict = dict;\n\t         }\n\t         obj = dict.get('XRefStm');\n\t         if (isInt(obj)) {\n\t          var pos = obj;\n\t          if (!(pos in this.xrefstms)) {\n\t           this.xrefstms[pos] = 1;\n\t           this.startXRefQueue.push(pos);\n\t          }\n\t         }\n\t        } else if (isInt(obj)) {\n\t         if (!isInt(parser.getObj()) || !isCmd(parser.getObj(), 'obj') || !isStream(obj = parser.getObj())) {\n\t          error('Invalid XRef stream');\n\t         }\n\t         dict = this.processXRefStream(obj);\n\t         if (!this.topDict) {\n\t          this.topDict = dict;\n\t         }\n\t         if (!dict) {\n\t          error('Failed to read XRef stream');\n\t         }\n\t        } else {\n\t         error('Invalid XRef stream header');\n\t        }\n\t        obj = dict.get('Prev');\n\t        if (isInt(obj)) {\n\t         this.startXRefQueue.push(obj);\n\t        } else if (isRef(obj)) {\n\t         this.startXRefQueue.push(obj.num);\n\t        }\n\t        this.startXRefQueue.shift();\n\t       }\n\t       return this.topDict;\n\t      } catch (e) {\n\t       if (e instanceof MissingDataException) {\n\t        throw e;\n\t       }\n\t       info('(while reading XRef): ' + e);\n\t      }\n\t      if (recoveryMode) {\n\t       return;\n\t      }\n\t      throw new XRefParseException();\n\t     },\n\t     getEntry: function XRef_getEntry(i) {\n\t      var xrefEntry = this.entries[i];\n\t      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n\t       return xrefEntry;\n\t      }\n\t      return null;\n\t     },\n\t     fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n\t      if (!isRef(obj)) {\n\t       return obj;\n\t      }\n\t      return this.fetch(obj, suppressEncryption);\n\t     },\n\t     fetch: function XRef_fetch(ref, suppressEncryption) {\n\t      assert(isRef(ref), 'ref object is not a reference');\n\t      var num = ref.num;\n\t      if (num in this.cache) {\n\t       var cacheEntry = this.cache[num];\n\t       return cacheEntry;\n\t      }\n\t      var xrefEntry = this.getEntry(num);\n\t      if (xrefEntry === null) {\n\t       return this.cache[num] = null;\n\t      }\n\t      if (xrefEntry.uncompressed) {\n\t       xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n\t      } else {\n\t       xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n\t      }\n\t      if (isDict(xrefEntry)) {\n\t       xrefEntry.objId = ref.toString();\n\t      } else if (isStream(xrefEntry)) {\n\t       xrefEntry.dict.objId = ref.toString();\n\t      }\n\t      return xrefEntry;\n\t     },\n\t     fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\n\t      var gen = ref.gen;\n\t      var num = ref.num;\n\t      if (xrefEntry.gen !== gen) {\n\t       error('inconsistent generation in XRef');\n\t      }\n\t      var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n\t      var parser = new Parser(new Lexer(stream), true, this);\n\t      var obj1 = parser.getObj();\n\t      var obj2 = parser.getObj();\n\t      var obj3 = parser.getObj();\n\t      if (!isInt(obj1) || parseInt(obj1, 10) !== num || !isInt(obj2) || parseInt(obj2, 10) !== gen || !isCmd(obj3)) {\n\t       error('bad XRef entry');\n\t      }\n\t      if (!isCmd(obj3, 'obj')) {\n\t       if (obj3.cmd.indexOf('obj') === 0) {\n\t        num = parseInt(obj3.cmd.substring(3), 10);\n\t        if (!isNaN(num)) {\n\t         return num;\n\t        }\n\t       }\n\t       error('bad XRef entry');\n\t      }\n\t      if (this.encrypt && !suppressEncryption) {\n\t       xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n\t      } else {\n\t       xrefEntry = parser.getObj();\n\t      }\n\t      if (!isStream(xrefEntry)) {\n\t       this.cache[num] = xrefEntry;\n\t      }\n\t      return xrefEntry;\n\t     },\n\t     fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\n\t      var tableOffset = xrefEntry.offset;\n\t      var stream = this.fetch(new Ref(tableOffset, 0));\n\t      if (!isStream(stream)) {\n\t       error('bad ObjStm stream');\n\t      }\n\t      var first = stream.dict.get('First');\n\t      var n = stream.dict.get('N');\n\t      if (!isInt(first) || !isInt(n)) {\n\t       error('invalid first and n parameters for ObjStm stream');\n\t      }\n\t      var parser = new Parser(new Lexer(stream), false, this);\n\t      parser.allowStreams = true;\n\t      var i, entries = [], num, nums = [];\n\t      for (i = 0; i < n; ++i) {\n\t       num = parser.getObj();\n\t       if (!isInt(num)) {\n\t        error('invalid object number in the ObjStm stream: ' + num);\n\t       }\n\t       nums.push(num);\n\t       var offset = parser.getObj();\n\t       if (!isInt(offset)) {\n\t        error('invalid object offset in the ObjStm stream: ' + offset);\n\t       }\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t       entries.push(parser.getObj());\n\t       if (isCmd(parser.buf1, 'endobj')) {\n\t        parser.shift();\n\t       }\n\t       num = nums[i];\n\t       var entry = this.entries[num];\n\t       if (entry && entry.offset === tableOffset && entry.gen === i) {\n\t        this.cache[num] = entries[i];\n\t       }\n\t      }\n\t      xrefEntry = entries[xrefEntry.gen];\n\t      if (xrefEntry === undefined) {\n\t       error('bad XRef entry for compressed object');\n\t      }\n\t      return xrefEntry;\n\t     },\n\t     fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\n\t      if (!isRef(obj)) {\n\t       return Promise.resolve(obj);\n\t      }\n\t      return this.fetchAsync(obj, suppressEncryption);\n\t     },\n\t     fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n\t      var streamManager = this.stream.manager;\n\t      var xref = this;\n\t      return new Promise(function tryFetch(resolve, reject) {\n\t       try {\n\t        resolve(xref.fetch(ref, suppressEncryption));\n\t       } catch (e) {\n\t        if (e instanceof MissingDataException) {\n\t         streamManager.requestRange(e.begin, e.end).then(function () {\n\t          tryFetch(resolve, reject);\n\t         }, reject);\n\t         return;\n\t        }\n\t        reject(e);\n\t       }\n\t      });\n\t     },\n\t     getCatalogObj: function XRef_getCatalogObj() {\n\t      return this.root;\n\t     }\n\t    };\n\t    return XRef;\n\t   }();\n\t   var NameOrNumberTree = function NameOrNumberTreeClosure() {\n\t    function NameOrNumberTree(root, xref) {\n\t     throw new Error('Cannot initialize NameOrNumberTree.');\n\t    }\n\t    NameOrNumberTree.prototype = {\n\t     getAll: function NameOrNumberTree_getAll() {\n\t      var dict = Object.create(null);\n\t      if (!this.root) {\n\t       return dict;\n\t      }\n\t      var xref = this.xref;\n\t      var processed = new RefSet();\n\t      processed.put(this.root);\n\t      var queue = [this.root];\n\t      while (queue.length > 0) {\n\t       var i, n;\n\t       var obj = xref.fetchIfRef(queue.shift());\n\t       if (!isDict(obj)) {\n\t        continue;\n\t       }\n\t       if (obj.has('Kids')) {\n\t        var kids = obj.get('Kids');\n\t        for (i = 0, n = kids.length; i < n; i++) {\n\t         var kid = kids[i];\n\t         assert(!processed.has(kid), 'Duplicate entry in \"' + this._type + '\" tree.');\n\t         queue.push(kid);\n\t         processed.put(kid);\n\t        }\n\t        continue;\n\t       }\n\t       var entries = obj.get(this._type);\n\t       if (isArray(entries)) {\n\t        for (i = 0, n = entries.length; i < n; i += 2) {\n\t         dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\n\t        }\n\t       }\n\t      }\n\t      return dict;\n\t     },\n\t     get: function NameOrNumberTree_get(key) {\n\t      if (!this.root) {\n\t       return null;\n\t      }\n\t      var xref = this.xref;\n\t      var kidsOrEntries = xref.fetchIfRef(this.root);\n\t      var loopCount = 0;\n\t      var MAX_LEVELS = 10;\n\t      var l, r, m;\n\t      while (kidsOrEntries.has('Kids')) {\n\t       if (++loopCount > MAX_LEVELS) {\n\t        warn('Search depth limit reached for \"' + this._type + '\" tree.');\n\t        return null;\n\t       }\n\t       var kids = kidsOrEntries.get('Kids');\n\t       if (!isArray(kids)) {\n\t        return null;\n\t       }\n\t       l = 0;\n\t       r = kids.length - 1;\n\t       while (l <= r) {\n\t        m = l + r >> 1;\n\t        var kid = xref.fetchIfRef(kids[m]);\n\t        var limits = kid.get('Limits');\n\t        if (key < xref.fetchIfRef(limits[0])) {\n\t         r = m - 1;\n\t        } else if (key > xref.fetchIfRef(limits[1])) {\n\t         l = m + 1;\n\t        } else {\n\t         kidsOrEntries = xref.fetchIfRef(kids[m]);\n\t         break;\n\t        }\n\t       }\n\t       if (l > r) {\n\t        return null;\n\t       }\n\t      }\n\t      var entries = kidsOrEntries.get(this._type);\n\t      if (isArray(entries)) {\n\t       l = 0;\n\t       r = entries.length - 2;\n\t       while (l <= r) {\n\t        m = l + r & ~1;\n\t        var currentKey = xref.fetchIfRef(entries[m]);\n\t        if (key < currentKey) {\n\t         r = m - 2;\n\t        } else if (key > currentKey) {\n\t         l = m + 2;\n\t        } else {\n\t         return xref.fetchIfRef(entries[m + 1]);\n\t        }\n\t       }\n\t      }\n\t      return null;\n\t     }\n\t    };\n\t    return NameOrNumberTree;\n\t   }();\n\t   var NameTree = function NameTreeClosure() {\n\t    function NameTree(root, xref) {\n\t     this.root = root;\n\t     this.xref = xref;\n\t     this._type = 'Names';\n\t    }\n\t    Util.inherit(NameTree, NameOrNumberTree, {});\n\t    return NameTree;\n\t   }();\n\t   var NumberTree = function NumberTreeClosure() {\n\t    function NumberTree(root, xref) {\n\t     this.root = root;\n\t     this.xref = xref;\n\t     this._type = 'Nums';\n\t    }\n\t    Util.inherit(NumberTree, NameOrNumberTree, {});\n\t    return NumberTree;\n\t   }();\n\t   var FileSpec = function FileSpecClosure() {\n\t    function FileSpec(root, xref) {\n\t     if (!root || !isDict(root)) {\n\t      return;\n\t     }\n\t     this.xref = xref;\n\t     this.root = root;\n\t     if (root.has('FS')) {\n\t      this.fs = root.get('FS');\n\t     }\n\t     this.description = root.has('Desc') ? stringToPDFString(root.get('Desc')) : '';\n\t     if (root.has('RF')) {\n\t      warn('Related file specifications are not supported');\n\t     }\n\t     this.contentAvailable = true;\n\t     if (!root.has('EF')) {\n\t      this.contentAvailable = false;\n\t      warn('Non-embedded file specifications are not supported');\n\t     }\n\t    }\n\t    function pickPlatformItem(dict) {\n\t     if (dict.has('UF')) {\n\t      return dict.get('UF');\n\t     } else if (dict.has('F')) {\n\t      return dict.get('F');\n\t     } else if (dict.has('Unix')) {\n\t      return dict.get('Unix');\n\t     } else if (dict.has('Mac')) {\n\t      return dict.get('Mac');\n\t     } else if (dict.has('DOS')) {\n\t      return dict.get('DOS');\n\t     }\n\t     return null;\n\t    }\n\t    FileSpec.prototype = {\n\t     get filename() {\n\t      if (!this._filename && this.root) {\n\t       var filename = pickPlatformItem(this.root) || 'unnamed';\n\t       this._filename = stringToPDFString(filename).replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\//g, '/').replace(/\\\\/g, '/');\n\t      }\n\t      return this._filename;\n\t     },\n\t     get content() {\n\t      if (!this.contentAvailable) {\n\t       return null;\n\t      }\n\t      if (!this.contentRef && this.root) {\n\t       this.contentRef = pickPlatformItem(this.root.get('EF'));\n\t      }\n\t      var content = null;\n\t      if (this.contentRef) {\n\t       var xref = this.xref;\n\t       var fileObj = xref.fetchIfRef(this.contentRef);\n\t       if (fileObj && isStream(fileObj)) {\n\t        content = fileObj.getBytes();\n\t       } else {\n\t        warn('Embedded file specification points to non-existing/invalid ' + 'content');\n\t       }\n\t      } else {\n\t       warn('Embedded file specification does not have a content');\n\t      }\n\t      return content;\n\t     },\n\t     get serializable() {\n\t      return {\n\t       filename: this.filename,\n\t       content: this.content\n\t      };\n\t     }\n\t    };\n\t    return FileSpec;\n\t   }();\n\t   var ObjectLoader = function () {\n\t    function mayHaveChildren(value) {\n\t     return isRef(value) || isDict(value) || isArray(value) || isStream(value);\n\t    }\n\t    function addChildren(node, nodesToVisit) {\n\t     var value;\n\t     if (isDict(node) || isStream(node)) {\n\t      var map;\n\t      if (isDict(node)) {\n\t       map = node.map;\n\t      } else {\n\t       map = node.dict.map;\n\t      }\n\t      for (var key in map) {\n\t       value = map[key];\n\t       if (mayHaveChildren(value)) {\n\t        nodesToVisit.push(value);\n\t       }\n\t      }\n\t     } else if (isArray(node)) {\n\t      for (var i = 0, ii = node.length; i < ii; i++) {\n\t       value = node[i];\n\t       if (mayHaveChildren(value)) {\n\t        nodesToVisit.push(value);\n\t       }\n\t      }\n\t     }\n\t    }\n\t    function ObjectLoader(obj, keys, xref) {\n\t     this.obj = obj;\n\t     this.keys = keys;\n\t     this.xref = xref;\n\t     this.refSet = null;\n\t     this.capability = null;\n\t    }\n\t    ObjectLoader.prototype = {\n\t     load: function ObjectLoader_load() {\n\t      var keys = this.keys;\n\t      this.capability = createPromiseCapability();\n\t      if (!(this.xref.stream instanceof ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\n\t       this.capability.resolve();\n\t       return this.capability.promise;\n\t      }\n\t      this.refSet = new RefSet();\n\t      var nodesToVisit = [];\n\t      for (var i = 0; i < keys.length; i++) {\n\t       nodesToVisit.push(this.obj[keys[i]]);\n\t      }\n\t      this._walk(nodesToVisit);\n\t      return this.capability.promise;\n\t     },\n\t     _walk: function ObjectLoader_walk(nodesToVisit) {\n\t      var nodesToRevisit = [];\n\t      var pendingRequests = [];\n\t      while (nodesToVisit.length) {\n\t       var currentNode = nodesToVisit.pop();\n\t       if (isRef(currentNode)) {\n\t        if (this.refSet.has(currentNode)) {\n\t         continue;\n\t        }\n\t        try {\n\t         var ref = currentNode;\n\t         this.refSet.put(ref);\n\t         currentNode = this.xref.fetch(currentNode);\n\t        } catch (e) {\n\t         if (!(e instanceof MissingDataException)) {\n\t          throw e;\n\t         }\n\t         nodesToRevisit.push(currentNode);\n\t         pendingRequests.push({\n\t          begin: e.begin,\n\t          end: e.end\n\t         });\n\t        }\n\t       }\n\t       if (currentNode && currentNode.getBaseStreams) {\n\t        var baseStreams = currentNode.getBaseStreams();\n\t        var foundMissingData = false;\n\t        for (var i = 0; i < baseStreams.length; i++) {\n\t         var stream = baseStreams[i];\n\t         if (stream.getMissingChunks && stream.getMissingChunks().length) {\n\t          foundMissingData = true;\n\t          pendingRequests.push({\n\t           begin: stream.start,\n\t           end: stream.end\n\t          });\n\t         }\n\t        }\n\t        if (foundMissingData) {\n\t         nodesToRevisit.push(currentNode);\n\t        }\n\t       }\n\t       addChildren(currentNode, nodesToVisit);\n\t      }\n\t      if (pendingRequests.length) {\n\t       this.xref.stream.manager.requestRanges(pendingRequests).then(function pendingRequestCallback() {\n\t        nodesToVisit = nodesToRevisit;\n\t        for (var i = 0; i < nodesToRevisit.length; i++) {\n\t         var node = nodesToRevisit[i];\n\t         if (isRef(node)) {\n\t          this.refSet.remove(node);\n\t         }\n\t        }\n\t        this._walk(nodesToVisit);\n\t       }.bind(this), this.capability.reject);\n\t       return;\n\t      }\n\t      this.refSet = null;\n\t      this.capability.resolve();\n\t     }\n\t    };\n\t    return ObjectLoader;\n\t   }();\n\t   exports.Catalog = Catalog;\n\t   exports.ObjectLoader = ObjectLoader;\n\t   exports.XRef = XRef;\n\t   exports.FileSpec = FileSpec;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCorePattern = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreFunction, root.pdfjsCoreColorSpace);\n\t  }(this, function (exports, sharedUtil, corePrimitives, coreFunction, coreColorSpace) {\n\t   var UNSUPPORTED_FEATURES = sharedUtil.UNSUPPORTED_FEATURES;\n\t   var MissingDataException = sharedUtil.MissingDataException;\n\t   var Util = sharedUtil.Util;\n\t   var assert = sharedUtil.assert;\n\t   var error = sharedUtil.error;\n\t   var info = sharedUtil.info;\n\t   var warn = sharedUtil.warn;\n\t   var isStream = corePrimitives.isStream;\n\t   var PDFFunction = coreFunction.PDFFunction;\n\t   var ColorSpace = coreColorSpace.ColorSpace;\n\t   var ShadingType = {\n\t    FUNCTION_BASED: 1,\n\t    AXIAL: 2,\n\t    RADIAL: 3,\n\t    FREE_FORM_MESH: 4,\n\t    LATTICE_FORM_MESH: 5,\n\t    COONS_PATCH_MESH: 6,\n\t    TENSOR_PATCH_MESH: 7\n\t   };\n\t   var Pattern = function PatternClosure() {\n\t    function Pattern() {\n\t     error('should not call Pattern constructor');\n\t    }\n\t    Pattern.prototype = {\n\t     getPattern: function Pattern_getPattern(ctx) {\n\t      error('Should not call Pattern.getStyle: ' + ctx);\n\t     }\n\t    };\n\t    Pattern.parseShading = function Pattern_parseShading(shading, matrix, xref, res, handler) {\n\t     var dict = isStream(shading) ? shading.dict : shading;\n\t     var type = dict.get('ShadingType');\n\t     try {\n\t      switch (type) {\n\t      case ShadingType.AXIAL:\n\t      case ShadingType.RADIAL:\n\t       return new Shadings.RadialAxial(dict, matrix, xref, res);\n\t      case ShadingType.FREE_FORM_MESH:\n\t      case ShadingType.LATTICE_FORM_MESH:\n\t      case ShadingType.COONS_PATCH_MESH:\n\t      case ShadingType.TENSOR_PATCH_MESH:\n\t       return new Shadings.Mesh(shading, matrix, xref, res);\n\t      default:\n\t       throw new Error('Unsupported ShadingType: ' + type);\n\t      }\n\t     } catch (ex) {\n\t      if (ex instanceof MissingDataException) {\n\t       throw ex;\n\t      }\n\t      handler.send('UnsupportedFeature', { featureId: UNSUPPORTED_FEATURES.shadingPattern });\n\t      warn(ex);\n\t      return new Shadings.Dummy();\n\t     }\n\t    };\n\t    return Pattern;\n\t   }();\n\t   var Shadings = {};\n\t   Shadings.SMALL_NUMBER = 1e-6;\n\t   Shadings.RadialAxial = function RadialAxialClosure() {\n\t    function RadialAxial(dict, matrix, xref, res) {\n\t     this.matrix = matrix;\n\t     this.coordsArr = dict.getArray('Coords');\n\t     this.shadingType = dict.get('ShadingType');\n\t     this.type = 'Pattern';\n\t     var cs = dict.get('ColorSpace', 'CS');\n\t     cs = ColorSpace.parse(cs, xref, res);\n\t     this.cs = cs;\n\t     var t0 = 0.0, t1 = 1.0;\n\t     if (dict.has('Domain')) {\n\t      var domainArr = dict.getArray('Domain');\n\t      t0 = domainArr[0];\n\t      t1 = domainArr[1];\n\t     }\n\t     var extendStart = false, extendEnd = false;\n\t     if (dict.has('Extend')) {\n\t      var extendArr = dict.getArray('Extend');\n\t      extendStart = extendArr[0];\n\t      extendEnd = extendArr[1];\n\t     }\n\t     if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n\t      var x1 = this.coordsArr[0];\n\t      var y1 = this.coordsArr[1];\n\t      var r1 = this.coordsArr[2];\n\t      var x2 = this.coordsArr[3];\n\t      var y2 = this.coordsArr[4];\n\t      var r2 = this.coordsArr[5];\n\t      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n\t      if (r1 <= r2 + distance && r2 <= r1 + distance) {\n\t       warn('Unsupported radial gradient.');\n\t      }\n\t     }\n\t     this.extendStart = extendStart;\n\t     this.extendEnd = extendEnd;\n\t     var fnObj = dict.get('Function');\n\t     var fn = PDFFunction.parseArray(xref, fnObj);\n\t     var diff = t1 - t0;\n\t     var step = diff / 10;\n\t     var colorStops = this.colorStops = [];\n\t     if (t0 >= t1 || step <= 0) {\n\t      info('Bad shading domain.');\n\t      return;\n\t     }\n\t     var color = new Float32Array(cs.numComps), ratio = new Float32Array(1);\n\t     var rgbColor;\n\t     for (var i = t0; i <= t1; i += step) {\n\t      ratio[0] = i;\n\t      fn(ratio, 0, color, 0);\n\t      rgbColor = cs.getRgb(color, 0);\n\t      var cssColor = Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n\t      colorStops.push([\n\t       (i - t0) / diff,\n\t       cssColor\n\t      ]);\n\t     }\n\t     var background = 'transparent';\n\t     if (dict.has('Background')) {\n\t      rgbColor = cs.getRgb(dict.get('Background'), 0);\n\t      background = Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n\t     }\n\t     if (!extendStart) {\n\t      colorStops.unshift([\n\t       0,\n\t       background\n\t      ]);\n\t      colorStops[1][0] += Shadings.SMALL_NUMBER;\n\t     }\n\t     if (!extendEnd) {\n\t      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n\t      colorStops.push([\n\t       1,\n\t       background\n\t      ]);\n\t     }\n\t     this.colorStops = colorStops;\n\t    }\n\t    RadialAxial.prototype = {\n\t     getIR: function RadialAxial_getIR() {\n\t      var coordsArr = this.coordsArr;\n\t      var shadingType = this.shadingType;\n\t      var type, p0, p1, r0, r1;\n\t      if (shadingType === ShadingType.AXIAL) {\n\t       p0 = [\n\t        coordsArr[0],\n\t        coordsArr[1]\n\t       ];\n\t       p1 = [\n\t        coordsArr[2],\n\t        coordsArr[3]\n\t       ];\n\t       r0 = null;\n\t       r1 = null;\n\t       type = 'axial';\n\t      } else if (shadingType === ShadingType.RADIAL) {\n\t       p0 = [\n\t        coordsArr[0],\n\t        coordsArr[1]\n\t       ];\n\t       p1 = [\n\t        coordsArr[3],\n\t        coordsArr[4]\n\t       ];\n\t       r0 = coordsArr[2];\n\t       r1 = coordsArr[5];\n\t       type = 'radial';\n\t      } else {\n\t       error('getPattern type unknown: ' + shadingType);\n\t      }\n\t      var matrix = this.matrix;\n\t      if (matrix) {\n\t       p0 = Util.applyTransform(p0, matrix);\n\t       p1 = Util.applyTransform(p1, matrix);\n\t       if (shadingType === ShadingType.RADIAL) {\n\t        var scale = Util.singularValueDecompose2dScale(matrix);\n\t        r0 *= scale[0];\n\t        r1 *= scale[1];\n\t       }\n\t      }\n\t      return [\n\t       'RadialAxial',\n\t       type,\n\t       this.colorStops,\n\t       p0,\n\t       p1,\n\t       r0,\n\t       r1\n\t      ];\n\t     }\n\t    };\n\t    return RadialAxial;\n\t   }();\n\t   Shadings.Mesh = function MeshClosure() {\n\t    function MeshStreamReader(stream, context) {\n\t     this.stream = stream;\n\t     this.context = context;\n\t     this.buffer = 0;\n\t     this.bufferLength = 0;\n\t     var numComps = context.numComps;\n\t     this.tmpCompsBuf = new Float32Array(numComps);\n\t     var csNumComps = context.colorSpace.numComps;\n\t     this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n\t    }\n\t    MeshStreamReader.prototype = {\n\t     get hasData() {\n\t      if (this.stream.end) {\n\t       return this.stream.pos < this.stream.end;\n\t      }\n\t      if (this.bufferLength > 0) {\n\t       return true;\n\t      }\n\t      var nextByte = this.stream.getByte();\n\t      if (nextByte < 0) {\n\t       return false;\n\t      }\n\t      this.buffer = nextByte;\n\t      this.bufferLength = 8;\n\t      return true;\n\t     },\n\t     readBits: function MeshStreamReader_readBits(n) {\n\t      var buffer = this.buffer;\n\t      var bufferLength = this.bufferLength;\n\t      if (n === 32) {\n\t       if (bufferLength === 0) {\n\t        return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n\t       }\n\t       buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n\t       var nextByte = this.stream.getByte();\n\t       this.buffer = nextByte & (1 << bufferLength) - 1;\n\t       return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\n\t      }\n\t      if (n === 8 && bufferLength === 0) {\n\t       return this.stream.getByte();\n\t      }\n\t      while (bufferLength < n) {\n\t       buffer = buffer << 8 | this.stream.getByte();\n\t       bufferLength += 8;\n\t      }\n\t      bufferLength -= n;\n\t      this.bufferLength = bufferLength;\n\t      this.buffer = buffer & (1 << bufferLength) - 1;\n\t      return buffer >> bufferLength;\n\t     },\n\t     align: function MeshStreamReader_align() {\n\t      this.buffer = 0;\n\t      this.bufferLength = 0;\n\t     },\n\t     readFlag: function MeshStreamReader_readFlag() {\n\t      return this.readBits(this.context.bitsPerFlag);\n\t     },\n\t     readCoordinate: function MeshStreamReader_readCoordinate() {\n\t      var bitsPerCoordinate = this.context.bitsPerCoordinate;\n\t      var xi = this.readBits(bitsPerCoordinate);\n\t      var yi = this.readBits(bitsPerCoordinate);\n\t      var decode = this.context.decode;\n\t      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n\t      return [\n\t       xi * scale * (decode[1] - decode[0]) + decode[0],\n\t       yi * scale * (decode[3] - decode[2]) + decode[2]\n\t      ];\n\t     },\n\t     readComponents: function MeshStreamReader_readComponents() {\n\t      var numComps = this.context.numComps;\n\t      var bitsPerComponent = this.context.bitsPerComponent;\n\t      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n\t      var decode = this.context.decode;\n\t      var components = this.tmpCompsBuf;\n\t      for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n\t       var ci = this.readBits(bitsPerComponent);\n\t       components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n\t      }\n\t      var color = this.tmpCsCompsBuf;\n\t      if (this.context.colorFn) {\n\t       this.context.colorFn(components, 0, color, 0);\n\t      }\n\t      return this.context.colorSpace.getRgb(color, 0);\n\t     }\n\t    };\n\t    function decodeType4Shading(mesh, reader) {\n\t     var coords = mesh.coords;\n\t     var colors = mesh.colors;\n\t     var operators = [];\n\t     var ps = [];\n\t     var verticesLeft = 0;\n\t     while (reader.hasData) {\n\t      var f = reader.readFlag();\n\t      var coord = reader.readCoordinate();\n\t      var color = reader.readComponents();\n\t      if (verticesLeft === 0) {\n\t       assert(0 <= f && f <= 2, 'Unknown type4 flag');\n\t       switch (f) {\n\t       case 0:\n\t        verticesLeft = 3;\n\t        break;\n\t       case 1:\n\t        ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n\t        verticesLeft = 1;\n\t        break;\n\t       case 2:\n\t        ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n\t        verticesLeft = 1;\n\t        break;\n\t       }\n\t       operators.push(f);\n\t      }\n\t      ps.push(coords.length);\n\t      coords.push(coord);\n\t      colors.push(color);\n\t      verticesLeft--;\n\t      reader.align();\n\t     }\n\t     mesh.figures.push({\n\t      type: 'triangles',\n\t      coords: new Int32Array(ps),\n\t      colors: new Int32Array(ps)\n\t     });\n\t    }\n\t    function decodeType5Shading(mesh, reader, verticesPerRow) {\n\t     var coords = mesh.coords;\n\t     var colors = mesh.colors;\n\t     var ps = [];\n\t     while (reader.hasData) {\n\t      var coord = reader.readCoordinate();\n\t      var color = reader.readComponents();\n\t      ps.push(coords.length);\n\t      coords.push(coord);\n\t      colors.push(color);\n\t     }\n\t     mesh.figures.push({\n\t      type: 'lattice',\n\t      coords: new Int32Array(ps),\n\t      colors: new Int32Array(ps),\n\t      verticesPerRow: verticesPerRow\n\t     });\n\t    }\n\t    var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n\t    var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n\t    var TRIANGLE_DENSITY = 20;\n\t    var getB = function getBClosure() {\n\t     function buildB(count) {\n\t      var lut = [];\n\t      for (var i = 0; i <= count; i++) {\n\t       var t = i / count, t_ = 1 - t;\n\t       lut.push(new Float32Array([\n\t        t_ * t_ * t_,\n\t        3 * t * t_ * t_,\n\t        3 * t * t * t_,\n\t        t * t * t\n\t       ]));\n\t      }\n\t      return lut;\n\t     }\n\t     var cache = [];\n\t     return function getB(count) {\n\t      if (!cache[count]) {\n\t       cache[count] = buildB(count);\n\t      }\n\t      return cache[count];\n\t     };\n\t    }();\n\t    function buildFigureFromPatch(mesh, index) {\n\t     var figure = mesh.figures[index];\n\t     assert(figure.type === 'patch', 'Unexpected patch mesh figure');\n\t     var coords = mesh.coords, colors = mesh.colors;\n\t     var pi = figure.coords;\n\t     var ci = figure.colors;\n\t     var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n\t     var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n\t     var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n\t     var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n\t     var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n\t     splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n\t     var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n\t     splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n\t     var verticesPerRow = splitXBy + 1;\n\t     var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n\t     var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n\t     var k = 0;\n\t     var cl = new Uint8Array(3), cr = new Uint8Array(3);\n\t     var c0 = colors[ci[0]], c1 = colors[ci[1]], c2 = colors[ci[2]], c3 = colors[ci[3]];\n\t     var bRow = getB(splitYBy), bCol = getB(splitXBy);\n\t     for (var row = 0; row <= splitYBy; row++) {\n\t      cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n\t      cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n\t      cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n\t      cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n\t      cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n\t      cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n\t      for (var col = 0; col <= splitXBy; col++, k++) {\n\t       if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n\t        continue;\n\t       }\n\t       var x = 0, y = 0;\n\t       var q = 0;\n\t       for (var i = 0; i <= 3; i++) {\n\t        for (var j = 0; j <= 3; j++, q++) {\n\t         var m = bRow[row][i] * bCol[col][j];\n\t         x += coords[pi[q]][0] * m;\n\t         y += coords[pi[q]][1] * m;\n\t        }\n\t       }\n\t       figureCoords[k] = coords.length;\n\t       coords.push([\n\t        x,\n\t        y\n\t       ]);\n\t       figureColors[k] = colors.length;\n\t       var newColor = new Uint8Array(3);\n\t       newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n\t       newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n\t       newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n\t       colors.push(newColor);\n\t      }\n\t     }\n\t     figureCoords[0] = pi[0];\n\t     figureColors[0] = ci[0];\n\t     figureCoords[splitXBy] = pi[3];\n\t     figureColors[splitXBy] = ci[1];\n\t     figureCoords[verticesPerRow * splitYBy] = pi[12];\n\t     figureColors[verticesPerRow * splitYBy] = ci[2];\n\t     figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n\t     figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n\t     mesh.figures[index] = {\n\t      type: 'lattice',\n\t      coords: figureCoords,\n\t      colors: figureColors,\n\t      verticesPerRow: verticesPerRow\n\t     };\n\t    }\n\t    function decodeType6Shading(mesh, reader) {\n\t     var coords = mesh.coords;\n\t     var colors = mesh.colors;\n\t     var ps = new Int32Array(16);\n\t     var cs = new Int32Array(4);\n\t     while (reader.hasData) {\n\t      var f = reader.readFlag();\n\t      assert(0 <= f && f <= 3, 'Unknown type6 flag');\n\t      var i, ii;\n\t      var pi = coords.length;\n\t      for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n\t       coords.push(reader.readCoordinate());\n\t      }\n\t      var ci = colors.length;\n\t      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n\t       colors.push(reader.readComponents());\n\t      }\n\t      var tmp1, tmp2, tmp3, tmp4;\n\t      switch (f) {\n\t      case 0:\n\t       ps[12] = pi + 3;\n\t       ps[13] = pi + 4;\n\t       ps[14] = pi + 5;\n\t       ps[15] = pi + 6;\n\t       ps[8] = pi + 2;\n\t       ps[11] = pi + 7;\n\t       ps[4] = pi + 1;\n\t       ps[7] = pi + 8;\n\t       ps[0] = pi;\n\t       ps[1] = pi + 11;\n\t       ps[2] = pi + 10;\n\t       ps[3] = pi + 9;\n\t       cs[2] = ci + 1;\n\t       cs[3] = ci + 2;\n\t       cs[0] = ci;\n\t       cs[1] = ci + 3;\n\t       break;\n\t      case 1:\n\t       tmp1 = ps[12];\n\t       tmp2 = ps[13];\n\t       tmp3 = ps[14];\n\t       tmp4 = ps[15];\n\t       ps[12] = tmp4;\n\t       ps[13] = pi + 0;\n\t       ps[14] = pi + 1;\n\t       ps[15] = pi + 2;\n\t       ps[8] = tmp3;\n\t       ps[11] = pi + 3;\n\t       ps[4] = tmp2;\n\t       ps[7] = pi + 4;\n\t       ps[0] = tmp1;\n\t       ps[1] = pi + 7;\n\t       ps[2] = pi + 6;\n\t       ps[3] = pi + 5;\n\t       tmp1 = cs[2];\n\t       tmp2 = cs[3];\n\t       cs[2] = tmp2;\n\t       cs[3] = ci;\n\t       cs[0] = tmp1;\n\t       cs[1] = ci + 1;\n\t       break;\n\t      case 2:\n\t       tmp1 = ps[15];\n\t       tmp2 = ps[11];\n\t       ps[12] = ps[3];\n\t       ps[13] = pi + 0;\n\t       ps[14] = pi + 1;\n\t       ps[15] = pi + 2;\n\t       ps[8] = ps[7];\n\t       ps[11] = pi + 3;\n\t       ps[4] = tmp2;\n\t       ps[7] = pi + 4;\n\t       ps[0] = tmp1;\n\t       ps[1] = pi + 7;\n\t       ps[2] = pi + 6;\n\t       ps[3] = pi + 5;\n\t       tmp1 = cs[3];\n\t       cs[2] = cs[1];\n\t       cs[3] = ci;\n\t       cs[0] = tmp1;\n\t       cs[1] = ci + 1;\n\t       break;\n\t      case 3:\n\t       ps[12] = ps[0];\n\t       ps[13] = pi + 0;\n\t       ps[14] = pi + 1;\n\t       ps[15] = pi + 2;\n\t       ps[8] = ps[1];\n\t       ps[11] = pi + 3;\n\t       ps[4] = ps[2];\n\t       ps[7] = pi + 4;\n\t       ps[0] = ps[3];\n\t       ps[1] = pi + 7;\n\t       ps[2] = pi + 6;\n\t       ps[3] = pi + 5;\n\t       cs[2] = cs[0];\n\t       cs[3] = ci;\n\t       cs[0] = cs[1];\n\t       cs[1] = ci + 1;\n\t       break;\n\t      }\n\t      ps[5] = coords.length;\n\t      coords.push([\n\t       (-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9,\n\t       (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9\n\t      ]);\n\t      ps[6] = coords.length;\n\t      coords.push([\n\t       (-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9,\n\t       (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9\n\t      ]);\n\t      ps[9] = coords.length;\n\t      coords.push([\n\t       (-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9,\n\t       (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9\n\t      ]);\n\t      ps[10] = coords.length;\n\t      coords.push([\n\t       (-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9,\n\t       (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9\n\t      ]);\n\t      mesh.figures.push({\n\t       type: 'patch',\n\t       coords: new Int32Array(ps),\n\t       colors: new Int32Array(cs)\n\t      });\n\t     }\n\t    }\n\t    function decodeType7Shading(mesh, reader) {\n\t     var coords = mesh.coords;\n\t     var colors = mesh.colors;\n\t     var ps = new Int32Array(16);\n\t     var cs = new Int32Array(4);\n\t     while (reader.hasData) {\n\t      var f = reader.readFlag();\n\t      assert(0 <= f && f <= 3, 'Unknown type7 flag');\n\t      var i, ii;\n\t      var pi = coords.length;\n\t      for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n\t       coords.push(reader.readCoordinate());\n\t      }\n\t      var ci = colors.length;\n\t      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n\t       colors.push(reader.readComponents());\n\t      }\n\t      var tmp1, tmp2, tmp3, tmp4;\n\t      switch (f) {\n\t      case 0:\n\t       ps[12] = pi + 3;\n\t       ps[13] = pi + 4;\n\t       ps[14] = pi + 5;\n\t       ps[15] = pi + 6;\n\t       ps[8] = pi + 2;\n\t       ps[9] = pi + 13;\n\t       ps[10] = pi + 14;\n\t       ps[11] = pi + 7;\n\t       ps[4] = pi + 1;\n\t       ps[5] = pi + 12;\n\t       ps[6] = pi + 15;\n\t       ps[7] = pi + 8;\n\t       ps[0] = pi;\n\t       ps[1] = pi + 11;\n\t       ps[2] = pi + 10;\n\t       ps[3] = pi + 9;\n\t       cs[2] = ci + 1;\n\t       cs[3] = ci + 2;\n\t       cs[0] = ci;\n\t       cs[1] = ci + 3;\n\t       break;\n\t      case 1:\n\t       tmp1 = ps[12];\n\t       tmp2 = ps[13];\n\t       tmp3 = ps[14];\n\t       tmp4 = ps[15];\n\t       ps[12] = tmp4;\n\t       ps[13] = pi + 0;\n\t       ps[14] = pi + 1;\n\t       ps[15] = pi + 2;\n\t       ps[8] = tmp3;\n\t       ps[9] = pi + 9;\n\t       ps[10] = pi + 10;\n\t       ps[11] = pi + 3;\n\t       ps[4] = tmp2;\n\t       ps[5] = pi + 8;\n\t       ps[6] = pi + 11;\n\t       ps[7] = pi + 4;\n\t       ps[0] = tmp1;\n\t       ps[1] = pi + 7;\n\t       ps[2] = pi + 6;\n\t       ps[3] = pi + 5;\n\t       tmp1 = cs[2];\n\t       tmp2 = cs[3];\n\t       cs[2] = tmp2;\n\t       cs[3] = ci;\n\t       cs[0] = tmp1;\n\t       cs[1] = ci + 1;\n\t       break;\n\t      case 2:\n\t       tmp1 = ps[15];\n\t       tmp2 = ps[11];\n\t       ps[12] = ps[3];\n\t       ps[13] = pi + 0;\n\t       ps[14] = pi + 1;\n\t       ps[15] = pi + 2;\n\t       ps[8] = ps[7];\n\t       ps[9] = pi + 9;\n\t       ps[10] = pi + 10;\n\t       ps[11] = pi + 3;\n\t       ps[4] = tmp2;\n\t       ps[5] = pi + 8;\n\t       ps[6] = pi + 11;\n\t       ps[7] = pi + 4;\n\t       ps[0] = tmp1;\n\t       ps[1] = pi + 7;\n\t       ps[2] = pi + 6;\n\t       ps[3] = pi + 5;\n\t       tmp1 = cs[3];\n\t       cs[2] = cs[1];\n\t       cs[3] = ci;\n\t       cs[0] = tmp1;\n\t       cs[1] = ci + 1;\n\t       break;\n\t      case 3:\n\t       ps[12] = ps[0];\n\t       ps[13] = pi + 0;\n\t       ps[14] = pi + 1;\n\t       ps[15] = pi + 2;\n\t       ps[8] = ps[1];\n\t       ps[9] = pi + 9;\n\t       ps[10] = pi + 10;\n\t       ps[11] = pi + 3;\n\t       ps[4] = ps[2];\n\t       ps[5] = pi + 8;\n\t       ps[6] = pi + 11;\n\t       ps[7] = pi + 4;\n\t       ps[0] = ps[3];\n\t       ps[1] = pi + 7;\n\t       ps[2] = pi + 6;\n\t       ps[3] = pi + 5;\n\t       cs[2] = cs[0];\n\t       cs[3] = ci;\n\t       cs[0] = cs[1];\n\t       cs[1] = ci + 1;\n\t       break;\n\t      }\n\t      mesh.figures.push({\n\t       type: 'patch',\n\t       coords: new Int32Array(ps),\n\t       colors: new Int32Array(cs)\n\t      });\n\t     }\n\t    }\n\t    function updateBounds(mesh) {\n\t     var minX = mesh.coords[0][0], minY = mesh.coords[0][1], maxX = minX, maxY = minY;\n\t     for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n\t      var x = mesh.coords[i][0], y = mesh.coords[i][1];\n\t      minX = minX > x ? x : minX;\n\t      minY = minY > y ? y : minY;\n\t      maxX = maxX < x ? x : maxX;\n\t      maxY = maxY < y ? y : maxY;\n\t     }\n\t     mesh.bounds = [\n\t      minX,\n\t      minY,\n\t      maxX,\n\t      maxY\n\t     ];\n\t    }\n\t    function packData(mesh) {\n\t     var i, ii, j, jj;\n\t     var coords = mesh.coords;\n\t     var coordsPacked = new Float32Array(coords.length * 2);\n\t     for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n\t      var xy = coords[i];\n\t      coordsPacked[j++] = xy[0];\n\t      coordsPacked[j++] = xy[1];\n\t     }\n\t     mesh.coords = coordsPacked;\n\t     var colors = mesh.colors;\n\t     var colorsPacked = new Uint8Array(colors.length * 3);\n\t     for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n\t      var c = colors[i];\n\t      colorsPacked[j++] = c[0];\n\t      colorsPacked[j++] = c[1];\n\t      colorsPacked[j++] = c[2];\n\t     }\n\t     mesh.colors = colorsPacked;\n\t     var figures = mesh.figures;\n\t     for (i = 0, ii = figures.length; i < ii; i++) {\n\t      var figure = figures[i], ps = figure.coords, cs = figure.colors;\n\t      for (j = 0, jj = ps.length; j < jj; j++) {\n\t       ps[j] *= 2;\n\t       cs[j] *= 3;\n\t      }\n\t     }\n\t    }\n\t    function Mesh(stream, matrix, xref, res) {\n\t     assert(isStream(stream), 'Mesh data is not a stream');\n\t     var dict = stream.dict;\n\t     this.matrix = matrix;\n\t     this.shadingType = dict.get('ShadingType');\n\t     this.type = 'Pattern';\n\t     this.bbox = dict.getArray('BBox');\n\t     var cs = dict.get('ColorSpace', 'CS');\n\t     cs = ColorSpace.parse(cs, xref, res);\n\t     this.cs = cs;\n\t     this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\n\t     var fnObj = dict.get('Function');\n\t     var fn = fnObj ? PDFFunction.parseArray(xref, fnObj) : null;\n\t     this.coords = [];\n\t     this.colors = [];\n\t     this.figures = [];\n\t     var decodeContext = {\n\t      bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n\t      bitsPerComponent: dict.get('BitsPerComponent'),\n\t      bitsPerFlag: dict.get('BitsPerFlag'),\n\t      decode: dict.getArray('Decode'),\n\t      colorFn: fn,\n\t      colorSpace: cs,\n\t      numComps: fn ? 1 : cs.numComps\n\t     };\n\t     var reader = new MeshStreamReader(stream, decodeContext);\n\t     var patchMesh = false;\n\t     switch (this.shadingType) {\n\t     case ShadingType.FREE_FORM_MESH:\n\t      decodeType4Shading(this, reader);\n\t      break;\n\t     case ShadingType.LATTICE_FORM_MESH:\n\t      var verticesPerRow = dict.get('VerticesPerRow') | 0;\n\t      assert(verticesPerRow >= 2, 'Invalid VerticesPerRow');\n\t      decodeType5Shading(this, reader, verticesPerRow);\n\t      break;\n\t     case ShadingType.COONS_PATCH_MESH:\n\t      decodeType6Shading(this, reader);\n\t      patchMesh = true;\n\t      break;\n\t     case ShadingType.TENSOR_PATCH_MESH:\n\t      decodeType7Shading(this, reader);\n\t      patchMesh = true;\n\t      break;\n\t     default:\n\t      error('Unsupported mesh type.');\n\t      break;\n\t     }\n\t     if (patchMesh) {\n\t      updateBounds(this);\n\t      for (var i = 0, ii = this.figures.length; i < ii; i++) {\n\t       buildFigureFromPatch(this, i);\n\t      }\n\t     }\n\t     updateBounds(this);\n\t     packData(this);\n\t    }\n\t    Mesh.prototype = {\n\t     getIR: function Mesh_getIR() {\n\t      return [\n\t       'Mesh',\n\t       this.shadingType,\n\t       this.coords,\n\t       this.colors,\n\t       this.figures,\n\t       this.bounds,\n\t       this.matrix,\n\t       this.bbox,\n\t       this.background\n\t      ];\n\t     }\n\t    };\n\t    return Mesh;\n\t   }();\n\t   Shadings.Dummy = function DummyClosure() {\n\t    function Dummy() {\n\t     this.type = 'Pattern';\n\t    }\n\t    Dummy.prototype = {\n\t     getIR: function Dummy_getIR() {\n\t      return ['Dummy'];\n\t     }\n\t    };\n\t    return Dummy;\n\t   }();\n\t   function getTilingPatternIR(operatorList, dict, args) {\n\t    var matrix = dict.getArray('Matrix');\n\t    var bbox = dict.getArray('BBox');\n\t    var xstep = dict.get('XStep');\n\t    var ystep = dict.get('YStep');\n\t    var paintType = dict.get('PaintType');\n\t    var tilingType = dict.get('TilingType');\n\t    return [\n\t     'TilingPattern',\n\t     args,\n\t     operatorList,\n\t     matrix,\n\t     bbox,\n\t     xstep,\n\t     ystep,\n\t     paintType,\n\t     tilingType\n\t    ];\n\t   }\n\t   exports.Pattern = Pattern;\n\t   exports.getTilingPatternIR = getTilingPatternIR;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCoreEvaluator = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreStream, root.pdfjsCoreParser, root.pdfjsCoreImage, root.pdfjsCoreColorSpace, root.pdfjsCoreMurmurHash3, root.pdfjsCoreFonts, root.pdfjsCoreFunction, root.pdfjsCorePattern, root.pdfjsCoreCMap, root.pdfjsCoreMetrics, root.pdfjsCoreBidi, root.pdfjsCoreEncodings, root.pdfjsCoreStandardFonts, root.pdfjsCoreUnicode, root.pdfjsCoreGlyphList);\n\t  }(this, function (exports, sharedUtil, corePrimitives, coreStream, coreParser, coreImage, coreColorSpace, coreMurmurHash3, coreFonts, coreFunction, corePattern, coreCMap, coreMetrics, coreBidi, coreEncodings, coreStandardFonts, coreUnicode, coreGlyphList) {\n\t   var FONT_IDENTITY_MATRIX = sharedUtil.FONT_IDENTITY_MATRIX;\n\t   var IDENTITY_MATRIX = sharedUtil.IDENTITY_MATRIX;\n\t   var UNSUPPORTED_FEATURES = sharedUtil.UNSUPPORTED_FEATURES;\n\t   var ImageKind = sharedUtil.ImageKind;\n\t   var OPS = sharedUtil.OPS;\n\t   var TextRenderingMode = sharedUtil.TextRenderingMode;\n\t   var Util = sharedUtil.Util;\n\t   var assert = sharedUtil.assert;\n\t   var createPromiseCapability = sharedUtil.createPromiseCapability;\n\t   var error = sharedUtil.error;\n\t   var info = sharedUtil.info;\n\t   var isArray = sharedUtil.isArray;\n\t   var isNum = sharedUtil.isNum;\n\t   var isString = sharedUtil.isString;\n\t   var getLookupTableFactory = sharedUtil.getLookupTableFactory;\n\t   var warn = sharedUtil.warn;\n\t   var Dict = corePrimitives.Dict;\n\t   var Name = corePrimitives.Name;\n\t   var isEOF = corePrimitives.isEOF;\n\t   var isCmd = corePrimitives.isCmd;\n\t   var isDict = corePrimitives.isDict;\n\t   var isName = corePrimitives.isName;\n\t   var isRef = corePrimitives.isRef;\n\t   var isStream = corePrimitives.isStream;\n\t   var DecodeStream = coreStream.DecodeStream;\n\t   var JpegStream = coreStream.JpegStream;\n\t   var Stream = coreStream.Stream;\n\t   var Lexer = coreParser.Lexer;\n\t   var Parser = coreParser.Parser;\n\t   var PDFImage = coreImage.PDFImage;\n\t   var ColorSpace = coreColorSpace.ColorSpace;\n\t   var MurmurHash3_64 = coreMurmurHash3.MurmurHash3_64;\n\t   var ErrorFont = coreFonts.ErrorFont;\n\t   var FontFlags = coreFonts.FontFlags;\n\t   var Font = coreFonts.Font;\n\t   var IdentityToUnicodeMap = coreFonts.IdentityToUnicodeMap;\n\t   var ToUnicodeMap = coreFonts.ToUnicodeMap;\n\t   var getFontType = coreFonts.getFontType;\n\t   var isPDFFunction = coreFunction.isPDFFunction;\n\t   var PDFFunction = coreFunction.PDFFunction;\n\t   var Pattern = corePattern.Pattern;\n\t   var getTilingPatternIR = corePattern.getTilingPatternIR;\n\t   var CMapFactory = coreCMap.CMapFactory;\n\t   var IdentityCMap = coreCMap.IdentityCMap;\n\t   var getMetrics = coreMetrics.getMetrics;\n\t   var bidi = coreBidi.bidi;\n\t   var WinAnsiEncoding = coreEncodings.WinAnsiEncoding;\n\t   var StandardEncoding = coreEncodings.StandardEncoding;\n\t   var MacRomanEncoding = coreEncodings.MacRomanEncoding;\n\t   var SymbolSetEncoding = coreEncodings.SymbolSetEncoding;\n\t   var ZapfDingbatsEncoding = coreEncodings.ZapfDingbatsEncoding;\n\t   var getEncoding = coreEncodings.getEncoding;\n\t   var getStdFontMap = coreStandardFonts.getStdFontMap;\n\t   var getSerifFonts = coreStandardFonts.getSerifFonts;\n\t   var getSymbolsFonts = coreStandardFonts.getSymbolsFonts;\n\t   var getNormalizedUnicodes = coreUnicode.getNormalizedUnicodes;\n\t   var reverseIfRtl = coreUnicode.reverseIfRtl;\n\t   var getUnicodeForGlyph = coreUnicode.getUnicodeForGlyph;\n\t   var getGlyphsUnicode = coreGlyphList.getGlyphsUnicode;\n\t   var PartialEvaluator = function PartialEvaluatorClosure() {\n\t    var DefaultPartialEvaluatorOptions = {\n\t     forceDataSchema: false,\n\t     maxImageSize: -1,\n\t     disableFontFace: false,\n\t     cMapOptions: {\n\t      url: null,\n\t      packed: false\n\t     }\n\t    };\n\t    function NativeImageDecoder(xref, resources, handler, forceDataSchema) {\n\t     this.xref = xref;\n\t     this.resources = resources;\n\t     this.handler = handler;\n\t     this.forceDataSchema = forceDataSchema;\n\t    }\n\t    NativeImageDecoder.prototype = {\n\t     canDecode: function (image) {\n\t      return image instanceof JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources);\n\t     },\n\t     decode: function (image) {\n\t      var dict = image.dict;\n\t      var colorSpace = dict.get('ColorSpace', 'CS');\n\t      colorSpace = ColorSpace.parse(colorSpace, this.xref, this.resources);\n\t      var numComps = colorSpace.numComps;\n\t      var decodePromise = this.handler.sendWithPromise('JpegDecode', [\n\t       image.getIR(this.forceDataSchema),\n\t       numComps\n\t      ]);\n\t      return decodePromise.then(function (message) {\n\t       var data = message.data;\n\t       return new Stream(data, 0, data.length, image.dict);\n\t      });\n\t     }\n\t    };\n\t    NativeImageDecoder.isSupported = function NativeImageDecoder_isSupported(image, xref, res) {\n\t     var dict = image.dict;\n\t     if (dict.has('DecodeParms') || dict.has('DP')) {\n\t      return false;\n\t     }\n\t     var cs = ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res);\n\t     return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n\t    };\n\t    NativeImageDecoder.isDecodable = function NativeImageDecoder_isDecodable(image, xref, res) {\n\t     var dict = image.dict;\n\t     if (dict.has('DecodeParms') || dict.has('DP')) {\n\t      return false;\n\t     }\n\t     var cs = ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res);\n\t     return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n\t    };\n\t    function PartialEvaluator(pdfManager, xref, handler, pageIndex, idFactory, fontCache, options) {\n\t     this.pdfManager = pdfManager;\n\t     this.xref = xref;\n\t     this.handler = handler;\n\t     this.pageIndex = pageIndex;\n\t     this.idFactory = idFactory;\n\t     this.fontCache = fontCache;\n\t     this.options = options || DefaultPartialEvaluatorOptions;\n\t    }\n\t    var TIME_SLOT_DURATION_MS = 20;\n\t    var CHECK_TIME_EVERY = 100;\n\t    function TimeSlotManager() {\n\t     this.reset();\n\t    }\n\t    TimeSlotManager.prototype = {\n\t     check: function TimeSlotManager_check() {\n\t      if (++this.checked < CHECK_TIME_EVERY) {\n\t       return false;\n\t      }\n\t      this.checked = 0;\n\t      return this.endTime <= Date.now();\n\t     },\n\t     reset: function TimeSlotManager_reset() {\n\t      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n\t      this.checked = 0;\n\t     }\n\t    };\n\t    var deferred = Promise.resolve();\n\t    var TILING_PATTERN = 1, SHADING_PATTERN = 2;\n\t    PartialEvaluator.prototype = {\n\t     hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n\t      if (!isDict(resources)) {\n\t       return false;\n\t      }\n\t      var processed = Object.create(null);\n\t      if (resources.objId) {\n\t       processed[resources.objId] = true;\n\t      }\n\t      var nodes = [resources], xref = this.xref;\n\t      while (nodes.length) {\n\t       var key, i, ii;\n\t       var node = nodes.shift();\n\t       var graphicStates = node.get('ExtGState');\n\t       if (isDict(graphicStates)) {\n\t        var graphicStatesKeys = graphicStates.getKeys();\n\t        for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\n\t         key = graphicStatesKeys[i];\n\t         var graphicState = graphicStates.get(key);\n\t         var bm = graphicState.get('BM');\n\t         if (isName(bm) && bm.name !== 'Normal') {\n\t          return true;\n\t         }\n\t        }\n\t       }\n\t       var xObjects = node.get('XObject');\n\t       if (!isDict(xObjects)) {\n\t        continue;\n\t       }\n\t       var xObjectsKeys = xObjects.getKeys();\n\t       for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\n\t        key = xObjectsKeys[i];\n\t        var xObject = xObjects.getRaw(key);\n\t        if (isRef(xObject)) {\n\t         if (processed[xObject.toString()]) {\n\t          continue;\n\t         }\n\t         xObject = xref.fetch(xObject);\n\t        }\n\t        if (!isStream(xObject)) {\n\t         continue;\n\t        }\n\t        if (xObject.dict.objId) {\n\t         if (processed[xObject.dict.objId]) {\n\t          continue;\n\t         }\n\t         processed[xObject.dict.objId] = true;\n\t        }\n\t        var xResources = xObject.dict.get('Resources');\n\t        if (isDict(xResources) && (!xResources.objId || !processed[xResources.objId])) {\n\t         nodes.push(xResources);\n\t         if (xResources.objId) {\n\t          processed[xResources.objId] = true;\n\t         }\n\t        }\n\t       }\n\t      }\n\t      return false;\n\t     },\n\t     buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\n\t      var matrix = xobj.dict.getArray('Matrix');\n\t      var bbox = xobj.dict.getArray('BBox');\n\t      var group = xobj.dict.get('Group');\n\t      if (group) {\n\t       var groupOptions = {\n\t        matrix: matrix,\n\t        bbox: bbox,\n\t        smask: smask,\n\t        isolated: false,\n\t        knockout: false\n\t       };\n\t       var groupSubtype = group.get('S');\n\t       var colorSpace;\n\t       if (isName(groupSubtype, 'Transparency')) {\n\t        groupOptions.isolated = group.get('I') || false;\n\t        groupOptions.knockout = group.get('K') || false;\n\t        colorSpace = group.has('CS') ? ColorSpace.parse(group.get('CS'), this.xref, resources) : null;\n\t       }\n\t       if (smask && smask.backdrop) {\n\t        colorSpace = colorSpace || ColorSpace.singletons.rgb;\n\t        smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n\t       }\n\t       operatorList.addOp(OPS.beginGroup, [groupOptions]);\n\t      }\n\t      operatorList.addOp(OPS.paintFormXObjectBegin, [\n\t       matrix,\n\t       bbox\n\t      ]);\n\t      return this.getOperatorList(xobj, task, xobj.dict.get('Resources') || resources, operatorList, initialState).then(function () {\n\t       operatorList.addOp(OPS.paintFormXObjectEnd, []);\n\t       if (group) {\n\t        operatorList.addOp(OPS.endGroup, [groupOptions]);\n\t       }\n\t      });\n\t     },\n\t     buildPaintImageXObject: function PartialEvaluator_buildPaintImageXObject(resources, image, inline, operatorList, cacheKey, imageCache) {\n\t      var self = this;\n\t      var dict = image.dict;\n\t      var w = dict.get('Width', 'W');\n\t      var h = dict.get('Height', 'H');\n\t      if (!(w && isNum(w)) || !(h && isNum(h))) {\n\t       warn('Image dimensions are missing, or not numbers.');\n\t       return;\n\t      }\n\t      var maxImageSize = this.options.maxImageSize;\n\t      if (maxImageSize !== -1 && w * h > maxImageSize) {\n\t       warn('Image exceeded maximum allowed size and was removed.');\n\t       return;\n\t      }\n\t      var imageMask = dict.get('ImageMask', 'IM') || false;\n\t      var imgData, args;\n\t      if (imageMask) {\n\t       var width = dict.get('Width', 'W');\n\t       var height = dict.get('Height', 'H');\n\t       var bitStrideLength = width + 7 >> 3;\n\t       var imgArray = image.getBytes(bitStrideLength * height);\n\t       var decode = dict.getArray('Decode', 'D');\n\t       var inverseDecode = !!decode && decode[0] > 0;\n\t       imgData = PDFImage.createMask(imgArray, width, height, image instanceof DecodeStream, inverseDecode);\n\t       imgData.cached = true;\n\t       args = [imgData];\n\t       operatorList.addOp(OPS.paintImageMaskXObject, args);\n\t       if (cacheKey) {\n\t        imageCache[cacheKey] = {\n\t         fn: OPS.paintImageMaskXObject,\n\t         args: args\n\t        };\n\t       }\n\t       return;\n\t      }\n\t      var softMask = dict.get('SMask', 'SM') || false;\n\t      var mask = dict.get('Mask') || false;\n\t      var SMALL_IMAGE_DIMENSIONS = 200;\n\t      if (inline && !softMask && !mask && !(image instanceof JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\n\t       var imageObj = new PDFImage(this.xref, resources, image, inline, null, null);\n\t       imgData = imageObj.createImageData(true);\n\t       operatorList.addOp(OPS.paintInlineImageXObject, [imgData]);\n\t       return;\n\t      }\n\t      var objId = 'img_' + this.idFactory.createObjId();\n\t      operatorList.addDependency(objId);\n\t      args = [\n\t       objId,\n\t       w,\n\t       h\n\t      ];\n\t      if (!softMask && !mask && image instanceof JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources)) {\n\t       operatorList.addOp(OPS.paintJpegXObject, args);\n\t       this.handler.send('obj', [\n\t        objId,\n\t        this.pageIndex,\n\t        'JpegStream',\n\t        image.getIR(this.options.forceDataSchema)\n\t       ]);\n\t       return;\n\t      }\n\t      var nativeImageDecoder = null;\n\t      if (image instanceof JpegStream || mask instanceof JpegStream || softMask instanceof JpegStream) {\n\t       nativeImageDecoder = new NativeImageDecoder(self.xref, resources, self.handler, self.options.forceDataSchema);\n\t      }\n\t      PDFImage.buildImage(self.handler, self.xref, resources, image, inline, nativeImageDecoder).then(function (imageObj) {\n\t       var imgData = imageObj.createImageData(false);\n\t       self.handler.send('obj', [\n\t        objId,\n\t        self.pageIndex,\n\t        'Image',\n\t        imgData\n\t       ], [imgData.data.buffer]);\n\t      }).then(undefined, function (reason) {\n\t       warn('Unable to decode image: ' + reason);\n\t       self.handler.send('obj', [\n\t        objId,\n\t        self.pageIndex,\n\t        'Image',\n\t        null\n\t       ]);\n\t      });\n\t      operatorList.addOp(OPS.paintImageXObject, args);\n\t      if (cacheKey) {\n\t       imageCache[cacheKey] = {\n\t        fn: OPS.paintImageXObject,\n\t        args: args\n\t       };\n\t      }\n\t     },\n\t     handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\n\t      var smaskContent = smask.get('G');\n\t      var smaskOptions = {\n\t       subtype: smask.get('S').name,\n\t       backdrop: smask.get('BC')\n\t      };\n\t      var transferObj = smask.get('TR');\n\t      if (isPDFFunction(transferObj)) {\n\t       var transferFn = PDFFunction.parse(this.xref, transferObj);\n\t       var transferMap = new Uint8Array(256);\n\t       var tmp = new Float32Array(1);\n\t       for (var i = 0; i < 256; i++) {\n\t        tmp[0] = i / 255;\n\t        transferFn(tmp, 0, tmp, 0);\n\t        transferMap[i] = tmp[0] * 255 | 0;\n\t       }\n\t       smaskOptions.transferMap = transferMap;\n\t      }\n\t      return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\n\t     },\n\t     handleTilingType: function PartialEvaluator_handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n\t      var tilingOpList = new OperatorList();\n\t      var resourcesArray = [\n\t       patternDict.get('Resources'),\n\t       resources\n\t      ];\n\t      var patternResources = Dict.merge(this.xref, resourcesArray);\n\t      return this.getOperatorList(pattern, task, patternResources, tilingOpList).then(function () {\n\t       operatorList.addDependencies(tilingOpList.dependencies);\n\t       operatorList.addOp(fn, getTilingPatternIR({\n\t        fnArray: tilingOpList.fnArray,\n\t        argsArray: tilingOpList.argsArray\n\t       }, patternDict, args));\n\t      });\n\t     },\n\t     handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n\t      var fontName;\n\t      if (fontArgs) {\n\t       fontArgs = fontArgs.slice();\n\t       fontName = fontArgs[0].name;\n\t      }\n\t      var self = this;\n\t      return this.loadFont(fontName, fontRef, this.xref, resources).then(function (translated) {\n\t       if (!translated.font.isType3Font) {\n\t        return translated;\n\t       }\n\t       return translated.loadType3Data(self, resources, operatorList, task).then(function () {\n\t        return translated;\n\t       }, function (reason) {\n\t        self.handler.send('UnsupportedFeature', { featureId: UNSUPPORTED_FEATURES.font });\n\t        return new TranslatedFont('g_font_error', new ErrorFont('Type3 font load error: ' + reason), translated.font);\n\t       });\n\t      }).then(function (translated) {\n\t       state.font = translated.font;\n\t       translated.send(self.handler);\n\t       return translated.loadedName;\n\t      });\n\t     },\n\t     handleText: function PartialEvaluator_handleText(chars, state) {\n\t      var font = state.font;\n\t      var glyphs = font.charsToGlyphs(chars);\n\t      var isAddToPathSet = !!(state.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG);\n\t      if (font.data && (isAddToPathSet || this.options.disableFontFace)) {\n\t       var buildPath = function (fontChar) {\n\t        if (!font.renderer.hasBuiltPath(fontChar)) {\n\t         var path = font.renderer.getPathJs(fontChar);\n\t         this.handler.send('commonobj', [\n\t          font.loadedName + '_path_' + fontChar,\n\t          'FontPath',\n\t          path\n\t         ]);\n\t        }\n\t       }.bind(this);\n\t       for (var i = 0, ii = glyphs.length; i < ii; i++) {\n\t        var glyph = glyphs[i];\n\t        buildPath(glyph.fontChar);\n\t        var accent = glyph.accent;\n\t        if (accent && accent.fontChar) {\n\t         buildPath(accent.fontChar);\n\t        }\n\t       }\n\t      }\n\t      return glyphs;\n\t     },\n\t     setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, xref, stateManager) {\n\t      var gStateObj = [];\n\t      var gStateKeys = gState.getKeys();\n\t      var self = this;\n\t      var promise = Promise.resolve();\n\t      for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\n\t       var key = gStateKeys[i];\n\t       var value = gState.get(key);\n\t       switch (key) {\n\t       case 'Type':\n\t        break;\n\t       case 'LW':\n\t       case 'LC':\n\t       case 'LJ':\n\t       case 'ML':\n\t       case 'D':\n\t       case 'RI':\n\t       case 'FL':\n\t       case 'CA':\n\t       case 'ca':\n\t        gStateObj.push([\n\t         key,\n\t         value\n\t        ]);\n\t        break;\n\t       case 'Font':\n\t        promise = promise.then(function () {\n\t         return self.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n\t          operatorList.addDependency(loadedName);\n\t          gStateObj.push([\n\t           key,\n\t           [\n\t            loadedName,\n\t            value[1]\n\t           ]\n\t          ]);\n\t         });\n\t        });\n\t        break;\n\t       case 'BM':\n\t        gStateObj.push([\n\t         key,\n\t         value\n\t        ]);\n\t        break;\n\t       case 'SMask':\n\t        if (isName(value, 'None')) {\n\t         gStateObj.push([\n\t          key,\n\t          false\n\t         ]);\n\t         break;\n\t        }\n\t        if (isDict(value)) {\n\t         promise = promise.then(function (dict) {\n\t          return self.handleSMask(dict, resources, operatorList, task, stateManager);\n\t         }.bind(this, value));\n\t         gStateObj.push([\n\t          key,\n\t          true\n\t         ]);\n\t        } else {\n\t         warn('Unsupported SMask type');\n\t        }\n\t        break;\n\t       case 'OP':\n\t       case 'op':\n\t       case 'OPM':\n\t       case 'BG':\n\t       case 'BG2':\n\t       case 'UCR':\n\t       case 'UCR2':\n\t       case 'TR':\n\t       case 'TR2':\n\t       case 'HT':\n\t       case 'SM':\n\t       case 'SA':\n\t       case 'AIS':\n\t       case 'TK':\n\t        info('graphic state operator ' + key);\n\t        break;\n\t       default:\n\t        info('Unknown graphic state operator ' + key);\n\t        break;\n\t       }\n\t      }\n\t      return promise.then(function () {\n\t       if (gStateObj.length > 0) {\n\t        operatorList.addOp(OPS.setGState, [gStateObj]);\n\t       }\n\t      });\n\t     },\n\t     loadFont: function PartialEvaluator_loadFont(fontName, font, xref, resources) {\n\t      function errorFont() {\n\t       return Promise.resolve(new TranslatedFont('g_font_error', new ErrorFont('Font ' + fontName + ' is not available'), font));\n\t      }\n\t      var fontRef;\n\t      if (font) {\n\t       assert(isRef(font));\n\t       fontRef = font;\n\t      } else {\n\t       var fontRes = resources.get('Font');\n\t       if (fontRes) {\n\t        fontRef = fontRes.getRaw(fontName);\n\t       } else {\n\t        warn('fontRes not available');\n\t        return errorFont();\n\t       }\n\t      }\n\t      if (!fontRef) {\n\t       warn('fontRef not available');\n\t       return errorFont();\n\t      }\n\t      if (this.fontCache.has(fontRef)) {\n\t       return this.fontCache.get(fontRef);\n\t      }\n\t      font = xref.fetchIfRef(fontRef);\n\t      if (!isDict(font)) {\n\t       return errorFont();\n\t      }\n\t      if (font.translated) {\n\t       return font.translated;\n\t      }\n\t      var fontCapability = createPromiseCapability();\n\t      var preEvaluatedFont = this.preEvaluateFont(font, xref);\n\t      var descriptor = preEvaluatedFont.descriptor;\n\t      var fontRefIsRef = isRef(fontRef), fontID;\n\t      if (fontRefIsRef) {\n\t       fontID = fontRef.toString();\n\t      }\n\t      if (isDict(descriptor)) {\n\t       if (!descriptor.fontAliases) {\n\t        descriptor.fontAliases = Object.create(null);\n\t       }\n\t       var fontAliases = descriptor.fontAliases;\n\t       var hash = preEvaluatedFont.hash;\n\t       if (fontAliases[hash]) {\n\t        var aliasFontRef = fontAliases[hash].aliasRef;\n\t        if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n\t         this.fontCache.putAlias(fontRef, aliasFontRef);\n\t         return this.fontCache.get(fontRef);\n\t        }\n\t       } else {\n\t        fontAliases[hash] = { fontID: Font.getFontID() };\n\t       }\n\t       if (fontRefIsRef) {\n\t        fontAliases[hash].aliasRef = fontRef;\n\t       }\n\t       fontID = fontAliases[hash].fontID;\n\t      }\n\t      if (fontRefIsRef) {\n\t       this.fontCache.put(fontRef, fontCapability.promise);\n\t      } else {\n\t       if (!fontID) {\n\t        fontID = this.idFactory.createObjId();\n\t       }\n\t       this.fontCache.put('id_' + fontID, fontCapability.promise);\n\t      }\n\t      assert(fontID, 'The \"fontID\" must be defined.');\n\t      font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\n\t      font.translated = fontCapability.promise;\n\t      var translatedPromise;\n\t      try {\n\t       translatedPromise = this.translateFont(preEvaluatedFont, xref);\n\t      } catch (e) {\n\t       translatedPromise = Promise.reject(e);\n\t      }\n\t      var self = this;\n\t      translatedPromise.then(function (translatedFont) {\n\t       if (translatedFont.fontType !== undefined) {\n\t        var xrefFontStats = xref.stats.fontTypes;\n\t        xrefFontStats[translatedFont.fontType] = true;\n\t       }\n\t       fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\n\t      }, function (reason) {\n\t       self.handler.send('UnsupportedFeature', { featureId: UNSUPPORTED_FEATURES.font });\n\t       try {\n\t        var descriptor = preEvaluatedFont.descriptor;\n\t        var fontFile3 = descriptor && descriptor.get('FontFile3');\n\t        var subtype = fontFile3 && fontFile3.get('Subtype');\n\t        var fontType = getFontType(preEvaluatedFont.type, subtype && subtype.name);\n\t        var xrefFontStats = xref.stats.fontTypes;\n\t        xrefFontStats[fontType] = true;\n\t       } catch (ex) {\n\t       }\n\t       fontCapability.resolve(new TranslatedFont(font.loadedName, new ErrorFont(reason instanceof Error ? reason.message : reason), font));\n\t      });\n\t      return fontCapability.promise;\n\t     },\n\t     buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n\t      var lastIndex = operatorList.length - 1;\n\t      if (!args) {\n\t       args = [];\n\t      }\n\t      if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== OPS.constructPath) {\n\t       operatorList.addOp(OPS.constructPath, [\n\t        [fn],\n\t        args\n\t       ]);\n\t      } else {\n\t       var opArgs = operatorList.argsArray[lastIndex];\n\t       opArgs[0].push(fn);\n\t       Array.prototype.push.apply(opArgs[1], args);\n\t      }\n\t     },\n\t     handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task, xref) {\n\t      var patternName = args[args.length - 1];\n\t      var pattern;\n\t      if (isName(patternName) && (pattern = patterns.get(patternName.name))) {\n\t       var dict = isStream(pattern) ? pattern.dict : pattern;\n\t       var typeNum = dict.get('PatternType');\n\t       if (typeNum === TILING_PATTERN) {\n\t        var color = cs.base ? cs.base.getRgb(args, 0) : null;\n\t        return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\n\t       } else if (typeNum === SHADING_PATTERN) {\n\t        var shading = dict.get('Shading');\n\t        var matrix = dict.getArray('Matrix');\n\t        pattern = Pattern.parseShading(shading, matrix, xref, resources, this.handler);\n\t        operatorList.addOp(fn, pattern.getIR());\n\t        return Promise.resolve();\n\t       }\n\t       return Promise.reject('Unknown PatternType: ' + typeNum);\n\t      }\n\t      operatorList.addOp(fn, args);\n\t      return Promise.resolve();\n\t     },\n\t     getOperatorList: function PartialEvaluator_getOperatorList(stream, task, resources, operatorList, initialState) {\n\t      var self = this;\n\t      var xref = this.xref;\n\t      var imageCache = Object.create(null);\n\t      assert(operatorList);\n\t      resources = resources || Dict.empty;\n\t      var xobjs = resources.get('XObject') || Dict.empty;\n\t      var patterns = resources.get('Pattern') || Dict.empty;\n\t      var stateManager = new StateManager(initialState || new EvalState());\n\t      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n\t      var timeSlotManager = new TimeSlotManager();\n\t      return new Promise(function promiseBody(resolve, reject) {\n\t       var next = function (promise) {\n\t        promise.then(function () {\n\t         try {\n\t          promiseBody(resolve, reject);\n\t         } catch (ex) {\n\t          reject(ex);\n\t         }\n\t        }, reject);\n\t       };\n\t       task.ensureNotTerminated();\n\t       timeSlotManager.reset();\n\t       var stop, operation = {}, i, ii, cs;\n\t       while (!(stop = timeSlotManager.check())) {\n\t        operation.args = null;\n\t        if (!preprocessor.read(operation)) {\n\t         break;\n\t        }\n\t        var args = operation.args;\n\t        var fn = operation.fn;\n\t        switch (fn | 0) {\n\t        case OPS.paintXObject:\n\t         if (args[0].code) {\n\t          break;\n\t         }\n\t         var name = args[0].name;\n\t         if (!name) {\n\t          warn('XObject must be referred to by name.');\n\t          continue;\n\t         }\n\t         if (imageCache[name] !== undefined) {\n\t          operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n\t          args = null;\n\t          continue;\n\t         }\n\t         var xobj = xobjs.get(name);\n\t         if (xobj) {\n\t          assert(isStream(xobj), 'XObject should be a stream');\n\t          var type = xobj.dict.get('Subtype');\n\t          assert(isName(type), 'XObject should have a Name subtype');\n\t          if (type.name === 'Form') {\n\t           stateManager.save();\n\t           next(self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\n\t            stateManager.restore();\n\t           }));\n\t           return;\n\t          } else if (type.name === 'Image') {\n\t           self.buildPaintImageXObject(resources, xobj, false, operatorList, name, imageCache);\n\t           args = null;\n\t           continue;\n\t          } else if (type.name === 'PS') {\n\t           info('Ignored XObject subtype PS');\n\t           continue;\n\t          } else {\n\t           error('Unhandled XObject subtype ' + type.name);\n\t          }\n\t         }\n\t         break;\n\t        case OPS.setFont:\n\t         var fontSize = args[1];\n\t         next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n\t          operatorList.addDependency(loadedName);\n\t          operatorList.addOp(OPS.setFont, [\n\t           loadedName,\n\t           fontSize\n\t          ]);\n\t         }));\n\t         return;\n\t        case OPS.endInlineImage:\n\t         var cacheKey = args[0].cacheKey;\n\t         if (cacheKey) {\n\t          var cacheEntry = imageCache[cacheKey];\n\t          if (cacheEntry !== undefined) {\n\t           operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n\t           args = null;\n\t           continue;\n\t          }\n\t         }\n\t         self.buildPaintImageXObject(resources, args[0], true, operatorList, cacheKey, imageCache);\n\t         args = null;\n\t         continue;\n\t        case OPS.showText:\n\t         args[0] = self.handleText(args[0], stateManager.state);\n\t         break;\n\t        case OPS.showSpacedText:\n\t         var arr = args[0];\n\t         var combinedGlyphs = [];\n\t         var arrLength = arr.length;\n\t         var state = stateManager.state;\n\t         for (i = 0; i < arrLength; ++i) {\n\t          var arrItem = arr[i];\n\t          if (isString(arrItem)) {\n\t           Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n\t          } else if (isNum(arrItem)) {\n\t           combinedGlyphs.push(arrItem);\n\t          }\n\t         }\n\t         args[0] = combinedGlyphs;\n\t         fn = OPS.showText;\n\t         break;\n\t        case OPS.nextLineShowText:\n\t         operatorList.addOp(OPS.nextLine);\n\t         args[0] = self.handleText(args[0], stateManager.state);\n\t         fn = OPS.showText;\n\t         break;\n\t        case OPS.nextLineSetSpacingShowText:\n\t         operatorList.addOp(OPS.nextLine);\n\t         operatorList.addOp(OPS.setWordSpacing, [args.shift()]);\n\t         operatorList.addOp(OPS.setCharSpacing, [args.shift()]);\n\t         args[0] = self.handleText(args[0], stateManager.state);\n\t         fn = OPS.showText;\n\t         break;\n\t        case OPS.setTextRenderingMode:\n\t         stateManager.state.textRenderingMode = args[0];\n\t         break;\n\t        case OPS.setFillColorSpace:\n\t         stateManager.state.fillColorSpace = ColorSpace.parse(args[0], xref, resources);\n\t         continue;\n\t        case OPS.setStrokeColorSpace:\n\t         stateManager.state.strokeColorSpace = ColorSpace.parse(args[0], xref, resources);\n\t         continue;\n\t        case OPS.setFillColor:\n\t         cs = stateManager.state.fillColorSpace;\n\t         args = cs.getRgb(args, 0);\n\t         fn = OPS.setFillRGBColor;\n\t         break;\n\t        case OPS.setStrokeColor:\n\t         cs = stateManager.state.strokeColorSpace;\n\t         args = cs.getRgb(args, 0);\n\t         fn = OPS.setStrokeRGBColor;\n\t         break;\n\t        case OPS.setFillGray:\n\t         stateManager.state.fillColorSpace = ColorSpace.singletons.gray;\n\t         args = ColorSpace.singletons.gray.getRgb(args, 0);\n\t         fn = OPS.setFillRGBColor;\n\t         break;\n\t        case OPS.setStrokeGray:\n\t         stateManager.state.strokeColorSpace = ColorSpace.singletons.gray;\n\t         args = ColorSpace.singletons.gray.getRgb(args, 0);\n\t         fn = OPS.setStrokeRGBColor;\n\t         break;\n\t        case OPS.setFillCMYKColor:\n\t         stateManager.state.fillColorSpace = ColorSpace.singletons.cmyk;\n\t         args = ColorSpace.singletons.cmyk.getRgb(args, 0);\n\t         fn = OPS.setFillRGBColor;\n\t         break;\n\t        case OPS.setStrokeCMYKColor:\n\t         stateManager.state.strokeColorSpace = ColorSpace.singletons.cmyk;\n\t         args = ColorSpace.singletons.cmyk.getRgb(args, 0);\n\t         fn = OPS.setStrokeRGBColor;\n\t         break;\n\t        case OPS.setFillRGBColor:\n\t         stateManager.state.fillColorSpace = ColorSpace.singletons.rgb;\n\t         args = ColorSpace.singletons.rgb.getRgb(args, 0);\n\t         break;\n\t        case OPS.setStrokeRGBColor:\n\t         stateManager.state.strokeColorSpace = ColorSpace.singletons.rgb;\n\t         args = ColorSpace.singletons.rgb.getRgb(args, 0);\n\t         break;\n\t        case OPS.setFillColorN:\n\t         cs = stateManager.state.fillColorSpace;\n\t         if (cs.name === 'Pattern') {\n\t          next(self.handleColorN(operatorList, OPS.setFillColorN, args, cs, patterns, resources, task, xref));\n\t          return;\n\t         }\n\t         args = cs.getRgb(args, 0);\n\t         fn = OPS.setFillRGBColor;\n\t         break;\n\t        case OPS.setStrokeColorN:\n\t         cs = stateManager.state.strokeColorSpace;\n\t         if (cs.name === 'Pattern') {\n\t          next(self.handleColorN(operatorList, OPS.setStrokeColorN, args, cs, patterns, resources, task, xref));\n\t          return;\n\t         }\n\t         args = cs.getRgb(args, 0);\n\t         fn = OPS.setStrokeRGBColor;\n\t         break;\n\t        case OPS.shadingFill:\n\t         var shadingRes = resources.get('Shading');\n\t         if (!shadingRes) {\n\t          error('No shading resource found');\n\t         }\n\t         var shading = shadingRes.get(args[0].name);\n\t         if (!shading) {\n\t          error('No shading object found');\n\t         }\n\t         var shadingFill = Pattern.parseShading(shading, null, xref, resources, self.handler);\n\t         var patternIR = shadingFill.getIR();\n\t         args = [patternIR];\n\t         fn = OPS.shadingFill;\n\t         break;\n\t        case OPS.setGState:\n\t         var dictName = args[0];\n\t         var extGState = resources.get('ExtGState');\n\t         if (!isDict(extGState) || !extGState.has(dictName.name)) {\n\t          break;\n\t         }\n\t         var gState = extGState.get(dictName.name);\n\t         next(self.setGState(resources, gState, operatorList, task, xref, stateManager));\n\t         return;\n\t        case OPS.moveTo:\n\t        case OPS.lineTo:\n\t        case OPS.curveTo:\n\t        case OPS.curveTo2:\n\t        case OPS.curveTo3:\n\t        case OPS.closePath:\n\t         self.buildPath(operatorList, fn, args);\n\t         continue;\n\t        case OPS.rectangle:\n\t         self.buildPath(operatorList, fn, args);\n\t         continue;\n\t        case OPS.markPoint:\n\t        case OPS.markPointProps:\n\t        case OPS.beginMarkedContent:\n\t        case OPS.beginMarkedContentProps:\n\t        case OPS.endMarkedContent:\n\t        case OPS.beginCompat:\n\t        case OPS.endCompat:\n\t         continue;\n\t        default:\n\t         if (args !== null) {\n\t          for (i = 0, ii = args.length; i < ii; i++) {\n\t           if (args[i] instanceof Dict) {\n\t            break;\n\t           }\n\t          }\n\t          if (i < ii) {\n\t           warn('getOperatorList - ignoring operator: ' + fn);\n\t           continue;\n\t          }\n\t         }\n\t        }\n\t        operatorList.addOp(fn, args);\n\t       }\n\t       if (stop) {\n\t        next(deferred);\n\t        return;\n\t       }\n\t       for (i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n\t        operatorList.addOp(OPS.restore, []);\n\t       }\n\t       resolve();\n\t      });\n\t     },\n\t     getTextContent: function PartialEvaluator_getTextContent(stream, task, resources, stateManager, normalizeWhitespace, combineTextItems) {\n\t      stateManager = stateManager || new StateManager(new TextState());\n\t      var WhitespaceRegexp = /\\s/g;\n\t      var textContent = {\n\t       items: [],\n\t       styles: Object.create(null)\n\t      };\n\t      var textContentItem = {\n\t       initialized: false,\n\t       str: [],\n\t       width: 0,\n\t       height: 0,\n\t       vertical: false,\n\t       lastAdvanceWidth: 0,\n\t       lastAdvanceHeight: 0,\n\t       textAdvanceScale: 0,\n\t       spaceWidth: 0,\n\t       fakeSpaceMin: Infinity,\n\t       fakeMultiSpaceMin: Infinity,\n\t       fakeMultiSpaceMax: -0,\n\t       textRunBreakAllowed: false,\n\t       transform: null,\n\t       fontName: null\n\t      };\n\t      var SPACE_FACTOR = 0.3;\n\t      var MULTI_SPACE_FACTOR = 1.5;\n\t      var MULTI_SPACE_FACTOR_MAX = 4;\n\t      var self = this;\n\t      var xref = this.xref;\n\t      resources = xref.fetchIfRef(resources) || Dict.empty;\n\t      var xobjs = null;\n\t      var xobjsCache = Object.create(null);\n\t      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n\t      var textState;\n\t      function ensureTextContentItem() {\n\t       if (textContentItem.initialized) {\n\t        return textContentItem;\n\t       }\n\t       var font = textState.font;\n\t       if (!(font.loadedName in textContent.styles)) {\n\t        textContent.styles[font.loadedName] = {\n\t         fontFamily: font.fallbackName,\n\t         ascent: font.ascent,\n\t         descent: font.descent,\n\t         vertical: font.vertical\n\t        };\n\t       }\n\t       textContentItem.fontName = font.loadedName;\n\t       var tsm = [\n\t        textState.fontSize * textState.textHScale,\n\t        0,\n\t        0,\n\t        textState.fontSize,\n\t        0,\n\t        textState.textRise\n\t       ];\n\t       if (font.isType3Font && textState.fontMatrix !== FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\n\t        var glyphHeight = font.bbox[3] - font.bbox[1];\n\t        if (glyphHeight > 0) {\n\t         glyphHeight = glyphHeight * textState.fontMatrix[3];\n\t         tsm[3] *= glyphHeight;\n\t        }\n\t       }\n\t       var trm = Util.transform(textState.ctm, Util.transform(textState.textMatrix, tsm));\n\t       textContentItem.transform = trm;\n\t       if (!font.vertical) {\n\t        textContentItem.width = 0;\n\t        textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n\t        textContentItem.vertical = false;\n\t       } else {\n\t        textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n\t        textContentItem.height = 0;\n\t        textContentItem.vertical = true;\n\t       }\n\t       var a = textState.textLineMatrix[0];\n\t       var b = textState.textLineMatrix[1];\n\t       var scaleLineX = Math.sqrt(a * a + b * b);\n\t       a = textState.ctm[0];\n\t       b = textState.ctm[1];\n\t       var scaleCtmX = Math.sqrt(a * a + b * b);\n\t       textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n\t       textContentItem.lastAdvanceWidth = 0;\n\t       textContentItem.lastAdvanceHeight = 0;\n\t       var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n\t       if (spaceWidth) {\n\t        textContentItem.spaceWidth = spaceWidth;\n\t        textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n\t        textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n\t        textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n\t        textContentItem.textRunBreakAllowed = !font.isMonospace;\n\t       } else {\n\t        textContentItem.spaceWidth = 0;\n\t        textContentItem.fakeSpaceMin = Infinity;\n\t        textContentItem.fakeMultiSpaceMin = Infinity;\n\t        textContentItem.fakeMultiSpaceMax = 0;\n\t        textContentItem.textRunBreakAllowed = false;\n\t       }\n\t       textContentItem.initialized = true;\n\t       return textContentItem;\n\t      }\n\t      function replaceWhitespace(str) {\n\t       var i = 0, ii = str.length, code;\n\t       while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\n\t        i++;\n\t       }\n\t       return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\n\t      }\n\t      function runBidiTransform(textChunk) {\n\t       var str = textChunk.str.join('');\n\t       var bidiResult = bidi(str, -1, textChunk.vertical);\n\t       return {\n\t        str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n\t        dir: bidiResult.dir,\n\t        width: textChunk.width,\n\t        height: textChunk.height,\n\t        transform: textChunk.transform,\n\t        fontName: textChunk.fontName\n\t       };\n\t      }\n\t      function handleSetFont(fontName, fontRef) {\n\t       return self.loadFont(fontName, fontRef, xref, resources).then(function (translated) {\n\t        textState.font = translated.font;\n\t        textState.fontMatrix = translated.font.fontMatrix || FONT_IDENTITY_MATRIX;\n\t       });\n\t      }\n\t      function buildTextContentItem(chars) {\n\t       var font = textState.font;\n\t       var textChunk = ensureTextContentItem();\n\t       var width = 0;\n\t       var height = 0;\n\t       var glyphs = font.charsToGlyphs(chars);\n\t       var defaultVMetrics = font.defaultVMetrics;\n\t       for (var i = 0; i < glyphs.length; i++) {\n\t        var glyph = glyphs[i];\n\t        var vMetricX = null;\n\t        var vMetricY = null;\n\t        var glyphWidth = null;\n\t        if (font.vertical) {\n\t         if (glyph.vmetric) {\n\t          glyphWidth = glyph.vmetric[0];\n\t          vMetricX = glyph.vmetric[1];\n\t          vMetricY = glyph.vmetric[2];\n\t         } else {\n\t          glyphWidth = glyph.width;\n\t          vMetricX = glyph.width * 0.5;\n\t          vMetricY = defaultVMetrics[2];\n\t         }\n\t        } else {\n\t         glyphWidth = glyph.width;\n\t        }\n\t        var glyphUnicode = glyph.unicode;\n\t        var NormalizedUnicodes = getNormalizedUnicodes();\n\t        if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n\t         glyphUnicode = NormalizedUnicodes[glyphUnicode];\n\t        }\n\t        glyphUnicode = reverseIfRtl(glyphUnicode);\n\t        var charSpacing = textState.charSpacing;\n\t        if (glyph.isSpace) {\n\t         var wordSpacing = textState.wordSpacing;\n\t         charSpacing += wordSpacing;\n\t         if (wordSpacing > 0) {\n\t          addFakeSpaces(wordSpacing, textChunk.str);\n\t         }\n\t        }\n\t        var tx = 0;\n\t        var ty = 0;\n\t        if (!font.vertical) {\n\t         var w0 = glyphWidth * textState.fontMatrix[0];\n\t         tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n\t         width += tx;\n\t        } else {\n\t         var w1 = glyphWidth * textState.fontMatrix[0];\n\t         ty = w1 * textState.fontSize + charSpacing;\n\t         height += ty;\n\t        }\n\t        textState.translateTextMatrix(tx, ty);\n\t        textChunk.str.push(glyphUnicode);\n\t       }\n\t       if (!font.vertical) {\n\t        textChunk.lastAdvanceWidth = width;\n\t        textChunk.width += width;\n\t       } else {\n\t        textChunk.lastAdvanceHeight = height;\n\t        textChunk.height += Math.abs(height);\n\t       }\n\t       return textChunk;\n\t      }\n\t      function addFakeSpaces(width, strBuf) {\n\t       if (width < textContentItem.fakeSpaceMin) {\n\t        return;\n\t       }\n\t       if (width < textContentItem.fakeMultiSpaceMin) {\n\t        strBuf.push(' ');\n\t        return;\n\t       }\n\t       var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n\t       while (fakeSpaces-- > 0) {\n\t        strBuf.push(' ');\n\t       }\n\t      }\n\t      function flushTextContentItem() {\n\t       if (!textContentItem.initialized) {\n\t        return;\n\t       }\n\t       textContentItem.width *= textContentItem.textAdvanceScale;\n\t       textContentItem.height *= textContentItem.textAdvanceScale;\n\t       textContent.items.push(runBidiTransform(textContentItem));\n\t       textContentItem.initialized = false;\n\t       textContentItem.str.length = 0;\n\t      }\n\t      var timeSlotManager = new TimeSlotManager();\n\t      return new Promise(function promiseBody(resolve, reject) {\n\t       var next = function (promise) {\n\t        promise.then(function () {\n\t         try {\n\t          promiseBody(resolve, reject);\n\t         } catch (ex) {\n\t          reject(ex);\n\t         }\n\t        }, reject);\n\t       };\n\t       task.ensureNotTerminated();\n\t       timeSlotManager.reset();\n\t       var stop, operation = {}, args = [];\n\t       while (!(stop = timeSlotManager.check())) {\n\t        args.length = 0;\n\t        operation.args = args;\n\t        if (!preprocessor.read(operation)) {\n\t         break;\n\t        }\n\t        textState = stateManager.state;\n\t        var fn = operation.fn;\n\t        args = operation.args;\n\t        var advance, diff;\n\t        switch (fn | 0) {\n\t        case OPS.setFont:\n\t         var fontNameArg = args[0].name, fontSizeArg = args[1];\n\t         if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n\t          break;\n\t         }\n\t         flushTextContentItem();\n\t         textState.fontName = fontNameArg;\n\t         textState.fontSize = fontSizeArg;\n\t         next(handleSetFont(fontNameArg, null));\n\t         return;\n\t        case OPS.setTextRise:\n\t         flushTextContentItem();\n\t         textState.textRise = args[0];\n\t         break;\n\t        case OPS.setHScale:\n\t         flushTextContentItem();\n\t         textState.textHScale = args[0] / 100;\n\t         break;\n\t        case OPS.setLeading:\n\t         flushTextContentItem();\n\t         textState.leading = args[0];\n\t         break;\n\t        case OPS.moveText:\n\t         var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n\t         advance = args[0] - args[1];\n\t         if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n\t          textState.translateTextLineMatrix(args[0], args[1]);\n\t          textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n\t          textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n\t          diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n\t          addFakeSpaces(diff, textContentItem.str);\n\t          break;\n\t         }\n\t         flushTextContentItem();\n\t         textState.translateTextLineMatrix(args[0], args[1]);\n\t         textState.textMatrix = textState.textLineMatrix.slice();\n\t         break;\n\t        case OPS.setLeadingMoveText:\n\t         flushTextContentItem();\n\t         textState.leading = -args[1];\n\t         textState.translateTextLineMatrix(args[0], args[1]);\n\t         textState.textMatrix = textState.textLineMatrix.slice();\n\t         break;\n\t        case OPS.nextLine:\n\t         flushTextContentItem();\n\t         textState.carriageReturn();\n\t         break;\n\t        case OPS.setTextMatrix:\n\t         advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t         if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n\t          textState.translateTextLineMatrix(advance.width, advance.height);\n\t          textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n\t          textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n\t          diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n\t          addFakeSpaces(diff, textContentItem.str);\n\t          break;\n\t         }\n\t         flushTextContentItem();\n\t         textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t         textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t         break;\n\t        case OPS.setCharSpacing:\n\t         textState.charSpacing = args[0];\n\t         break;\n\t        case OPS.setWordSpacing:\n\t         textState.wordSpacing = args[0];\n\t         break;\n\t        case OPS.beginText:\n\t         flushTextContentItem();\n\t         textState.textMatrix = IDENTITY_MATRIX.slice();\n\t         textState.textLineMatrix = IDENTITY_MATRIX.slice();\n\t         break;\n\t        case OPS.showSpacedText:\n\t         var items = args[0];\n\t         var offset;\n\t         for (var j = 0, jj = items.length; j < jj; j++) {\n\t          if (typeof items[j] === 'string') {\n\t           buildTextContentItem(items[j]);\n\t          } else if (isNum(items[j])) {\n\t           ensureTextContentItem();\n\t           advance = items[j] * textState.fontSize / 1000;\n\t           var breakTextRun = false;\n\t           if (textState.font.vertical) {\n\t            offset = advance;\n\t            textState.translateTextMatrix(0, offset);\n\t            breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n\t            if (!breakTextRun) {\n\t             textContentItem.height += offset;\n\t            }\n\t           } else {\n\t            advance = -advance;\n\t            offset = advance * textState.textHScale;\n\t            textState.translateTextMatrix(offset, 0);\n\t            breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n\t            if (!breakTextRun) {\n\t             textContentItem.width += offset;\n\t            }\n\t           }\n\t           if (breakTextRun) {\n\t            flushTextContentItem();\n\t           } else if (advance > 0) {\n\t            addFakeSpaces(advance, textContentItem.str);\n\t           }\n\t          }\n\t         }\n\t         break;\n\t        case OPS.showText:\n\t         buildTextContentItem(args[0]);\n\t         break;\n\t        case OPS.nextLineShowText:\n\t         flushTextContentItem();\n\t         textState.carriageReturn();\n\t         buildTextContentItem(args[0]);\n\t         break;\n\t        case OPS.nextLineSetSpacingShowText:\n\t         flushTextContentItem();\n\t         textState.wordSpacing = args[0];\n\t         textState.charSpacing = args[1];\n\t         textState.carriageReturn();\n\t         buildTextContentItem(args[2]);\n\t         break;\n\t        case OPS.paintXObject:\n\t         flushTextContentItem();\n\t         if (args[0].code) {\n\t          break;\n\t         }\n\t         if (!xobjs) {\n\t          xobjs = resources.get('XObject') || Dict.empty;\n\t         }\n\t         var name = args[0].name;\n\t         if (xobjsCache.key === name) {\n\t          if (xobjsCache.texts) {\n\t           Util.appendToArray(textContent.items, xobjsCache.texts.items);\n\t           Util.extendObj(textContent.styles, xobjsCache.texts.styles);\n\t          }\n\t          break;\n\t         }\n\t         var xobj = xobjs.get(name);\n\t         if (!xobj) {\n\t          break;\n\t         }\n\t         assert(isStream(xobj), 'XObject should be a stream');\n\t         var type = xobj.dict.get('Subtype');\n\t         assert(isName(type), 'XObject should have a Name subtype');\n\t         if ('Form' !== type.name) {\n\t          xobjsCache.key = name;\n\t          xobjsCache.texts = null;\n\t          break;\n\t         }\n\t         stateManager.save();\n\t         var matrix = xobj.dict.getArray('Matrix');\n\t         if (isArray(matrix) && matrix.length === 6) {\n\t          stateManager.transform(matrix);\n\t         }\n\t         next(self.getTextContent(xobj, task, xobj.dict.get('Resources') || resources, stateManager, normalizeWhitespace, combineTextItems).then(function (formTextContent) {\n\t          Util.appendToArray(textContent.items, formTextContent.items);\n\t          Util.extendObj(textContent.styles, formTextContent.styles);\n\t          stateManager.restore();\n\t          xobjsCache.key = name;\n\t          xobjsCache.texts = formTextContent;\n\t         }));\n\t         return;\n\t        case OPS.setGState:\n\t         flushTextContentItem();\n\t         var dictName = args[0];\n\t         var extGState = resources.get('ExtGState');\n\t         if (!isDict(extGState) || !isName(dictName)) {\n\t          break;\n\t         }\n\t         var gState = extGState.get(dictName.name);\n\t         if (!isDict(gState)) {\n\t          break;\n\t         }\n\t         var gStateFont = gState.get('Font');\n\t         if (gStateFont) {\n\t          textState.fontName = null;\n\t          textState.fontSize = gStateFont[1];\n\t          next(handleSetFont(null, gStateFont[0]));\n\t          return;\n\t         }\n\t         break;\n\t        }\n\t       }\n\t       if (stop) {\n\t        next(deferred);\n\t        return;\n\t       }\n\t       flushTextContentItem();\n\t       resolve(textContent);\n\t      });\n\t     },\n\t     extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, xref, properties) {\n\t      var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n\t      var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n\t      if (properties.composite) {\n\t       var cidSystemInfo = dict.get('CIDSystemInfo');\n\t       if (isDict(cidSystemInfo)) {\n\t        properties.cidSystemInfo = {\n\t         registry: cidSystemInfo.get('Registry'),\n\t         ordering: cidSystemInfo.get('Ordering'),\n\t         supplement: cidSystemInfo.get('Supplement')\n\t        };\n\t       }\n\t       var cidToGidMap = dict.get('CIDToGIDMap');\n\t       if (isStream(cidToGidMap)) {\n\t        properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n\t       }\n\t      }\n\t      var differences = [];\n\t      var baseEncodingName = null;\n\t      var encoding;\n\t      if (dict.has('Encoding')) {\n\t       encoding = dict.get('Encoding');\n\t       if (isDict(encoding)) {\n\t        baseEncodingName = encoding.get('BaseEncoding');\n\t        baseEncodingName = isName(baseEncodingName) ? baseEncodingName.name : null;\n\t        if (encoding.has('Differences')) {\n\t         var diffEncoding = encoding.get('Differences');\n\t         var index = 0;\n\t         for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n\t          var data = xref.fetchIfRef(diffEncoding[j]);\n\t          if (isNum(data)) {\n\t           index = data;\n\t          } else if (isName(data)) {\n\t           differences[index++] = data.name;\n\t          } else {\n\t           error('Invalid entry in \\'Differences\\' array: ' + data);\n\t          }\n\t         }\n\t        }\n\t       } else if (isName(encoding)) {\n\t        baseEncodingName = encoding.name;\n\t       } else {\n\t        error('Encoding is not a Name nor a Dict');\n\t       }\n\t       if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\n\t        baseEncodingName = null;\n\t       }\n\t      }\n\t      if (baseEncodingName) {\n\t       properties.defaultEncoding = getEncoding(baseEncodingName).slice();\n\t      } else {\n\t       var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n\t       var isNonsymbolicFont = !!(properties.flags & FontFlags.Nonsymbolic);\n\t       encoding = StandardEncoding;\n\t       if (properties.type === 'TrueType' && !isNonsymbolicFont) {\n\t        encoding = WinAnsiEncoding;\n\t       }\n\t       if (isSymbolicFont) {\n\t        encoding = MacRomanEncoding;\n\t        if (!properties.file) {\n\t         if (/Symbol/i.test(properties.name)) {\n\t          encoding = SymbolSetEncoding;\n\t         } else if (/Dingbats/i.test(properties.name)) {\n\t          encoding = ZapfDingbatsEncoding;\n\t         }\n\t        }\n\t       }\n\t       properties.defaultEncoding = encoding;\n\t      }\n\t      properties.differences = differences;\n\t      properties.baseEncodingName = baseEncodingName;\n\t      properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n\t      properties.dict = dict;\n\t      return toUnicodePromise.then(function (toUnicode) {\n\t       properties.toUnicode = toUnicode;\n\t       return this.buildToUnicode(properties);\n\t      }.bind(this)).then(function (toUnicode) {\n\t       properties.toUnicode = toUnicode;\n\t       return properties;\n\t      });\n\t     },\n\t     buildToUnicode: function PartialEvaluator_buildToUnicode(properties) {\n\t      properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n\t      if (properties.hasIncludedToUnicodeMap) {\n\t       return Promise.resolve(properties.toUnicode);\n\t      }\n\t      var toUnicode, charcode, glyphName;\n\t      if (!properties.composite)\n\t       {\n\t        toUnicode = [];\n\t        var encoding = properties.defaultEncoding.slice();\n\t        var baseEncodingName = properties.baseEncodingName;\n\t        var differences = properties.differences;\n\t        for (charcode in differences) {\n\t         glyphName = differences[charcode];\n\t         if (glyphName === '.notdef') {\n\t          continue;\n\t         }\n\t         encoding[charcode] = glyphName;\n\t        }\n\t        var glyphsUnicodeMap = getGlyphsUnicode();\n\t        for (charcode in encoding) {\n\t         glyphName = encoding[charcode];\n\t         if (glyphName === '') {\n\t          continue;\n\t         } else if (glyphsUnicodeMap[glyphName] === undefined) {\n\t          var code = 0;\n\t          switch (glyphName[0]) {\n\t          case 'G':\n\t           if (glyphName.length === 3) {\n\t            code = parseInt(glyphName.substr(1), 16);\n\t           }\n\t           break;\n\t          case 'g':\n\t           if (glyphName.length === 5) {\n\t            code = parseInt(glyphName.substr(1), 16);\n\t           }\n\t           break;\n\t          case 'C':\n\t          case 'c':\n\t           if (glyphName.length >= 3) {\n\t            code = +glyphName.substr(1);\n\t           }\n\t           break;\n\t          default:\n\t           var unicode = getUnicodeForGlyph(glyphName, glyphsUnicodeMap);\n\t           if (unicode !== -1) {\n\t            code = unicode;\n\t           }\n\t          }\n\t          if (code) {\n\t           if (baseEncodingName && code === +charcode) {\n\t            var baseEncoding = getEncoding(baseEncodingName);\n\t            if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n\t             toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n\t             continue;\n\t            }\n\t           }\n\t           toUnicode[charcode] = String.fromCharCode(code);\n\t          }\n\t          continue;\n\t         }\n\t         toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n\t        }\n\t        return Promise.resolve(new ToUnicodeMap(toUnicode));\n\t       }\n\t      if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\n\t       var registry = properties.cidSystemInfo.registry;\n\t       var ordering = properties.cidSystemInfo.ordering;\n\t       var ucs2CMapName = Name.get(registry + '-' + ordering + '-UCS2');\n\t       return CMapFactory.create(ucs2CMapName, this.options.cMapOptions, null).then(function (ucs2CMap) {\n\t        var cMap = properties.cMap;\n\t        toUnicode = [];\n\t        cMap.forEach(function (charcode, cid) {\n\t         assert(cid <= 0xffff, 'Max size of CID is 65,535');\n\t         var ucs2 = ucs2CMap.lookup(cid);\n\t         if (ucs2) {\n\t          toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n\t         }\n\t        });\n\t        return new ToUnicodeMap(toUnicode);\n\t       });\n\t      }\n\t      return Promise.resolve(new IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n\t     },\n\t     readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n\t      var cmapObj = toUnicode;\n\t      if (isName(cmapObj)) {\n\t       return CMapFactory.create(cmapObj, this.options.cMapOptions, null).then(function (cmap) {\n\t        if (cmap instanceof IdentityCMap) {\n\t         return new IdentityToUnicodeMap(0, 0xFFFF);\n\t        }\n\t        return new ToUnicodeMap(cmap.getMap());\n\t       });\n\t      } else if (isStream(cmapObj)) {\n\t       return CMapFactory.create(cmapObj, this.options.cMapOptions, null).then(function (cmap) {\n\t        if (cmap instanceof IdentityCMap) {\n\t         return new IdentityToUnicodeMap(0, 0xFFFF);\n\t        }\n\t        var map = new Array(cmap.length);\n\t        cmap.forEach(function (charCode, token) {\n\t         var str = [];\n\t         for (var k = 0; k < token.length; k += 2) {\n\t          var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n\t          if ((w1 & 0xF800) !== 0xD800) {\n\t           str.push(w1);\n\t           continue;\n\t          }\n\t          k += 2;\n\t          var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n\t          str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n\t         }\n\t         map[charCode] = String.fromCharCode.apply(String, str);\n\t        });\n\t        return new ToUnicodeMap(map);\n\t       });\n\t      }\n\t      return Promise.resolve(null);\n\t     },\n\t     readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n\t      var glyphsData = cidToGidStream.getBytes();\n\t      var result = [];\n\t      for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n\t       var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n\t       if (glyphID === 0) {\n\t        continue;\n\t       }\n\t       var code = j >> 1;\n\t       result[code] = glyphID;\n\t      }\n\t      return result;\n\t     },\n\t     extractWidths: function PartialEvaluator_extractWidths(dict, xref, descriptor, properties) {\n\t      var glyphsWidths = [];\n\t      var defaultWidth = 0;\n\t      var glyphsVMetrics = [];\n\t      var defaultVMetrics;\n\t      var i, ii, j, jj, start, code, widths;\n\t      if (properties.composite) {\n\t       defaultWidth = dict.get('DW') || 1000;\n\t       widths = dict.get('W');\n\t       if (widths) {\n\t        for (i = 0, ii = widths.length; i < ii; i++) {\n\t         start = xref.fetchIfRef(widths[i++]);\n\t         code = xref.fetchIfRef(widths[i]);\n\t         if (isArray(code)) {\n\t          for (j = 0, jj = code.length; j < jj; j++) {\n\t           glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n\t          }\n\t         } else {\n\t          var width = xref.fetchIfRef(widths[++i]);\n\t          for (j = start; j <= code; j++) {\n\t           glyphsWidths[j] = width;\n\t          }\n\t         }\n\t        }\n\t       }\n\t       if (properties.vertical) {\n\t        var vmetrics = dict.getArray('DW2') || [\n\t         880,\n\t         -1000\n\t        ];\n\t        defaultVMetrics = [\n\t         vmetrics[1],\n\t         defaultWidth * 0.5,\n\t         vmetrics[0]\n\t        ];\n\t        vmetrics = dict.get('W2');\n\t        if (vmetrics) {\n\t         for (i = 0, ii = vmetrics.length; i < ii; i++) {\n\t          start = xref.fetchIfRef(vmetrics[i++]);\n\t          code = xref.fetchIfRef(vmetrics[i]);\n\t          if (isArray(code)) {\n\t           for (j = 0, jj = code.length; j < jj; j++) {\n\t            glyphsVMetrics[start++] = [\n\t             xref.fetchIfRef(code[j++]),\n\t             xref.fetchIfRef(code[j++]),\n\t             xref.fetchIfRef(code[j])\n\t            ];\n\t           }\n\t          } else {\n\t           var vmetric = [\n\t            xref.fetchIfRef(vmetrics[++i]),\n\t            xref.fetchIfRef(vmetrics[++i]),\n\t            xref.fetchIfRef(vmetrics[++i])\n\t           ];\n\t           for (j = start; j <= code; j++) {\n\t            glyphsVMetrics[j] = vmetric;\n\t           }\n\t          }\n\t         }\n\t        }\n\t       }\n\t      } else {\n\t       var firstChar = properties.firstChar;\n\t       widths = dict.get('Widths');\n\t       if (widths) {\n\t        j = firstChar;\n\t        for (i = 0, ii = widths.length; i < ii; i++) {\n\t         glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n\t        }\n\t        defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\n\t       } else {\n\t        var baseFontName = dict.get('BaseFont');\n\t        if (isName(baseFontName)) {\n\t         var metrics = this.getBaseFontMetrics(baseFontName.name);\n\t         glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n\t         defaultWidth = metrics.defaultWidth;\n\t        }\n\t       }\n\t      }\n\t      var isMonospace = true;\n\t      var firstWidth = defaultWidth;\n\t      for (var glyph in glyphsWidths) {\n\t       var glyphWidth = glyphsWidths[glyph];\n\t       if (!glyphWidth) {\n\t        continue;\n\t       }\n\t       if (!firstWidth) {\n\t        firstWidth = glyphWidth;\n\t        continue;\n\t       }\n\t       if (firstWidth !== glyphWidth) {\n\t        isMonospace = false;\n\t        break;\n\t       }\n\t      }\n\t      if (isMonospace) {\n\t       properties.flags |= FontFlags.FixedPitch;\n\t      }\n\t      properties.defaultWidth = defaultWidth;\n\t      properties.widths = glyphsWidths;\n\t      properties.defaultVMetrics = defaultVMetrics;\n\t      properties.vmetrics = glyphsVMetrics;\n\t     },\n\t     isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n\t      var fontNameWoStyle = baseFontName.split('-')[0];\n\t      return fontNameWoStyle in getSerifFonts() || fontNameWoStyle.search(/serif/gi) !== -1;\n\t     },\n\t     getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n\t      var defaultWidth = 0;\n\t      var widths = [];\n\t      var monospace = false;\n\t      var stdFontMap = getStdFontMap();\n\t      var lookupName = stdFontMap[name] || name;\n\t      var Metrics = getMetrics();\n\t      if (!(lookupName in Metrics)) {\n\t       if (this.isSerifFont(name)) {\n\t        lookupName = 'Times-Roman';\n\t       } else {\n\t        lookupName = 'Helvetica';\n\t       }\n\t      }\n\t      var glyphWidths = Metrics[lookupName];\n\t      if (isNum(glyphWidths)) {\n\t       defaultWidth = glyphWidths;\n\t       monospace = true;\n\t      } else {\n\t       widths = glyphWidths();\n\t      }\n\t      return {\n\t       defaultWidth: defaultWidth,\n\t       monospace: monospace,\n\t       widths: widths\n\t      };\n\t     },\n\t     buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\n\t      var widths = Object.create(null);\n\t      var differences = properties.differences;\n\t      var encoding = properties.defaultEncoding;\n\t      for (var charCode = 0; charCode < 256; charCode++) {\n\t       if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n\t        widths[charCode] = widthsByGlyphName[differences[charCode]];\n\t        continue;\n\t       }\n\t       if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n\t        widths[charCode] = widthsByGlyphName[encoding[charCode]];\n\t        continue;\n\t       }\n\t      }\n\t      return widths;\n\t     },\n\t     preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict, xref) {\n\t      var baseDict = dict;\n\t      var type = dict.get('Subtype');\n\t      assert(isName(type), 'invalid font Subtype');\n\t      var composite = false;\n\t      var uint8array;\n\t      if (type.name === 'Type0') {\n\t       var df = dict.get('DescendantFonts');\n\t       if (!df) {\n\t        error('Descendant fonts are not specified');\n\t       }\n\t       dict = isArray(df) ? xref.fetchIfRef(df[0]) : df;\n\t       type = dict.get('Subtype');\n\t       assert(isName(type), 'invalid font Subtype');\n\t       composite = true;\n\t      }\n\t      var descriptor = dict.get('FontDescriptor');\n\t      if (descriptor) {\n\t       var hash = new MurmurHash3_64();\n\t       var encoding = baseDict.getRaw('Encoding');\n\t       if (isName(encoding)) {\n\t        hash.update(encoding.name);\n\t       } else if (isRef(encoding)) {\n\t        hash.update(encoding.toString());\n\t       } else if (isDict(encoding)) {\n\t        var keys = encoding.getKeys();\n\t        for (var i = 0, ii = keys.length; i < ii; i++) {\n\t         var entry = encoding.getRaw(keys[i]);\n\t         if (isName(entry)) {\n\t          hash.update(entry.name);\n\t         } else if (isRef(entry)) {\n\t          hash.update(entry.toString());\n\t         } else if (isArray(entry)) {\n\t          var diffLength = entry.length, diffBuf = new Array(diffLength);\n\t          for (var j = 0; j < diffLength; j++) {\n\t           var diffEntry = entry[j];\n\t           if (isName(diffEntry)) {\n\t            diffBuf[j] = diffEntry.name;\n\t           } else if (isNum(diffEntry) || isRef(diffEntry)) {\n\t            diffBuf[j] = diffEntry.toString();\n\t           }\n\t          }\n\t          hash.update(diffBuf.join());\n\t         }\n\t        }\n\t       }\n\t       var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n\t       if (isStream(toUnicode)) {\n\t        var stream = toUnicode.str || toUnicode;\n\t        uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n\t        hash.update(uint8array);\n\t       } else if (isName(toUnicode)) {\n\t        hash.update(toUnicode.name);\n\t       }\n\t       var widths = dict.get('Widths') || baseDict.get('Widths');\n\t       if (widths) {\n\t        uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n\t        hash.update(uint8array);\n\t       }\n\t      }\n\t      return {\n\t       descriptor: descriptor,\n\t       dict: dict,\n\t       baseDict: baseDict,\n\t       composite: composite,\n\t       type: type.name,\n\t       hash: hash ? hash.hexdigest() : ''\n\t      };\n\t     },\n\t     translateFont: function PartialEvaluator_translateFont(preEvaluatedFont, xref) {\n\t      var baseDict = preEvaluatedFont.baseDict;\n\t      var dict = preEvaluatedFont.dict;\n\t      var composite = preEvaluatedFont.composite;\n\t      var descriptor = preEvaluatedFont.descriptor;\n\t      var type = preEvaluatedFont.type;\n\t      var maxCharIndex = composite ? 0xFFFF : 0xFF;\n\t      var cMapOptions = this.options.cMapOptions;\n\t      var properties;\n\t      if (!descriptor) {\n\t       if (type === 'Type3') {\n\t        descriptor = new Dict(null);\n\t        descriptor.set('FontName', Name.get(type));\n\t        descriptor.set('FontBBox', dict.getArray('FontBBox'));\n\t       } else {\n\t        var baseFontName = dict.get('BaseFont');\n\t        if (!isName(baseFontName)) {\n\t         error('Base font is not specified');\n\t        }\n\t        baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n\t        var metrics = this.getBaseFontMetrics(baseFontName);\n\t        var fontNameWoStyle = baseFontName.split('-')[0];\n\t        var flags = (this.isSerifFont(fontNameWoStyle) ? FontFlags.Serif : 0) | (metrics.monospace ? FontFlags.FixedPitch : 0) | (getSymbolsFonts()[fontNameWoStyle] ? FontFlags.Symbolic : FontFlags.Nonsymbolic);\n\t        properties = {\n\t         type: type,\n\t         name: baseFontName,\n\t         widths: metrics.widths,\n\t         defaultWidth: metrics.defaultWidth,\n\t         flags: flags,\n\t         firstChar: 0,\n\t         lastChar: maxCharIndex\n\t        };\n\t        return this.extractDataStructures(dict, dict, xref, properties).then(function (properties) {\n\t         properties.widths = this.buildCharCodeToWidth(metrics.widths, properties);\n\t         return new Font(baseFontName, null, properties);\n\t        }.bind(this));\n\t       }\n\t      }\n\t      var firstChar = dict.get('FirstChar') || 0;\n\t      var lastChar = dict.get('LastChar') || maxCharIndex;\n\t      var fontName = descriptor.get('FontName');\n\t      var baseFont = dict.get('BaseFont');\n\t      if (isString(fontName)) {\n\t       fontName = Name.get(fontName);\n\t      }\n\t      if (isString(baseFont)) {\n\t       baseFont = Name.get(baseFont);\n\t      }\n\t      if (type !== 'Type3') {\n\t       var fontNameStr = fontName && fontName.name;\n\t       var baseFontStr = baseFont && baseFont.name;\n\t       if (fontNameStr !== baseFontStr) {\n\t        info('The FontDescriptor\\'s FontName is \"' + fontNameStr + '\" but should be the same as the Font\\'s BaseFont \"' + baseFontStr + '\"');\n\t        if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\n\t         fontName = baseFont;\n\t        }\n\t       }\n\t      }\n\t      fontName = fontName || baseFont;\n\t      assert(isName(fontName), 'invalid font name');\n\t      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n\t      if (fontFile) {\n\t       if (fontFile.dict) {\n\t        var subtype = fontFile.dict.get('Subtype');\n\t        if (subtype) {\n\t         subtype = subtype.name;\n\t        }\n\t        var length1 = fontFile.dict.get('Length1');\n\t        var length2 = fontFile.dict.get('Length2');\n\t        var length3 = fontFile.dict.get('Length3');\n\t       }\n\t      }\n\t      properties = {\n\t       type: type,\n\t       name: fontName.name,\n\t       subtype: subtype,\n\t       file: fontFile,\n\t       length1: length1,\n\t       length2: length2,\n\t       length3: length3,\n\t       loadedName: baseDict.loadedName,\n\t       composite: composite,\n\t       wideChars: composite,\n\t       fixedPitch: false,\n\t       fontMatrix: dict.getArray('FontMatrix') || FONT_IDENTITY_MATRIX,\n\t       firstChar: firstChar || 0,\n\t       lastChar: lastChar || maxCharIndex,\n\t       bbox: descriptor.getArray('FontBBox'),\n\t       ascent: descriptor.get('Ascent'),\n\t       descent: descriptor.get('Descent'),\n\t       xHeight: descriptor.get('XHeight'),\n\t       capHeight: descriptor.get('CapHeight'),\n\t       flags: descriptor.get('Flags'),\n\t       italicAngle: descriptor.get('ItalicAngle'),\n\t       coded: false\n\t      };\n\t      var cMapPromise;\n\t      if (composite) {\n\t       var cidEncoding = baseDict.get('Encoding');\n\t       if (isName(cidEncoding)) {\n\t        properties.cidEncoding = cidEncoding.name;\n\t       }\n\t       cMapPromise = CMapFactory.create(cidEncoding, cMapOptions, null).then(function (cMap) {\n\t        properties.cMap = cMap;\n\t        properties.vertical = properties.cMap.vertical;\n\t       });\n\t      } else {\n\t       cMapPromise = Promise.resolve(undefined);\n\t      }\n\t      return cMapPromise.then(function () {\n\t       return this.extractDataStructures(dict, baseDict, xref, properties);\n\t      }.bind(this)).then(function (properties) {\n\t       this.extractWidths(dict, xref, descriptor, properties);\n\t       if (type === 'Type3') {\n\t        properties.isType3Font = true;\n\t       }\n\t       return new Font(fontName.name, fontFile, properties);\n\t      }.bind(this));\n\t     }\n\t    };\n\t    return PartialEvaluator;\n\t   }();\n\t   var TranslatedFont = function TranslatedFontClosure() {\n\t    function TranslatedFont(loadedName, font, dict) {\n\t     this.loadedName = loadedName;\n\t     this.font = font;\n\t     this.dict = dict;\n\t     this.type3Loaded = null;\n\t     this.sent = false;\n\t    }\n\t    TranslatedFont.prototype = {\n\t     send: function (handler) {\n\t      if (this.sent) {\n\t       return;\n\t      }\n\t      var fontData = this.font.exportData();\n\t      handler.send('commonobj', [\n\t       this.loadedName,\n\t       'Font',\n\t       fontData\n\t      ]);\n\t      this.sent = true;\n\t     },\n\t     loadType3Data: function (evaluator, resources, parentOperatorList, task) {\n\t      assert(this.font.isType3Font);\n\t      if (this.type3Loaded) {\n\t       return this.type3Loaded;\n\t      }\n\t      var translatedFont = this.font;\n\t      var loadCharProcsPromise = Promise.resolve();\n\t      var charProcs = this.dict.get('CharProcs');\n\t      var fontResources = this.dict.get('Resources') || resources;\n\t      var charProcKeys = charProcs.getKeys();\n\t      var charProcOperatorList = Object.create(null);\n\t      for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n\t       loadCharProcsPromise = loadCharProcsPromise.then(function (key) {\n\t        var glyphStream = charProcs.get(key);\n\t        var operatorList = new OperatorList();\n\t        return evaluator.getOperatorList(glyphStream, task, fontResources, operatorList).then(function () {\n\t         charProcOperatorList[key] = operatorList.getIR();\n\t         parentOperatorList.addDependencies(operatorList.dependencies);\n\t        }, function (reason) {\n\t         warn('Type3 font resource \\\"' + key + '\\\" is not available');\n\t         var operatorList = new OperatorList();\n\t         charProcOperatorList[key] = operatorList.getIR();\n\t        });\n\t       }.bind(this, charProcKeys[i]));\n\t      }\n\t      this.type3Loaded = loadCharProcsPromise.then(function () {\n\t       translatedFont.charProcOperatorList = charProcOperatorList;\n\t      });\n\t      return this.type3Loaded;\n\t     }\n\t    };\n\t    return TranslatedFont;\n\t   }();\n\t   var OperatorList = function OperatorListClosure() {\n\t    var CHUNK_SIZE = 1000;\n\t    var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n\t    function getTransfers(queue) {\n\t     var transfers = [];\n\t     var fnArray = queue.fnArray, argsArray = queue.argsArray;\n\t     for (var i = 0, ii = queue.length; i < ii; i++) {\n\t      switch (fnArray[i]) {\n\t      case OPS.paintInlineImageXObject:\n\t      case OPS.paintInlineImageXObjectGroup:\n\t      case OPS.paintImageMaskXObject:\n\t       var arg = argsArray[i][0];\n\t       if (!arg.cached) {\n\t        transfers.push(arg.data.buffer);\n\t       }\n\t       break;\n\t      }\n\t     }\n\t     return transfers;\n\t    }\n\t    function OperatorList(intent, messageHandler, pageIndex) {\n\t     this.messageHandler = messageHandler;\n\t     this.fnArray = [];\n\t     this.argsArray = [];\n\t     this.dependencies = Object.create(null);\n\t     this._totalLength = 0;\n\t     this.pageIndex = pageIndex;\n\t     this.intent = intent;\n\t    }\n\t    OperatorList.prototype = {\n\t     get length() {\n\t      return this.argsArray.length;\n\t     },\n\t     get totalLength() {\n\t      return this._totalLength + this.length;\n\t     },\n\t     addOp: function (fn, args) {\n\t      this.fnArray.push(fn);\n\t      this.argsArray.push(args);\n\t      if (this.messageHandler) {\n\t       if (this.fnArray.length >= CHUNK_SIZE) {\n\t        this.flush();\n\t       } else if (this.fnArray.length >= CHUNK_SIZE_ABOUT && (fn === OPS.restore || fn === OPS.endText)) {\n\t        this.flush();\n\t       }\n\t      }\n\t     },\n\t     addDependency: function (dependency) {\n\t      if (dependency in this.dependencies) {\n\t       return;\n\t      }\n\t      this.dependencies[dependency] = true;\n\t      this.addOp(OPS.dependency, [dependency]);\n\t     },\n\t     addDependencies: function (dependencies) {\n\t      for (var key in dependencies) {\n\t       this.addDependency(key);\n\t      }\n\t     },\n\t     addOpList: function (opList) {\n\t      Util.extendObj(this.dependencies, opList.dependencies);\n\t      for (var i = 0, ii = opList.length; i < ii; i++) {\n\t       this.addOp(opList.fnArray[i], opList.argsArray[i]);\n\t      }\n\t     },\n\t     getIR: function () {\n\t      return {\n\t       fnArray: this.fnArray,\n\t       argsArray: this.argsArray,\n\t       length: this.length\n\t      };\n\t     },\n\t     flush: function (lastChunk) {\n\t      if (this.intent !== 'oplist') {\n\t       new QueueOptimizer().optimize(this);\n\t      }\n\t      var transfers = getTransfers(this);\n\t      var length = this.length;\n\t      this._totalLength += length;\n\t      this.messageHandler.send('RenderPageChunk', {\n\t       operatorList: {\n\t        fnArray: this.fnArray,\n\t        argsArray: this.argsArray,\n\t        lastChunk: lastChunk,\n\t        length: length\n\t       },\n\t       pageIndex: this.pageIndex,\n\t       intent: this.intent\n\t      }, transfers);\n\t      this.dependencies = Object.create(null);\n\t      this.fnArray.length = 0;\n\t      this.argsArray.length = 0;\n\t     }\n\t    };\n\t    return OperatorList;\n\t   }();\n\t   var StateManager = function StateManagerClosure() {\n\t    function StateManager(initialState) {\n\t     this.state = initialState;\n\t     this.stateStack = [];\n\t    }\n\t    StateManager.prototype = {\n\t     save: function () {\n\t      var old = this.state;\n\t      this.stateStack.push(this.state);\n\t      this.state = old.clone();\n\t     },\n\t     restore: function () {\n\t      var prev = this.stateStack.pop();\n\t      if (prev) {\n\t       this.state = prev;\n\t      }\n\t     },\n\t     transform: function (args) {\n\t      this.state.ctm = Util.transform(this.state.ctm, args);\n\t     }\n\t    };\n\t    return StateManager;\n\t   }();\n\t   var TextState = function TextStateClosure() {\n\t    function TextState() {\n\t     this.ctm = new Float32Array(IDENTITY_MATRIX);\n\t     this.fontName = null;\n\t     this.fontSize = 0;\n\t     this.font = null;\n\t     this.fontMatrix = FONT_IDENTITY_MATRIX;\n\t     this.textMatrix = IDENTITY_MATRIX.slice();\n\t     this.textLineMatrix = IDENTITY_MATRIX.slice();\n\t     this.charSpacing = 0;\n\t     this.wordSpacing = 0;\n\t     this.leading = 0;\n\t     this.textHScale = 1;\n\t     this.textRise = 0;\n\t    }\n\t    TextState.prototype = {\n\t     setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n\t      var m = this.textMatrix;\n\t      m[0] = a;\n\t      m[1] = b;\n\t      m[2] = c;\n\t      m[3] = d;\n\t      m[4] = e;\n\t      m[5] = f;\n\t     },\n\t     setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n\t      var m = this.textLineMatrix;\n\t      m[0] = a;\n\t      m[1] = b;\n\t      m[2] = c;\n\t      m[3] = d;\n\t      m[4] = e;\n\t      m[5] = f;\n\t     },\n\t     translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n\t      var m = this.textMatrix;\n\t      m[4] = m[0] * x + m[2] * y + m[4];\n\t      m[5] = m[1] * x + m[3] * y + m[5];\n\t     },\n\t     translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n\t      var m = this.textLineMatrix;\n\t      m[4] = m[0] * x + m[2] * y + m[4];\n\t      m[5] = m[1] * x + m[3] * y + m[5];\n\t     },\n\t     calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n\t      var font = this.font;\n\t      if (!font) {\n\t       return null;\n\t      }\n\t      var m = this.textLineMatrix;\n\t      if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n\t       return null;\n\t      }\n\t      var txDiff = e - m[4], tyDiff = f - m[5];\n\t      if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n\t       return null;\n\t      }\n\t      var tx, ty, denominator = a * d - b * c;\n\t      if (font.vertical) {\n\t       tx = -tyDiff * c / denominator;\n\t       ty = tyDiff * a / denominator;\n\t      } else {\n\t       tx = txDiff * d / denominator;\n\t       ty = -txDiff * b / denominator;\n\t      }\n\t      return {\n\t       width: tx,\n\t       height: ty,\n\t       value: font.vertical ? ty : tx\n\t      };\n\t     },\n\t     calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n\t      var tsm = [\n\t       this.fontSize * this.textHScale,\n\t       0,\n\t       0,\n\t       this.fontSize,\n\t       0,\n\t       this.textRise\n\t      ];\n\t      return Util.transform(ctm, Util.transform(this.textMatrix, tsm));\n\t     },\n\t     carriageReturn: function TextState_carriageReturn() {\n\t      this.translateTextLineMatrix(0, -this.leading);\n\t      this.textMatrix = this.textLineMatrix.slice();\n\t     },\n\t     clone: function TextState_clone() {\n\t      var clone = Object.create(this);\n\t      clone.textMatrix = this.textMatrix.slice();\n\t      clone.textLineMatrix = this.textLineMatrix.slice();\n\t      clone.fontMatrix = this.fontMatrix.slice();\n\t      return clone;\n\t     }\n\t    };\n\t    return TextState;\n\t   }();\n\t   var EvalState = function EvalStateClosure() {\n\t    function EvalState() {\n\t     this.ctm = new Float32Array(IDENTITY_MATRIX);\n\t     this.font = null;\n\t     this.textRenderingMode = TextRenderingMode.FILL;\n\t     this.fillColorSpace = ColorSpace.singletons.gray;\n\t     this.strokeColorSpace = ColorSpace.singletons.gray;\n\t    }\n\t    EvalState.prototype = {\n\t     clone: function CanvasExtraState_clone() {\n\t      return Object.create(this);\n\t     }\n\t    };\n\t    return EvalState;\n\t   }();\n\t   var EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\n\t    var getOPMap = getLookupTableFactory(function (t) {\n\t     t['w'] = {\n\t      id: OPS.setLineWidth,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t     };\n\t     t['J'] = {\n\t      id: OPS.setLineCap,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t     };\n\t     t['j'] = {\n\t      id: OPS.setLineJoin,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t     };\n\t     t['M'] = {\n\t      id: OPS.setMiterLimit,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t     };\n\t     t['d'] = {\n\t      id: OPS.setDash,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t     };\n\t     t['ri'] = {\n\t      id: OPS.setRenderingIntent,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t     };\n\t     t['i'] = {\n\t      id: OPS.setFlatness,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t     };\n\t     t['gs'] = {\n\t      id: OPS.setGState,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t     };\n\t     t['q'] = {\n\t      id: OPS.save,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t     };\n\t     t['Q'] = {\n\t      id: OPS.restore,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t     };\n\t     t['cm'] = {\n\t      id: OPS.transform,\n\t      numArgs: 6,\n\t      variableArgs: false\n\t     };\n\t     t['m'] = {\n\t      id: OPS.moveTo,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t     };\n\t     t['l'] = {\n\t      id: OPS.lineTo,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t     };\n\t     t['c'] = {\n\t      id: OPS.curveTo,\n\t      numArgs: 6,\n\t      variableArgs: false\n\t     };\n\t     t['v'] = {\n\t      id: OPS.curveTo2,\n\t      numArgs: 4,\n\t      variableArgs: false\n\t     };\n\t     t['y'] = {\n\t      id: OPS.curveTo3,\n\t      numArgs: 4,\n\t      variableArgs: false\n\t     };\n\t     t['h'] = {\n\t      id: OPS.closePath,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t     };\n\t     t['re'] = {\n\t      id: OPS.rectangle,\n\t      numArgs: 4,\n\t      variableArgs: false\n\t     };\n\t     t['S'] = {\n\t      id: OPS.stroke,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t     };\n\t     t['s'] = {\n\t      id: OPS.closeStroke,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t     };\n\t     t['f'] = {\n\t      id: OPS.fill,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t     };\n\t     t['F'] = {\n\t      id: OPS.fill,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t     };\n\t     t['f*'] = {\n\t      id: OPS.eoFill,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t     };\n\t     t['B'] = {\n\t      id: OPS.fillStroke,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t     };\n\t     t['B*'] = {\n\t      id: OPS.eoFillStroke,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t     };\n\t     t['b'] = {\n\t      id: OPS.closeFillStroke,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t     };\n\t     t['b*'] = {\n\t      id: OPS.closeEOFillStroke,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t     };\n\t     t['n'] = {\n\t      id: OPS.endPath,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t     };\n\t     t['W'] = {\n\t      id: OPS.clip,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t     };\n\t     t['W*'] = {\n\t      id: OPS.eoClip,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t     };\n\t     t['BT'] = {\n\t      id: OPS.beginText,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t     };\n\t     t['ET'] = {\n\t      id: OPS.endText,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t     };\n\t     t['Tc'] = {\n\t      id: OPS.setCharSpacing,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t     };\n\t     t['Tw'] = {\n\t      id: OPS.setWordSpacing,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t     };\n\t     t['Tz'] = {\n\t      id: OPS.setHScale,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t     };\n\t     t['TL'] = {\n\t      id: OPS.setLeading,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t     };\n\t     t['Tf'] = {\n\t      id: OPS.setFont,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t     };\n\t     t['Tr'] = {\n\t      id: OPS.setTextRenderingMode,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t     };\n\t     t['Ts'] = {\n\t      id: OPS.setTextRise,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t     };\n\t     t['Td'] = {\n\t      id: OPS.moveText,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t     };\n\t     t['TD'] = {\n\t      id: OPS.setLeadingMoveText,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t     };\n\t     t['Tm'] = {\n\t      id: OPS.setTextMatrix,\n\t      numArgs: 6,\n\t      variableArgs: false\n\t     };\n\t     t['T*'] = {\n\t      id: OPS.nextLine,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t     };\n\t     t['Tj'] = {\n\t      id: OPS.showText,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t     };\n\t     t['TJ'] = {\n\t      id: OPS.showSpacedText,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t     };\n\t     t['\\''] = {\n\t      id: OPS.nextLineShowText,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t     };\n\t     t['\"'] = {\n\t      id: OPS.nextLineSetSpacingShowText,\n\t      numArgs: 3,\n\t      variableArgs: false\n\t     };\n\t     t['d0'] = {\n\t      id: OPS.setCharWidth,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t     };\n\t     t['d1'] = {\n\t      id: OPS.setCharWidthAndBounds,\n\t      numArgs: 6,\n\t      variableArgs: false\n\t     };\n\t     t['CS'] = {\n\t      id: OPS.setStrokeColorSpace,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t     };\n\t     t['cs'] = {\n\t      id: OPS.setFillColorSpace,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t     };\n\t     t['SC'] = {\n\t      id: OPS.setStrokeColor,\n\t      numArgs: 4,\n\t      variableArgs: true\n\t     };\n\t     t['SCN'] = {\n\t      id: OPS.setStrokeColorN,\n\t      numArgs: 33,\n\t      variableArgs: true\n\t     };\n\t     t['sc'] = {\n\t      id: OPS.setFillColor,\n\t      numArgs: 4,\n\t      variableArgs: true\n\t     };\n\t     t['scn'] = {\n\t      id: OPS.setFillColorN,\n\t      numArgs: 33,\n\t      variableArgs: true\n\t     };\n\t     t['G'] = {\n\t      id: OPS.setStrokeGray,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t     };\n\t     t['g'] = {\n\t      id: OPS.setFillGray,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t     };\n\t     t['RG'] = {\n\t      id: OPS.setStrokeRGBColor,\n\t      numArgs: 3,\n\t      variableArgs: false\n\t     };\n\t     t['rg'] = {\n\t      id: OPS.setFillRGBColor,\n\t      numArgs: 3,\n\t      variableArgs: false\n\t     };\n\t     t['K'] = {\n\t      id: OPS.setStrokeCMYKColor,\n\t      numArgs: 4,\n\t      variableArgs: false\n\t     };\n\t     t['k'] = {\n\t      id: OPS.setFillCMYKColor,\n\t      numArgs: 4,\n\t      variableArgs: false\n\t     };\n\t     t['sh'] = {\n\t      id: OPS.shadingFill,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t     };\n\t     t['BI'] = {\n\t      id: OPS.beginInlineImage,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t     };\n\t     t['ID'] = {\n\t      id: OPS.beginImageData,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t     };\n\t     t['EI'] = {\n\t      id: OPS.endInlineImage,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t     };\n\t     t['Do'] = {\n\t      id: OPS.paintXObject,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t     };\n\t     t['MP'] = {\n\t      id: OPS.markPoint,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t     };\n\t     t['DP'] = {\n\t      id: OPS.markPointProps,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t     };\n\t     t['BMC'] = {\n\t      id: OPS.beginMarkedContent,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t     };\n\t     t['BDC'] = {\n\t      id: OPS.beginMarkedContentProps,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t     };\n\t     t['EMC'] = {\n\t      id: OPS.endMarkedContent,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t     };\n\t     t['BX'] = {\n\t      id: OPS.beginCompat,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t     };\n\t     t['EX'] = {\n\t      id: OPS.endCompat,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t     };\n\t     t['BM'] = null;\n\t     t['BD'] = null;\n\t     t['true'] = null;\n\t     t['fa'] = null;\n\t     t['fal'] = null;\n\t     t['fals'] = null;\n\t     t['false'] = null;\n\t     t['nu'] = null;\n\t     t['nul'] = null;\n\t     t['null'] = null;\n\t    });\n\t    function EvaluatorPreprocessor(stream, xref, stateManager) {\n\t     this.opMap = getOPMap();\n\t     this.parser = new Parser(new Lexer(stream, this.opMap), false, xref);\n\t     this.stateManager = stateManager;\n\t     this.nonProcessedArgs = [];\n\t    }\n\t    EvaluatorPreprocessor.prototype = {\n\t     get savedStatesDepth() {\n\t      return this.stateManager.stateStack.length;\n\t     },\n\t     read: function EvaluatorPreprocessor_read(operation) {\n\t      var args = operation.args;\n\t      while (true) {\n\t       var obj = this.parser.getObj();\n\t       if (isCmd(obj)) {\n\t        var cmd = obj.cmd;\n\t        var opSpec = this.opMap[cmd];\n\t        if (!opSpec) {\n\t         warn('Unknown command \"' + cmd + '\"');\n\t         continue;\n\t        }\n\t        var fn = opSpec.id;\n\t        var numArgs = opSpec.numArgs;\n\t        var argsLength = args !== null ? args.length : 0;\n\t        if (!opSpec.variableArgs) {\n\t         if (argsLength !== numArgs) {\n\t          var nonProcessedArgs = this.nonProcessedArgs;\n\t          while (argsLength > numArgs) {\n\t           nonProcessedArgs.push(args.shift());\n\t           argsLength--;\n\t          }\n\t          while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n\t           if (args === null) {\n\t            args = [];\n\t           }\n\t           args.unshift(nonProcessedArgs.pop());\n\t           argsLength++;\n\t          }\n\t         }\n\t         if (argsLength < numArgs) {\n\t          warn('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\n\t          if (args !== null) {\n\t           args.length = 0;\n\t          }\n\t          continue;\n\t         }\n\t        } else if (argsLength > numArgs) {\n\t         info('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\n\t        }\n\t        this.preprocessCommand(fn, args);\n\t        operation.fn = fn;\n\t        operation.args = args;\n\t        return true;\n\t       }\n\t       if (isEOF(obj)) {\n\t        return false;\n\t       }\n\t       if (obj !== null) {\n\t        if (args === null) {\n\t         args = [];\n\t        }\n\t        args.push(obj);\n\t        assert(args.length <= 33, 'Too many arguments');\n\t       }\n\t      }\n\t     },\n\t     preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n\t      switch (fn | 0) {\n\t      case OPS.save:\n\t       this.stateManager.save();\n\t       break;\n\t      case OPS.restore:\n\t       this.stateManager.restore();\n\t       break;\n\t      case OPS.transform:\n\t       this.stateManager.transform(args);\n\t       break;\n\t      }\n\t     }\n\t    };\n\t    return EvaluatorPreprocessor;\n\t   }();\n\t   var QueueOptimizer = function QueueOptimizerClosure() {\n\t    function addState(parentState, pattern, fn) {\n\t     var state = parentState;\n\t     for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n\t      var item = pattern[i];\n\t      state = state[item] || (state[item] = []);\n\t     }\n\t     state[pattern[pattern.length - 1]] = fn;\n\t    }\n\t    function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n\t     var iFirstPIMXO = iFirstSave + 2;\n\t     for (var i = 0; i < count; i++) {\n\t      var arg = argsArray[iFirstPIMXO + 4 * i];\n\t      var imageMask = arg.length === 1 && arg[0];\n\t      if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n\t       fnArray[iFirstPIMXO + 4 * i] = OPS.paintSolidColorImageMask;\n\t       continue;\n\t      }\n\t      break;\n\t     }\n\t     return count - i;\n\t    }\n\t    var InitialState = [];\n\t    addState(InitialState, [\n\t     OPS.save,\n\t     OPS.transform,\n\t     OPS.paintInlineImageXObject,\n\t     OPS.restore\n\t    ], function foundInlineImageGroup(context) {\n\t     var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n\t     var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n\t     var MAX_WIDTH = 1000;\n\t     var IMAGE_PADDING = 1;\n\t     var fnArray = context.fnArray, argsArray = context.argsArray;\n\t     var curr = context.iCurr;\n\t     var iFirstSave = curr - 3;\n\t     var iFirstTransform = curr - 2;\n\t     var iFirstPIIXO = curr - 1;\n\t     var i = iFirstSave + 4;\n\t     var ii = fnArray.length;\n\t     while (i + 3 < ii) {\n\t      if (fnArray[i] !== OPS.save || fnArray[i + 1] !== OPS.transform || fnArray[i + 2] !== OPS.paintInlineImageXObject || fnArray[i + 3] !== OPS.restore) {\n\t       break;\n\t      }\n\t      i += 4;\n\t     }\n\t     var count = Math.min((i - iFirstSave) / 4, MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n\t     if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n\t      return i;\n\t     }\n\t     var maxX = 0;\n\t     var map = [], maxLineHeight = 0;\n\t     var currentX = IMAGE_PADDING, currentY = IMAGE_PADDING;\n\t     var q;\n\t     for (q = 0; q < count; q++) {\n\t      var transform = argsArray[iFirstTransform + (q << 2)];\n\t      var img = argsArray[iFirstPIIXO + (q << 2)][0];\n\t      if (currentX + img.width > MAX_WIDTH) {\n\t       maxX = Math.max(maxX, currentX);\n\t       currentY += maxLineHeight + 2 * IMAGE_PADDING;\n\t       currentX = 0;\n\t       maxLineHeight = 0;\n\t      }\n\t      map.push({\n\t       transform: transform,\n\t       x: currentX,\n\t       y: currentY,\n\t       w: img.width,\n\t       h: img.height\n\t      });\n\t      currentX += img.width + 2 * IMAGE_PADDING;\n\t      maxLineHeight = Math.max(maxLineHeight, img.height);\n\t     }\n\t     var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n\t     var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n\t     var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n\t     var imgRowSize = imgWidth << 2;\n\t     for (q = 0; q < count; q++) {\n\t      var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n\t      var rowSize = map[q].w << 2;\n\t      var dataOffset = 0;\n\t      var offset = map[q].x + map[q].y * imgWidth << 2;\n\t      imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n\t      for (var k = 0, kk = map[q].h; k < kk; k++) {\n\t       imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n\t       dataOffset += rowSize;\n\t       offset += imgRowSize;\n\t      }\n\t      imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n\t      while (offset >= 0) {\n\t       data[offset - 4] = data[offset];\n\t       data[offset - 3] = data[offset + 1];\n\t       data[offset - 2] = data[offset + 2];\n\t       data[offset - 1] = data[offset + 3];\n\t       data[offset + rowSize] = data[offset + rowSize - 4];\n\t       data[offset + rowSize + 1] = data[offset + rowSize - 3];\n\t       data[offset + rowSize + 2] = data[offset + rowSize - 2];\n\t       data[offset + rowSize + 3] = data[offset + rowSize - 1];\n\t       offset -= imgRowSize;\n\t      }\n\t     }\n\t     fnArray.splice(iFirstSave, count * 4, OPS.paintInlineImageXObjectGroup);\n\t     argsArray.splice(iFirstSave, count * 4, [\n\t      {\n\t       width: imgWidth,\n\t       height: imgHeight,\n\t       kind: ImageKind.RGBA_32BPP,\n\t       data: imgData\n\t      },\n\t      map\n\t     ]);\n\t     return iFirstSave + 1;\n\t    });\n\t    addState(InitialState, [\n\t     OPS.save,\n\t     OPS.transform,\n\t     OPS.paintImageMaskXObject,\n\t     OPS.restore\n\t    ], function foundImageMaskGroup(context) {\n\t     var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n\t     var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n\t     var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n\t     var fnArray = context.fnArray, argsArray = context.argsArray;\n\t     var curr = context.iCurr;\n\t     var iFirstSave = curr - 3;\n\t     var iFirstTransform = curr - 2;\n\t     var iFirstPIMXO = curr - 1;\n\t     var i = iFirstSave + 4;\n\t     var ii = fnArray.length;\n\t     while (i + 3 < ii) {\n\t      if (fnArray[i] !== OPS.save || fnArray[i + 1] !== OPS.transform || fnArray[i + 2] !== OPS.paintImageMaskXObject || fnArray[i + 3] !== OPS.restore) {\n\t       break;\n\t      }\n\t      i += 4;\n\t     }\n\t     var count = (i - iFirstSave) / 4;\n\t     count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n\t     if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n\t      return i;\n\t     }\n\t     var q;\n\t     var isSameImage = false;\n\t     var iTransform, transformArgs;\n\t     var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n\t     if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\n\t      isSameImage = true;\n\t      var firstTransformArg0 = argsArray[iFirstTransform][0];\n\t      var firstTransformArg3 = argsArray[iFirstTransform][3];\n\t      iTransform = iFirstTransform + 4;\n\t      var iPIMXO = iFirstPIMXO + 4;\n\t      for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n\t       transformArgs = argsArray[iTransform];\n\t       if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\n\t        if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n\t         isSameImage = false;\n\t        } else {\n\t         count = q;\n\t        }\n\t        break;\n\t       }\n\t      }\n\t     }\n\t     if (isSameImage) {\n\t      count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n\t      var positions = new Float32Array(count * 2);\n\t      iTransform = iFirstTransform;\n\t      for (q = 0; q < count; q++, iTransform += 4) {\n\t       transformArgs = argsArray[iTransform];\n\t       positions[q << 1] = transformArgs[4];\n\t       positions[(q << 1) + 1] = transformArgs[5];\n\t      }\n\t      fnArray.splice(iFirstSave, count * 4, OPS.paintImageMaskXObjectRepeat);\n\t      argsArray.splice(iFirstSave, count * 4, [\n\t       firstPIMXOArg0,\n\t       firstTransformArg0,\n\t       firstTransformArg3,\n\t       positions\n\t      ]);\n\t     } else {\n\t      count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n\t      var images = [];\n\t      for (q = 0; q < count; q++) {\n\t       transformArgs = argsArray[iFirstTransform + (q << 2)];\n\t       var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n\t       images.push({\n\t        data: maskParams.data,\n\t        width: maskParams.width,\n\t        height: maskParams.height,\n\t        transform: transformArgs\n\t       });\n\t      }\n\t      fnArray.splice(iFirstSave, count * 4, OPS.paintImageMaskXObjectGroup);\n\t      argsArray.splice(iFirstSave, count * 4, [images]);\n\t     }\n\t     return iFirstSave + 1;\n\t    });\n\t    addState(InitialState, [\n\t     OPS.save,\n\t     OPS.transform,\n\t     OPS.paintImageXObject,\n\t     OPS.restore\n\t    ], function (context) {\n\t     var MIN_IMAGES_IN_BLOCK = 3;\n\t     var MAX_IMAGES_IN_BLOCK = 1000;\n\t     var fnArray = context.fnArray, argsArray = context.argsArray;\n\t     var curr = context.iCurr;\n\t     var iFirstSave = curr - 3;\n\t     var iFirstTransform = curr - 2;\n\t     var iFirstPIXO = curr - 1;\n\t     var iFirstRestore = curr;\n\t     if (argsArray[iFirstTransform][1] !== 0 || argsArray[iFirstTransform][2] !== 0) {\n\t      return iFirstRestore + 1;\n\t     }\n\t     var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n\t     var firstTransformArg0 = argsArray[iFirstTransform][0];\n\t     var firstTransformArg3 = argsArray[iFirstTransform][3];\n\t     var i = iFirstSave + 4;\n\t     var ii = fnArray.length;\n\t     while (i + 3 < ii) {\n\t      if (fnArray[i] !== OPS.save || fnArray[i + 1] !== OPS.transform || fnArray[i + 2] !== OPS.paintImageXObject || fnArray[i + 3] !== OPS.restore) {\n\t       break;\n\t      }\n\t      if (argsArray[i + 1][0] !== firstTransformArg0 || argsArray[i + 1][1] !== 0 || argsArray[i + 1][2] !== 0 || argsArray[i + 1][3] !== firstTransformArg3) {\n\t       break;\n\t      }\n\t      if (argsArray[i + 2][0] !== firstPIXOArg0) {\n\t       break;\n\t      }\n\t      i += 4;\n\t     }\n\t     var count = Math.min((i - iFirstSave) / 4, MAX_IMAGES_IN_BLOCK);\n\t     if (count < MIN_IMAGES_IN_BLOCK) {\n\t      return i;\n\t     }\n\t     var positions = new Float32Array(count * 2);\n\t     var iTransform = iFirstTransform;\n\t     for (var q = 0; q < count; q++, iTransform += 4) {\n\t      var transformArgs = argsArray[iTransform];\n\t      positions[q << 1] = transformArgs[4];\n\t      positions[(q << 1) + 1] = transformArgs[5];\n\t     }\n\t     var args = [\n\t      firstPIXOArg0,\n\t      firstTransformArg0,\n\t      firstTransformArg3,\n\t      positions\n\t     ];\n\t     fnArray.splice(iFirstSave, count * 4, OPS.paintImageXObjectRepeat);\n\t     argsArray.splice(iFirstSave, count * 4, args);\n\t     return iFirstSave + 1;\n\t    });\n\t    addState(InitialState, [\n\t     OPS.beginText,\n\t     OPS.setFont,\n\t     OPS.setTextMatrix,\n\t     OPS.showText,\n\t     OPS.endText\n\t    ], function (context) {\n\t     var MIN_CHARS_IN_BLOCK = 3;\n\t     var MAX_CHARS_IN_BLOCK = 1000;\n\t     var fnArray = context.fnArray, argsArray = context.argsArray;\n\t     var curr = context.iCurr;\n\t     var iFirstBeginText = curr - 4;\n\t     var iFirstSetFont = curr - 3;\n\t     var iFirstSetTextMatrix = curr - 2;\n\t     var iFirstShowText = curr - 1;\n\t     var iFirstEndText = curr;\n\t     var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n\t     var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n\t     var i = iFirstBeginText + 5;\n\t     var ii = fnArray.length;\n\t     while (i + 4 < ii) {\n\t      if (fnArray[i] !== OPS.beginText || fnArray[i + 1] !== OPS.setFont || fnArray[i + 2] !== OPS.setTextMatrix || fnArray[i + 3] !== OPS.showText || fnArray[i + 4] !== OPS.endText) {\n\t       break;\n\t      }\n\t      if (argsArray[i + 1][0] !== firstSetFontArg0 || argsArray[i + 1][1] !== firstSetFontArg1) {\n\t       break;\n\t      }\n\t      i += 5;\n\t     }\n\t     var count = Math.min((i - iFirstBeginText) / 5, MAX_CHARS_IN_BLOCK);\n\t     if (count < MIN_CHARS_IN_BLOCK) {\n\t      return i;\n\t     }\n\t     var iFirst = iFirstBeginText;\n\t     if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n\t      count++;\n\t      iFirst -= 5;\n\t     }\n\t     var iEndText = iFirst + 4;\n\t     for (var q = 1; q < count; q++) {\n\t      fnArray.splice(iEndText, 3);\n\t      argsArray.splice(iEndText, 3);\n\t      iEndText += 2;\n\t     }\n\t     return iEndText + 1;\n\t    });\n\t    function QueueOptimizer() {\n\t    }\n\t    QueueOptimizer.prototype = {\n\t     optimize: function QueueOptimizer_optimize(queue) {\n\t      var fnArray = queue.fnArray, argsArray = queue.argsArray;\n\t      var context = {\n\t       iCurr: 0,\n\t       fnArray: fnArray,\n\t       argsArray: argsArray\n\t      };\n\t      var state;\n\t      var i = 0, ii = fnArray.length;\n\t      while (i < ii) {\n\t       state = (state || InitialState)[fnArray[i]];\n\t       if (typeof state === 'function') {\n\t        context.iCurr = i;\n\t        i = state(context);\n\t        state = undefined;\n\t        ii = context.fnArray.length;\n\t       } else {\n\t        i++;\n\t       }\n\t      }\n\t     }\n\t    };\n\t    return QueueOptimizer;\n\t   }();\n\t   exports.OperatorList = OperatorList;\n\t   exports.PartialEvaluator = PartialEvaluator;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCoreAnnotation = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreStream, root.pdfjsCoreColorSpace, root.pdfjsCoreObj, root.pdfjsCoreEvaluator);\n\t  }(this, function (exports, sharedUtil, corePrimitives, coreStream, coreColorSpace, coreObj, coreEvaluator) {\n\t   var AnnotationBorderStyleType = sharedUtil.AnnotationBorderStyleType;\n\t   var AnnotationFieldFlag = sharedUtil.AnnotationFieldFlag;\n\t   var AnnotationFlag = sharedUtil.AnnotationFlag;\n\t   var AnnotationType = sharedUtil.AnnotationType;\n\t   var OPS = sharedUtil.OPS;\n\t   var Util = sharedUtil.Util;\n\t   var isString = sharedUtil.isString;\n\t   var isArray = sharedUtil.isArray;\n\t   var isInt = sharedUtil.isInt;\n\t   var stringToBytes = sharedUtil.stringToBytes;\n\t   var stringToPDFString = sharedUtil.stringToPDFString;\n\t   var warn = sharedUtil.warn;\n\t   var Dict = corePrimitives.Dict;\n\t   var isDict = corePrimitives.isDict;\n\t   var isName = corePrimitives.isName;\n\t   var isRef = corePrimitives.isRef;\n\t   var Stream = coreStream.Stream;\n\t   var ColorSpace = coreColorSpace.ColorSpace;\n\t   var Catalog = coreObj.Catalog;\n\t   var ObjectLoader = coreObj.ObjectLoader;\n\t   var FileSpec = coreObj.FileSpec;\n\t   var OperatorList = coreEvaluator.OperatorList;\n\t   function AnnotationFactory() {\n\t   }\n\t   AnnotationFactory.prototype = {\n\t    create: function AnnotationFactory_create(xref, ref, pdfManager, idFactory) {\n\t     var dict = xref.fetchIfRef(ref);\n\t     if (!isDict(dict)) {\n\t      return;\n\t     }\n\t     var id = isRef(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\n\t     var subtype = dict.get('Subtype');\n\t     subtype = isName(subtype) ? subtype.name : null;\n\t     var parameters = {\n\t      xref: xref,\n\t      dict: dict,\n\t      ref: isRef(ref) ? ref : null,\n\t      subtype: subtype,\n\t      id: id,\n\t      pdfManager: pdfManager\n\t     };\n\t     switch (subtype) {\n\t     case 'Link':\n\t      return new LinkAnnotation(parameters);\n\t     case 'Text':\n\t      return new TextAnnotation(parameters);\n\t     case 'Widget':\n\t      var fieldType = Util.getInheritableProperty(dict, 'FT');\n\t      fieldType = isName(fieldType) ? fieldType.name : null;\n\t      switch (fieldType) {\n\t      case 'Tx':\n\t       return new TextWidgetAnnotation(parameters);\n\t      case 'Btn':\n\t       return new ButtonWidgetAnnotation(parameters);\n\t      case 'Ch':\n\t       return new ChoiceWidgetAnnotation(parameters);\n\t      }\n\t      warn('Unimplemented widget field type \"' + fieldType + '\", ' + 'falling back to base field type.');\n\t      return new WidgetAnnotation(parameters);\n\t     case 'Popup':\n\t      return new PopupAnnotation(parameters);\n\t     case 'Highlight':\n\t      return new HighlightAnnotation(parameters);\n\t     case 'Underline':\n\t      return new UnderlineAnnotation(parameters);\n\t     case 'Squiggly':\n\t      return new SquigglyAnnotation(parameters);\n\t     case 'StrikeOut':\n\t      return new StrikeOutAnnotation(parameters);\n\t     case 'FileAttachment':\n\t      return new FileAttachmentAnnotation(parameters);\n\t     default:\n\t      if (!subtype) {\n\t       warn('Annotation is missing the required /Subtype.');\n\t      } else {\n\t       warn('Unimplemented annotation type \"' + subtype + '\", ' + 'falling back to base annotation.');\n\t      }\n\t      return new Annotation(parameters);\n\t     }\n\t    }\n\t   };\n\t   var Annotation = function AnnotationClosure() {\n\t    function getTransformMatrix(rect, bbox, matrix) {\n\t     var bounds = Util.getAxialAlignedBoundingBox(bbox, matrix);\n\t     var minX = bounds[0];\n\t     var minY = bounds[1];\n\t     var maxX = bounds[2];\n\t     var maxY = bounds[3];\n\t     if (minX === maxX || minY === maxY) {\n\t      return [\n\t       1,\n\t       0,\n\t       0,\n\t       1,\n\t       rect[0],\n\t       rect[1]\n\t      ];\n\t     }\n\t     var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n\t     var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n\t     return [\n\t      xRatio,\n\t      0,\n\t      0,\n\t      yRatio,\n\t      rect[0] - minX * xRatio,\n\t      rect[1] - minY * yRatio\n\t     ];\n\t    }\n\t    function getDefaultAppearance(dict) {\n\t     var appearanceState = dict.get('AP');\n\t     if (!isDict(appearanceState)) {\n\t      return;\n\t     }\n\t     var appearance;\n\t     var appearances = appearanceState.get('N');\n\t     if (isDict(appearances)) {\n\t      var as = dict.get('AS');\n\t      if (as && appearances.has(as.name)) {\n\t       appearance = appearances.get(as.name);\n\t      }\n\t     } else {\n\t      appearance = appearances;\n\t     }\n\t     return appearance;\n\t    }\n\t    function Annotation(params) {\n\t     var dict = params.dict;\n\t     this.setFlags(dict.get('F'));\n\t     this.setRectangle(dict.getArray('Rect'));\n\t     this.setColor(dict.getArray('C'));\n\t     this.setBorderStyle(dict);\n\t     this.appearance = getDefaultAppearance(dict);\n\t     this.data = {};\n\t     this.data.id = params.id;\n\t     this.data.subtype = params.subtype;\n\t     this.data.annotationFlags = this.flags;\n\t     this.data.rect = this.rectangle;\n\t     this.data.color = this.color;\n\t     this.data.borderStyle = this.borderStyle;\n\t     this.data.hasAppearance = !!this.appearance;\n\t    }\n\t    Annotation.prototype = {\n\t     _hasFlag: function Annotation_hasFlag(flags, flag) {\n\t      return !!(flags & flag);\n\t     },\n\t     _isViewable: function Annotation_isViewable(flags) {\n\t      return !this._hasFlag(flags, AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, AnnotationFlag.HIDDEN) && !this._hasFlag(flags, AnnotationFlag.NOVIEW);\n\t     },\n\t     _isPrintable: function AnnotationFlag_isPrintable(flags) {\n\t      return this._hasFlag(flags, AnnotationFlag.PRINT) && !this._hasFlag(flags, AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, AnnotationFlag.HIDDEN);\n\t     },\n\t     get viewable() {\n\t      if (this.flags === 0) {\n\t       return true;\n\t      }\n\t      return this._isViewable(this.flags);\n\t     },\n\t     get printable() {\n\t      if (this.flags === 0) {\n\t       return false;\n\t      }\n\t      return this._isPrintable(this.flags);\n\t     },\n\t     setFlags: function Annotation_setFlags(flags) {\n\t      this.flags = isInt(flags) && flags > 0 ? flags : 0;\n\t     },\n\t     hasFlag: function Annotation_hasFlag(flag) {\n\t      return this._hasFlag(this.flags, flag);\n\t     },\n\t     setRectangle: function Annotation_setRectangle(rectangle) {\n\t      if (isArray(rectangle) && rectangle.length === 4) {\n\t       this.rectangle = Util.normalizeRect(rectangle);\n\t      } else {\n\t       this.rectangle = [\n\t        0,\n\t        0,\n\t        0,\n\t        0\n\t       ];\n\t      }\n\t     },\n\t     setColor: function Annotation_setColor(color) {\n\t      var rgbColor = new Uint8Array(3);\n\t      if (!isArray(color)) {\n\t       this.color = rgbColor;\n\t       return;\n\t      }\n\t      switch (color.length) {\n\t      case 0:\n\t       this.color = null;\n\t       break;\n\t      case 1:\n\t       ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n\t       this.color = rgbColor;\n\t       break;\n\t      case 3:\n\t       ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n\t       this.color = rgbColor;\n\t       break;\n\t      case 4:\n\t       ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n\t       this.color = rgbColor;\n\t       break;\n\t      default:\n\t       this.color = rgbColor;\n\t       break;\n\t      }\n\t     },\n\t     setBorderStyle: function Annotation_setBorderStyle(borderStyle) {\n\t      this.borderStyle = new AnnotationBorderStyle();\n\t      if (!isDict(borderStyle)) {\n\t       return;\n\t      }\n\t      if (borderStyle.has('BS')) {\n\t       var dict = borderStyle.get('BS');\n\t       var dictType = dict.get('Type');\n\t       if (!dictType || isName(dictType, 'Border')) {\n\t        this.borderStyle.setWidth(dict.get('W'));\n\t        this.borderStyle.setStyle(dict.get('S'));\n\t        this.borderStyle.setDashArray(dict.getArray('D'));\n\t       }\n\t      } else if (borderStyle.has('Border')) {\n\t       var array = borderStyle.getArray('Border');\n\t       if (isArray(array) && array.length >= 3) {\n\t        this.borderStyle.setHorizontalCornerRadius(array[0]);\n\t        this.borderStyle.setVerticalCornerRadius(array[1]);\n\t        this.borderStyle.setWidth(array[2]);\n\t        if (array.length === 4) {\n\t         this.borderStyle.setDashArray(array[3]);\n\t        }\n\t       }\n\t      } else {\n\t       this.borderStyle.setWidth(0);\n\t      }\n\t     },\n\t     _preparePopup: function Annotation_preparePopup(dict) {\n\t      if (!dict.has('C')) {\n\t       this.data.color = null;\n\t      }\n\t      this.data.hasPopup = dict.has('Popup');\n\t      this.data.title = stringToPDFString(dict.get('T') || '');\n\t      this.data.contents = stringToPDFString(dict.get('Contents') || '');\n\t     },\n\t     loadResources: function Annotation_loadResources(keys) {\n\t      return new Promise(function (resolve, reject) {\n\t       this.appearance.dict.getAsync('Resources').then(function (resources) {\n\t        if (!resources) {\n\t         resolve();\n\t         return;\n\t        }\n\t        var objectLoader = new ObjectLoader(resources.map, keys, resources.xref);\n\t        objectLoader.load().then(function () {\n\t         resolve(resources);\n\t        }, reject);\n\t       }, reject);\n\t      }.bind(this));\n\t     },\n\t     getOperatorList: function Annotation_getOperatorList(evaluator, task, renderForms) {\n\t      if (!this.appearance) {\n\t       return Promise.resolve(new OperatorList());\n\t      }\n\t      var data = this.data;\n\t      var appearanceDict = this.appearance.dict;\n\t      var resourcesPromise = this.loadResources([\n\t       'ExtGState',\n\t       'ColorSpace',\n\t       'Pattern',\n\t       'Shading',\n\t       'XObject',\n\t       'Font'\n\t      ]);\n\t      var bbox = appearanceDict.getArray('BBox') || [\n\t       0,\n\t       0,\n\t       1,\n\t       1\n\t      ];\n\t      var matrix = appearanceDict.getArray('Matrix') || [\n\t       1,\n\t       0,\n\t       0,\n\t       1,\n\t       0,\n\t       0\n\t      ];\n\t      var transform = getTransformMatrix(data.rect, bbox, matrix);\n\t      var self = this;\n\t      return resourcesPromise.then(function (resources) {\n\t       var opList = new OperatorList();\n\t       opList.addOp(OPS.beginAnnotation, [\n\t        data.rect,\n\t        transform,\n\t        matrix\n\t       ]);\n\t       return evaluator.getOperatorList(self.appearance, task, resources, opList).then(function () {\n\t        opList.addOp(OPS.endAnnotation, []);\n\t        self.appearance.reset();\n\t        return opList;\n\t       });\n\t      });\n\t     }\n\t    };\n\t    Annotation.appendToOperatorList = function Annotation_appendToOperatorList(annotations, opList, partialEvaluator, task, intent, renderForms) {\n\t     var annotationPromises = [];\n\t     for (var i = 0, n = annotations.length; i < n; ++i) {\n\t      if (intent === 'display' && annotations[i].viewable || intent === 'print' && annotations[i].printable) {\n\t       annotationPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderForms));\n\t      }\n\t     }\n\t     return Promise.all(annotationPromises).then(function (operatorLists) {\n\t      opList.addOp(OPS.beginAnnotations, []);\n\t      for (var i = 0, n = operatorLists.length; i < n; ++i) {\n\t       opList.addOpList(operatorLists[i]);\n\t      }\n\t      opList.addOp(OPS.endAnnotations, []);\n\t     });\n\t    };\n\t    return Annotation;\n\t   }();\n\t   var AnnotationBorderStyle = function AnnotationBorderStyleClosure() {\n\t    function AnnotationBorderStyle() {\n\t     this.width = 1;\n\t     this.style = AnnotationBorderStyleType.SOLID;\n\t     this.dashArray = [3];\n\t     this.horizontalCornerRadius = 0;\n\t     this.verticalCornerRadius = 0;\n\t    }\n\t    AnnotationBorderStyle.prototype = {\n\t     setWidth: function AnnotationBorderStyle_setWidth(width) {\n\t      if (width === (width | 0)) {\n\t       this.width = width;\n\t      }\n\t     },\n\t     setStyle: function AnnotationBorderStyle_setStyle(style) {\n\t      if (!style) {\n\t       return;\n\t      }\n\t      switch (style.name) {\n\t      case 'S':\n\t       this.style = AnnotationBorderStyleType.SOLID;\n\t       break;\n\t      case 'D':\n\t       this.style = AnnotationBorderStyleType.DASHED;\n\t       break;\n\t      case 'B':\n\t       this.style = AnnotationBorderStyleType.BEVELED;\n\t       break;\n\t      case 'I':\n\t       this.style = AnnotationBorderStyleType.INSET;\n\t       break;\n\t      case 'U':\n\t       this.style = AnnotationBorderStyleType.UNDERLINE;\n\t       break;\n\t      default:\n\t       break;\n\t      }\n\t     },\n\t     setDashArray: function AnnotationBorderStyle_setDashArray(dashArray) {\n\t      if (isArray(dashArray) && dashArray.length > 0) {\n\t       var isValid = true;\n\t       var allZeros = true;\n\t       for (var i = 0, len = dashArray.length; i < len; i++) {\n\t        var element = dashArray[i];\n\t        var validNumber = +element >= 0;\n\t        if (!validNumber) {\n\t         isValid = false;\n\t         break;\n\t        } else if (element > 0) {\n\t         allZeros = false;\n\t        }\n\t       }\n\t       if (isValid && !allZeros) {\n\t        this.dashArray = dashArray;\n\t       } else {\n\t        this.width = 0;\n\t       }\n\t      } else if (dashArray) {\n\t       this.width = 0;\n\t      }\n\t     },\n\t     setHorizontalCornerRadius: function AnnotationBorderStyle_setHorizontalCornerRadius(radius) {\n\t      if (radius === (radius | 0)) {\n\t       this.horizontalCornerRadius = radius;\n\t      }\n\t     },\n\t     setVerticalCornerRadius: function AnnotationBorderStyle_setVerticalCornerRadius(radius) {\n\t      if (radius === (radius | 0)) {\n\t       this.verticalCornerRadius = radius;\n\t      }\n\t     }\n\t    };\n\t    return AnnotationBorderStyle;\n\t   }();\n\t   var WidgetAnnotation = function WidgetAnnotationClosure() {\n\t    function WidgetAnnotation(params) {\n\t     Annotation.call(this, params);\n\t     var dict = params.dict;\n\t     var data = this.data;\n\t     data.annotationType = AnnotationType.WIDGET;\n\t     data.fieldName = this._constructFieldName(dict);\n\t     data.fieldValue = Util.getInheritableProperty(dict, 'V', true);\n\t     data.alternativeText = stringToPDFString(dict.get('TU') || '');\n\t     data.defaultAppearance = Util.getInheritableProperty(dict, 'DA') || '';\n\t     var fieldType = Util.getInheritableProperty(dict, 'FT');\n\t     data.fieldType = isName(fieldType) ? fieldType.name : null;\n\t     this.fieldResources = Util.getInheritableProperty(dict, 'DR') || Dict.empty;\n\t     data.fieldFlags = Util.getInheritableProperty(dict, 'Ff');\n\t     if (!isInt(data.fieldFlags) || data.fieldFlags < 0) {\n\t      data.fieldFlags = 0;\n\t     }\n\t     data.readOnly = this.hasFieldFlag(AnnotationFieldFlag.READONLY);\n\t     if (data.fieldType === 'Sig') {\n\t      this.setFlags(AnnotationFlag.HIDDEN);\n\t     }\n\t    }\n\t    Util.inherit(WidgetAnnotation, Annotation, {\n\t     _constructFieldName: function WidgetAnnotation_constructFieldName(dict) {\n\t      if (!dict.has('T') && !dict.has('Parent')) {\n\t       warn('Unknown field name, falling back to empty field name.');\n\t       return '';\n\t      }\n\t      if (!dict.has('Parent')) {\n\t       return stringToPDFString(dict.get('T'));\n\t      }\n\t      var fieldName = [];\n\t      if (dict.has('T')) {\n\t       fieldName.unshift(stringToPDFString(dict.get('T')));\n\t      }\n\t      var loopDict = dict;\n\t      while (loopDict.has('Parent')) {\n\t       loopDict = loopDict.get('Parent');\n\t       if (loopDict.has('T')) {\n\t        fieldName.unshift(stringToPDFString(loopDict.get('T')));\n\t       }\n\t      }\n\t      return fieldName.join('.');\n\t     },\n\t     hasFieldFlag: function WidgetAnnotation_hasFieldFlag(flag) {\n\t      return !!(this.data.fieldFlags & flag);\n\t     }\n\t    });\n\t    return WidgetAnnotation;\n\t   }();\n\t   var TextWidgetAnnotation = function TextWidgetAnnotationClosure() {\n\t    function TextWidgetAnnotation(params) {\n\t     WidgetAnnotation.call(this, params);\n\t     this.data.fieldValue = stringToPDFString(this.data.fieldValue || '');\n\t     var alignment = Util.getInheritableProperty(params.dict, 'Q');\n\t     if (!isInt(alignment) || alignment < 0 || alignment > 2) {\n\t      alignment = null;\n\t     }\n\t     this.data.textAlignment = alignment;\n\t     var maximumLength = Util.getInheritableProperty(params.dict, 'MaxLen');\n\t     if (!isInt(maximumLength) || maximumLength < 0) {\n\t      maximumLength = null;\n\t     }\n\t     this.data.maxLen = maximumLength;\n\t     this.data.multiLine = this.hasFieldFlag(AnnotationFieldFlag.MULTILINE);\n\t     this.data.comb = this.hasFieldFlag(AnnotationFieldFlag.COMB) && !this.hasFieldFlag(AnnotationFieldFlag.MULTILINE) && !this.hasFieldFlag(AnnotationFieldFlag.PASSWORD) && !this.hasFieldFlag(AnnotationFieldFlag.FILESELECT) && this.data.maxLen !== null;\n\t    }\n\t    Util.inherit(TextWidgetAnnotation, WidgetAnnotation, {\n\t     getOperatorList: function TextWidgetAnnotation_getOperatorList(evaluator, task, renderForms) {\n\t      var operatorList = new OperatorList();\n\t      if (renderForms) {\n\t       return Promise.resolve(operatorList);\n\t      }\n\t      if (this.appearance) {\n\t       return Annotation.prototype.getOperatorList.call(this, evaluator, task, renderForms);\n\t      }\n\t      if (!this.data.defaultAppearance) {\n\t       return Promise.resolve(operatorList);\n\t      }\n\t      var stream = new Stream(stringToBytes(this.data.defaultAppearance));\n\t      return evaluator.getOperatorList(stream, task, this.fieldResources, operatorList).then(function () {\n\t       return operatorList;\n\t      });\n\t     }\n\t    });\n\t    return TextWidgetAnnotation;\n\t   }();\n\t   var ButtonWidgetAnnotation = function ButtonWidgetAnnotationClosure() {\n\t    function ButtonWidgetAnnotation(params) {\n\t     WidgetAnnotation.call(this, params);\n\t     this.data.checkBox = !this.hasFieldFlag(AnnotationFieldFlag.RADIO) && !this.hasFieldFlag(AnnotationFieldFlag.PUSHBUTTON);\n\t     if (this.data.checkBox) {\n\t      if (!isName(this.data.fieldValue)) {\n\t       return;\n\t      }\n\t      this.data.fieldValue = this.data.fieldValue.name;\n\t     }\n\t     this.data.radioButton = this.hasFieldFlag(AnnotationFieldFlag.RADIO) && !this.hasFieldFlag(AnnotationFieldFlag.PUSHBUTTON);\n\t     if (this.data.radioButton) {\n\t      this.data.fieldValue = this.data.buttonValue = null;\n\t      var fieldParent = params.dict.get('Parent');\n\t      if (!isDict(fieldParent) || !fieldParent.has('V')) {\n\t       return;\n\t      }\n\t      var fieldParentValue = fieldParent.get('V');\n\t      if (!isName(fieldParentValue)) {\n\t       return;\n\t      }\n\t      this.data.fieldValue = fieldParentValue.name;\n\t      var appearanceStates = params.dict.get('AP');\n\t      if (!isDict(appearanceStates)) {\n\t       return;\n\t      }\n\t      var normalAppearanceState = appearanceStates.get('N');\n\t      if (!isDict(normalAppearanceState)) {\n\t       return;\n\t      }\n\t      var keys = normalAppearanceState.getKeys();\n\t      for (var i = 0, ii = keys.length; i < ii; i++) {\n\t       if (keys[i] !== 'Off') {\n\t        this.data.buttonValue = keys[i];\n\t        break;\n\t       }\n\t      }\n\t     }\n\t    }\n\t    Util.inherit(ButtonWidgetAnnotation, WidgetAnnotation, {\n\t     getOperatorList: function ButtonWidgetAnnotation_getOperatorList(evaluator, task, renderForms) {\n\t      var operatorList = new OperatorList();\n\t      if (renderForms) {\n\t       return Promise.resolve(operatorList);\n\t      }\n\t      if (this.appearance) {\n\t       return Annotation.prototype.getOperatorList.call(this, evaluator, task, renderForms);\n\t      }\n\t      return Promise.resolve(operatorList);\n\t     }\n\t    });\n\t    return ButtonWidgetAnnotation;\n\t   }();\n\t   var ChoiceWidgetAnnotation = function ChoiceWidgetAnnotationClosure() {\n\t    function ChoiceWidgetAnnotation(params) {\n\t     WidgetAnnotation.call(this, params);\n\t     this.data.options = [];\n\t     var options = params.dict.get('Opt');\n\t     if (isArray(options)) {\n\t      var xref = params.xref;\n\t      for (var i = 0, ii = options.length; i < ii; i++) {\n\t       var option = xref.fetchIfRef(options[i]);\n\t       var isOptionArray = isArray(option);\n\t       this.data.options[i] = {\n\t        exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\n\t        displayValue: isOptionArray ? xref.fetchIfRef(option[1]) : option\n\t       };\n\t      }\n\t     }\n\t     if (!isArray(this.data.fieldValue)) {\n\t      this.data.fieldValue = [this.data.fieldValue];\n\t     }\n\t     this.data.combo = this.hasFieldFlag(AnnotationFieldFlag.COMBO);\n\t     this.data.multiSelect = this.hasFieldFlag(AnnotationFieldFlag.MULTISELECT);\n\t    }\n\t    Util.inherit(ChoiceWidgetAnnotation, WidgetAnnotation, {\n\t     getOperatorList: function ChoiceWidgetAnnotation_getOperatorList(evaluator, task, renderForms) {\n\t      var operatorList = new OperatorList();\n\t      if (renderForms) {\n\t       return Promise.resolve(operatorList);\n\t      }\n\t      return Annotation.prototype.getOperatorList.call(this, evaluator, task, renderForms);\n\t     }\n\t    });\n\t    return ChoiceWidgetAnnotation;\n\t   }();\n\t   var TextAnnotation = function TextAnnotationClosure() {\n\t    var DEFAULT_ICON_SIZE = 22;\n\t    function TextAnnotation(parameters) {\n\t     Annotation.call(this, parameters);\n\t     this.data.annotationType = AnnotationType.TEXT;\n\t     if (this.data.hasAppearance) {\n\t      this.data.name = 'NoIcon';\n\t     } else {\n\t      this.data.rect[1] = this.data.rect[3] - DEFAULT_ICON_SIZE;\n\t      this.data.rect[2] = this.data.rect[0] + DEFAULT_ICON_SIZE;\n\t      this.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\n\t     }\n\t     this._preparePopup(parameters.dict);\n\t    }\n\t    Util.inherit(TextAnnotation, Annotation, {});\n\t    return TextAnnotation;\n\t   }();\n\t   var LinkAnnotation = function LinkAnnotationClosure() {\n\t    function LinkAnnotation(params) {\n\t     Annotation.call(this, params);\n\t     var data = this.data;\n\t     data.annotationType = AnnotationType.LINK;\n\t     Catalog.parseDestDictionary({\n\t      destDict: params.dict,\n\t      resultObj: data,\n\t      docBaseUrl: params.pdfManager.docBaseUrl\n\t     });\n\t    }\n\t    Util.inherit(LinkAnnotation, Annotation, {});\n\t    return LinkAnnotation;\n\t   }();\n\t   var PopupAnnotation = function PopupAnnotationClosure() {\n\t    function PopupAnnotation(parameters) {\n\t     Annotation.call(this, parameters);\n\t     this.data.annotationType = AnnotationType.POPUP;\n\t     var dict = parameters.dict;\n\t     var parentItem = dict.get('Parent');\n\t     if (!parentItem) {\n\t      warn('Popup annotation has a missing or invalid parent annotation.');\n\t      return;\n\t     }\n\t     this.data.parentId = dict.getRaw('Parent').toString();\n\t     this.data.title = stringToPDFString(parentItem.get('T') || '');\n\t     this.data.contents = stringToPDFString(parentItem.get('Contents') || '');\n\t     if (!parentItem.has('C')) {\n\t      this.data.color = null;\n\t     } else {\n\t      this.setColor(parentItem.getArray('C'));\n\t      this.data.color = this.color;\n\t     }\n\t     if (!this.viewable) {\n\t      var parentFlags = parentItem.get('F');\n\t      if (this._isViewable(parentFlags)) {\n\t       this.setFlags(parentFlags);\n\t      }\n\t     }\n\t    }\n\t    Util.inherit(PopupAnnotation, Annotation, {});\n\t    return PopupAnnotation;\n\t   }();\n\t   var HighlightAnnotation = function HighlightAnnotationClosure() {\n\t    function HighlightAnnotation(parameters) {\n\t     Annotation.call(this, parameters);\n\t     this.data.annotationType = AnnotationType.HIGHLIGHT;\n\t     this._preparePopup(parameters.dict);\n\t     this.data.borderStyle.setWidth(0);\n\t    }\n\t    Util.inherit(HighlightAnnotation, Annotation, {});\n\t    return HighlightAnnotation;\n\t   }();\n\t   var UnderlineAnnotation = function UnderlineAnnotationClosure() {\n\t    function UnderlineAnnotation(parameters) {\n\t     Annotation.call(this, parameters);\n\t     this.data.annotationType = AnnotationType.UNDERLINE;\n\t     this._preparePopup(parameters.dict);\n\t     this.data.borderStyle.setWidth(0);\n\t    }\n\t    Util.inherit(UnderlineAnnotation, Annotation, {});\n\t    return UnderlineAnnotation;\n\t   }();\n\t   var SquigglyAnnotation = function SquigglyAnnotationClosure() {\n\t    function SquigglyAnnotation(parameters) {\n\t     Annotation.call(this, parameters);\n\t     this.data.annotationType = AnnotationType.SQUIGGLY;\n\t     this._preparePopup(parameters.dict);\n\t     this.data.borderStyle.setWidth(0);\n\t    }\n\t    Util.inherit(SquigglyAnnotation, Annotation, {});\n\t    return SquigglyAnnotation;\n\t   }();\n\t   var StrikeOutAnnotation = function StrikeOutAnnotationClosure() {\n\t    function StrikeOutAnnotation(parameters) {\n\t     Annotation.call(this, parameters);\n\t     this.data.annotationType = AnnotationType.STRIKEOUT;\n\t     this._preparePopup(parameters.dict);\n\t     this.data.borderStyle.setWidth(0);\n\t    }\n\t    Util.inherit(StrikeOutAnnotation, Annotation, {});\n\t    return StrikeOutAnnotation;\n\t   }();\n\t   var FileAttachmentAnnotation = function FileAttachmentAnnotationClosure() {\n\t    function FileAttachmentAnnotation(parameters) {\n\t     Annotation.call(this, parameters);\n\t     var file = new FileSpec(parameters.dict.get('FS'), parameters.xref);\n\t     this.data.annotationType = AnnotationType.FILEATTACHMENT;\n\t     this.data.file = file.serializable;\n\t     this._preparePopup(parameters.dict);\n\t    }\n\t    Util.inherit(FileAttachmentAnnotation, Annotation, {});\n\t    return FileAttachmentAnnotation;\n\t   }();\n\t   exports.Annotation = Annotation;\n\t   exports.AnnotationBorderStyle = AnnotationBorderStyle;\n\t   exports.AnnotationFactory = AnnotationFactory;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCoreDocument = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreStream, root.pdfjsCoreObj, root.pdfjsCoreParser, root.pdfjsCoreCrypto, root.pdfjsCoreEvaluator, root.pdfjsCoreAnnotation);\n\t  }(this, function (exports, sharedUtil, corePrimitives, coreStream, coreObj, coreParser, coreCrypto, coreEvaluator, coreAnnotation) {\n\t   var MissingDataException = sharedUtil.MissingDataException;\n\t   var Util = sharedUtil.Util;\n\t   var assert = sharedUtil.assert;\n\t   var error = sharedUtil.error;\n\t   var info = sharedUtil.info;\n\t   var isArray = sharedUtil.isArray;\n\t   var isArrayBuffer = sharedUtil.isArrayBuffer;\n\t   var isNum = sharedUtil.isNum;\n\t   var isString = sharedUtil.isString;\n\t   var shadow = sharedUtil.shadow;\n\t   var stringToBytes = sharedUtil.stringToBytes;\n\t   var stringToPDFString = sharedUtil.stringToPDFString;\n\t   var warn = sharedUtil.warn;\n\t   var isSpace = sharedUtil.isSpace;\n\t   var Dict = corePrimitives.Dict;\n\t   var isDict = corePrimitives.isDict;\n\t   var isName = corePrimitives.isName;\n\t   var isStream = corePrimitives.isStream;\n\t   var NullStream = coreStream.NullStream;\n\t   var Stream = coreStream.Stream;\n\t   var StreamsSequenceStream = coreStream.StreamsSequenceStream;\n\t   var Catalog = coreObj.Catalog;\n\t   var ObjectLoader = coreObj.ObjectLoader;\n\t   var XRef = coreObj.XRef;\n\t   var Linearization = coreParser.Linearization;\n\t   var calculateMD5 = coreCrypto.calculateMD5;\n\t   var OperatorList = coreEvaluator.OperatorList;\n\t   var PartialEvaluator = coreEvaluator.PartialEvaluator;\n\t   var Annotation = coreAnnotation.Annotation;\n\t   var AnnotationFactory = coreAnnotation.AnnotationFactory;\n\t   var Page = function PageClosure() {\n\t    var DEFAULT_USER_UNIT = 1.0;\n\t    var LETTER_SIZE_MEDIABOX = [\n\t     0,\n\t     0,\n\t     612,\n\t     792\n\t    ];\n\t    function Page(pdfManager, xref, pageIndex, pageDict, ref, fontCache) {\n\t     this.pdfManager = pdfManager;\n\t     this.pageIndex = pageIndex;\n\t     this.pageDict = pageDict;\n\t     this.xref = xref;\n\t     this.ref = ref;\n\t     this.fontCache = fontCache;\n\t     this.evaluatorOptions = pdfManager.evaluatorOptions;\n\t     this.resourcesPromise = null;\n\t     var uniquePrefix = 'p' + this.pageIndex + '_';\n\t     var idCounters = { obj: 0 };\n\t     this.idFactory = {\n\t      createObjId: function () {\n\t       return uniquePrefix + ++idCounters.obj;\n\t      }\n\t     };\n\t    }\n\t    Page.prototype = {\n\t     getPageProp: function Page_getPageProp(key) {\n\t      return this.pageDict.get(key);\n\t     },\n\t     getInheritedPageProp: function Page_getInheritedPageProp(key, getArray) {\n\t      var dict = this.pageDict, valueArray = null, loopCount = 0;\n\t      var MAX_LOOP_COUNT = 100;\n\t      getArray = getArray || false;\n\t      while (dict) {\n\t       var value = getArray ? dict.getArray(key) : dict.get(key);\n\t       if (value) {\n\t        if (!valueArray) {\n\t         valueArray = [];\n\t        }\n\t        valueArray.push(value);\n\t       }\n\t       if (++loopCount > MAX_LOOP_COUNT) {\n\t        warn('Page_getInheritedPageProp: maximum loop count exceeded.');\n\t        break;\n\t       }\n\t       dict = dict.get('Parent');\n\t      }\n\t      if (!valueArray) {\n\t       return Dict.empty;\n\t      }\n\t      if (valueArray.length === 1 || !isDict(valueArray[0]) || loopCount > MAX_LOOP_COUNT) {\n\t       return valueArray[0];\n\t      }\n\t      return Dict.merge(this.xref, valueArray);\n\t     },\n\t     get content() {\n\t      return this.getPageProp('Contents');\n\t     },\n\t     get resources() {\n\t      return shadow(this, 'resources', this.getInheritedPageProp('Resources'));\n\t     },\n\t     get mediaBox() {\n\t      var mediaBox = this.getInheritedPageProp('MediaBox', true);\n\t      if (!isArray(mediaBox) || mediaBox.length !== 4) {\n\t       return shadow(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\n\t      }\n\t      return shadow(this, 'mediaBox', mediaBox);\n\t     },\n\t     get cropBox() {\n\t      var cropBox = this.getInheritedPageProp('CropBox', true);\n\t      if (!isArray(cropBox) || cropBox.length !== 4) {\n\t       return shadow(this, 'cropBox', this.mediaBox);\n\t      }\n\t      return shadow(this, 'cropBox', cropBox);\n\t     },\n\t     get userUnit() {\n\t      var obj = this.getPageProp('UserUnit');\n\t      if (!isNum(obj) || obj <= 0) {\n\t       obj = DEFAULT_USER_UNIT;\n\t      }\n\t      return shadow(this, 'userUnit', obj);\n\t     },\n\t     get view() {\n\t      var mediaBox = this.mediaBox, cropBox = this.cropBox;\n\t      if (mediaBox === cropBox) {\n\t       return shadow(this, 'view', mediaBox);\n\t      }\n\t      var intersection = Util.intersect(cropBox, mediaBox);\n\t      return shadow(this, 'view', intersection || mediaBox);\n\t     },\n\t     get rotate() {\n\t      var rotate = this.getInheritedPageProp('Rotate') || 0;\n\t      if (rotate % 90 !== 0) {\n\t       rotate = 0;\n\t      } else if (rotate >= 360) {\n\t       rotate = rotate % 360;\n\t      } else if (rotate < 0) {\n\t       rotate = (rotate % 360 + 360) % 360;\n\t      }\n\t      return shadow(this, 'rotate', rotate);\n\t     },\n\t     getContentStream: function Page_getContentStream() {\n\t      var content = this.content;\n\t      var stream;\n\t      if (isArray(content)) {\n\t       var xref = this.xref;\n\t       var i, n = content.length;\n\t       var streams = [];\n\t       for (i = 0; i < n; ++i) {\n\t        streams.push(xref.fetchIfRef(content[i]));\n\t       }\n\t       stream = new StreamsSequenceStream(streams);\n\t      } else if (isStream(content)) {\n\t       stream = content;\n\t      } else {\n\t       stream = new NullStream();\n\t      }\n\t      return stream;\n\t     },\n\t     loadResources: function Page_loadResources(keys) {\n\t      if (!this.resourcesPromise) {\n\t       this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n\t      }\n\t      return this.resourcesPromise.then(function resourceSuccess() {\n\t       var objectLoader = new ObjectLoader(this.resources.map, keys, this.xref);\n\t       return objectLoader.load();\n\t      }.bind(this));\n\t     },\n\t     getOperatorList: function Page_getOperatorList(handler, task, intent, renderInteractiveForms) {\n\t      var self = this;\n\t      var pdfManager = this.pdfManager;\n\t      var contentStreamPromise = pdfManager.ensure(this, 'getContentStream', []);\n\t      var resourcesPromise = this.loadResources([\n\t       'ExtGState',\n\t       'ColorSpace',\n\t       'Pattern',\n\t       'Shading',\n\t       'XObject',\n\t       'Font'\n\t      ]);\n\t      var partialEvaluator = new PartialEvaluator(pdfManager, this.xref, handler, this.pageIndex, this.idFactory, this.fontCache, this.evaluatorOptions);\n\t      var dataPromises = Promise.all([\n\t       contentStreamPromise,\n\t       resourcesPromise\n\t      ]);\n\t      var pageListPromise = dataPromises.then(function (data) {\n\t       var contentStream = data[0];\n\t       var opList = new OperatorList(intent, handler, self.pageIndex);\n\t       handler.send('StartRenderPage', {\n\t        transparency: partialEvaluator.hasBlendModes(self.resources),\n\t        pageIndex: self.pageIndex,\n\t        intent: intent\n\t       });\n\t       return partialEvaluator.getOperatorList(contentStream, task, self.resources, opList).then(function () {\n\t        return opList;\n\t       });\n\t      });\n\t      var annotationsPromise = pdfManager.ensure(this, 'annotations');\n\t      return Promise.all([\n\t       pageListPromise,\n\t       annotationsPromise\n\t      ]).then(function (datas) {\n\t       var pageOpList = datas[0];\n\t       var annotations = datas[1];\n\t       if (annotations.length === 0) {\n\t        pageOpList.flush(true);\n\t        return pageOpList;\n\t       }\n\t       var annotationsReadyPromise = Annotation.appendToOperatorList(annotations, pageOpList, partialEvaluator, task, intent, renderInteractiveForms);\n\t       return annotationsReadyPromise.then(function () {\n\t        pageOpList.flush(true);\n\t        return pageOpList;\n\t       });\n\t      });\n\t     },\n\t     extractTextContent: function Page_extractTextContent(task, normalizeWhitespace, combineTextItems) {\n\t      var handler = {\n\t       on: function nullHandlerOn() {\n\t       },\n\t       send: function nullHandlerSend() {\n\t       }\n\t      };\n\t      var self = this;\n\t      var pdfManager = this.pdfManager;\n\t      var contentStreamPromise = pdfManager.ensure(this, 'getContentStream', []);\n\t      var resourcesPromise = this.loadResources([\n\t       'ExtGState',\n\t       'XObject',\n\t       'Font'\n\t      ]);\n\t      var dataPromises = Promise.all([\n\t       contentStreamPromise,\n\t       resourcesPromise\n\t      ]);\n\t      return dataPromises.then(function (data) {\n\t       var contentStream = data[0];\n\t       var partialEvaluator = new PartialEvaluator(pdfManager, self.xref, handler, self.pageIndex, self.idFactory, self.fontCache, self.evaluatorOptions);\n\t       return partialEvaluator.getTextContent(contentStream, task, self.resources, null, normalizeWhitespace, combineTextItems);\n\t      });\n\t     },\n\t     getAnnotationsData: function Page_getAnnotationsData(intent) {\n\t      var annotations = this.annotations;\n\t      var annotationsData = [];\n\t      for (var i = 0, n = annotations.length; i < n; ++i) {\n\t       if (intent) {\n\t        if (!(intent === 'display' && annotations[i].viewable) && !(intent === 'print' && annotations[i].printable)) {\n\t         continue;\n\t        }\n\t       }\n\t       annotationsData.push(annotations[i].data);\n\t      }\n\t      return annotationsData;\n\t     },\n\t     get annotations() {\n\t      var annotations = [];\n\t      var annotationRefs = this.getInheritedPageProp('Annots') || [];\n\t      var annotationFactory = new AnnotationFactory();\n\t      for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n\t       var annotationRef = annotationRefs[i];\n\t       var annotation = annotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\n\t       if (annotation) {\n\t        annotations.push(annotation);\n\t       }\n\t      }\n\t      return shadow(this, 'annotations', annotations);\n\t     }\n\t    };\n\t    return Page;\n\t   }();\n\t   var PDFDocument = function PDFDocumentClosure() {\n\t    var FINGERPRINT_FIRST_BYTES = 1024;\n\t    var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n\t    function PDFDocument(pdfManager, arg) {\n\t     var stream;\n\t     if (isStream(arg)) {\n\t      stream = arg;\n\t     } else if (isArrayBuffer(arg)) {\n\t      stream = new Stream(arg);\n\t     } else {\n\t      error('PDFDocument: Unknown argument type');\n\t     }\n\t     assert(stream.length > 0, 'stream must have data');\n\t     this.pdfManager = pdfManager;\n\t     this.stream = stream;\n\t     this.xref = new XRef(stream, pdfManager);\n\t    }\n\t    function find(stream, needle, limit, backwards) {\n\t     var pos = stream.pos;\n\t     var end = stream.end;\n\t     var strBuf = [];\n\t     if (pos + limit > end) {\n\t      limit = end - pos;\n\t     }\n\t     for (var n = 0; n < limit; ++n) {\n\t      strBuf.push(String.fromCharCode(stream.getByte()));\n\t     }\n\t     var str = strBuf.join('');\n\t     stream.pos = pos;\n\t     var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n\t     if (index === -1) {\n\t      return false;\n\t     }\n\t     stream.pos += index;\n\t     return true;\n\t    }\n\t    var DocumentInfoValidators = {\n\t     get entries() {\n\t      return shadow(this, 'entries', {\n\t       Title: isString,\n\t       Author: isString,\n\t       Subject: isString,\n\t       Keywords: isString,\n\t       Creator: isString,\n\t       Producer: isString,\n\t       CreationDate: isString,\n\t       ModDate: isString,\n\t       Trapped: isName\n\t      });\n\t     }\n\t    };\n\t    PDFDocument.prototype = {\n\t     parse: function PDFDocument_parse(recoveryMode) {\n\t      this.setup(recoveryMode);\n\t      var version = this.catalog.catDict.get('Version');\n\t      if (isName(version)) {\n\t       this.pdfFormatVersion = version.name;\n\t      }\n\t      try {\n\t       this.acroForm = this.catalog.catDict.get('AcroForm');\n\t       if (this.acroForm) {\n\t        this.xfa = this.acroForm.get('XFA');\n\t        var fields = this.acroForm.get('Fields');\n\t        if ((!fields || !isArray(fields) || fields.length === 0) && !this.xfa) {\n\t         this.acroForm = null;\n\t        }\n\t       }\n\t      } catch (ex) {\n\t       info('Something wrong with AcroForm entry');\n\t       this.acroForm = null;\n\t      }\n\t     },\n\t     get linearization() {\n\t      var linearization = null;\n\t      if (this.stream.length) {\n\t       try {\n\t        linearization = Linearization.create(this.stream);\n\t       } catch (err) {\n\t        if (err instanceof MissingDataException) {\n\t         throw err;\n\t        }\n\t        info(err);\n\t       }\n\t      }\n\t      return shadow(this, 'linearization', linearization);\n\t     },\n\t     get startXRef() {\n\t      var stream = this.stream;\n\t      var startXRef = 0;\n\t      var linearization = this.linearization;\n\t      if (linearization) {\n\t       stream.reset();\n\t       if (find(stream, 'endobj', 1024)) {\n\t        startXRef = stream.pos + 6;\n\t       }\n\t      } else {\n\t       var step = 1024;\n\t       var found = false, pos = stream.end;\n\t       while (!found && pos > 0) {\n\t        pos -= step - 'startxref'.length;\n\t        if (pos < 0) {\n\t         pos = 0;\n\t        }\n\t        stream.pos = pos;\n\t        found = find(stream, 'startxref', step, true);\n\t       }\n\t       if (found) {\n\t        stream.skip(9);\n\t        var ch;\n\t        do {\n\t         ch = stream.getByte();\n\t        } while (isSpace(ch));\n\t        var str = '';\n\t        while (ch >= 0x20 && ch <= 0x39) {\n\t         str += String.fromCharCode(ch);\n\t         ch = stream.getByte();\n\t        }\n\t        startXRef = parseInt(str, 10);\n\t        if (isNaN(startXRef)) {\n\t         startXRef = 0;\n\t        }\n\t       }\n\t      }\n\t      return shadow(this, 'startXRef', startXRef);\n\t     },\n\t     get mainXRefEntriesOffset() {\n\t      var mainXRefEntriesOffset = 0;\n\t      var linearization = this.linearization;\n\t      if (linearization) {\n\t       mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n\t      }\n\t      return shadow(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n\t     },\n\t     checkHeader: function PDFDocument_checkHeader() {\n\t      var stream = this.stream;\n\t      stream.reset();\n\t      if (find(stream, '%PDF-', 1024)) {\n\t       stream.moveStart();\n\t       var MAX_VERSION_LENGTH = 12;\n\t       var version = '', ch;\n\t       while ((ch = stream.getByte()) > 0x20) {\n\t        if (version.length >= MAX_VERSION_LENGTH) {\n\t         break;\n\t        }\n\t        version += String.fromCharCode(ch);\n\t       }\n\t       if (!this.pdfFormatVersion) {\n\t        this.pdfFormatVersion = version.substring(5);\n\t       }\n\t       return;\n\t      }\n\t     },\n\t     parseStartXRef: function PDFDocument_parseStartXRef() {\n\t      var startXRef = this.startXRef;\n\t      this.xref.setStartXRef(startXRef);\n\t     },\n\t     setup: function PDFDocument_setup(recoveryMode) {\n\t      this.xref.parse(recoveryMode);\n\t      var self = this;\n\t      var pageFactory = {\n\t       createPage: function (pageIndex, dict, ref, fontCache) {\n\t        return new Page(self.pdfManager, self.xref, pageIndex, dict, ref, fontCache);\n\t       }\n\t      };\n\t      this.catalog = new Catalog(this.pdfManager, this.xref, pageFactory);\n\t     },\n\t     get numPages() {\n\t      var linearization = this.linearization;\n\t      var num = linearization ? linearization.numPages : this.catalog.numPages;\n\t      return shadow(this, 'numPages', num);\n\t     },\n\t     get documentInfo() {\n\t      var docInfo = {\n\t       PDFFormatVersion: this.pdfFormatVersion,\n\t       IsAcroFormPresent: !!this.acroForm,\n\t       IsXFAPresent: !!this.xfa\n\t      };\n\t      var infoDict;\n\t      try {\n\t       infoDict = this.xref.trailer.get('Info');\n\t      } catch (err) {\n\t       info('The document information dictionary is invalid.');\n\t      }\n\t      if (infoDict) {\n\t       var validEntries = DocumentInfoValidators.entries;\n\t       for (var key in validEntries) {\n\t        if (infoDict.has(key)) {\n\t         var value = infoDict.get(key);\n\t         if (validEntries[key](value)) {\n\t          docInfo[key] = typeof value !== 'string' ? value : stringToPDFString(value);\n\t         } else {\n\t          info('Bad value in document info for \"' + key + '\"');\n\t         }\n\t        }\n\t       }\n\t      }\n\t      return shadow(this, 'documentInfo', docInfo);\n\t     },\n\t     get fingerprint() {\n\t      var xref = this.xref, hash, fileID = '';\n\t      var idArray = xref.trailer.get('ID');\n\t      if (idArray && isArray(idArray) && idArray[0] && isString(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n\t       hash = stringToBytes(idArray[0]);\n\t      } else {\n\t       if (this.stream.ensureRange) {\n\t        this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n\t       }\n\t       hash = calculateMD5(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n\t      }\n\t      for (var i = 0, n = hash.length; i < n; i++) {\n\t       var hex = hash[i].toString(16);\n\t       fileID += hex.length === 1 ? '0' + hex : hex;\n\t      }\n\t      return shadow(this, 'fingerprint', fileID);\n\t     },\n\t     getPage: function PDFDocument_getPage(pageIndex) {\n\t      return this.catalog.getPage(pageIndex);\n\t     },\n\t     cleanup: function PDFDocument_cleanup() {\n\t      return this.catalog.cleanup();\n\t     }\n\t    };\n\t    return PDFDocument;\n\t   }();\n\t   exports.Page = Page;\n\t   exports.PDFDocument = PDFDocument;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCorePdfManager = {}, root.pdfjsSharedUtil, root.pdfjsCoreStream, root.pdfjsCoreChunkedStream, root.pdfjsCoreDocument);\n\t  }(this, function (exports, sharedUtil, coreStream, coreChunkedStream, coreDocument) {\n\t   var warn = sharedUtil.warn;\n\t   var createValidAbsoluteUrl = sharedUtil.createValidAbsoluteUrl;\n\t   var shadow = sharedUtil.shadow;\n\t   var NotImplementedException = sharedUtil.NotImplementedException;\n\t   var MissingDataException = sharedUtil.MissingDataException;\n\t   var createPromiseCapability = sharedUtil.createPromiseCapability;\n\t   var Util = sharedUtil.Util;\n\t   var Stream = coreStream.Stream;\n\t   var ChunkedStreamManager = coreChunkedStream.ChunkedStreamManager;\n\t   var PDFDocument = coreDocument.PDFDocument;\n\t   var BasePdfManager = function BasePdfManagerClosure() {\n\t    function BasePdfManager() {\n\t     throw new Error('Cannot initialize BaseManagerManager');\n\t    }\n\t    BasePdfManager.prototype = {\n\t     get docId() {\n\t      return this._docId;\n\t     },\n\t     get password() {\n\t      return this._password;\n\t     },\n\t     get docBaseUrl() {\n\t      var docBaseUrl = null;\n\t      if (this._docBaseUrl) {\n\t       var absoluteUrl = createValidAbsoluteUrl(this._docBaseUrl);\n\t       if (absoluteUrl) {\n\t        docBaseUrl = absoluteUrl.href;\n\t       } else {\n\t        warn('Invalid absolute docBaseUrl: \"' + this._docBaseUrl + '\".');\n\t       }\n\t      }\n\t      return shadow(this, 'docBaseUrl', docBaseUrl);\n\t     },\n\t     onLoadedStream: function BasePdfManager_onLoadedStream() {\n\t      throw new NotImplementedException();\n\t     },\n\t     ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n\t      return this.ensure(this.pdfDocument, prop, args);\n\t     },\n\t     ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n\t      return this.ensure(this.pdfDocument.xref, prop, args);\n\t     },\n\t     ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n\t      return this.ensure(this.pdfDocument.catalog, prop, args);\n\t     },\n\t     getPage: function BasePdfManager_getPage(pageIndex) {\n\t      return this.pdfDocument.getPage(pageIndex);\n\t     },\n\t     cleanup: function BasePdfManager_cleanup() {\n\t      return this.pdfDocument.cleanup();\n\t     },\n\t     ensure: function BasePdfManager_ensure(obj, prop, args) {\n\t      return new NotImplementedException();\n\t     },\n\t     requestRange: function BasePdfManager_requestRange(begin, end) {\n\t      return new NotImplementedException();\n\t     },\n\t     requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n\t      return new NotImplementedException();\n\t     },\n\t     sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n\t      return new NotImplementedException();\n\t     },\n\t     updatePassword: function BasePdfManager_updatePassword(password) {\n\t      this._password = password;\n\t     },\n\t     terminate: function BasePdfManager_terminate() {\n\t      return new NotImplementedException();\n\t     }\n\t    };\n\t    return BasePdfManager;\n\t   }();\n\t   var LocalPdfManager = function LocalPdfManagerClosure() {\n\t    function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n\t     this._docId = docId;\n\t     this._password = password;\n\t     this._docBaseUrl = docBaseUrl;\n\t     this.evaluatorOptions = evaluatorOptions;\n\t     var stream = new Stream(data);\n\t     this.pdfDocument = new PDFDocument(this, stream);\n\t     this._loadedStreamCapability = createPromiseCapability();\n\t     this._loadedStreamCapability.resolve(stream);\n\t    }\n\t    Util.inherit(LocalPdfManager, BasePdfManager, {\n\t     ensure: function LocalPdfManager_ensure(obj, prop, args) {\n\t      return new Promise(function (resolve, reject) {\n\t       try {\n\t        var value = obj[prop];\n\t        var result;\n\t        if (typeof value === 'function') {\n\t         result = value.apply(obj, args);\n\t        } else {\n\t         result = value;\n\t        }\n\t        resolve(result);\n\t       } catch (e) {\n\t        reject(e);\n\t       }\n\t      });\n\t     },\n\t     requestRange: function LocalPdfManager_requestRange(begin, end) {\n\t      return Promise.resolve();\n\t     },\n\t     requestLoadedStream: function LocalPdfManager_requestLoadedStream() {\n\t     },\n\t     onLoadedStream: function LocalPdfManager_onLoadedStream() {\n\t      return this._loadedStreamCapability.promise;\n\t     },\n\t     terminate: function LocalPdfManager_terminate() {\n\t     }\n\t    });\n\t    return LocalPdfManager;\n\t   }();\n\t   var NetworkPdfManager = function NetworkPdfManagerClosure() {\n\t    function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n\t     this._docId = docId;\n\t     this._password = args.password;\n\t     this._docBaseUrl = docBaseUrl;\n\t     this.msgHandler = args.msgHandler;\n\t     this.evaluatorOptions = evaluatorOptions;\n\t     var params = {\n\t      msgHandler: args.msgHandler,\n\t      url: args.url,\n\t      length: args.length,\n\t      disableAutoFetch: args.disableAutoFetch,\n\t      rangeChunkSize: args.rangeChunkSize\n\t     };\n\t     this.streamManager = new ChunkedStreamManager(pdfNetworkStream, params);\n\t     this.pdfDocument = new PDFDocument(this, this.streamManager.getStream());\n\t    }\n\t    Util.inherit(NetworkPdfManager, BasePdfManager, {\n\t     ensure: function NetworkPdfManager_ensure(obj, prop, args) {\n\t      var pdfManager = this;\n\t      return new Promise(function (resolve, reject) {\n\t       function ensureHelper() {\n\t        try {\n\t         var result;\n\t         var value = obj[prop];\n\t         if (typeof value === 'function') {\n\t          result = value.apply(obj, args);\n\t         } else {\n\t          result = value;\n\t         }\n\t         resolve(result);\n\t        } catch (e) {\n\t         if (!(e instanceof MissingDataException)) {\n\t          reject(e);\n\t          return;\n\t         }\n\t         pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\n\t        }\n\t       }\n\t       ensureHelper();\n\t      });\n\t     },\n\t     requestRange: function NetworkPdfManager_requestRange(begin, end) {\n\t      return this.streamManager.requestRange(begin, end);\n\t     },\n\t     requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\n\t      this.streamManager.requestAllChunks();\n\t     },\n\t     sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\n\t      this.streamManager.onReceiveData({ chunk: chunk });\n\t     },\n\t     onLoadedStream: function NetworkPdfManager_onLoadedStream() {\n\t      return this.streamManager.onLoadedStream();\n\t     },\n\t     terminate: function NetworkPdfManager_terminate() {\n\t      this.streamManager.abort();\n\t     }\n\t    });\n\t    return NetworkPdfManager;\n\t   }();\n\t   exports.LocalPdfManager = LocalPdfManager;\n\t   exports.NetworkPdfManager = NetworkPdfManager;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCoreWorker = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCorePdfManager);\n\t  }(this, function (exports, sharedUtil, corePrimitives, corePdfManager) {\n\t   var UNSUPPORTED_FEATURES = sharedUtil.UNSUPPORTED_FEATURES;\n\t   var InvalidPDFException = sharedUtil.InvalidPDFException;\n\t   var MessageHandler = sharedUtil.MessageHandler;\n\t   var MissingPDFException = sharedUtil.MissingPDFException;\n\t   var UnexpectedResponseException = sharedUtil.UnexpectedResponseException;\n\t   var PasswordException = sharedUtil.PasswordException;\n\t   var PasswordResponses = sharedUtil.PasswordResponses;\n\t   var UnknownErrorException = sharedUtil.UnknownErrorException;\n\t   var XRefParseException = sharedUtil.XRefParseException;\n\t   var arrayByteLength = sharedUtil.arrayByteLength;\n\t   var arraysToBytes = sharedUtil.arraysToBytes;\n\t   var assert = sharedUtil.assert;\n\t   var createPromiseCapability = sharedUtil.createPromiseCapability;\n\t   var error = sharedUtil.error;\n\t   var info = sharedUtil.info;\n\t   var warn = sharedUtil.warn;\n\t   var setVerbosityLevel = sharedUtil.setVerbosityLevel;\n\t   var Ref = corePrimitives.Ref;\n\t   var LocalPdfManager = corePdfManager.LocalPdfManager;\n\t   var NetworkPdfManager = corePdfManager.NetworkPdfManager;\n\t   var globalScope = sharedUtil.globalScope;\n\t   var WorkerTask = function WorkerTaskClosure() {\n\t    function WorkerTask(name) {\n\t     this.name = name;\n\t     this.terminated = false;\n\t     this._capability = createPromiseCapability();\n\t    }\n\t    WorkerTask.prototype = {\n\t     get finished() {\n\t      return this._capability.promise;\n\t     },\n\t     finish: function () {\n\t      this._capability.resolve();\n\t     },\n\t     terminate: function () {\n\t      this.terminated = true;\n\t     },\n\t     ensureNotTerminated: function () {\n\t      if (this.terminated) {\n\t       throw new Error('Worker task was terminated');\n\t      }\n\t     }\n\t    };\n\t    return WorkerTask;\n\t   }();\n\t   var PDFWorkerStream = function PDFWorkerStreamClosure() {\n\t    function PDFWorkerStream(params, msgHandler) {\n\t     this._queuedChunks = [];\n\t     var initialData = params.initialData;\n\t     if (initialData && initialData.length > 0) {\n\t      this._queuedChunks.push(initialData);\n\t     }\n\t     this._msgHandler = msgHandler;\n\t     this._isRangeSupported = !params.disableRange;\n\t     this._isStreamingSupported = !params.disableStream;\n\t     this._contentLength = params.length;\n\t     this._fullRequestReader = null;\n\t     this._rangeReaders = [];\n\t     msgHandler.on('OnDataRange', this._onReceiveData.bind(this));\n\t     msgHandler.on('OnDataProgress', this._onProgress.bind(this));\n\t    }\n\t    PDFWorkerStream.prototype = {\n\t     _onReceiveData: function PDFWorkerStream_onReceiveData(args) {\n\t      if (args.begin === undefined) {\n\t       if (this._fullRequestReader) {\n\t        this._fullRequestReader._enqueue(args.chunk);\n\t       } else {\n\t        this._queuedChunks.push(args.chunk);\n\t       }\n\t      } else {\n\t       var found = this._rangeReaders.some(function (rangeReader) {\n\t        if (rangeReader._begin !== args.begin) {\n\t         return false;\n\t        }\n\t        rangeReader._enqueue(args.chunk);\n\t        return true;\n\t       });\n\t       assert(found);\n\t      }\n\t     },\n\t     _onProgress: function PDFWorkerStream_onProgress(evt) {\n\t      if (this._rangeReaders.length > 0) {\n\t       var firstReader = this._rangeReaders[0];\n\t       if (firstReader.onProgress) {\n\t        firstReader.onProgress({ loaded: evt.loaded });\n\t       }\n\t      }\n\t     },\n\t     _removeRangeReader: function PDFWorkerStream_removeRangeReader(reader) {\n\t      var i = this._rangeReaders.indexOf(reader);\n\t      if (i >= 0) {\n\t       this._rangeReaders.splice(i, 1);\n\t      }\n\t     },\n\t     getFullReader: function PDFWorkerStream_getFullReader() {\n\t      assert(!this._fullRequestReader);\n\t      var queuedChunks = this._queuedChunks;\n\t      this._queuedChunks = null;\n\t      return new PDFWorkerStreamReader(this, queuedChunks);\n\t     },\n\t     getRangeReader: function PDFWorkerStream_getRangeReader(begin, end) {\n\t      var reader = new PDFWorkerStreamRangeReader(this, begin, end);\n\t      this._msgHandler.send('RequestDataRange', {\n\t       begin: begin,\n\t       end: end\n\t      });\n\t      this._rangeReaders.push(reader);\n\t      return reader;\n\t     },\n\t     cancelAllRequests: function PDFWorkerStream_cancelAllRequests(reason) {\n\t      if (this._fullRequestReader) {\n\t       this._fullRequestReader.cancel(reason);\n\t      }\n\t      var readers = this._rangeReaders.slice(0);\n\t      readers.forEach(function (rangeReader) {\n\t       rangeReader.cancel(reason);\n\t      });\n\t     }\n\t    };\n\t    function PDFWorkerStreamReader(stream, queuedChunks) {\n\t     this._stream = stream;\n\t     this._done = false;\n\t     this._queuedChunks = queuedChunks || [];\n\t     this._requests = [];\n\t     this._headersReady = Promise.resolve();\n\t     stream._fullRequestReader = this;\n\t     this.onProgress = null;\n\t    }\n\t    PDFWorkerStreamReader.prototype = {\n\t     _enqueue: function PDFWorkerStreamReader_enqueue(chunk) {\n\t      if (this._done) {\n\t       return;\n\t      }\n\t      if (this._requests.length > 0) {\n\t       var requestCapability = this._requests.shift();\n\t       requestCapability.resolve({\n\t        value: chunk,\n\t        done: false\n\t       });\n\t       return;\n\t      }\n\t      this._queuedChunks.push(chunk);\n\t     },\n\t     get headersReady() {\n\t      return this._headersReady;\n\t     },\n\t     get isRangeSupported() {\n\t      return this._stream._isRangeSupported;\n\t     },\n\t     get isStreamingSupported() {\n\t      return this._stream._isStreamingSupported;\n\t     },\n\t     get contentLength() {\n\t      return this._stream._contentLength;\n\t     },\n\t     read: function PDFWorkerStreamReader_read() {\n\t      if (this._queuedChunks.length > 0) {\n\t       var chunk = this._queuedChunks.shift();\n\t       return Promise.resolve({\n\t        value: chunk,\n\t        done: false\n\t       });\n\t      }\n\t      if (this._done) {\n\t       return Promise.resolve({\n\t        value: undefined,\n\t        done: true\n\t       });\n\t      }\n\t      var requestCapability = createPromiseCapability();\n\t      this._requests.push(requestCapability);\n\t      return requestCapability.promise;\n\t     },\n\t     cancel: function PDFWorkerStreamReader_cancel(reason) {\n\t      this._done = true;\n\t      this._requests.forEach(function (requestCapability) {\n\t       requestCapability.resolve({\n\t        value: undefined,\n\t        done: true\n\t       });\n\t      });\n\t      this._requests = [];\n\t     }\n\t    };\n\t    function PDFWorkerStreamRangeReader(stream, begin, end) {\n\t     this._stream = stream;\n\t     this._begin = begin;\n\t     this._end = end;\n\t     this._queuedChunk = null;\n\t     this._requests = [];\n\t     this._done = false;\n\t     this.onProgress = null;\n\t    }\n\t    PDFWorkerStreamRangeReader.prototype = {\n\t     _enqueue: function PDFWorkerStreamRangeReader_enqueue(chunk) {\n\t      if (this._done) {\n\t       return;\n\t      }\n\t      if (this._requests.length === 0) {\n\t       this._queuedChunk = chunk;\n\t      } else {\n\t       var requestsCapability = this._requests.shift();\n\t       requestsCapability.resolve({\n\t        value: chunk,\n\t        done: false\n\t       });\n\t       this._requests.forEach(function (requestCapability) {\n\t        requestCapability.resolve({\n\t         value: undefined,\n\t         done: true\n\t        });\n\t       });\n\t       this._requests = [];\n\t      }\n\t      this._done = true;\n\t      this._stream._removeRangeReader(this);\n\t     },\n\t     get isStreamingSupported() {\n\t      return false;\n\t     },\n\t     read: function PDFWorkerStreamRangeReader_read() {\n\t      if (this._queuedChunk) {\n\t       return Promise.resolve({\n\t        value: this._queuedChunk,\n\t        done: false\n\t       });\n\t      }\n\t      if (this._done) {\n\t       return Promise.resolve({\n\t        value: undefined,\n\t        done: true\n\t       });\n\t      }\n\t      var requestCapability = createPromiseCapability();\n\t      this._requests.push(requestCapability);\n\t      return requestCapability.promise;\n\t     },\n\t     cancel: function PDFWorkerStreamRangeReader_cancel(reason) {\n\t      this._done = true;\n\t      this._requests.forEach(function (requestCapability) {\n\t       requestCapability.resolve({\n\t        value: undefined,\n\t        done: true\n\t       });\n\t      });\n\t      this._requests = [];\n\t      this._stream._removeRangeReader(this);\n\t     }\n\t    };\n\t    return PDFWorkerStream;\n\t   }();\n\t   var PDFNetworkStream;\n\t   function setPDFNetworkStreamClass(cls) {\n\t    PDFNetworkStream = cls;\n\t   }\n\t   var WorkerMessageHandler = {\n\t    setup: function wphSetup(handler, port) {\n\t     var testMessageProcessed = false;\n\t     handler.on('test', function wphSetupTest(data) {\n\t      if (testMessageProcessed) {\n\t       return;\n\t      }\n\t      testMessageProcessed = true;\n\t      if (!(data instanceof Uint8Array)) {\n\t       handler.send('test', 'main', false);\n\t       return;\n\t      }\n\t      var supportTransfers = data[0] === 255;\n\t      handler.postMessageTransfers = supportTransfers;\n\t      var xhr = new XMLHttpRequest();\n\t      var responseExists = 'response' in xhr;\n\t      try {\n\t       var dummy = xhr.responseType;\n\t      } catch (e) {\n\t       responseExists = false;\n\t      }\n\t      if (!responseExists) {\n\t       handler.send('test', false);\n\t       return;\n\t      }\n\t      handler.send('test', {\n\t       supportTypedArray: true,\n\t       supportTransfers: supportTransfers\n\t      });\n\t     });\n\t     handler.on('configure', function wphConfigure(data) {\n\t      setVerbosityLevel(data.verbosity);\n\t     });\n\t     handler.on('GetDocRequest', function wphSetupDoc(data) {\n\t      return WorkerMessageHandler.createDocumentHandler(data, port);\n\t     });\n\t    },\n\t    createDocumentHandler: function wphCreateDocumentHandler(docParams, port) {\n\t     var pdfManager;\n\t     var terminated = false;\n\t     var cancelXHRs = null;\n\t     var WorkerTasks = [];\n\t     var docId = docParams.docId;\n\t     var docBaseUrl = docParams.docBaseUrl;\n\t     var workerHandlerName = docParams.docId + '_worker';\n\t     var handler = new MessageHandler(workerHandlerName, docId, port);\n\t     handler.postMessageTransfers = docParams.postMessageTransfers;\n\t     function ensureNotTerminated() {\n\t      if (terminated) {\n\t       throw new Error('Worker was terminated');\n\t      }\n\t     }\n\t     function startWorkerTask(task) {\n\t      WorkerTasks.push(task);\n\t     }\n\t     function finishWorkerTask(task) {\n\t      task.finish();\n\t      var i = WorkerTasks.indexOf(task);\n\t      WorkerTasks.splice(i, 1);\n\t     }\n\t     function loadDocument(recoveryMode) {\n\t      var loadDocumentCapability = createPromiseCapability();\n\t      var parseSuccess = function parseSuccess() {\n\t       var numPagesPromise = pdfManager.ensureDoc('numPages');\n\t       var fingerprintPromise = pdfManager.ensureDoc('fingerprint');\n\t       var encryptedPromise = pdfManager.ensureXRef('encrypt');\n\t       Promise.all([\n\t        numPagesPromise,\n\t        fingerprintPromise,\n\t        encryptedPromise\n\t       ]).then(function onDocReady(results) {\n\t        var doc = {\n\t         numPages: results[0],\n\t         fingerprint: results[1],\n\t         encrypted: !!results[2]\n\t        };\n\t        loadDocumentCapability.resolve(doc);\n\t       }, parseFailure);\n\t      };\n\t      var parseFailure = function parseFailure(e) {\n\t       loadDocumentCapability.reject(e);\n\t      };\n\t      pdfManager.ensureDoc('checkHeader', []).then(function () {\n\t       pdfManager.ensureDoc('parseStartXRef', []).then(function () {\n\t        pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\n\t       }, parseFailure);\n\t      }, parseFailure);\n\t      return loadDocumentCapability.promise;\n\t     }\n\t     function getPdfManager(data, evaluatorOptions) {\n\t      var pdfManagerCapability = createPromiseCapability();\n\t      var pdfManager;\n\t      var source = data.source;\n\t      if (source.data) {\n\t       try {\n\t        pdfManager = new LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n\t        pdfManagerCapability.resolve(pdfManager);\n\t       } catch (ex) {\n\t        pdfManagerCapability.reject(ex);\n\t       }\n\t       return pdfManagerCapability.promise;\n\t      }\n\t      var pdfStream;\n\t      try {\n\t       if (source.chunkedViewerLoading) {\n\t        pdfStream = new PDFWorkerStream(source, handler);\n\t       } else {\n\t        assert(PDFNetworkStream, 'pdfjs/core/network module is not loaded');\n\t        pdfStream = new PDFNetworkStream(data);\n\t       }\n\t      } catch (ex) {\n\t       pdfManagerCapability.reject(ex);\n\t       return pdfManagerCapability.promise;\n\t      }\n\t      var fullRequest = pdfStream.getFullReader();\n\t      fullRequest.headersReady.then(function () {\n\t       if (!fullRequest.isStreamingSupported || !fullRequest.isRangeSupported) {\n\t        fullRequest.onProgress = function (evt) {\n\t         handler.send('DocProgress', {\n\t          loaded: evt.loaded,\n\t          total: evt.total\n\t         });\n\t        };\n\t       }\n\t       if (!fullRequest.isRangeSupported) {\n\t        return;\n\t       }\n\t       var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n\t       pdfManager = new NetworkPdfManager(docId, pdfStream, {\n\t        msgHandler: handler,\n\t        url: source.url,\n\t        password: source.password,\n\t        length: fullRequest.contentLength,\n\t        disableAutoFetch: disableAutoFetch,\n\t        rangeChunkSize: source.rangeChunkSize\n\t       }, evaluatorOptions, docBaseUrl);\n\t       pdfManagerCapability.resolve(pdfManager);\n\t       cancelXHRs = null;\n\t      }).catch(function (reason) {\n\t       pdfManagerCapability.reject(reason);\n\t       cancelXHRs = null;\n\t      });\n\t      var cachedChunks = [], loaded = 0;\n\t      var flushChunks = function () {\n\t       var pdfFile = arraysToBytes(cachedChunks);\n\t       if (source.length && pdfFile.length !== source.length) {\n\t        warn('reported HTTP length is different from actual');\n\t       }\n\t       try {\n\t        pdfManager = new LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n\t        pdfManagerCapability.resolve(pdfManager);\n\t       } catch (ex) {\n\t        pdfManagerCapability.reject(ex);\n\t       }\n\t       cachedChunks = [];\n\t      };\n\t      var readPromise = new Promise(function (resolve, reject) {\n\t       var readChunk = function (chunk) {\n\t        try {\n\t         ensureNotTerminated();\n\t         if (chunk.done) {\n\t          if (!pdfManager) {\n\t           flushChunks();\n\t          }\n\t          cancelXHRs = null;\n\t          return;\n\t         }\n\t         var data = chunk.value;\n\t         loaded += arrayByteLength(data);\n\t         if (!fullRequest.isStreamingSupported) {\n\t          handler.send('DocProgress', {\n\t           loaded: loaded,\n\t           total: Math.max(loaded, fullRequest.contentLength || 0)\n\t          });\n\t         }\n\t         if (pdfManager) {\n\t          pdfManager.sendProgressiveData(data);\n\t         } else {\n\t          cachedChunks.push(data);\n\t         }\n\t         fullRequest.read().then(readChunk, reject);\n\t        } catch (e) {\n\t         reject(e);\n\t        }\n\t       };\n\t       fullRequest.read().then(readChunk, reject);\n\t      });\n\t      readPromise.catch(function (e) {\n\t       pdfManagerCapability.reject(e);\n\t       cancelXHRs = null;\n\t      });\n\t      cancelXHRs = function () {\n\t       pdfStream.cancelAllRequests('abort');\n\t      };\n\t      return pdfManagerCapability.promise;\n\t     }\n\t     function setupDoc(data) {\n\t      function onSuccess(doc) {\n\t       ensureNotTerminated();\n\t       handler.send('GetDoc', { pdfInfo: doc });\n\t      }\n\t      function onFailure(e) {\n\t       if (e instanceof PasswordException) {\n\t        var task = new WorkerTask('PasswordException: response ' + e.code);\n\t        startWorkerTask(task);\n\t        handler.sendWithPromise('PasswordRequest', e).then(function (data) {\n\t         finishWorkerTask(task);\n\t         pdfManager.updatePassword(data.password);\n\t         pdfManagerReady();\n\t        }).catch(function (ex) {\n\t         finishWorkerTask(task);\n\t         handler.send('PasswordException', ex);\n\t        }.bind(null, e));\n\t       } else if (e instanceof InvalidPDFException) {\n\t        handler.send('InvalidPDF', e);\n\t       } else if (e instanceof MissingPDFException) {\n\t        handler.send('MissingPDF', e);\n\t       } else if (e instanceof UnexpectedResponseException) {\n\t        handler.send('UnexpectedResponse', e);\n\t       } else {\n\t        handler.send('UnknownError', new UnknownErrorException(e.message, e.toString()));\n\t       }\n\t      }\n\t      function pdfManagerReady() {\n\t       ensureNotTerminated();\n\t       loadDocument(false).then(onSuccess, function loadFailure(ex) {\n\t        ensureNotTerminated();\n\t        if (!(ex instanceof XRefParseException)) {\n\t         onFailure(ex);\n\t         return;\n\t        }\n\t        pdfManager.requestLoadedStream();\n\t        pdfManager.onLoadedStream().then(function () {\n\t         ensureNotTerminated();\n\t         loadDocument(true).then(onSuccess, onFailure);\n\t        });\n\t       }, onFailure);\n\t      }\n\t      ensureNotTerminated();\n\t      var cMapOptions = {\n\t       url: data.cMapUrl === undefined ? null : data.cMapUrl,\n\t       packed: data.cMapPacked === true\n\t      };\n\t      var evaluatorOptions = {\n\t       forceDataSchema: data.disableCreateObjectURL,\n\t       maxImageSize: data.maxImageSize === undefined ? -1 : data.maxImageSize,\n\t       disableFontFace: data.disableFontFace,\n\t       cMapOptions: cMapOptions\n\t      };\n\t      getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n\t       if (terminated) {\n\t        newPdfManager.terminate();\n\t        throw new Error('Worker was terminated');\n\t       }\n\t       pdfManager = newPdfManager;\n\t       handler.send('PDFManagerReady', null);\n\t       pdfManager.onLoadedStream().then(function (stream) {\n\t        handler.send('DataLoaded', { length: stream.bytes.byteLength });\n\t       });\n\t      }).then(pdfManagerReady, onFailure);\n\t     }\n\t     handler.on('GetPage', function wphSetupGetPage(data) {\n\t      return pdfManager.getPage(data.pageIndex).then(function (page) {\n\t       var rotatePromise = pdfManager.ensure(page, 'rotate');\n\t       var refPromise = pdfManager.ensure(page, 'ref');\n\t       var userUnitPromise = pdfManager.ensure(page, 'userUnit');\n\t       var viewPromise = pdfManager.ensure(page, 'view');\n\t       return Promise.all([\n\t        rotatePromise,\n\t        refPromise,\n\t        userUnitPromise,\n\t        viewPromise\n\t       ]).then(function (results) {\n\t        return {\n\t         rotate: results[0],\n\t         ref: results[1],\n\t         userUnit: results[2],\n\t         view: results[3]\n\t        };\n\t       });\n\t      });\n\t     });\n\t     handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n\t      var ref = new Ref(data.ref.num, data.ref.gen);\n\t      var catalog = pdfManager.pdfDocument.catalog;\n\t      return catalog.getPageIndex(ref);\n\t     });\n\t     handler.on('GetDestinations', function wphSetupGetDestinations(data) {\n\t      return pdfManager.ensureCatalog('destinations');\n\t     });\n\t     handler.on('GetDestination', function wphSetupGetDestination(data) {\n\t      return pdfManager.ensureCatalog('getDestination', [data.id]);\n\t     });\n\t     handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\n\t      return pdfManager.ensureCatalog('pageLabels');\n\t     });\n\t     handler.on('GetAttachments', function wphSetupGetAttachments(data) {\n\t      return pdfManager.ensureCatalog('attachments');\n\t     });\n\t     handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\n\t      return pdfManager.ensureCatalog('javaScript');\n\t     });\n\t     handler.on('GetOutline', function wphSetupGetOutline(data) {\n\t      return pdfManager.ensureCatalog('documentOutline');\n\t     });\n\t     handler.on('GetMetadata', function wphSetupGetMetadata(data) {\n\t      return Promise.all([\n\t       pdfManager.ensureDoc('documentInfo'),\n\t       pdfManager.ensureCatalog('metadata')\n\t      ]);\n\t     });\n\t     handler.on('GetData', function wphSetupGetData(data) {\n\t      pdfManager.requestLoadedStream();\n\t      return pdfManager.onLoadedStream().then(function (stream) {\n\t       return stream.bytes;\n\t      });\n\t     });\n\t     handler.on('GetStats', function wphSetupGetStats(data) {\n\t      return pdfManager.pdfDocument.xref.stats;\n\t     });\n\t     handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n\t      return pdfManager.getPage(data.pageIndex).then(function (page) {\n\t       return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\n\t      });\n\t     });\n\t     handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n\t      var pageIndex = data.pageIndex;\n\t      pdfManager.getPage(pageIndex).then(function (page) {\n\t       var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\n\t       startWorkerTask(task);\n\t       var pageNum = pageIndex + 1;\n\t       var start = Date.now();\n\t       page.getOperatorList(handler, task, data.intent, data.renderInteractiveForms).then(function (operatorList) {\n\t        finishWorkerTask(task);\n\t        info('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\n\t       }, function (e) {\n\t        finishWorkerTask(task);\n\t        if (task.terminated) {\n\t         return;\n\t        }\n\t        handler.send('UnsupportedFeature', { featureId: UNSUPPORTED_FEATURES.unknown });\n\t        var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\n\t        var wrappedException;\n\t        if (typeof e === 'string') {\n\t         wrappedException = {\n\t          message: e,\n\t          stack: minimumStackMessage\n\t         };\n\t        } else if (typeof e === 'object') {\n\t         wrappedException = {\n\t          message: e.message || e.toString(),\n\t          stack: e.stack || minimumStackMessage\n\t         };\n\t        } else {\n\t         wrappedException = {\n\t          message: 'Unknown exception type: ' + typeof e,\n\t          stack: minimumStackMessage\n\t         };\n\t        }\n\t        handler.send('PageError', {\n\t         pageNum: pageNum,\n\t         error: wrappedException,\n\t         intent: data.intent\n\t        });\n\t       });\n\t      });\n\t     }, this);\n\t     handler.on('GetTextContent', function wphExtractText(data) {\n\t      var pageIndex = data.pageIndex;\n\t      var normalizeWhitespace = data.normalizeWhitespace;\n\t      var combineTextItems = data.combineTextItems;\n\t      return pdfManager.getPage(pageIndex).then(function (page) {\n\t       var task = new WorkerTask('GetTextContent: page ' + pageIndex);\n\t       startWorkerTask(task);\n\t       var pageNum = pageIndex + 1;\n\t       var start = Date.now();\n\t       return page.extractTextContent(task, normalizeWhitespace, combineTextItems).then(function (textContent) {\n\t        finishWorkerTask(task);\n\t        info('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\n\t        return textContent;\n\t       }, function (reason) {\n\t        finishWorkerTask(task);\n\t        if (task.terminated) {\n\t         return;\n\t        }\n\t        throw reason;\n\t       });\n\t      });\n\t     });\n\t     handler.on('Cleanup', function wphCleanup(data) {\n\t      return pdfManager.cleanup();\n\t     });\n\t     handler.on('Terminate', function wphTerminate(data) {\n\t      terminated = true;\n\t      if (pdfManager) {\n\t       pdfManager.terminate();\n\t       pdfManager = null;\n\t      }\n\t      if (cancelXHRs) {\n\t       cancelXHRs();\n\t      }\n\t      var waitOn = [];\n\t      WorkerTasks.forEach(function (task) {\n\t       waitOn.push(task.finished);\n\t       task.terminate();\n\t      });\n\t      return Promise.all(waitOn).then(function () {\n\t       handler.destroy();\n\t       handler = null;\n\t      });\n\t     });\n\t     handler.on('Ready', function wphReady(data) {\n\t      setupDoc(docParams);\n\t      docParams = null;\n\t     });\n\t     return workerHandlerName;\n\t    }\n\t   };\n\t   function initializeWorker() {\n\t    if (!('console' in globalScope)) {\n\t     var consoleTimer = {};\n\t     var workerConsole = {\n\t      log: function log() {\n\t       var args = Array.prototype.slice.call(arguments);\n\t       globalScope.postMessage({\n\t        targetName: 'main',\n\t        action: 'console_log',\n\t        data: args\n\t       });\n\t      },\n\t      error: function error() {\n\t       var args = Array.prototype.slice.call(arguments);\n\t       globalScope.postMessage({\n\t        targetName: 'main',\n\t        action: 'console_error',\n\t        data: args\n\t       });\n\t       throw 'pdf.js execution error';\n\t      },\n\t      time: function time(name) {\n\t       consoleTimer[name] = Date.now();\n\t      },\n\t      timeEnd: function timeEnd(name) {\n\t       var time = consoleTimer[name];\n\t       if (!time) {\n\t        error('Unknown timer name ' + name);\n\t       }\n\t       this.log('Timer:', name, Date.now() - time);\n\t      }\n\t     };\n\t     globalScope.console = workerConsole;\n\t    }\n\t    var handler = new MessageHandler('worker', 'main', self);\n\t    WorkerMessageHandler.setup(handler, self);\n\t    handler.send('ready', null);\n\t   }\n\t   if (typeof window === 'undefined' && !(typeof module !== 'undefined' && module.require)) {\n\t    initializeWorker();\n\t   }\n\t   exports.setPDFNetworkStreamClass = setPDFNetworkStreamClass;\n\t   exports.WorkerTask = WorkerTask;\n\t   exports.WorkerMessageHandler = WorkerMessageHandler;\n\t  }));\n\t  (function (root, factory) {\n\t   factory(root.pdfjsCoreNetwork = {}, root.pdfjsSharedUtil, root.pdfjsCoreWorker);\n\t  }(this, function (exports, sharedUtil, coreWorker) {\n\t   var OK_RESPONSE = 200;\n\t   var PARTIAL_CONTENT_RESPONSE = 206;\n\t   function NetworkManager(url, args) {\n\t    this.url = url;\n\t    args = args || {};\n\t    this.isHttp = /^https?:/i.test(url);\n\t    this.httpHeaders = this.isHttp && args.httpHeaders || {};\n\t    this.withCredentials = args.withCredentials || false;\n\t    this.getXhr = args.getXhr || function NetworkManager_getXhr() {\n\t     return new XMLHttpRequest();\n\t    };\n\t    this.currXhrId = 0;\n\t    this.pendingRequests = Object.create(null);\n\t    this.loadedRequests = Object.create(null);\n\t   }\n\t   function getArrayBuffer(xhr) {\n\t    var data = xhr.response;\n\t    if (typeof data !== 'string') {\n\t     return data;\n\t    }\n\t    var length = data.length;\n\t    var array = new Uint8Array(length);\n\t    for (var i = 0; i < length; i++) {\n\t     array[i] = data.charCodeAt(i) & 0xFF;\n\t    }\n\t    return array.buffer;\n\t   }\n\t   var supportsMozChunked = function supportsMozChunkedClosure() {\n\t    try {\n\t     var x = new XMLHttpRequest();\n\t     x.open('GET', 'https://example.com');\n\t     x.responseType = 'moz-chunked-arraybuffer';\n\t     return x.responseType === 'moz-chunked-arraybuffer';\n\t    } catch (e) {\n\t     return false;\n\t    }\n\t   }();\n\t   NetworkManager.prototype = {\n\t    requestRange: function NetworkManager_requestRange(begin, end, listeners) {\n\t     var args = {\n\t      begin: begin,\n\t      end: end\n\t     };\n\t     for (var prop in listeners) {\n\t      args[prop] = listeners[prop];\n\t     }\n\t     return this.request(args);\n\t    },\n\t    requestFull: function NetworkManager_requestFull(listeners) {\n\t     return this.request(listeners);\n\t    },\n\t    request: function NetworkManager_request(args) {\n\t     var xhr = this.getXhr();\n\t     var xhrId = this.currXhrId++;\n\t     var pendingRequest = this.pendingRequests[xhrId] = { xhr: xhr };\n\t     xhr.open('GET', this.url);\n\t     xhr.withCredentials = this.withCredentials;\n\t     for (var property in this.httpHeaders) {\n\t      var value = this.httpHeaders[property];\n\t      if (typeof value === 'undefined') {\n\t       continue;\n\t      }\n\t      xhr.setRequestHeader(property, value);\n\t     }\n\t     if (this.isHttp && 'begin' in args && 'end' in args) {\n\t      var rangeStr = args.begin + '-' + (args.end - 1);\n\t      xhr.setRequestHeader('Range', 'bytes=' + rangeStr);\n\t      pendingRequest.expectedStatus = 206;\n\t     } else {\n\t      pendingRequest.expectedStatus = 200;\n\t     }\n\t     var useMozChunkedLoading = supportsMozChunked && !!args.onProgressiveData;\n\t     if (useMozChunkedLoading) {\n\t      xhr.responseType = 'moz-chunked-arraybuffer';\n\t      pendingRequest.onProgressiveData = args.onProgressiveData;\n\t      pendingRequest.mozChunked = true;\n\t     } else {\n\t      xhr.responseType = 'arraybuffer';\n\t     }\n\t     if (args.onError) {\n\t      xhr.onerror = function (evt) {\n\t       args.onError(xhr.status);\n\t      };\n\t     }\n\t     xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n\t     xhr.onprogress = this.onProgress.bind(this, xhrId);\n\t     pendingRequest.onHeadersReceived = args.onHeadersReceived;\n\t     pendingRequest.onDone = args.onDone;\n\t     pendingRequest.onError = args.onError;\n\t     pendingRequest.onProgress = args.onProgress;\n\t     xhr.send(null);\n\t     return xhrId;\n\t    },\n\t    onProgress: function NetworkManager_onProgress(xhrId, evt) {\n\t     var pendingRequest = this.pendingRequests[xhrId];\n\t     if (!pendingRequest) {\n\t      return;\n\t     }\n\t     if (pendingRequest.mozChunked) {\n\t      var chunk = getArrayBuffer(pendingRequest.xhr);\n\t      pendingRequest.onProgressiveData(chunk);\n\t     }\n\t     var onProgress = pendingRequest.onProgress;\n\t     if (onProgress) {\n\t      onProgress(evt);\n\t     }\n\t    },\n\t    onStateChange: function NetworkManager_onStateChange(xhrId, evt) {\n\t     var pendingRequest = this.pendingRequests[xhrId];\n\t     if (!pendingRequest) {\n\t      return;\n\t     }\n\t     var xhr = pendingRequest.xhr;\n\t     if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n\t      pendingRequest.onHeadersReceived();\n\t      delete pendingRequest.onHeadersReceived;\n\t     }\n\t     if (xhr.readyState !== 4) {\n\t      return;\n\t     }\n\t     if (!(xhrId in this.pendingRequests)) {\n\t      return;\n\t     }\n\t     delete this.pendingRequests[xhrId];\n\t     if (xhr.status === 0 && this.isHttp) {\n\t      if (pendingRequest.onError) {\n\t       pendingRequest.onError(xhr.status);\n\t      }\n\t      return;\n\t     }\n\t     var xhrStatus = xhr.status || OK_RESPONSE;\n\t     var ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\t     if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {\n\t      if (pendingRequest.onError) {\n\t       pendingRequest.onError(xhr.status);\n\t      }\n\t      return;\n\t     }\n\t     this.loadedRequests[xhrId] = true;\n\t     var chunk = getArrayBuffer(xhr);\n\t     if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n\t      var rangeHeader = xhr.getResponseHeader('Content-Range');\n\t      var matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n\t      var begin = parseInt(matches[1], 10);\n\t      pendingRequest.onDone({\n\t       begin: begin,\n\t       chunk: chunk\n\t      });\n\t     } else if (pendingRequest.onProgressiveData) {\n\t      pendingRequest.onDone(null);\n\t     } else if (chunk) {\n\t      pendingRequest.onDone({\n\t       begin: 0,\n\t       chunk: chunk\n\t      });\n\t     } else if (pendingRequest.onError) {\n\t      pendingRequest.onError(xhr.status);\n\t     }\n\t    },\n\t    hasPendingRequests: function NetworkManager_hasPendingRequests() {\n\t     for (var xhrId in this.pendingRequests) {\n\t      return true;\n\t     }\n\t     return false;\n\t    },\n\t    getRequestXhr: function NetworkManager_getXhr(xhrId) {\n\t     return this.pendingRequests[xhrId].xhr;\n\t    },\n\t    isStreamingRequest: function NetworkManager_isStreamingRequest(xhrId) {\n\t     return !!this.pendingRequests[xhrId].onProgressiveData;\n\t    },\n\t    isPendingRequest: function NetworkManager_isPendingRequest(xhrId) {\n\t     return xhrId in this.pendingRequests;\n\t    },\n\t    isLoadedRequest: function NetworkManager_isLoadedRequest(xhrId) {\n\t     return xhrId in this.loadedRequests;\n\t    },\n\t    abortAllRequests: function NetworkManager_abortAllRequests() {\n\t     for (var xhrId in this.pendingRequests) {\n\t      this.abortRequest(xhrId | 0);\n\t     }\n\t    },\n\t    abortRequest: function NetworkManager_abortRequest(xhrId) {\n\t     var xhr = this.pendingRequests[xhrId].xhr;\n\t     delete this.pendingRequests[xhrId];\n\t     xhr.abort();\n\t    }\n\t   };\n\t   var assert = sharedUtil.assert;\n\t   var createPromiseCapability = sharedUtil.createPromiseCapability;\n\t   var isInt = sharedUtil.isInt;\n\t   var MissingPDFException = sharedUtil.MissingPDFException;\n\t   var UnexpectedResponseException = sharedUtil.UnexpectedResponseException;\n\t   function PDFNetworkStream(options) {\n\t    this._options = options;\n\t    var source = options.source;\n\t    this._manager = new NetworkManager(source.url, {\n\t     httpHeaders: source.httpHeaders,\n\t     withCredentials: source.withCredentials\n\t    });\n\t    this._rangeChunkSize = source.rangeChunkSize;\n\t    this._fullRequestReader = null;\n\t    this._rangeRequestReaders = [];\n\t   }\n\t   PDFNetworkStream.prototype = {\n\t    _onRangeRequestReaderClosed: function PDFNetworkStream_onRangeRequestReaderClosed(reader) {\n\t     var i = this._rangeRequestReaders.indexOf(reader);\n\t     if (i >= 0) {\n\t      this._rangeRequestReaders.splice(i, 1);\n\t     }\n\t    },\n\t    getFullReader: function PDFNetworkStream_getFullReader() {\n\t     assert(!this._fullRequestReader);\n\t     this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._options);\n\t     return this._fullRequestReader;\n\t    },\n\t    getRangeReader: function PDFNetworkStream_getRangeReader(begin, end) {\n\t     var reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);\n\t     reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n\t     this._rangeRequestReaders.push(reader);\n\t     return reader;\n\t    },\n\t    cancelAllRequests: function PDFNetworkStream_cancelAllRequests(reason) {\n\t     if (this._fullRequestReader) {\n\t      this._fullRequestReader.cancel(reason);\n\t     }\n\t     var readers = this._rangeRequestReaders.slice(0);\n\t     readers.forEach(function (reader) {\n\t      reader.cancel(reason);\n\t     });\n\t    }\n\t   };\n\t   function PDFNetworkStreamFullRequestReader(manager, options) {\n\t    this._manager = manager;\n\t    var source = options.source;\n\t    var args = {\n\t     onHeadersReceived: this._onHeadersReceived.bind(this),\n\t     onProgressiveData: source.disableStream ? null : this._onProgressiveData.bind(this),\n\t     onDone: this._onDone.bind(this),\n\t     onError: this._onError.bind(this),\n\t     onProgress: this._onProgress.bind(this)\n\t    };\n\t    this._url = source.url;\n\t    this._fullRequestId = manager.requestFull(args);\n\t    this._headersReceivedCapability = createPromiseCapability();\n\t    this._disableRange = options.disableRange || false;\n\t    this._contentLength = source.length;\n\t    this._rangeChunkSize = source.rangeChunkSize;\n\t    if (!this._rangeChunkSize && !this._disableRange) {\n\t     this._disableRange = true;\n\t    }\n\t    this._isStreamingSupported = false;\n\t    this._isRangeSupported = false;\n\t    this._cachedChunks = [];\n\t    this._requests = [];\n\t    this._done = false;\n\t    this._storedError = undefined;\n\t    this.onProgress = null;\n\t   }\n\t   PDFNetworkStreamFullRequestReader.prototype = {\n\t    _validateRangeRequestCapabilities: function PDFNetworkStreamFullRequestReader_validateRangeRequestCapabilities() {\n\t     if (this._disableRange) {\n\t      return false;\n\t     }\n\t     var networkManager = this._manager;\n\t     if (!networkManager.isHttp) {\n\t      return false;\n\t     }\n\t     var fullRequestXhrId = this._fullRequestId;\n\t     var fullRequestXhr = networkManager.getRequestXhr(fullRequestXhrId);\n\t     if (fullRequestXhr.getResponseHeader('Accept-Ranges') !== 'bytes') {\n\t      return false;\n\t     }\n\t     var contentEncoding = fullRequestXhr.getResponseHeader('Content-Encoding') || 'identity';\n\t     if (contentEncoding !== 'identity') {\n\t      return false;\n\t     }\n\t     var length = fullRequestXhr.getResponseHeader('Content-Length');\n\t     length = parseInt(length, 10);\n\t     if (!isInt(length)) {\n\t      return false;\n\t     }\n\t     this._contentLength = length;\n\t     if (length <= 2 * this._rangeChunkSize) {\n\t      return false;\n\t     }\n\t     return true;\n\t    },\n\t    _onHeadersReceived: function PDFNetworkStreamFullRequestReader_onHeadersReceived() {\n\t     if (this._validateRangeRequestCapabilities()) {\n\t      this._isRangeSupported = true;\n\t     }\n\t     var networkManager = this._manager;\n\t     var fullRequestXhrId = this._fullRequestId;\n\t     if (networkManager.isStreamingRequest(fullRequestXhrId)) {\n\t      this._isStreamingSupported = true;\n\t     } else if (this._isRangeSupported) {\n\t      networkManager.abortRequest(fullRequestXhrId);\n\t     }\n\t     this._headersReceivedCapability.resolve();\n\t    },\n\t    _onProgressiveData: function PDFNetworkStreamFullRequestReader_onProgressiveData(chunk) {\n\t     if (this._requests.length > 0) {\n\t      var requestCapability = this._requests.shift();\n\t      requestCapability.resolve({\n\t       value: chunk,\n\t       done: false\n\t      });\n\t     } else {\n\t      this._cachedChunks.push(chunk);\n\t     }\n\t    },\n\t    _onDone: function PDFNetworkStreamFullRequestReader_onDone(args) {\n\t     if (args) {\n\t      this._onProgressiveData(args.chunk);\n\t     }\n\t     this._done = true;\n\t     if (this._cachedChunks.length > 0) {\n\t      return;\n\t     }\n\t     this._requests.forEach(function (requestCapability) {\n\t      requestCapability.resolve({\n\t       value: undefined,\n\t       done: true\n\t      });\n\t     });\n\t     this._requests = [];\n\t    },\n\t    _onError: function PDFNetworkStreamFullRequestReader_onError(status) {\n\t     var url = this._url;\n\t     var exception;\n\t     if (status === 404 || status === 0 && /^file:/.test(url)) {\n\t      exception = new MissingPDFException('Missing PDF \"' + url + '\".');\n\t     } else {\n\t      exception = new UnexpectedResponseException('Unexpected server response (' + status + ') while retrieving PDF \"' + url + '\".', status);\n\t     }\n\t     this._storedError = exception;\n\t     this._headersReceivedCapability.reject(exception);\n\t     this._requests.forEach(function (requestCapability) {\n\t      requestCapability.reject(exception);\n\t     });\n\t     this._requests = [];\n\t     this._cachedChunks = [];\n\t    },\n\t    _onProgress: function PDFNetworkStreamFullRequestReader_onProgress(data) {\n\t     if (this.onProgress) {\n\t      this.onProgress({\n\t       loaded: data.loaded,\n\t       total: data.lengthComputable ? data.total : this._contentLength\n\t      });\n\t     }\n\t    },\n\t    get isRangeSupported() {\n\t     return this._isRangeSupported;\n\t    },\n\t    get isStreamingSupported() {\n\t     return this._isStreamingSupported;\n\t    },\n\t    get contentLength() {\n\t     return this._contentLength;\n\t    },\n\t    get headersReady() {\n\t     return this._headersReceivedCapability.promise;\n\t    },\n\t    read: function PDFNetworkStreamFullRequestReader_read() {\n\t     if (this._storedError) {\n\t      return Promise.reject(this._storedError);\n\t     }\n\t     if (this._cachedChunks.length > 0) {\n\t      var chunk = this._cachedChunks.shift();\n\t      return Promise.resolve(chunk);\n\t     }\n\t     if (this._done) {\n\t      return Promise.resolve({\n\t       value: undefined,\n\t       done: true\n\t      });\n\t     }\n\t     var requestCapability = createPromiseCapability();\n\t     this._requests.push(requestCapability);\n\t     return requestCapability.promise;\n\t    },\n\t    cancel: function PDFNetworkStreamFullRequestReader_cancel(reason) {\n\t     this._done = true;\n\t     this._headersReceivedCapability.reject(reason);\n\t     this._requests.forEach(function (requestCapability) {\n\t      requestCapability.resolve({\n\t       value: undefined,\n\t       done: true\n\t      });\n\t     });\n\t     this._requests = [];\n\t     if (this._manager.isPendingRequest(this._fullRequestId)) {\n\t      this._manager.abortRequest(this._fullRequestId);\n\t     }\n\t     this._fullRequestReader = null;\n\t    }\n\t   };\n\t   function PDFNetworkStreamRangeRequestReader(manager, begin, end) {\n\t    this._manager = manager;\n\t    var args = {\n\t     onDone: this._onDone.bind(this),\n\t     onProgress: this._onProgress.bind(this)\n\t    };\n\t    this._requestId = manager.requestRange(begin, end, args);\n\t    this._requests = [];\n\t    this._queuedChunk = null;\n\t    this._done = false;\n\t    this.onProgress = null;\n\t    this.onClosed = null;\n\t   }\n\t   PDFNetworkStreamRangeRequestReader.prototype = {\n\t    _close: function PDFNetworkStreamRangeRequestReader_close() {\n\t     if (this.onClosed) {\n\t      this.onClosed(this);\n\t     }\n\t    },\n\t    _onDone: function PDFNetworkStreamRangeRequestReader_onDone(data) {\n\t     var chunk = data.chunk;\n\t     if (this._requests.length > 0) {\n\t      var requestCapability = this._requests.shift();\n\t      requestCapability.resolve({\n\t       value: chunk,\n\t       done: false\n\t      });\n\t     } else {\n\t      this._queuedChunk = chunk;\n\t     }\n\t     this._done = true;\n\t     this._requests.forEach(function (requestCapability) {\n\t      requestCapability.resolve({\n\t       value: undefined,\n\t       done: true\n\t      });\n\t     });\n\t     this._requests = [];\n\t     this._close();\n\t    },\n\t    _onProgress: function PDFNetworkStreamRangeRequestReader_onProgress(evt) {\n\t     if (!this.isStreamingSupported && this.onProgress) {\n\t      this.onProgress({ loaded: evt.loaded });\n\t     }\n\t    },\n\t    get isStreamingSupported() {\n\t     return false;\n\t    },\n\t    read: function PDFNetworkStreamRangeRequestReader_read() {\n\t     if (this._queuedChunk !== null) {\n\t      var chunk = this._queuedChunk;\n\t      this._queuedChunk = null;\n\t      return Promise.resolve({\n\t       value: chunk,\n\t       done: false\n\t      });\n\t     }\n\t     if (this._done) {\n\t      return Promise.resolve({\n\t       value: undefined,\n\t       done: true\n\t      });\n\t     }\n\t     var requestCapability = createPromiseCapability();\n\t     this._requests.push(requestCapability);\n\t     return requestCapability.promise;\n\t    },\n\t    cancel: function PDFNetworkStreamRangeRequestReader_cancel(reason) {\n\t     this._done = true;\n\t     this._requests.forEach(function (requestCapability) {\n\t      requestCapability.resolve({\n\t       value: undefined,\n\t       done: true\n\t      });\n\t     });\n\t     this._requests = [];\n\t     if (this._manager.isPendingRequest(this._requestId)) {\n\t      this._manager.abortRequest(this._requestId);\n\t     }\n\t     this._close();\n\t    }\n\t   };\n\t   coreWorker.setPDFNetworkStreamClass(PDFNetworkStream);\n\t   exports.PDFNetworkStream = PDFNetworkStream;\n\t   exports.NetworkManager = NetworkManager;\n\t  }));\n\t }.call(pdfjsLibs));\n\t exports.WorkerMessageHandler = pdfjsLibs.pdfjsCoreWorker.WorkerMessageHandler;\n\t}));\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(/*! ./../../webpack/buildin/module.js */ 59)(module)))\n\n/***/ }\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// pdf.worker.bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap af65b9c767ac378efaf8","/* Copyright 2016 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable strict */\n\n(typeof window !== 'undefined' ? window : {}).pdfjsDistBuildPdfWorker =\n  require('./pdf.worker.js');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/build/pdf.worker.entry.js\n// module id = 0\n// module chunks = 1","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 59\n// module chunks = 0 1","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n(function (root, factory) {\n 'use strict';\n if (typeof define === 'function' && define.amd) {\n  define('pdfjs-dist/build/pdf.worker', ['exports'], factory);\n } else if (typeof exports !== 'undefined') {\n  factory(exports);\n } else {\n  factory(root['pdfjsDistBuildPdfWorker'] = {});\n }\n}(this, function (exports) {\n 'use strict';\n var pdfjsVersion = '1.7.235';\n var pdfjsBuild = '3f320f0';\n var pdfjsFilePath = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : null;\n var pdfjsLibs = {};\n (function pdfjsWrapper() {\n  (function (root, factory) {\n   factory(root.pdfjsCoreArithmeticDecoder = {});\n  }(this, function (exports) {\n   var ArithmeticDecoder = function ArithmeticDecoderClosure() {\n    var QeTable = [\n     {\n      qe: 0x5601,\n      nmps: 1,\n      nlps: 1,\n      switchFlag: 1\n     },\n     {\n      qe: 0x3401,\n      nmps: 2,\n      nlps: 6,\n      switchFlag: 0\n     },\n     {\n      qe: 0x1801,\n      nmps: 3,\n      nlps: 9,\n      switchFlag: 0\n     },\n     {\n      qe: 0x0AC1,\n      nmps: 4,\n      nlps: 12,\n      switchFlag: 0\n     },\n     {\n      qe: 0x0521,\n      nmps: 5,\n      nlps: 29,\n      switchFlag: 0\n     },\n     {\n      qe: 0x0221,\n      nmps: 38,\n      nlps: 33,\n      switchFlag: 0\n     },\n     {\n      qe: 0x5601,\n      nmps: 7,\n      nlps: 6,\n      switchFlag: 1\n     },\n     {\n      qe: 0x5401,\n      nmps: 8,\n      nlps: 14,\n      switchFlag: 0\n     },\n     {\n      qe: 0x4801,\n      nmps: 9,\n      nlps: 14,\n      switchFlag: 0\n     },\n     {\n      qe: 0x3801,\n      nmps: 10,\n      nlps: 14,\n      switchFlag: 0\n     },\n     {\n      qe: 0x3001,\n      nmps: 11,\n      nlps: 17,\n      switchFlag: 0\n     },\n     {\n      qe: 0x2401,\n      nmps: 12,\n      nlps: 18,\n      switchFlag: 0\n     },\n     {\n      qe: 0x1C01,\n      nmps: 13,\n      nlps: 20,\n      switchFlag: 0\n     },\n     {\n      qe: 0x1601,\n      nmps: 29,\n      nlps: 21,\n      switchFlag: 0\n     },\n     {\n      qe: 0x5601,\n      nmps: 15,\n      nlps: 14,\n      switchFlag: 1\n     },\n     {\n      qe: 0x5401,\n      nmps: 16,\n      nlps: 14,\n      switchFlag: 0\n     },\n     {\n      qe: 0x5101,\n      nmps: 17,\n      nlps: 15,\n      switchFlag: 0\n     },\n     {\n      qe: 0x4801,\n      nmps: 18,\n      nlps: 16,\n      switchFlag: 0\n     },\n     {\n      qe: 0x3801,\n      nmps: 19,\n      nlps: 17,\n      switchFlag: 0\n     },\n     {\n      qe: 0x3401,\n      nmps: 20,\n      nlps: 18,\n      switchFlag: 0\n     },\n     {\n      qe: 0x3001,\n      nmps: 21,\n      nlps: 19,\n      switchFlag: 0\n     },\n     {\n      qe: 0x2801,\n      nmps: 22,\n      nlps: 19,\n      switchFlag: 0\n     },\n     {\n      qe: 0x2401,\n      nmps: 23,\n      nlps: 20,\n      switchFlag: 0\n     },\n     {\n      qe: 0x2201,\n      nmps: 24,\n      nlps: 21,\n      switchFlag: 0\n     },\n     {\n      qe: 0x1C01,\n      nmps: 25,\n      nlps: 22,\n      switchFlag: 0\n     },\n     {\n      qe: 0x1801,\n      nmps: 26,\n      nlps: 23,\n      switchFlag: 0\n     },\n     {\n      qe: 0x1601,\n      nmps: 27,\n      nlps: 24,\n      switchFlag: 0\n     },\n     {\n      qe: 0x1401,\n      nmps: 28,\n      nlps: 25,\n      switchFlag: 0\n     },\n     {\n      qe: 0x1201,\n      nmps: 29,\n      nlps: 26,\n      switchFlag: 0\n     },\n     {\n      qe: 0x1101,\n      nmps: 30,\n      nlps: 27,\n      switchFlag: 0\n     },\n     {\n      qe: 0x0AC1,\n      nmps: 31,\n      nlps: 28,\n      switchFlag: 0\n     },\n     {\n      qe: 0x09C1,\n      nmps: 32,\n      nlps: 29,\n      switchFlag: 0\n     },\n     {\n      qe: 0x08A1,\n      nmps: 33,\n      nlps: 30,\n      switchFlag: 0\n     },\n     {\n      qe: 0x0521,\n      nmps: 34,\n      nlps: 31,\n      switchFlag: 0\n     },\n     {\n      qe: 0x0441,\n      nmps: 35,\n      nlps: 32,\n      switchFlag: 0\n     },\n     {\n      qe: 0x02A1,\n      nmps: 36,\n      nlps: 33,\n      switchFlag: 0\n     },\n     {\n      qe: 0x0221,\n      nmps: 37,\n      nlps: 34,\n      switchFlag: 0\n     },\n     {\n      qe: 0x0141,\n      nmps: 38,\n      nlps: 35,\n      switchFlag: 0\n     },\n     {\n      qe: 0x0111,\n      nmps: 39,\n      nlps: 36,\n      switchFlag: 0\n     },\n     {\n      qe: 0x0085,\n      nmps: 40,\n      nlps: 37,\n      switchFlag: 0\n     },\n     {\n      qe: 0x0049,\n      nmps: 41,\n      nlps: 38,\n      switchFlag: 0\n     },\n     {\n      qe: 0x0025,\n      nmps: 42,\n      nlps: 39,\n      switchFlag: 0\n     },\n     {\n      qe: 0x0015,\n      nmps: 43,\n      nlps: 40,\n      switchFlag: 0\n     },\n     {\n      qe: 0x0009,\n      nmps: 44,\n      nlps: 41,\n      switchFlag: 0\n     },\n     {\n      qe: 0x0005,\n      nmps: 45,\n      nlps: 42,\n      switchFlag: 0\n     },\n     {\n      qe: 0x0001,\n      nmps: 45,\n      nlps: 43,\n      switchFlag: 0\n     },\n     {\n      qe: 0x5601,\n      nmps: 46,\n      nlps: 46,\n      switchFlag: 0\n     }\n    ];\n    function ArithmeticDecoder(data, start, end) {\n     this.data = data;\n     this.bp = start;\n     this.dataEnd = end;\n     this.chigh = data[start];\n     this.clow = 0;\n     this.byteIn();\n     this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\n     this.clow = this.clow << 7 & 0xFFFF;\n     this.ct -= 7;\n     this.a = 0x8000;\n    }\n    ArithmeticDecoder.prototype = {\n     byteIn: function ArithmeticDecoder_byteIn() {\n      var data = this.data;\n      var bp = this.bp;\n      if (data[bp] === 0xFF) {\n       var b1 = data[bp + 1];\n       if (b1 > 0x8F) {\n        this.clow += 0xFF00;\n        this.ct = 8;\n       } else {\n        bp++;\n        this.clow += data[bp] << 9;\n        this.ct = 7;\n        this.bp = bp;\n       }\n      } else {\n       bp++;\n       this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\n       this.ct = 8;\n       this.bp = bp;\n      }\n      if (this.clow > 0xFFFF) {\n       this.chigh += this.clow >> 16;\n       this.clow &= 0xFFFF;\n      }\n     },\n     readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n      var cx_index = contexts[pos] >> 1, cx_mps = contexts[pos] & 1;\n      var qeTableIcx = QeTable[cx_index];\n      var qeIcx = qeTableIcx.qe;\n      var d;\n      var a = this.a - qeIcx;\n      if (this.chigh < qeIcx) {\n       if (a < qeIcx) {\n        a = qeIcx;\n        d = cx_mps;\n        cx_index = qeTableIcx.nmps;\n       } else {\n        a = qeIcx;\n        d = 1 ^ cx_mps;\n        if (qeTableIcx.switchFlag === 1) {\n         cx_mps = d;\n        }\n        cx_index = qeTableIcx.nlps;\n       }\n      } else {\n       this.chigh -= qeIcx;\n       if ((a & 0x8000) !== 0) {\n        this.a = a;\n        return cx_mps;\n       }\n       if (a < qeIcx) {\n        d = 1 ^ cx_mps;\n        if (qeTableIcx.switchFlag === 1) {\n         cx_mps = d;\n        }\n        cx_index = qeTableIcx.nlps;\n       } else {\n        d = cx_mps;\n        cx_index = qeTableIcx.nmps;\n       }\n      }\n      do {\n       if (this.ct === 0) {\n        this.byteIn();\n       }\n       a <<= 1;\n       this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\n       this.clow = this.clow << 1 & 0xFFFF;\n       this.ct--;\n      } while ((a & 0x8000) === 0);\n      this.a = a;\n      contexts[pos] = cx_index << 1 | cx_mps;\n      return d;\n     }\n    };\n    return ArithmeticDecoder;\n   }();\n   exports.ArithmeticDecoder = ArithmeticDecoder;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsCoreCharsets = {});\n  }(this, function (exports) {\n   var ISOAdobeCharset = [\n    '.notdef',\n    'space',\n    'exclam',\n    'quotedbl',\n    'numbersign',\n    'dollar',\n    'percent',\n    'ampersand',\n    'quoteright',\n    'parenleft',\n    'parenright',\n    'asterisk',\n    'plus',\n    'comma',\n    'hyphen',\n    'period',\n    'slash',\n    'zero',\n    'one',\n    'two',\n    'three',\n    'four',\n    'five',\n    'six',\n    'seven',\n    'eight',\n    'nine',\n    'colon',\n    'semicolon',\n    'less',\n    'equal',\n    'greater',\n    'question',\n    'at',\n    'A',\n    'B',\n    'C',\n    'D',\n    'E',\n    'F',\n    'G',\n    'H',\n    'I',\n    'J',\n    'K',\n    'L',\n    'M',\n    'N',\n    'O',\n    'P',\n    'Q',\n    'R',\n    'S',\n    'T',\n    'U',\n    'V',\n    'W',\n    'X',\n    'Y',\n    'Z',\n    'bracketleft',\n    'backslash',\n    'bracketright',\n    'asciicircum',\n    'underscore',\n    'quoteleft',\n    'a',\n    'b',\n    'c',\n    'd',\n    'e',\n    'f',\n    'g',\n    'h',\n    'i',\n    'j',\n    'k',\n    'l',\n    'm',\n    'n',\n    'o',\n    'p',\n    'q',\n    'r',\n    's',\n    't',\n    'u',\n    'v',\n    'w',\n    'x',\n    'y',\n    'z',\n    'braceleft',\n    'bar',\n    'braceright',\n    'asciitilde',\n    'exclamdown',\n    'cent',\n    'sterling',\n    'fraction',\n    'yen',\n    'florin',\n    'section',\n    'currency',\n    'quotesingle',\n    'quotedblleft',\n    'guillemotleft',\n    'guilsinglleft',\n    'guilsinglright',\n    'fi',\n    'fl',\n    'endash',\n    'dagger',\n    'daggerdbl',\n    'periodcentered',\n    'paragraph',\n    'bullet',\n    'quotesinglbase',\n    'quotedblbase',\n    'quotedblright',\n    'guillemotright',\n    'ellipsis',\n    'perthousand',\n    'questiondown',\n    'grave',\n    'acute',\n    'circumflex',\n    'tilde',\n    'macron',\n    'breve',\n    'dotaccent',\n    'dieresis',\n    'ring',\n    'cedilla',\n    'hungarumlaut',\n    'ogonek',\n    'caron',\n    'emdash',\n    'AE',\n    'ordfeminine',\n    'Lslash',\n    'Oslash',\n    'OE',\n    'ordmasculine',\n    'ae',\n    'dotlessi',\n    'lslash',\n    'oslash',\n    'oe',\n    'germandbls',\n    'onesuperior',\n    'logicalnot',\n    'mu',\n    'trademark',\n    'Eth',\n    'onehalf',\n    'plusminus',\n    'Thorn',\n    'onequarter',\n    'divide',\n    'brokenbar',\n    'degree',\n    'thorn',\n    'threequarters',\n    'twosuperior',\n    'registered',\n    'minus',\n    'eth',\n    'multiply',\n    'threesuperior',\n    'copyright',\n    'Aacute',\n    'Acircumflex',\n    'Adieresis',\n    'Agrave',\n    'Aring',\n    'Atilde',\n    'Ccedilla',\n    'Eacute',\n    'Ecircumflex',\n    'Edieresis',\n    'Egrave',\n    'Iacute',\n    'Icircumflex',\n    'Idieresis',\n    'Igrave',\n    'Ntilde',\n    'Oacute',\n    'Ocircumflex',\n    'Odieresis',\n    'Ograve',\n    'Otilde',\n    'Scaron',\n    'Uacute',\n    'Ucircumflex',\n    'Udieresis',\n    'Ugrave',\n    'Yacute',\n    'Ydieresis',\n    'Zcaron',\n    'aacute',\n    'acircumflex',\n    'adieresis',\n    'agrave',\n    'aring',\n    'atilde',\n    'ccedilla',\n    'eacute',\n    'ecircumflex',\n    'edieresis',\n    'egrave',\n    'iacute',\n    'icircumflex',\n    'idieresis',\n    'igrave',\n    'ntilde',\n    'oacute',\n    'ocircumflex',\n    'odieresis',\n    'ograve',\n    'otilde',\n    'scaron',\n    'uacute',\n    'ucircumflex',\n    'udieresis',\n    'ugrave',\n    'yacute',\n    'ydieresis',\n    'zcaron'\n   ];\n   var ExpertCharset = [\n    '.notdef',\n    'space',\n    'exclamsmall',\n    'Hungarumlautsmall',\n    'dollaroldstyle',\n    'dollarsuperior',\n    'ampersandsmall',\n    'Acutesmall',\n    'parenleftsuperior',\n    'parenrightsuperior',\n    'twodotenleader',\n    'onedotenleader',\n    'comma',\n    'hyphen',\n    'period',\n    'fraction',\n    'zerooldstyle',\n    'oneoldstyle',\n    'twooldstyle',\n    'threeoldstyle',\n    'fouroldstyle',\n    'fiveoldstyle',\n    'sixoldstyle',\n    'sevenoldstyle',\n    'eightoldstyle',\n    'nineoldstyle',\n    'colon',\n    'semicolon',\n    'commasuperior',\n    'threequartersemdash',\n    'periodsuperior',\n    'questionsmall',\n    'asuperior',\n    'bsuperior',\n    'centsuperior',\n    'dsuperior',\n    'esuperior',\n    'isuperior',\n    'lsuperior',\n    'msuperior',\n    'nsuperior',\n    'osuperior',\n    'rsuperior',\n    'ssuperior',\n    'tsuperior',\n    'ff',\n    'fi',\n    'fl',\n    'ffi',\n    'ffl',\n    'parenleftinferior',\n    'parenrightinferior',\n    'Circumflexsmall',\n    'hyphensuperior',\n    'Gravesmall',\n    'Asmall',\n    'Bsmall',\n    'Csmall',\n    'Dsmall',\n    'Esmall',\n    'Fsmall',\n    'Gsmall',\n    'Hsmall',\n    'Ismall',\n    'Jsmall',\n    'Ksmall',\n    'Lsmall',\n    'Msmall',\n    'Nsmall',\n    'Osmall',\n    'Psmall',\n    'Qsmall',\n    'Rsmall',\n    'Ssmall',\n    'Tsmall',\n    'Usmall',\n    'Vsmall',\n    'Wsmall',\n    'Xsmall',\n    'Ysmall',\n    'Zsmall',\n    'colonmonetary',\n    'onefitted',\n    'rupiah',\n    'Tildesmall',\n    'exclamdownsmall',\n    'centoldstyle',\n    'Lslashsmall',\n    'Scaronsmall',\n    'Zcaronsmall',\n    'Dieresissmall',\n    'Brevesmall',\n    'Caronsmall',\n    'Dotaccentsmall',\n    'Macronsmall',\n    'figuredash',\n    'hypheninferior',\n    'Ogoneksmall',\n    'Ringsmall',\n    'Cedillasmall',\n    'onequarter',\n    'onehalf',\n    'threequarters',\n    'questiondownsmall',\n    'oneeighth',\n    'threeeighths',\n    'fiveeighths',\n    'seveneighths',\n    'onethird',\n    'twothirds',\n    'zerosuperior',\n    'onesuperior',\n    'twosuperior',\n    'threesuperior',\n    'foursuperior',\n    'fivesuperior',\n    'sixsuperior',\n    'sevensuperior',\n    'eightsuperior',\n    'ninesuperior',\n    'zeroinferior',\n    'oneinferior',\n    'twoinferior',\n    'threeinferior',\n    'fourinferior',\n    'fiveinferior',\n    'sixinferior',\n    'seveninferior',\n    'eightinferior',\n    'nineinferior',\n    'centinferior',\n    'dollarinferior',\n    'periodinferior',\n    'commainferior',\n    'Agravesmall',\n    'Aacutesmall',\n    'Acircumflexsmall',\n    'Atildesmall',\n    'Adieresissmall',\n    'Aringsmall',\n    'AEsmall',\n    'Ccedillasmall',\n    'Egravesmall',\n    'Eacutesmall',\n    'Ecircumflexsmall',\n    'Edieresissmall',\n    'Igravesmall',\n    'Iacutesmall',\n    'Icircumflexsmall',\n    'Idieresissmall',\n    'Ethsmall',\n    'Ntildesmall',\n    'Ogravesmall',\n    'Oacutesmall',\n    'Ocircumflexsmall',\n    'Otildesmall',\n    'Odieresissmall',\n    'OEsmall',\n    'Oslashsmall',\n    'Ugravesmall',\n    'Uacutesmall',\n    'Ucircumflexsmall',\n    'Udieresissmall',\n    'Yacutesmall',\n    'Thornsmall',\n    'Ydieresissmall'\n   ];\n   var ExpertSubsetCharset = [\n    '.notdef',\n    'space',\n    'dollaroldstyle',\n    'dollarsuperior',\n    'parenleftsuperior',\n    'parenrightsuperior',\n    'twodotenleader',\n    'onedotenleader',\n    'comma',\n    'hyphen',\n    'period',\n    'fraction',\n    'zerooldstyle',\n    'oneoldstyle',\n    'twooldstyle',\n    'threeoldstyle',\n    'fouroldstyle',\n    'fiveoldstyle',\n    'sixoldstyle',\n    'sevenoldstyle',\n    'eightoldstyle',\n    'nineoldstyle',\n    'colon',\n    'semicolon',\n    'commasuperior',\n    'threequartersemdash',\n    'periodsuperior',\n    'asuperior',\n    'bsuperior',\n    'centsuperior',\n    'dsuperior',\n    'esuperior',\n    'isuperior',\n    'lsuperior',\n    'msuperior',\n    'nsuperior',\n    'osuperior',\n    'rsuperior',\n    'ssuperior',\n    'tsuperior',\n    'ff',\n    'fi',\n    'fl',\n    'ffi',\n    'ffl',\n    'parenleftinferior',\n    'parenrightinferior',\n    'hyphensuperior',\n    'colonmonetary',\n    'onefitted',\n    'rupiah',\n    'centoldstyle',\n    'figuredash',\n    'hypheninferior',\n    'onequarter',\n    'onehalf',\n    'threequarters',\n    'oneeighth',\n    'threeeighths',\n    'fiveeighths',\n    'seveneighths',\n    'onethird',\n    'twothirds',\n    'zerosuperior',\n    'onesuperior',\n    'twosuperior',\n    'threesuperior',\n    'foursuperior',\n    'fivesuperior',\n    'sixsuperior',\n    'sevensuperior',\n    'eightsuperior',\n    'ninesuperior',\n    'zeroinferior',\n    'oneinferior',\n    'twoinferior',\n    'threeinferior',\n    'fourinferior',\n    'fiveinferior',\n    'sixinferior',\n    'seveninferior',\n    'eightinferior',\n    'nineinferior',\n    'centinferior',\n    'dollarinferior',\n    'periodinferior',\n    'commainferior'\n   ];\n   exports.ISOAdobeCharset = ISOAdobeCharset;\n   exports.ExpertCharset = ExpertCharset;\n   exports.ExpertSubsetCharset = ExpertSubsetCharset;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsCoreEncodings = {});\n  }(this, function (exports) {\n   var ExpertEncoding = [\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    'space',\n    'exclamsmall',\n    'Hungarumlautsmall',\n    '',\n    'dollaroldstyle',\n    'dollarsuperior',\n    'ampersandsmall',\n    'Acutesmall',\n    'parenleftsuperior',\n    'parenrightsuperior',\n    'twodotenleader',\n    'onedotenleader',\n    'comma',\n    'hyphen',\n    'period',\n    'fraction',\n    'zerooldstyle',\n    'oneoldstyle',\n    'twooldstyle',\n    'threeoldstyle',\n    'fouroldstyle',\n    'fiveoldstyle',\n    'sixoldstyle',\n    'sevenoldstyle',\n    'eightoldstyle',\n    'nineoldstyle',\n    'colon',\n    'semicolon',\n    'commasuperior',\n    'threequartersemdash',\n    'periodsuperior',\n    'questionsmall',\n    '',\n    'asuperior',\n    'bsuperior',\n    'centsuperior',\n    'dsuperior',\n    'esuperior',\n    '',\n    '',\n    'isuperior',\n    '',\n    '',\n    'lsuperior',\n    'msuperior',\n    'nsuperior',\n    'osuperior',\n    '',\n    '',\n    'rsuperior',\n    'ssuperior',\n    'tsuperior',\n    '',\n    'ff',\n    'fi',\n    'fl',\n    'ffi',\n    'ffl',\n    'parenleftinferior',\n    '',\n    'parenrightinferior',\n    'Circumflexsmall',\n    'hyphensuperior',\n    'Gravesmall',\n    'Asmall',\n    'Bsmall',\n    'Csmall',\n    'Dsmall',\n    'Esmall',\n    'Fsmall',\n    'Gsmall',\n    'Hsmall',\n    'Ismall',\n    'Jsmall',\n    'Ksmall',\n    'Lsmall',\n    'Msmall',\n    'Nsmall',\n    'Osmall',\n    'Psmall',\n    'Qsmall',\n    'Rsmall',\n    'Ssmall',\n    'Tsmall',\n    'Usmall',\n    'Vsmall',\n    'Wsmall',\n    'Xsmall',\n    'Ysmall',\n    'Zsmall',\n    'colonmonetary',\n    'onefitted',\n    'rupiah',\n    'Tildesmall',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    'exclamdownsmall',\n    'centoldstyle',\n    'Lslashsmall',\n    '',\n    '',\n    'Scaronsmall',\n    'Zcaronsmall',\n    'Dieresissmall',\n    'Brevesmall',\n    'Caronsmall',\n    '',\n    'Dotaccentsmall',\n    '',\n    '',\n    'Macronsmall',\n    '',\n    '',\n    'figuredash',\n    'hypheninferior',\n    '',\n    '',\n    'Ogoneksmall',\n    'Ringsmall',\n    'Cedillasmall',\n    '',\n    '',\n    '',\n    'onequarter',\n    'onehalf',\n    'threequarters',\n    'questiondownsmall',\n    'oneeighth',\n    'threeeighths',\n    'fiveeighths',\n    'seveneighths',\n    'onethird',\n    'twothirds',\n    '',\n    '',\n    'zerosuperior',\n    'onesuperior',\n    'twosuperior',\n    'threesuperior',\n    'foursuperior',\n    'fivesuperior',\n    'sixsuperior',\n    'sevensuperior',\n    'eightsuperior',\n    'ninesuperior',\n    'zeroinferior',\n    'oneinferior',\n    'twoinferior',\n    'threeinferior',\n    'fourinferior',\n    'fiveinferior',\n    'sixinferior',\n    'seveninferior',\n    'eightinferior',\n    'nineinferior',\n    'centinferior',\n    'dollarinferior',\n    'periodinferior',\n    'commainferior',\n    'Agravesmall',\n    'Aacutesmall',\n    'Acircumflexsmall',\n    'Atildesmall',\n    'Adieresissmall',\n    'Aringsmall',\n    'AEsmall',\n    'Ccedillasmall',\n    'Egravesmall',\n    'Eacutesmall',\n    'Ecircumflexsmall',\n    'Edieresissmall',\n    'Igravesmall',\n    'Iacutesmall',\n    'Icircumflexsmall',\n    'Idieresissmall',\n    'Ethsmall',\n    'Ntildesmall',\n    'Ogravesmall',\n    'Oacutesmall',\n    'Ocircumflexsmall',\n    'Otildesmall',\n    'Odieresissmall',\n    'OEsmall',\n    'Oslashsmall',\n    'Ugravesmall',\n    'Uacutesmall',\n    'Ucircumflexsmall',\n    'Udieresissmall',\n    'Yacutesmall',\n    'Thornsmall',\n    'Ydieresissmall'\n   ];\n   var MacExpertEncoding = [\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    'space',\n    'exclamsmall',\n    'Hungarumlautsmall',\n    'centoldstyle',\n    'dollaroldstyle',\n    'dollarsuperior',\n    'ampersandsmall',\n    'Acutesmall',\n    'parenleftsuperior',\n    'parenrightsuperior',\n    'twodotenleader',\n    'onedotenleader',\n    'comma',\n    'hyphen',\n    'period',\n    'fraction',\n    'zerooldstyle',\n    'oneoldstyle',\n    'twooldstyle',\n    'threeoldstyle',\n    'fouroldstyle',\n    'fiveoldstyle',\n    'sixoldstyle',\n    'sevenoldstyle',\n    'eightoldstyle',\n    'nineoldstyle',\n    'colon',\n    'semicolon',\n    '',\n    'threequartersemdash',\n    '',\n    'questionsmall',\n    '',\n    '',\n    '',\n    '',\n    'Ethsmall',\n    '',\n    '',\n    'onequarter',\n    'onehalf',\n    'threequarters',\n    'oneeighth',\n    'threeeighths',\n    'fiveeighths',\n    'seveneighths',\n    'onethird',\n    'twothirds',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    'ff',\n    'fi',\n    'fl',\n    'ffi',\n    'ffl',\n    'parenleftinferior',\n    '',\n    'parenrightinferior',\n    'Circumflexsmall',\n    'hypheninferior',\n    'Gravesmall',\n    'Asmall',\n    'Bsmall',\n    'Csmall',\n    'Dsmall',\n    'Esmall',\n    'Fsmall',\n    'Gsmall',\n    'Hsmall',\n    'Ismall',\n    'Jsmall',\n    'Ksmall',\n    'Lsmall',\n    'Msmall',\n    'Nsmall',\n    'Osmall',\n    'Psmall',\n    'Qsmall',\n    'Rsmall',\n    'Ssmall',\n    'Tsmall',\n    'Usmall',\n    'Vsmall',\n    'Wsmall',\n    'Xsmall',\n    'Ysmall',\n    'Zsmall',\n    'colonmonetary',\n    'onefitted',\n    'rupiah',\n    'Tildesmall',\n    '',\n    '',\n    'asuperior',\n    'centsuperior',\n    '',\n    '',\n    '',\n    '',\n    'Aacutesmall',\n    'Agravesmall',\n    'Acircumflexsmall',\n    'Adieresissmall',\n    'Atildesmall',\n    'Aringsmall',\n    'Ccedillasmall',\n    'Eacutesmall',\n    'Egravesmall',\n    'Ecircumflexsmall',\n    'Edieresissmall',\n    'Iacutesmall',\n    'Igravesmall',\n    'Icircumflexsmall',\n    'Idieresissmall',\n    'Ntildesmall',\n    'Oacutesmall',\n    'Ogravesmall',\n    'Ocircumflexsmall',\n    'Odieresissmall',\n    'Otildesmall',\n    'Uacutesmall',\n    'Ugravesmall',\n    'Ucircumflexsmall',\n    'Udieresissmall',\n    '',\n    'eightsuperior',\n    'fourinferior',\n    'threeinferior',\n    'sixinferior',\n    'eightinferior',\n    'seveninferior',\n    'Scaronsmall',\n    '',\n    'centinferior',\n    'twoinferior',\n    '',\n    'Dieresissmall',\n    '',\n    'Caronsmall',\n    'osuperior',\n    'fiveinferior',\n    '',\n    'commainferior',\n    'periodinferior',\n    'Yacutesmall',\n    '',\n    'dollarinferior',\n    '',\n    'Thornsmall',\n    '',\n    'nineinferior',\n    'zeroinferior',\n    'Zcaronsmall',\n    'AEsmall',\n    'Oslashsmall',\n    'questiondownsmall',\n    'oneinferior',\n    'Lslashsmall',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    'Cedillasmall',\n    '',\n    '',\n    '',\n    '',\n    '',\n    'OEsmall',\n    'figuredash',\n    'hyphensuperior',\n    '',\n    '',\n    '',\n    '',\n    'exclamdownsmall',\n    '',\n    'Ydieresissmall',\n    '',\n    'onesuperior',\n    'twosuperior',\n    'threesuperior',\n    'foursuperior',\n    'fivesuperior',\n    'sixsuperior',\n    'sevensuperior',\n    'ninesuperior',\n    'zerosuperior',\n    '',\n    'esuperior',\n    'rsuperior',\n    'tsuperior',\n    '',\n    '',\n    'isuperior',\n    'ssuperior',\n    'dsuperior',\n    '',\n    '',\n    '',\n    '',\n    '',\n    'lsuperior',\n    'Ogoneksmall',\n    'Brevesmall',\n    'Macronsmall',\n    'bsuperior',\n    'nsuperior',\n    'msuperior',\n    'commasuperior',\n    'periodsuperior',\n    'Dotaccentsmall',\n    'Ringsmall'\n   ];\n   var MacRomanEncoding = [\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    'space',\n    'exclam',\n    'quotedbl',\n    'numbersign',\n    'dollar',\n    'percent',\n    'ampersand',\n    'quotesingle',\n    'parenleft',\n    'parenright',\n    'asterisk',\n    'plus',\n    'comma',\n    'hyphen',\n    'period',\n    'slash',\n    'zero',\n    'one',\n    'two',\n    'three',\n    'four',\n    'five',\n    'six',\n    'seven',\n    'eight',\n    'nine',\n    'colon',\n    'semicolon',\n    'less',\n    'equal',\n    'greater',\n    'question',\n    'at',\n    'A',\n    'B',\n    'C',\n    'D',\n    'E',\n    'F',\n    'G',\n    'H',\n    'I',\n    'J',\n    'K',\n    'L',\n    'M',\n    'N',\n    'O',\n    'P',\n    'Q',\n    'R',\n    'S',\n    'T',\n    'U',\n    'V',\n    'W',\n    'X',\n    'Y',\n    'Z',\n    'bracketleft',\n    'backslash',\n    'bracketright',\n    'asciicircum',\n    'underscore',\n    'grave',\n    'a',\n    'b',\n    'c',\n    'd',\n    'e',\n    'f',\n    'g',\n    'h',\n    'i',\n    'j',\n    'k',\n    'l',\n    'm',\n    'n',\n    'o',\n    'p',\n    'q',\n    'r',\n    's',\n    't',\n    'u',\n    'v',\n    'w',\n    'x',\n    'y',\n    'z',\n    'braceleft',\n    'bar',\n    'braceright',\n    'asciitilde',\n    '',\n    'Adieresis',\n    'Aring',\n    'Ccedilla',\n    'Eacute',\n    'Ntilde',\n    'Odieresis',\n    'Udieresis',\n    'aacute',\n    'agrave',\n    'acircumflex',\n    'adieresis',\n    'atilde',\n    'aring',\n    'ccedilla',\n    'eacute',\n    'egrave',\n    'ecircumflex',\n    'edieresis',\n    'iacute',\n    'igrave',\n    'icircumflex',\n    'idieresis',\n    'ntilde',\n    'oacute',\n    'ograve',\n    'ocircumflex',\n    'odieresis',\n    'otilde',\n    'uacute',\n    'ugrave',\n    'ucircumflex',\n    'udieresis',\n    'dagger',\n    'degree',\n    'cent',\n    'sterling',\n    'section',\n    'bullet',\n    'paragraph',\n    'germandbls',\n    'registered',\n    'copyright',\n    'trademark',\n    'acute',\n    'dieresis',\n    'notequal',\n    'AE',\n    'Oslash',\n    'infinity',\n    'plusminus',\n    'lessequal',\n    'greaterequal',\n    'yen',\n    'mu',\n    'partialdiff',\n    'summation',\n    'product',\n    'pi',\n    'integral',\n    'ordfeminine',\n    'ordmasculine',\n    'Omega',\n    'ae',\n    'oslash',\n    'questiondown',\n    'exclamdown',\n    'logicalnot',\n    'radical',\n    'florin',\n    'approxequal',\n    'Delta',\n    'guillemotleft',\n    'guillemotright',\n    'ellipsis',\n    'space',\n    'Agrave',\n    'Atilde',\n    'Otilde',\n    'OE',\n    'oe',\n    'endash',\n    'emdash',\n    'quotedblleft',\n    'quotedblright',\n    'quoteleft',\n    'quoteright',\n    'divide',\n    'lozenge',\n    'ydieresis',\n    'Ydieresis',\n    'fraction',\n    'currency',\n    'guilsinglleft',\n    'guilsinglright',\n    'fi',\n    'fl',\n    'daggerdbl',\n    'periodcentered',\n    'quotesinglbase',\n    'quotedblbase',\n    'perthousand',\n    'Acircumflex',\n    'Ecircumflex',\n    'Aacute',\n    'Edieresis',\n    'Egrave',\n    'Iacute',\n    'Icircumflex',\n    'Idieresis',\n    'Igrave',\n    'Oacute',\n    'Ocircumflex',\n    'apple',\n    'Ograve',\n    'Uacute',\n    'Ucircumflex',\n    'Ugrave',\n    'dotlessi',\n    'circumflex',\n    'tilde',\n    'macron',\n    'breve',\n    'dotaccent',\n    'ring',\n    'cedilla',\n    'hungarumlaut',\n    'ogonek',\n    'caron'\n   ];\n   var StandardEncoding = [\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    'space',\n    'exclam',\n    'quotedbl',\n    'numbersign',\n    'dollar',\n    'percent',\n    'ampersand',\n    'quoteright',\n    'parenleft',\n    'parenright',\n    'asterisk',\n    'plus',\n    'comma',\n    'hyphen',\n    'period',\n    'slash',\n    'zero',\n    'one',\n    'two',\n    'three',\n    'four',\n    'five',\n    'six',\n    'seven',\n    'eight',\n    'nine',\n    'colon',\n    'semicolon',\n    'less',\n    'equal',\n    'greater',\n    'question',\n    'at',\n    'A',\n    'B',\n    'C',\n    'D',\n    'E',\n    'F',\n    'G',\n    'H',\n    'I',\n    'J',\n    'K',\n    'L',\n    'M',\n    'N',\n    'O',\n    'P',\n    'Q',\n    'R',\n    'S',\n    'T',\n    'U',\n    'V',\n    'W',\n    'X',\n    'Y',\n    'Z',\n    'bracketleft',\n    'backslash',\n    'bracketright',\n    'asciicircum',\n    'underscore',\n    'quoteleft',\n    'a',\n    'b',\n    'c',\n    'd',\n    'e',\n    'f',\n    'g',\n    'h',\n    'i',\n    'j',\n    'k',\n    'l',\n    'm',\n    'n',\n    'o',\n    'p',\n    'q',\n    'r',\n    's',\n    't',\n    'u',\n    'v',\n    'w',\n    'x',\n    'y',\n    'z',\n    'braceleft',\n    'bar',\n    'braceright',\n    'asciitilde',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    'exclamdown',\n    'cent',\n    'sterling',\n    'fraction',\n    'yen',\n    'florin',\n    'section',\n    'currency',\n    'quotesingle',\n    'quotedblleft',\n    'guillemotleft',\n    'guilsinglleft',\n    'guilsinglright',\n    'fi',\n    'fl',\n    '',\n    'endash',\n    'dagger',\n    'daggerdbl',\n    'periodcentered',\n    '',\n    'paragraph',\n    'bullet',\n    'quotesinglbase',\n    'quotedblbase',\n    'quotedblright',\n    'guillemotright',\n    'ellipsis',\n    'perthousand',\n    '',\n    'questiondown',\n    '',\n    'grave',\n    'acute',\n    'circumflex',\n    'tilde',\n    'macron',\n    'breve',\n    'dotaccent',\n    'dieresis',\n    '',\n    'ring',\n    'cedilla',\n    '',\n    'hungarumlaut',\n    'ogonek',\n    'caron',\n    'emdash',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    'AE',\n    '',\n    'ordfeminine',\n    '',\n    '',\n    '',\n    '',\n    'Lslash',\n    'Oslash',\n    'OE',\n    'ordmasculine',\n    '',\n    '',\n    '',\n    '',\n    '',\n    'ae',\n    '',\n    '',\n    '',\n    'dotlessi',\n    '',\n    '',\n    'lslash',\n    'oslash',\n    'oe',\n    'germandbls'\n   ];\n   var WinAnsiEncoding = [\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    'space',\n    'exclam',\n    'quotedbl',\n    'numbersign',\n    'dollar',\n    'percent',\n    'ampersand',\n    'quotesingle',\n    'parenleft',\n    'parenright',\n    'asterisk',\n    'plus',\n    'comma',\n    'hyphen',\n    'period',\n    'slash',\n    'zero',\n    'one',\n    'two',\n    'three',\n    'four',\n    'five',\n    'six',\n    'seven',\n    'eight',\n    'nine',\n    'colon',\n    'semicolon',\n    'less',\n    'equal',\n    'greater',\n    'question',\n    'at',\n    'A',\n    'B',\n    'C',\n    'D',\n    'E',\n    'F',\n    'G',\n    'H',\n    'I',\n    'J',\n    'K',\n    'L',\n    'M',\n    'N',\n    'O',\n    'P',\n    'Q',\n    'R',\n    'S',\n    'T',\n    'U',\n    'V',\n    'W',\n    'X',\n    'Y',\n    'Z',\n    'bracketleft',\n    'backslash',\n    'bracketright',\n    'asciicircum',\n    'underscore',\n    'grave',\n    'a',\n    'b',\n    'c',\n    'd',\n    'e',\n    'f',\n    'g',\n    'h',\n    'i',\n    'j',\n    'k',\n    'l',\n    'm',\n    'n',\n    'o',\n    'p',\n    'q',\n    'r',\n    's',\n    't',\n    'u',\n    'v',\n    'w',\n    'x',\n    'y',\n    'z',\n    'braceleft',\n    'bar',\n    'braceright',\n    'asciitilde',\n    'bullet',\n    'Euro',\n    'bullet',\n    'quotesinglbase',\n    'florin',\n    'quotedblbase',\n    'ellipsis',\n    'dagger',\n    'daggerdbl',\n    'circumflex',\n    'perthousand',\n    'Scaron',\n    'guilsinglleft',\n    'OE',\n    'bullet',\n    'Zcaron',\n    'bullet',\n    'bullet',\n    'quoteleft',\n    'quoteright',\n    'quotedblleft',\n    'quotedblright',\n    'bullet',\n    'endash',\n    'emdash',\n    'tilde',\n    'trademark',\n    'scaron',\n    'guilsinglright',\n    'oe',\n    'bullet',\n    'zcaron',\n    'Ydieresis',\n    'space',\n    'exclamdown',\n    'cent',\n    'sterling',\n    'currency',\n    'yen',\n    'brokenbar',\n    'section',\n    'dieresis',\n    'copyright',\n    'ordfeminine',\n    'guillemotleft',\n    'logicalnot',\n    'hyphen',\n    'registered',\n    'macron',\n    'degree',\n    'plusminus',\n    'twosuperior',\n    'threesuperior',\n    'acute',\n    'mu',\n    'paragraph',\n    'periodcentered',\n    'cedilla',\n    'onesuperior',\n    'ordmasculine',\n    'guillemotright',\n    'onequarter',\n    'onehalf',\n    'threequarters',\n    'questiondown',\n    'Agrave',\n    'Aacute',\n    'Acircumflex',\n    'Atilde',\n    'Adieresis',\n    'Aring',\n    'AE',\n    'Ccedilla',\n    'Egrave',\n    'Eacute',\n    'Ecircumflex',\n    'Edieresis',\n    'Igrave',\n    'Iacute',\n    'Icircumflex',\n    'Idieresis',\n    'Eth',\n    'Ntilde',\n    'Ograve',\n    'Oacute',\n    'Ocircumflex',\n    'Otilde',\n    'Odieresis',\n    'multiply',\n    'Oslash',\n    'Ugrave',\n    'Uacute',\n    'Ucircumflex',\n    'Udieresis',\n    'Yacute',\n    'Thorn',\n    'germandbls',\n    'agrave',\n    'aacute',\n    'acircumflex',\n    'atilde',\n    'adieresis',\n    'aring',\n    'ae',\n    'ccedilla',\n    'egrave',\n    'eacute',\n    'ecircumflex',\n    'edieresis',\n    'igrave',\n    'iacute',\n    'icircumflex',\n    'idieresis',\n    'eth',\n    'ntilde',\n    'ograve',\n    'oacute',\n    'ocircumflex',\n    'otilde',\n    'odieresis',\n    'divide',\n    'oslash',\n    'ugrave',\n    'uacute',\n    'ucircumflex',\n    'udieresis',\n    'yacute',\n    'thorn',\n    'ydieresis'\n   ];\n   var SymbolSetEncoding = [\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    'space',\n    'exclam',\n    'universal',\n    'numbersign',\n    'existential',\n    'percent',\n    'ampersand',\n    'suchthat',\n    'parenleft',\n    'parenright',\n    'asteriskmath',\n    'plus',\n    'comma',\n    'minus',\n    'period',\n    'slash',\n    'zero',\n    'one',\n    'two',\n    'three',\n    'four',\n    'five',\n    'six',\n    'seven',\n    'eight',\n    'nine',\n    'colon',\n    'semicolon',\n    'less',\n    'equal',\n    'greater',\n    'question',\n    'congruent',\n    'Alpha',\n    'Beta',\n    'Chi',\n    'Delta',\n    'Epsilon',\n    'Phi',\n    'Gamma',\n    'Eta',\n    'Iota',\n    'theta1',\n    'Kappa',\n    'Lambda',\n    'Mu',\n    'Nu',\n    'Omicron',\n    'Pi',\n    'Theta',\n    'Rho',\n    'Sigma',\n    'Tau',\n    'Upsilon',\n    'sigma1',\n    'Omega',\n    'Xi',\n    'Psi',\n    'Zeta',\n    'bracketleft',\n    'therefore',\n    'bracketright',\n    'perpendicular',\n    'underscore',\n    'radicalex',\n    'alpha',\n    'beta',\n    'chi',\n    'delta',\n    'epsilon',\n    'phi',\n    'gamma',\n    'eta',\n    'iota',\n    'phi1',\n    'kappa',\n    'lambda',\n    'mu',\n    'nu',\n    'omicron',\n    'pi',\n    'theta',\n    'rho',\n    'sigma',\n    'tau',\n    'upsilon',\n    'omega1',\n    'omega',\n    'xi',\n    'psi',\n    'zeta',\n    'braceleft',\n    'bar',\n    'braceright',\n    'similar',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    'Euro',\n    'Upsilon1',\n    'minute',\n    'lessequal',\n    'fraction',\n    'infinity',\n    'florin',\n    'club',\n    'diamond',\n    'heart',\n    'spade',\n    'arrowboth',\n    'arrowleft',\n    'arrowup',\n    'arrowright',\n    'arrowdown',\n    'degree',\n    'plusminus',\n    'second',\n    'greaterequal',\n    'multiply',\n    'proportional',\n    'partialdiff',\n    'bullet',\n    'divide',\n    'notequal',\n    'equivalence',\n    'approxequal',\n    'ellipsis',\n    'arrowvertex',\n    'arrowhorizex',\n    'carriagereturn',\n    'aleph',\n    'Ifraktur',\n    'Rfraktur',\n    'weierstrass',\n    'circlemultiply',\n    'circleplus',\n    'emptyset',\n    'intersection',\n    'union',\n    'propersuperset',\n    'reflexsuperset',\n    'notsubset',\n    'propersubset',\n    'reflexsubset',\n    'element',\n    'notelement',\n    'angle',\n    'gradient',\n    'registerserif',\n    'copyrightserif',\n    'trademarkserif',\n    'product',\n    'radical',\n    'dotmath',\n    'logicalnot',\n    'logicaland',\n    'logicalor',\n    'arrowdblboth',\n    'arrowdblleft',\n    'arrowdblup',\n    'arrowdblright',\n    'arrowdbldown',\n    'lozenge',\n    'angleleft',\n    'registersans',\n    'copyrightsans',\n    'trademarksans',\n    'summation',\n    'parenlefttp',\n    'parenleftex',\n    'parenleftbt',\n    'bracketlefttp',\n    'bracketleftex',\n    'bracketleftbt',\n    'bracelefttp',\n    'braceleftmid',\n    'braceleftbt',\n    'braceex',\n    '',\n    'angleright',\n    'integral',\n    'integraltp',\n    'integralex',\n    'integralbt',\n    'parenrighttp',\n    'parenrightex',\n    'parenrightbt',\n    'bracketrighttp',\n    'bracketrightex',\n    'bracketrightbt',\n    'bracerighttp',\n    'bracerightmid',\n    'bracerightbt'\n   ];\n   var ZapfDingbatsEncoding = [\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    'space',\n    'a1',\n    'a2',\n    'a202',\n    'a3',\n    'a4',\n    'a5',\n    'a119',\n    'a118',\n    'a117',\n    'a11',\n    'a12',\n    'a13',\n    'a14',\n    'a15',\n    'a16',\n    'a105',\n    'a17',\n    'a18',\n    'a19',\n    'a20',\n    'a21',\n    'a22',\n    'a23',\n    'a24',\n    'a25',\n    'a26',\n    'a27',\n    'a28',\n    'a6',\n    'a7',\n    'a8',\n    'a9',\n    'a10',\n    'a29',\n    'a30',\n    'a31',\n    'a32',\n    'a33',\n    'a34',\n    'a35',\n    'a36',\n    'a37',\n    'a38',\n    'a39',\n    'a40',\n    'a41',\n    'a42',\n    'a43',\n    'a44',\n    'a45',\n    'a46',\n    'a47',\n    'a48',\n    'a49',\n    'a50',\n    'a51',\n    'a52',\n    'a53',\n    'a54',\n    'a55',\n    'a56',\n    'a57',\n    'a58',\n    'a59',\n    'a60',\n    'a61',\n    'a62',\n    'a63',\n    'a64',\n    'a65',\n    'a66',\n    'a67',\n    'a68',\n    'a69',\n    'a70',\n    'a71',\n    'a72',\n    'a73',\n    'a74',\n    'a203',\n    'a75',\n    'a204',\n    'a76',\n    'a77',\n    'a78',\n    'a79',\n    'a81',\n    'a82',\n    'a83',\n    'a84',\n    'a97',\n    'a98',\n    'a99',\n    'a100',\n    '',\n    'a89',\n    'a90',\n    'a93',\n    'a94',\n    'a91',\n    'a92',\n    'a205',\n    'a85',\n    'a206',\n    'a86',\n    'a87',\n    'a88',\n    'a95',\n    'a96',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    'a101',\n    'a102',\n    'a103',\n    'a104',\n    'a106',\n    'a107',\n    'a108',\n    'a112',\n    'a111',\n    'a110',\n    'a109',\n    'a120',\n    'a121',\n    'a122',\n    'a123',\n    'a124',\n    'a125',\n    'a126',\n    'a127',\n    'a128',\n    'a129',\n    'a130',\n    'a131',\n    'a132',\n    'a133',\n    'a134',\n    'a135',\n    'a136',\n    'a137',\n    'a138',\n    'a139',\n    'a140',\n    'a141',\n    'a142',\n    'a143',\n    'a144',\n    'a145',\n    'a146',\n    'a147',\n    'a148',\n    'a149',\n    'a150',\n    'a151',\n    'a152',\n    'a153',\n    'a154',\n    'a155',\n    'a156',\n    'a157',\n    'a158',\n    'a159',\n    'a160',\n    'a161',\n    'a163',\n    'a164',\n    'a196',\n    'a165',\n    'a192',\n    'a166',\n    'a167',\n    'a168',\n    'a169',\n    'a170',\n    'a171',\n    'a172',\n    'a173',\n    'a162',\n    'a174',\n    'a175',\n    'a176',\n    'a177',\n    'a178',\n    'a179',\n    'a193',\n    'a180',\n    'a199',\n    'a181',\n    'a200',\n    'a182',\n    '',\n    'a201',\n    'a183',\n    'a184',\n    'a197',\n    'a185',\n    'a194',\n    'a198',\n    'a186',\n    'a195',\n    'a187',\n    'a188',\n    'a189',\n    'a190',\n    'a191'\n   ];\n   function getEncoding(encodingName) {\n    switch (encodingName) {\n    case 'WinAnsiEncoding':\n     return WinAnsiEncoding;\n    case 'StandardEncoding':\n     return StandardEncoding;\n    case 'MacRomanEncoding':\n     return MacRomanEncoding;\n    case 'SymbolSetEncoding':\n     return SymbolSetEncoding;\n    case 'ZapfDingbatsEncoding':\n     return ZapfDingbatsEncoding;\n    case 'ExpertEncoding':\n     return ExpertEncoding;\n    case 'MacExpertEncoding':\n     return MacExpertEncoding;\n    default:\n     return null;\n    }\n   }\n   exports.WinAnsiEncoding = WinAnsiEncoding;\n   exports.StandardEncoding = StandardEncoding;\n   exports.MacRomanEncoding = MacRomanEncoding;\n   exports.SymbolSetEncoding = SymbolSetEncoding;\n   exports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\n   exports.ExpertEncoding = ExpertEncoding;\n   exports.getEncoding = getEncoding;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsSharedUtil = {});\n  }(this, function (exports) {\n   var globalScope = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this;\n   var FONT_IDENTITY_MATRIX = [\n    0.001,\n    0,\n    0,\n    0.001,\n    0,\n    0\n   ];\n   var TextRenderingMode = {\n    FILL: 0,\n    STROKE: 1,\n    FILL_STROKE: 2,\n    INVISIBLE: 3,\n    FILL_ADD_TO_PATH: 4,\n    STROKE_ADD_TO_PATH: 5,\n    FILL_STROKE_ADD_TO_PATH: 6,\n    ADD_TO_PATH: 7,\n    FILL_STROKE_MASK: 3,\n    ADD_TO_PATH_FLAG: 4\n   };\n   var ImageKind = {\n    GRAYSCALE_1BPP: 1,\n    RGB_24BPP: 2,\n    RGBA_32BPP: 3\n   };\n   var AnnotationType = {\n    TEXT: 1,\n    LINK: 2,\n    FREETEXT: 3,\n    LINE: 4,\n    SQUARE: 5,\n    CIRCLE: 6,\n    POLYGON: 7,\n    POLYLINE: 8,\n    HIGHLIGHT: 9,\n    UNDERLINE: 10,\n    SQUIGGLY: 11,\n    STRIKEOUT: 12,\n    STAMP: 13,\n    CARET: 14,\n    INK: 15,\n    POPUP: 16,\n    FILEATTACHMENT: 17,\n    SOUND: 18,\n    MOVIE: 19,\n    WIDGET: 20,\n    SCREEN: 21,\n    PRINTERMARK: 22,\n    TRAPNET: 23,\n    WATERMARK: 24,\n    THREED: 25,\n    REDACT: 26\n   };\n   var AnnotationFlag = {\n    INVISIBLE: 0x01,\n    HIDDEN: 0x02,\n    PRINT: 0x04,\n    NOZOOM: 0x08,\n    NOROTATE: 0x10,\n    NOVIEW: 0x20,\n    READONLY: 0x40,\n    LOCKED: 0x80,\n    TOGGLENOVIEW: 0x100,\n    LOCKEDCONTENTS: 0x200\n   };\n   var AnnotationFieldFlag = {\n    READONLY: 0x0000001,\n    REQUIRED: 0x0000002,\n    NOEXPORT: 0x0000004,\n    MULTILINE: 0x0001000,\n    PASSWORD: 0x0002000,\n    NOTOGGLETOOFF: 0x0004000,\n    RADIO: 0x0008000,\n    PUSHBUTTON: 0x0010000,\n    COMBO: 0x0020000,\n    EDIT: 0x0040000,\n    SORT: 0x0080000,\n    FILESELECT: 0x0100000,\n    MULTISELECT: 0x0200000,\n    DONOTSPELLCHECK: 0x0400000,\n    DONOTSCROLL: 0x0800000,\n    COMB: 0x1000000,\n    RICHTEXT: 0x2000000,\n    RADIOSINUNISON: 0x2000000,\n    COMMITONSELCHANGE: 0x4000000\n   };\n   var AnnotationBorderStyleType = {\n    SOLID: 1,\n    DASHED: 2,\n    BEVELED: 3,\n    INSET: 4,\n    UNDERLINE: 5\n   };\n   var StreamType = {\n    UNKNOWN: 0,\n    FLATE: 1,\n    LZW: 2,\n    DCT: 3,\n    JPX: 4,\n    JBIG: 5,\n    A85: 6,\n    AHX: 7,\n    CCF: 8,\n    RL: 9\n   };\n   var FontType = {\n    UNKNOWN: 0,\n    TYPE1: 1,\n    TYPE1C: 2,\n    CIDFONTTYPE0: 3,\n    CIDFONTTYPE0C: 4,\n    TRUETYPE: 5,\n    CIDFONTTYPE2: 6,\n    TYPE3: 7,\n    OPENTYPE: 8,\n    TYPE0: 9,\n    MMTYPE1: 10\n   };\n   var VERBOSITY_LEVELS = {\n    errors: 0,\n    warnings: 1,\n    infos: 5\n   };\n   var OPS = {\n    dependency: 1,\n    setLineWidth: 2,\n    setLineCap: 3,\n    setLineJoin: 4,\n    setMiterLimit: 5,\n    setDash: 6,\n    setRenderingIntent: 7,\n    setFlatness: 8,\n    setGState: 9,\n    save: 10,\n    restore: 11,\n    transform: 12,\n    moveTo: 13,\n    lineTo: 14,\n    curveTo: 15,\n    curveTo2: 16,\n    curveTo3: 17,\n    closePath: 18,\n    rectangle: 19,\n    stroke: 20,\n    closeStroke: 21,\n    fill: 22,\n    eoFill: 23,\n    fillStroke: 24,\n    eoFillStroke: 25,\n    closeFillStroke: 26,\n    closeEOFillStroke: 27,\n    endPath: 28,\n    clip: 29,\n    eoClip: 30,\n    beginText: 31,\n    endText: 32,\n    setCharSpacing: 33,\n    setWordSpacing: 34,\n    setHScale: 35,\n    setLeading: 36,\n    setFont: 37,\n    setTextRenderingMode: 38,\n    setTextRise: 39,\n    moveText: 40,\n    setLeadingMoveText: 41,\n    setTextMatrix: 42,\n    nextLine: 43,\n    showText: 44,\n    showSpacedText: 45,\n    nextLineShowText: 46,\n    nextLineSetSpacingShowText: 47,\n    setCharWidth: 48,\n    setCharWidthAndBounds: 49,\n    setStrokeColorSpace: 50,\n    setFillColorSpace: 51,\n    setStrokeColor: 52,\n    setStrokeColorN: 53,\n    setFillColor: 54,\n    setFillColorN: 55,\n    setStrokeGray: 56,\n    setFillGray: 57,\n    setStrokeRGBColor: 58,\n    setFillRGBColor: 59,\n    setStrokeCMYKColor: 60,\n    setFillCMYKColor: 61,\n    shadingFill: 62,\n    beginInlineImage: 63,\n    beginImageData: 64,\n    endInlineImage: 65,\n    paintXObject: 66,\n    markPoint: 67,\n    markPointProps: 68,\n    beginMarkedContent: 69,\n    beginMarkedContentProps: 70,\n    endMarkedContent: 71,\n    beginCompat: 72,\n    endCompat: 73,\n    paintFormXObjectBegin: 74,\n    paintFormXObjectEnd: 75,\n    beginGroup: 76,\n    endGroup: 77,\n    beginAnnotations: 78,\n    endAnnotations: 79,\n    beginAnnotation: 80,\n    endAnnotation: 81,\n    paintJpegXObject: 82,\n    paintImageMaskXObject: 83,\n    paintImageMaskXObjectGroup: 84,\n    paintImageXObject: 85,\n    paintInlineImageXObject: 86,\n    paintInlineImageXObjectGroup: 87,\n    paintImageXObjectRepeat: 88,\n    paintImageMaskXObjectRepeat: 89,\n    paintSolidColorImageMask: 90,\n    constructPath: 91\n   };\n   var verbosity = VERBOSITY_LEVELS.warnings;\n   function setVerbosityLevel(level) {\n    verbosity = level;\n   }\n   function getVerbosityLevel() {\n    return verbosity;\n   }\n   function info(msg) {\n    if (verbosity >= VERBOSITY_LEVELS.infos) {\n     console.log('Info: ' + msg);\n    }\n   }\n   function warn(msg) {\n    if (verbosity >= VERBOSITY_LEVELS.warnings) {\n     console.log('Warning: ' + msg);\n    }\n   }\n   function deprecated(details) {\n    console.log('Deprecated API usage: ' + details);\n   }\n   function error(msg) {\n    if (verbosity >= VERBOSITY_LEVELS.errors) {\n     console.log('Error: ' + msg);\n     console.log(backtrace());\n    }\n    throw new Error(msg);\n   }\n   function backtrace() {\n    try {\n     throw new Error();\n    } catch (e) {\n     return e.stack ? e.stack.split('\\n').slice(2).join('\\n') : '';\n    }\n   }\n   function assert(cond, msg) {\n    if (!cond) {\n     error(msg);\n    }\n   }\n   var UNSUPPORTED_FEATURES = {\n    unknown: 'unknown',\n    forms: 'forms',\n    javaScript: 'javaScript',\n    smask: 'smask',\n    shadingPattern: 'shadingPattern',\n    font: 'font'\n   };\n   function isSameOrigin(baseUrl, otherUrl) {\n    try {\n     var base = new URL(baseUrl);\n     if (!base.origin || base.origin === 'null') {\n      return false;\n     }\n    } catch (e) {\n     return false;\n    }\n    var other = new URL(otherUrl, base);\n    return base.origin === other.origin;\n   }\n   function isValidProtocol(url) {\n    if (!url) {\n     return false;\n    }\n    switch (url.protocol) {\n    case 'http:':\n    case 'https:':\n    case 'ftp:':\n    case 'mailto:':\n    case 'tel:':\n     return true;\n    default:\n     return false;\n    }\n   }\n   function createValidAbsoluteUrl(url, baseUrl) {\n    if (!url) {\n     return null;\n    }\n    try {\n     var absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n     if (isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n     }\n    } catch (ex) {\n    }\n    return null;\n   }\n   function shadow(obj, prop, value) {\n    Object.defineProperty(obj, prop, {\n     value: value,\n     enumerable: true,\n     configurable: true,\n     writable: false\n    });\n    return value;\n   }\n   function getLookupTableFactory(initializer) {\n    var lookup;\n    return function () {\n     if (initializer) {\n      lookup = Object.create(null);\n      initializer(lookup);\n      initializer = null;\n     }\n     return lookup;\n    };\n   }\n   var PasswordResponses = {\n    NEED_PASSWORD: 1,\n    INCORRECT_PASSWORD: 2\n   };\n   var PasswordException = function PasswordExceptionClosure() {\n    function PasswordException(msg, code) {\n     this.name = 'PasswordException';\n     this.message = msg;\n     this.code = code;\n    }\n    PasswordException.prototype = new Error();\n    PasswordException.constructor = PasswordException;\n    return PasswordException;\n   }();\n   var UnknownErrorException = function UnknownErrorExceptionClosure() {\n    function UnknownErrorException(msg, details) {\n     this.name = 'UnknownErrorException';\n     this.message = msg;\n     this.details = details;\n    }\n    UnknownErrorException.prototype = new Error();\n    UnknownErrorException.constructor = UnknownErrorException;\n    return UnknownErrorException;\n   }();\n   var InvalidPDFException = function InvalidPDFExceptionClosure() {\n    function InvalidPDFException(msg) {\n     this.name = 'InvalidPDFException';\n     this.message = msg;\n    }\n    InvalidPDFException.prototype = new Error();\n    InvalidPDFException.constructor = InvalidPDFException;\n    return InvalidPDFException;\n   }();\n   var MissingPDFException = function MissingPDFExceptionClosure() {\n    function MissingPDFException(msg) {\n     this.name = 'MissingPDFException';\n     this.message = msg;\n    }\n    MissingPDFException.prototype = new Error();\n    MissingPDFException.constructor = MissingPDFException;\n    return MissingPDFException;\n   }();\n   var UnexpectedResponseException = function UnexpectedResponseExceptionClosure() {\n    function UnexpectedResponseException(msg, status) {\n     this.name = 'UnexpectedResponseException';\n     this.message = msg;\n     this.status = status;\n    }\n    UnexpectedResponseException.prototype = new Error();\n    UnexpectedResponseException.constructor = UnexpectedResponseException;\n    return UnexpectedResponseException;\n   }();\n   var NotImplementedException = function NotImplementedExceptionClosure() {\n    function NotImplementedException(msg) {\n     this.message = msg;\n    }\n    NotImplementedException.prototype = new Error();\n    NotImplementedException.prototype.name = 'NotImplementedException';\n    NotImplementedException.constructor = NotImplementedException;\n    return NotImplementedException;\n   }();\n   var MissingDataException = function MissingDataExceptionClosure() {\n    function MissingDataException(begin, end) {\n     this.begin = begin;\n     this.end = end;\n     this.message = 'Missing data [' + begin + ', ' + end + ')';\n    }\n    MissingDataException.prototype = new Error();\n    MissingDataException.prototype.name = 'MissingDataException';\n    MissingDataException.constructor = MissingDataException;\n    return MissingDataException;\n   }();\n   var XRefParseException = function XRefParseExceptionClosure() {\n    function XRefParseException(msg) {\n     this.message = msg;\n    }\n    XRefParseException.prototype = new Error();\n    XRefParseException.prototype.name = 'XRefParseException';\n    XRefParseException.constructor = XRefParseException;\n    return XRefParseException;\n   }();\n   var NullCharactersRegExp = /\\x00/g;\n   function removeNullCharacters(str) {\n    if (typeof str !== 'string') {\n     warn('The argument for removeNullCharacters must be a string.');\n     return str;\n    }\n    return str.replace(NullCharactersRegExp, '');\n   }\n   function bytesToString(bytes) {\n    assert(bytes !== null && typeof bytes === 'object' && bytes.length !== undefined, 'Invalid argument for bytesToString');\n    var length = bytes.length;\n    var MAX_ARGUMENT_COUNT = 8192;\n    if (length < MAX_ARGUMENT_COUNT) {\n     return String.fromCharCode.apply(null, bytes);\n    }\n    var strBuf = [];\n    for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n     var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n     var chunk = bytes.subarray(i, chunkEnd);\n     strBuf.push(String.fromCharCode.apply(null, chunk));\n    }\n    return strBuf.join('');\n   }\n   function stringToBytes(str) {\n    assert(typeof str === 'string', 'Invalid argument for stringToBytes');\n    var length = str.length;\n    var bytes = new Uint8Array(length);\n    for (var i = 0; i < length; ++i) {\n     bytes[i] = str.charCodeAt(i) & 0xFF;\n    }\n    return bytes;\n   }\n   function arrayByteLength(arr) {\n    if (arr.length !== undefined) {\n     return arr.length;\n    }\n    assert(arr.byteLength !== undefined);\n    return arr.byteLength;\n   }\n   function arraysToBytes(arr) {\n    if (arr.length === 1 && arr[0] instanceof Uint8Array) {\n     return arr[0];\n    }\n    var resultLength = 0;\n    var i, ii = arr.length;\n    var item, itemLength;\n    for (i = 0; i < ii; i++) {\n     item = arr[i];\n     itemLength = arrayByteLength(item);\n     resultLength += itemLength;\n    }\n    var pos = 0;\n    var data = new Uint8Array(resultLength);\n    for (i = 0; i < ii; i++) {\n     item = arr[i];\n     if (!(item instanceof Uint8Array)) {\n      if (typeof item === 'string') {\n       item = stringToBytes(item);\n      } else {\n       item = new Uint8Array(item);\n      }\n     }\n     itemLength = item.byteLength;\n     data.set(item, pos);\n     pos += itemLength;\n    }\n    return data;\n   }\n   function string32(value) {\n    return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n   }\n   function log2(x) {\n    var n = 1, i = 0;\n    while (x > n) {\n     n <<= 1;\n     i++;\n    }\n    return i;\n   }\n   function readInt8(data, start) {\n    return data[start] << 24 >> 24;\n   }\n   function readUint16(data, offset) {\n    return data[offset] << 8 | data[offset + 1];\n   }\n   function readUint32(data, offset) {\n    return (data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3]) >>> 0;\n   }\n   function isLittleEndian() {\n    var buffer8 = new Uint8Array(2);\n    buffer8[0] = 1;\n    var buffer16 = new Uint16Array(buffer8.buffer);\n    return buffer16[0] === 1;\n   }\n   function isEvalSupported() {\n    try {\n     new Function('');\n     return true;\n    } catch (e) {\n     return false;\n    }\n   }\n   var Uint32ArrayView = function Uint32ArrayViewClosure() {\n    function Uint32ArrayView(buffer, length) {\n     this.buffer = buffer;\n     this.byteLength = buffer.length;\n     this.length = length === undefined ? this.byteLength >> 2 : length;\n     ensureUint32ArrayViewProps(this.length);\n    }\n    Uint32ArrayView.prototype = Object.create(null);\n    var uint32ArrayViewSetters = 0;\n    function createUint32ArrayProp(index) {\n     return {\n      get: function () {\n       var buffer = this.buffer, offset = index << 2;\n       return (buffer[offset] | buffer[offset + 1] << 8 | buffer[offset + 2] << 16 | buffer[offset + 3] << 24) >>> 0;\n      },\n      set: function (value) {\n       var buffer = this.buffer, offset = index << 2;\n       buffer[offset] = value & 255;\n       buffer[offset + 1] = value >> 8 & 255;\n       buffer[offset + 2] = value >> 16 & 255;\n       buffer[offset + 3] = value >>> 24 & 255;\n      }\n     };\n    }\n    function ensureUint32ArrayViewProps(length) {\n     while (uint32ArrayViewSetters < length) {\n      Object.defineProperty(Uint32ArrayView.prototype, uint32ArrayViewSetters, createUint32ArrayProp(uint32ArrayViewSetters));\n      uint32ArrayViewSetters++;\n     }\n    }\n    return Uint32ArrayView;\n   }();\n   exports.Uint32ArrayView = Uint32ArrayView;\n   var IDENTITY_MATRIX = [\n    1,\n    0,\n    0,\n    1,\n    0,\n    0\n   ];\n   var Util = function UtilClosure() {\n    function Util() {\n    }\n    var rgbBuf = [\n     'rgb(',\n     0,\n     ',',\n     0,\n     ',',\n     0,\n     ')'\n    ];\n    Util.makeCssRgb = function Util_makeCssRgb(r, g, b) {\n     rgbBuf[1] = r;\n     rgbBuf[3] = g;\n     rgbBuf[5] = b;\n     return rgbBuf.join('');\n    };\n    Util.transform = function Util_transform(m1, m2) {\n     return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5]\n     ];\n    };\n    Util.applyTransform = function Util_applyTransform(p, m) {\n     var xt = p[0] * m[0] + p[1] * m[2] + m[4];\n     var yt = p[0] * m[1] + p[1] * m[3] + m[5];\n     return [\n      xt,\n      yt\n     ];\n    };\n    Util.applyInverseTransform = function Util_applyInverseTransform(p, m) {\n     var d = m[0] * m[3] - m[1] * m[2];\n     var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n     var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n     return [\n      xt,\n      yt\n     ];\n    };\n    Util.getAxialAlignedBoundingBox = function Util_getAxialAlignedBoundingBox(r, m) {\n     var p1 = Util.applyTransform(r, m);\n     var p2 = Util.applyTransform(r.slice(2, 4), m);\n     var p3 = Util.applyTransform([\n      r[0],\n      r[3]\n     ], m);\n     var p4 = Util.applyTransform([\n      r[2],\n      r[1]\n     ], m);\n     return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1])\n     ];\n    };\n    Util.inverseTransform = function Util_inverseTransform(m) {\n     var d = m[0] * m[3] - m[1] * m[2];\n     return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d\n     ];\n    };\n    Util.apply3dTransform = function Util_apply3dTransform(m, v) {\n     return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2]\n     ];\n    };\n    Util.singularValueDecompose2dScale = function Util_singularValueDecompose2dScale(m) {\n     var transpose = [\n      m[0],\n      m[2],\n      m[1],\n      m[3]\n     ];\n     var a = m[0] * transpose[0] + m[1] * transpose[2];\n     var b = m[0] * transpose[1] + m[1] * transpose[3];\n     var c = m[2] * transpose[0] + m[3] * transpose[2];\n     var d = m[2] * transpose[1] + m[3] * transpose[3];\n     var first = (a + d) / 2;\n     var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n     var sx = first + second || 1;\n     var sy = first - second || 1;\n     return [\n      Math.sqrt(sx),\n      Math.sqrt(sy)\n     ];\n    };\n    Util.normalizeRect = function Util_normalizeRect(rect) {\n     var r = rect.slice(0);\n     if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n     }\n     if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n     }\n     return r;\n    };\n    Util.intersect = function Util_intersect(rect1, rect2) {\n     function compare(a, b) {\n      return a - b;\n     }\n     var orderedX = [\n       rect1[0],\n       rect1[2],\n       rect2[0],\n       rect2[2]\n      ].sort(compare), orderedY = [\n       rect1[1],\n       rect1[3],\n       rect2[1],\n       rect2[3]\n      ].sort(compare), result = [];\n     rect1 = Util.normalizeRect(rect1);\n     rect2 = Util.normalizeRect(rect2);\n     if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n     } else {\n      return false;\n     }\n     if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n     } else {\n      return false;\n     }\n     return result;\n    };\n    Util.sign = function Util_sign(num) {\n     return num < 0 ? -1 : 1;\n    };\n    var ROMAN_NUMBER_MAP = [\n     '',\n     'C',\n     'CC',\n     'CCC',\n     'CD',\n     'D',\n     'DC',\n     'DCC',\n     'DCCC',\n     'CM',\n     '',\n     'X',\n     'XX',\n     'XXX',\n     'XL',\n     'L',\n     'LX',\n     'LXX',\n     'LXXX',\n     'XC',\n     '',\n     'I',\n     'II',\n     'III',\n     'IV',\n     'V',\n     'VI',\n     'VII',\n     'VIII',\n     'IX'\n    ];\n    Util.toRoman = function Util_toRoman(number, lowerCase) {\n     assert(isInt(number) && number > 0, 'The number should be a positive integer.');\n     var pos, romanBuf = [];\n     while (number >= 1000) {\n      number -= 1000;\n      romanBuf.push('M');\n     }\n     pos = number / 100 | 0;\n     number %= 100;\n     romanBuf.push(ROMAN_NUMBER_MAP[pos]);\n     pos = number / 10 | 0;\n     number %= 10;\n     romanBuf.push(ROMAN_NUMBER_MAP[10 + pos]);\n     romanBuf.push(ROMAN_NUMBER_MAP[20 + number]);\n     var romanStr = romanBuf.join('');\n     return lowerCase ? romanStr.toLowerCase() : romanStr;\n    };\n    Util.appendToArray = function Util_appendToArray(arr1, arr2) {\n     Array.prototype.push.apply(arr1, arr2);\n    };\n    Util.prependToArray = function Util_prependToArray(arr1, arr2) {\n     Array.prototype.unshift.apply(arr1, arr2);\n    };\n    Util.extendObj = function extendObj(obj1, obj2) {\n     for (var key in obj2) {\n      obj1[key] = obj2[key];\n     }\n    };\n    Util.getInheritableProperty = function Util_getInheritableProperty(dict, name, getArray) {\n     while (dict && !dict.has(name)) {\n      dict = dict.get('Parent');\n     }\n     if (!dict) {\n      return null;\n     }\n     return getArray ? dict.getArray(name) : dict.get(name);\n    };\n    Util.inherit = function Util_inherit(sub, base, prototype) {\n     sub.prototype = Object.create(base.prototype);\n     sub.prototype.constructor = sub;\n     for (var prop in prototype) {\n      sub.prototype[prop] = prototype[prop];\n     }\n    };\n    Util.loadScript = function Util_loadScript(src, callback) {\n     var script = document.createElement('script');\n     var loaded = false;\n     script.setAttribute('src', src);\n     if (callback) {\n      script.onload = function () {\n       if (!loaded) {\n        callback();\n       }\n       loaded = true;\n      };\n     }\n     document.getElementsByTagName('head')[0].appendChild(script);\n    };\n    return Util;\n   }();\n   var PageViewport = function PageViewportClosure() {\n    function PageViewport(viewBox, scale, rotation, offsetX, offsetY, dontFlip) {\n     this.viewBox = viewBox;\n     this.scale = scale;\n     this.rotation = rotation;\n     this.offsetX = offsetX;\n     this.offsetY = offsetY;\n     var centerX = (viewBox[2] + viewBox[0]) / 2;\n     var centerY = (viewBox[3] + viewBox[1]) / 2;\n     var rotateA, rotateB, rotateC, rotateD;\n     rotation = rotation % 360;\n     rotation = rotation < 0 ? rotation + 360 : rotation;\n     switch (rotation) {\n     case 180:\n      rotateA = -1;\n      rotateB = 0;\n      rotateC = 0;\n      rotateD = 1;\n      break;\n     case 90:\n      rotateA = 0;\n      rotateB = 1;\n      rotateC = 1;\n      rotateD = 0;\n      break;\n     case 270:\n      rotateA = 0;\n      rotateB = -1;\n      rotateC = -1;\n      rotateD = 0;\n      break;\n     default:\n      rotateA = 1;\n      rotateB = 0;\n      rotateC = 0;\n      rotateD = -1;\n      break;\n     }\n     if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n     }\n     var offsetCanvasX, offsetCanvasY;\n     var width, height;\n     if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n     } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n     }\n     this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY\n     ];\n     this.width = width;\n     this.height = height;\n     this.fontScale = scale;\n    }\n    PageViewport.prototype = {\n     clone: function PageViewPort_clone(args) {\n      args = args || {};\n      var scale = 'scale' in args ? args.scale : this.scale;\n      var rotation = 'rotation' in args ? args.rotation : this.rotation;\n      return new PageViewport(this.viewBox.slice(), scale, rotation, this.offsetX, this.offsetY, args.dontFlip);\n     },\n     convertToViewportPoint: function PageViewport_convertToViewportPoint(x, y) {\n      return Util.applyTransform([\n       x,\n       y\n      ], this.transform);\n     },\n     convertToViewportRectangle: function PageViewport_convertToViewportRectangle(rect) {\n      var tl = Util.applyTransform([\n       rect[0],\n       rect[1]\n      ], this.transform);\n      var br = Util.applyTransform([\n       rect[2],\n       rect[3]\n      ], this.transform);\n      return [\n       tl[0],\n       tl[1],\n       br[0],\n       br[1]\n      ];\n     },\n     convertToPdfPoint: function PageViewport_convertToPdfPoint(x, y) {\n      return Util.applyInverseTransform([\n       x,\n       y\n      ], this.transform);\n     }\n    };\n    return PageViewport;\n   }();\n   var PDFStringTranslateTable = [\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0x2D8,\n    0x2C7,\n    0x2C6,\n    0x2D9,\n    0x2DD,\n    0x2DB,\n    0x2DA,\n    0x2DC,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0x2022,\n    0x2020,\n    0x2021,\n    0x2026,\n    0x2014,\n    0x2013,\n    0x192,\n    0x2044,\n    0x2039,\n    0x203A,\n    0x2212,\n    0x2030,\n    0x201E,\n    0x201C,\n    0x201D,\n    0x2018,\n    0x2019,\n    0x201A,\n    0x2122,\n    0xFB01,\n    0xFB02,\n    0x141,\n    0x152,\n    0x160,\n    0x178,\n    0x17D,\n    0x131,\n    0x142,\n    0x153,\n    0x161,\n    0x17E,\n    0,\n    0x20AC\n   ];\n   function stringToPDFString(str) {\n    var i, n = str.length, strBuf = [];\n    if (str[0] === '\\xFE' && str[1] === '\\xFF') {\n     for (i = 2; i < n; i += 2) {\n      strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n     }\n    } else {\n     for (i = 0; i < n; ++i) {\n      var code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n     }\n    }\n    return strBuf.join('');\n   }\n   function stringToUTF8String(str) {\n    return decodeURIComponent(escape(str));\n   }\n   function utf8StringToString(str) {\n    return unescape(encodeURIComponent(str));\n   }\n   function isEmptyObj(obj) {\n    for (var key in obj) {\n     return false;\n    }\n    return true;\n   }\n   function isBool(v) {\n    return typeof v === 'boolean';\n   }\n   function isInt(v) {\n    return typeof v === 'number' && (v | 0) === v;\n   }\n   function isNum(v) {\n    return typeof v === 'number';\n   }\n   function isString(v) {\n    return typeof v === 'string';\n   }\n   function isArray(v) {\n    return v instanceof Array;\n   }\n   function isArrayBuffer(v) {\n    return typeof v === 'object' && v !== null && v.byteLength !== undefined;\n   }\n   function isSpace(ch) {\n    return ch === 0x20 || ch === 0x09 || ch === 0x0D || ch === 0x0A;\n   }\n   function createPromiseCapability() {\n    var capability = {};\n    capability.promise = new Promise(function (resolve, reject) {\n     capability.resolve = resolve;\n     capability.reject = reject;\n    });\n    return capability;\n   }\n   (function PromiseClosure() {\n    if (globalScope.Promise) {\n     if (typeof globalScope.Promise.all !== 'function') {\n      globalScope.Promise.all = function (iterable) {\n       var count = 0, results = [], resolve, reject;\n       var promise = new globalScope.Promise(function (resolve_, reject_) {\n        resolve = resolve_;\n        reject = reject_;\n       });\n       iterable.forEach(function (p, i) {\n        count++;\n        p.then(function (result) {\n         results[i] = result;\n         count--;\n         if (count === 0) {\n          resolve(results);\n         }\n        }, reject);\n       });\n       if (count === 0) {\n        resolve(results);\n       }\n       return promise;\n      };\n     }\n     if (typeof globalScope.Promise.resolve !== 'function') {\n      globalScope.Promise.resolve = function (value) {\n       return new globalScope.Promise(function (resolve) {\n        resolve(value);\n       });\n      };\n     }\n     if (typeof globalScope.Promise.reject !== 'function') {\n      globalScope.Promise.reject = function (reason) {\n       return new globalScope.Promise(function (resolve, reject) {\n        reject(reason);\n       });\n      };\n     }\n     if (typeof globalScope.Promise.prototype.catch !== 'function') {\n      globalScope.Promise.prototype.catch = function (onReject) {\n       return globalScope.Promise.prototype.then(undefined, onReject);\n      };\n     }\n     return;\n    }\n    var STATUS_PENDING = 0;\n    var STATUS_RESOLVED = 1;\n    var STATUS_REJECTED = 2;\n    var REJECTION_TIMEOUT = 500;\n    var HandlerManager = {\n     handlers: [],\n     running: false,\n     unhandledRejections: [],\n     pendingRejectionCheck: false,\n     scheduleHandlers: function scheduleHandlers(promise) {\n      if (promise._status === STATUS_PENDING) {\n       return;\n      }\n      this.handlers = this.handlers.concat(promise._handlers);\n      promise._handlers = [];\n      if (this.running) {\n       return;\n      }\n      this.running = true;\n      setTimeout(this.runHandlers.bind(this), 0);\n     },\n     runHandlers: function runHandlers() {\n      var RUN_TIMEOUT = 1;\n      var timeoutAt = Date.now() + RUN_TIMEOUT;\n      while (this.handlers.length > 0) {\n       var handler = this.handlers.shift();\n       var nextStatus = handler.thisPromise._status;\n       var nextValue = handler.thisPromise._value;\n       try {\n        if (nextStatus === STATUS_RESOLVED) {\n         if (typeof handler.onResolve === 'function') {\n          nextValue = handler.onResolve(nextValue);\n         }\n        } else if (typeof handler.onReject === 'function') {\n         nextValue = handler.onReject(nextValue);\n         nextStatus = STATUS_RESOLVED;\n         if (handler.thisPromise._unhandledRejection) {\n          this.removeUnhandeledRejection(handler.thisPromise);\n         }\n        }\n       } catch (ex) {\n        nextStatus = STATUS_REJECTED;\n        nextValue = ex;\n       }\n       handler.nextPromise._updateStatus(nextStatus, nextValue);\n       if (Date.now() >= timeoutAt) {\n        break;\n       }\n      }\n      if (this.handlers.length > 0) {\n       setTimeout(this.runHandlers.bind(this), 0);\n       return;\n      }\n      this.running = false;\n     },\n     addUnhandledRejection: function addUnhandledRejection(promise) {\n      this.unhandledRejections.push({\n       promise: promise,\n       time: Date.now()\n      });\n      this.scheduleRejectionCheck();\n     },\n     removeUnhandeledRejection: function removeUnhandeledRejection(promise) {\n      promise._unhandledRejection = false;\n      for (var i = 0; i < this.unhandledRejections.length; i++) {\n       if (this.unhandledRejections[i].promise === promise) {\n        this.unhandledRejections.splice(i);\n        i--;\n       }\n      }\n     },\n     scheduleRejectionCheck: function scheduleRejectionCheck() {\n      if (this.pendingRejectionCheck) {\n       return;\n      }\n      this.pendingRejectionCheck = true;\n      setTimeout(function rejectionCheck() {\n       this.pendingRejectionCheck = false;\n       var now = Date.now();\n       for (var i = 0; i < this.unhandledRejections.length; i++) {\n        if (now - this.unhandledRejections[i].time > REJECTION_TIMEOUT) {\n         var unhandled = this.unhandledRejections[i].promise._value;\n         var msg = 'Unhandled rejection: ' + unhandled;\n         if (unhandled.stack) {\n          msg += '\\n' + unhandled.stack;\n         }\n         warn(msg);\n         this.unhandledRejections.splice(i);\n         i--;\n        }\n       }\n       if (this.unhandledRejections.length) {\n        this.scheduleRejectionCheck();\n       }\n      }.bind(this), REJECTION_TIMEOUT);\n     }\n    };\n    var Promise = function Promise(resolver) {\n     this._status = STATUS_PENDING;\n     this._handlers = [];\n     try {\n      resolver.call(this, this._resolve.bind(this), this._reject.bind(this));\n     } catch (e) {\n      this._reject(e);\n     }\n    };\n    Promise.all = function Promise_all(promises) {\n     var resolveAll, rejectAll;\n     var deferred = new Promise(function (resolve, reject) {\n      resolveAll = resolve;\n      rejectAll = reject;\n     });\n     var unresolved = promises.length;\n     var results = [];\n     if (unresolved === 0) {\n      resolveAll(results);\n      return deferred;\n     }\n     function reject(reason) {\n      if (deferred._status === STATUS_REJECTED) {\n       return;\n      }\n      results = [];\n      rejectAll(reason);\n     }\n     for (var i = 0, ii = promises.length; i < ii; ++i) {\n      var promise = promises[i];\n      var resolve = function (i) {\n       return function (value) {\n        if (deferred._status === STATUS_REJECTED) {\n         return;\n        }\n        results[i] = value;\n        unresolved--;\n        if (unresolved === 0) {\n         resolveAll(results);\n        }\n       };\n      }(i);\n      if (Promise.isPromise(promise)) {\n       promise.then(resolve, reject);\n      } else {\n       resolve(promise);\n      }\n     }\n     return deferred;\n    };\n    Promise.isPromise = function Promise_isPromise(value) {\n     return value && typeof value.then === 'function';\n    };\n    Promise.resolve = function Promise_resolve(value) {\n     return new Promise(function (resolve) {\n      resolve(value);\n     });\n    };\n    Promise.reject = function Promise_reject(reason) {\n     return new Promise(function (resolve, reject) {\n      reject(reason);\n     });\n    };\n    Promise.prototype = {\n     _status: null,\n     _value: null,\n     _handlers: null,\n     _unhandledRejection: null,\n     _updateStatus: function Promise__updateStatus(status, value) {\n      if (this._status === STATUS_RESOLVED || this._status === STATUS_REJECTED) {\n       return;\n      }\n      if (status === STATUS_RESOLVED && Promise.isPromise(value)) {\n       value.then(this._updateStatus.bind(this, STATUS_RESOLVED), this._updateStatus.bind(this, STATUS_REJECTED));\n       return;\n      }\n      this._status = status;\n      this._value = value;\n      if (status === STATUS_REJECTED && this._handlers.length === 0) {\n       this._unhandledRejection = true;\n       HandlerManager.addUnhandledRejection(this);\n      }\n      HandlerManager.scheduleHandlers(this);\n     },\n     _resolve: function Promise_resolve(value) {\n      this._updateStatus(STATUS_RESOLVED, value);\n     },\n     _reject: function Promise_reject(reason) {\n      this._updateStatus(STATUS_REJECTED, reason);\n     },\n     then: function Promise_then(onResolve, onReject) {\n      var nextPromise = new Promise(function (resolve, reject) {\n       this.resolve = resolve;\n       this.reject = reject;\n      });\n      this._handlers.push({\n       thisPromise: this,\n       onResolve: onResolve,\n       onReject: onReject,\n       nextPromise: nextPromise\n      });\n      HandlerManager.scheduleHandlers(this);\n      return nextPromise;\n     },\n     catch: function Promise_catch(onReject) {\n      return this.then(undefined, onReject);\n     }\n    };\n    globalScope.Promise = Promise;\n   }());\n   (function WeakMapClosure() {\n    if (globalScope.WeakMap) {\n     return;\n    }\n    var id = 0;\n    function WeakMap() {\n     this.id = '$weakmap' + id++;\n    }\n    WeakMap.prototype = {\n     has: function (obj) {\n      return !!Object.getOwnPropertyDescriptor(obj, this.id);\n     },\n     get: function (obj, defaultValue) {\n      return this.has(obj) ? obj[this.id] : defaultValue;\n     },\n     set: function (obj, value) {\n      Object.defineProperty(obj, this.id, {\n       value: value,\n       enumerable: false,\n       configurable: true\n      });\n     },\n     delete: function (obj) {\n      delete obj[this.id];\n     }\n    };\n    globalScope.WeakMap = WeakMap;\n   }());\n   var StatTimer = function StatTimerClosure() {\n    function rpad(str, pad, length) {\n     while (str.length < length) {\n      str += pad;\n     }\n     return str;\n    }\n    function StatTimer() {\n     this.started = Object.create(null);\n     this.times = [];\n     this.enabled = true;\n    }\n    StatTimer.prototype = {\n     time: function StatTimer_time(name) {\n      if (!this.enabled) {\n       return;\n      }\n      if (name in this.started) {\n       warn('Timer is already running for ' + name);\n      }\n      this.started[name] = Date.now();\n     },\n     timeEnd: function StatTimer_timeEnd(name) {\n      if (!this.enabled) {\n       return;\n      }\n      if (!(name in this.started)) {\n       warn('Timer has not been started for ' + name);\n      }\n      this.times.push({\n       'name': name,\n       'start': this.started[name],\n       'end': Date.now()\n      });\n      delete this.started[name];\n     },\n     toString: function StatTimer_toString() {\n      var i, ii;\n      var times = this.times;\n      var out = '';\n      var longest = 0;\n      for (i = 0, ii = times.length; i < ii; ++i) {\n       var name = times[i]['name'];\n       if (name.length > longest) {\n        longest = name.length;\n       }\n      }\n      for (i = 0, ii = times.length; i < ii; ++i) {\n       var span = times[i];\n       var duration = span.end - span.start;\n       out += rpad(span['name'], ' ', longest) + ' ' + duration + 'ms\\n';\n      }\n      return out;\n     }\n    };\n    return StatTimer;\n   }();\n   var createBlob = function createBlob(data, contentType) {\n    if (typeof Blob !== 'undefined') {\n     return new Blob([data], { type: contentType });\n    }\n    warn('The \"Blob\" constructor is not supported.');\n   };\n   var createObjectURL = function createObjectURLClosure() {\n    var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    return function createObjectURL(data, contentType, forceDataSchema) {\n     if (!forceDataSchema && typeof URL !== 'undefined' && URL.createObjectURL) {\n      var blob = createBlob(data, contentType);\n      return URL.createObjectURL(blob);\n     }\n     var buffer = 'data:' + contentType + ';base64,';\n     for (var i = 0, ii = data.length; i < ii; i += 3) {\n      var b1 = data[i] & 0xFF;\n      var b2 = data[i + 1] & 0xFF;\n      var b3 = data[i + 2] & 0xFF;\n      var d1 = b1 >> 2, d2 = (b1 & 3) << 4 | b2 >> 4;\n      var d3 = i + 1 < ii ? (b2 & 0xF) << 2 | b3 >> 6 : 64;\n      var d4 = i + 2 < ii ? b3 & 0x3F : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n     }\n     return buffer;\n    };\n   }();\n   function MessageHandler(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackIndex = 1;\n    this.postMessageTransfers = true;\n    var callbacksCapabilities = this.callbacksCapabilities = Object.create(null);\n    var ah = this.actionHandler = Object.create(null);\n    this._onComObjOnMessage = function messageHandlerComObjOnMessage(event) {\n     var data = event.data;\n     if (data.targetName !== this.sourceName) {\n      return;\n     }\n     if (data.isReply) {\n      var callbackId = data.callbackId;\n      if (data.callbackId in callbacksCapabilities) {\n       var callback = callbacksCapabilities[callbackId];\n       delete callbacksCapabilities[callbackId];\n       if ('error' in data) {\n        callback.reject(data.error);\n       } else {\n        callback.resolve(data.data);\n       }\n      } else {\n       error('Cannot resolve callback ' + callbackId);\n      }\n     } else if (data.action in ah) {\n      var action = ah[data.action];\n      if (data.callbackId) {\n       var sourceName = this.sourceName;\n       var targetName = data.sourceName;\n       Promise.resolve().then(function () {\n        return action[0].call(action[1], data.data);\n       }).then(function (result) {\n        comObj.postMessage({\n         sourceName: sourceName,\n         targetName: targetName,\n         isReply: true,\n         callbackId: data.callbackId,\n         data: result\n        });\n       }, function (reason) {\n        if (reason instanceof Error) {\n         reason = reason + '';\n        }\n        comObj.postMessage({\n         sourceName: sourceName,\n         targetName: targetName,\n         isReply: true,\n         callbackId: data.callbackId,\n         error: reason\n        });\n       });\n      } else {\n       action[0].call(action[1], data.data);\n      }\n     } else {\n      error('Unknown action from worker: ' + data.action);\n     }\n    }.bind(this);\n    comObj.addEventListener('message', this._onComObjOnMessage);\n   }\n   MessageHandler.prototype = {\n    on: function messageHandlerOn(actionName, handler, scope) {\n     var ah = this.actionHandler;\n     if (ah[actionName]) {\n      error('There is already an actionName called \"' + actionName + '\"');\n     }\n     ah[actionName] = [\n      handler,\n      scope\n     ];\n    },\n    send: function messageHandlerSend(actionName, data, transfers) {\n     var message = {\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data: data\n     };\n     this.postMessage(message, transfers);\n    },\n    sendWithPromise: function messageHandlerSendWithPromise(actionName, data, transfers) {\n     var callbackId = this.callbackIndex++;\n     var message = {\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data: data,\n      callbackId: callbackId\n     };\n     var capability = createPromiseCapability();\n     this.callbacksCapabilities[callbackId] = capability;\n     try {\n      this.postMessage(message, transfers);\n     } catch (e) {\n      capability.reject(e);\n     }\n     return capability.promise;\n    },\n    postMessage: function (message, transfers) {\n     if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n     } else {\n      this.comObj.postMessage(message);\n     }\n    },\n    destroy: function () {\n     this.comObj.removeEventListener('message', this._onComObjOnMessage);\n    }\n   };\n   function loadJpegStream(id, imageUrl, objs) {\n    var img = new Image();\n    img.onload = function loadJpegStream_onloadClosure() {\n     objs.resolve(id, img);\n    };\n    img.onerror = function loadJpegStream_onerrorClosure() {\n     objs.resolve(id, null);\n     warn('Error during JPEG image loading');\n    };\n    img.src = imageUrl;\n   }\n   /* Any copyright is dedicated to the Public Domain.\n    * http://creativecommons.org/publicdomain/zero/1.0/ */\n   (function checkURLConstructor(scope) {\n    var hasWorkingUrl = false;\n    try {\n     if (typeof URL === 'function' && typeof URL.prototype === 'object' && 'origin' in URL.prototype) {\n      var u = new URL('b', 'http://a');\n      u.pathname = 'c%20d';\n      hasWorkingUrl = u.href === 'http://a/c%20d';\n     }\n    } catch (e) {\n    }\n    if (hasWorkingUrl) {\n     return;\n    }\n    var relative = Object.create(null);\n    relative['ftp'] = 21;\n    relative['file'] = 0;\n    relative['gopher'] = 70;\n    relative['http'] = 80;\n    relative['https'] = 443;\n    relative['ws'] = 80;\n    relative['wss'] = 443;\n    var relativePathDotMapping = Object.create(null);\n    relativePathDotMapping['%2e'] = '.';\n    relativePathDotMapping['.%2e'] = '..';\n    relativePathDotMapping['%2e.'] = '..';\n    relativePathDotMapping['%2e%2e'] = '..';\n    function isRelativeScheme(scheme) {\n     return relative[scheme] !== undefined;\n    }\n    function invalid() {\n     clear.call(this);\n     this._isInvalid = true;\n    }\n    function IDNAToASCII(h) {\n     if (h === '') {\n      invalid.call(this);\n     }\n     return h.toLowerCase();\n    }\n    function percentEscape(c) {\n     var unicode = c.charCodeAt(0);\n     if (unicode > 0x20 && unicode < 0x7F && [\n       0x22,\n       0x23,\n       0x3C,\n       0x3E,\n       0x3F,\n       0x60\n      ].indexOf(unicode) === -1) {\n      return c;\n     }\n     return encodeURIComponent(c);\n    }\n    function percentEscapeQuery(c) {\n     var unicode = c.charCodeAt(0);\n     if (unicode > 0x20 && unicode < 0x7F && [\n       0x22,\n       0x23,\n       0x3C,\n       0x3E,\n       0x60\n      ].indexOf(unicode) === -1) {\n      return c;\n     }\n     return encodeURIComponent(c);\n    }\n    var EOF, ALPHA = /[a-zA-Z]/, ALPHANUMERIC = /[a-zA-Z0-9\\+\\-\\.]/;\n    function parse(input, stateOverride, base) {\n     function err(message) {\n      errors.push(message);\n     }\n     var state = stateOverride || 'scheme start', cursor = 0, buffer = '', seenAt = false, seenBracket = false, errors = [];\n     loop:\n      while ((input[cursor - 1] !== EOF || cursor === 0) && !this._isInvalid) {\n       var c = input[cursor];\n       switch (state) {\n       case 'scheme start':\n        if (c && ALPHA.test(c)) {\n         buffer += c.toLowerCase();\n         state = 'scheme';\n        } else if (!stateOverride) {\n         buffer = '';\n         state = 'no scheme';\n         continue;\n        } else {\n         err('Invalid scheme.');\n         break loop;\n        }\n        break;\n       case 'scheme':\n        if (c && ALPHANUMERIC.test(c)) {\n         buffer += c.toLowerCase();\n        } else if (c === ':') {\n         this._scheme = buffer;\n         buffer = '';\n         if (stateOverride) {\n          break loop;\n         }\n         if (isRelativeScheme(this._scheme)) {\n          this._isRelative = true;\n         }\n         if (this._scheme === 'file') {\n          state = 'relative';\n         } else if (this._isRelative && base && base._scheme === this._scheme) {\n          state = 'relative or authority';\n         } else if (this._isRelative) {\n          state = 'authority first slash';\n         } else {\n          state = 'scheme data';\n         }\n        } else if (!stateOverride) {\n         buffer = '';\n         cursor = 0;\n         state = 'no scheme';\n         continue;\n        } else if (EOF === c) {\n         break loop;\n        } else {\n         err('Code point not allowed in scheme: ' + c);\n         break loop;\n        }\n        break;\n       case 'scheme data':\n        if (c === '?') {\n         this._query = '?';\n         state = 'query';\n        } else if (c === '#') {\n         this._fragment = '#';\n         state = 'fragment';\n        } else {\n         if (EOF !== c && '\\t' !== c && '\\n' !== c && '\\r' !== c) {\n          this._schemeData += percentEscape(c);\n         }\n        }\n        break;\n       case 'no scheme':\n        if (!base || !isRelativeScheme(base._scheme)) {\n         err('Missing scheme.');\n         invalid.call(this);\n        } else {\n         state = 'relative';\n         continue;\n        }\n        break;\n       case 'relative or authority':\n        if (c === '/' && input[cursor + 1] === '/') {\n         state = 'authority ignore slashes';\n        } else {\n         err('Expected /, got: ' + c);\n         state = 'relative';\n         continue;\n        }\n        break;\n       case 'relative':\n        this._isRelative = true;\n        if ('file' !== this._scheme) {\n         this._scheme = base._scheme;\n        }\n        if (EOF === c) {\n         this._host = base._host;\n         this._port = base._port;\n         this._path = base._path.slice();\n         this._query = base._query;\n         this._username = base._username;\n         this._password = base._password;\n         break loop;\n        } else if (c === '/' || c === '\\\\') {\n         if (c === '\\\\') {\n          err('\\\\ is an invalid code point.');\n         }\n         state = 'relative slash';\n        } else if (c === '?') {\n         this._host = base._host;\n         this._port = base._port;\n         this._path = base._path.slice();\n         this._query = '?';\n         this._username = base._username;\n         this._password = base._password;\n         state = 'query';\n        } else if (c === '#') {\n         this._host = base._host;\n         this._port = base._port;\n         this._path = base._path.slice();\n         this._query = base._query;\n         this._fragment = '#';\n         this._username = base._username;\n         this._password = base._password;\n         state = 'fragment';\n        } else {\n         var nextC = input[cursor + 1];\n         var nextNextC = input[cursor + 2];\n         if ('file' !== this._scheme || !ALPHA.test(c) || nextC !== ':' && nextC !== '|' || EOF !== nextNextC && '/' !== nextNextC && '\\\\' !== nextNextC && '?' !== nextNextC && '#' !== nextNextC) {\n          this._host = base._host;\n          this._port = base._port;\n          this._username = base._username;\n          this._password = base._password;\n          this._path = base._path.slice();\n          this._path.pop();\n         }\n         state = 'relative path';\n         continue;\n        }\n        break;\n       case 'relative slash':\n        if (c === '/' || c === '\\\\') {\n         if (c === '\\\\') {\n          err('\\\\ is an invalid code point.');\n         }\n         if (this._scheme === 'file') {\n          state = 'file host';\n         } else {\n          state = 'authority ignore slashes';\n         }\n        } else {\n         if ('file' !== this._scheme) {\n          this._host = base._host;\n          this._port = base._port;\n          this._username = base._username;\n          this._password = base._password;\n         }\n         state = 'relative path';\n         continue;\n        }\n        break;\n       case 'authority first slash':\n        if (c === '/') {\n         state = 'authority second slash';\n        } else {\n         err('Expected \\'/\\', got: ' + c);\n         state = 'authority ignore slashes';\n         continue;\n        }\n        break;\n       case 'authority second slash':\n        state = 'authority ignore slashes';\n        if ('/' !== c) {\n         err('Expected \\'/\\', got: ' + c);\n         continue;\n        }\n        break;\n       case 'authority ignore slashes':\n        if ('/' !== c && '\\\\' !== c) {\n         state = 'authority';\n         continue;\n        } else {\n         err('Expected authority, got: ' + c);\n        }\n        break;\n       case 'authority':\n        if (c === '@') {\n         if (seenAt) {\n          err('@ already seen.');\n          buffer += '%40';\n         }\n         seenAt = true;\n         for (var i = 0; i < buffer.length; i++) {\n          var cp = buffer[i];\n          if (cp === '\\t' || cp === '\\n' || cp === '\\r') {\n           err('Invalid whitespace in authority.');\n           continue;\n          }\n          if (cp === ':' && this._password === null) {\n           this._password = '';\n           continue;\n          }\n          var tempC = percentEscape(cp);\n          if (null !== this._password) {\n           this._password += tempC;\n          } else {\n           this._username += tempC;\n          }\n         }\n         buffer = '';\n        } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n         cursor -= buffer.length;\n         buffer = '';\n         state = 'host';\n         continue;\n        } else {\n         buffer += c;\n        }\n        break;\n       case 'file host':\n        if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n         if (buffer.length === 2 && ALPHA.test(buffer[0]) && (buffer[1] === ':' || buffer[1] === '|')) {\n          state = 'relative path';\n         } else if (buffer.length === 0) {\n          state = 'relative path start';\n         } else {\n          this._host = IDNAToASCII.call(this, buffer);\n          buffer = '';\n          state = 'relative path start';\n         }\n         continue;\n        } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n         err('Invalid whitespace in file host.');\n        } else {\n         buffer += c;\n        }\n        break;\n       case 'host':\n       case 'hostname':\n        if (c === ':' && !seenBracket) {\n         this._host = IDNAToASCII.call(this, buffer);\n         buffer = '';\n         state = 'port';\n         if (stateOverride === 'hostname') {\n          break loop;\n         }\n        } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n         this._host = IDNAToASCII.call(this, buffer);\n         buffer = '';\n         state = 'relative path start';\n         if (stateOverride) {\n          break loop;\n         }\n         continue;\n        } else if ('\\t' !== c && '\\n' !== c && '\\r' !== c) {\n         if (c === '[') {\n          seenBracket = true;\n         } else if (c === ']') {\n          seenBracket = false;\n         }\n         buffer += c;\n        } else {\n         err('Invalid code point in host/hostname: ' + c);\n        }\n        break;\n       case 'port':\n        if (/[0-9]/.test(c)) {\n         buffer += c;\n        } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#' || stateOverride) {\n         if ('' !== buffer) {\n          var temp = parseInt(buffer, 10);\n          if (temp !== relative[this._scheme]) {\n           this._port = temp + '';\n          }\n          buffer = '';\n         }\n         if (stateOverride) {\n          break loop;\n         }\n         state = 'relative path start';\n         continue;\n        } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n         err('Invalid code point in port: ' + c);\n        } else {\n         invalid.call(this);\n        }\n        break;\n       case 'relative path start':\n        if (c === '\\\\') {\n         err('\\'\\\\\\' not allowed in path.');\n        }\n        state = 'relative path';\n        if ('/' !== c && '\\\\' !== c) {\n         continue;\n        }\n        break;\n       case 'relative path':\n        if (c === EOF || c === '/' || c === '\\\\' || !stateOverride && (c === '?' || c === '#')) {\n         if (c === '\\\\') {\n          err('\\\\ not allowed in relative path.');\n         }\n         var tmp;\n         if (tmp = relativePathDotMapping[buffer.toLowerCase()]) {\n          buffer = tmp;\n         }\n         if (buffer === '..') {\n          this._path.pop();\n          if ('/' !== c && '\\\\' !== c) {\n           this._path.push('');\n          }\n         } else if (buffer === '.' && '/' !== c && '\\\\' !== c) {\n          this._path.push('');\n         } else if ('.' !== buffer) {\n          if (this._scheme === 'file' && this._path.length === 0 && buffer.length === 2 && ALPHA.test(buffer[0]) && buffer[1] === '|') {\n           buffer = buffer[0] + ':';\n          }\n          this._path.push(buffer);\n         }\n         buffer = '';\n         if (c === '?') {\n          this._query = '?';\n          state = 'query';\n         } else if (c === '#') {\n          this._fragment = '#';\n          state = 'fragment';\n         }\n        } else if ('\\t' !== c && '\\n' !== c && '\\r' !== c) {\n         buffer += percentEscape(c);\n        }\n        break;\n       case 'query':\n        if (!stateOverride && c === '#') {\n         this._fragment = '#';\n         state = 'fragment';\n        } else if (EOF !== c && '\\t' !== c && '\\n' !== c && '\\r' !== c) {\n         this._query += percentEscapeQuery(c);\n        }\n        break;\n       case 'fragment':\n        if (EOF !== c && '\\t' !== c && '\\n' !== c && '\\r' !== c) {\n         this._fragment += c;\n        }\n        break;\n       }\n       cursor++;\n      }\n    }\n    function clear() {\n     this._scheme = '';\n     this._schemeData = '';\n     this._username = '';\n     this._password = null;\n     this._host = '';\n     this._port = '';\n     this._path = [];\n     this._query = '';\n     this._fragment = '';\n     this._isInvalid = false;\n     this._isRelative = false;\n    }\n    function JURL(url, base)\n     {\n      if (base !== undefined && !(base instanceof JURL)) {\n       base = new JURL(String(base));\n      }\n      this._url = url;\n      clear.call(this);\n      var input = url.replace(/^[ \\t\\r\\n\\f]+|[ \\t\\r\\n\\f]+$/g, '');\n      parse.call(this, input, null, base);\n     }\n    JURL.prototype = {\n     toString: function () {\n      return this.href;\n     },\n     get href() {\n      if (this._isInvalid) {\n       return this._url;\n      }\n      var authority = '';\n      if ('' !== this._username || null !== this._password) {\n       authority = this._username + (null !== this._password ? ':' + this._password : '') + '@';\n      }\n      return this.protocol + (this._isRelative ? '//' + authority + this.host : '') + this.pathname + this._query + this._fragment;\n     },\n     set href(href) {\n      clear.call(this);\n      parse.call(this, href);\n     },\n     get protocol() {\n      return this._scheme + ':';\n     },\n     set protocol(protocol) {\n      if (this._isInvalid) {\n       return;\n      }\n      parse.call(this, protocol + ':', 'scheme start');\n     },\n     get host() {\n      return this._isInvalid ? '' : this._port ? this._host + ':' + this._port : this._host;\n     },\n     set host(host) {\n      if (this._isInvalid || !this._isRelative) {\n       return;\n      }\n      parse.call(this, host, 'host');\n     },\n     get hostname() {\n      return this._host;\n     },\n     set hostname(hostname) {\n      if (this._isInvalid || !this._isRelative) {\n       return;\n      }\n      parse.call(this, hostname, 'hostname');\n     },\n     get port() {\n      return this._port;\n     },\n     set port(port) {\n      if (this._isInvalid || !this._isRelative) {\n       return;\n      }\n      parse.call(this, port, 'port');\n     },\n     get pathname() {\n      return this._isInvalid ? '' : this._isRelative ? '/' + this._path.join('/') : this._schemeData;\n     },\n     set pathname(pathname) {\n      if (this._isInvalid || !this._isRelative) {\n       return;\n      }\n      this._path = [];\n      parse.call(this, pathname, 'relative path start');\n     },\n     get search() {\n      return this._isInvalid || !this._query || this._query === '?' ? '' : this._query;\n     },\n     set search(search) {\n      if (this._isInvalid || !this._isRelative) {\n       return;\n      }\n      this._query = '?';\n      if (search[0] === '?') {\n       search = search.slice(1);\n      }\n      parse.call(this, search, 'query');\n     },\n     get hash() {\n      return this._isInvalid || !this._fragment || this._fragment === '#' ? '' : this._fragment;\n     },\n     set hash(hash) {\n      if (this._isInvalid) {\n       return;\n      }\n      this._fragment = '#';\n      if (hash[0] === '#') {\n       hash = hash.slice(1);\n      }\n      parse.call(this, hash, 'fragment');\n     },\n     get origin() {\n      var host;\n      if (this._isInvalid || !this._scheme) {\n       return '';\n      }\n      switch (this._scheme) {\n      case 'data':\n      case 'file':\n      case 'javascript':\n      case 'mailto':\n       return 'null';\n      }\n      host = this.host;\n      if (!host) {\n       return '';\n      }\n      return this._scheme + '://' + host;\n     }\n    };\n    var OriginalURL = scope.URL;\n    if (OriginalURL) {\n     JURL.createObjectURL = function (blob) {\n      return OriginalURL.createObjectURL.apply(OriginalURL, arguments);\n     };\n     JURL.revokeObjectURL = function (url) {\n      OriginalURL.revokeObjectURL(url);\n     };\n    }\n    scope.URL = JURL;\n   }(globalScope));\n   exports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\n   exports.IDENTITY_MATRIX = IDENTITY_MATRIX;\n   exports.OPS = OPS;\n   exports.VERBOSITY_LEVELS = VERBOSITY_LEVELS;\n   exports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\n   exports.AnnotationBorderStyleType = AnnotationBorderStyleType;\n   exports.AnnotationFieldFlag = AnnotationFieldFlag;\n   exports.AnnotationFlag = AnnotationFlag;\n   exports.AnnotationType = AnnotationType;\n   exports.FontType = FontType;\n   exports.ImageKind = ImageKind;\n   exports.InvalidPDFException = InvalidPDFException;\n   exports.MessageHandler = MessageHandler;\n   exports.MissingDataException = MissingDataException;\n   exports.MissingPDFException = MissingPDFException;\n   exports.NotImplementedException = NotImplementedException;\n   exports.PageViewport = PageViewport;\n   exports.PasswordException = PasswordException;\n   exports.PasswordResponses = PasswordResponses;\n   exports.StatTimer = StatTimer;\n   exports.StreamType = StreamType;\n   exports.TextRenderingMode = TextRenderingMode;\n   exports.UnexpectedResponseException = UnexpectedResponseException;\n   exports.UnknownErrorException = UnknownErrorException;\n   exports.Util = Util;\n   exports.XRefParseException = XRefParseException;\n   exports.arrayByteLength = arrayByteLength;\n   exports.arraysToBytes = arraysToBytes;\n   exports.assert = assert;\n   exports.bytesToString = bytesToString;\n   exports.createBlob = createBlob;\n   exports.createPromiseCapability = createPromiseCapability;\n   exports.createObjectURL = createObjectURL;\n   exports.deprecated = deprecated;\n   exports.error = error;\n   exports.getLookupTableFactory = getLookupTableFactory;\n   exports.getVerbosityLevel = getVerbosityLevel;\n   exports.globalScope = globalScope;\n   exports.info = info;\n   exports.isArray = isArray;\n   exports.isArrayBuffer = isArrayBuffer;\n   exports.isBool = isBool;\n   exports.isEmptyObj = isEmptyObj;\n   exports.isInt = isInt;\n   exports.isNum = isNum;\n   exports.isString = isString;\n   exports.isSpace = isSpace;\n   exports.isSameOrigin = isSameOrigin;\n   exports.createValidAbsoluteUrl = createValidAbsoluteUrl;\n   exports.isLittleEndian = isLittleEndian;\n   exports.isEvalSupported = isEvalSupported;\n   exports.loadJpegStream = loadJpegStream;\n   exports.log2 = log2;\n   exports.readInt8 = readInt8;\n   exports.readUint16 = readUint16;\n   exports.readUint32 = readUint32;\n   exports.removeNullCharacters = removeNullCharacters;\n   exports.setVerbosityLevel = setVerbosityLevel;\n   exports.shadow = shadow;\n   exports.string32 = string32;\n   exports.stringToBytes = stringToBytes;\n   exports.stringToPDFString = stringToPDFString;\n   exports.stringToUTF8String = stringToUTF8String;\n   exports.utf8StringToString = utf8StringToString;\n   exports.warn = warn;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsCoreBidi = {}, root.pdfjsSharedUtil);\n  }(this, function (exports, sharedUtil) {\n   var warn = sharedUtil.warn;\n   var baseTypes = [\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'S',\n    'B',\n    'S',\n    'WS',\n    'B',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'B',\n    'B',\n    'B',\n    'S',\n    'WS',\n    'ON',\n    'ON',\n    'ET',\n    'ET',\n    'ET',\n    'ON',\n    'ON',\n    'ON',\n    'ON',\n    'ON',\n    'ES',\n    'CS',\n    'ES',\n    'CS',\n    'CS',\n    'EN',\n    'EN',\n    'EN',\n    'EN',\n    'EN',\n    'EN',\n    'EN',\n    'EN',\n    'EN',\n    'EN',\n    'CS',\n    'ON',\n    'ON',\n    'ON',\n    'ON',\n    'ON',\n    'ON',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'ON',\n    'ON',\n    'ON',\n    'ON',\n    'ON',\n    'ON',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'ON',\n    'ON',\n    'ON',\n    'ON',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'B',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'BN',\n    'CS',\n    'ON',\n    'ET',\n    'ET',\n    'ET',\n    'ET',\n    'ON',\n    'ON',\n    'ON',\n    'ON',\n    'L',\n    'ON',\n    'ON',\n    'BN',\n    'ON',\n    'ON',\n    'ET',\n    'ET',\n    'EN',\n    'EN',\n    'ON',\n    'L',\n    'ON',\n    'ON',\n    'ON',\n    'EN',\n    'L',\n    'ON',\n    'ON',\n    'ON',\n    'ON',\n    'ON',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'ON',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'ON',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L',\n    'L'\n   ];\n   var arabicTypes = [\n    'AN',\n    'AN',\n    'AN',\n    'AN',\n    'AN',\n    'AN',\n    'ON',\n    'ON',\n    'AL',\n    'ET',\n    'ET',\n    'AL',\n    'CS',\n    'AL',\n    'ON',\n    'ON',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'AL',\n    'AL',\n    '',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'AN',\n    'AN',\n    'AN',\n    'AN',\n    'AN',\n    'AN',\n    'AN',\n    'AN',\n    'AN',\n    'AN',\n    'ET',\n    'AN',\n    'AN',\n    'AL',\n    'AL',\n    'AL',\n    'NSM',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'AN',\n    'ON',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'AL',\n    'AL',\n    'NSM',\n    'NSM',\n    'ON',\n    'NSM',\n    'NSM',\n    'NSM',\n    'NSM',\n    'AL',\n    'AL',\n    'EN',\n    'EN',\n    'EN',\n    'EN',\n    'EN',\n    'EN',\n    'EN',\n    'EN',\n    'EN',\n    'EN',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL',\n    'AL'\n   ];\n   function isOdd(i) {\n    return (i & 1) !== 0;\n   }\n   function isEven(i) {\n    return (i & 1) === 0;\n   }\n   function findUnequal(arr, start, value) {\n    for (var j = start, jj = arr.length; j < jj; ++j) {\n     if (arr[j] !== value) {\n      return j;\n     }\n    }\n    return j;\n   }\n   function setValues(arr, start, end, value) {\n    for (var j = start; j < end; ++j) {\n     arr[j] = value;\n    }\n   }\n   function reverseValues(arr, start, end) {\n    for (var i = start, j = end - 1; i < j; ++i, --j) {\n     var temp = arr[i];\n     arr[i] = arr[j];\n     arr[j] = temp;\n    }\n   }\n   function createBidiText(str, isLTR, vertical) {\n    return {\n     str: str,\n     dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\n    };\n   }\n   var chars = [];\n   var types = [];\n   function bidi(str, startLevel, vertical) {\n    var isLTR = true;\n    var strLength = str.length;\n    if (strLength === 0 || vertical) {\n     return createBidiText(str, isLTR, vertical);\n    }\n    chars.length = strLength;\n    types.length = strLength;\n    var numBidi = 0;\n    var i, ii;\n    for (i = 0; i < strLength; ++i) {\n     chars[i] = str.charAt(i);\n     var charCode = str.charCodeAt(i);\n     var charType = 'L';\n     if (charCode <= 0x00ff) {\n      charType = baseTypes[charCode];\n     } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n      charType = 'R';\n     } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n      charType = arabicTypes[charCode & 0xff];\n      if (!charType) {\n       warn('Bidi: invalid Unicode character ' + charCode.toString(16));\n      }\n     } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n      charType = 'AL';\n     }\n     if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n      numBidi++;\n     }\n     types[i] = charType;\n    }\n    if (numBidi === 0) {\n     isLTR = true;\n     return createBidiText(str, isLTR);\n    }\n    if (startLevel === -1) {\n     if (numBidi / strLength < 0.3) {\n      isLTR = true;\n      startLevel = 0;\n     } else {\n      isLTR = false;\n      startLevel = 1;\n     }\n    }\n    var levels = [];\n    for (i = 0; i < strLength; ++i) {\n     levels[i] = startLevel;\n    }\n    var e = isOdd(startLevel) ? 'R' : 'L';\n    var sor = e;\n    var eor = sor;\n    var lastType = sor;\n    for (i = 0; i < strLength; ++i) {\n     if (types[i] === 'NSM') {\n      types[i] = lastType;\n     } else {\n      lastType = types[i];\n     }\n    }\n    lastType = sor;\n    var t;\n    for (i = 0; i < strLength; ++i) {\n     t = types[i];\n     if (t === 'EN') {\n      types[i] = lastType === 'AL' ? 'AN' : 'EN';\n     } else if (t === 'R' || t === 'L' || t === 'AL') {\n      lastType = t;\n     }\n    }\n    for (i = 0; i < strLength; ++i) {\n     t = types[i];\n     if (t === 'AL') {\n      types[i] = 'R';\n     }\n    }\n    for (i = 1; i < strLength - 1; ++i) {\n     if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n      types[i] = 'EN';\n     }\n     if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\n      types[i] = types[i - 1];\n     }\n    }\n    for (i = 0; i < strLength; ++i) {\n     if (types[i] === 'EN') {\n      var j;\n      for (j = i - 1; j >= 0; --j) {\n       if (types[j] !== 'ET') {\n        break;\n       }\n       types[j] = 'EN';\n      }\n      for (j = i + 1; j < strLength; ++j) {\n       if (types[j] !== 'ET') {\n        break;\n       }\n       types[j] = 'EN';\n      }\n     }\n    }\n    for (i = 0; i < strLength; ++i) {\n     t = types[i];\n     if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n      types[i] = 'ON';\n     }\n    }\n    lastType = sor;\n    for (i = 0; i < strLength; ++i) {\n     t = types[i];\n     if (t === 'EN') {\n      types[i] = lastType === 'L' ? 'L' : 'EN';\n     } else if (t === 'R' || t === 'L') {\n      lastType = t;\n     }\n    }\n    for (i = 0; i < strLength; ++i) {\n     if (types[i] === 'ON') {\n      var end = findUnequal(types, i + 1, 'ON');\n      var before = sor;\n      if (i > 0) {\n       before = types[i - 1];\n      }\n      var after = eor;\n      if (end + 1 < strLength) {\n       after = types[end + 1];\n      }\n      if (before !== 'L') {\n       before = 'R';\n      }\n      if (after !== 'L') {\n       after = 'R';\n      }\n      if (before === after) {\n       setValues(types, i, end, before);\n      }\n      i = end - 1;\n     }\n    }\n    for (i = 0; i < strLength; ++i) {\n     if (types[i] === 'ON') {\n      types[i] = e;\n     }\n    }\n    for (i = 0; i < strLength; ++i) {\n     t = types[i];\n     if (isEven(levels[i])) {\n      if (t === 'R') {\n       levels[i] += 1;\n      } else if (t === 'AN' || t === 'EN') {\n       levels[i] += 2;\n      }\n     } else {\n      if (t === 'L' || t === 'AN' || t === 'EN') {\n       levels[i] += 1;\n      }\n     }\n    }\n    var highestLevel = -1;\n    var lowestOddLevel = 99;\n    var level;\n    for (i = 0, ii = levels.length; i < ii; ++i) {\n     level = levels[i];\n     if (highestLevel < level) {\n      highestLevel = level;\n     }\n     if (lowestOddLevel > level && isOdd(level)) {\n      lowestOddLevel = level;\n     }\n    }\n    for (level = highestLevel; level >= lowestOddLevel; --level) {\n     var start = -1;\n     for (i = 0, ii = levels.length; i < ii; ++i) {\n      if (levels[i] < level) {\n       if (start >= 0) {\n        reverseValues(chars, start, i);\n        start = -1;\n       }\n      } else if (start < 0) {\n       start = i;\n      }\n     }\n     if (start >= 0) {\n      reverseValues(chars, start, levels.length);\n     }\n    }\n    for (i = 0, ii = chars.length; i < ii; ++i) {\n     var ch = chars[i];\n     if (ch === '<' || ch === '>') {\n      chars[i] = '';\n     }\n    }\n    return createBidiText(chars.join(''), isLTR);\n   }\n   exports.bidi = bidi;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsCoreCFFParser = {}, root.pdfjsSharedUtil, root.pdfjsCoreCharsets, root.pdfjsCoreEncodings);\n  }(this, function (exports, sharedUtil, coreCharsets, coreEncodings) {\n   var error = sharedUtil.error;\n   var info = sharedUtil.info;\n   var bytesToString = sharedUtil.bytesToString;\n   var warn = sharedUtil.warn;\n   var isArray = sharedUtil.isArray;\n   var Util = sharedUtil.Util;\n   var stringToBytes = sharedUtil.stringToBytes;\n   var assert = sharedUtil.assert;\n   var ISOAdobeCharset = coreCharsets.ISOAdobeCharset;\n   var ExpertCharset = coreCharsets.ExpertCharset;\n   var ExpertSubsetCharset = coreCharsets.ExpertSubsetCharset;\n   var StandardEncoding = coreEncodings.StandardEncoding;\n   var ExpertEncoding = coreEncodings.ExpertEncoding;\n   var MAX_SUBR_NESTING = 10;\n   var CFFStandardStrings = [\n    '.notdef',\n    'space',\n    'exclam',\n    'quotedbl',\n    'numbersign',\n    'dollar',\n    'percent',\n    'ampersand',\n    'quoteright',\n    'parenleft',\n    'parenright',\n    'asterisk',\n    'plus',\n    'comma',\n    'hyphen',\n    'period',\n    'slash',\n    'zero',\n    'one',\n    'two',\n    'three',\n    'four',\n    'five',\n    'six',\n    'seven',\n    'eight',\n    'nine',\n    'colon',\n    'semicolon',\n    'less',\n    'equal',\n    'greater',\n    'question',\n    'at',\n    'A',\n    'B',\n    'C',\n    'D',\n    'E',\n    'F',\n    'G',\n    'H',\n    'I',\n    'J',\n    'K',\n    'L',\n    'M',\n    'N',\n    'O',\n    'P',\n    'Q',\n    'R',\n    'S',\n    'T',\n    'U',\n    'V',\n    'W',\n    'X',\n    'Y',\n    'Z',\n    'bracketleft',\n    'backslash',\n    'bracketright',\n    'asciicircum',\n    'underscore',\n    'quoteleft',\n    'a',\n    'b',\n    'c',\n    'd',\n    'e',\n    'f',\n    'g',\n    'h',\n    'i',\n    'j',\n    'k',\n    'l',\n    'm',\n    'n',\n    'o',\n    'p',\n    'q',\n    'r',\n    's',\n    't',\n    'u',\n    'v',\n    'w',\n    'x',\n    'y',\n    'z',\n    'braceleft',\n    'bar',\n    'braceright',\n    'asciitilde',\n    'exclamdown',\n    'cent',\n    'sterling',\n    'fraction',\n    'yen',\n    'florin',\n    'section',\n    'currency',\n    'quotesingle',\n    'quotedblleft',\n    'guillemotleft',\n    'guilsinglleft',\n    'guilsinglright',\n    'fi',\n    'fl',\n    'endash',\n    'dagger',\n    'daggerdbl',\n    'periodcentered',\n    'paragraph',\n    'bullet',\n    'quotesinglbase',\n    'quotedblbase',\n    'quotedblright',\n    'guillemotright',\n    'ellipsis',\n    'perthousand',\n    'questiondown',\n    'grave',\n    'acute',\n    'circumflex',\n    'tilde',\n    'macron',\n    'breve',\n    'dotaccent',\n    'dieresis',\n    'ring',\n    'cedilla',\n    'hungarumlaut',\n    'ogonek',\n    'caron',\n    'emdash',\n    'AE',\n    'ordfeminine',\n    'Lslash',\n    'Oslash',\n    'OE',\n    'ordmasculine',\n    'ae',\n    'dotlessi',\n    'lslash',\n    'oslash',\n    'oe',\n    'germandbls',\n    'onesuperior',\n    'logicalnot',\n    'mu',\n    'trademark',\n    'Eth',\n    'onehalf',\n    'plusminus',\n    'Thorn',\n    'onequarter',\n    'divide',\n    'brokenbar',\n    'degree',\n    'thorn',\n    'threequarters',\n    'twosuperior',\n    'registered',\n    'minus',\n    'eth',\n    'multiply',\n    'threesuperior',\n    'copyright',\n    'Aacute',\n    'Acircumflex',\n    'Adieresis',\n    'Agrave',\n    'Aring',\n    'Atilde',\n    'Ccedilla',\n    'Eacute',\n    'Ecircumflex',\n    'Edieresis',\n    'Egrave',\n    'Iacute',\n    'Icircumflex',\n    'Idieresis',\n    'Igrave',\n    'Ntilde',\n    'Oacute',\n    'Ocircumflex',\n    'Odieresis',\n    'Ograve',\n    'Otilde',\n    'Scaron',\n    'Uacute',\n    'Ucircumflex',\n    'Udieresis',\n    'Ugrave',\n    'Yacute',\n    'Ydieresis',\n    'Zcaron',\n    'aacute',\n    'acircumflex',\n    'adieresis',\n    'agrave',\n    'aring',\n    'atilde',\n    'ccedilla',\n    'eacute',\n    'ecircumflex',\n    'edieresis',\n    'egrave',\n    'iacute',\n    'icircumflex',\n    'idieresis',\n    'igrave',\n    'ntilde',\n    'oacute',\n    'ocircumflex',\n    'odieresis',\n    'ograve',\n    'otilde',\n    'scaron',\n    'uacute',\n    'ucircumflex',\n    'udieresis',\n    'ugrave',\n    'yacute',\n    'ydieresis',\n    'zcaron',\n    'exclamsmall',\n    'Hungarumlautsmall',\n    'dollaroldstyle',\n    'dollarsuperior',\n    'ampersandsmall',\n    'Acutesmall',\n    'parenleftsuperior',\n    'parenrightsuperior',\n    'twodotenleader',\n    'onedotenleader',\n    'zerooldstyle',\n    'oneoldstyle',\n    'twooldstyle',\n    'threeoldstyle',\n    'fouroldstyle',\n    'fiveoldstyle',\n    'sixoldstyle',\n    'sevenoldstyle',\n    'eightoldstyle',\n    'nineoldstyle',\n    'commasuperior',\n    'threequartersemdash',\n    'periodsuperior',\n    'questionsmall',\n    'asuperior',\n    'bsuperior',\n    'centsuperior',\n    'dsuperior',\n    'esuperior',\n    'isuperior',\n    'lsuperior',\n    'msuperior',\n    'nsuperior',\n    'osuperior',\n    'rsuperior',\n    'ssuperior',\n    'tsuperior',\n    'ff',\n    'ffi',\n    'ffl',\n    'parenleftinferior',\n    'parenrightinferior',\n    'Circumflexsmall',\n    'hyphensuperior',\n    'Gravesmall',\n    'Asmall',\n    'Bsmall',\n    'Csmall',\n    'Dsmall',\n    'Esmall',\n    'Fsmall',\n    'Gsmall',\n    'Hsmall',\n    'Ismall',\n    'Jsmall',\n    'Ksmall',\n    'Lsmall',\n    'Msmall',\n    'Nsmall',\n    'Osmall',\n    'Psmall',\n    'Qsmall',\n    'Rsmall',\n    'Ssmall',\n    'Tsmall',\n    'Usmall',\n    'Vsmall',\n    'Wsmall',\n    'Xsmall',\n    'Ysmall',\n    'Zsmall',\n    'colonmonetary',\n    'onefitted',\n    'rupiah',\n    'Tildesmall',\n    'exclamdownsmall',\n    'centoldstyle',\n    'Lslashsmall',\n    'Scaronsmall',\n    'Zcaronsmall',\n    'Dieresissmall',\n    'Brevesmall',\n    'Caronsmall',\n    'Dotaccentsmall',\n    'Macronsmall',\n    'figuredash',\n    'hypheninferior',\n    'Ogoneksmall',\n    'Ringsmall',\n    'Cedillasmall',\n    'questiondownsmall',\n    'oneeighth',\n    'threeeighths',\n    'fiveeighths',\n    'seveneighths',\n    'onethird',\n    'twothirds',\n    'zerosuperior',\n    'foursuperior',\n    'fivesuperior',\n    'sixsuperior',\n    'sevensuperior',\n    'eightsuperior',\n    'ninesuperior',\n    'zeroinferior',\n    'oneinferior',\n    'twoinferior',\n    'threeinferior',\n    'fourinferior',\n    'fiveinferior',\n    'sixinferior',\n    'seveninferior',\n    'eightinferior',\n    'nineinferior',\n    'centinferior',\n    'dollarinferior',\n    'periodinferior',\n    'commainferior',\n    'Agravesmall',\n    'Aacutesmall',\n    'Acircumflexsmall',\n    'Atildesmall',\n    'Adieresissmall',\n    'Aringsmall',\n    'AEsmall',\n    'Ccedillasmall',\n    'Egravesmall',\n    'Eacutesmall',\n    'Ecircumflexsmall',\n    'Edieresissmall',\n    'Igravesmall',\n    'Iacutesmall',\n    'Icircumflexsmall',\n    'Idieresissmall',\n    'Ethsmall',\n    'Ntildesmall',\n    'Ogravesmall',\n    'Oacutesmall',\n    'Ocircumflexsmall',\n    'Otildesmall',\n    'Odieresissmall',\n    'OEsmall',\n    'Oslashsmall',\n    'Ugravesmall',\n    'Uacutesmall',\n    'Ucircumflexsmall',\n    'Udieresissmall',\n    'Yacutesmall',\n    'Thornsmall',\n    'Ydieresissmall',\n    '001.000',\n    '001.001',\n    '001.002',\n    '001.003',\n    'Black',\n    'Bold',\n    'Book',\n    'Light',\n    'Medium',\n    'Regular',\n    'Roman',\n    'Semibold'\n   ];\n   var CFFParser = function CFFParserClosure() {\n    var CharstringValidationData = [\n     null,\n     {\n      id: 'hstem',\n      min: 2,\n      stackClearing: true,\n      stem: true\n     },\n     null,\n     {\n      id: 'vstem',\n      min: 2,\n      stackClearing: true,\n      stem: true\n     },\n     {\n      id: 'vmoveto',\n      min: 1,\n      stackClearing: true\n     },\n     {\n      id: 'rlineto',\n      min: 2,\n      resetStack: true\n     },\n     {\n      id: 'hlineto',\n      min: 1,\n      resetStack: true\n     },\n     {\n      id: 'vlineto',\n      min: 1,\n      resetStack: true\n     },\n     {\n      id: 'rrcurveto',\n      min: 6,\n      resetStack: true\n     },\n     null,\n     {\n      id: 'callsubr',\n      min: 1,\n      undefStack: true\n     },\n     {\n      id: 'return',\n      min: 0,\n      undefStack: true\n     },\n     null,\n     null,\n     {\n      id: 'endchar',\n      min: 0,\n      stackClearing: true\n     },\n     null,\n     null,\n     null,\n     {\n      id: 'hstemhm',\n      min: 2,\n      stackClearing: true,\n      stem: true\n     },\n     {\n      id: 'hintmask',\n      min: 0,\n      stackClearing: true\n     },\n     {\n      id: 'cntrmask',\n      min: 0,\n      stackClearing: true\n     },\n     {\n      id: 'rmoveto',\n      min: 2,\n      stackClearing: true\n     },\n     {\n      id: 'hmoveto',\n      min: 1,\n      stackClearing: true\n     },\n     {\n      id: 'vstemhm',\n      min: 2,\n      stackClearing: true,\n      stem: true\n     },\n     {\n      id: 'rcurveline',\n      min: 8,\n      resetStack: true\n     },\n     {\n      id: 'rlinecurve',\n      min: 8,\n      resetStack: true\n     },\n     {\n      id: 'vvcurveto',\n      min: 4,\n      resetStack: true\n     },\n     {\n      id: 'hhcurveto',\n      min: 4,\n      resetStack: true\n     },\n     null,\n     {\n      id: 'callgsubr',\n      min: 1,\n      undefStack: true\n     },\n     {\n      id: 'vhcurveto',\n      min: 4,\n      resetStack: true\n     },\n     {\n      id: 'hvcurveto',\n      min: 4,\n      resetStack: true\n     }\n    ];\n    var CharstringValidationData12 = [\n     null,\n     null,\n     null,\n     {\n      id: 'and',\n      min: 2,\n      stackDelta: -1\n     },\n     {\n      id: 'or',\n      min: 2,\n      stackDelta: -1\n     },\n     {\n      id: 'not',\n      min: 1,\n      stackDelta: 0\n     },\n     null,\n     null,\n     null,\n     {\n      id: 'abs',\n      min: 1,\n      stackDelta: 0\n     },\n     {\n      id: 'add',\n      min: 2,\n      stackDelta: -1,\n      stackFn: function stack_div(stack, index) {\n       stack[index - 2] = stack[index - 2] + stack[index - 1];\n      }\n     },\n     {\n      id: 'sub',\n      min: 2,\n      stackDelta: -1,\n      stackFn: function stack_div(stack, index) {\n       stack[index - 2] = stack[index - 2] - stack[index - 1];\n      }\n     },\n     {\n      id: 'div',\n      min: 2,\n      stackDelta: -1,\n      stackFn: function stack_div(stack, index) {\n       stack[index - 2] = stack[index - 2] / stack[index - 1];\n      }\n     },\n     null,\n     {\n      id: 'neg',\n      min: 1,\n      stackDelta: 0,\n      stackFn: function stack_div(stack, index) {\n       stack[index - 1] = -stack[index - 1];\n      }\n     },\n     {\n      id: 'eq',\n      min: 2,\n      stackDelta: -1\n     },\n     null,\n     null,\n     {\n      id: 'drop',\n      min: 1,\n      stackDelta: -1\n     },\n     null,\n     {\n      id: 'put',\n      min: 2,\n      stackDelta: -2\n     },\n     {\n      id: 'get',\n      min: 1,\n      stackDelta: 0\n     },\n     {\n      id: 'ifelse',\n      min: 4,\n      stackDelta: -3\n     },\n     {\n      id: 'random',\n      min: 0,\n      stackDelta: 1\n     },\n     {\n      id: 'mul',\n      min: 2,\n      stackDelta: -1,\n      stackFn: function stack_div(stack, index) {\n       stack[index - 2] = stack[index - 2] * stack[index - 1];\n      }\n     },\n     null,\n     {\n      id: 'sqrt',\n      min: 1,\n      stackDelta: 0\n     },\n     {\n      id: 'dup',\n      min: 1,\n      stackDelta: 1\n     },\n     {\n      id: 'exch',\n      min: 2,\n      stackDelta: 0\n     },\n     {\n      id: 'index',\n      min: 2,\n      stackDelta: 0\n     },\n     {\n      id: 'roll',\n      min: 3,\n      stackDelta: -2\n     },\n     null,\n     null,\n     null,\n     {\n      id: 'hflex',\n      min: 7,\n      resetStack: true\n     },\n     {\n      id: 'flex',\n      min: 13,\n      resetStack: true\n     },\n     {\n      id: 'hflex1',\n      min: 9,\n      resetStack: true\n     },\n     {\n      id: 'flex1',\n      min: 11,\n      resetStack: true\n     }\n    ];\n    function CFFParser(file, properties, seacAnalysisEnabled) {\n     this.bytes = file.getBytes();\n     this.properties = properties;\n     this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n    }\n    CFFParser.prototype = {\n     parse: function CFFParser_parse() {\n      var properties = this.properties;\n      var cff = new CFF();\n      this.cff = cff;\n      var header = this.parseHeader();\n      var nameIndex = this.parseIndex(header.endPos);\n      var topDictIndex = this.parseIndex(nameIndex.endPos);\n      var stringIndex = this.parseIndex(topDictIndex.endPos);\n      var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n      cff.header = header.obj;\n      cff.names = this.parseNameIndex(nameIndex.obj);\n      cff.strings = this.parseStringIndex(stringIndex.obj);\n      cff.topDict = topDict;\n      cff.globalSubrIndex = globalSubrIndex.obj;\n      this.parsePrivateDict(cff.topDict);\n      cff.isCIDFont = topDict.hasName('ROS');\n      var charStringOffset = topDict.getByName('CharStrings');\n      var charStringIndex = this.parseIndex(charStringOffset).obj;\n      var fontMatrix = topDict.getByName('FontMatrix');\n      if (fontMatrix) {\n       properties.fontMatrix = fontMatrix;\n      }\n      var fontBBox = topDict.getByName('FontBBox');\n      if (fontBBox) {\n       properties.ascent = fontBBox[3];\n       properties.descent = fontBBox[1];\n       properties.ascentScaled = true;\n      }\n      var charset, encoding;\n      if (cff.isCIDFont) {\n       var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n       for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n        var dictRaw = fdArrayIndex.get(i);\n        var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n        this.parsePrivateDict(fontDict);\n        cff.fdArray.push(fontDict);\n       }\n       encoding = null;\n       charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\n       cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\n      } else {\n       charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\n       encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\n      }\n      cff.charset = charset;\n      cff.encoding = encoding;\n      var charStringsAndSeacs = this.parseCharStrings(charStringIndex, topDict.privateDict.subrsIndex, globalSubrIndex.obj, cff.fdSelect, cff.fdArray);\n      cff.charStrings = charStringsAndSeacs.charStrings;\n      cff.seacs = charStringsAndSeacs.seacs;\n      cff.widths = charStringsAndSeacs.widths;\n      return cff;\n     },\n     parseHeader: function CFFParser_parseHeader() {\n      var bytes = this.bytes;\n      var bytesLength = bytes.length;\n      var offset = 0;\n      while (offset < bytesLength && bytes[offset] !== 1) {\n       ++offset;\n      }\n      if (offset >= bytesLength) {\n       error('Invalid CFF header');\n      } else if (offset !== 0) {\n       info('cff data is shifted');\n       bytes = bytes.subarray(offset);\n       this.bytes = bytes;\n      }\n      var major = bytes[0];\n      var minor = bytes[1];\n      var hdrSize = bytes[2];\n      var offSize = bytes[3];\n      var header = new CFFHeader(major, minor, hdrSize, offSize);\n      return {\n       obj: header,\n       endPos: hdrSize\n      };\n     },\n     parseDict: function CFFParser_parseDict(dict) {\n      var pos = 0;\n      function parseOperand() {\n       var value = dict[pos++];\n       if (value === 30) {\n        return parseFloatOperand();\n       } else if (value === 28) {\n        value = dict[pos++];\n        value = (value << 24 | dict[pos++] << 16) >> 16;\n        return value;\n       } else if (value === 29) {\n        value = dict[pos++];\n        value = value << 8 | dict[pos++];\n        value = value << 8 | dict[pos++];\n        value = value << 8 | dict[pos++];\n        return value;\n       } else if (value >= 32 && value <= 246) {\n        return value - 139;\n       } else if (value >= 247 && value <= 250) {\n        return (value - 247) * 256 + dict[pos++] + 108;\n       } else if (value >= 251 && value <= 254) {\n        return -((value - 251) * 256) - dict[pos++] - 108;\n       }\n       warn('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n       return NaN;\n      }\n      function parseFloatOperand() {\n       var str = '';\n       var eof = 15;\n       var lookup = [\n        '0',\n        '1',\n        '2',\n        '3',\n        '4',\n        '5',\n        '6',\n        '7',\n        '8',\n        '9',\n        '.',\n        'E',\n        'E-',\n        null,\n        '-'\n       ];\n       var length = dict.length;\n       while (pos < length) {\n        var b = dict[pos++];\n        var b1 = b >> 4;\n        var b2 = b & 15;\n        if (b1 === eof) {\n         break;\n        }\n        str += lookup[b1];\n        if (b2 === eof) {\n         break;\n        }\n        str += lookup[b2];\n       }\n       return parseFloat(str);\n      }\n      var operands = [];\n      var entries = [];\n      pos = 0;\n      var end = dict.length;\n      while (pos < end) {\n       var b = dict[pos];\n       if (b <= 21) {\n        if (b === 12) {\n         b = b << 8 | dict[++pos];\n        }\n        entries.push([\n         b,\n         operands\n        ]);\n        operands = [];\n        ++pos;\n       } else {\n        operands.push(parseOperand());\n       }\n      }\n      return entries;\n     },\n     parseIndex: function CFFParser_parseIndex(pos) {\n      var cffIndex = new CFFIndex();\n      var bytes = this.bytes;\n      var count = bytes[pos++] << 8 | bytes[pos++];\n      var offsets = [];\n      var end = pos;\n      var i, ii;\n      if (count !== 0) {\n       var offsetSize = bytes[pos++];\n       var startPos = pos + (count + 1) * offsetSize - 1;\n       for (i = 0, ii = count + 1; i < ii; ++i) {\n        var offset = 0;\n        for (var j = 0; j < offsetSize; ++j) {\n         offset <<= 8;\n         offset += bytes[pos++];\n        }\n        offsets.push(startPos + offset);\n       }\n       end = offsets[count];\n      }\n      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n       var offsetStart = offsets[i];\n       var offsetEnd = offsets[i + 1];\n       cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n      }\n      return {\n       obj: cffIndex,\n       endPos: end\n      };\n     },\n     parseNameIndex: function CFFParser_parseNameIndex(index) {\n      var names = [];\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n       var name = index.get(i);\n       var length = Math.min(name.length, 127);\n       var data = [];\n       for (var j = 0; j < length; ++j) {\n        var c = name[j];\n        if (j === 0 && c === 0) {\n         data[j] = c;\n         continue;\n        }\n        if (c < 33 || c > 126 || c === 91 || c === 93 || c === 40 || c === 41 || c === 123 || c === 125 || c === 60 || c === 62 || c === 47 || c === 37 || c === 35)\n         {\n          data[j] = 95;\n          continue;\n         }\n        data[j] = c;\n       }\n       names.push(bytesToString(data));\n      }\n      return names;\n     },\n     parseStringIndex: function CFFParser_parseStringIndex(index) {\n      var strings = new CFFStrings();\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n       var data = index.get(i);\n       strings.add(bytesToString(data));\n      }\n      return strings;\n     },\n     createDict: function CFFParser_createDict(Type, dict, strings) {\n      var cffDict = new Type(strings);\n      for (var i = 0, ii = dict.length; i < ii; ++i) {\n       var pair = dict[i];\n       var key = pair[0];\n       var value = pair[1];\n       cffDict.setByKey(key, value);\n      }\n      return cffDict;\n     },\n     parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n      if (state.callDepth > MAX_SUBR_NESTING) {\n       return false;\n      }\n      var stackSize = state.stackSize;\n      var stack = state.stack;\n      var length = data.length;\n      for (var j = 0; j < length;) {\n       var value = data[j++];\n       var validationCommand = null;\n       if (value === 12) {\n        var q = data[j++];\n        if (q === 0) {\n         data[j - 2] = 139;\n         data[j - 1] = 22;\n         stackSize = 0;\n        } else {\n         validationCommand = CharstringValidationData12[q];\n        }\n       } else if (value === 28) {\n        stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n        j += 2;\n        stackSize++;\n       } else if (value === 14) {\n        if (stackSize >= 4) {\n         stackSize -= 4;\n         if (this.seacAnalysisEnabled) {\n          state.seac = stack.slice(stackSize, stackSize + 4);\n          return false;\n         }\n        }\n        validationCommand = CharstringValidationData[value];\n       } else if (value >= 32 && value <= 246) {\n        stack[stackSize] = value - 139;\n        stackSize++;\n       } else if (value >= 247 && value <= 254) {\n        stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n        j++;\n        stackSize++;\n       } else if (value === 255) {\n        stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n        j += 4;\n        stackSize++;\n       } else if (value === 19 || value === 20) {\n        state.hints += stackSize >> 1;\n        j += state.hints + 7 >> 3;\n        stackSize %= 2;\n        validationCommand = CharstringValidationData[value];\n       } else if (value === 10 || value === 29) {\n        var subrsIndex;\n        if (value === 10) {\n         subrsIndex = localSubrIndex;\n        } else {\n         subrsIndex = globalSubrIndex;\n        }\n        if (!subrsIndex) {\n         validationCommand = CharstringValidationData[value];\n         warn('Missing subrsIndex for ' + validationCommand.id);\n         return false;\n        }\n        var bias = 32768;\n        if (subrsIndex.count < 1240) {\n         bias = 107;\n        } else if (subrsIndex.count < 33900) {\n         bias = 1131;\n        }\n        var subrNumber = stack[--stackSize] + bias;\n        if (subrNumber < 0 || subrNumber >= subrsIndex.count) {\n         validationCommand = CharstringValidationData[value];\n         warn('Out of bounds subrIndex for ' + validationCommand.id);\n         return false;\n        }\n        state.stackSize = stackSize;\n        state.callDepth++;\n        var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n        if (!valid) {\n         return false;\n        }\n        state.callDepth--;\n        stackSize = state.stackSize;\n        continue;\n       } else if (value === 11) {\n        state.stackSize = stackSize;\n        return true;\n       } else {\n        validationCommand = CharstringValidationData[value];\n       }\n       if (validationCommand) {\n        if (validationCommand.stem) {\n         state.hints += stackSize >> 1;\n        }\n        if ('min' in validationCommand) {\n         if (!state.undefStack && stackSize < validationCommand.min) {\n          warn('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\n          return false;\n         }\n        }\n        if (state.firstStackClearing && validationCommand.stackClearing) {\n         state.firstStackClearing = false;\n         stackSize -= validationCommand.min;\n         if (stackSize >= 2 && validationCommand.stem) {\n          stackSize %= 2;\n         } else if (stackSize > 1) {\n          warn('Found too many parameters for stack-clearing command');\n         }\n         if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n          state.width = stack[stackSize - 1];\n         }\n        }\n        if ('stackDelta' in validationCommand) {\n         if ('stackFn' in validationCommand) {\n          validationCommand.stackFn(stack, stackSize);\n         }\n         stackSize += validationCommand.stackDelta;\n        } else if (validationCommand.stackClearing) {\n         stackSize = 0;\n        } else if (validationCommand.resetStack) {\n         stackSize = 0;\n         state.undefStack = false;\n        } else if (validationCommand.undefStack) {\n         stackSize = 0;\n         state.undefStack = true;\n         state.firstStackClearing = false;\n        }\n       }\n      }\n      state.stackSize = stackSize;\n      return true;\n     },\n     parseCharStrings: function CFFParser_parseCharStrings(charStrings, localSubrIndex, globalSubrIndex, fdSelect, fdArray) {\n      var seacs = [];\n      var widths = [];\n      var count = charStrings.count;\n      for (var i = 0; i < count; i++) {\n       var charstring = charStrings.get(i);\n       var state = {\n        callDepth: 0,\n        stackSize: 0,\n        stack: [],\n        undefStack: true,\n        hints: 0,\n        firstStackClearing: true,\n        seac: null,\n        width: null\n       };\n       var valid = true;\n       var localSubrToUse = null;\n       if (fdSelect && fdArray.length) {\n        var fdIndex = fdSelect.getFDIndex(i);\n        if (fdIndex === -1) {\n         warn('Glyph index is not in fd select.');\n         valid = false;\n        }\n        if (fdIndex >= fdArray.length) {\n         warn('Invalid fd index for glyph index.');\n         valid = false;\n        }\n        if (valid) {\n         localSubrToUse = fdArray[fdIndex].privateDict.subrsIndex;\n        }\n       } else if (localSubrIndex) {\n        localSubrToUse = localSubrIndex;\n       }\n       if (valid) {\n        valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n       }\n       if (state.width !== null) {\n        widths[i] = state.width;\n       }\n       if (state.seac !== null) {\n        seacs[i] = state.seac;\n       }\n       if (!valid) {\n        charStrings.set(i, new Uint8Array([14]));\n       }\n      }\n      return {\n       charStrings: charStrings,\n       seacs: seacs,\n       widths: widths\n      };\n     },\n     emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\n      var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n      parentDict.setByKey(18, [\n       0,\n       0\n      ]);\n      parentDict.privateDict = privateDict;\n     },\n     parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n      if (!parentDict.hasName('Private')) {\n       this.emptyPrivateDictionary(parentDict);\n       return;\n      }\n      var privateOffset = parentDict.getByName('Private');\n      if (!isArray(privateOffset) || privateOffset.length !== 2) {\n       parentDict.removeByName('Private');\n       return;\n      }\n      var size = privateOffset[0];\n      var offset = privateOffset[1];\n      if (size === 0 || offset >= this.bytes.length) {\n       this.emptyPrivateDictionary(parentDict);\n       return;\n      }\n      var privateDictEnd = offset + size;\n      var dictData = this.bytes.subarray(offset, privateDictEnd);\n      var dict = this.parseDict(dictData);\n      var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n      parentDict.privateDict = privateDict;\n      if (!privateDict.getByName('Subrs')) {\n       return;\n      }\n      var subrsOffset = privateDict.getByName('Subrs');\n      var relativeOffset = offset + subrsOffset;\n      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n       this.emptyPrivateDictionary(parentDict);\n       return;\n      }\n      var subrsIndex = this.parseIndex(relativeOffset);\n      privateDict.subrsIndex = subrsIndex.obj;\n     },\n     parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n      if (pos === 0) {\n       return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, ISOAdobeCharset);\n      } else if (pos === 1) {\n       return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, ExpertCharset);\n      } else if (pos === 2) {\n       return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, ExpertSubsetCharset);\n      }\n      var bytes = this.bytes;\n      var start = pos;\n      var format = bytes[pos++];\n      var charset = ['.notdef'];\n      var id, count, i;\n      length -= 1;\n      switch (format) {\n      case 0:\n       for (i = 0; i < length; i++) {\n        id = bytes[pos++] << 8 | bytes[pos++];\n        charset.push(cid ? id : strings.get(id));\n       }\n       break;\n      case 1:\n       while (charset.length <= length) {\n        id = bytes[pos++] << 8 | bytes[pos++];\n        count = bytes[pos++];\n        for (i = 0; i <= count; i++) {\n         charset.push(cid ? id++ : strings.get(id++));\n        }\n       }\n       break;\n      case 2:\n       while (charset.length <= length) {\n        id = bytes[pos++] << 8 | bytes[pos++];\n        count = bytes[pos++] << 8 | bytes[pos++];\n        for (i = 0; i <= count; i++) {\n         charset.push(cid ? id++ : strings.get(id++));\n        }\n       }\n       break;\n      default:\n       error('Unknown charset format');\n      }\n      var end = pos;\n      var raw = bytes.subarray(start, end);\n      return new CFFCharset(false, format, charset, raw);\n     },\n     parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\n      var encoding = Object.create(null);\n      var bytes = this.bytes;\n      var predefined = false;\n      var hasSupplement = false;\n      var format, i, ii;\n      var raw = null;\n      function readSupplement() {\n       var supplementsCount = bytes[pos++];\n       for (i = 0; i < supplementsCount; i++) {\n        var code = bytes[pos++];\n        var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n        encoding[code] = charset.indexOf(strings.get(sid));\n       }\n      }\n      if (pos === 0 || pos === 1) {\n       predefined = true;\n       format = pos;\n       var baseEncoding = pos ? ExpertEncoding : StandardEncoding;\n       for (i = 0, ii = charset.length; i < ii; i++) {\n        var index = baseEncoding.indexOf(charset[i]);\n        if (index !== -1) {\n         encoding[index] = i;\n        }\n       }\n      } else {\n       var dataStart = pos;\n       format = bytes[pos++];\n       switch (format & 0x7f) {\n       case 0:\n        var glyphsCount = bytes[pos++];\n        for (i = 1; i <= glyphsCount; i++) {\n         encoding[bytes[pos++]] = i;\n        }\n        break;\n       case 1:\n        var rangesCount = bytes[pos++];\n        var gid = 1;\n        for (i = 0; i < rangesCount; i++) {\n         var start = bytes[pos++];\n         var left = bytes[pos++];\n         for (var j = start; j <= start + left; j++) {\n          encoding[j] = gid++;\n         }\n        }\n        break;\n       default:\n        error('Unknown encoding format: ' + format + ' in CFF');\n        break;\n       }\n       var dataEnd = pos;\n       if (format & 0x80) {\n        bytes[dataStart] &= 0x7f;\n        readSupplement();\n        hasSupplement = true;\n       }\n       raw = bytes.subarray(dataStart, dataEnd);\n      }\n      format = format & 0x7f;\n      return new CFFEncoding(predefined, format, encoding, raw);\n     },\n     parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n      var start = pos;\n      var bytes = this.bytes;\n      var format = bytes[pos++];\n      var fdSelect = [], rawBytes;\n      var i, invalidFirstGID = false;\n      switch (format) {\n      case 0:\n       for (i = 0; i < length; ++i) {\n        var id = bytes[pos++];\n        fdSelect.push(id);\n       }\n       rawBytes = bytes.subarray(start, pos);\n       break;\n      case 3:\n       var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n       for (i = 0; i < rangesCount; ++i) {\n        var first = bytes[pos++] << 8 | bytes[pos++];\n        if (i === 0 && first !== 0) {\n         warn('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\n         invalidFirstGID = true;\n         first = 0;\n        }\n        var fdIndex = bytes[pos++];\n        var next = bytes[pos] << 8 | bytes[pos + 1];\n        for (var j = first; j < next; ++j) {\n         fdSelect.push(fdIndex);\n        }\n       }\n       pos += 2;\n       rawBytes = bytes.subarray(start, pos);\n       if (invalidFirstGID) {\n        rawBytes[3] = rawBytes[4] = 0;\n       }\n       break;\n      default:\n       error('parseFDSelect: Unknown format \"' + format + '\".');\n       break;\n      }\n      assert(fdSelect.length === length, 'parseFDSelect: Invalid font data.');\n      return new CFFFDSelect(fdSelect, rawBytes);\n     }\n    };\n    return CFFParser;\n   }();\n   var CFF = function CFFClosure() {\n    function CFF() {\n     this.header = null;\n     this.names = [];\n     this.topDict = null;\n     this.strings = new CFFStrings();\n     this.globalSubrIndex = null;\n     this.encoding = null;\n     this.charset = null;\n     this.charStrings = null;\n     this.fdArray = [];\n     this.fdSelect = null;\n     this.isCIDFont = false;\n    }\n    return CFF;\n   }();\n   var CFFHeader = function CFFHeaderClosure() {\n    function CFFHeader(major, minor, hdrSize, offSize) {\n     this.major = major;\n     this.minor = minor;\n     this.hdrSize = hdrSize;\n     this.offSize = offSize;\n    }\n    return CFFHeader;\n   }();\n   var CFFStrings = function CFFStringsClosure() {\n    function CFFStrings() {\n     this.strings = [];\n    }\n    CFFStrings.prototype = {\n     get: function CFFStrings_get(index) {\n      if (index >= 0 && index <= 390) {\n       return CFFStandardStrings[index];\n      }\n      if (index - 391 <= this.strings.length) {\n       return this.strings[index - 391];\n      }\n      return CFFStandardStrings[0];\n     },\n     add: function CFFStrings_add(value) {\n      this.strings.push(value);\n     },\n     get count() {\n      return this.strings.length;\n     }\n    };\n    return CFFStrings;\n   }();\n   var CFFIndex = function CFFIndexClosure() {\n    function CFFIndex() {\n     this.objects = [];\n     this.length = 0;\n    }\n    CFFIndex.prototype = {\n     add: function CFFIndex_add(data) {\n      this.length += data.length;\n      this.objects.push(data);\n     },\n     set: function CFFIndex_set(index, data) {\n      this.length += data.length - this.objects[index].length;\n      this.objects[index] = data;\n     },\n     get: function CFFIndex_get(index) {\n      return this.objects[index];\n     },\n     get count() {\n      return this.objects.length;\n     }\n    };\n    return CFFIndex;\n   }();\n   var CFFDict = function CFFDictClosure() {\n    function CFFDict(tables, strings) {\n     this.keyToNameMap = tables.keyToNameMap;\n     this.nameToKeyMap = tables.nameToKeyMap;\n     this.defaults = tables.defaults;\n     this.types = tables.types;\n     this.opcodes = tables.opcodes;\n     this.order = tables.order;\n     this.strings = strings;\n     this.values = Object.create(null);\n    }\n    CFFDict.prototype = {\n     setByKey: function CFFDict_setByKey(key, value) {\n      if (!(key in this.keyToNameMap)) {\n       return false;\n      }\n      var valueLength = value.length;\n      if (valueLength === 0) {\n       return true;\n      }\n      for (var i = 0; i < valueLength; i++) {\n       if (isNaN(value[i])) {\n        warn('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n        return true;\n       }\n      }\n      var type = this.types[key];\n      if (type === 'num' || type === 'sid' || type === 'offset') {\n       value = value[0];\n      }\n      this.values[key] = value;\n      return true;\n     },\n     setByName: function CFFDict_setByName(name, value) {\n      if (!(name in this.nameToKeyMap)) {\n       error('Invalid dictionary name \"' + name + '\"');\n      }\n      this.values[this.nameToKeyMap[name]] = value;\n     },\n     hasName: function CFFDict_hasName(name) {\n      return this.nameToKeyMap[name] in this.values;\n     },\n     getByName: function CFFDict_getByName(name) {\n      if (!(name in this.nameToKeyMap)) {\n       error('Invalid dictionary name \"' + name + '\"');\n      }\n      var key = this.nameToKeyMap[name];\n      if (!(key in this.values)) {\n       return this.defaults[key];\n      }\n      return this.values[key];\n     },\n     removeByName: function CFFDict_removeByName(name) {\n      delete this.values[this.nameToKeyMap[name]];\n     }\n    };\n    CFFDict.createTables = function CFFDict_createTables(layout) {\n     var tables = {\n      keyToNameMap: {},\n      nameToKeyMap: {},\n      defaults: {},\n      types: {},\n      opcodes: {},\n      order: []\n     };\n     for (var i = 0, ii = layout.length; i < ii; ++i) {\n      var entry = layout[i];\n      var key = isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n      tables.keyToNameMap[key] = entry[1];\n      tables.nameToKeyMap[entry[1]] = key;\n      tables.types[key] = entry[2];\n      tables.defaults[key] = entry[3];\n      tables.opcodes[key] = isArray(entry[0]) ? entry[0] : [entry[0]];\n      tables.order.push(key);\n     }\n     return tables;\n    };\n    return CFFDict;\n   }();\n   var CFFTopDict = function CFFTopDictClosure() {\n    var layout = [\n     [\n      [\n       12,\n       30\n      ],\n      'ROS',\n      [\n       'sid',\n       'sid',\n       'num'\n      ],\n      null\n     ],\n     [\n      [\n       12,\n       20\n      ],\n      'SyntheticBase',\n      'num',\n      null\n     ],\n     [\n      0,\n      'version',\n      'sid',\n      null\n     ],\n     [\n      1,\n      'Notice',\n      'sid',\n      null\n     ],\n     [\n      [\n       12,\n       0\n      ],\n      'Copyright',\n      'sid',\n      null\n     ],\n     [\n      2,\n      'FullName',\n      'sid',\n      null\n     ],\n     [\n      3,\n      'FamilyName',\n      'sid',\n      null\n     ],\n     [\n      4,\n      'Weight',\n      'sid',\n      null\n     ],\n     [\n      [\n       12,\n       1\n      ],\n      'isFixedPitch',\n      'num',\n      0\n     ],\n     [\n      [\n       12,\n       2\n      ],\n      'ItalicAngle',\n      'num',\n      0\n     ],\n     [\n      [\n       12,\n       3\n      ],\n      'UnderlinePosition',\n      'num',\n      -100\n     ],\n     [\n      [\n       12,\n       4\n      ],\n      'UnderlineThickness',\n      'num',\n      50\n     ],\n     [\n      [\n       12,\n       5\n      ],\n      'PaintType',\n      'num',\n      0\n     ],\n     [\n      [\n       12,\n       6\n      ],\n      'CharstringType',\n      'num',\n      2\n     ],\n     [\n      [\n       12,\n       7\n      ],\n      'FontMatrix',\n      [\n       'num',\n       'num',\n       'num',\n       'num',\n       'num',\n       'num'\n      ],\n      [\n       0.001,\n       0,\n       0,\n       0.001,\n       0,\n       0\n      ]\n     ],\n     [\n      13,\n      'UniqueID',\n      'num',\n      null\n     ],\n     [\n      5,\n      'FontBBox',\n      [\n       'num',\n       'num',\n       'num',\n       'num'\n      ],\n      [\n       0,\n       0,\n       0,\n       0\n      ]\n     ],\n     [\n      [\n       12,\n       8\n      ],\n      'StrokeWidth',\n      'num',\n      0\n     ],\n     [\n      14,\n      'XUID',\n      'array',\n      null\n     ],\n     [\n      15,\n      'charset',\n      'offset',\n      0\n     ],\n     [\n      16,\n      'Encoding',\n      'offset',\n      0\n     ],\n     [\n      17,\n      'CharStrings',\n      'offset',\n      0\n     ],\n     [\n      18,\n      'Private',\n      [\n       'offset',\n       'offset'\n      ],\n      null\n     ],\n     [\n      [\n       12,\n       21\n      ],\n      'PostScript',\n      'sid',\n      null\n     ],\n     [\n      [\n       12,\n       22\n      ],\n      'BaseFontName',\n      'sid',\n      null\n     ],\n     [\n      [\n       12,\n       23\n      ],\n      'BaseFontBlend',\n      'delta',\n      null\n     ],\n     [\n      [\n       12,\n       31\n      ],\n      'CIDFontVersion',\n      'num',\n      0\n     ],\n     [\n      [\n       12,\n       32\n      ],\n      'CIDFontRevision',\n      'num',\n      0\n     ],\n     [\n      [\n       12,\n       33\n      ],\n      'CIDFontType',\n      'num',\n      0\n     ],\n     [\n      [\n       12,\n       34\n      ],\n      'CIDCount',\n      'num',\n      8720\n     ],\n     [\n      [\n       12,\n       35\n      ],\n      'UIDBase',\n      'num',\n      null\n     ],\n     [\n      [\n       12,\n       37\n      ],\n      'FDSelect',\n      'offset',\n      null\n     ],\n     [\n      [\n       12,\n       36\n      ],\n      'FDArray',\n      'offset',\n      null\n     ],\n     [\n      [\n       12,\n       38\n      ],\n      'FontName',\n      'sid',\n      null\n     ]\n    ];\n    var tables = null;\n    function CFFTopDict(strings) {\n     if (tables === null) {\n      tables = CFFDict.createTables(layout);\n     }\n     CFFDict.call(this, tables, strings);\n     this.privateDict = null;\n    }\n    CFFTopDict.prototype = Object.create(CFFDict.prototype);\n    return CFFTopDict;\n   }();\n   var CFFPrivateDict = function CFFPrivateDictClosure() {\n    var layout = [\n     [\n      6,\n      'BlueValues',\n      'delta',\n      null\n     ],\n     [\n      7,\n      'OtherBlues',\n      'delta',\n      null\n     ],\n     [\n      8,\n      'FamilyBlues',\n      'delta',\n      null\n     ],\n     [\n      9,\n      'FamilyOtherBlues',\n      'delta',\n      null\n     ],\n     [\n      [\n       12,\n       9\n      ],\n      'BlueScale',\n      'num',\n      0.039625\n     ],\n     [\n      [\n       12,\n       10\n      ],\n      'BlueShift',\n      'num',\n      7\n     ],\n     [\n      [\n       12,\n       11\n      ],\n      'BlueFuzz',\n      'num',\n      1\n     ],\n     [\n      10,\n      'StdHW',\n      'num',\n      null\n     ],\n     [\n      11,\n      'StdVW',\n      'num',\n      null\n     ],\n     [\n      [\n       12,\n       12\n      ],\n      'StemSnapH',\n      'delta',\n      null\n     ],\n     [\n      [\n       12,\n       13\n      ],\n      'StemSnapV',\n      'delta',\n      null\n     ],\n     [\n      [\n       12,\n       14\n      ],\n      'ForceBold',\n      'num',\n      0\n     ],\n     [\n      [\n       12,\n       17\n      ],\n      'LanguageGroup',\n      'num',\n      0\n     ],\n     [\n      [\n       12,\n       18\n      ],\n      'ExpansionFactor',\n      'num',\n      0.06\n     ],\n     [\n      [\n       12,\n       19\n      ],\n      'initialRandomSeed',\n      'num',\n      0\n     ],\n     [\n      20,\n      'defaultWidthX',\n      'num',\n      0\n     ],\n     [\n      21,\n      'nominalWidthX',\n      'num',\n      0\n     ],\n     [\n      19,\n      'Subrs',\n      'offset',\n      null\n     ]\n    ];\n    var tables = null;\n    function CFFPrivateDict(strings) {\n     if (tables === null) {\n      tables = CFFDict.createTables(layout);\n     }\n     CFFDict.call(this, tables, strings);\n     this.subrsIndex = null;\n    }\n    CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n    return CFFPrivateDict;\n   }();\n   var CFFCharsetPredefinedTypes = {\n    ISO_ADOBE: 0,\n    EXPERT: 1,\n    EXPERT_SUBSET: 2\n   };\n   var CFFCharset = function CFFCharsetClosure() {\n    function CFFCharset(predefined, format, charset, raw) {\n     this.predefined = predefined;\n     this.format = format;\n     this.charset = charset;\n     this.raw = raw;\n    }\n    return CFFCharset;\n   }();\n   var CFFEncoding = function CFFEncodingClosure() {\n    function CFFEncoding(predefined, format, encoding, raw) {\n     this.predefined = predefined;\n     this.format = format;\n     this.encoding = encoding;\n     this.raw = raw;\n    }\n    return CFFEncoding;\n   }();\n   var CFFFDSelect = function CFFFDSelectClosure() {\n    function CFFFDSelect(fdSelect, raw) {\n     this.fdSelect = fdSelect;\n     this.raw = raw;\n    }\n    CFFFDSelect.prototype = {\n     getFDIndex: function CFFFDSelect_get(glyphIndex) {\n      if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n       return -1;\n      }\n      return this.fdSelect[glyphIndex];\n     }\n    };\n    return CFFFDSelect;\n   }();\n   var CFFOffsetTracker = function CFFOffsetTrackerClosure() {\n    function CFFOffsetTracker() {\n     this.offsets = Object.create(null);\n    }\n    CFFOffsetTracker.prototype = {\n     isTracking: function CFFOffsetTracker_isTracking(key) {\n      return key in this.offsets;\n     },\n     track: function CFFOffsetTracker_track(key, location) {\n      if (key in this.offsets) {\n       error('Already tracking location of ' + key);\n      }\n      this.offsets[key] = location;\n     },\n     offset: function CFFOffsetTracker_offset(value) {\n      for (var key in this.offsets) {\n       this.offsets[key] += value;\n      }\n     },\n     setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\n      if (!(key in this.offsets)) {\n       error('Not tracking location of ' + key);\n      }\n      var data = output.data;\n      var dataOffset = this.offsets[key];\n      var size = 5;\n      for (var i = 0, ii = values.length; i < ii; ++i) {\n       var offset0 = i * size + dataOffset;\n       var offset1 = offset0 + 1;\n       var offset2 = offset0 + 2;\n       var offset3 = offset0 + 3;\n       var offset4 = offset0 + 4;\n       if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n        error('writing to an offset that is not empty');\n       }\n       var value = values[i];\n       data[offset0] = 0x1d;\n       data[offset1] = value >> 24 & 0xFF;\n       data[offset2] = value >> 16 & 0xFF;\n       data[offset3] = value >> 8 & 0xFF;\n       data[offset4] = value & 0xFF;\n      }\n     }\n    };\n    return CFFOffsetTracker;\n   }();\n   var CFFCompiler = function CFFCompilerClosure() {\n    function CFFCompiler(cff) {\n     this.cff = cff;\n    }\n    CFFCompiler.prototype = {\n     compile: function CFFCompiler_compile() {\n      var cff = this.cff;\n      var output = {\n       data: [],\n       length: 0,\n       add: function CFFCompiler_add(data) {\n        this.data = this.data.concat(data);\n        this.length = this.data.length;\n       }\n      };\n      var header = this.compileHeader(cff.header);\n      output.add(header);\n      var nameIndex = this.compileNameIndex(cff.names);\n      output.add(nameIndex);\n      if (cff.isCIDFont) {\n       if (cff.topDict.hasName('FontMatrix')) {\n        var base = cff.topDict.getByName('FontMatrix');\n        cff.topDict.removeByName('FontMatrix');\n        for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n         var subDict = cff.fdArray[i];\n         var matrix = base.slice(0);\n         if (subDict.hasName('FontMatrix')) {\n          matrix = Util.transform(matrix, subDict.getByName('FontMatrix'));\n         }\n         subDict.setByName('FontMatrix', matrix);\n        }\n       }\n      }\n      var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n      output.add(compiled.output);\n      var topDictTracker = compiled.trackers[0];\n      var stringIndex = this.compileStringIndex(cff.strings.strings);\n      output.add(stringIndex);\n      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n      output.add(globalSubrIndex);\n      if (cff.encoding && cff.topDict.hasName('Encoding')) {\n       if (cff.encoding.predefined) {\n        topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\n       } else {\n        var encoding = this.compileEncoding(cff.encoding);\n        topDictTracker.setEntryLocation('Encoding', [output.length], output);\n        output.add(encoding);\n       }\n      }\n      if (cff.charset && cff.topDict.hasName('charset')) {\n       if (cff.charset.predefined) {\n        topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\n       } else {\n        var charset = this.compileCharset(cff.charset);\n        topDictTracker.setEntryLocation('charset', [output.length], output);\n        output.add(charset);\n       }\n      }\n      var charStrings = this.compileCharStrings(cff.charStrings);\n      topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n      output.add(charStrings);\n      if (cff.isCIDFont) {\n       topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n       var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n       output.add(fdSelect);\n       compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n       topDictTracker.setEntryLocation('FDArray', [output.length], output);\n       output.add(compiled.output);\n       var fontDictTrackers = compiled.trackers;\n       this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n      }\n      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n      output.add([0]);\n      return output.data;\n     },\n     encodeNumber: function CFFCompiler_encodeNumber(value) {\n      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\n       return this.encodeInteger(value);\n      }\n      return this.encodeFloat(value);\n     },\n     encodeFloat: function CFFCompiler_encodeFloat(num) {\n      var value = num.toString();\n      var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n      if (m) {\n       var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n       value = (Math.round(num * epsilon) / epsilon).toString();\n      }\n      var nibbles = '';\n      var i, ii;\n      for (i = 0, ii = value.length; i < ii; ++i) {\n       var a = value[i];\n       if (a === 'e') {\n        nibbles += value[++i] === '-' ? 'c' : 'b';\n       } else if (a === '.') {\n        nibbles += 'a';\n       } else if (a === '-') {\n        nibbles += 'e';\n       } else {\n        nibbles += a;\n       }\n      }\n      nibbles += nibbles.length & 1 ? 'f' : 'ff';\n      var out = [30];\n      for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n       out.push(parseInt(nibbles.substr(i, 2), 16));\n      }\n      return out;\n     },\n     encodeInteger: function CFFCompiler_encodeInteger(value) {\n      var code;\n      if (value >= -107 && value <= 107) {\n       code = [value + 139];\n      } else if (value >= 108 && value <= 1131) {\n       value = value - 108;\n       code = [\n        (value >> 8) + 247,\n        value & 0xFF\n       ];\n      } else if (value >= -1131 && value <= -108) {\n       value = -value - 108;\n       code = [\n        (value >> 8) + 251,\n        value & 0xFF\n       ];\n      } else if (value >= -32768 && value <= 32767) {\n       code = [\n        0x1c,\n        value >> 8 & 0xFF,\n        value & 0xFF\n       ];\n      } else {\n       code = [\n        0x1d,\n        value >> 24 & 0xFF,\n        value >> 16 & 0xFF,\n        value >> 8 & 0xFF,\n        value & 0xFF\n       ];\n      }\n      return code;\n     },\n     compileHeader: function CFFCompiler_compileHeader(header) {\n      return [\n       header.major,\n       header.minor,\n       header.hdrSize,\n       header.offSize\n      ];\n     },\n     compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n      var nameIndex = new CFFIndex();\n      for (var i = 0, ii = names.length; i < ii; ++i) {\n       nameIndex.add(stringToBytes(names[i]));\n      }\n      return this.compileIndex(nameIndex);\n     },\n     compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\n      var fontDictTrackers = [];\n      var fdArrayIndex = new CFFIndex();\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n       var fontDict = dicts[i];\n       if (removeCidKeys) {\n        fontDict.removeByName('CIDFontVersion');\n        fontDict.removeByName('CIDFontRevision');\n        fontDict.removeByName('CIDFontType');\n        fontDict.removeByName('CIDCount');\n        fontDict.removeByName('UIDBase');\n       }\n       var fontDictTracker = new CFFOffsetTracker();\n       var fontDictData = this.compileDict(fontDict, fontDictTracker);\n       fontDictTrackers.push(fontDictTracker);\n       fdArrayIndex.add(fontDictData);\n       fontDictTracker.offset(length);\n      }\n      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n      return {\n       trackers: fontDictTrackers,\n       output: fdArrayIndex\n      };\n     },\n     compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n       var fontDict = dicts[i];\n       assert(fontDict.privateDict && fontDict.hasName('Private'), 'There must be an private dictionary.');\n       var privateDict = fontDict.privateDict;\n       var privateDictTracker = new CFFOffsetTracker();\n       var privateDictData = this.compileDict(privateDict, privateDictTracker);\n       var outputLength = output.length;\n       privateDictTracker.offset(outputLength);\n       if (!privateDictData.length) {\n        outputLength = 0;\n       }\n       trackers[i].setEntryLocation('Private', [\n        privateDictData.length,\n        outputLength\n       ], output);\n       output.add(privateDictData);\n       if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n        var subrs = this.compileIndex(privateDict.subrsIndex);\n        privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\n        output.add(subrs);\n       }\n      }\n     },\n     compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n      var out = [];\n      var order = dict.order;\n      for (var i = 0; i < order.length; ++i) {\n       var key = order[i];\n       if (!(key in dict.values)) {\n        continue;\n       }\n       var values = dict.values[key];\n       var types = dict.types[key];\n       if (!isArray(types)) {\n        types = [types];\n       }\n       if (!isArray(values)) {\n        values = [values];\n       }\n       if (values.length === 0) {\n        continue;\n       }\n       for (var j = 0, jj = types.length; j < jj; ++j) {\n        var type = types[j];\n        var value = values[j];\n        switch (type) {\n        case 'num':\n        case 'sid':\n         out = out.concat(this.encodeNumber(value));\n         break;\n        case 'offset':\n         var name = dict.keyToNameMap[key];\n         if (!offsetTracker.isTracking(name)) {\n          offsetTracker.track(name, out.length);\n         }\n         out = out.concat([\n          0x1d,\n          0,\n          0,\n          0,\n          0\n         ]);\n         break;\n        case 'array':\n        case 'delta':\n         out = out.concat(this.encodeNumber(value));\n         for (var k = 1, kk = values.length; k < kk; ++k) {\n          out = out.concat(this.encodeNumber(values[k]));\n         }\n         break;\n        default:\n         error('Unknown data type of ' + type);\n         break;\n        }\n       }\n       out = out.concat(dict.opcodes[key]);\n      }\n      return out;\n     },\n     compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n      var stringIndex = new CFFIndex();\n      for (var i = 0, ii = strings.length; i < ii; ++i) {\n       stringIndex.add(stringToBytes(strings[i]));\n      }\n      return this.compileIndex(stringIndex);\n     },\n     compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n      var globalSubrIndex = this.cff.globalSubrIndex;\n      this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n     },\n     compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n      return this.compileIndex(charStrings);\n     },\n     compileCharset: function CFFCompiler_compileCharset(charset) {\n      return this.compileTypedArray(charset.raw);\n     },\n     compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n      return this.compileTypedArray(encoding.raw);\n     },\n     compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n      return this.compileTypedArray(fdSelect);\n     },\n     compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n      var out = [];\n      for (var i = 0, ii = data.length; i < ii; ++i) {\n       out[i] = data[i];\n      }\n      return out;\n     },\n     compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n      trackers = trackers || [];\n      var objects = index.objects;\n      var count = objects.length;\n      if (count === 0) {\n       return [\n        0,\n        0,\n        0\n       ];\n      }\n      var data = [\n       count >> 8 & 0xFF,\n       count & 0xff\n      ];\n      var lastOffset = 1, i;\n      for (i = 0; i < count; ++i) {\n       lastOffset += objects[i].length;\n      }\n      var offsetSize;\n      if (lastOffset < 0x100) {\n       offsetSize = 1;\n      } else if (lastOffset < 0x10000) {\n       offsetSize = 2;\n      } else if (lastOffset < 0x1000000) {\n       offsetSize = 3;\n      } else {\n       offsetSize = 4;\n      }\n      data.push(offsetSize);\n      var relativeOffset = 1;\n      for (i = 0; i < count + 1; i++) {\n       if (offsetSize === 1) {\n        data.push(relativeOffset & 0xFF);\n       } else if (offsetSize === 2) {\n        data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n       } else if (offsetSize === 3) {\n        data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n       } else {\n        data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n       }\n       if (objects[i]) {\n        relativeOffset += objects[i].length;\n       }\n      }\n      for (i = 0; i < count; i++) {\n       if (trackers[i]) {\n        trackers[i].offset(data.length);\n       }\n       for (var j = 0, jj = objects[i].length; j < jj; j++) {\n        data.push(objects[i][j]);\n       }\n      }\n      return data;\n     }\n    };\n    return CFFCompiler;\n   }();\n   exports.CFFStandardStrings = CFFStandardStrings;\n   exports.CFFParser = CFFParser;\n   exports.CFF = CFF;\n   exports.CFFHeader = CFFHeader;\n   exports.CFFStrings = CFFStrings;\n   exports.CFFIndex = CFFIndex;\n   exports.CFFCharset = CFFCharset;\n   exports.CFFTopDict = CFFTopDict;\n   exports.CFFPrivateDict = CFFPrivateDict;\n   exports.CFFCompiler = CFFCompiler;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsCoreChunkedStream = {}, root.pdfjsSharedUtil);\n  }(this, function (exports, sharedUtil) {\n   var MissingDataException = sharedUtil.MissingDataException;\n   var arrayByteLength = sharedUtil.arrayByteLength;\n   var arraysToBytes = sharedUtil.arraysToBytes;\n   var assert = sharedUtil.assert;\n   var createPromiseCapability = sharedUtil.createPromiseCapability;\n   var isInt = sharedUtil.isInt;\n   var isEmptyObj = sharedUtil.isEmptyObj;\n   var ChunkedStream = function ChunkedStreamClosure() {\n    function ChunkedStream(length, chunkSize, manager) {\n     this.bytes = new Uint8Array(length);\n     this.start = 0;\n     this.pos = 0;\n     this.end = length;\n     this.chunkSize = chunkSize;\n     this.loadedChunks = [];\n     this.numChunksLoaded = 0;\n     this.numChunks = Math.ceil(length / chunkSize);\n     this.manager = manager;\n     this.progressiveDataLength = 0;\n     this.lastSuccessfulEnsureByteChunk = -1;\n    }\n    ChunkedStream.prototype = {\n     getMissingChunks: function ChunkedStream_getMissingChunks() {\n      var chunks = [];\n      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n       if (!this.loadedChunks[chunk]) {\n        chunks.push(chunk);\n       }\n      }\n      return chunks;\n     },\n     getBaseStreams: function ChunkedStream_getBaseStreams() {\n      return [this];\n     },\n     allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n      return this.numChunksLoaded === this.numChunks;\n     },\n     onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n      var end = begin + chunk.byteLength;\n      assert(begin % this.chunkSize === 0, 'Bad begin offset: ' + begin);\n      var length = this.bytes.length;\n      assert(end % this.chunkSize === 0 || end === length, 'Bad end offset: ' + end);\n      this.bytes.set(new Uint8Array(chunk), begin);\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n       if (!this.loadedChunks[curChunk]) {\n        this.loadedChunks[curChunk] = true;\n        ++this.numChunksLoaded;\n       }\n      }\n     },\n     onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\n      var position = this.progressiveDataLength;\n      var beginChunk = Math.floor(position / this.chunkSize);\n      this.bytes.set(new Uint8Array(data), position);\n      position += data.byteLength;\n      this.progressiveDataLength = position;\n      var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n       if (!this.loadedChunks[curChunk]) {\n        this.loadedChunks[curChunk] = true;\n        ++this.numChunksLoaded;\n       }\n      }\n     },\n     ensureByte: function ChunkedStream_ensureByte(pos) {\n      var chunk = Math.floor(pos / this.chunkSize);\n      if (chunk === this.lastSuccessfulEnsureByteChunk) {\n       return;\n      }\n      if (!this.loadedChunks[chunk]) {\n       throw new MissingDataException(pos, pos + 1);\n      }\n      this.lastSuccessfulEnsureByteChunk = chunk;\n     },\n     ensureRange: function ChunkedStream_ensureRange(begin, end) {\n      if (begin >= end) {\n       return;\n      }\n      if (end <= this.progressiveDataLength) {\n       return;\n      }\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n       if (!this.loadedChunks[chunk]) {\n        throw new MissingDataException(begin, end);\n       }\n      }\n     },\n     nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n      var chunk, numChunks = this.numChunks;\n      for (var i = 0; i < numChunks; ++i) {\n       chunk = (beginChunk + i) % numChunks;\n       if (!this.loadedChunks[chunk]) {\n        return chunk;\n       }\n      }\n      return null;\n     },\n     hasChunk: function ChunkedStream_hasChunk(chunk) {\n      return !!this.loadedChunks[chunk];\n     },\n     get length() {\n      return this.end - this.start;\n     },\n     get isEmpty() {\n      return this.length === 0;\n     },\n     getByte: function ChunkedStream_getByte() {\n      var pos = this.pos;\n      if (pos >= this.end) {\n       return -1;\n      }\n      this.ensureByte(pos);\n      return this.bytes[this.pos++];\n     },\n     getUint16: function ChunkedStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n       return -1;\n      }\n      return (b0 << 8) + b1;\n     },\n     getInt32: function ChunkedStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n     },\n     getBytes: function ChunkedStream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n       this.ensureRange(pos, strEnd);\n       return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n       end = strEnd;\n      }\n      this.ensureRange(pos, end);\n      this.pos = end;\n      return bytes.subarray(pos, end);\n     },\n     peekByte: function ChunkedStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n     },\n     peekBytes: function ChunkedStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n     },\n     getByteRange: function ChunkedStream_getBytes(begin, end) {\n      this.ensureRange(begin, end);\n      return this.bytes.subarray(begin, end);\n     },\n     skip: function ChunkedStream_skip(n) {\n      if (!n) {\n       n = 1;\n      }\n      this.pos += n;\n     },\n     reset: function ChunkedStream_reset() {\n      this.pos = this.start;\n     },\n     moveStart: function ChunkedStream_moveStart() {\n      this.start = this.pos;\n     },\n     makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n      this.ensureRange(start, start + length);\n      function ChunkedStreamSubstream() {\n      }\n      ChunkedStreamSubstream.prototype = Object.create(this);\n      ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n       var chunkSize = this.chunkSize;\n       var beginChunk = Math.floor(this.start / chunkSize);\n       var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n       var missingChunks = [];\n       for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n         missingChunks.push(chunk);\n        }\n       }\n       return missingChunks;\n      };\n      var subStream = new ChunkedStreamSubstream();\n      subStream.pos = subStream.start = start;\n      subStream.end = start + length || this.end;\n      subStream.dict = dict;\n      return subStream;\n     },\n     isStream: true\n    };\n    return ChunkedStream;\n   }();\n   var ChunkedStreamManager = function ChunkedStreamManagerClosure() {\n    function ChunkedStreamManager(pdfNetworkStream, args) {\n     var chunkSize = args.rangeChunkSize;\n     var length = args.length;\n     this.stream = new ChunkedStream(length, chunkSize, this);\n     this.length = length;\n     this.chunkSize = chunkSize;\n     this.pdfNetworkStream = pdfNetworkStream;\n     this.url = args.url;\n     this.disableAutoFetch = args.disableAutoFetch;\n     this.msgHandler = args.msgHandler;\n     this.currRequestId = 0;\n     this.chunksNeededByRequest = Object.create(null);\n     this.requestsByChunk = Object.create(null);\n     this.promisesByRequest = Object.create(null);\n     this.progressiveDataLength = 0;\n     this.aborted = false;\n     this._loadedStreamCapability = createPromiseCapability();\n    }\n    ChunkedStreamManager.prototype = {\n     onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n      return this._loadedStreamCapability.promise;\n     },\n     sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\n      var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n      if (!rangeReader.isStreamingSupported) {\n       rangeReader.onProgress = this.onProgress.bind(this);\n      }\n      var chunks = [], loaded = 0;\n      var manager = this;\n      var promise = new Promise(function (resolve, reject) {\n       var readChunk = function (chunk) {\n        try {\n         if (!chunk.done) {\n          var data = chunk.value;\n          chunks.push(data);\n          loaded += arrayByteLength(data);\n          if (rangeReader.isStreamingSupported) {\n           manager.onProgress({ loaded: loaded });\n          }\n          rangeReader.read().then(readChunk, reject);\n          return;\n         }\n         var chunkData = arraysToBytes(chunks);\n         chunks = null;\n         resolve(chunkData);\n        } catch (e) {\n         reject(e);\n        }\n       };\n       rangeReader.read().then(readChunk, reject);\n      });\n      promise.then(function (data) {\n       if (this.aborted) {\n        return;\n       }\n       this.onReceiveData({\n        chunk: data,\n        begin: begin\n       });\n      }.bind(this));\n     },\n     requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n      var missingChunks = this.stream.getMissingChunks();\n      this._requestChunks(missingChunks);\n      return this._loadedStreamCapability.promise;\n     },\n     _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\n      var requestId = this.currRequestId++;\n      var i, ii;\n      var chunksNeeded = Object.create(null);\n      this.chunksNeededByRequest[requestId] = chunksNeeded;\n      for (i = 0, ii = chunks.length; i < ii; i++) {\n       if (!this.stream.hasChunk(chunks[i])) {\n        chunksNeeded[chunks[i]] = true;\n       }\n      }\n      if (isEmptyObj(chunksNeeded)) {\n       return Promise.resolve();\n      }\n      var capability = createPromiseCapability();\n      this.promisesByRequest[requestId] = capability;\n      var chunksToRequest = [];\n      for (var chunk in chunksNeeded) {\n       chunk = chunk | 0;\n       if (!(chunk in this.requestsByChunk)) {\n        this.requestsByChunk[chunk] = [];\n        chunksToRequest.push(chunk);\n       }\n       this.requestsByChunk[chunk].push(requestId);\n      }\n      if (!chunksToRequest.length) {\n       return capability.promise;\n      }\n      var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n      for (i = 0; i < groupedChunksToRequest.length; ++i) {\n       var groupedChunk = groupedChunksToRequest[i];\n       var begin = groupedChunk.beginChunk * this.chunkSize;\n       var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n       this.sendRequest(begin, end);\n      }\n      return capability.promise;\n     },\n     getStream: function ChunkedStreamManager_getStream() {\n      return this.stream;\n     },\n     requestRange: function ChunkedStreamManager_requestRange(begin, end) {\n      end = Math.min(end, this.length);\n      var beginChunk = this.getBeginChunk(begin);\n      var endChunk = this.getEndChunk(end);\n      var chunks = [];\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n       chunks.push(chunk);\n      }\n      return this._requestChunks(chunks);\n     },\n     requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\n      ranges = ranges || [];\n      var chunksToRequest = [];\n      for (var i = 0; i < ranges.length; i++) {\n       var beginChunk = this.getBeginChunk(ranges[i].begin);\n       var endChunk = this.getEndChunk(ranges[i].end);\n       for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        if (chunksToRequest.indexOf(chunk) < 0) {\n         chunksToRequest.push(chunk);\n        }\n       }\n      }\n      chunksToRequest.sort(function (a, b) {\n       return a - b;\n      });\n      return this._requestChunks(chunksToRequest);\n     },\n     groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n      var groupedChunks = [];\n      var beginChunk = -1;\n      var prevChunk = -1;\n      for (var i = 0; i < chunks.length; ++i) {\n       var chunk = chunks[i];\n       if (beginChunk < 0) {\n        beginChunk = chunk;\n       }\n       if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n        groupedChunks.push({\n         beginChunk: beginChunk,\n         endChunk: prevChunk + 1\n        });\n        beginChunk = chunk;\n       }\n       if (i + 1 === chunks.length) {\n        groupedChunks.push({\n         beginChunk: beginChunk,\n         endChunk: chunk + 1\n        });\n       }\n       prevChunk = chunk;\n      }\n      return groupedChunks;\n     },\n     onProgress: function ChunkedStreamManager_onProgress(args) {\n      var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\n      this.msgHandler.send('DocProgress', {\n       loaded: bytesLoaded,\n       total: this.length\n      });\n     },\n     onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n      var chunk = args.chunk;\n      var isProgressive = args.begin === undefined;\n      var begin = isProgressive ? this.progressiveDataLength : args.begin;\n      var end = begin + chunk.byteLength;\n      var beginChunk = Math.floor(begin / this.chunkSize);\n      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n      if (isProgressive) {\n       this.stream.onReceiveProgressiveData(chunk);\n       this.progressiveDataLength = end;\n      } else {\n       this.stream.onReceiveData(begin, chunk);\n      }\n      if (this.stream.allChunksLoaded()) {\n       this._loadedStreamCapability.resolve(this.stream);\n      }\n      var loadedRequests = [];\n      var i, requestId;\n      for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n       var requestIds = this.requestsByChunk[chunk] || [];\n       delete this.requestsByChunk[chunk];\n       for (i = 0; i < requestIds.length; ++i) {\n        requestId = requestIds[i];\n        var chunksNeeded = this.chunksNeededByRequest[requestId];\n        if (chunk in chunksNeeded) {\n         delete chunksNeeded[chunk];\n        }\n        if (!isEmptyObj(chunksNeeded)) {\n         continue;\n        }\n        loadedRequests.push(requestId);\n       }\n      }\n      if (!this.disableAutoFetch && isEmptyObj(this.requestsByChunk)) {\n       var nextEmptyChunk;\n       if (this.stream.numChunksLoaded === 1) {\n        var lastChunk = this.stream.numChunks - 1;\n        if (!this.stream.hasChunk(lastChunk)) {\n         nextEmptyChunk = lastChunk;\n        }\n       } else {\n        nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n       }\n       if (isInt(nextEmptyChunk)) {\n        this._requestChunks([nextEmptyChunk]);\n       }\n      }\n      for (i = 0; i < loadedRequests.length; ++i) {\n       requestId = loadedRequests[i];\n       var capability = this.promisesByRequest[requestId];\n       delete this.promisesByRequest[requestId];\n       capability.resolve();\n      }\n      this.msgHandler.send('DocProgress', {\n       loaded: this.stream.numChunksLoaded * this.chunkSize,\n       total: this.length\n      });\n     },\n     onError: function ChunkedStreamManager_onError(err) {\n      this._loadedStreamCapability.reject(err);\n     },\n     getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n      var chunk = Math.floor(begin / this.chunkSize);\n      return chunk;\n     },\n     getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n      return chunk;\n     },\n     abort: function ChunkedStreamManager_abort() {\n      this.aborted = true;\n      if (this.pdfNetworkStream) {\n       this.pdfNetworkStream.cancelAllRequests('abort');\n      }\n      for (var requestId in this.promisesByRequest) {\n       var capability = this.promisesByRequest[requestId];\n       capability.reject(new Error('Request was aborted'));\n      }\n     }\n    };\n    return ChunkedStreamManager;\n   }();\n   exports.ChunkedStream = ChunkedStream;\n   exports.ChunkedStreamManager = ChunkedStreamManager;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsCoreGlyphList = {}, root.pdfjsSharedUtil);\n  }(this, function (exports, sharedUtil) {\n   var getLookupTableFactory = sharedUtil.getLookupTableFactory;\n   var getGlyphsUnicode = getLookupTableFactory(function (t) {\n    t['A'] = 0x0041;\n    t['AE'] = 0x00C6;\n    t['AEacute'] = 0x01FC;\n    t['AEmacron'] = 0x01E2;\n    t['AEsmall'] = 0xF7E6;\n    t['Aacute'] = 0x00C1;\n    t['Aacutesmall'] = 0xF7E1;\n    t['Abreve'] = 0x0102;\n    t['Abreveacute'] = 0x1EAE;\n    t['Abrevecyrillic'] = 0x04D0;\n    t['Abrevedotbelow'] = 0x1EB6;\n    t['Abrevegrave'] = 0x1EB0;\n    t['Abrevehookabove'] = 0x1EB2;\n    t['Abrevetilde'] = 0x1EB4;\n    t['Acaron'] = 0x01CD;\n    t['Acircle'] = 0x24B6;\n    t['Acircumflex'] = 0x00C2;\n    t['Acircumflexacute'] = 0x1EA4;\n    t['Acircumflexdotbelow'] = 0x1EAC;\n    t['Acircumflexgrave'] = 0x1EA6;\n    t['Acircumflexhookabove'] = 0x1EA8;\n    t['Acircumflexsmall'] = 0xF7E2;\n    t['Acircumflextilde'] = 0x1EAA;\n    t['Acute'] = 0xF6C9;\n    t['Acutesmall'] = 0xF7B4;\n    t['Acyrillic'] = 0x0410;\n    t['Adblgrave'] = 0x0200;\n    t['Adieresis'] = 0x00C4;\n    t['Adieresiscyrillic'] = 0x04D2;\n    t['Adieresismacron'] = 0x01DE;\n    t['Adieresissmall'] = 0xF7E4;\n    t['Adotbelow'] = 0x1EA0;\n    t['Adotmacron'] = 0x01E0;\n    t['Agrave'] = 0x00C0;\n    t['Agravesmall'] = 0xF7E0;\n    t['Ahookabove'] = 0x1EA2;\n    t['Aiecyrillic'] = 0x04D4;\n    t['Ainvertedbreve'] = 0x0202;\n    t['Alpha'] = 0x0391;\n    t['Alphatonos'] = 0x0386;\n    t['Amacron'] = 0x0100;\n    t['Amonospace'] = 0xFF21;\n    t['Aogonek'] = 0x0104;\n    t['Aring'] = 0x00C5;\n    t['Aringacute'] = 0x01FA;\n    t['Aringbelow'] = 0x1E00;\n    t['Aringsmall'] = 0xF7E5;\n    t['Asmall'] = 0xF761;\n    t['Atilde'] = 0x00C3;\n    t['Atildesmall'] = 0xF7E3;\n    t['Aybarmenian'] = 0x0531;\n    t['B'] = 0x0042;\n    t['Bcircle'] = 0x24B7;\n    t['Bdotaccent'] = 0x1E02;\n    t['Bdotbelow'] = 0x1E04;\n    t['Becyrillic'] = 0x0411;\n    t['Benarmenian'] = 0x0532;\n    t['Beta'] = 0x0392;\n    t['Bhook'] = 0x0181;\n    t['Blinebelow'] = 0x1E06;\n    t['Bmonospace'] = 0xFF22;\n    t['Brevesmall'] = 0xF6F4;\n    t['Bsmall'] = 0xF762;\n    t['Btopbar'] = 0x0182;\n    t['C'] = 0x0043;\n    t['Caarmenian'] = 0x053E;\n    t['Cacute'] = 0x0106;\n    t['Caron'] = 0xF6CA;\n    t['Caronsmall'] = 0xF6F5;\n    t['Ccaron'] = 0x010C;\n    t['Ccedilla'] = 0x00C7;\n    t['Ccedillaacute'] = 0x1E08;\n    t['Ccedillasmall'] = 0xF7E7;\n    t['Ccircle'] = 0x24B8;\n    t['Ccircumflex'] = 0x0108;\n    t['Cdot'] = 0x010A;\n    t['Cdotaccent'] = 0x010A;\n    t['Cedillasmall'] = 0xF7B8;\n    t['Chaarmenian'] = 0x0549;\n    t['Cheabkhasiancyrillic'] = 0x04BC;\n    t['Checyrillic'] = 0x0427;\n    t['Chedescenderabkhasiancyrillic'] = 0x04BE;\n    t['Chedescendercyrillic'] = 0x04B6;\n    t['Chedieresiscyrillic'] = 0x04F4;\n    t['Cheharmenian'] = 0x0543;\n    t['Chekhakassiancyrillic'] = 0x04CB;\n    t['Cheverticalstrokecyrillic'] = 0x04B8;\n    t['Chi'] = 0x03A7;\n    t['Chook'] = 0x0187;\n    t['Circumflexsmall'] = 0xF6F6;\n    t['Cmonospace'] = 0xFF23;\n    t['Coarmenian'] = 0x0551;\n    t['Csmall'] = 0xF763;\n    t['D'] = 0x0044;\n    t['DZ'] = 0x01F1;\n    t['DZcaron'] = 0x01C4;\n    t['Daarmenian'] = 0x0534;\n    t['Dafrican'] = 0x0189;\n    t['Dcaron'] = 0x010E;\n    t['Dcedilla'] = 0x1E10;\n    t['Dcircle'] = 0x24B9;\n    t['Dcircumflexbelow'] = 0x1E12;\n    t['Dcroat'] = 0x0110;\n    t['Ddotaccent'] = 0x1E0A;\n    t['Ddotbelow'] = 0x1E0C;\n    t['Decyrillic'] = 0x0414;\n    t['Deicoptic'] = 0x03EE;\n    t['Delta'] = 0x2206;\n    t['Deltagreek'] = 0x0394;\n    t['Dhook'] = 0x018A;\n    t['Dieresis'] = 0xF6CB;\n    t['DieresisAcute'] = 0xF6CC;\n    t['DieresisGrave'] = 0xF6CD;\n    t['Dieresissmall'] = 0xF7A8;\n    t['Digammagreek'] = 0x03DC;\n    t['Djecyrillic'] = 0x0402;\n    t['Dlinebelow'] = 0x1E0E;\n    t['Dmonospace'] = 0xFF24;\n    t['Dotaccentsmall'] = 0xF6F7;\n    t['Dslash'] = 0x0110;\n    t['Dsmall'] = 0xF764;\n    t['Dtopbar'] = 0x018B;\n    t['Dz'] = 0x01F2;\n    t['Dzcaron'] = 0x01C5;\n    t['Dzeabkhasiancyrillic'] = 0x04E0;\n    t['Dzecyrillic'] = 0x0405;\n    t['Dzhecyrillic'] = 0x040F;\n    t['E'] = 0x0045;\n    t['Eacute'] = 0x00C9;\n    t['Eacutesmall'] = 0xF7E9;\n    t['Ebreve'] = 0x0114;\n    t['Ecaron'] = 0x011A;\n    t['Ecedillabreve'] = 0x1E1C;\n    t['Echarmenian'] = 0x0535;\n    t['Ecircle'] = 0x24BA;\n    t['Ecircumflex'] = 0x00CA;\n    t['Ecircumflexacute'] = 0x1EBE;\n    t['Ecircumflexbelow'] = 0x1E18;\n    t['Ecircumflexdotbelow'] = 0x1EC6;\n    t['Ecircumflexgrave'] = 0x1EC0;\n    t['Ecircumflexhookabove'] = 0x1EC2;\n    t['Ecircumflexsmall'] = 0xF7EA;\n    t['Ecircumflextilde'] = 0x1EC4;\n    t['Ecyrillic'] = 0x0404;\n    t['Edblgrave'] = 0x0204;\n    t['Edieresis'] = 0x00CB;\n    t['Edieresissmall'] = 0xF7EB;\n    t['Edot'] = 0x0116;\n    t['Edotaccent'] = 0x0116;\n    t['Edotbelow'] = 0x1EB8;\n    t['Efcyrillic'] = 0x0424;\n    t['Egrave'] = 0x00C8;\n    t['Egravesmall'] = 0xF7E8;\n    t['Eharmenian'] = 0x0537;\n    t['Ehookabove'] = 0x1EBA;\n    t['Eightroman'] = 0x2167;\n    t['Einvertedbreve'] = 0x0206;\n    t['Eiotifiedcyrillic'] = 0x0464;\n    t['Elcyrillic'] = 0x041B;\n    t['Elevenroman'] = 0x216A;\n    t['Emacron'] = 0x0112;\n    t['Emacronacute'] = 0x1E16;\n    t['Emacrongrave'] = 0x1E14;\n    t['Emcyrillic'] = 0x041C;\n    t['Emonospace'] = 0xFF25;\n    t['Encyrillic'] = 0x041D;\n    t['Endescendercyrillic'] = 0x04A2;\n    t['Eng'] = 0x014A;\n    t['Enghecyrillic'] = 0x04A4;\n    t['Enhookcyrillic'] = 0x04C7;\n    t['Eogonek'] = 0x0118;\n    t['Eopen'] = 0x0190;\n    t['Epsilon'] = 0x0395;\n    t['Epsilontonos'] = 0x0388;\n    t['Ercyrillic'] = 0x0420;\n    t['Ereversed'] = 0x018E;\n    t['Ereversedcyrillic'] = 0x042D;\n    t['Escyrillic'] = 0x0421;\n    t['Esdescendercyrillic'] = 0x04AA;\n    t['Esh'] = 0x01A9;\n    t['Esmall'] = 0xF765;\n    t['Eta'] = 0x0397;\n    t['Etarmenian'] = 0x0538;\n    t['Etatonos'] = 0x0389;\n    t['Eth'] = 0x00D0;\n    t['Ethsmall'] = 0xF7F0;\n    t['Etilde'] = 0x1EBC;\n    t['Etildebelow'] = 0x1E1A;\n    t['Euro'] = 0x20AC;\n    t['Ezh'] = 0x01B7;\n    t['Ezhcaron'] = 0x01EE;\n    t['Ezhreversed'] = 0x01B8;\n    t['F'] = 0x0046;\n    t['Fcircle'] = 0x24BB;\n    t['Fdotaccent'] = 0x1E1E;\n    t['Feharmenian'] = 0x0556;\n    t['Feicoptic'] = 0x03E4;\n    t['Fhook'] = 0x0191;\n    t['Fitacyrillic'] = 0x0472;\n    t['Fiveroman'] = 0x2164;\n    t['Fmonospace'] = 0xFF26;\n    t['Fourroman'] = 0x2163;\n    t['Fsmall'] = 0xF766;\n    t['G'] = 0x0047;\n    t['GBsquare'] = 0x3387;\n    t['Gacute'] = 0x01F4;\n    t['Gamma'] = 0x0393;\n    t['Gammaafrican'] = 0x0194;\n    t['Gangiacoptic'] = 0x03EA;\n    t['Gbreve'] = 0x011E;\n    t['Gcaron'] = 0x01E6;\n    t['Gcedilla'] = 0x0122;\n    t['Gcircle'] = 0x24BC;\n    t['Gcircumflex'] = 0x011C;\n    t['Gcommaaccent'] = 0x0122;\n    t['Gdot'] = 0x0120;\n    t['Gdotaccent'] = 0x0120;\n    t['Gecyrillic'] = 0x0413;\n    t['Ghadarmenian'] = 0x0542;\n    t['Ghemiddlehookcyrillic'] = 0x0494;\n    t['Ghestrokecyrillic'] = 0x0492;\n    t['Gheupturncyrillic'] = 0x0490;\n    t['Ghook'] = 0x0193;\n    t['Gimarmenian'] = 0x0533;\n    t['Gjecyrillic'] = 0x0403;\n    t['Gmacron'] = 0x1E20;\n    t['Gmonospace'] = 0xFF27;\n    t['Grave'] = 0xF6CE;\n    t['Gravesmall'] = 0xF760;\n    t['Gsmall'] = 0xF767;\n    t['Gsmallhook'] = 0x029B;\n    t['Gstroke'] = 0x01E4;\n    t['H'] = 0x0048;\n    t['H18533'] = 0x25CF;\n    t['H18543'] = 0x25AA;\n    t['H18551'] = 0x25AB;\n    t['H22073'] = 0x25A1;\n    t['HPsquare'] = 0x33CB;\n    t['Haabkhasiancyrillic'] = 0x04A8;\n    t['Hadescendercyrillic'] = 0x04B2;\n    t['Hardsigncyrillic'] = 0x042A;\n    t['Hbar'] = 0x0126;\n    t['Hbrevebelow'] = 0x1E2A;\n    t['Hcedilla'] = 0x1E28;\n    t['Hcircle'] = 0x24BD;\n    t['Hcircumflex'] = 0x0124;\n    t['Hdieresis'] = 0x1E26;\n    t['Hdotaccent'] = 0x1E22;\n    t['Hdotbelow'] = 0x1E24;\n    t['Hmonospace'] = 0xFF28;\n    t['Hoarmenian'] = 0x0540;\n    t['Horicoptic'] = 0x03E8;\n    t['Hsmall'] = 0xF768;\n    t['Hungarumlaut'] = 0xF6CF;\n    t['Hungarumlautsmall'] = 0xF6F8;\n    t['Hzsquare'] = 0x3390;\n    t['I'] = 0x0049;\n    t['IAcyrillic'] = 0x042F;\n    t['IJ'] = 0x0132;\n    t['IUcyrillic'] = 0x042E;\n    t['Iacute'] = 0x00CD;\n    t['Iacutesmall'] = 0xF7ED;\n    t['Ibreve'] = 0x012C;\n    t['Icaron'] = 0x01CF;\n    t['Icircle'] = 0x24BE;\n    t['Icircumflex'] = 0x00CE;\n    t['Icircumflexsmall'] = 0xF7EE;\n    t['Icyrillic'] = 0x0406;\n    t['Idblgrave'] = 0x0208;\n    t['Idieresis'] = 0x00CF;\n    t['Idieresisacute'] = 0x1E2E;\n    t['Idieresiscyrillic'] = 0x04E4;\n    t['Idieresissmall'] = 0xF7EF;\n    t['Idot'] = 0x0130;\n    t['Idotaccent'] = 0x0130;\n    t['Idotbelow'] = 0x1ECA;\n    t['Iebrevecyrillic'] = 0x04D6;\n    t['Iecyrillic'] = 0x0415;\n    t['Ifraktur'] = 0x2111;\n    t['Igrave'] = 0x00CC;\n    t['Igravesmall'] = 0xF7EC;\n    t['Ihookabove'] = 0x1EC8;\n    t['Iicyrillic'] = 0x0418;\n    t['Iinvertedbreve'] = 0x020A;\n    t['Iishortcyrillic'] = 0x0419;\n    t['Imacron'] = 0x012A;\n    t['Imacroncyrillic'] = 0x04E2;\n    t['Imonospace'] = 0xFF29;\n    t['Iniarmenian'] = 0x053B;\n    t['Iocyrillic'] = 0x0401;\n    t['Iogonek'] = 0x012E;\n    t['Iota'] = 0x0399;\n    t['Iotaafrican'] = 0x0196;\n    t['Iotadieresis'] = 0x03AA;\n    t['Iotatonos'] = 0x038A;\n    t['Ismall'] = 0xF769;\n    t['Istroke'] = 0x0197;\n    t['Itilde'] = 0x0128;\n    t['Itildebelow'] = 0x1E2C;\n    t['Izhitsacyrillic'] = 0x0474;\n    t['Izhitsadblgravecyrillic'] = 0x0476;\n    t['J'] = 0x004A;\n    t['Jaarmenian'] = 0x0541;\n    t['Jcircle'] = 0x24BF;\n    t['Jcircumflex'] = 0x0134;\n    t['Jecyrillic'] = 0x0408;\n    t['Jheharmenian'] = 0x054B;\n    t['Jmonospace'] = 0xFF2A;\n    t['Jsmall'] = 0xF76A;\n    t['K'] = 0x004B;\n    t['KBsquare'] = 0x3385;\n    t['KKsquare'] = 0x33CD;\n    t['Kabashkircyrillic'] = 0x04A0;\n    t['Kacute'] = 0x1E30;\n    t['Kacyrillic'] = 0x041A;\n    t['Kadescendercyrillic'] = 0x049A;\n    t['Kahookcyrillic'] = 0x04C3;\n    t['Kappa'] = 0x039A;\n    t['Kastrokecyrillic'] = 0x049E;\n    t['Kaverticalstrokecyrillic'] = 0x049C;\n    t['Kcaron'] = 0x01E8;\n    t['Kcedilla'] = 0x0136;\n    t['Kcircle'] = 0x24C0;\n    t['Kcommaaccent'] = 0x0136;\n    t['Kdotbelow'] = 0x1E32;\n    t['Keharmenian'] = 0x0554;\n    t['Kenarmenian'] = 0x053F;\n    t['Khacyrillic'] = 0x0425;\n    t['Kheicoptic'] = 0x03E6;\n    t['Khook'] = 0x0198;\n    t['Kjecyrillic'] = 0x040C;\n    t['Klinebelow'] = 0x1E34;\n    t['Kmonospace'] = 0xFF2B;\n    t['Koppacyrillic'] = 0x0480;\n    t['Koppagreek'] = 0x03DE;\n    t['Ksicyrillic'] = 0x046E;\n    t['Ksmall'] = 0xF76B;\n    t['L'] = 0x004C;\n    t['LJ'] = 0x01C7;\n    t['LL'] = 0xF6BF;\n    t['Lacute'] = 0x0139;\n    t['Lambda'] = 0x039B;\n    t['Lcaron'] = 0x013D;\n    t['Lcedilla'] = 0x013B;\n    t['Lcircle'] = 0x24C1;\n    t['Lcircumflexbelow'] = 0x1E3C;\n    t['Lcommaaccent'] = 0x013B;\n    t['Ldot'] = 0x013F;\n    t['Ldotaccent'] = 0x013F;\n    t['Ldotbelow'] = 0x1E36;\n    t['Ldotbelowmacron'] = 0x1E38;\n    t['Liwnarmenian'] = 0x053C;\n    t['Lj'] = 0x01C8;\n    t['Ljecyrillic'] = 0x0409;\n    t['Llinebelow'] = 0x1E3A;\n    t['Lmonospace'] = 0xFF2C;\n    t['Lslash'] = 0x0141;\n    t['Lslashsmall'] = 0xF6F9;\n    t['Lsmall'] = 0xF76C;\n    t['M'] = 0x004D;\n    t['MBsquare'] = 0x3386;\n    t['Macron'] = 0xF6D0;\n    t['Macronsmall'] = 0xF7AF;\n    t['Macute'] = 0x1E3E;\n    t['Mcircle'] = 0x24C2;\n    t['Mdotaccent'] = 0x1E40;\n    t['Mdotbelow'] = 0x1E42;\n    t['Menarmenian'] = 0x0544;\n    t['Mmonospace'] = 0xFF2D;\n    t['Msmall'] = 0xF76D;\n    t['Mturned'] = 0x019C;\n    t['Mu'] = 0x039C;\n    t['N'] = 0x004E;\n    t['NJ'] = 0x01CA;\n    t['Nacute'] = 0x0143;\n    t['Ncaron'] = 0x0147;\n    t['Ncedilla'] = 0x0145;\n    t['Ncircle'] = 0x24C3;\n    t['Ncircumflexbelow'] = 0x1E4A;\n    t['Ncommaaccent'] = 0x0145;\n    t['Ndotaccent'] = 0x1E44;\n    t['Ndotbelow'] = 0x1E46;\n    t['Nhookleft'] = 0x019D;\n    t['Nineroman'] = 0x2168;\n    t['Nj'] = 0x01CB;\n    t['Njecyrillic'] = 0x040A;\n    t['Nlinebelow'] = 0x1E48;\n    t['Nmonospace'] = 0xFF2E;\n    t['Nowarmenian'] = 0x0546;\n    t['Nsmall'] = 0xF76E;\n    t['Ntilde'] = 0x00D1;\n    t['Ntildesmall'] = 0xF7F1;\n    t['Nu'] = 0x039D;\n    t['O'] = 0x004F;\n    t['OE'] = 0x0152;\n    t['OEsmall'] = 0xF6FA;\n    t['Oacute'] = 0x00D3;\n    t['Oacutesmall'] = 0xF7F3;\n    t['Obarredcyrillic'] = 0x04E8;\n    t['Obarreddieresiscyrillic'] = 0x04EA;\n    t['Obreve'] = 0x014E;\n    t['Ocaron'] = 0x01D1;\n    t['Ocenteredtilde'] = 0x019F;\n    t['Ocircle'] = 0x24C4;\n    t['Ocircumflex'] = 0x00D4;\n    t['Ocircumflexacute'] = 0x1ED0;\n    t['Ocircumflexdotbelow'] = 0x1ED8;\n    t['Ocircumflexgrave'] = 0x1ED2;\n    t['Ocircumflexhookabove'] = 0x1ED4;\n    t['Ocircumflexsmall'] = 0xF7F4;\n    t['Ocircumflextilde'] = 0x1ED6;\n    t['Ocyrillic'] = 0x041E;\n    t['Odblacute'] = 0x0150;\n    t['Odblgrave'] = 0x020C;\n    t['Odieresis'] = 0x00D6;\n    t['Odieresiscyrillic'] = 0x04E6;\n    t['Odieresissmall'] = 0xF7F6;\n    t['Odotbelow'] = 0x1ECC;\n    t['Ogoneksmall'] = 0xF6FB;\n    t['Ograve'] = 0x00D2;\n    t['Ogravesmall'] = 0xF7F2;\n    t['Oharmenian'] = 0x0555;\n    t['Ohm'] = 0x2126;\n    t['Ohookabove'] = 0x1ECE;\n    t['Ohorn'] = 0x01A0;\n    t['Ohornacute'] = 0x1EDA;\n    t['Ohorndotbelow'] = 0x1EE2;\n    t['Ohorngrave'] = 0x1EDC;\n    t['Ohornhookabove'] = 0x1EDE;\n    t['Ohorntilde'] = 0x1EE0;\n    t['Ohungarumlaut'] = 0x0150;\n    t['Oi'] = 0x01A2;\n    t['Oinvertedbreve'] = 0x020E;\n    t['Omacron'] = 0x014C;\n    t['Omacronacute'] = 0x1E52;\n    t['Omacrongrave'] = 0x1E50;\n    t['Omega'] = 0x2126;\n    t['Omegacyrillic'] = 0x0460;\n    t['Omegagreek'] = 0x03A9;\n    t['Omegaroundcyrillic'] = 0x047A;\n    t['Omegatitlocyrillic'] = 0x047C;\n    t['Omegatonos'] = 0x038F;\n    t['Omicron'] = 0x039F;\n    t['Omicrontonos'] = 0x038C;\n    t['Omonospace'] = 0xFF2F;\n    t['Oneroman'] = 0x2160;\n    t['Oogonek'] = 0x01EA;\n    t['Oogonekmacron'] = 0x01EC;\n    t['Oopen'] = 0x0186;\n    t['Oslash'] = 0x00D8;\n    t['Oslashacute'] = 0x01FE;\n    t['Oslashsmall'] = 0xF7F8;\n    t['Osmall'] = 0xF76F;\n    t['Ostrokeacute'] = 0x01FE;\n    t['Otcyrillic'] = 0x047E;\n    t['Otilde'] = 0x00D5;\n    t['Otildeacute'] = 0x1E4C;\n    t['Otildedieresis'] = 0x1E4E;\n    t['Otildesmall'] = 0xF7F5;\n    t['P'] = 0x0050;\n    t['Pacute'] = 0x1E54;\n    t['Pcircle'] = 0x24C5;\n    t['Pdotaccent'] = 0x1E56;\n    t['Pecyrillic'] = 0x041F;\n    t['Peharmenian'] = 0x054A;\n    t['Pemiddlehookcyrillic'] = 0x04A6;\n    t['Phi'] = 0x03A6;\n    t['Phook'] = 0x01A4;\n    t['Pi'] = 0x03A0;\n    t['Piwrarmenian'] = 0x0553;\n    t['Pmonospace'] = 0xFF30;\n    t['Psi'] = 0x03A8;\n    t['Psicyrillic'] = 0x0470;\n    t['Psmall'] = 0xF770;\n    t['Q'] = 0x0051;\n    t['Qcircle'] = 0x24C6;\n    t['Qmonospace'] = 0xFF31;\n    t['Qsmall'] = 0xF771;\n    t['R'] = 0x0052;\n    t['Raarmenian'] = 0x054C;\n    t['Racute'] = 0x0154;\n    t['Rcaron'] = 0x0158;\n    t['Rcedilla'] = 0x0156;\n    t['Rcircle'] = 0x24C7;\n    t['Rcommaaccent'] = 0x0156;\n    t['Rdblgrave'] = 0x0210;\n    t['Rdotaccent'] = 0x1E58;\n    t['Rdotbelow'] = 0x1E5A;\n    t['Rdotbelowmacron'] = 0x1E5C;\n    t['Reharmenian'] = 0x0550;\n    t['Rfraktur'] = 0x211C;\n    t['Rho'] = 0x03A1;\n    t['Ringsmall'] = 0xF6FC;\n    t['Rinvertedbreve'] = 0x0212;\n    t['Rlinebelow'] = 0x1E5E;\n    t['Rmonospace'] = 0xFF32;\n    t['Rsmall'] = 0xF772;\n    t['Rsmallinverted'] = 0x0281;\n    t['Rsmallinvertedsuperior'] = 0x02B6;\n    t['S'] = 0x0053;\n    t['SF010000'] = 0x250C;\n    t['SF020000'] = 0x2514;\n    t['SF030000'] = 0x2510;\n    t['SF040000'] = 0x2518;\n    t['SF050000'] = 0x253C;\n    t['SF060000'] = 0x252C;\n    t['SF070000'] = 0x2534;\n    t['SF080000'] = 0x251C;\n    t['SF090000'] = 0x2524;\n    t['SF100000'] = 0x2500;\n    t['SF110000'] = 0x2502;\n    t['SF190000'] = 0x2561;\n    t['SF200000'] = 0x2562;\n    t['SF210000'] = 0x2556;\n    t['SF220000'] = 0x2555;\n    t['SF230000'] = 0x2563;\n    t['SF240000'] = 0x2551;\n    t['SF250000'] = 0x2557;\n    t['SF260000'] = 0x255D;\n    t['SF270000'] = 0x255C;\n    t['SF280000'] = 0x255B;\n    t['SF360000'] = 0x255E;\n    t['SF370000'] = 0x255F;\n    t['SF380000'] = 0x255A;\n    t['SF390000'] = 0x2554;\n    t['SF400000'] = 0x2569;\n    t['SF410000'] = 0x2566;\n    t['SF420000'] = 0x2560;\n    t['SF430000'] = 0x2550;\n    t['SF440000'] = 0x256C;\n    t['SF450000'] = 0x2567;\n    t['SF460000'] = 0x2568;\n    t['SF470000'] = 0x2564;\n    t['SF480000'] = 0x2565;\n    t['SF490000'] = 0x2559;\n    t['SF500000'] = 0x2558;\n    t['SF510000'] = 0x2552;\n    t['SF520000'] = 0x2553;\n    t['SF530000'] = 0x256B;\n    t['SF540000'] = 0x256A;\n    t['Sacute'] = 0x015A;\n    t['Sacutedotaccent'] = 0x1E64;\n    t['Sampigreek'] = 0x03E0;\n    t['Scaron'] = 0x0160;\n    t['Scarondotaccent'] = 0x1E66;\n    t['Scaronsmall'] = 0xF6FD;\n    t['Scedilla'] = 0x015E;\n    t['Schwa'] = 0x018F;\n    t['Schwacyrillic'] = 0x04D8;\n    t['Schwadieresiscyrillic'] = 0x04DA;\n    t['Scircle'] = 0x24C8;\n    t['Scircumflex'] = 0x015C;\n    t['Scommaaccent'] = 0x0218;\n    t['Sdotaccent'] = 0x1E60;\n    t['Sdotbelow'] = 0x1E62;\n    t['Sdotbelowdotaccent'] = 0x1E68;\n    t['Seharmenian'] = 0x054D;\n    t['Sevenroman'] = 0x2166;\n    t['Shaarmenian'] = 0x0547;\n    t['Shacyrillic'] = 0x0428;\n    t['Shchacyrillic'] = 0x0429;\n    t['Sheicoptic'] = 0x03E2;\n    t['Shhacyrillic'] = 0x04BA;\n    t['Shimacoptic'] = 0x03EC;\n    t['Sigma'] = 0x03A3;\n    t['Sixroman'] = 0x2165;\n    t['Smonospace'] = 0xFF33;\n    t['Softsigncyrillic'] = 0x042C;\n    t['Ssmall'] = 0xF773;\n    t['Stigmagreek'] = 0x03DA;\n    t['T'] = 0x0054;\n    t['Tau'] = 0x03A4;\n    t['Tbar'] = 0x0166;\n    t['Tcaron'] = 0x0164;\n    t['Tcedilla'] = 0x0162;\n    t['Tcircle'] = 0x24C9;\n    t['Tcircumflexbelow'] = 0x1E70;\n    t['Tcommaaccent'] = 0x0162;\n    t['Tdotaccent'] = 0x1E6A;\n    t['Tdotbelow'] = 0x1E6C;\n    t['Tecyrillic'] = 0x0422;\n    t['Tedescendercyrillic'] = 0x04AC;\n    t['Tenroman'] = 0x2169;\n    t['Tetsecyrillic'] = 0x04B4;\n    t['Theta'] = 0x0398;\n    t['Thook'] = 0x01AC;\n    t['Thorn'] = 0x00DE;\n    t['Thornsmall'] = 0xF7FE;\n    t['Threeroman'] = 0x2162;\n    t['Tildesmall'] = 0xF6FE;\n    t['Tiwnarmenian'] = 0x054F;\n    t['Tlinebelow'] = 0x1E6E;\n    t['Tmonospace'] = 0xFF34;\n    t['Toarmenian'] = 0x0539;\n    t['Tonefive'] = 0x01BC;\n    t['Tonesix'] = 0x0184;\n    t['Tonetwo'] = 0x01A7;\n    t['Tretroflexhook'] = 0x01AE;\n    t['Tsecyrillic'] = 0x0426;\n    t['Tshecyrillic'] = 0x040B;\n    t['Tsmall'] = 0xF774;\n    t['Twelveroman'] = 0x216B;\n    t['Tworoman'] = 0x2161;\n    t['U'] = 0x0055;\n    t['Uacute'] = 0x00DA;\n    t['Uacutesmall'] = 0xF7FA;\n    t['Ubreve'] = 0x016C;\n    t['Ucaron'] = 0x01D3;\n    t['Ucircle'] = 0x24CA;\n    t['Ucircumflex'] = 0x00DB;\n    t['Ucircumflexbelow'] = 0x1E76;\n    t['Ucircumflexsmall'] = 0xF7FB;\n    t['Ucyrillic'] = 0x0423;\n    t['Udblacute'] = 0x0170;\n    t['Udblgrave'] = 0x0214;\n    t['Udieresis'] = 0x00DC;\n    t['Udieresisacute'] = 0x01D7;\n    t['Udieresisbelow'] = 0x1E72;\n    t['Udieresiscaron'] = 0x01D9;\n    t['Udieresiscyrillic'] = 0x04F0;\n    t['Udieresisgrave'] = 0x01DB;\n    t['Udieresismacron'] = 0x01D5;\n    t['Udieresissmall'] = 0xF7FC;\n    t['Udotbelow'] = 0x1EE4;\n    t['Ugrave'] = 0x00D9;\n    t['Ugravesmall'] = 0xF7F9;\n    t['Uhookabove'] = 0x1EE6;\n    t['Uhorn'] = 0x01AF;\n    t['Uhornacute'] = 0x1EE8;\n    t['Uhorndotbelow'] = 0x1EF0;\n    t['Uhorngrave'] = 0x1EEA;\n    t['Uhornhookabove'] = 0x1EEC;\n    t['Uhorntilde'] = 0x1EEE;\n    t['Uhungarumlaut'] = 0x0170;\n    t['Uhungarumlautcyrillic'] = 0x04F2;\n    t['Uinvertedbreve'] = 0x0216;\n    t['Ukcyrillic'] = 0x0478;\n    t['Umacron'] = 0x016A;\n    t['Umacroncyrillic'] = 0x04EE;\n    t['Umacrondieresis'] = 0x1E7A;\n    t['Umonospace'] = 0xFF35;\n    t['Uogonek'] = 0x0172;\n    t['Upsilon'] = 0x03A5;\n    t['Upsilon1'] = 0x03D2;\n    t['Upsilonacutehooksymbolgreek'] = 0x03D3;\n    t['Upsilonafrican'] = 0x01B1;\n    t['Upsilondieresis'] = 0x03AB;\n    t['Upsilondieresishooksymbolgreek'] = 0x03D4;\n    t['Upsilonhooksymbol'] = 0x03D2;\n    t['Upsilontonos'] = 0x038E;\n    t['Uring'] = 0x016E;\n    t['Ushortcyrillic'] = 0x040E;\n    t['Usmall'] = 0xF775;\n    t['Ustraightcyrillic'] = 0x04AE;\n    t['Ustraightstrokecyrillic'] = 0x04B0;\n    t['Utilde'] = 0x0168;\n    t['Utildeacute'] = 0x1E78;\n    t['Utildebelow'] = 0x1E74;\n    t['V'] = 0x0056;\n    t['Vcircle'] = 0x24CB;\n    t['Vdotbelow'] = 0x1E7E;\n    t['Vecyrillic'] = 0x0412;\n    t['Vewarmenian'] = 0x054E;\n    t['Vhook'] = 0x01B2;\n    t['Vmonospace'] = 0xFF36;\n    t['Voarmenian'] = 0x0548;\n    t['Vsmall'] = 0xF776;\n    t['Vtilde'] = 0x1E7C;\n    t['W'] = 0x0057;\n    t['Wacute'] = 0x1E82;\n    t['Wcircle'] = 0x24CC;\n    t['Wcircumflex'] = 0x0174;\n    t['Wdieresis'] = 0x1E84;\n    t['Wdotaccent'] = 0x1E86;\n    t['Wdotbelow'] = 0x1E88;\n    t['Wgrave'] = 0x1E80;\n    t['Wmonospace'] = 0xFF37;\n    t['Wsmall'] = 0xF777;\n    t['X'] = 0x0058;\n    t['Xcircle'] = 0x24CD;\n    t['Xdieresis'] = 0x1E8C;\n    t['Xdotaccent'] = 0x1E8A;\n    t['Xeharmenian'] = 0x053D;\n    t['Xi'] = 0x039E;\n    t['Xmonospace'] = 0xFF38;\n    t['Xsmall'] = 0xF778;\n    t['Y'] = 0x0059;\n    t['Yacute'] = 0x00DD;\n    t['Yacutesmall'] = 0xF7FD;\n    t['Yatcyrillic'] = 0x0462;\n    t['Ycircle'] = 0x24CE;\n    t['Ycircumflex'] = 0x0176;\n    t['Ydieresis'] = 0x0178;\n    t['Ydieresissmall'] = 0xF7FF;\n    t['Ydotaccent'] = 0x1E8E;\n    t['Ydotbelow'] = 0x1EF4;\n    t['Yericyrillic'] = 0x042B;\n    t['Yerudieresiscyrillic'] = 0x04F8;\n    t['Ygrave'] = 0x1EF2;\n    t['Yhook'] = 0x01B3;\n    t['Yhookabove'] = 0x1EF6;\n    t['Yiarmenian'] = 0x0545;\n    t['Yicyrillic'] = 0x0407;\n    t['Yiwnarmenian'] = 0x0552;\n    t['Ymonospace'] = 0xFF39;\n    t['Ysmall'] = 0xF779;\n    t['Ytilde'] = 0x1EF8;\n    t['Yusbigcyrillic'] = 0x046A;\n    t['Yusbigiotifiedcyrillic'] = 0x046C;\n    t['Yuslittlecyrillic'] = 0x0466;\n    t['Yuslittleiotifiedcyrillic'] = 0x0468;\n    t['Z'] = 0x005A;\n    t['Zaarmenian'] = 0x0536;\n    t['Zacute'] = 0x0179;\n    t['Zcaron'] = 0x017D;\n    t['Zcaronsmall'] = 0xF6FF;\n    t['Zcircle'] = 0x24CF;\n    t['Zcircumflex'] = 0x1E90;\n    t['Zdot'] = 0x017B;\n    t['Zdotaccent'] = 0x017B;\n    t['Zdotbelow'] = 0x1E92;\n    t['Zecyrillic'] = 0x0417;\n    t['Zedescendercyrillic'] = 0x0498;\n    t['Zedieresiscyrillic'] = 0x04DE;\n    t['Zeta'] = 0x0396;\n    t['Zhearmenian'] = 0x053A;\n    t['Zhebrevecyrillic'] = 0x04C1;\n    t['Zhecyrillic'] = 0x0416;\n    t['Zhedescendercyrillic'] = 0x0496;\n    t['Zhedieresiscyrillic'] = 0x04DC;\n    t['Zlinebelow'] = 0x1E94;\n    t['Zmonospace'] = 0xFF3A;\n    t['Zsmall'] = 0xF77A;\n    t['Zstroke'] = 0x01B5;\n    t['a'] = 0x0061;\n    t['aabengali'] = 0x0986;\n    t['aacute'] = 0x00E1;\n    t['aadeva'] = 0x0906;\n    t['aagujarati'] = 0x0A86;\n    t['aagurmukhi'] = 0x0A06;\n    t['aamatragurmukhi'] = 0x0A3E;\n    t['aarusquare'] = 0x3303;\n    t['aavowelsignbengali'] = 0x09BE;\n    t['aavowelsigndeva'] = 0x093E;\n    t['aavowelsigngujarati'] = 0x0ABE;\n    t['abbreviationmarkarmenian'] = 0x055F;\n    t['abbreviationsigndeva'] = 0x0970;\n    t['abengali'] = 0x0985;\n    t['abopomofo'] = 0x311A;\n    t['abreve'] = 0x0103;\n    t['abreveacute'] = 0x1EAF;\n    t['abrevecyrillic'] = 0x04D1;\n    t['abrevedotbelow'] = 0x1EB7;\n    t['abrevegrave'] = 0x1EB1;\n    t['abrevehookabove'] = 0x1EB3;\n    t['abrevetilde'] = 0x1EB5;\n    t['acaron'] = 0x01CE;\n    t['acircle'] = 0x24D0;\n    t['acircumflex'] = 0x00E2;\n    t['acircumflexacute'] = 0x1EA5;\n    t['acircumflexdotbelow'] = 0x1EAD;\n    t['acircumflexgrave'] = 0x1EA7;\n    t['acircumflexhookabove'] = 0x1EA9;\n    t['acircumflextilde'] = 0x1EAB;\n    t['acute'] = 0x00B4;\n    t['acutebelowcmb'] = 0x0317;\n    t['acutecmb'] = 0x0301;\n    t['acutecomb'] = 0x0301;\n    t['acutedeva'] = 0x0954;\n    t['acutelowmod'] = 0x02CF;\n    t['acutetonecmb'] = 0x0341;\n    t['acyrillic'] = 0x0430;\n    t['adblgrave'] = 0x0201;\n    t['addakgurmukhi'] = 0x0A71;\n    t['adeva'] = 0x0905;\n    t['adieresis'] = 0x00E4;\n    t['adieresiscyrillic'] = 0x04D3;\n    t['adieresismacron'] = 0x01DF;\n    t['adotbelow'] = 0x1EA1;\n    t['adotmacron'] = 0x01E1;\n    t['ae'] = 0x00E6;\n    t['aeacute'] = 0x01FD;\n    t['aekorean'] = 0x3150;\n    t['aemacron'] = 0x01E3;\n    t['afii00208'] = 0x2015;\n    t['afii08941'] = 0x20A4;\n    t['afii10017'] = 0x0410;\n    t['afii10018'] = 0x0411;\n    t['afii10019'] = 0x0412;\n    t['afii10020'] = 0x0413;\n    t['afii10021'] = 0x0414;\n    t['afii10022'] = 0x0415;\n    t['afii10023'] = 0x0401;\n    t['afii10024'] = 0x0416;\n    t['afii10025'] = 0x0417;\n    t['afii10026'] = 0x0418;\n    t['afii10027'] = 0x0419;\n    t['afii10028'] = 0x041A;\n    t['afii10029'] = 0x041B;\n    t['afii10030'] = 0x041C;\n    t['afii10031'] = 0x041D;\n    t['afii10032'] = 0x041E;\n    t['afii10033'] = 0x041F;\n    t['afii10034'] = 0x0420;\n    t['afii10035'] = 0x0421;\n    t['afii10036'] = 0x0422;\n    t['afii10037'] = 0x0423;\n    t['afii10038'] = 0x0424;\n    t['afii10039'] = 0x0425;\n    t['afii10040'] = 0x0426;\n    t['afii10041'] = 0x0427;\n    t['afii10042'] = 0x0428;\n    t['afii10043'] = 0x0429;\n    t['afii10044'] = 0x042A;\n    t['afii10045'] = 0x042B;\n    t['afii10046'] = 0x042C;\n    t['afii10047'] = 0x042D;\n    t['afii10048'] = 0x042E;\n    t['afii10049'] = 0x042F;\n    t['afii10050'] = 0x0490;\n    t['afii10051'] = 0x0402;\n    t['afii10052'] = 0x0403;\n    t['afii10053'] = 0x0404;\n    t['afii10054'] = 0x0405;\n    t['afii10055'] = 0x0406;\n    t['afii10056'] = 0x0407;\n    t['afii10057'] = 0x0408;\n    t['afii10058'] = 0x0409;\n    t['afii10059'] = 0x040A;\n    t['afii10060'] = 0x040B;\n    t['afii10061'] = 0x040C;\n    t['afii10062'] = 0x040E;\n    t['afii10063'] = 0xF6C4;\n    t['afii10064'] = 0xF6C5;\n    t['afii10065'] = 0x0430;\n    t['afii10066'] = 0x0431;\n    t['afii10067'] = 0x0432;\n    t['afii10068'] = 0x0433;\n    t['afii10069'] = 0x0434;\n    t['afii10070'] = 0x0435;\n    t['afii10071'] = 0x0451;\n    t['afii10072'] = 0x0436;\n    t['afii10073'] = 0x0437;\n    t['afii10074'] = 0x0438;\n    t['afii10075'] = 0x0439;\n    t['afii10076'] = 0x043A;\n    t['afii10077'] = 0x043B;\n    t['afii10078'] = 0x043C;\n    t['afii10079'] = 0x043D;\n    t['afii10080'] = 0x043E;\n    t['afii10081'] = 0x043F;\n    t['afii10082'] = 0x0440;\n    t['afii10083'] = 0x0441;\n    t['afii10084'] = 0x0442;\n    t['afii10085'] = 0x0443;\n    t['afii10086'] = 0x0444;\n    t['afii10087'] = 0x0445;\n    t['afii10088'] = 0x0446;\n    t['afii10089'] = 0x0447;\n    t['afii10090'] = 0x0448;\n    t['afii10091'] = 0x0449;\n    t['afii10092'] = 0x044A;\n    t['afii10093'] = 0x044B;\n    t['afii10094'] = 0x044C;\n    t['afii10095'] = 0x044D;\n    t['afii10096'] = 0x044E;\n    t['afii10097'] = 0x044F;\n    t['afii10098'] = 0x0491;\n    t['afii10099'] = 0x0452;\n    t['afii10100'] = 0x0453;\n    t['afii10101'] = 0x0454;\n    t['afii10102'] = 0x0455;\n    t['afii10103'] = 0x0456;\n    t['afii10104'] = 0x0457;\n    t['afii10105'] = 0x0458;\n    t['afii10106'] = 0x0459;\n    t['afii10107'] = 0x045A;\n    t['afii10108'] = 0x045B;\n    t['afii10109'] = 0x045C;\n    t['afii10110'] = 0x045E;\n    t['afii10145'] = 0x040F;\n    t['afii10146'] = 0x0462;\n    t['afii10147'] = 0x0472;\n    t['afii10148'] = 0x0474;\n    t['afii10192'] = 0xF6C6;\n    t['afii10193'] = 0x045F;\n    t['afii10194'] = 0x0463;\n    t['afii10195'] = 0x0473;\n    t['afii10196'] = 0x0475;\n    t['afii10831'] = 0xF6C7;\n    t['afii10832'] = 0xF6C8;\n    t['afii10846'] = 0x04D9;\n    t['afii299'] = 0x200E;\n    t['afii300'] = 0x200F;\n    t['afii301'] = 0x200D;\n    t['afii57381'] = 0x066A;\n    t['afii57388'] = 0x060C;\n    t['afii57392'] = 0x0660;\n    t['afii57393'] = 0x0661;\n    t['afii57394'] = 0x0662;\n    t['afii57395'] = 0x0663;\n    t['afii57396'] = 0x0664;\n    t['afii57397'] = 0x0665;\n    t['afii57398'] = 0x0666;\n    t['afii57399'] = 0x0667;\n    t['afii57400'] = 0x0668;\n    t['afii57401'] = 0x0669;\n    t['afii57403'] = 0x061B;\n    t['afii57407'] = 0x061F;\n    t['afii57409'] = 0x0621;\n    t['afii57410'] = 0x0622;\n    t['afii57411'] = 0x0623;\n    t['afii57412'] = 0x0624;\n    t['afii57413'] = 0x0625;\n    t['afii57414'] = 0x0626;\n    t['afii57415'] = 0x0627;\n    t['afii57416'] = 0x0628;\n    t['afii57417'] = 0x0629;\n    t['afii57418'] = 0x062A;\n    t['afii57419'] = 0x062B;\n    t['afii57420'] = 0x062C;\n    t['afii57421'] = 0x062D;\n    t['afii57422'] = 0x062E;\n    t['afii57423'] = 0x062F;\n    t['afii57424'] = 0x0630;\n    t['afii57425'] = 0x0631;\n    t['afii57426'] = 0x0632;\n    t['afii57427'] = 0x0633;\n    t['afii57428'] = 0x0634;\n    t['afii57429'] = 0x0635;\n    t['afii57430'] = 0x0636;\n    t['afii57431'] = 0x0637;\n    t['afii57432'] = 0x0638;\n    t['afii57433'] = 0x0639;\n    t['afii57434'] = 0x063A;\n    t['afii57440'] = 0x0640;\n    t['afii57441'] = 0x0641;\n    t['afii57442'] = 0x0642;\n    t['afii57443'] = 0x0643;\n    t['afii57444'] = 0x0644;\n    t['afii57445'] = 0x0645;\n    t['afii57446'] = 0x0646;\n    t['afii57448'] = 0x0648;\n    t['afii57449'] = 0x0649;\n    t['afii57450'] = 0x064A;\n    t['afii57451'] = 0x064B;\n    t['afii57452'] = 0x064C;\n    t['afii57453'] = 0x064D;\n    t['afii57454'] = 0x064E;\n    t['afii57455'] = 0x064F;\n    t['afii57456'] = 0x0650;\n    t['afii57457'] = 0x0651;\n    t['afii57458'] = 0x0652;\n    t['afii57470'] = 0x0647;\n    t['afii57505'] = 0x06A4;\n    t['afii57506'] = 0x067E;\n    t['afii57507'] = 0x0686;\n    t['afii57508'] = 0x0698;\n    t['afii57509'] = 0x06AF;\n    t['afii57511'] = 0x0679;\n    t['afii57512'] = 0x0688;\n    t['afii57513'] = 0x0691;\n    t['afii57514'] = 0x06BA;\n    t['afii57519'] = 0x06D2;\n    t['afii57534'] = 0x06D5;\n    t['afii57636'] = 0x20AA;\n    t['afii57645'] = 0x05BE;\n    t['afii57658'] = 0x05C3;\n    t['afii57664'] = 0x05D0;\n    t['afii57665'] = 0x05D1;\n    t['afii57666'] = 0x05D2;\n    t['afii57667'] = 0x05D3;\n    t['afii57668'] = 0x05D4;\n    t['afii57669'] = 0x05D5;\n    t['afii57670'] = 0x05D6;\n    t['afii57671'] = 0x05D7;\n    t['afii57672'] = 0x05D8;\n    t['afii57673'] = 0x05D9;\n    t['afii57674'] = 0x05DA;\n    t['afii57675'] = 0x05DB;\n    t['afii57676'] = 0x05DC;\n    t['afii57677'] = 0x05DD;\n    t['afii57678'] = 0x05DE;\n    t['afii57679'] = 0x05DF;\n    t['afii57680'] = 0x05E0;\n    t['afii57681'] = 0x05E1;\n    t['afii57682'] = 0x05E2;\n    t['afii57683'] = 0x05E3;\n    t['afii57684'] = 0x05E4;\n    t['afii57685'] = 0x05E5;\n    t['afii57686'] = 0x05E6;\n    t['afii57687'] = 0x05E7;\n    t['afii57688'] = 0x05E8;\n    t['afii57689'] = 0x05E9;\n    t['afii57690'] = 0x05EA;\n    t['afii57694'] = 0xFB2A;\n    t['afii57695'] = 0xFB2B;\n    t['afii57700'] = 0xFB4B;\n    t['afii57705'] = 0xFB1F;\n    t['afii57716'] = 0x05F0;\n    t['afii57717'] = 0x05F1;\n    t['afii57718'] = 0x05F2;\n    t['afii57723'] = 0xFB35;\n    t['afii57793'] = 0x05B4;\n    t['afii57794'] = 0x05B5;\n    t['afii57795'] = 0x05B6;\n    t['afii57796'] = 0x05BB;\n    t['afii57797'] = 0x05B8;\n    t['afii57798'] = 0x05B7;\n    t['afii57799'] = 0x05B0;\n    t['afii57800'] = 0x05B2;\n    t['afii57801'] = 0x05B1;\n    t['afii57802'] = 0x05B3;\n    t['afii57803'] = 0x05C2;\n    t['afii57804'] = 0x05C1;\n    t['afii57806'] = 0x05B9;\n    t['afii57807'] = 0x05BC;\n    t['afii57839'] = 0x05BD;\n    t['afii57841'] = 0x05BF;\n    t['afii57842'] = 0x05C0;\n    t['afii57929'] = 0x02BC;\n    t['afii61248'] = 0x2105;\n    t['afii61289'] = 0x2113;\n    t['afii61352'] = 0x2116;\n    t['afii61573'] = 0x202C;\n    t['afii61574'] = 0x202D;\n    t['afii61575'] = 0x202E;\n    t['afii61664'] = 0x200C;\n    t['afii63167'] = 0x066D;\n    t['afii64937'] = 0x02BD;\n    t['agrave'] = 0x00E0;\n    t['agujarati'] = 0x0A85;\n    t['agurmukhi'] = 0x0A05;\n    t['ahiragana'] = 0x3042;\n    t['ahookabove'] = 0x1EA3;\n    t['aibengali'] = 0x0990;\n    t['aibopomofo'] = 0x311E;\n    t['aideva'] = 0x0910;\n    t['aiecyrillic'] = 0x04D5;\n    t['aigujarati'] = 0x0A90;\n    t['aigurmukhi'] = 0x0A10;\n    t['aimatragurmukhi'] = 0x0A48;\n    t['ainarabic'] = 0x0639;\n    t['ainfinalarabic'] = 0xFECA;\n    t['aininitialarabic'] = 0xFECB;\n    t['ainmedialarabic'] = 0xFECC;\n    t['ainvertedbreve'] = 0x0203;\n    t['aivowelsignbengali'] = 0x09C8;\n    t['aivowelsigndeva'] = 0x0948;\n    t['aivowelsigngujarati'] = 0x0AC8;\n    t['akatakana'] = 0x30A2;\n    t['akatakanahalfwidth'] = 0xFF71;\n    t['akorean'] = 0x314F;\n    t['alef'] = 0x05D0;\n    t['alefarabic'] = 0x0627;\n    t['alefdageshhebrew'] = 0xFB30;\n    t['aleffinalarabic'] = 0xFE8E;\n    t['alefhamzaabovearabic'] = 0x0623;\n    t['alefhamzaabovefinalarabic'] = 0xFE84;\n    t['alefhamzabelowarabic'] = 0x0625;\n    t['alefhamzabelowfinalarabic'] = 0xFE88;\n    t['alefhebrew'] = 0x05D0;\n    t['aleflamedhebrew'] = 0xFB4F;\n    t['alefmaddaabovearabic'] = 0x0622;\n    t['alefmaddaabovefinalarabic'] = 0xFE82;\n    t['alefmaksuraarabic'] = 0x0649;\n    t['alefmaksurafinalarabic'] = 0xFEF0;\n    t['alefmaksurainitialarabic'] = 0xFEF3;\n    t['alefmaksuramedialarabic'] = 0xFEF4;\n    t['alefpatahhebrew'] = 0xFB2E;\n    t['alefqamatshebrew'] = 0xFB2F;\n    t['aleph'] = 0x2135;\n    t['allequal'] = 0x224C;\n    t['alpha'] = 0x03B1;\n    t['alphatonos'] = 0x03AC;\n    t['amacron'] = 0x0101;\n    t['amonospace'] = 0xFF41;\n    t['ampersand'] = 0x0026;\n    t['ampersandmonospace'] = 0xFF06;\n    t['ampersandsmall'] = 0xF726;\n    t['amsquare'] = 0x33C2;\n    t['anbopomofo'] = 0x3122;\n    t['angbopomofo'] = 0x3124;\n    t['angbracketleft'] = 0x3008;\n    t['angbracketright'] = 0x3009;\n    t['angkhankhuthai'] = 0x0E5A;\n    t['angle'] = 0x2220;\n    t['anglebracketleft'] = 0x3008;\n    t['anglebracketleftvertical'] = 0xFE3F;\n    t['anglebracketright'] = 0x3009;\n    t['anglebracketrightvertical'] = 0xFE40;\n    t['angleleft'] = 0x2329;\n    t['angleright'] = 0x232A;\n    t['angstrom'] = 0x212B;\n    t['anoteleia'] = 0x0387;\n    t['anudattadeva'] = 0x0952;\n    t['anusvarabengali'] = 0x0982;\n    t['anusvaradeva'] = 0x0902;\n    t['anusvaragujarati'] = 0x0A82;\n    t['aogonek'] = 0x0105;\n    t['apaatosquare'] = 0x3300;\n    t['aparen'] = 0x249C;\n    t['apostrophearmenian'] = 0x055A;\n    t['apostrophemod'] = 0x02BC;\n    t['apple'] = 0xF8FF;\n    t['approaches'] = 0x2250;\n    t['approxequal'] = 0x2248;\n    t['approxequalorimage'] = 0x2252;\n    t['approximatelyequal'] = 0x2245;\n    t['araeaekorean'] = 0x318E;\n    t['araeakorean'] = 0x318D;\n    t['arc'] = 0x2312;\n    t['arighthalfring'] = 0x1E9A;\n    t['aring'] = 0x00E5;\n    t['aringacute'] = 0x01FB;\n    t['aringbelow'] = 0x1E01;\n    t['arrowboth'] = 0x2194;\n    t['arrowdashdown'] = 0x21E3;\n    t['arrowdashleft'] = 0x21E0;\n    t['arrowdashright'] = 0x21E2;\n    t['arrowdashup'] = 0x21E1;\n    t['arrowdblboth'] = 0x21D4;\n    t['arrowdbldown'] = 0x21D3;\n    t['arrowdblleft'] = 0x21D0;\n    t['arrowdblright'] = 0x21D2;\n    t['arrowdblup'] = 0x21D1;\n    t['arrowdown'] = 0x2193;\n    t['arrowdownleft'] = 0x2199;\n    t['arrowdownright'] = 0x2198;\n    t['arrowdownwhite'] = 0x21E9;\n    t['arrowheaddownmod'] = 0x02C5;\n    t['arrowheadleftmod'] = 0x02C2;\n    t['arrowheadrightmod'] = 0x02C3;\n    t['arrowheadupmod'] = 0x02C4;\n    t['arrowhorizex'] = 0xF8E7;\n    t['arrowleft'] = 0x2190;\n    t['arrowleftdbl'] = 0x21D0;\n    t['arrowleftdblstroke'] = 0x21CD;\n    t['arrowleftoverright'] = 0x21C6;\n    t['arrowleftwhite'] = 0x21E6;\n    t['arrowright'] = 0x2192;\n    t['arrowrightdblstroke'] = 0x21CF;\n    t['arrowrightheavy'] = 0x279E;\n    t['arrowrightoverleft'] = 0x21C4;\n    t['arrowrightwhite'] = 0x21E8;\n    t['arrowtableft'] = 0x21E4;\n    t['arrowtabright'] = 0x21E5;\n    t['arrowup'] = 0x2191;\n    t['arrowupdn'] = 0x2195;\n    t['arrowupdnbse'] = 0x21A8;\n    t['arrowupdownbase'] = 0x21A8;\n    t['arrowupleft'] = 0x2196;\n    t['arrowupleftofdown'] = 0x21C5;\n    t['arrowupright'] = 0x2197;\n    t['arrowupwhite'] = 0x21E7;\n    t['arrowvertex'] = 0xF8E6;\n    t['asciicircum'] = 0x005E;\n    t['asciicircummonospace'] = 0xFF3E;\n    t['asciitilde'] = 0x007E;\n    t['asciitildemonospace'] = 0xFF5E;\n    t['ascript'] = 0x0251;\n    t['ascriptturned'] = 0x0252;\n    t['asmallhiragana'] = 0x3041;\n    t['asmallkatakana'] = 0x30A1;\n    t['asmallkatakanahalfwidth'] = 0xFF67;\n    t['asterisk'] = 0x002A;\n    t['asteriskaltonearabic'] = 0x066D;\n    t['asteriskarabic'] = 0x066D;\n    t['asteriskmath'] = 0x2217;\n    t['asteriskmonospace'] = 0xFF0A;\n    t['asterisksmall'] = 0xFE61;\n    t['asterism'] = 0x2042;\n    t['asuperior'] = 0xF6E9;\n    t['asymptoticallyequal'] = 0x2243;\n    t['at'] = 0x0040;\n    t['atilde'] = 0x00E3;\n    t['atmonospace'] = 0xFF20;\n    t['atsmall'] = 0xFE6B;\n    t['aturned'] = 0x0250;\n    t['aubengali'] = 0x0994;\n    t['aubopomofo'] = 0x3120;\n    t['audeva'] = 0x0914;\n    t['augujarati'] = 0x0A94;\n    t['augurmukhi'] = 0x0A14;\n    t['aulengthmarkbengali'] = 0x09D7;\n    t['aumatragurmukhi'] = 0x0A4C;\n    t['auvowelsignbengali'] = 0x09CC;\n    t['auvowelsigndeva'] = 0x094C;\n    t['auvowelsigngujarati'] = 0x0ACC;\n    t['avagrahadeva'] = 0x093D;\n    t['aybarmenian'] = 0x0561;\n    t['ayin'] = 0x05E2;\n    t['ayinaltonehebrew'] = 0xFB20;\n    t['ayinhebrew'] = 0x05E2;\n    t['b'] = 0x0062;\n    t['babengali'] = 0x09AC;\n    t['backslash'] = 0x005C;\n    t['backslashmonospace'] = 0xFF3C;\n    t['badeva'] = 0x092C;\n    t['bagujarati'] = 0x0AAC;\n    t['bagurmukhi'] = 0x0A2C;\n    t['bahiragana'] = 0x3070;\n    t['bahtthai'] = 0x0E3F;\n    t['bakatakana'] = 0x30D0;\n    t['bar'] = 0x007C;\n    t['barmonospace'] = 0xFF5C;\n    t['bbopomofo'] = 0x3105;\n    t['bcircle'] = 0x24D1;\n    t['bdotaccent'] = 0x1E03;\n    t['bdotbelow'] = 0x1E05;\n    t['beamedsixteenthnotes'] = 0x266C;\n    t['because'] = 0x2235;\n    t['becyrillic'] = 0x0431;\n    t['beharabic'] = 0x0628;\n    t['behfinalarabic'] = 0xFE90;\n    t['behinitialarabic'] = 0xFE91;\n    t['behiragana'] = 0x3079;\n    t['behmedialarabic'] = 0xFE92;\n    t['behmeeminitialarabic'] = 0xFC9F;\n    t['behmeemisolatedarabic'] = 0xFC08;\n    t['behnoonfinalarabic'] = 0xFC6D;\n    t['bekatakana'] = 0x30D9;\n    t['benarmenian'] = 0x0562;\n    t['bet'] = 0x05D1;\n    t['beta'] = 0x03B2;\n    t['betasymbolgreek'] = 0x03D0;\n    t['betdagesh'] = 0xFB31;\n    t['betdageshhebrew'] = 0xFB31;\n    t['bethebrew'] = 0x05D1;\n    t['betrafehebrew'] = 0xFB4C;\n    t['bhabengali'] = 0x09AD;\n    t['bhadeva'] = 0x092D;\n    t['bhagujarati'] = 0x0AAD;\n    t['bhagurmukhi'] = 0x0A2D;\n    t['bhook'] = 0x0253;\n    t['bihiragana'] = 0x3073;\n    t['bikatakana'] = 0x30D3;\n    t['bilabialclick'] = 0x0298;\n    t['bindigurmukhi'] = 0x0A02;\n    t['birusquare'] = 0x3331;\n    t['blackcircle'] = 0x25CF;\n    t['blackdiamond'] = 0x25C6;\n    t['blackdownpointingtriangle'] = 0x25BC;\n    t['blackleftpointingpointer'] = 0x25C4;\n    t['blackleftpointingtriangle'] = 0x25C0;\n    t['blacklenticularbracketleft'] = 0x3010;\n    t['blacklenticularbracketleftvertical'] = 0xFE3B;\n    t['blacklenticularbracketright'] = 0x3011;\n    t['blacklenticularbracketrightvertical'] = 0xFE3C;\n    t['blacklowerlefttriangle'] = 0x25E3;\n    t['blacklowerrighttriangle'] = 0x25E2;\n    t['blackrectangle'] = 0x25AC;\n    t['blackrightpointingpointer'] = 0x25BA;\n    t['blackrightpointingtriangle'] = 0x25B6;\n    t['blacksmallsquare'] = 0x25AA;\n    t['blacksmilingface'] = 0x263B;\n    t['blacksquare'] = 0x25A0;\n    t['blackstar'] = 0x2605;\n    t['blackupperlefttriangle'] = 0x25E4;\n    t['blackupperrighttriangle'] = 0x25E5;\n    t['blackuppointingsmalltriangle'] = 0x25B4;\n    t['blackuppointingtriangle'] = 0x25B2;\n    t['blank'] = 0x2423;\n    t['blinebelow'] = 0x1E07;\n    t['block'] = 0x2588;\n    t['bmonospace'] = 0xFF42;\n    t['bobaimaithai'] = 0x0E1A;\n    t['bohiragana'] = 0x307C;\n    t['bokatakana'] = 0x30DC;\n    t['bparen'] = 0x249D;\n    t['bqsquare'] = 0x33C3;\n    t['braceex'] = 0xF8F4;\n    t['braceleft'] = 0x007B;\n    t['braceleftbt'] = 0xF8F3;\n    t['braceleftmid'] = 0xF8F2;\n    t['braceleftmonospace'] = 0xFF5B;\n    t['braceleftsmall'] = 0xFE5B;\n    t['bracelefttp'] = 0xF8F1;\n    t['braceleftvertical'] = 0xFE37;\n    t['braceright'] = 0x007D;\n    t['bracerightbt'] = 0xF8FE;\n    t['bracerightmid'] = 0xF8FD;\n    t['bracerightmonospace'] = 0xFF5D;\n    t['bracerightsmall'] = 0xFE5C;\n    t['bracerighttp'] = 0xF8FC;\n    t['bracerightvertical'] = 0xFE38;\n    t['bracketleft'] = 0x005B;\n    t['bracketleftbt'] = 0xF8F0;\n    t['bracketleftex'] = 0xF8EF;\n    t['bracketleftmonospace'] = 0xFF3B;\n    t['bracketlefttp'] = 0xF8EE;\n    t['bracketright'] = 0x005D;\n    t['bracketrightbt'] = 0xF8FB;\n    t['bracketrightex'] = 0xF8FA;\n    t['bracketrightmonospace'] = 0xFF3D;\n    t['bracketrighttp'] = 0xF8F9;\n    t['breve'] = 0x02D8;\n    t['brevebelowcmb'] = 0x032E;\n    t['brevecmb'] = 0x0306;\n    t['breveinvertedbelowcmb'] = 0x032F;\n    t['breveinvertedcmb'] = 0x0311;\n    t['breveinverteddoublecmb'] = 0x0361;\n    t['bridgebelowcmb'] = 0x032A;\n    t['bridgeinvertedbelowcmb'] = 0x033A;\n    t['brokenbar'] = 0x00A6;\n    t['bstroke'] = 0x0180;\n    t['bsuperior'] = 0xF6EA;\n    t['btopbar'] = 0x0183;\n    t['buhiragana'] = 0x3076;\n    t['bukatakana'] = 0x30D6;\n    t['bullet'] = 0x2022;\n    t['bulletinverse'] = 0x25D8;\n    t['bulletoperator'] = 0x2219;\n    t['bullseye'] = 0x25CE;\n    t['c'] = 0x0063;\n    t['caarmenian'] = 0x056E;\n    t['cabengali'] = 0x099A;\n    t['cacute'] = 0x0107;\n    t['cadeva'] = 0x091A;\n    t['cagujarati'] = 0x0A9A;\n    t['cagurmukhi'] = 0x0A1A;\n    t['calsquare'] = 0x3388;\n    t['candrabindubengali'] = 0x0981;\n    t['candrabinducmb'] = 0x0310;\n    t['candrabindudeva'] = 0x0901;\n    t['candrabindugujarati'] = 0x0A81;\n    t['capslock'] = 0x21EA;\n    t['careof'] = 0x2105;\n    t['caron'] = 0x02C7;\n    t['caronbelowcmb'] = 0x032C;\n    t['caroncmb'] = 0x030C;\n    t['carriagereturn'] = 0x21B5;\n    t['cbopomofo'] = 0x3118;\n    t['ccaron'] = 0x010D;\n    t['ccedilla'] = 0x00E7;\n    t['ccedillaacute'] = 0x1E09;\n    t['ccircle'] = 0x24D2;\n    t['ccircumflex'] = 0x0109;\n    t['ccurl'] = 0x0255;\n    t['cdot'] = 0x010B;\n    t['cdotaccent'] = 0x010B;\n    t['cdsquare'] = 0x33C5;\n    t['cedilla'] = 0x00B8;\n    t['cedillacmb'] = 0x0327;\n    t['cent'] = 0x00A2;\n    t['centigrade'] = 0x2103;\n    t['centinferior'] = 0xF6DF;\n    t['centmonospace'] = 0xFFE0;\n    t['centoldstyle'] = 0xF7A2;\n    t['centsuperior'] = 0xF6E0;\n    t['chaarmenian'] = 0x0579;\n    t['chabengali'] = 0x099B;\n    t['chadeva'] = 0x091B;\n    t['chagujarati'] = 0x0A9B;\n    t['chagurmukhi'] = 0x0A1B;\n    t['chbopomofo'] = 0x3114;\n    t['cheabkhasiancyrillic'] = 0x04BD;\n    t['checkmark'] = 0x2713;\n    t['checyrillic'] = 0x0447;\n    t['chedescenderabkhasiancyrillic'] = 0x04BF;\n    t['chedescendercyrillic'] = 0x04B7;\n    t['chedieresiscyrillic'] = 0x04F5;\n    t['cheharmenian'] = 0x0573;\n    t['chekhakassiancyrillic'] = 0x04CC;\n    t['cheverticalstrokecyrillic'] = 0x04B9;\n    t['chi'] = 0x03C7;\n    t['chieuchacirclekorean'] = 0x3277;\n    t['chieuchaparenkorean'] = 0x3217;\n    t['chieuchcirclekorean'] = 0x3269;\n    t['chieuchkorean'] = 0x314A;\n    t['chieuchparenkorean'] = 0x3209;\n    t['chochangthai'] = 0x0E0A;\n    t['chochanthai'] = 0x0E08;\n    t['chochingthai'] = 0x0E09;\n    t['chochoethai'] = 0x0E0C;\n    t['chook'] = 0x0188;\n    t['cieucacirclekorean'] = 0x3276;\n    t['cieucaparenkorean'] = 0x3216;\n    t['cieuccirclekorean'] = 0x3268;\n    t['cieuckorean'] = 0x3148;\n    t['cieucparenkorean'] = 0x3208;\n    t['cieucuparenkorean'] = 0x321C;\n    t['circle'] = 0x25CB;\n    t['circlecopyrt'] = 0x00A9;\n    t['circlemultiply'] = 0x2297;\n    t['circleot'] = 0x2299;\n    t['circleplus'] = 0x2295;\n    t['circlepostalmark'] = 0x3036;\n    t['circlewithlefthalfblack'] = 0x25D0;\n    t['circlewithrighthalfblack'] = 0x25D1;\n    t['circumflex'] = 0x02C6;\n    t['circumflexbelowcmb'] = 0x032D;\n    t['circumflexcmb'] = 0x0302;\n    t['clear'] = 0x2327;\n    t['clickalveolar'] = 0x01C2;\n    t['clickdental'] = 0x01C0;\n    t['clicklateral'] = 0x01C1;\n    t['clickretroflex'] = 0x01C3;\n    t['club'] = 0x2663;\n    t['clubsuitblack'] = 0x2663;\n    t['clubsuitwhite'] = 0x2667;\n    t['cmcubedsquare'] = 0x33A4;\n    t['cmonospace'] = 0xFF43;\n    t['cmsquaredsquare'] = 0x33A0;\n    t['coarmenian'] = 0x0581;\n    t['colon'] = 0x003A;\n    t['colonmonetary'] = 0x20A1;\n    t['colonmonospace'] = 0xFF1A;\n    t['colonsign'] = 0x20A1;\n    t['colonsmall'] = 0xFE55;\n    t['colontriangularhalfmod'] = 0x02D1;\n    t['colontriangularmod'] = 0x02D0;\n    t['comma'] = 0x002C;\n    t['commaabovecmb'] = 0x0313;\n    t['commaaboverightcmb'] = 0x0315;\n    t['commaaccent'] = 0xF6C3;\n    t['commaarabic'] = 0x060C;\n    t['commaarmenian'] = 0x055D;\n    t['commainferior'] = 0xF6E1;\n    t['commamonospace'] = 0xFF0C;\n    t['commareversedabovecmb'] = 0x0314;\n    t['commareversedmod'] = 0x02BD;\n    t['commasmall'] = 0xFE50;\n    t['commasuperior'] = 0xF6E2;\n    t['commaturnedabovecmb'] = 0x0312;\n    t['commaturnedmod'] = 0x02BB;\n    t['compass'] = 0x263C;\n    t['congruent'] = 0x2245;\n    t['contourintegral'] = 0x222E;\n    t['control'] = 0x2303;\n    t['controlACK'] = 0x0006;\n    t['controlBEL'] = 0x0007;\n    t['controlBS'] = 0x0008;\n    t['controlCAN'] = 0x0018;\n    t['controlCR'] = 0x000D;\n    t['controlDC1'] = 0x0011;\n    t['controlDC2'] = 0x0012;\n    t['controlDC3'] = 0x0013;\n    t['controlDC4'] = 0x0014;\n    t['controlDEL'] = 0x007F;\n    t['controlDLE'] = 0x0010;\n    t['controlEM'] = 0x0019;\n    t['controlENQ'] = 0x0005;\n    t['controlEOT'] = 0x0004;\n    t['controlESC'] = 0x001B;\n    t['controlETB'] = 0x0017;\n    t['controlETX'] = 0x0003;\n    t['controlFF'] = 0x000C;\n    t['controlFS'] = 0x001C;\n    t['controlGS'] = 0x001D;\n    t['controlHT'] = 0x0009;\n    t['controlLF'] = 0x000A;\n    t['controlNAK'] = 0x0015;\n    t['controlNULL'] = 0x0000;\n    t['controlRS'] = 0x001E;\n    t['controlSI'] = 0x000F;\n    t['controlSO'] = 0x000E;\n    t['controlSOT'] = 0x0002;\n    t['controlSTX'] = 0x0001;\n    t['controlSUB'] = 0x001A;\n    t['controlSYN'] = 0x0016;\n    t['controlUS'] = 0x001F;\n    t['controlVT'] = 0x000B;\n    t['copyright'] = 0x00A9;\n    t['copyrightsans'] = 0xF8E9;\n    t['copyrightserif'] = 0xF6D9;\n    t['cornerbracketleft'] = 0x300C;\n    t['cornerbracketlefthalfwidth'] = 0xFF62;\n    t['cornerbracketleftvertical'] = 0xFE41;\n    t['cornerbracketright'] = 0x300D;\n    t['cornerbracketrighthalfwidth'] = 0xFF63;\n    t['cornerbracketrightvertical'] = 0xFE42;\n    t['corporationsquare'] = 0x337F;\n    t['cosquare'] = 0x33C7;\n    t['coverkgsquare'] = 0x33C6;\n    t['cparen'] = 0x249E;\n    t['cruzeiro'] = 0x20A2;\n    t['cstretched'] = 0x0297;\n    t['curlyand'] = 0x22CF;\n    t['curlyor'] = 0x22CE;\n    t['currency'] = 0x00A4;\n    t['cyrBreve'] = 0xF6D1;\n    t['cyrFlex'] = 0xF6D2;\n    t['cyrbreve'] = 0xF6D4;\n    t['cyrflex'] = 0xF6D5;\n    t['d'] = 0x0064;\n    t['daarmenian'] = 0x0564;\n    t['dabengali'] = 0x09A6;\n    t['dadarabic'] = 0x0636;\n    t['dadeva'] = 0x0926;\n    t['dadfinalarabic'] = 0xFEBE;\n    t['dadinitialarabic'] = 0xFEBF;\n    t['dadmedialarabic'] = 0xFEC0;\n    t['dagesh'] = 0x05BC;\n    t['dageshhebrew'] = 0x05BC;\n    t['dagger'] = 0x2020;\n    t['daggerdbl'] = 0x2021;\n    t['dagujarati'] = 0x0AA6;\n    t['dagurmukhi'] = 0x0A26;\n    t['dahiragana'] = 0x3060;\n    t['dakatakana'] = 0x30C0;\n    t['dalarabic'] = 0x062F;\n    t['dalet'] = 0x05D3;\n    t['daletdagesh'] = 0xFB33;\n    t['daletdageshhebrew'] = 0xFB33;\n    t['dalethebrew'] = 0x05D3;\n    t['dalfinalarabic'] = 0xFEAA;\n    t['dammaarabic'] = 0x064F;\n    t['dammalowarabic'] = 0x064F;\n    t['dammatanaltonearabic'] = 0x064C;\n    t['dammatanarabic'] = 0x064C;\n    t['danda'] = 0x0964;\n    t['dargahebrew'] = 0x05A7;\n    t['dargalefthebrew'] = 0x05A7;\n    t['dasiapneumatacyrilliccmb'] = 0x0485;\n    t['dblGrave'] = 0xF6D3;\n    t['dblanglebracketleft'] = 0x300A;\n    t['dblanglebracketleftvertical'] = 0xFE3D;\n    t['dblanglebracketright'] = 0x300B;\n    t['dblanglebracketrightvertical'] = 0xFE3E;\n    t['dblarchinvertedbelowcmb'] = 0x032B;\n    t['dblarrowleft'] = 0x21D4;\n    t['dblarrowright'] = 0x21D2;\n    t['dbldanda'] = 0x0965;\n    t['dblgrave'] = 0xF6D6;\n    t['dblgravecmb'] = 0x030F;\n    t['dblintegral'] = 0x222C;\n    t['dbllowline'] = 0x2017;\n    t['dbllowlinecmb'] = 0x0333;\n    t['dbloverlinecmb'] = 0x033F;\n    t['dblprimemod'] = 0x02BA;\n    t['dblverticalbar'] = 0x2016;\n    t['dblverticallineabovecmb'] = 0x030E;\n    t['dbopomofo'] = 0x3109;\n    t['dbsquare'] = 0x33C8;\n    t['dcaron'] = 0x010F;\n    t['dcedilla'] = 0x1E11;\n    t['dcircle'] = 0x24D3;\n    t['dcircumflexbelow'] = 0x1E13;\n    t['dcroat'] = 0x0111;\n    t['ddabengali'] = 0x09A1;\n    t['ddadeva'] = 0x0921;\n    t['ddagujarati'] = 0x0AA1;\n    t['ddagurmukhi'] = 0x0A21;\n    t['ddalarabic'] = 0x0688;\n    t['ddalfinalarabic'] = 0xFB89;\n    t['dddhadeva'] = 0x095C;\n    t['ddhabengali'] = 0x09A2;\n    t['ddhadeva'] = 0x0922;\n    t['ddhagujarati'] = 0x0AA2;\n    t['ddhagurmukhi'] = 0x0A22;\n    t['ddotaccent'] = 0x1E0B;\n    t['ddotbelow'] = 0x1E0D;\n    t['decimalseparatorarabic'] = 0x066B;\n    t['decimalseparatorpersian'] = 0x066B;\n    t['decyrillic'] = 0x0434;\n    t['degree'] = 0x00B0;\n    t['dehihebrew'] = 0x05AD;\n    t['dehiragana'] = 0x3067;\n    t['deicoptic'] = 0x03EF;\n    t['dekatakana'] = 0x30C7;\n    t['deleteleft'] = 0x232B;\n    t['deleteright'] = 0x2326;\n    t['delta'] = 0x03B4;\n    t['deltaturned'] = 0x018D;\n    t['denominatorminusonenumeratorbengali'] = 0x09F8;\n    t['dezh'] = 0x02A4;\n    t['dhabengali'] = 0x09A7;\n    t['dhadeva'] = 0x0927;\n    t['dhagujarati'] = 0x0AA7;\n    t['dhagurmukhi'] = 0x0A27;\n    t['dhook'] = 0x0257;\n    t['dialytikatonos'] = 0x0385;\n    t['dialytikatonoscmb'] = 0x0344;\n    t['diamond'] = 0x2666;\n    t['diamondsuitwhite'] = 0x2662;\n    t['dieresis'] = 0x00A8;\n    t['dieresisacute'] = 0xF6D7;\n    t['dieresisbelowcmb'] = 0x0324;\n    t['dieresiscmb'] = 0x0308;\n    t['dieresisgrave'] = 0xF6D8;\n    t['dieresistonos'] = 0x0385;\n    t['dihiragana'] = 0x3062;\n    t['dikatakana'] = 0x30C2;\n    t['dittomark'] = 0x3003;\n    t['divide'] = 0x00F7;\n    t['divides'] = 0x2223;\n    t['divisionslash'] = 0x2215;\n    t['djecyrillic'] = 0x0452;\n    t['dkshade'] = 0x2593;\n    t['dlinebelow'] = 0x1E0F;\n    t['dlsquare'] = 0x3397;\n    t['dmacron'] = 0x0111;\n    t['dmonospace'] = 0xFF44;\n    t['dnblock'] = 0x2584;\n    t['dochadathai'] = 0x0E0E;\n    t['dodekthai'] = 0x0E14;\n    t['dohiragana'] = 0x3069;\n    t['dokatakana'] = 0x30C9;\n    t['dollar'] = 0x0024;\n    t['dollarinferior'] = 0xF6E3;\n    t['dollarmonospace'] = 0xFF04;\n    t['dollaroldstyle'] = 0xF724;\n    t['dollarsmall'] = 0xFE69;\n    t['dollarsuperior'] = 0xF6E4;\n    t['dong'] = 0x20AB;\n    t['dorusquare'] = 0x3326;\n    t['dotaccent'] = 0x02D9;\n    t['dotaccentcmb'] = 0x0307;\n    t['dotbelowcmb'] = 0x0323;\n    t['dotbelowcomb'] = 0x0323;\n    t['dotkatakana'] = 0x30FB;\n    t['dotlessi'] = 0x0131;\n    t['dotlessj'] = 0xF6BE;\n    t['dotlessjstrokehook'] = 0x0284;\n    t['dotmath'] = 0x22C5;\n    t['dottedcircle'] = 0x25CC;\n    t['doubleyodpatah'] = 0xFB1F;\n    t['doubleyodpatahhebrew'] = 0xFB1F;\n    t['downtackbelowcmb'] = 0x031E;\n    t['downtackmod'] = 0x02D5;\n    t['dparen'] = 0x249F;\n    t['dsuperior'] = 0xF6EB;\n    t['dtail'] = 0x0256;\n    t['dtopbar'] = 0x018C;\n    t['duhiragana'] = 0x3065;\n    t['dukatakana'] = 0x30C5;\n    t['dz'] = 0x01F3;\n    t['dzaltone'] = 0x02A3;\n    t['dzcaron'] = 0x01C6;\n    t['dzcurl'] = 0x02A5;\n    t['dzeabkhasiancyrillic'] = 0x04E1;\n    t['dzecyrillic'] = 0x0455;\n    t['dzhecyrillic'] = 0x045F;\n    t['e'] = 0x0065;\n    t['eacute'] = 0x00E9;\n    t['earth'] = 0x2641;\n    t['ebengali'] = 0x098F;\n    t['ebopomofo'] = 0x311C;\n    t['ebreve'] = 0x0115;\n    t['ecandradeva'] = 0x090D;\n    t['ecandragujarati'] = 0x0A8D;\n    t['ecandravowelsigndeva'] = 0x0945;\n    t['ecandravowelsigngujarati'] = 0x0AC5;\n    t['ecaron'] = 0x011B;\n    t['ecedillabreve'] = 0x1E1D;\n    t['echarmenian'] = 0x0565;\n    t['echyiwnarmenian'] = 0x0587;\n    t['ecircle'] = 0x24D4;\n    t['ecircumflex'] = 0x00EA;\n    t['ecircumflexacute'] = 0x1EBF;\n    t['ecircumflexbelow'] = 0x1E19;\n    t['ecircumflexdotbelow'] = 0x1EC7;\n    t['ecircumflexgrave'] = 0x1EC1;\n    t['ecircumflexhookabove'] = 0x1EC3;\n    t['ecircumflextilde'] = 0x1EC5;\n    t['ecyrillic'] = 0x0454;\n    t['edblgrave'] = 0x0205;\n    t['edeva'] = 0x090F;\n    t['edieresis'] = 0x00EB;\n    t['edot'] = 0x0117;\n    t['edotaccent'] = 0x0117;\n    t['edotbelow'] = 0x1EB9;\n    t['eegurmukhi'] = 0x0A0F;\n    t['eematragurmukhi'] = 0x0A47;\n    t['efcyrillic'] = 0x0444;\n    t['egrave'] = 0x00E8;\n    t['egujarati'] = 0x0A8F;\n    t['eharmenian'] = 0x0567;\n    t['ehbopomofo'] = 0x311D;\n    t['ehiragana'] = 0x3048;\n    t['ehookabove'] = 0x1EBB;\n    t['eibopomofo'] = 0x311F;\n    t['eight'] = 0x0038;\n    t['eightarabic'] = 0x0668;\n    t['eightbengali'] = 0x09EE;\n    t['eightcircle'] = 0x2467;\n    t['eightcircleinversesansserif'] = 0x2791;\n    t['eightdeva'] = 0x096E;\n    t['eighteencircle'] = 0x2471;\n    t['eighteenparen'] = 0x2485;\n    t['eighteenperiod'] = 0x2499;\n    t['eightgujarati'] = 0x0AEE;\n    t['eightgurmukhi'] = 0x0A6E;\n    t['eighthackarabic'] = 0x0668;\n    t['eighthangzhou'] = 0x3028;\n    t['eighthnotebeamed'] = 0x266B;\n    t['eightideographicparen'] = 0x3227;\n    t['eightinferior'] = 0x2088;\n    t['eightmonospace'] = 0xFF18;\n    t['eightoldstyle'] = 0xF738;\n    t['eightparen'] = 0x247B;\n    t['eightperiod'] = 0x248F;\n    t['eightpersian'] = 0x06F8;\n    t['eightroman'] = 0x2177;\n    t['eightsuperior'] = 0x2078;\n    t['eightthai'] = 0x0E58;\n    t['einvertedbreve'] = 0x0207;\n    t['eiotifiedcyrillic'] = 0x0465;\n    t['ekatakana'] = 0x30A8;\n    t['ekatakanahalfwidth'] = 0xFF74;\n    t['ekonkargurmukhi'] = 0x0A74;\n    t['ekorean'] = 0x3154;\n    t['elcyrillic'] = 0x043B;\n    t['element'] = 0x2208;\n    t['elevencircle'] = 0x246A;\n    t['elevenparen'] = 0x247E;\n    t['elevenperiod'] = 0x2492;\n    t['elevenroman'] = 0x217A;\n    t['ellipsis'] = 0x2026;\n    t['ellipsisvertical'] = 0x22EE;\n    t['emacron'] = 0x0113;\n    t['emacronacute'] = 0x1E17;\n    t['emacrongrave'] = 0x1E15;\n    t['emcyrillic'] = 0x043C;\n    t['emdash'] = 0x2014;\n    t['emdashvertical'] = 0xFE31;\n    t['emonospace'] = 0xFF45;\n    t['emphasismarkarmenian'] = 0x055B;\n    t['emptyset'] = 0x2205;\n    t['enbopomofo'] = 0x3123;\n    t['encyrillic'] = 0x043D;\n    t['endash'] = 0x2013;\n    t['endashvertical'] = 0xFE32;\n    t['endescendercyrillic'] = 0x04A3;\n    t['eng'] = 0x014B;\n    t['engbopomofo'] = 0x3125;\n    t['enghecyrillic'] = 0x04A5;\n    t['enhookcyrillic'] = 0x04C8;\n    t['enspace'] = 0x2002;\n    t['eogonek'] = 0x0119;\n    t['eokorean'] = 0x3153;\n    t['eopen'] = 0x025B;\n    t['eopenclosed'] = 0x029A;\n    t['eopenreversed'] = 0x025C;\n    t['eopenreversedclosed'] = 0x025E;\n    t['eopenreversedhook'] = 0x025D;\n    t['eparen'] = 0x24A0;\n    t['epsilon'] = 0x03B5;\n    t['epsilontonos'] = 0x03AD;\n    t['equal'] = 0x003D;\n    t['equalmonospace'] = 0xFF1D;\n    t['equalsmall'] = 0xFE66;\n    t['equalsuperior'] = 0x207C;\n    t['equivalence'] = 0x2261;\n    t['erbopomofo'] = 0x3126;\n    t['ercyrillic'] = 0x0440;\n    t['ereversed'] = 0x0258;\n    t['ereversedcyrillic'] = 0x044D;\n    t['escyrillic'] = 0x0441;\n    t['esdescendercyrillic'] = 0x04AB;\n    t['esh'] = 0x0283;\n    t['eshcurl'] = 0x0286;\n    t['eshortdeva'] = 0x090E;\n    t['eshortvowelsigndeva'] = 0x0946;\n    t['eshreversedloop'] = 0x01AA;\n    t['eshsquatreversed'] = 0x0285;\n    t['esmallhiragana'] = 0x3047;\n    t['esmallkatakana'] = 0x30A7;\n    t['esmallkatakanahalfwidth'] = 0xFF6A;\n    t['estimated'] = 0x212E;\n    t['esuperior'] = 0xF6EC;\n    t['eta'] = 0x03B7;\n    t['etarmenian'] = 0x0568;\n    t['etatonos'] = 0x03AE;\n    t['eth'] = 0x00F0;\n    t['etilde'] = 0x1EBD;\n    t['etildebelow'] = 0x1E1B;\n    t['etnahtafoukhhebrew'] = 0x0591;\n    t['etnahtafoukhlefthebrew'] = 0x0591;\n    t['etnahtahebrew'] = 0x0591;\n    t['etnahtalefthebrew'] = 0x0591;\n    t['eturned'] = 0x01DD;\n    t['eukorean'] = 0x3161;\n    t['euro'] = 0x20AC;\n    t['evowelsignbengali'] = 0x09C7;\n    t['evowelsigndeva'] = 0x0947;\n    t['evowelsigngujarati'] = 0x0AC7;\n    t['exclam'] = 0x0021;\n    t['exclamarmenian'] = 0x055C;\n    t['exclamdbl'] = 0x203C;\n    t['exclamdown'] = 0x00A1;\n    t['exclamdownsmall'] = 0xF7A1;\n    t['exclammonospace'] = 0xFF01;\n    t['exclamsmall'] = 0xF721;\n    t['existential'] = 0x2203;\n    t['ezh'] = 0x0292;\n    t['ezhcaron'] = 0x01EF;\n    t['ezhcurl'] = 0x0293;\n    t['ezhreversed'] = 0x01B9;\n    t['ezhtail'] = 0x01BA;\n    t['f'] = 0x0066;\n    t['fadeva'] = 0x095E;\n    t['fagurmukhi'] = 0x0A5E;\n    t['fahrenheit'] = 0x2109;\n    t['fathaarabic'] = 0x064E;\n    t['fathalowarabic'] = 0x064E;\n    t['fathatanarabic'] = 0x064B;\n    t['fbopomofo'] = 0x3108;\n    t['fcircle'] = 0x24D5;\n    t['fdotaccent'] = 0x1E1F;\n    t['feharabic'] = 0x0641;\n    t['feharmenian'] = 0x0586;\n    t['fehfinalarabic'] = 0xFED2;\n    t['fehinitialarabic'] = 0xFED3;\n    t['fehmedialarabic'] = 0xFED4;\n    t['feicoptic'] = 0x03E5;\n    t['female'] = 0x2640;\n    t['ff'] = 0xFB00;\n    t['ffi'] = 0xFB03;\n    t['ffl'] = 0xFB04;\n    t['fi'] = 0xFB01;\n    t['fifteencircle'] = 0x246E;\n    t['fifteenparen'] = 0x2482;\n    t['fifteenperiod'] = 0x2496;\n    t['figuredash'] = 0x2012;\n    t['filledbox'] = 0x25A0;\n    t['filledrect'] = 0x25AC;\n    t['finalkaf'] = 0x05DA;\n    t['finalkafdagesh'] = 0xFB3A;\n    t['finalkafdageshhebrew'] = 0xFB3A;\n    t['finalkafhebrew'] = 0x05DA;\n    t['finalmem'] = 0x05DD;\n    t['finalmemhebrew'] = 0x05DD;\n    t['finalnun'] = 0x05DF;\n    t['finalnunhebrew'] = 0x05DF;\n    t['finalpe'] = 0x05E3;\n    t['finalpehebrew'] = 0x05E3;\n    t['finaltsadi'] = 0x05E5;\n    t['finaltsadihebrew'] = 0x05E5;\n    t['firsttonechinese'] = 0x02C9;\n    t['fisheye'] = 0x25C9;\n    t['fitacyrillic'] = 0x0473;\n    t['five'] = 0x0035;\n    t['fivearabic'] = 0x0665;\n    t['fivebengali'] = 0x09EB;\n    t['fivecircle'] = 0x2464;\n    t['fivecircleinversesansserif'] = 0x278E;\n    t['fivedeva'] = 0x096B;\n    t['fiveeighths'] = 0x215D;\n    t['fivegujarati'] = 0x0AEB;\n    t['fivegurmukhi'] = 0x0A6B;\n    t['fivehackarabic'] = 0x0665;\n    t['fivehangzhou'] = 0x3025;\n    t['fiveideographicparen'] = 0x3224;\n    t['fiveinferior'] = 0x2085;\n    t['fivemonospace'] = 0xFF15;\n    t['fiveoldstyle'] = 0xF735;\n    t['fiveparen'] = 0x2478;\n    t['fiveperiod'] = 0x248C;\n    t['fivepersian'] = 0x06F5;\n    t['fiveroman'] = 0x2174;\n    t['fivesuperior'] = 0x2075;\n    t['fivethai'] = 0x0E55;\n    t['fl'] = 0xFB02;\n    t['florin'] = 0x0192;\n    t['fmonospace'] = 0xFF46;\n    t['fmsquare'] = 0x3399;\n    t['fofanthai'] = 0x0E1F;\n    t['fofathai'] = 0x0E1D;\n    t['fongmanthai'] = 0x0E4F;\n    t['forall'] = 0x2200;\n    t['four'] = 0x0034;\n    t['fourarabic'] = 0x0664;\n    t['fourbengali'] = 0x09EA;\n    t['fourcircle'] = 0x2463;\n    t['fourcircleinversesansserif'] = 0x278D;\n    t['fourdeva'] = 0x096A;\n    t['fourgujarati'] = 0x0AEA;\n    t['fourgurmukhi'] = 0x0A6A;\n    t['fourhackarabic'] = 0x0664;\n    t['fourhangzhou'] = 0x3024;\n    t['fourideographicparen'] = 0x3223;\n    t['fourinferior'] = 0x2084;\n    t['fourmonospace'] = 0xFF14;\n    t['fournumeratorbengali'] = 0x09F7;\n    t['fouroldstyle'] = 0xF734;\n    t['fourparen'] = 0x2477;\n    t['fourperiod'] = 0x248B;\n    t['fourpersian'] = 0x06F4;\n    t['fourroman'] = 0x2173;\n    t['foursuperior'] = 0x2074;\n    t['fourteencircle'] = 0x246D;\n    t['fourteenparen'] = 0x2481;\n    t['fourteenperiod'] = 0x2495;\n    t['fourthai'] = 0x0E54;\n    t['fourthtonechinese'] = 0x02CB;\n    t['fparen'] = 0x24A1;\n    t['fraction'] = 0x2044;\n    t['franc'] = 0x20A3;\n    t['g'] = 0x0067;\n    t['gabengali'] = 0x0997;\n    t['gacute'] = 0x01F5;\n    t['gadeva'] = 0x0917;\n    t['gafarabic'] = 0x06AF;\n    t['gaffinalarabic'] = 0xFB93;\n    t['gafinitialarabic'] = 0xFB94;\n    t['gafmedialarabic'] = 0xFB95;\n    t['gagujarati'] = 0x0A97;\n    t['gagurmukhi'] = 0x0A17;\n    t['gahiragana'] = 0x304C;\n    t['gakatakana'] = 0x30AC;\n    t['gamma'] = 0x03B3;\n    t['gammalatinsmall'] = 0x0263;\n    t['gammasuperior'] = 0x02E0;\n    t['gangiacoptic'] = 0x03EB;\n    t['gbopomofo'] = 0x310D;\n    t['gbreve'] = 0x011F;\n    t['gcaron'] = 0x01E7;\n    t['gcedilla'] = 0x0123;\n    t['gcircle'] = 0x24D6;\n    t['gcircumflex'] = 0x011D;\n    t['gcommaaccent'] = 0x0123;\n    t['gdot'] = 0x0121;\n    t['gdotaccent'] = 0x0121;\n    t['gecyrillic'] = 0x0433;\n    t['gehiragana'] = 0x3052;\n    t['gekatakana'] = 0x30B2;\n    t['geometricallyequal'] = 0x2251;\n    t['gereshaccenthebrew'] = 0x059C;\n    t['gereshhebrew'] = 0x05F3;\n    t['gereshmuqdamhebrew'] = 0x059D;\n    t['germandbls'] = 0x00DF;\n    t['gershayimaccenthebrew'] = 0x059E;\n    t['gershayimhebrew'] = 0x05F4;\n    t['getamark'] = 0x3013;\n    t['ghabengali'] = 0x0998;\n    t['ghadarmenian'] = 0x0572;\n    t['ghadeva'] = 0x0918;\n    t['ghagujarati'] = 0x0A98;\n    t['ghagurmukhi'] = 0x0A18;\n    t['ghainarabic'] = 0x063A;\n    t['ghainfinalarabic'] = 0xFECE;\n    t['ghaininitialarabic'] = 0xFECF;\n    t['ghainmedialarabic'] = 0xFED0;\n    t['ghemiddlehookcyrillic'] = 0x0495;\n    t['ghestrokecyrillic'] = 0x0493;\n    t['gheupturncyrillic'] = 0x0491;\n    t['ghhadeva'] = 0x095A;\n    t['ghhagurmukhi'] = 0x0A5A;\n    t['ghook'] = 0x0260;\n    t['ghzsquare'] = 0x3393;\n    t['gihiragana'] = 0x304E;\n    t['gikatakana'] = 0x30AE;\n    t['gimarmenian'] = 0x0563;\n    t['gimel'] = 0x05D2;\n    t['gimeldagesh'] = 0xFB32;\n    t['gimeldageshhebrew'] = 0xFB32;\n    t['gimelhebrew'] = 0x05D2;\n    t['gjecyrillic'] = 0x0453;\n    t['glottalinvertedstroke'] = 0x01BE;\n    t['glottalstop'] = 0x0294;\n    t['glottalstopinverted'] = 0x0296;\n    t['glottalstopmod'] = 0x02C0;\n    t['glottalstopreversed'] = 0x0295;\n    t['glottalstopreversedmod'] = 0x02C1;\n    t['glottalstopreversedsuperior'] = 0x02E4;\n    t['glottalstopstroke'] = 0x02A1;\n    t['glottalstopstrokereversed'] = 0x02A2;\n    t['gmacron'] = 0x1E21;\n    t['gmonospace'] = 0xFF47;\n    t['gohiragana'] = 0x3054;\n    t['gokatakana'] = 0x30B4;\n    t['gparen'] = 0x24A2;\n    t['gpasquare'] = 0x33AC;\n    t['gradient'] = 0x2207;\n    t['grave'] = 0x0060;\n    t['gravebelowcmb'] = 0x0316;\n    t['gravecmb'] = 0x0300;\n    t['gravecomb'] = 0x0300;\n    t['gravedeva'] = 0x0953;\n    t['gravelowmod'] = 0x02CE;\n    t['gravemonospace'] = 0xFF40;\n    t['gravetonecmb'] = 0x0340;\n    t['greater'] = 0x003E;\n    t['greaterequal'] = 0x2265;\n    t['greaterequalorless'] = 0x22DB;\n    t['greatermonospace'] = 0xFF1E;\n    t['greaterorequivalent'] = 0x2273;\n    t['greaterorless'] = 0x2277;\n    t['greateroverequal'] = 0x2267;\n    t['greatersmall'] = 0xFE65;\n    t['gscript'] = 0x0261;\n    t['gstroke'] = 0x01E5;\n    t['guhiragana'] = 0x3050;\n    t['guillemotleft'] = 0x00AB;\n    t['guillemotright'] = 0x00BB;\n    t['guilsinglleft'] = 0x2039;\n    t['guilsinglright'] = 0x203A;\n    t['gukatakana'] = 0x30B0;\n    t['guramusquare'] = 0x3318;\n    t['gysquare'] = 0x33C9;\n    t['h'] = 0x0068;\n    t['haabkhasiancyrillic'] = 0x04A9;\n    t['haaltonearabic'] = 0x06C1;\n    t['habengali'] = 0x09B9;\n    t['hadescendercyrillic'] = 0x04B3;\n    t['hadeva'] = 0x0939;\n    t['hagujarati'] = 0x0AB9;\n    t['hagurmukhi'] = 0x0A39;\n    t['haharabic'] = 0x062D;\n    t['hahfinalarabic'] = 0xFEA2;\n    t['hahinitialarabic'] = 0xFEA3;\n    t['hahiragana'] = 0x306F;\n    t['hahmedialarabic'] = 0xFEA4;\n    t['haitusquare'] = 0x332A;\n    t['hakatakana'] = 0x30CF;\n    t['hakatakanahalfwidth'] = 0xFF8A;\n    t['halantgurmukhi'] = 0x0A4D;\n    t['hamzaarabic'] = 0x0621;\n    t['hamzalowarabic'] = 0x0621;\n    t['hangulfiller'] = 0x3164;\n    t['hardsigncyrillic'] = 0x044A;\n    t['harpoonleftbarbup'] = 0x21BC;\n    t['harpoonrightbarbup'] = 0x21C0;\n    t['hasquare'] = 0x33CA;\n    t['hatafpatah'] = 0x05B2;\n    t['hatafpatah16'] = 0x05B2;\n    t['hatafpatah23'] = 0x05B2;\n    t['hatafpatah2f'] = 0x05B2;\n    t['hatafpatahhebrew'] = 0x05B2;\n    t['hatafpatahnarrowhebrew'] = 0x05B2;\n    t['hatafpatahquarterhebrew'] = 0x05B2;\n    t['hatafpatahwidehebrew'] = 0x05B2;\n    t['hatafqamats'] = 0x05B3;\n    t['hatafqamats1b'] = 0x05B3;\n    t['hatafqamats28'] = 0x05B3;\n    t['hatafqamats34'] = 0x05B3;\n    t['hatafqamatshebrew'] = 0x05B3;\n    t['hatafqamatsnarrowhebrew'] = 0x05B3;\n    t['hatafqamatsquarterhebrew'] = 0x05B3;\n    t['hatafqamatswidehebrew'] = 0x05B3;\n    t['hatafsegol'] = 0x05B1;\n    t['hatafsegol17'] = 0x05B1;\n    t['hatafsegol24'] = 0x05B1;\n    t['hatafsegol30'] = 0x05B1;\n    t['hatafsegolhebrew'] = 0x05B1;\n    t['hatafsegolnarrowhebrew'] = 0x05B1;\n    t['hatafsegolquarterhebrew'] = 0x05B1;\n    t['hatafsegolwidehebrew'] = 0x05B1;\n    t['hbar'] = 0x0127;\n    t['hbopomofo'] = 0x310F;\n    t['hbrevebelow'] = 0x1E2B;\n    t['hcedilla'] = 0x1E29;\n    t['hcircle'] = 0x24D7;\n    t['hcircumflex'] = 0x0125;\n    t['hdieresis'] = 0x1E27;\n    t['hdotaccent'] = 0x1E23;\n    t['hdotbelow'] = 0x1E25;\n    t['he'] = 0x05D4;\n    t['heart'] = 0x2665;\n    t['heartsuitblack'] = 0x2665;\n    t['heartsuitwhite'] = 0x2661;\n    t['hedagesh'] = 0xFB34;\n    t['hedageshhebrew'] = 0xFB34;\n    t['hehaltonearabic'] = 0x06C1;\n    t['heharabic'] = 0x0647;\n    t['hehebrew'] = 0x05D4;\n    t['hehfinalaltonearabic'] = 0xFBA7;\n    t['hehfinalalttwoarabic'] = 0xFEEA;\n    t['hehfinalarabic'] = 0xFEEA;\n    t['hehhamzaabovefinalarabic'] = 0xFBA5;\n    t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\n    t['hehinitialaltonearabic'] = 0xFBA8;\n    t['hehinitialarabic'] = 0xFEEB;\n    t['hehiragana'] = 0x3078;\n    t['hehmedialaltonearabic'] = 0xFBA9;\n    t['hehmedialarabic'] = 0xFEEC;\n    t['heiseierasquare'] = 0x337B;\n    t['hekatakana'] = 0x30D8;\n    t['hekatakanahalfwidth'] = 0xFF8D;\n    t['hekutaarusquare'] = 0x3336;\n    t['henghook'] = 0x0267;\n    t['herutusquare'] = 0x3339;\n    t['het'] = 0x05D7;\n    t['hethebrew'] = 0x05D7;\n    t['hhook'] = 0x0266;\n    t['hhooksuperior'] = 0x02B1;\n    t['hieuhacirclekorean'] = 0x327B;\n    t['hieuhaparenkorean'] = 0x321B;\n    t['hieuhcirclekorean'] = 0x326D;\n    t['hieuhkorean'] = 0x314E;\n    t['hieuhparenkorean'] = 0x320D;\n    t['hihiragana'] = 0x3072;\n    t['hikatakana'] = 0x30D2;\n    t['hikatakanahalfwidth'] = 0xFF8B;\n    t['hiriq'] = 0x05B4;\n    t['hiriq14'] = 0x05B4;\n    t['hiriq21'] = 0x05B4;\n    t['hiriq2d'] = 0x05B4;\n    t['hiriqhebrew'] = 0x05B4;\n    t['hiriqnarrowhebrew'] = 0x05B4;\n    t['hiriqquarterhebrew'] = 0x05B4;\n    t['hiriqwidehebrew'] = 0x05B4;\n    t['hlinebelow'] = 0x1E96;\n    t['hmonospace'] = 0xFF48;\n    t['hoarmenian'] = 0x0570;\n    t['hohipthai'] = 0x0E2B;\n    t['hohiragana'] = 0x307B;\n    t['hokatakana'] = 0x30DB;\n    t['hokatakanahalfwidth'] = 0xFF8E;\n    t['holam'] = 0x05B9;\n    t['holam19'] = 0x05B9;\n    t['holam26'] = 0x05B9;\n    t['holam32'] = 0x05B9;\n    t['holamhebrew'] = 0x05B9;\n    t['holamnarrowhebrew'] = 0x05B9;\n    t['holamquarterhebrew'] = 0x05B9;\n    t['holamwidehebrew'] = 0x05B9;\n    t['honokhukthai'] = 0x0E2E;\n    t['hookabovecomb'] = 0x0309;\n    t['hookcmb'] = 0x0309;\n    t['hookpalatalizedbelowcmb'] = 0x0321;\n    t['hookretroflexbelowcmb'] = 0x0322;\n    t['hoonsquare'] = 0x3342;\n    t['horicoptic'] = 0x03E9;\n    t['horizontalbar'] = 0x2015;\n    t['horncmb'] = 0x031B;\n    t['hotsprings'] = 0x2668;\n    t['house'] = 0x2302;\n    t['hparen'] = 0x24A3;\n    t['hsuperior'] = 0x02B0;\n    t['hturned'] = 0x0265;\n    t['huhiragana'] = 0x3075;\n    t['huiitosquare'] = 0x3333;\n    t['hukatakana'] = 0x30D5;\n    t['hukatakanahalfwidth'] = 0xFF8C;\n    t['hungarumlaut'] = 0x02DD;\n    t['hungarumlautcmb'] = 0x030B;\n    t['hv'] = 0x0195;\n    t['hyphen'] = 0x002D;\n    t['hypheninferior'] = 0xF6E5;\n    t['hyphenmonospace'] = 0xFF0D;\n    t['hyphensmall'] = 0xFE63;\n    t['hyphensuperior'] = 0xF6E6;\n    t['hyphentwo'] = 0x2010;\n    t['i'] = 0x0069;\n    t['iacute'] = 0x00ED;\n    t['iacyrillic'] = 0x044F;\n    t['ibengali'] = 0x0987;\n    t['ibopomofo'] = 0x3127;\n    t['ibreve'] = 0x012D;\n    t['icaron'] = 0x01D0;\n    t['icircle'] = 0x24D8;\n    t['icircumflex'] = 0x00EE;\n    t['icyrillic'] = 0x0456;\n    t['idblgrave'] = 0x0209;\n    t['ideographearthcircle'] = 0x328F;\n    t['ideographfirecircle'] = 0x328B;\n    t['ideographicallianceparen'] = 0x323F;\n    t['ideographiccallparen'] = 0x323A;\n    t['ideographiccentrecircle'] = 0x32A5;\n    t['ideographicclose'] = 0x3006;\n    t['ideographiccomma'] = 0x3001;\n    t['ideographiccommaleft'] = 0xFF64;\n    t['ideographiccongratulationparen'] = 0x3237;\n    t['ideographiccorrectcircle'] = 0x32A3;\n    t['ideographicearthparen'] = 0x322F;\n    t['ideographicenterpriseparen'] = 0x323D;\n    t['ideographicexcellentcircle'] = 0x329D;\n    t['ideographicfestivalparen'] = 0x3240;\n    t['ideographicfinancialcircle'] = 0x3296;\n    t['ideographicfinancialparen'] = 0x3236;\n    t['ideographicfireparen'] = 0x322B;\n    t['ideographichaveparen'] = 0x3232;\n    t['ideographichighcircle'] = 0x32A4;\n    t['ideographiciterationmark'] = 0x3005;\n    t['ideographiclaborcircle'] = 0x3298;\n    t['ideographiclaborparen'] = 0x3238;\n    t['ideographicleftcircle'] = 0x32A7;\n    t['ideographiclowcircle'] = 0x32A6;\n    t['ideographicmedicinecircle'] = 0x32A9;\n    t['ideographicmetalparen'] = 0x322E;\n    t['ideographicmoonparen'] = 0x322A;\n    t['ideographicnameparen'] = 0x3234;\n    t['ideographicperiod'] = 0x3002;\n    t['ideographicprintcircle'] = 0x329E;\n    t['ideographicreachparen'] = 0x3243;\n    t['ideographicrepresentparen'] = 0x3239;\n    t['ideographicresourceparen'] = 0x323E;\n    t['ideographicrightcircle'] = 0x32A8;\n    t['ideographicsecretcircle'] = 0x3299;\n    t['ideographicselfparen'] = 0x3242;\n    t['ideographicsocietyparen'] = 0x3233;\n    t['ideographicspace'] = 0x3000;\n    t['ideographicspecialparen'] = 0x3235;\n    t['ideographicstockparen'] = 0x3231;\n    t['ideographicstudyparen'] = 0x323B;\n    t['ideographicsunparen'] = 0x3230;\n    t['ideographicsuperviseparen'] = 0x323C;\n    t['ideographicwaterparen'] = 0x322C;\n    t['ideographicwoodparen'] = 0x322D;\n    t['ideographiczero'] = 0x3007;\n    t['ideographmetalcircle'] = 0x328E;\n    t['ideographmooncircle'] = 0x328A;\n    t['ideographnamecircle'] = 0x3294;\n    t['ideographsuncircle'] = 0x3290;\n    t['ideographwatercircle'] = 0x328C;\n    t['ideographwoodcircle'] = 0x328D;\n    t['ideva'] = 0x0907;\n    t['idieresis'] = 0x00EF;\n    t['idieresisacute'] = 0x1E2F;\n    t['idieresiscyrillic'] = 0x04E5;\n    t['idotbelow'] = 0x1ECB;\n    t['iebrevecyrillic'] = 0x04D7;\n    t['iecyrillic'] = 0x0435;\n    t['ieungacirclekorean'] = 0x3275;\n    t['ieungaparenkorean'] = 0x3215;\n    t['ieungcirclekorean'] = 0x3267;\n    t['ieungkorean'] = 0x3147;\n    t['ieungparenkorean'] = 0x3207;\n    t['igrave'] = 0x00EC;\n    t['igujarati'] = 0x0A87;\n    t['igurmukhi'] = 0x0A07;\n    t['ihiragana'] = 0x3044;\n    t['ihookabove'] = 0x1EC9;\n    t['iibengali'] = 0x0988;\n    t['iicyrillic'] = 0x0438;\n    t['iideva'] = 0x0908;\n    t['iigujarati'] = 0x0A88;\n    t['iigurmukhi'] = 0x0A08;\n    t['iimatragurmukhi'] = 0x0A40;\n    t['iinvertedbreve'] = 0x020B;\n    t['iishortcyrillic'] = 0x0439;\n    t['iivowelsignbengali'] = 0x09C0;\n    t['iivowelsigndeva'] = 0x0940;\n    t['iivowelsigngujarati'] = 0x0AC0;\n    t['ij'] = 0x0133;\n    t['ikatakana'] = 0x30A4;\n    t['ikatakanahalfwidth'] = 0xFF72;\n    t['ikorean'] = 0x3163;\n    t['ilde'] = 0x02DC;\n    t['iluyhebrew'] = 0x05AC;\n    t['imacron'] = 0x012B;\n    t['imacroncyrillic'] = 0x04E3;\n    t['imageorapproximatelyequal'] = 0x2253;\n    t['imatragurmukhi'] = 0x0A3F;\n    t['imonospace'] = 0xFF49;\n    t['increment'] = 0x2206;\n    t['infinity'] = 0x221E;\n    t['iniarmenian'] = 0x056B;\n    t['integral'] = 0x222B;\n    t['integralbottom'] = 0x2321;\n    t['integralbt'] = 0x2321;\n    t['integralex'] = 0xF8F5;\n    t['integraltop'] = 0x2320;\n    t['integraltp'] = 0x2320;\n    t['intersection'] = 0x2229;\n    t['intisquare'] = 0x3305;\n    t['invbullet'] = 0x25D8;\n    t['invcircle'] = 0x25D9;\n    t['invsmileface'] = 0x263B;\n    t['iocyrillic'] = 0x0451;\n    t['iogonek'] = 0x012F;\n    t['iota'] = 0x03B9;\n    t['iotadieresis'] = 0x03CA;\n    t['iotadieresistonos'] = 0x0390;\n    t['iotalatin'] = 0x0269;\n    t['iotatonos'] = 0x03AF;\n    t['iparen'] = 0x24A4;\n    t['irigurmukhi'] = 0x0A72;\n    t['ismallhiragana'] = 0x3043;\n    t['ismallkatakana'] = 0x30A3;\n    t['ismallkatakanahalfwidth'] = 0xFF68;\n    t['issharbengali'] = 0x09FA;\n    t['istroke'] = 0x0268;\n    t['isuperior'] = 0xF6ED;\n    t['iterationhiragana'] = 0x309D;\n    t['iterationkatakana'] = 0x30FD;\n    t['itilde'] = 0x0129;\n    t['itildebelow'] = 0x1E2D;\n    t['iubopomofo'] = 0x3129;\n    t['iucyrillic'] = 0x044E;\n    t['ivowelsignbengali'] = 0x09BF;\n    t['ivowelsigndeva'] = 0x093F;\n    t['ivowelsigngujarati'] = 0x0ABF;\n    t['izhitsacyrillic'] = 0x0475;\n    t['izhitsadblgravecyrillic'] = 0x0477;\n    t['j'] = 0x006A;\n    t['jaarmenian'] = 0x0571;\n    t['jabengali'] = 0x099C;\n    t['jadeva'] = 0x091C;\n    t['jagujarati'] = 0x0A9C;\n    t['jagurmukhi'] = 0x0A1C;\n    t['jbopomofo'] = 0x3110;\n    t['jcaron'] = 0x01F0;\n    t['jcircle'] = 0x24D9;\n    t['jcircumflex'] = 0x0135;\n    t['jcrossedtail'] = 0x029D;\n    t['jdotlessstroke'] = 0x025F;\n    t['jecyrillic'] = 0x0458;\n    t['jeemarabic'] = 0x062C;\n    t['jeemfinalarabic'] = 0xFE9E;\n    t['jeeminitialarabic'] = 0xFE9F;\n    t['jeemmedialarabic'] = 0xFEA0;\n    t['jeharabic'] = 0x0698;\n    t['jehfinalarabic'] = 0xFB8B;\n    t['jhabengali'] = 0x099D;\n    t['jhadeva'] = 0x091D;\n    t['jhagujarati'] = 0x0A9D;\n    t['jhagurmukhi'] = 0x0A1D;\n    t['jheharmenian'] = 0x057B;\n    t['jis'] = 0x3004;\n    t['jmonospace'] = 0xFF4A;\n    t['jparen'] = 0x24A5;\n    t['jsuperior'] = 0x02B2;\n    t['k'] = 0x006B;\n    t['kabashkircyrillic'] = 0x04A1;\n    t['kabengali'] = 0x0995;\n    t['kacute'] = 0x1E31;\n    t['kacyrillic'] = 0x043A;\n    t['kadescendercyrillic'] = 0x049B;\n    t['kadeva'] = 0x0915;\n    t['kaf'] = 0x05DB;\n    t['kafarabic'] = 0x0643;\n    t['kafdagesh'] = 0xFB3B;\n    t['kafdageshhebrew'] = 0xFB3B;\n    t['kaffinalarabic'] = 0xFEDA;\n    t['kafhebrew'] = 0x05DB;\n    t['kafinitialarabic'] = 0xFEDB;\n    t['kafmedialarabic'] = 0xFEDC;\n    t['kafrafehebrew'] = 0xFB4D;\n    t['kagujarati'] = 0x0A95;\n    t['kagurmukhi'] = 0x0A15;\n    t['kahiragana'] = 0x304B;\n    t['kahookcyrillic'] = 0x04C4;\n    t['kakatakana'] = 0x30AB;\n    t['kakatakanahalfwidth'] = 0xFF76;\n    t['kappa'] = 0x03BA;\n    t['kappasymbolgreek'] = 0x03F0;\n    t['kapyeounmieumkorean'] = 0x3171;\n    t['kapyeounphieuphkorean'] = 0x3184;\n    t['kapyeounpieupkorean'] = 0x3178;\n    t['kapyeounssangpieupkorean'] = 0x3179;\n    t['karoriisquare'] = 0x330D;\n    t['kashidaautoarabic'] = 0x0640;\n    t['kashidaautonosidebearingarabic'] = 0x0640;\n    t['kasmallkatakana'] = 0x30F5;\n    t['kasquare'] = 0x3384;\n    t['kasraarabic'] = 0x0650;\n    t['kasratanarabic'] = 0x064D;\n    t['kastrokecyrillic'] = 0x049F;\n    t['katahiraprolongmarkhalfwidth'] = 0xFF70;\n    t['kaverticalstrokecyrillic'] = 0x049D;\n    t['kbopomofo'] = 0x310E;\n    t['kcalsquare'] = 0x3389;\n    t['kcaron'] = 0x01E9;\n    t['kcedilla'] = 0x0137;\n    t['kcircle'] = 0x24DA;\n    t['kcommaaccent'] = 0x0137;\n    t['kdotbelow'] = 0x1E33;\n    t['keharmenian'] = 0x0584;\n    t['kehiragana'] = 0x3051;\n    t['kekatakana'] = 0x30B1;\n    t['kekatakanahalfwidth'] = 0xFF79;\n    t['kenarmenian'] = 0x056F;\n    t['kesmallkatakana'] = 0x30F6;\n    t['kgreenlandic'] = 0x0138;\n    t['khabengali'] = 0x0996;\n    t['khacyrillic'] = 0x0445;\n    t['khadeva'] = 0x0916;\n    t['khagujarati'] = 0x0A96;\n    t['khagurmukhi'] = 0x0A16;\n    t['khaharabic'] = 0x062E;\n    t['khahfinalarabic'] = 0xFEA6;\n    t['khahinitialarabic'] = 0xFEA7;\n    t['khahmedialarabic'] = 0xFEA8;\n    t['kheicoptic'] = 0x03E7;\n    t['khhadeva'] = 0x0959;\n    t['khhagurmukhi'] = 0x0A59;\n    t['khieukhacirclekorean'] = 0x3278;\n    t['khieukhaparenkorean'] = 0x3218;\n    t['khieukhcirclekorean'] = 0x326A;\n    t['khieukhkorean'] = 0x314B;\n    t['khieukhparenkorean'] = 0x320A;\n    t['khokhaithai'] = 0x0E02;\n    t['khokhonthai'] = 0x0E05;\n    t['khokhuatthai'] = 0x0E03;\n    t['khokhwaithai'] = 0x0E04;\n    t['khomutthai'] = 0x0E5B;\n    t['khook'] = 0x0199;\n    t['khorakhangthai'] = 0x0E06;\n    t['khzsquare'] = 0x3391;\n    t['kihiragana'] = 0x304D;\n    t['kikatakana'] = 0x30AD;\n    t['kikatakanahalfwidth'] = 0xFF77;\n    t['kiroguramusquare'] = 0x3315;\n    t['kiromeetorusquare'] = 0x3316;\n    t['kirosquare'] = 0x3314;\n    t['kiyeokacirclekorean'] = 0x326E;\n    t['kiyeokaparenkorean'] = 0x320E;\n    t['kiyeokcirclekorean'] = 0x3260;\n    t['kiyeokkorean'] = 0x3131;\n    t['kiyeokparenkorean'] = 0x3200;\n    t['kiyeoksioskorean'] = 0x3133;\n    t['kjecyrillic'] = 0x045C;\n    t['klinebelow'] = 0x1E35;\n    t['klsquare'] = 0x3398;\n    t['kmcubedsquare'] = 0x33A6;\n    t['kmonospace'] = 0xFF4B;\n    t['kmsquaredsquare'] = 0x33A2;\n    t['kohiragana'] = 0x3053;\n    t['kohmsquare'] = 0x33C0;\n    t['kokaithai'] = 0x0E01;\n    t['kokatakana'] = 0x30B3;\n    t['kokatakanahalfwidth'] = 0xFF7A;\n    t['kooposquare'] = 0x331E;\n    t['koppacyrillic'] = 0x0481;\n    t['koreanstandardsymbol'] = 0x327F;\n    t['koroniscmb'] = 0x0343;\n    t['kparen'] = 0x24A6;\n    t['kpasquare'] = 0x33AA;\n    t['ksicyrillic'] = 0x046F;\n    t['ktsquare'] = 0x33CF;\n    t['kturned'] = 0x029E;\n    t['kuhiragana'] = 0x304F;\n    t['kukatakana'] = 0x30AF;\n    t['kukatakanahalfwidth'] = 0xFF78;\n    t['kvsquare'] = 0x33B8;\n    t['kwsquare'] = 0x33BE;\n    t['l'] = 0x006C;\n    t['labengali'] = 0x09B2;\n    t['lacute'] = 0x013A;\n    t['ladeva'] = 0x0932;\n    t['lagujarati'] = 0x0AB2;\n    t['lagurmukhi'] = 0x0A32;\n    t['lakkhangyaothai'] = 0x0E45;\n    t['lamaleffinalarabic'] = 0xFEFC;\n    t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\n    t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\n    t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\n    t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\n    t['lamalefisolatedarabic'] = 0xFEFB;\n    t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\n    t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\n    t['lamarabic'] = 0x0644;\n    t['lambda'] = 0x03BB;\n    t['lambdastroke'] = 0x019B;\n    t['lamed'] = 0x05DC;\n    t['lameddagesh'] = 0xFB3C;\n    t['lameddageshhebrew'] = 0xFB3C;\n    t['lamedhebrew'] = 0x05DC;\n    t['lamfinalarabic'] = 0xFEDE;\n    t['lamhahinitialarabic'] = 0xFCCA;\n    t['laminitialarabic'] = 0xFEDF;\n    t['lamjeeminitialarabic'] = 0xFCC9;\n    t['lamkhahinitialarabic'] = 0xFCCB;\n    t['lamlamhehisolatedarabic'] = 0xFDF2;\n    t['lammedialarabic'] = 0xFEE0;\n    t['lammeemhahinitialarabic'] = 0xFD88;\n    t['lammeeminitialarabic'] = 0xFCCC;\n    t['largecircle'] = 0x25EF;\n    t['lbar'] = 0x019A;\n    t['lbelt'] = 0x026C;\n    t['lbopomofo'] = 0x310C;\n    t['lcaron'] = 0x013E;\n    t['lcedilla'] = 0x013C;\n    t['lcircle'] = 0x24DB;\n    t['lcircumflexbelow'] = 0x1E3D;\n    t['lcommaaccent'] = 0x013C;\n    t['ldot'] = 0x0140;\n    t['ldotaccent'] = 0x0140;\n    t['ldotbelow'] = 0x1E37;\n    t['ldotbelowmacron'] = 0x1E39;\n    t['leftangleabovecmb'] = 0x031A;\n    t['lefttackbelowcmb'] = 0x0318;\n    t['less'] = 0x003C;\n    t['lessequal'] = 0x2264;\n    t['lessequalorgreater'] = 0x22DA;\n    t['lessmonospace'] = 0xFF1C;\n    t['lessorequivalent'] = 0x2272;\n    t['lessorgreater'] = 0x2276;\n    t['lessoverequal'] = 0x2266;\n    t['lesssmall'] = 0xFE64;\n    t['lezh'] = 0x026E;\n    t['lfblock'] = 0x258C;\n    t['lhookretroflex'] = 0x026D;\n    t['lira'] = 0x20A4;\n    t['liwnarmenian'] = 0x056C;\n    t['lj'] = 0x01C9;\n    t['ljecyrillic'] = 0x0459;\n    t['ll'] = 0xF6C0;\n    t['lladeva'] = 0x0933;\n    t['llagujarati'] = 0x0AB3;\n    t['llinebelow'] = 0x1E3B;\n    t['llladeva'] = 0x0934;\n    t['llvocalicbengali'] = 0x09E1;\n    t['llvocalicdeva'] = 0x0961;\n    t['llvocalicvowelsignbengali'] = 0x09E3;\n    t['llvocalicvowelsigndeva'] = 0x0963;\n    t['lmiddletilde'] = 0x026B;\n    t['lmonospace'] = 0xFF4C;\n    t['lmsquare'] = 0x33D0;\n    t['lochulathai'] = 0x0E2C;\n    t['logicaland'] = 0x2227;\n    t['logicalnot'] = 0x00AC;\n    t['logicalnotreversed'] = 0x2310;\n    t['logicalor'] = 0x2228;\n    t['lolingthai'] = 0x0E25;\n    t['longs'] = 0x017F;\n    t['lowlinecenterline'] = 0xFE4E;\n    t['lowlinecmb'] = 0x0332;\n    t['lowlinedashed'] = 0xFE4D;\n    t['lozenge'] = 0x25CA;\n    t['lparen'] = 0x24A7;\n    t['lslash'] = 0x0142;\n    t['lsquare'] = 0x2113;\n    t['lsuperior'] = 0xF6EE;\n    t['ltshade'] = 0x2591;\n    t['luthai'] = 0x0E26;\n    t['lvocalicbengali'] = 0x098C;\n    t['lvocalicdeva'] = 0x090C;\n    t['lvocalicvowelsignbengali'] = 0x09E2;\n    t['lvocalicvowelsigndeva'] = 0x0962;\n    t['lxsquare'] = 0x33D3;\n    t['m'] = 0x006D;\n    t['mabengali'] = 0x09AE;\n    t['macron'] = 0x00AF;\n    t['macronbelowcmb'] = 0x0331;\n    t['macroncmb'] = 0x0304;\n    t['macronlowmod'] = 0x02CD;\n    t['macronmonospace'] = 0xFFE3;\n    t['macute'] = 0x1E3F;\n    t['madeva'] = 0x092E;\n    t['magujarati'] = 0x0AAE;\n    t['magurmukhi'] = 0x0A2E;\n    t['mahapakhhebrew'] = 0x05A4;\n    t['mahapakhlefthebrew'] = 0x05A4;\n    t['mahiragana'] = 0x307E;\n    t['maichattawalowleftthai'] = 0xF895;\n    t['maichattawalowrightthai'] = 0xF894;\n    t['maichattawathai'] = 0x0E4B;\n    t['maichattawaupperleftthai'] = 0xF893;\n    t['maieklowleftthai'] = 0xF88C;\n    t['maieklowrightthai'] = 0xF88B;\n    t['maiekthai'] = 0x0E48;\n    t['maiekupperleftthai'] = 0xF88A;\n    t['maihanakatleftthai'] = 0xF884;\n    t['maihanakatthai'] = 0x0E31;\n    t['maitaikhuleftthai'] = 0xF889;\n    t['maitaikhuthai'] = 0x0E47;\n    t['maitholowleftthai'] = 0xF88F;\n    t['maitholowrightthai'] = 0xF88E;\n    t['maithothai'] = 0x0E49;\n    t['maithoupperleftthai'] = 0xF88D;\n    t['maitrilowleftthai'] = 0xF892;\n    t['maitrilowrightthai'] = 0xF891;\n    t['maitrithai'] = 0x0E4A;\n    t['maitriupperleftthai'] = 0xF890;\n    t['maiyamokthai'] = 0x0E46;\n    t['makatakana'] = 0x30DE;\n    t['makatakanahalfwidth'] = 0xFF8F;\n    t['male'] = 0x2642;\n    t['mansyonsquare'] = 0x3347;\n    t['maqafhebrew'] = 0x05BE;\n    t['mars'] = 0x2642;\n    t['masoracirclehebrew'] = 0x05AF;\n    t['masquare'] = 0x3383;\n    t['mbopomofo'] = 0x3107;\n    t['mbsquare'] = 0x33D4;\n    t['mcircle'] = 0x24DC;\n    t['mcubedsquare'] = 0x33A5;\n    t['mdotaccent'] = 0x1E41;\n    t['mdotbelow'] = 0x1E43;\n    t['meemarabic'] = 0x0645;\n    t['meemfinalarabic'] = 0xFEE2;\n    t['meeminitialarabic'] = 0xFEE3;\n    t['meemmedialarabic'] = 0xFEE4;\n    t['meemmeeminitialarabic'] = 0xFCD1;\n    t['meemmeemisolatedarabic'] = 0xFC48;\n    t['meetorusquare'] = 0x334D;\n    t['mehiragana'] = 0x3081;\n    t['meizierasquare'] = 0x337E;\n    t['mekatakana'] = 0x30E1;\n    t['mekatakanahalfwidth'] = 0xFF92;\n    t['mem'] = 0x05DE;\n    t['memdagesh'] = 0xFB3E;\n    t['memdageshhebrew'] = 0xFB3E;\n    t['memhebrew'] = 0x05DE;\n    t['menarmenian'] = 0x0574;\n    t['merkhahebrew'] = 0x05A5;\n    t['merkhakefulahebrew'] = 0x05A6;\n    t['merkhakefulalefthebrew'] = 0x05A6;\n    t['merkhalefthebrew'] = 0x05A5;\n    t['mhook'] = 0x0271;\n    t['mhzsquare'] = 0x3392;\n    t['middledotkatakanahalfwidth'] = 0xFF65;\n    t['middot'] = 0x00B7;\n    t['mieumacirclekorean'] = 0x3272;\n    t['mieumaparenkorean'] = 0x3212;\n    t['mieumcirclekorean'] = 0x3264;\n    t['mieumkorean'] = 0x3141;\n    t['mieumpansioskorean'] = 0x3170;\n    t['mieumparenkorean'] = 0x3204;\n    t['mieumpieupkorean'] = 0x316E;\n    t['mieumsioskorean'] = 0x316F;\n    t['mihiragana'] = 0x307F;\n    t['mikatakana'] = 0x30DF;\n    t['mikatakanahalfwidth'] = 0xFF90;\n    t['minus'] = 0x2212;\n    t['minusbelowcmb'] = 0x0320;\n    t['minuscircle'] = 0x2296;\n    t['minusmod'] = 0x02D7;\n    t['minusplus'] = 0x2213;\n    t['minute'] = 0x2032;\n    t['miribaarusquare'] = 0x334A;\n    t['mirisquare'] = 0x3349;\n    t['mlonglegturned'] = 0x0270;\n    t['mlsquare'] = 0x3396;\n    t['mmcubedsquare'] = 0x33A3;\n    t['mmonospace'] = 0xFF4D;\n    t['mmsquaredsquare'] = 0x339F;\n    t['mohiragana'] = 0x3082;\n    t['mohmsquare'] = 0x33C1;\n    t['mokatakana'] = 0x30E2;\n    t['mokatakanahalfwidth'] = 0xFF93;\n    t['molsquare'] = 0x33D6;\n    t['momathai'] = 0x0E21;\n    t['moverssquare'] = 0x33A7;\n    t['moverssquaredsquare'] = 0x33A8;\n    t['mparen'] = 0x24A8;\n    t['mpasquare'] = 0x33AB;\n    t['mssquare'] = 0x33B3;\n    t['msuperior'] = 0xF6EF;\n    t['mturned'] = 0x026F;\n    t['mu'] = 0x00B5;\n    t['mu1'] = 0x00B5;\n    t['muasquare'] = 0x3382;\n    t['muchgreater'] = 0x226B;\n    t['muchless'] = 0x226A;\n    t['mufsquare'] = 0x338C;\n    t['mugreek'] = 0x03BC;\n    t['mugsquare'] = 0x338D;\n    t['muhiragana'] = 0x3080;\n    t['mukatakana'] = 0x30E0;\n    t['mukatakanahalfwidth'] = 0xFF91;\n    t['mulsquare'] = 0x3395;\n    t['multiply'] = 0x00D7;\n    t['mumsquare'] = 0x339B;\n    t['munahhebrew'] = 0x05A3;\n    t['munahlefthebrew'] = 0x05A3;\n    t['musicalnote'] = 0x266A;\n    t['musicalnotedbl'] = 0x266B;\n    t['musicflatsign'] = 0x266D;\n    t['musicsharpsign'] = 0x266F;\n    t['mussquare'] = 0x33B2;\n    t['muvsquare'] = 0x33B6;\n    t['muwsquare'] = 0x33BC;\n    t['mvmegasquare'] = 0x33B9;\n    t['mvsquare'] = 0x33B7;\n    t['mwmegasquare'] = 0x33BF;\n    t['mwsquare'] = 0x33BD;\n    t['n'] = 0x006E;\n    t['nabengali'] = 0x09A8;\n    t['nabla'] = 0x2207;\n    t['nacute'] = 0x0144;\n    t['nadeva'] = 0x0928;\n    t['nagujarati'] = 0x0AA8;\n    t['nagurmukhi'] = 0x0A28;\n    t['nahiragana'] = 0x306A;\n    t['nakatakana'] = 0x30CA;\n    t['nakatakanahalfwidth'] = 0xFF85;\n    t['napostrophe'] = 0x0149;\n    t['nasquare'] = 0x3381;\n    t['nbopomofo'] = 0x310B;\n    t['nbspace'] = 0x00A0;\n    t['ncaron'] = 0x0148;\n    t['ncedilla'] = 0x0146;\n    t['ncircle'] = 0x24DD;\n    t['ncircumflexbelow'] = 0x1E4B;\n    t['ncommaaccent'] = 0x0146;\n    t['ndotaccent'] = 0x1E45;\n    t['ndotbelow'] = 0x1E47;\n    t['nehiragana'] = 0x306D;\n    t['nekatakana'] = 0x30CD;\n    t['nekatakanahalfwidth'] = 0xFF88;\n    t['newsheqelsign'] = 0x20AA;\n    t['nfsquare'] = 0x338B;\n    t['ngabengali'] = 0x0999;\n    t['ngadeva'] = 0x0919;\n    t['ngagujarati'] = 0x0A99;\n    t['ngagurmukhi'] = 0x0A19;\n    t['ngonguthai'] = 0x0E07;\n    t['nhiragana'] = 0x3093;\n    t['nhookleft'] = 0x0272;\n    t['nhookretroflex'] = 0x0273;\n    t['nieunacirclekorean'] = 0x326F;\n    t['nieunaparenkorean'] = 0x320F;\n    t['nieuncieuckorean'] = 0x3135;\n    t['nieuncirclekorean'] = 0x3261;\n    t['nieunhieuhkorean'] = 0x3136;\n    t['nieunkorean'] = 0x3134;\n    t['nieunpansioskorean'] = 0x3168;\n    t['nieunparenkorean'] = 0x3201;\n    t['nieunsioskorean'] = 0x3167;\n    t['nieuntikeutkorean'] = 0x3166;\n    t['nihiragana'] = 0x306B;\n    t['nikatakana'] = 0x30CB;\n    t['nikatakanahalfwidth'] = 0xFF86;\n    t['nikhahitleftthai'] = 0xF899;\n    t['nikhahitthai'] = 0x0E4D;\n    t['nine'] = 0x0039;\n    t['ninearabic'] = 0x0669;\n    t['ninebengali'] = 0x09EF;\n    t['ninecircle'] = 0x2468;\n    t['ninecircleinversesansserif'] = 0x2792;\n    t['ninedeva'] = 0x096F;\n    t['ninegujarati'] = 0x0AEF;\n    t['ninegurmukhi'] = 0x0A6F;\n    t['ninehackarabic'] = 0x0669;\n    t['ninehangzhou'] = 0x3029;\n    t['nineideographicparen'] = 0x3228;\n    t['nineinferior'] = 0x2089;\n    t['ninemonospace'] = 0xFF19;\n    t['nineoldstyle'] = 0xF739;\n    t['nineparen'] = 0x247C;\n    t['nineperiod'] = 0x2490;\n    t['ninepersian'] = 0x06F9;\n    t['nineroman'] = 0x2178;\n    t['ninesuperior'] = 0x2079;\n    t['nineteencircle'] = 0x2472;\n    t['nineteenparen'] = 0x2486;\n    t['nineteenperiod'] = 0x249A;\n    t['ninethai'] = 0x0E59;\n    t['nj'] = 0x01CC;\n    t['njecyrillic'] = 0x045A;\n    t['nkatakana'] = 0x30F3;\n    t['nkatakanahalfwidth'] = 0xFF9D;\n    t['nlegrightlong'] = 0x019E;\n    t['nlinebelow'] = 0x1E49;\n    t['nmonospace'] = 0xFF4E;\n    t['nmsquare'] = 0x339A;\n    t['nnabengali'] = 0x09A3;\n    t['nnadeva'] = 0x0923;\n    t['nnagujarati'] = 0x0AA3;\n    t['nnagurmukhi'] = 0x0A23;\n    t['nnnadeva'] = 0x0929;\n    t['nohiragana'] = 0x306E;\n    t['nokatakana'] = 0x30CE;\n    t['nokatakanahalfwidth'] = 0xFF89;\n    t['nonbreakingspace'] = 0x00A0;\n    t['nonenthai'] = 0x0E13;\n    t['nonuthai'] = 0x0E19;\n    t['noonarabic'] = 0x0646;\n    t['noonfinalarabic'] = 0xFEE6;\n    t['noonghunnaarabic'] = 0x06BA;\n    t['noonghunnafinalarabic'] = 0xFB9F;\n    t['nooninitialarabic'] = 0xFEE7;\n    t['noonjeeminitialarabic'] = 0xFCD2;\n    t['noonjeemisolatedarabic'] = 0xFC4B;\n    t['noonmedialarabic'] = 0xFEE8;\n    t['noonmeeminitialarabic'] = 0xFCD5;\n    t['noonmeemisolatedarabic'] = 0xFC4E;\n    t['noonnoonfinalarabic'] = 0xFC8D;\n    t['notcontains'] = 0x220C;\n    t['notelement'] = 0x2209;\n    t['notelementof'] = 0x2209;\n    t['notequal'] = 0x2260;\n    t['notgreater'] = 0x226F;\n    t['notgreaternorequal'] = 0x2271;\n    t['notgreaternorless'] = 0x2279;\n    t['notidentical'] = 0x2262;\n    t['notless'] = 0x226E;\n    t['notlessnorequal'] = 0x2270;\n    t['notparallel'] = 0x2226;\n    t['notprecedes'] = 0x2280;\n    t['notsubset'] = 0x2284;\n    t['notsucceeds'] = 0x2281;\n    t['notsuperset'] = 0x2285;\n    t['nowarmenian'] = 0x0576;\n    t['nparen'] = 0x24A9;\n    t['nssquare'] = 0x33B1;\n    t['nsuperior'] = 0x207F;\n    t['ntilde'] = 0x00F1;\n    t['nu'] = 0x03BD;\n    t['nuhiragana'] = 0x306C;\n    t['nukatakana'] = 0x30CC;\n    t['nukatakanahalfwidth'] = 0xFF87;\n    t['nuktabengali'] = 0x09BC;\n    t['nuktadeva'] = 0x093C;\n    t['nuktagujarati'] = 0x0ABC;\n    t['nuktagurmukhi'] = 0x0A3C;\n    t['numbersign'] = 0x0023;\n    t['numbersignmonospace'] = 0xFF03;\n    t['numbersignsmall'] = 0xFE5F;\n    t['numeralsigngreek'] = 0x0374;\n    t['numeralsignlowergreek'] = 0x0375;\n    t['numero'] = 0x2116;\n    t['nun'] = 0x05E0;\n    t['nundagesh'] = 0xFB40;\n    t['nundageshhebrew'] = 0xFB40;\n    t['nunhebrew'] = 0x05E0;\n    t['nvsquare'] = 0x33B5;\n    t['nwsquare'] = 0x33BB;\n    t['nyabengali'] = 0x099E;\n    t['nyadeva'] = 0x091E;\n    t['nyagujarati'] = 0x0A9E;\n    t['nyagurmukhi'] = 0x0A1E;\n    t['o'] = 0x006F;\n    t['oacute'] = 0x00F3;\n    t['oangthai'] = 0x0E2D;\n    t['obarred'] = 0x0275;\n    t['obarredcyrillic'] = 0x04E9;\n    t['obarreddieresiscyrillic'] = 0x04EB;\n    t['obengali'] = 0x0993;\n    t['obopomofo'] = 0x311B;\n    t['obreve'] = 0x014F;\n    t['ocandradeva'] = 0x0911;\n    t['ocandragujarati'] = 0x0A91;\n    t['ocandravowelsigndeva'] = 0x0949;\n    t['ocandravowelsigngujarati'] = 0x0AC9;\n    t['ocaron'] = 0x01D2;\n    t['ocircle'] = 0x24DE;\n    t['ocircumflex'] = 0x00F4;\n    t['ocircumflexacute'] = 0x1ED1;\n    t['ocircumflexdotbelow'] = 0x1ED9;\n    t['ocircumflexgrave'] = 0x1ED3;\n    t['ocircumflexhookabove'] = 0x1ED5;\n    t['ocircumflextilde'] = 0x1ED7;\n    t['ocyrillic'] = 0x043E;\n    t['odblacute'] = 0x0151;\n    t['odblgrave'] = 0x020D;\n    t['odeva'] = 0x0913;\n    t['odieresis'] = 0x00F6;\n    t['odieresiscyrillic'] = 0x04E7;\n    t['odotbelow'] = 0x1ECD;\n    t['oe'] = 0x0153;\n    t['oekorean'] = 0x315A;\n    t['ogonek'] = 0x02DB;\n    t['ogonekcmb'] = 0x0328;\n    t['ograve'] = 0x00F2;\n    t['ogujarati'] = 0x0A93;\n    t['oharmenian'] = 0x0585;\n    t['ohiragana'] = 0x304A;\n    t['ohookabove'] = 0x1ECF;\n    t['ohorn'] = 0x01A1;\n    t['ohornacute'] = 0x1EDB;\n    t['ohorndotbelow'] = 0x1EE3;\n    t['ohorngrave'] = 0x1EDD;\n    t['ohornhookabove'] = 0x1EDF;\n    t['ohorntilde'] = 0x1EE1;\n    t['ohungarumlaut'] = 0x0151;\n    t['oi'] = 0x01A3;\n    t['oinvertedbreve'] = 0x020F;\n    t['okatakana'] = 0x30AA;\n    t['okatakanahalfwidth'] = 0xFF75;\n    t['okorean'] = 0x3157;\n    t['olehebrew'] = 0x05AB;\n    t['omacron'] = 0x014D;\n    t['omacronacute'] = 0x1E53;\n    t['omacrongrave'] = 0x1E51;\n    t['omdeva'] = 0x0950;\n    t['omega'] = 0x03C9;\n    t['omega1'] = 0x03D6;\n    t['omegacyrillic'] = 0x0461;\n    t['omegalatinclosed'] = 0x0277;\n    t['omegaroundcyrillic'] = 0x047B;\n    t['omegatitlocyrillic'] = 0x047D;\n    t['omegatonos'] = 0x03CE;\n    t['omgujarati'] = 0x0AD0;\n    t['omicron'] = 0x03BF;\n    t['omicrontonos'] = 0x03CC;\n    t['omonospace'] = 0xFF4F;\n    t['one'] = 0x0031;\n    t['onearabic'] = 0x0661;\n    t['onebengali'] = 0x09E7;\n    t['onecircle'] = 0x2460;\n    t['onecircleinversesansserif'] = 0x278A;\n    t['onedeva'] = 0x0967;\n    t['onedotenleader'] = 0x2024;\n    t['oneeighth'] = 0x215B;\n    t['onefitted'] = 0xF6DC;\n    t['onegujarati'] = 0x0AE7;\n    t['onegurmukhi'] = 0x0A67;\n    t['onehackarabic'] = 0x0661;\n    t['onehalf'] = 0x00BD;\n    t['onehangzhou'] = 0x3021;\n    t['oneideographicparen'] = 0x3220;\n    t['oneinferior'] = 0x2081;\n    t['onemonospace'] = 0xFF11;\n    t['onenumeratorbengali'] = 0x09F4;\n    t['oneoldstyle'] = 0xF731;\n    t['oneparen'] = 0x2474;\n    t['oneperiod'] = 0x2488;\n    t['onepersian'] = 0x06F1;\n    t['onequarter'] = 0x00BC;\n    t['oneroman'] = 0x2170;\n    t['onesuperior'] = 0x00B9;\n    t['onethai'] = 0x0E51;\n    t['onethird'] = 0x2153;\n    t['oogonek'] = 0x01EB;\n    t['oogonekmacron'] = 0x01ED;\n    t['oogurmukhi'] = 0x0A13;\n    t['oomatragurmukhi'] = 0x0A4B;\n    t['oopen'] = 0x0254;\n    t['oparen'] = 0x24AA;\n    t['openbullet'] = 0x25E6;\n    t['option'] = 0x2325;\n    t['ordfeminine'] = 0x00AA;\n    t['ordmasculine'] = 0x00BA;\n    t['orthogonal'] = 0x221F;\n    t['oshortdeva'] = 0x0912;\n    t['oshortvowelsigndeva'] = 0x094A;\n    t['oslash'] = 0x00F8;\n    t['oslashacute'] = 0x01FF;\n    t['osmallhiragana'] = 0x3049;\n    t['osmallkatakana'] = 0x30A9;\n    t['osmallkatakanahalfwidth'] = 0xFF6B;\n    t['ostrokeacute'] = 0x01FF;\n    t['osuperior'] = 0xF6F0;\n    t['otcyrillic'] = 0x047F;\n    t['otilde'] = 0x00F5;\n    t['otildeacute'] = 0x1E4D;\n    t['otildedieresis'] = 0x1E4F;\n    t['oubopomofo'] = 0x3121;\n    t['overline'] = 0x203E;\n    t['overlinecenterline'] = 0xFE4A;\n    t['overlinecmb'] = 0x0305;\n    t['overlinedashed'] = 0xFE49;\n    t['overlinedblwavy'] = 0xFE4C;\n    t['overlinewavy'] = 0xFE4B;\n    t['overscore'] = 0x00AF;\n    t['ovowelsignbengali'] = 0x09CB;\n    t['ovowelsigndeva'] = 0x094B;\n    t['ovowelsigngujarati'] = 0x0ACB;\n    t['p'] = 0x0070;\n    t['paampssquare'] = 0x3380;\n    t['paasentosquare'] = 0x332B;\n    t['pabengali'] = 0x09AA;\n    t['pacute'] = 0x1E55;\n    t['padeva'] = 0x092A;\n    t['pagedown'] = 0x21DF;\n    t['pageup'] = 0x21DE;\n    t['pagujarati'] = 0x0AAA;\n    t['pagurmukhi'] = 0x0A2A;\n    t['pahiragana'] = 0x3071;\n    t['paiyannoithai'] = 0x0E2F;\n    t['pakatakana'] = 0x30D1;\n    t['palatalizationcyrilliccmb'] = 0x0484;\n    t['palochkacyrillic'] = 0x04C0;\n    t['pansioskorean'] = 0x317F;\n    t['paragraph'] = 0x00B6;\n    t['parallel'] = 0x2225;\n    t['parenleft'] = 0x0028;\n    t['parenleftaltonearabic'] = 0xFD3E;\n    t['parenleftbt'] = 0xF8ED;\n    t['parenleftex'] = 0xF8EC;\n    t['parenleftinferior'] = 0x208D;\n    t['parenleftmonospace'] = 0xFF08;\n    t['parenleftsmall'] = 0xFE59;\n    t['parenleftsuperior'] = 0x207D;\n    t['parenlefttp'] = 0xF8EB;\n    t['parenleftvertical'] = 0xFE35;\n    t['parenright'] = 0x0029;\n    t['parenrightaltonearabic'] = 0xFD3F;\n    t['parenrightbt'] = 0xF8F8;\n    t['parenrightex'] = 0xF8F7;\n    t['parenrightinferior'] = 0x208E;\n    t['parenrightmonospace'] = 0xFF09;\n    t['parenrightsmall'] = 0xFE5A;\n    t['parenrightsuperior'] = 0x207E;\n    t['parenrighttp'] = 0xF8F6;\n    t['parenrightvertical'] = 0xFE36;\n    t['partialdiff'] = 0x2202;\n    t['paseqhebrew'] = 0x05C0;\n    t['pashtahebrew'] = 0x0599;\n    t['pasquare'] = 0x33A9;\n    t['patah'] = 0x05B7;\n    t['patah11'] = 0x05B7;\n    t['patah1d'] = 0x05B7;\n    t['patah2a'] = 0x05B7;\n    t['patahhebrew'] = 0x05B7;\n    t['patahnarrowhebrew'] = 0x05B7;\n    t['patahquarterhebrew'] = 0x05B7;\n    t['patahwidehebrew'] = 0x05B7;\n    t['pazerhebrew'] = 0x05A1;\n    t['pbopomofo'] = 0x3106;\n    t['pcircle'] = 0x24DF;\n    t['pdotaccent'] = 0x1E57;\n    t['pe'] = 0x05E4;\n    t['pecyrillic'] = 0x043F;\n    t['pedagesh'] = 0xFB44;\n    t['pedageshhebrew'] = 0xFB44;\n    t['peezisquare'] = 0x333B;\n    t['pefinaldageshhebrew'] = 0xFB43;\n    t['peharabic'] = 0x067E;\n    t['peharmenian'] = 0x057A;\n    t['pehebrew'] = 0x05E4;\n    t['pehfinalarabic'] = 0xFB57;\n    t['pehinitialarabic'] = 0xFB58;\n    t['pehiragana'] = 0x307A;\n    t['pehmedialarabic'] = 0xFB59;\n    t['pekatakana'] = 0x30DA;\n    t['pemiddlehookcyrillic'] = 0x04A7;\n    t['perafehebrew'] = 0xFB4E;\n    t['percent'] = 0x0025;\n    t['percentarabic'] = 0x066A;\n    t['percentmonospace'] = 0xFF05;\n    t['percentsmall'] = 0xFE6A;\n    t['period'] = 0x002E;\n    t['periodarmenian'] = 0x0589;\n    t['periodcentered'] = 0x00B7;\n    t['periodhalfwidth'] = 0xFF61;\n    t['periodinferior'] = 0xF6E7;\n    t['periodmonospace'] = 0xFF0E;\n    t['periodsmall'] = 0xFE52;\n    t['periodsuperior'] = 0xF6E8;\n    t['perispomenigreekcmb'] = 0x0342;\n    t['perpendicular'] = 0x22A5;\n    t['perthousand'] = 0x2030;\n    t['peseta'] = 0x20A7;\n    t['pfsquare'] = 0x338A;\n    t['phabengali'] = 0x09AB;\n    t['phadeva'] = 0x092B;\n    t['phagujarati'] = 0x0AAB;\n    t['phagurmukhi'] = 0x0A2B;\n    t['phi'] = 0x03C6;\n    t['phi1'] = 0x03D5;\n    t['phieuphacirclekorean'] = 0x327A;\n    t['phieuphaparenkorean'] = 0x321A;\n    t['phieuphcirclekorean'] = 0x326C;\n    t['phieuphkorean'] = 0x314D;\n    t['phieuphparenkorean'] = 0x320C;\n    t['philatin'] = 0x0278;\n    t['phinthuthai'] = 0x0E3A;\n    t['phisymbolgreek'] = 0x03D5;\n    t['phook'] = 0x01A5;\n    t['phophanthai'] = 0x0E1E;\n    t['phophungthai'] = 0x0E1C;\n    t['phosamphaothai'] = 0x0E20;\n    t['pi'] = 0x03C0;\n    t['pieupacirclekorean'] = 0x3273;\n    t['pieupaparenkorean'] = 0x3213;\n    t['pieupcieuckorean'] = 0x3176;\n    t['pieupcirclekorean'] = 0x3265;\n    t['pieupkiyeokkorean'] = 0x3172;\n    t['pieupkorean'] = 0x3142;\n    t['pieupparenkorean'] = 0x3205;\n    t['pieupsioskiyeokkorean'] = 0x3174;\n    t['pieupsioskorean'] = 0x3144;\n    t['pieupsiostikeutkorean'] = 0x3175;\n    t['pieupthieuthkorean'] = 0x3177;\n    t['pieuptikeutkorean'] = 0x3173;\n    t['pihiragana'] = 0x3074;\n    t['pikatakana'] = 0x30D4;\n    t['pisymbolgreek'] = 0x03D6;\n    t['piwrarmenian'] = 0x0583;\n    t['plus'] = 0x002B;\n    t['plusbelowcmb'] = 0x031F;\n    t['pluscircle'] = 0x2295;\n    t['plusminus'] = 0x00B1;\n    t['plusmod'] = 0x02D6;\n    t['plusmonospace'] = 0xFF0B;\n    t['plussmall'] = 0xFE62;\n    t['plussuperior'] = 0x207A;\n    t['pmonospace'] = 0xFF50;\n    t['pmsquare'] = 0x33D8;\n    t['pohiragana'] = 0x307D;\n    t['pointingindexdownwhite'] = 0x261F;\n    t['pointingindexleftwhite'] = 0x261C;\n    t['pointingindexrightwhite'] = 0x261E;\n    t['pointingindexupwhite'] = 0x261D;\n    t['pokatakana'] = 0x30DD;\n    t['poplathai'] = 0x0E1B;\n    t['postalmark'] = 0x3012;\n    t['postalmarkface'] = 0x3020;\n    t['pparen'] = 0x24AB;\n    t['precedes'] = 0x227A;\n    t['prescription'] = 0x211E;\n    t['primemod'] = 0x02B9;\n    t['primereversed'] = 0x2035;\n    t['product'] = 0x220F;\n    t['projective'] = 0x2305;\n    t['prolongedkana'] = 0x30FC;\n    t['propellor'] = 0x2318;\n    t['propersubset'] = 0x2282;\n    t['propersuperset'] = 0x2283;\n    t['proportion'] = 0x2237;\n    t['proportional'] = 0x221D;\n    t['psi'] = 0x03C8;\n    t['psicyrillic'] = 0x0471;\n    t['psilipneumatacyrilliccmb'] = 0x0486;\n    t['pssquare'] = 0x33B0;\n    t['puhiragana'] = 0x3077;\n    t['pukatakana'] = 0x30D7;\n    t['pvsquare'] = 0x33B4;\n    t['pwsquare'] = 0x33BA;\n    t['q'] = 0x0071;\n    t['qadeva'] = 0x0958;\n    t['qadmahebrew'] = 0x05A8;\n    t['qafarabic'] = 0x0642;\n    t['qaffinalarabic'] = 0xFED6;\n    t['qafinitialarabic'] = 0xFED7;\n    t['qafmedialarabic'] = 0xFED8;\n    t['qamats'] = 0x05B8;\n    t['qamats10'] = 0x05B8;\n    t['qamats1a'] = 0x05B8;\n    t['qamats1c'] = 0x05B8;\n    t['qamats27'] = 0x05B8;\n    t['qamats29'] = 0x05B8;\n    t['qamats33'] = 0x05B8;\n    t['qamatsde'] = 0x05B8;\n    t['qamatshebrew'] = 0x05B8;\n    t['qamatsnarrowhebrew'] = 0x05B8;\n    t['qamatsqatanhebrew'] = 0x05B8;\n    t['qamatsqatannarrowhebrew'] = 0x05B8;\n    t['qamatsqatanquarterhebrew'] = 0x05B8;\n    t['qamatsqatanwidehebrew'] = 0x05B8;\n    t['qamatsquarterhebrew'] = 0x05B8;\n    t['qamatswidehebrew'] = 0x05B8;\n    t['qarneyparahebrew'] = 0x059F;\n    t['qbopomofo'] = 0x3111;\n    t['qcircle'] = 0x24E0;\n    t['qhook'] = 0x02A0;\n    t['qmonospace'] = 0xFF51;\n    t['qof'] = 0x05E7;\n    t['qofdagesh'] = 0xFB47;\n    t['qofdageshhebrew'] = 0xFB47;\n    t['qofhebrew'] = 0x05E7;\n    t['qparen'] = 0x24AC;\n    t['quarternote'] = 0x2669;\n    t['qubuts'] = 0x05BB;\n    t['qubuts18'] = 0x05BB;\n    t['qubuts25'] = 0x05BB;\n    t['qubuts31'] = 0x05BB;\n    t['qubutshebrew'] = 0x05BB;\n    t['qubutsnarrowhebrew'] = 0x05BB;\n    t['qubutsquarterhebrew'] = 0x05BB;\n    t['qubutswidehebrew'] = 0x05BB;\n    t['question'] = 0x003F;\n    t['questionarabic'] = 0x061F;\n    t['questionarmenian'] = 0x055E;\n    t['questiondown'] = 0x00BF;\n    t['questiondownsmall'] = 0xF7BF;\n    t['questiongreek'] = 0x037E;\n    t['questionmonospace'] = 0xFF1F;\n    t['questionsmall'] = 0xF73F;\n    t['quotedbl'] = 0x0022;\n    t['quotedblbase'] = 0x201E;\n    t['quotedblleft'] = 0x201C;\n    t['quotedblmonospace'] = 0xFF02;\n    t['quotedblprime'] = 0x301E;\n    t['quotedblprimereversed'] = 0x301D;\n    t['quotedblright'] = 0x201D;\n    t['quoteleft'] = 0x2018;\n    t['quoteleftreversed'] = 0x201B;\n    t['quotereversed'] = 0x201B;\n    t['quoteright'] = 0x2019;\n    t['quoterightn'] = 0x0149;\n    t['quotesinglbase'] = 0x201A;\n    t['quotesingle'] = 0x0027;\n    t['quotesinglemonospace'] = 0xFF07;\n    t['r'] = 0x0072;\n    t['raarmenian'] = 0x057C;\n    t['rabengali'] = 0x09B0;\n    t['racute'] = 0x0155;\n    t['radeva'] = 0x0930;\n    t['radical'] = 0x221A;\n    t['radicalex'] = 0xF8E5;\n    t['radoverssquare'] = 0x33AE;\n    t['radoverssquaredsquare'] = 0x33AF;\n    t['radsquare'] = 0x33AD;\n    t['rafe'] = 0x05BF;\n    t['rafehebrew'] = 0x05BF;\n    t['ragujarati'] = 0x0AB0;\n    t['ragurmukhi'] = 0x0A30;\n    t['rahiragana'] = 0x3089;\n    t['rakatakana'] = 0x30E9;\n    t['rakatakanahalfwidth'] = 0xFF97;\n    t['ralowerdiagonalbengali'] = 0x09F1;\n    t['ramiddlediagonalbengali'] = 0x09F0;\n    t['ramshorn'] = 0x0264;\n    t['ratio'] = 0x2236;\n    t['rbopomofo'] = 0x3116;\n    t['rcaron'] = 0x0159;\n    t['rcedilla'] = 0x0157;\n    t['rcircle'] = 0x24E1;\n    t['rcommaaccent'] = 0x0157;\n    t['rdblgrave'] = 0x0211;\n    t['rdotaccent'] = 0x1E59;\n    t['rdotbelow'] = 0x1E5B;\n    t['rdotbelowmacron'] = 0x1E5D;\n    t['referencemark'] = 0x203B;\n    t['reflexsubset'] = 0x2286;\n    t['reflexsuperset'] = 0x2287;\n    t['registered'] = 0x00AE;\n    t['registersans'] = 0xF8E8;\n    t['registerserif'] = 0xF6DA;\n    t['reharabic'] = 0x0631;\n    t['reharmenian'] = 0x0580;\n    t['rehfinalarabic'] = 0xFEAE;\n    t['rehiragana'] = 0x308C;\n    t['rekatakana'] = 0x30EC;\n    t['rekatakanahalfwidth'] = 0xFF9A;\n    t['resh'] = 0x05E8;\n    t['reshdageshhebrew'] = 0xFB48;\n    t['reshhebrew'] = 0x05E8;\n    t['reversedtilde'] = 0x223D;\n    t['reviahebrew'] = 0x0597;\n    t['reviamugrashhebrew'] = 0x0597;\n    t['revlogicalnot'] = 0x2310;\n    t['rfishhook'] = 0x027E;\n    t['rfishhookreversed'] = 0x027F;\n    t['rhabengali'] = 0x09DD;\n    t['rhadeva'] = 0x095D;\n    t['rho'] = 0x03C1;\n    t['rhook'] = 0x027D;\n    t['rhookturned'] = 0x027B;\n    t['rhookturnedsuperior'] = 0x02B5;\n    t['rhosymbolgreek'] = 0x03F1;\n    t['rhotichookmod'] = 0x02DE;\n    t['rieulacirclekorean'] = 0x3271;\n    t['rieulaparenkorean'] = 0x3211;\n    t['rieulcirclekorean'] = 0x3263;\n    t['rieulhieuhkorean'] = 0x3140;\n    t['rieulkiyeokkorean'] = 0x313A;\n    t['rieulkiyeoksioskorean'] = 0x3169;\n    t['rieulkorean'] = 0x3139;\n    t['rieulmieumkorean'] = 0x313B;\n    t['rieulpansioskorean'] = 0x316C;\n    t['rieulparenkorean'] = 0x3203;\n    t['rieulphieuphkorean'] = 0x313F;\n    t['rieulpieupkorean'] = 0x313C;\n    t['rieulpieupsioskorean'] = 0x316B;\n    t['rieulsioskorean'] = 0x313D;\n    t['rieulthieuthkorean'] = 0x313E;\n    t['rieultikeutkorean'] = 0x316A;\n    t['rieulyeorinhieuhkorean'] = 0x316D;\n    t['rightangle'] = 0x221F;\n    t['righttackbelowcmb'] = 0x0319;\n    t['righttriangle'] = 0x22BF;\n    t['rihiragana'] = 0x308A;\n    t['rikatakana'] = 0x30EA;\n    t['rikatakanahalfwidth'] = 0xFF98;\n    t['ring'] = 0x02DA;\n    t['ringbelowcmb'] = 0x0325;\n    t['ringcmb'] = 0x030A;\n    t['ringhalfleft'] = 0x02BF;\n    t['ringhalfleftarmenian'] = 0x0559;\n    t['ringhalfleftbelowcmb'] = 0x031C;\n    t['ringhalfleftcentered'] = 0x02D3;\n    t['ringhalfright'] = 0x02BE;\n    t['ringhalfrightbelowcmb'] = 0x0339;\n    t['ringhalfrightcentered'] = 0x02D2;\n    t['rinvertedbreve'] = 0x0213;\n    t['rittorusquare'] = 0x3351;\n    t['rlinebelow'] = 0x1E5F;\n    t['rlongleg'] = 0x027C;\n    t['rlonglegturned'] = 0x027A;\n    t['rmonospace'] = 0xFF52;\n    t['rohiragana'] = 0x308D;\n    t['rokatakana'] = 0x30ED;\n    t['rokatakanahalfwidth'] = 0xFF9B;\n    t['roruathai'] = 0x0E23;\n    t['rparen'] = 0x24AD;\n    t['rrabengali'] = 0x09DC;\n    t['rradeva'] = 0x0931;\n    t['rragurmukhi'] = 0x0A5C;\n    t['rreharabic'] = 0x0691;\n    t['rrehfinalarabic'] = 0xFB8D;\n    t['rrvocalicbengali'] = 0x09E0;\n    t['rrvocalicdeva'] = 0x0960;\n    t['rrvocalicgujarati'] = 0x0AE0;\n    t['rrvocalicvowelsignbengali'] = 0x09C4;\n    t['rrvocalicvowelsigndeva'] = 0x0944;\n    t['rrvocalicvowelsigngujarati'] = 0x0AC4;\n    t['rsuperior'] = 0xF6F1;\n    t['rtblock'] = 0x2590;\n    t['rturned'] = 0x0279;\n    t['rturnedsuperior'] = 0x02B4;\n    t['ruhiragana'] = 0x308B;\n    t['rukatakana'] = 0x30EB;\n    t['rukatakanahalfwidth'] = 0xFF99;\n    t['rupeemarkbengali'] = 0x09F2;\n    t['rupeesignbengali'] = 0x09F3;\n    t['rupiah'] = 0xF6DD;\n    t['ruthai'] = 0x0E24;\n    t['rvocalicbengali'] = 0x098B;\n    t['rvocalicdeva'] = 0x090B;\n    t['rvocalicgujarati'] = 0x0A8B;\n    t['rvocalicvowelsignbengali'] = 0x09C3;\n    t['rvocalicvowelsigndeva'] = 0x0943;\n    t['rvocalicvowelsigngujarati'] = 0x0AC3;\n    t['s'] = 0x0073;\n    t['sabengali'] = 0x09B8;\n    t['sacute'] = 0x015B;\n    t['sacutedotaccent'] = 0x1E65;\n    t['sadarabic'] = 0x0635;\n    t['sadeva'] = 0x0938;\n    t['sadfinalarabic'] = 0xFEBA;\n    t['sadinitialarabic'] = 0xFEBB;\n    t['sadmedialarabic'] = 0xFEBC;\n    t['sagujarati'] = 0x0AB8;\n    t['sagurmukhi'] = 0x0A38;\n    t['sahiragana'] = 0x3055;\n    t['sakatakana'] = 0x30B5;\n    t['sakatakanahalfwidth'] = 0xFF7B;\n    t['sallallahoualayhewasallamarabic'] = 0xFDFA;\n    t['samekh'] = 0x05E1;\n    t['samekhdagesh'] = 0xFB41;\n    t['samekhdageshhebrew'] = 0xFB41;\n    t['samekhhebrew'] = 0x05E1;\n    t['saraaathai'] = 0x0E32;\n    t['saraaethai'] = 0x0E41;\n    t['saraaimaimalaithai'] = 0x0E44;\n    t['saraaimaimuanthai'] = 0x0E43;\n    t['saraamthai'] = 0x0E33;\n    t['saraathai'] = 0x0E30;\n    t['saraethai'] = 0x0E40;\n    t['saraiileftthai'] = 0xF886;\n    t['saraiithai'] = 0x0E35;\n    t['saraileftthai'] = 0xF885;\n    t['saraithai'] = 0x0E34;\n    t['saraothai'] = 0x0E42;\n    t['saraueeleftthai'] = 0xF888;\n    t['saraueethai'] = 0x0E37;\n    t['saraueleftthai'] = 0xF887;\n    t['sarauethai'] = 0x0E36;\n    t['sarauthai'] = 0x0E38;\n    t['sarauuthai'] = 0x0E39;\n    t['sbopomofo'] = 0x3119;\n    t['scaron'] = 0x0161;\n    t['scarondotaccent'] = 0x1E67;\n    t['scedilla'] = 0x015F;\n    t['schwa'] = 0x0259;\n    t['schwacyrillic'] = 0x04D9;\n    t['schwadieresiscyrillic'] = 0x04DB;\n    t['schwahook'] = 0x025A;\n    t['scircle'] = 0x24E2;\n    t['scircumflex'] = 0x015D;\n    t['scommaaccent'] = 0x0219;\n    t['sdotaccent'] = 0x1E61;\n    t['sdotbelow'] = 0x1E63;\n    t['sdotbelowdotaccent'] = 0x1E69;\n    t['seagullbelowcmb'] = 0x033C;\n    t['second'] = 0x2033;\n    t['secondtonechinese'] = 0x02CA;\n    t['section'] = 0x00A7;\n    t['seenarabic'] = 0x0633;\n    t['seenfinalarabic'] = 0xFEB2;\n    t['seeninitialarabic'] = 0xFEB3;\n    t['seenmedialarabic'] = 0xFEB4;\n    t['segol'] = 0x05B6;\n    t['segol13'] = 0x05B6;\n    t['segol1f'] = 0x05B6;\n    t['segol2c'] = 0x05B6;\n    t['segolhebrew'] = 0x05B6;\n    t['segolnarrowhebrew'] = 0x05B6;\n    t['segolquarterhebrew'] = 0x05B6;\n    t['segoltahebrew'] = 0x0592;\n    t['segolwidehebrew'] = 0x05B6;\n    t['seharmenian'] = 0x057D;\n    t['sehiragana'] = 0x305B;\n    t['sekatakana'] = 0x30BB;\n    t['sekatakanahalfwidth'] = 0xFF7E;\n    t['semicolon'] = 0x003B;\n    t['semicolonarabic'] = 0x061B;\n    t['semicolonmonospace'] = 0xFF1B;\n    t['semicolonsmall'] = 0xFE54;\n    t['semivoicedmarkkana'] = 0x309C;\n    t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\n    t['sentisquare'] = 0x3322;\n    t['sentosquare'] = 0x3323;\n    t['seven'] = 0x0037;\n    t['sevenarabic'] = 0x0667;\n    t['sevenbengali'] = 0x09ED;\n    t['sevencircle'] = 0x2466;\n    t['sevencircleinversesansserif'] = 0x2790;\n    t['sevendeva'] = 0x096D;\n    t['seveneighths'] = 0x215E;\n    t['sevengujarati'] = 0x0AED;\n    t['sevengurmukhi'] = 0x0A6D;\n    t['sevenhackarabic'] = 0x0667;\n    t['sevenhangzhou'] = 0x3027;\n    t['sevenideographicparen'] = 0x3226;\n    t['seveninferior'] = 0x2087;\n    t['sevenmonospace'] = 0xFF17;\n    t['sevenoldstyle'] = 0xF737;\n    t['sevenparen'] = 0x247A;\n    t['sevenperiod'] = 0x248E;\n    t['sevenpersian'] = 0x06F7;\n    t['sevenroman'] = 0x2176;\n    t['sevensuperior'] = 0x2077;\n    t['seventeencircle'] = 0x2470;\n    t['seventeenparen'] = 0x2484;\n    t['seventeenperiod'] = 0x2498;\n    t['seventhai'] = 0x0E57;\n    t['sfthyphen'] = 0x00AD;\n    t['shaarmenian'] = 0x0577;\n    t['shabengali'] = 0x09B6;\n    t['shacyrillic'] = 0x0448;\n    t['shaddaarabic'] = 0x0651;\n    t['shaddadammaarabic'] = 0xFC61;\n    t['shaddadammatanarabic'] = 0xFC5E;\n    t['shaddafathaarabic'] = 0xFC60;\n    t['shaddakasraarabic'] = 0xFC62;\n    t['shaddakasratanarabic'] = 0xFC5F;\n    t['shade'] = 0x2592;\n    t['shadedark'] = 0x2593;\n    t['shadelight'] = 0x2591;\n    t['shademedium'] = 0x2592;\n    t['shadeva'] = 0x0936;\n    t['shagujarati'] = 0x0AB6;\n    t['shagurmukhi'] = 0x0A36;\n    t['shalshelethebrew'] = 0x0593;\n    t['shbopomofo'] = 0x3115;\n    t['shchacyrillic'] = 0x0449;\n    t['sheenarabic'] = 0x0634;\n    t['sheenfinalarabic'] = 0xFEB6;\n    t['sheeninitialarabic'] = 0xFEB7;\n    t['sheenmedialarabic'] = 0xFEB8;\n    t['sheicoptic'] = 0x03E3;\n    t['sheqel'] = 0x20AA;\n    t['sheqelhebrew'] = 0x20AA;\n    t['sheva'] = 0x05B0;\n    t['sheva115'] = 0x05B0;\n    t['sheva15'] = 0x05B0;\n    t['sheva22'] = 0x05B0;\n    t['sheva2e'] = 0x05B0;\n    t['shevahebrew'] = 0x05B0;\n    t['shevanarrowhebrew'] = 0x05B0;\n    t['shevaquarterhebrew'] = 0x05B0;\n    t['shevawidehebrew'] = 0x05B0;\n    t['shhacyrillic'] = 0x04BB;\n    t['shimacoptic'] = 0x03ED;\n    t['shin'] = 0x05E9;\n    t['shindagesh'] = 0xFB49;\n    t['shindageshhebrew'] = 0xFB49;\n    t['shindageshshindot'] = 0xFB2C;\n    t['shindageshshindothebrew'] = 0xFB2C;\n    t['shindageshsindot'] = 0xFB2D;\n    t['shindageshsindothebrew'] = 0xFB2D;\n    t['shindothebrew'] = 0x05C1;\n    t['shinhebrew'] = 0x05E9;\n    t['shinshindot'] = 0xFB2A;\n    t['shinshindothebrew'] = 0xFB2A;\n    t['shinsindot'] = 0xFB2B;\n    t['shinsindothebrew'] = 0xFB2B;\n    t['shook'] = 0x0282;\n    t['sigma'] = 0x03C3;\n    t['sigma1'] = 0x03C2;\n    t['sigmafinal'] = 0x03C2;\n    t['sigmalunatesymbolgreek'] = 0x03F2;\n    t['sihiragana'] = 0x3057;\n    t['sikatakana'] = 0x30B7;\n    t['sikatakanahalfwidth'] = 0xFF7C;\n    t['siluqhebrew'] = 0x05BD;\n    t['siluqlefthebrew'] = 0x05BD;\n    t['similar'] = 0x223C;\n    t['sindothebrew'] = 0x05C2;\n    t['siosacirclekorean'] = 0x3274;\n    t['siosaparenkorean'] = 0x3214;\n    t['sioscieuckorean'] = 0x317E;\n    t['sioscirclekorean'] = 0x3266;\n    t['sioskiyeokkorean'] = 0x317A;\n    t['sioskorean'] = 0x3145;\n    t['siosnieunkorean'] = 0x317B;\n    t['siosparenkorean'] = 0x3206;\n    t['siospieupkorean'] = 0x317D;\n    t['siostikeutkorean'] = 0x317C;\n    t['six'] = 0x0036;\n    t['sixarabic'] = 0x0666;\n    t['sixbengali'] = 0x09EC;\n    t['sixcircle'] = 0x2465;\n    t['sixcircleinversesansserif'] = 0x278F;\n    t['sixdeva'] = 0x096C;\n    t['sixgujarati'] = 0x0AEC;\n    t['sixgurmukhi'] = 0x0A6C;\n    t['sixhackarabic'] = 0x0666;\n    t['sixhangzhou'] = 0x3026;\n    t['sixideographicparen'] = 0x3225;\n    t['sixinferior'] = 0x2086;\n    t['sixmonospace'] = 0xFF16;\n    t['sixoldstyle'] = 0xF736;\n    t['sixparen'] = 0x2479;\n    t['sixperiod'] = 0x248D;\n    t['sixpersian'] = 0x06F6;\n    t['sixroman'] = 0x2175;\n    t['sixsuperior'] = 0x2076;\n    t['sixteencircle'] = 0x246F;\n    t['sixteencurrencydenominatorbengali'] = 0x09F9;\n    t['sixteenparen'] = 0x2483;\n    t['sixteenperiod'] = 0x2497;\n    t['sixthai'] = 0x0E56;\n    t['slash'] = 0x002F;\n    t['slashmonospace'] = 0xFF0F;\n    t['slong'] = 0x017F;\n    t['slongdotaccent'] = 0x1E9B;\n    t['smileface'] = 0x263A;\n    t['smonospace'] = 0xFF53;\n    t['sofpasuqhebrew'] = 0x05C3;\n    t['softhyphen'] = 0x00AD;\n    t['softsigncyrillic'] = 0x044C;\n    t['sohiragana'] = 0x305D;\n    t['sokatakana'] = 0x30BD;\n    t['sokatakanahalfwidth'] = 0xFF7F;\n    t['soliduslongoverlaycmb'] = 0x0338;\n    t['solidusshortoverlaycmb'] = 0x0337;\n    t['sorusithai'] = 0x0E29;\n    t['sosalathai'] = 0x0E28;\n    t['sosothai'] = 0x0E0B;\n    t['sosuathai'] = 0x0E2A;\n    t['space'] = 0x0020;\n    t['spacehackarabic'] = 0x0020;\n    t['spade'] = 0x2660;\n    t['spadesuitblack'] = 0x2660;\n    t['spadesuitwhite'] = 0x2664;\n    t['sparen'] = 0x24AE;\n    t['squarebelowcmb'] = 0x033B;\n    t['squarecc'] = 0x33C4;\n    t['squarecm'] = 0x339D;\n    t['squarediagonalcrosshatchfill'] = 0x25A9;\n    t['squarehorizontalfill'] = 0x25A4;\n    t['squarekg'] = 0x338F;\n    t['squarekm'] = 0x339E;\n    t['squarekmcapital'] = 0x33CE;\n    t['squareln'] = 0x33D1;\n    t['squarelog'] = 0x33D2;\n    t['squaremg'] = 0x338E;\n    t['squaremil'] = 0x33D5;\n    t['squaremm'] = 0x339C;\n    t['squaremsquared'] = 0x33A1;\n    t['squareorthogonalcrosshatchfill'] = 0x25A6;\n    t['squareupperlefttolowerrightfill'] = 0x25A7;\n    t['squareupperrighttolowerleftfill'] = 0x25A8;\n    t['squareverticalfill'] = 0x25A5;\n    t['squarewhitewithsmallblack'] = 0x25A3;\n    t['srsquare'] = 0x33DB;\n    t['ssabengali'] = 0x09B7;\n    t['ssadeva'] = 0x0937;\n    t['ssagujarati'] = 0x0AB7;\n    t['ssangcieuckorean'] = 0x3149;\n    t['ssanghieuhkorean'] = 0x3185;\n    t['ssangieungkorean'] = 0x3180;\n    t['ssangkiyeokkorean'] = 0x3132;\n    t['ssangnieunkorean'] = 0x3165;\n    t['ssangpieupkorean'] = 0x3143;\n    t['ssangsioskorean'] = 0x3146;\n    t['ssangtikeutkorean'] = 0x3138;\n    t['ssuperior'] = 0xF6F2;\n    t['sterling'] = 0x00A3;\n    t['sterlingmonospace'] = 0xFFE1;\n    t['strokelongoverlaycmb'] = 0x0336;\n    t['strokeshortoverlaycmb'] = 0x0335;\n    t['subset'] = 0x2282;\n    t['subsetnotequal'] = 0x228A;\n    t['subsetorequal'] = 0x2286;\n    t['succeeds'] = 0x227B;\n    t['suchthat'] = 0x220B;\n    t['suhiragana'] = 0x3059;\n    t['sukatakana'] = 0x30B9;\n    t['sukatakanahalfwidth'] = 0xFF7D;\n    t['sukunarabic'] = 0x0652;\n    t['summation'] = 0x2211;\n    t['sun'] = 0x263C;\n    t['superset'] = 0x2283;\n    t['supersetnotequal'] = 0x228B;\n    t['supersetorequal'] = 0x2287;\n    t['svsquare'] = 0x33DC;\n    t['syouwaerasquare'] = 0x337C;\n    t['t'] = 0x0074;\n    t['tabengali'] = 0x09A4;\n    t['tackdown'] = 0x22A4;\n    t['tackleft'] = 0x22A3;\n    t['tadeva'] = 0x0924;\n    t['tagujarati'] = 0x0AA4;\n    t['tagurmukhi'] = 0x0A24;\n    t['taharabic'] = 0x0637;\n    t['tahfinalarabic'] = 0xFEC2;\n    t['tahinitialarabic'] = 0xFEC3;\n    t['tahiragana'] = 0x305F;\n    t['tahmedialarabic'] = 0xFEC4;\n    t['taisyouerasquare'] = 0x337D;\n    t['takatakana'] = 0x30BF;\n    t['takatakanahalfwidth'] = 0xFF80;\n    t['tatweelarabic'] = 0x0640;\n    t['tau'] = 0x03C4;\n    t['tav'] = 0x05EA;\n    t['tavdages'] = 0xFB4A;\n    t['tavdagesh'] = 0xFB4A;\n    t['tavdageshhebrew'] = 0xFB4A;\n    t['tavhebrew'] = 0x05EA;\n    t['tbar'] = 0x0167;\n    t['tbopomofo'] = 0x310A;\n    t['tcaron'] = 0x0165;\n    t['tccurl'] = 0x02A8;\n    t['tcedilla'] = 0x0163;\n    t['tcheharabic'] = 0x0686;\n    t['tchehfinalarabic'] = 0xFB7B;\n    t['tchehinitialarabic'] = 0xFB7C;\n    t['tchehmedialarabic'] = 0xFB7D;\n    t['tcircle'] = 0x24E3;\n    t['tcircumflexbelow'] = 0x1E71;\n    t['tcommaaccent'] = 0x0163;\n    t['tdieresis'] = 0x1E97;\n    t['tdotaccent'] = 0x1E6B;\n    t['tdotbelow'] = 0x1E6D;\n    t['tecyrillic'] = 0x0442;\n    t['tedescendercyrillic'] = 0x04AD;\n    t['teharabic'] = 0x062A;\n    t['tehfinalarabic'] = 0xFE96;\n    t['tehhahinitialarabic'] = 0xFCA2;\n    t['tehhahisolatedarabic'] = 0xFC0C;\n    t['tehinitialarabic'] = 0xFE97;\n    t['tehiragana'] = 0x3066;\n    t['tehjeeminitialarabic'] = 0xFCA1;\n    t['tehjeemisolatedarabic'] = 0xFC0B;\n    t['tehmarbutaarabic'] = 0x0629;\n    t['tehmarbutafinalarabic'] = 0xFE94;\n    t['tehmedialarabic'] = 0xFE98;\n    t['tehmeeminitialarabic'] = 0xFCA4;\n    t['tehmeemisolatedarabic'] = 0xFC0E;\n    t['tehnoonfinalarabic'] = 0xFC73;\n    t['tekatakana'] = 0x30C6;\n    t['tekatakanahalfwidth'] = 0xFF83;\n    t['telephone'] = 0x2121;\n    t['telephoneblack'] = 0x260E;\n    t['telishagedolahebrew'] = 0x05A0;\n    t['telishaqetanahebrew'] = 0x05A9;\n    t['tencircle'] = 0x2469;\n    t['tenideographicparen'] = 0x3229;\n    t['tenparen'] = 0x247D;\n    t['tenperiod'] = 0x2491;\n    t['tenroman'] = 0x2179;\n    t['tesh'] = 0x02A7;\n    t['tet'] = 0x05D8;\n    t['tetdagesh'] = 0xFB38;\n    t['tetdageshhebrew'] = 0xFB38;\n    t['tethebrew'] = 0x05D8;\n    t['tetsecyrillic'] = 0x04B5;\n    t['tevirhebrew'] = 0x059B;\n    t['tevirlefthebrew'] = 0x059B;\n    t['thabengali'] = 0x09A5;\n    t['thadeva'] = 0x0925;\n    t['thagujarati'] = 0x0AA5;\n    t['thagurmukhi'] = 0x0A25;\n    t['thalarabic'] = 0x0630;\n    t['thalfinalarabic'] = 0xFEAC;\n    t['thanthakhatlowleftthai'] = 0xF898;\n    t['thanthakhatlowrightthai'] = 0xF897;\n    t['thanthakhatthai'] = 0x0E4C;\n    t['thanthakhatupperleftthai'] = 0xF896;\n    t['theharabic'] = 0x062B;\n    t['thehfinalarabic'] = 0xFE9A;\n    t['thehinitialarabic'] = 0xFE9B;\n    t['thehmedialarabic'] = 0xFE9C;\n    t['thereexists'] = 0x2203;\n    t['therefore'] = 0x2234;\n    t['theta'] = 0x03B8;\n    t['theta1'] = 0x03D1;\n    t['thetasymbolgreek'] = 0x03D1;\n    t['thieuthacirclekorean'] = 0x3279;\n    t['thieuthaparenkorean'] = 0x3219;\n    t['thieuthcirclekorean'] = 0x326B;\n    t['thieuthkorean'] = 0x314C;\n    t['thieuthparenkorean'] = 0x320B;\n    t['thirteencircle'] = 0x246C;\n    t['thirteenparen'] = 0x2480;\n    t['thirteenperiod'] = 0x2494;\n    t['thonangmonthothai'] = 0x0E11;\n    t['thook'] = 0x01AD;\n    t['thophuthaothai'] = 0x0E12;\n    t['thorn'] = 0x00FE;\n    t['thothahanthai'] = 0x0E17;\n    t['thothanthai'] = 0x0E10;\n    t['thothongthai'] = 0x0E18;\n    t['thothungthai'] = 0x0E16;\n    t['thousandcyrillic'] = 0x0482;\n    t['thousandsseparatorarabic'] = 0x066C;\n    t['thousandsseparatorpersian'] = 0x066C;\n    t['three'] = 0x0033;\n    t['threearabic'] = 0x0663;\n    t['threebengali'] = 0x09E9;\n    t['threecircle'] = 0x2462;\n    t['threecircleinversesansserif'] = 0x278C;\n    t['threedeva'] = 0x0969;\n    t['threeeighths'] = 0x215C;\n    t['threegujarati'] = 0x0AE9;\n    t['threegurmukhi'] = 0x0A69;\n    t['threehackarabic'] = 0x0663;\n    t['threehangzhou'] = 0x3023;\n    t['threeideographicparen'] = 0x3222;\n    t['threeinferior'] = 0x2083;\n    t['threemonospace'] = 0xFF13;\n    t['threenumeratorbengali'] = 0x09F6;\n    t['threeoldstyle'] = 0xF733;\n    t['threeparen'] = 0x2476;\n    t['threeperiod'] = 0x248A;\n    t['threepersian'] = 0x06F3;\n    t['threequarters'] = 0x00BE;\n    t['threequartersemdash'] = 0xF6DE;\n    t['threeroman'] = 0x2172;\n    t['threesuperior'] = 0x00B3;\n    t['threethai'] = 0x0E53;\n    t['thzsquare'] = 0x3394;\n    t['tihiragana'] = 0x3061;\n    t['tikatakana'] = 0x30C1;\n    t['tikatakanahalfwidth'] = 0xFF81;\n    t['tikeutacirclekorean'] = 0x3270;\n    t['tikeutaparenkorean'] = 0x3210;\n    t['tikeutcirclekorean'] = 0x3262;\n    t['tikeutkorean'] = 0x3137;\n    t['tikeutparenkorean'] = 0x3202;\n    t['tilde'] = 0x02DC;\n    t['tildebelowcmb'] = 0x0330;\n    t['tildecmb'] = 0x0303;\n    t['tildecomb'] = 0x0303;\n    t['tildedoublecmb'] = 0x0360;\n    t['tildeoperator'] = 0x223C;\n    t['tildeoverlaycmb'] = 0x0334;\n    t['tildeverticalcmb'] = 0x033E;\n    t['timescircle'] = 0x2297;\n    t['tipehahebrew'] = 0x0596;\n    t['tipehalefthebrew'] = 0x0596;\n    t['tippigurmukhi'] = 0x0A70;\n    t['titlocyrilliccmb'] = 0x0483;\n    t['tiwnarmenian'] = 0x057F;\n    t['tlinebelow'] = 0x1E6F;\n    t['tmonospace'] = 0xFF54;\n    t['toarmenian'] = 0x0569;\n    t['tohiragana'] = 0x3068;\n    t['tokatakana'] = 0x30C8;\n    t['tokatakanahalfwidth'] = 0xFF84;\n    t['tonebarextrahighmod'] = 0x02E5;\n    t['tonebarextralowmod'] = 0x02E9;\n    t['tonebarhighmod'] = 0x02E6;\n    t['tonebarlowmod'] = 0x02E8;\n    t['tonebarmidmod'] = 0x02E7;\n    t['tonefive'] = 0x01BD;\n    t['tonesix'] = 0x0185;\n    t['tonetwo'] = 0x01A8;\n    t['tonos'] = 0x0384;\n    t['tonsquare'] = 0x3327;\n    t['topatakthai'] = 0x0E0F;\n    t['tortoiseshellbracketleft'] = 0x3014;\n    t['tortoiseshellbracketleftsmall'] = 0xFE5D;\n    t['tortoiseshellbracketleftvertical'] = 0xFE39;\n    t['tortoiseshellbracketright'] = 0x3015;\n    t['tortoiseshellbracketrightsmall'] = 0xFE5E;\n    t['tortoiseshellbracketrightvertical'] = 0xFE3A;\n    t['totaothai'] = 0x0E15;\n    t['tpalatalhook'] = 0x01AB;\n    t['tparen'] = 0x24AF;\n    t['trademark'] = 0x2122;\n    t['trademarksans'] = 0xF8EA;\n    t['trademarkserif'] = 0xF6DB;\n    t['tretroflexhook'] = 0x0288;\n    t['triagdn'] = 0x25BC;\n    t['triaglf'] = 0x25C4;\n    t['triagrt'] = 0x25BA;\n    t['triagup'] = 0x25B2;\n    t['ts'] = 0x02A6;\n    t['tsadi'] = 0x05E6;\n    t['tsadidagesh'] = 0xFB46;\n    t['tsadidageshhebrew'] = 0xFB46;\n    t['tsadihebrew'] = 0x05E6;\n    t['tsecyrillic'] = 0x0446;\n    t['tsere'] = 0x05B5;\n    t['tsere12'] = 0x05B5;\n    t['tsere1e'] = 0x05B5;\n    t['tsere2b'] = 0x05B5;\n    t['tserehebrew'] = 0x05B5;\n    t['tserenarrowhebrew'] = 0x05B5;\n    t['tserequarterhebrew'] = 0x05B5;\n    t['tserewidehebrew'] = 0x05B5;\n    t['tshecyrillic'] = 0x045B;\n    t['tsuperior'] = 0xF6F3;\n    t['ttabengali'] = 0x099F;\n    t['ttadeva'] = 0x091F;\n    t['ttagujarati'] = 0x0A9F;\n    t['ttagurmukhi'] = 0x0A1F;\n    t['tteharabic'] = 0x0679;\n    t['ttehfinalarabic'] = 0xFB67;\n    t['ttehinitialarabic'] = 0xFB68;\n    t['ttehmedialarabic'] = 0xFB69;\n    t['tthabengali'] = 0x09A0;\n    t['tthadeva'] = 0x0920;\n    t['tthagujarati'] = 0x0AA0;\n    t['tthagurmukhi'] = 0x0A20;\n    t['tturned'] = 0x0287;\n    t['tuhiragana'] = 0x3064;\n    t['tukatakana'] = 0x30C4;\n    t['tukatakanahalfwidth'] = 0xFF82;\n    t['tusmallhiragana'] = 0x3063;\n    t['tusmallkatakana'] = 0x30C3;\n    t['tusmallkatakanahalfwidth'] = 0xFF6F;\n    t['twelvecircle'] = 0x246B;\n    t['twelveparen'] = 0x247F;\n    t['twelveperiod'] = 0x2493;\n    t['twelveroman'] = 0x217B;\n    t['twentycircle'] = 0x2473;\n    t['twentyhangzhou'] = 0x5344;\n    t['twentyparen'] = 0x2487;\n    t['twentyperiod'] = 0x249B;\n    t['two'] = 0x0032;\n    t['twoarabic'] = 0x0662;\n    t['twobengali'] = 0x09E8;\n    t['twocircle'] = 0x2461;\n    t['twocircleinversesansserif'] = 0x278B;\n    t['twodeva'] = 0x0968;\n    t['twodotenleader'] = 0x2025;\n    t['twodotleader'] = 0x2025;\n    t['twodotleadervertical'] = 0xFE30;\n    t['twogujarati'] = 0x0AE8;\n    t['twogurmukhi'] = 0x0A68;\n    t['twohackarabic'] = 0x0662;\n    t['twohangzhou'] = 0x3022;\n    t['twoideographicparen'] = 0x3221;\n    t['twoinferior'] = 0x2082;\n    t['twomonospace'] = 0xFF12;\n    t['twonumeratorbengali'] = 0x09F5;\n    t['twooldstyle'] = 0xF732;\n    t['twoparen'] = 0x2475;\n    t['twoperiod'] = 0x2489;\n    t['twopersian'] = 0x06F2;\n    t['tworoman'] = 0x2171;\n    t['twostroke'] = 0x01BB;\n    t['twosuperior'] = 0x00B2;\n    t['twothai'] = 0x0E52;\n    t['twothirds'] = 0x2154;\n    t['u'] = 0x0075;\n    t['uacute'] = 0x00FA;\n    t['ubar'] = 0x0289;\n    t['ubengali'] = 0x0989;\n    t['ubopomofo'] = 0x3128;\n    t['ubreve'] = 0x016D;\n    t['ucaron'] = 0x01D4;\n    t['ucircle'] = 0x24E4;\n    t['ucircumflex'] = 0x00FB;\n    t['ucircumflexbelow'] = 0x1E77;\n    t['ucyrillic'] = 0x0443;\n    t['udattadeva'] = 0x0951;\n    t['udblacute'] = 0x0171;\n    t['udblgrave'] = 0x0215;\n    t['udeva'] = 0x0909;\n    t['udieresis'] = 0x00FC;\n    t['udieresisacute'] = 0x01D8;\n    t['udieresisbelow'] = 0x1E73;\n    t['udieresiscaron'] = 0x01DA;\n    t['udieresiscyrillic'] = 0x04F1;\n    t['udieresisgrave'] = 0x01DC;\n    t['udieresismacron'] = 0x01D6;\n    t['udotbelow'] = 0x1EE5;\n    t['ugrave'] = 0x00F9;\n    t['ugujarati'] = 0x0A89;\n    t['ugurmukhi'] = 0x0A09;\n    t['uhiragana'] = 0x3046;\n    t['uhookabove'] = 0x1EE7;\n    t['uhorn'] = 0x01B0;\n    t['uhornacute'] = 0x1EE9;\n    t['uhorndotbelow'] = 0x1EF1;\n    t['uhorngrave'] = 0x1EEB;\n    t['uhornhookabove'] = 0x1EED;\n    t['uhorntilde'] = 0x1EEF;\n    t['uhungarumlaut'] = 0x0171;\n    t['uhungarumlautcyrillic'] = 0x04F3;\n    t['uinvertedbreve'] = 0x0217;\n    t['ukatakana'] = 0x30A6;\n    t['ukatakanahalfwidth'] = 0xFF73;\n    t['ukcyrillic'] = 0x0479;\n    t['ukorean'] = 0x315C;\n    t['umacron'] = 0x016B;\n    t['umacroncyrillic'] = 0x04EF;\n    t['umacrondieresis'] = 0x1E7B;\n    t['umatragurmukhi'] = 0x0A41;\n    t['umonospace'] = 0xFF55;\n    t['underscore'] = 0x005F;\n    t['underscoredbl'] = 0x2017;\n    t['underscoremonospace'] = 0xFF3F;\n    t['underscorevertical'] = 0xFE33;\n    t['underscorewavy'] = 0xFE4F;\n    t['union'] = 0x222A;\n    t['universal'] = 0x2200;\n    t['uogonek'] = 0x0173;\n    t['uparen'] = 0x24B0;\n    t['upblock'] = 0x2580;\n    t['upperdothebrew'] = 0x05C4;\n    t['upsilon'] = 0x03C5;\n    t['upsilondieresis'] = 0x03CB;\n    t['upsilondieresistonos'] = 0x03B0;\n    t['upsilonlatin'] = 0x028A;\n    t['upsilontonos'] = 0x03CD;\n    t['uptackbelowcmb'] = 0x031D;\n    t['uptackmod'] = 0x02D4;\n    t['uragurmukhi'] = 0x0A73;\n    t['uring'] = 0x016F;\n    t['ushortcyrillic'] = 0x045E;\n    t['usmallhiragana'] = 0x3045;\n    t['usmallkatakana'] = 0x30A5;\n    t['usmallkatakanahalfwidth'] = 0xFF69;\n    t['ustraightcyrillic'] = 0x04AF;\n    t['ustraightstrokecyrillic'] = 0x04B1;\n    t['utilde'] = 0x0169;\n    t['utildeacute'] = 0x1E79;\n    t['utildebelow'] = 0x1E75;\n    t['uubengali'] = 0x098A;\n    t['uudeva'] = 0x090A;\n    t['uugujarati'] = 0x0A8A;\n    t['uugurmukhi'] = 0x0A0A;\n    t['uumatragurmukhi'] = 0x0A42;\n    t['uuvowelsignbengali'] = 0x09C2;\n    t['uuvowelsigndeva'] = 0x0942;\n    t['uuvowelsigngujarati'] = 0x0AC2;\n    t['uvowelsignbengali'] = 0x09C1;\n    t['uvowelsigndeva'] = 0x0941;\n    t['uvowelsigngujarati'] = 0x0AC1;\n    t['v'] = 0x0076;\n    t['vadeva'] = 0x0935;\n    t['vagujarati'] = 0x0AB5;\n    t['vagurmukhi'] = 0x0A35;\n    t['vakatakana'] = 0x30F7;\n    t['vav'] = 0x05D5;\n    t['vavdagesh'] = 0xFB35;\n    t['vavdagesh65'] = 0xFB35;\n    t['vavdageshhebrew'] = 0xFB35;\n    t['vavhebrew'] = 0x05D5;\n    t['vavholam'] = 0xFB4B;\n    t['vavholamhebrew'] = 0xFB4B;\n    t['vavvavhebrew'] = 0x05F0;\n    t['vavyodhebrew'] = 0x05F1;\n    t['vcircle'] = 0x24E5;\n    t['vdotbelow'] = 0x1E7F;\n    t['vecyrillic'] = 0x0432;\n    t['veharabic'] = 0x06A4;\n    t['vehfinalarabic'] = 0xFB6B;\n    t['vehinitialarabic'] = 0xFB6C;\n    t['vehmedialarabic'] = 0xFB6D;\n    t['vekatakana'] = 0x30F9;\n    t['venus'] = 0x2640;\n    t['verticalbar'] = 0x007C;\n    t['verticallineabovecmb'] = 0x030D;\n    t['verticallinebelowcmb'] = 0x0329;\n    t['verticallinelowmod'] = 0x02CC;\n    t['verticallinemod'] = 0x02C8;\n    t['vewarmenian'] = 0x057E;\n    t['vhook'] = 0x028B;\n    t['vikatakana'] = 0x30F8;\n    t['viramabengali'] = 0x09CD;\n    t['viramadeva'] = 0x094D;\n    t['viramagujarati'] = 0x0ACD;\n    t['visargabengali'] = 0x0983;\n    t['visargadeva'] = 0x0903;\n    t['visargagujarati'] = 0x0A83;\n    t['vmonospace'] = 0xFF56;\n    t['voarmenian'] = 0x0578;\n    t['voicediterationhiragana'] = 0x309E;\n    t['voicediterationkatakana'] = 0x30FE;\n    t['voicedmarkkana'] = 0x309B;\n    t['voicedmarkkanahalfwidth'] = 0xFF9E;\n    t['vokatakana'] = 0x30FA;\n    t['vparen'] = 0x24B1;\n    t['vtilde'] = 0x1E7D;\n    t['vturned'] = 0x028C;\n    t['vuhiragana'] = 0x3094;\n    t['vukatakana'] = 0x30F4;\n    t['w'] = 0x0077;\n    t['wacute'] = 0x1E83;\n    t['waekorean'] = 0x3159;\n    t['wahiragana'] = 0x308F;\n    t['wakatakana'] = 0x30EF;\n    t['wakatakanahalfwidth'] = 0xFF9C;\n    t['wakorean'] = 0x3158;\n    t['wasmallhiragana'] = 0x308E;\n    t['wasmallkatakana'] = 0x30EE;\n    t['wattosquare'] = 0x3357;\n    t['wavedash'] = 0x301C;\n    t['wavyunderscorevertical'] = 0xFE34;\n    t['wawarabic'] = 0x0648;\n    t['wawfinalarabic'] = 0xFEEE;\n    t['wawhamzaabovearabic'] = 0x0624;\n    t['wawhamzaabovefinalarabic'] = 0xFE86;\n    t['wbsquare'] = 0x33DD;\n    t['wcircle'] = 0x24E6;\n    t['wcircumflex'] = 0x0175;\n    t['wdieresis'] = 0x1E85;\n    t['wdotaccent'] = 0x1E87;\n    t['wdotbelow'] = 0x1E89;\n    t['wehiragana'] = 0x3091;\n    t['weierstrass'] = 0x2118;\n    t['wekatakana'] = 0x30F1;\n    t['wekorean'] = 0x315E;\n    t['weokorean'] = 0x315D;\n    t['wgrave'] = 0x1E81;\n    t['whitebullet'] = 0x25E6;\n    t['whitecircle'] = 0x25CB;\n    t['whitecircleinverse'] = 0x25D9;\n    t['whitecornerbracketleft'] = 0x300E;\n    t['whitecornerbracketleftvertical'] = 0xFE43;\n    t['whitecornerbracketright'] = 0x300F;\n    t['whitecornerbracketrightvertical'] = 0xFE44;\n    t['whitediamond'] = 0x25C7;\n    t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\n    t['whitedownpointingsmalltriangle'] = 0x25BF;\n    t['whitedownpointingtriangle'] = 0x25BD;\n    t['whiteleftpointingsmalltriangle'] = 0x25C3;\n    t['whiteleftpointingtriangle'] = 0x25C1;\n    t['whitelenticularbracketleft'] = 0x3016;\n    t['whitelenticularbracketright'] = 0x3017;\n    t['whiterightpointingsmalltriangle'] = 0x25B9;\n    t['whiterightpointingtriangle'] = 0x25B7;\n    t['whitesmallsquare'] = 0x25AB;\n    t['whitesmilingface'] = 0x263A;\n    t['whitesquare'] = 0x25A1;\n    t['whitestar'] = 0x2606;\n    t['whitetelephone'] = 0x260F;\n    t['whitetortoiseshellbracketleft'] = 0x3018;\n    t['whitetortoiseshellbracketright'] = 0x3019;\n    t['whiteuppointingsmalltriangle'] = 0x25B5;\n    t['whiteuppointingtriangle'] = 0x25B3;\n    t['wihiragana'] = 0x3090;\n    t['wikatakana'] = 0x30F0;\n    t['wikorean'] = 0x315F;\n    t['wmonospace'] = 0xFF57;\n    t['wohiragana'] = 0x3092;\n    t['wokatakana'] = 0x30F2;\n    t['wokatakanahalfwidth'] = 0xFF66;\n    t['won'] = 0x20A9;\n    t['wonmonospace'] = 0xFFE6;\n    t['wowaenthai'] = 0x0E27;\n    t['wparen'] = 0x24B2;\n    t['wring'] = 0x1E98;\n    t['wsuperior'] = 0x02B7;\n    t['wturned'] = 0x028D;\n    t['wynn'] = 0x01BF;\n    t['x'] = 0x0078;\n    t['xabovecmb'] = 0x033D;\n    t['xbopomofo'] = 0x3112;\n    t['xcircle'] = 0x24E7;\n    t['xdieresis'] = 0x1E8D;\n    t['xdotaccent'] = 0x1E8B;\n    t['xeharmenian'] = 0x056D;\n    t['xi'] = 0x03BE;\n    t['xmonospace'] = 0xFF58;\n    t['xparen'] = 0x24B3;\n    t['xsuperior'] = 0x02E3;\n    t['y'] = 0x0079;\n    t['yaadosquare'] = 0x334E;\n    t['yabengali'] = 0x09AF;\n    t['yacute'] = 0x00FD;\n    t['yadeva'] = 0x092F;\n    t['yaekorean'] = 0x3152;\n    t['yagujarati'] = 0x0AAF;\n    t['yagurmukhi'] = 0x0A2F;\n    t['yahiragana'] = 0x3084;\n    t['yakatakana'] = 0x30E4;\n    t['yakatakanahalfwidth'] = 0xFF94;\n    t['yakorean'] = 0x3151;\n    t['yamakkanthai'] = 0x0E4E;\n    t['yasmallhiragana'] = 0x3083;\n    t['yasmallkatakana'] = 0x30E3;\n    t['yasmallkatakanahalfwidth'] = 0xFF6C;\n    t['yatcyrillic'] = 0x0463;\n    t['ycircle'] = 0x24E8;\n    t['ycircumflex'] = 0x0177;\n    t['ydieresis'] = 0x00FF;\n    t['ydotaccent'] = 0x1E8F;\n    t['ydotbelow'] = 0x1EF5;\n    t['yeharabic'] = 0x064A;\n    t['yehbarreearabic'] = 0x06D2;\n    t['yehbarreefinalarabic'] = 0xFBAF;\n    t['yehfinalarabic'] = 0xFEF2;\n    t['yehhamzaabovearabic'] = 0x0626;\n    t['yehhamzaabovefinalarabic'] = 0xFE8A;\n    t['yehhamzaaboveinitialarabic'] = 0xFE8B;\n    t['yehhamzaabovemedialarabic'] = 0xFE8C;\n    t['yehinitialarabic'] = 0xFEF3;\n    t['yehmedialarabic'] = 0xFEF4;\n    t['yehmeeminitialarabic'] = 0xFCDD;\n    t['yehmeemisolatedarabic'] = 0xFC58;\n    t['yehnoonfinalarabic'] = 0xFC94;\n    t['yehthreedotsbelowarabic'] = 0x06D1;\n    t['yekorean'] = 0x3156;\n    t['yen'] = 0x00A5;\n    t['yenmonospace'] = 0xFFE5;\n    t['yeokorean'] = 0x3155;\n    t['yeorinhieuhkorean'] = 0x3186;\n    t['yerahbenyomohebrew'] = 0x05AA;\n    t['yerahbenyomolefthebrew'] = 0x05AA;\n    t['yericyrillic'] = 0x044B;\n    t['yerudieresiscyrillic'] = 0x04F9;\n    t['yesieungkorean'] = 0x3181;\n    t['yesieungpansioskorean'] = 0x3183;\n    t['yesieungsioskorean'] = 0x3182;\n    t['yetivhebrew'] = 0x059A;\n    t['ygrave'] = 0x1EF3;\n    t['yhook'] = 0x01B4;\n    t['yhookabove'] = 0x1EF7;\n    t['yiarmenian'] = 0x0575;\n    t['yicyrillic'] = 0x0457;\n    t['yikorean'] = 0x3162;\n    t['yinyang'] = 0x262F;\n    t['yiwnarmenian'] = 0x0582;\n    t['ymonospace'] = 0xFF59;\n    t['yod'] = 0x05D9;\n    t['yoddagesh'] = 0xFB39;\n    t['yoddageshhebrew'] = 0xFB39;\n    t['yodhebrew'] = 0x05D9;\n    t['yodyodhebrew'] = 0x05F2;\n    t['yodyodpatahhebrew'] = 0xFB1F;\n    t['yohiragana'] = 0x3088;\n    t['yoikorean'] = 0x3189;\n    t['yokatakana'] = 0x30E8;\n    t['yokatakanahalfwidth'] = 0xFF96;\n    t['yokorean'] = 0x315B;\n    t['yosmallhiragana'] = 0x3087;\n    t['yosmallkatakana'] = 0x30E7;\n    t['yosmallkatakanahalfwidth'] = 0xFF6E;\n    t['yotgreek'] = 0x03F3;\n    t['yoyaekorean'] = 0x3188;\n    t['yoyakorean'] = 0x3187;\n    t['yoyakthai'] = 0x0E22;\n    t['yoyingthai'] = 0x0E0D;\n    t['yparen'] = 0x24B4;\n    t['ypogegrammeni'] = 0x037A;\n    t['ypogegrammenigreekcmb'] = 0x0345;\n    t['yr'] = 0x01A6;\n    t['yring'] = 0x1E99;\n    t['ysuperior'] = 0x02B8;\n    t['ytilde'] = 0x1EF9;\n    t['yturned'] = 0x028E;\n    t['yuhiragana'] = 0x3086;\n    t['yuikorean'] = 0x318C;\n    t['yukatakana'] = 0x30E6;\n    t['yukatakanahalfwidth'] = 0xFF95;\n    t['yukorean'] = 0x3160;\n    t['yusbigcyrillic'] = 0x046B;\n    t['yusbigiotifiedcyrillic'] = 0x046D;\n    t['yuslittlecyrillic'] = 0x0467;\n    t['yuslittleiotifiedcyrillic'] = 0x0469;\n    t['yusmallhiragana'] = 0x3085;\n    t['yusmallkatakana'] = 0x30E5;\n    t['yusmallkatakanahalfwidth'] = 0xFF6D;\n    t['yuyekorean'] = 0x318B;\n    t['yuyeokorean'] = 0x318A;\n    t['yyabengali'] = 0x09DF;\n    t['yyadeva'] = 0x095F;\n    t['z'] = 0x007A;\n    t['zaarmenian'] = 0x0566;\n    t['zacute'] = 0x017A;\n    t['zadeva'] = 0x095B;\n    t['zagurmukhi'] = 0x0A5B;\n    t['zaharabic'] = 0x0638;\n    t['zahfinalarabic'] = 0xFEC6;\n    t['zahinitialarabic'] = 0xFEC7;\n    t['zahiragana'] = 0x3056;\n    t['zahmedialarabic'] = 0xFEC8;\n    t['zainarabic'] = 0x0632;\n    t['zainfinalarabic'] = 0xFEB0;\n    t['zakatakana'] = 0x30B6;\n    t['zaqefgadolhebrew'] = 0x0595;\n    t['zaqefqatanhebrew'] = 0x0594;\n    t['zarqahebrew'] = 0x0598;\n    t['zayin'] = 0x05D6;\n    t['zayindagesh'] = 0xFB36;\n    t['zayindageshhebrew'] = 0xFB36;\n    t['zayinhebrew'] = 0x05D6;\n    t['zbopomofo'] = 0x3117;\n    t['zcaron'] = 0x017E;\n    t['zcircle'] = 0x24E9;\n    t['zcircumflex'] = 0x1E91;\n    t['zcurl'] = 0x0291;\n    t['zdot'] = 0x017C;\n    t['zdotaccent'] = 0x017C;\n    t['zdotbelow'] = 0x1E93;\n    t['zecyrillic'] = 0x0437;\n    t['zedescendercyrillic'] = 0x0499;\n    t['zedieresiscyrillic'] = 0x04DF;\n    t['zehiragana'] = 0x305C;\n    t['zekatakana'] = 0x30BC;\n    t['zero'] = 0x0030;\n    t['zeroarabic'] = 0x0660;\n    t['zerobengali'] = 0x09E6;\n    t['zerodeva'] = 0x0966;\n    t['zerogujarati'] = 0x0AE6;\n    t['zerogurmukhi'] = 0x0A66;\n    t['zerohackarabic'] = 0x0660;\n    t['zeroinferior'] = 0x2080;\n    t['zeromonospace'] = 0xFF10;\n    t['zerooldstyle'] = 0xF730;\n    t['zeropersian'] = 0x06F0;\n    t['zerosuperior'] = 0x2070;\n    t['zerothai'] = 0x0E50;\n    t['zerowidthjoiner'] = 0xFEFF;\n    t['zerowidthnonjoiner'] = 0x200C;\n    t['zerowidthspace'] = 0x200B;\n    t['zeta'] = 0x03B6;\n    t['zhbopomofo'] = 0x3113;\n    t['zhearmenian'] = 0x056A;\n    t['zhebrevecyrillic'] = 0x04C2;\n    t['zhecyrillic'] = 0x0436;\n    t['zhedescendercyrillic'] = 0x0497;\n    t['zhedieresiscyrillic'] = 0x04DD;\n    t['zihiragana'] = 0x3058;\n    t['zikatakana'] = 0x30B8;\n    t['zinorhebrew'] = 0x05AE;\n    t['zlinebelow'] = 0x1E95;\n    t['zmonospace'] = 0xFF5A;\n    t['zohiragana'] = 0x305E;\n    t['zokatakana'] = 0x30BE;\n    t['zparen'] = 0x24B5;\n    t['zretroflexhook'] = 0x0290;\n    t['zstroke'] = 0x01B6;\n    t['zuhiragana'] = 0x305A;\n    t['zukatakana'] = 0x30BA;\n    t['.notdef'] = 0x0000;\n    t['angbracketleftbig'] = 0x2329;\n    t['angbracketleftBig'] = 0x2329;\n    t['angbracketleftbigg'] = 0x2329;\n    t['angbracketleftBigg'] = 0x2329;\n    t['angbracketrightBig'] = 0x232A;\n    t['angbracketrightbig'] = 0x232A;\n    t['angbracketrightBigg'] = 0x232A;\n    t['angbracketrightbigg'] = 0x232A;\n    t['arrowhookleft'] = 0x21AA;\n    t['arrowhookright'] = 0x21A9;\n    t['arrowlefttophalf'] = 0x21BC;\n    t['arrowleftbothalf'] = 0x21BD;\n    t['arrownortheast'] = 0x2197;\n    t['arrownorthwest'] = 0x2196;\n    t['arrowrighttophalf'] = 0x21C0;\n    t['arrowrightbothalf'] = 0x21C1;\n    t['arrowsoutheast'] = 0x2198;\n    t['arrowsouthwest'] = 0x2199;\n    t['backslashbig'] = 0x2216;\n    t['backslashBig'] = 0x2216;\n    t['backslashBigg'] = 0x2216;\n    t['backslashbigg'] = 0x2216;\n    t['bardbl'] = 0x2016;\n    t['bracehtipdownleft'] = 0xFE37;\n    t['bracehtipdownright'] = 0xFE37;\n    t['bracehtipupleft'] = 0xFE38;\n    t['bracehtipupright'] = 0xFE38;\n    t['braceleftBig'] = 0x007B;\n    t['braceleftbig'] = 0x007B;\n    t['braceleftbigg'] = 0x007B;\n    t['braceleftBigg'] = 0x007B;\n    t['bracerightBig'] = 0x007D;\n    t['bracerightbig'] = 0x007D;\n    t['bracerightbigg'] = 0x007D;\n    t['bracerightBigg'] = 0x007D;\n    t['bracketleftbig'] = 0x005B;\n    t['bracketleftBig'] = 0x005B;\n    t['bracketleftbigg'] = 0x005B;\n    t['bracketleftBigg'] = 0x005B;\n    t['bracketrightBig'] = 0x005D;\n    t['bracketrightbig'] = 0x005D;\n    t['bracketrightbigg'] = 0x005D;\n    t['bracketrightBigg'] = 0x005D;\n    t['ceilingleftbig'] = 0x2308;\n    t['ceilingleftBig'] = 0x2308;\n    t['ceilingleftBigg'] = 0x2308;\n    t['ceilingleftbigg'] = 0x2308;\n    t['ceilingrightbig'] = 0x2309;\n    t['ceilingrightBig'] = 0x2309;\n    t['ceilingrightbigg'] = 0x2309;\n    t['ceilingrightBigg'] = 0x2309;\n    t['circledotdisplay'] = 0x2299;\n    t['circledottext'] = 0x2299;\n    t['circlemultiplydisplay'] = 0x2297;\n    t['circlemultiplytext'] = 0x2297;\n    t['circleplusdisplay'] = 0x2295;\n    t['circleplustext'] = 0x2295;\n    t['contintegraldisplay'] = 0x222E;\n    t['contintegraltext'] = 0x222E;\n    t['coproductdisplay'] = 0x2210;\n    t['coproducttext'] = 0x2210;\n    t['floorleftBig'] = 0x230A;\n    t['floorleftbig'] = 0x230A;\n    t['floorleftbigg'] = 0x230A;\n    t['floorleftBigg'] = 0x230A;\n    t['floorrightbig'] = 0x230B;\n    t['floorrightBig'] = 0x230B;\n    t['floorrightBigg'] = 0x230B;\n    t['floorrightbigg'] = 0x230B;\n    t['hatwide'] = 0x0302;\n    t['hatwider'] = 0x0302;\n    t['hatwidest'] = 0x0302;\n    t['intercal'] = 0x1D40;\n    t['integraldisplay'] = 0x222B;\n    t['integraltext'] = 0x222B;\n    t['intersectiondisplay'] = 0x22C2;\n    t['intersectiontext'] = 0x22C2;\n    t['logicalanddisplay'] = 0x2227;\n    t['logicalandtext'] = 0x2227;\n    t['logicalordisplay'] = 0x2228;\n    t['logicalortext'] = 0x2228;\n    t['parenleftBig'] = 0x0028;\n    t['parenleftbig'] = 0x0028;\n    t['parenleftBigg'] = 0x0028;\n    t['parenleftbigg'] = 0x0028;\n    t['parenrightBig'] = 0x0029;\n    t['parenrightbig'] = 0x0029;\n    t['parenrightBigg'] = 0x0029;\n    t['parenrightbigg'] = 0x0029;\n    t['prime'] = 0x2032;\n    t['productdisplay'] = 0x220F;\n    t['producttext'] = 0x220F;\n    t['radicalbig'] = 0x221A;\n    t['radicalBig'] = 0x221A;\n    t['radicalBigg'] = 0x221A;\n    t['radicalbigg'] = 0x221A;\n    t['radicalbt'] = 0x221A;\n    t['radicaltp'] = 0x221A;\n    t['radicalvertex'] = 0x221A;\n    t['slashbig'] = 0x002F;\n    t['slashBig'] = 0x002F;\n    t['slashBigg'] = 0x002F;\n    t['slashbigg'] = 0x002F;\n    t['summationdisplay'] = 0x2211;\n    t['summationtext'] = 0x2211;\n    t['tildewide'] = 0x02DC;\n    t['tildewider'] = 0x02DC;\n    t['tildewidest'] = 0x02DC;\n    t['uniondisplay'] = 0x22C3;\n    t['unionmultidisplay'] = 0x228E;\n    t['unionmultitext'] = 0x228E;\n    t['unionsqdisplay'] = 0x2294;\n    t['unionsqtext'] = 0x2294;\n    t['uniontext'] = 0x22C3;\n    t['vextenddouble'] = 0x2225;\n    t['vextendsingle'] = 0x2223;\n   });\n   var getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n    t['space'] = 0x0020;\n    t['a1'] = 0x2701;\n    t['a2'] = 0x2702;\n    t['a202'] = 0x2703;\n    t['a3'] = 0x2704;\n    t['a4'] = 0x260E;\n    t['a5'] = 0x2706;\n    t['a119'] = 0x2707;\n    t['a118'] = 0x2708;\n    t['a117'] = 0x2709;\n    t['a11'] = 0x261B;\n    t['a12'] = 0x261E;\n    t['a13'] = 0x270C;\n    t['a14'] = 0x270D;\n    t['a15'] = 0x270E;\n    t['a16'] = 0x270F;\n    t['a105'] = 0x2710;\n    t['a17'] = 0x2711;\n    t['a18'] = 0x2712;\n    t['a19'] = 0x2713;\n    t['a20'] = 0x2714;\n    t['a21'] = 0x2715;\n    t['a22'] = 0x2716;\n    t['a23'] = 0x2717;\n    t['a24'] = 0x2718;\n    t['a25'] = 0x2719;\n    t['a26'] = 0x271A;\n    t['a27'] = 0x271B;\n    t['a28'] = 0x271C;\n    t['a6'] = 0x271D;\n    t['a7'] = 0x271E;\n    t['a8'] = 0x271F;\n    t['a9'] = 0x2720;\n    t['a10'] = 0x2721;\n    t['a29'] = 0x2722;\n    t['a30'] = 0x2723;\n    t['a31'] = 0x2724;\n    t['a32'] = 0x2725;\n    t['a33'] = 0x2726;\n    t['a34'] = 0x2727;\n    t['a35'] = 0x2605;\n    t['a36'] = 0x2729;\n    t['a37'] = 0x272A;\n    t['a38'] = 0x272B;\n    t['a39'] = 0x272C;\n    t['a40'] = 0x272D;\n    t['a41'] = 0x272E;\n    t['a42'] = 0x272F;\n    t['a43'] = 0x2730;\n    t['a44'] = 0x2731;\n    t['a45'] = 0x2732;\n    t['a46'] = 0x2733;\n    t['a47'] = 0x2734;\n    t['a48'] = 0x2735;\n    t['a49'] = 0x2736;\n    t['a50'] = 0x2737;\n    t['a51'] = 0x2738;\n    t['a52'] = 0x2739;\n    t['a53'] = 0x273A;\n    t['a54'] = 0x273B;\n    t['a55'] = 0x273C;\n    t['a56'] = 0x273D;\n    t['a57'] = 0x273E;\n    t['a58'] = 0x273F;\n    t['a59'] = 0x2740;\n    t['a60'] = 0x2741;\n    t['a61'] = 0x2742;\n    t['a62'] = 0x2743;\n    t['a63'] = 0x2744;\n    t['a64'] = 0x2745;\n    t['a65'] = 0x2746;\n    t['a66'] = 0x2747;\n    t['a67'] = 0x2748;\n    t['a68'] = 0x2749;\n    t['a69'] = 0x274A;\n    t['a70'] = 0x274B;\n    t['a71'] = 0x25CF;\n    t['a72'] = 0x274D;\n    t['a73'] = 0x25A0;\n    t['a74'] = 0x274F;\n    t['a203'] = 0x2750;\n    t['a75'] = 0x2751;\n    t['a204'] = 0x2752;\n    t['a76'] = 0x25B2;\n    t['a77'] = 0x25BC;\n    t['a78'] = 0x25C6;\n    t['a79'] = 0x2756;\n    t['a81'] = 0x25D7;\n    t['a82'] = 0x2758;\n    t['a83'] = 0x2759;\n    t['a84'] = 0x275A;\n    t['a97'] = 0x275B;\n    t['a98'] = 0x275C;\n    t['a99'] = 0x275D;\n    t['a100'] = 0x275E;\n    t['a101'] = 0x2761;\n    t['a102'] = 0x2762;\n    t['a103'] = 0x2763;\n    t['a104'] = 0x2764;\n    t['a106'] = 0x2765;\n    t['a107'] = 0x2766;\n    t['a108'] = 0x2767;\n    t['a112'] = 0x2663;\n    t['a111'] = 0x2666;\n    t['a110'] = 0x2665;\n    t['a109'] = 0x2660;\n    t['a120'] = 0x2460;\n    t['a121'] = 0x2461;\n    t['a122'] = 0x2462;\n    t['a123'] = 0x2463;\n    t['a124'] = 0x2464;\n    t['a125'] = 0x2465;\n    t['a126'] = 0x2466;\n    t['a127'] = 0x2467;\n    t['a128'] = 0x2468;\n    t['a129'] = 0x2469;\n    t['a130'] = 0x2776;\n    t['a131'] = 0x2777;\n    t['a132'] = 0x2778;\n    t['a133'] = 0x2779;\n    t['a134'] = 0x277A;\n    t['a135'] = 0x277B;\n    t['a136'] = 0x277C;\n    t['a137'] = 0x277D;\n    t['a138'] = 0x277E;\n    t['a139'] = 0x277F;\n    t['a140'] = 0x2780;\n    t['a141'] = 0x2781;\n    t['a142'] = 0x2782;\n    t['a143'] = 0x2783;\n    t['a144'] = 0x2784;\n    t['a145'] = 0x2785;\n    t['a146'] = 0x2786;\n    t['a147'] = 0x2787;\n    t['a148'] = 0x2788;\n    t['a149'] = 0x2789;\n    t['a150'] = 0x278A;\n    t['a151'] = 0x278B;\n    t['a152'] = 0x278C;\n    t['a153'] = 0x278D;\n    t['a154'] = 0x278E;\n    t['a155'] = 0x278F;\n    t['a156'] = 0x2790;\n    t['a157'] = 0x2791;\n    t['a158'] = 0x2792;\n    t['a159'] = 0x2793;\n    t['a160'] = 0x2794;\n    t['a161'] = 0x2192;\n    t['a163'] = 0x2194;\n    t['a164'] = 0x2195;\n    t['a196'] = 0x2798;\n    t['a165'] = 0x2799;\n    t['a192'] = 0x279A;\n    t['a166'] = 0x279B;\n    t['a167'] = 0x279C;\n    t['a168'] = 0x279D;\n    t['a169'] = 0x279E;\n    t['a170'] = 0x279F;\n    t['a171'] = 0x27A0;\n    t['a172'] = 0x27A1;\n    t['a173'] = 0x27A2;\n    t['a162'] = 0x27A3;\n    t['a174'] = 0x27A4;\n    t['a175'] = 0x27A5;\n    t['a176'] = 0x27A6;\n    t['a177'] = 0x27A7;\n    t['a178'] = 0x27A8;\n    t['a179'] = 0x27A9;\n    t['a193'] = 0x27AA;\n    t['a180'] = 0x27AB;\n    t['a199'] = 0x27AC;\n    t['a181'] = 0x27AD;\n    t['a200'] = 0x27AE;\n    t['a182'] = 0x27AF;\n    t['a201'] = 0x27B1;\n    t['a183'] = 0x27B2;\n    t['a184'] = 0x27B3;\n    t['a197'] = 0x27B4;\n    t['a185'] = 0x27B5;\n    t['a194'] = 0x27B6;\n    t['a198'] = 0x27B7;\n    t['a186'] = 0x27B8;\n    t['a195'] = 0x27B9;\n    t['a187'] = 0x27BA;\n    t['a188'] = 0x27BB;\n    t['a189'] = 0x27BC;\n    t['a190'] = 0x27BD;\n    t['a191'] = 0x27BE;\n    t['a89'] = 0x2768;\n    t['a90'] = 0x2769;\n    t['a93'] = 0x276A;\n    t['a94'] = 0x276B;\n    t['a91'] = 0x276C;\n    t['a92'] = 0x276D;\n    t['a205'] = 0x276E;\n    t['a85'] = 0x276F;\n    t['a206'] = 0x2770;\n    t['a86'] = 0x2771;\n    t['a87'] = 0x2772;\n    t['a88'] = 0x2773;\n    t['a95'] = 0x2774;\n    t['a96'] = 0x2775;\n    t['.notdef'] = 0x0000;\n   });\n   exports.getGlyphsUnicode = getGlyphsUnicode;\n   exports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsCoreJbig2 = {}, root.pdfjsSharedUtil, root.pdfjsCoreArithmeticDecoder);\n  }(this, function (exports, sharedUtil, coreArithmeticDecoder) {\n   var error = sharedUtil.error;\n   var log2 = sharedUtil.log2;\n   var readInt8 = sharedUtil.readInt8;\n   var readUint16 = sharedUtil.readUint16;\n   var readUint32 = sharedUtil.readUint32;\n   var shadow = sharedUtil.shadow;\n   var ArithmeticDecoder = coreArithmeticDecoder.ArithmeticDecoder;\n   var Jbig2Image = function Jbig2ImageClosure() {\n    function ContextCache() {\n    }\n    ContextCache.prototype = {\n     getContexts: function (id) {\n      if (id in this) {\n       return this[id];\n      }\n      return this[id] = new Int8Array(1 << 16);\n     }\n    };\n    function DecodingContext(data, start, end) {\n     this.data = data;\n     this.start = start;\n     this.end = end;\n    }\n    DecodingContext.prototype = {\n     get decoder() {\n      var decoder = new ArithmeticDecoder(this.data, this.start, this.end);\n      return shadow(this, 'decoder', decoder);\n     },\n     get contextCache() {\n      var cache = new ContextCache();\n      return shadow(this, 'contextCache', cache);\n     }\n    };\n    function decodeInteger(contextCache, procedure, decoder) {\n     var contexts = contextCache.getContexts(procedure);\n     var prev = 1;\n     function readBits(length) {\n      var v = 0;\n      for (var i = 0; i < length; i++) {\n       var bit = decoder.readBit(contexts, prev);\n       prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n       v = v << 1 | bit;\n      }\n      return v >>> 0;\n     }\n     var sign = readBits(1);\n     var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n     return sign === 0 ? value : value > 0 ? -value : null;\n    }\n    function decodeIAID(contextCache, decoder, codeLength) {\n     var contexts = contextCache.getContexts('IAID');\n     var prev = 1;\n     for (var i = 0; i < codeLength; i++) {\n      var bit = decoder.readBit(contexts, prev);\n      prev = prev << 1 | bit;\n     }\n     if (codeLength < 31) {\n      return prev & (1 << codeLength) - 1;\n     }\n     return prev & 0x7FFFFFFF;\n    }\n    var SegmentTypes = [\n     'SymbolDictionary',\n     null,\n     null,\n     null,\n     'IntermediateTextRegion',\n     null,\n     'ImmediateTextRegion',\n     'ImmediateLosslessTextRegion',\n     null,\n     null,\n     null,\n     null,\n     null,\n     null,\n     null,\n     null,\n     'patternDictionary',\n     null,\n     null,\n     null,\n     'IntermediateHalftoneRegion',\n     null,\n     'ImmediateHalftoneRegion',\n     'ImmediateLosslessHalftoneRegion',\n     null,\n     null,\n     null,\n     null,\n     null,\n     null,\n     null,\n     null,\n     null,\n     null,\n     null,\n     null,\n     'IntermediateGenericRegion',\n     null,\n     'ImmediateGenericRegion',\n     'ImmediateLosslessGenericRegion',\n     'IntermediateGenericRefinementRegion',\n     null,\n     'ImmediateGenericRefinementRegion',\n     'ImmediateLosslessGenericRefinementRegion',\n     null,\n     null,\n     null,\n     null,\n     'PageInformation',\n     'EndOfPage',\n     'EndOfStripe',\n     'EndOfFile',\n     'Profiles',\n     'Tables',\n     null,\n     null,\n     null,\n     null,\n     null,\n     null,\n     null,\n     null,\n     'Extension'\n    ];\n    var CodingTemplates = [\n     [\n      {\n       x: -1,\n       y: -2\n      },\n      {\n       x: 0,\n       y: -2\n      },\n      {\n       x: 1,\n       y: -2\n      },\n      {\n       x: -2,\n       y: -1\n      },\n      {\n       x: -1,\n       y: -1\n      },\n      {\n       x: 0,\n       y: -1\n      },\n      {\n       x: 1,\n       y: -1\n      },\n      {\n       x: 2,\n       y: -1\n      },\n      {\n       x: -4,\n       y: 0\n      },\n      {\n       x: -3,\n       y: 0\n      },\n      {\n       x: -2,\n       y: 0\n      },\n      {\n       x: -1,\n       y: 0\n      }\n     ],\n     [\n      {\n       x: -1,\n       y: -2\n      },\n      {\n       x: 0,\n       y: -2\n      },\n      {\n       x: 1,\n       y: -2\n      },\n      {\n       x: 2,\n       y: -2\n      },\n      {\n       x: -2,\n       y: -1\n      },\n      {\n       x: -1,\n       y: -1\n      },\n      {\n       x: 0,\n       y: -1\n      },\n      {\n       x: 1,\n       y: -1\n      },\n      {\n       x: 2,\n       y: -1\n      },\n      {\n       x: -3,\n       y: 0\n      },\n      {\n       x: -2,\n       y: 0\n      },\n      {\n       x: -1,\n       y: 0\n      }\n     ],\n     [\n      {\n       x: -1,\n       y: -2\n      },\n      {\n       x: 0,\n       y: -2\n      },\n      {\n       x: 1,\n       y: -2\n      },\n      {\n       x: -2,\n       y: -1\n      },\n      {\n       x: -1,\n       y: -1\n      },\n      {\n       x: 0,\n       y: -1\n      },\n      {\n       x: 1,\n       y: -1\n      },\n      {\n       x: -2,\n       y: 0\n      },\n      {\n       x: -1,\n       y: 0\n      }\n     ],\n     [\n      {\n       x: -3,\n       y: -1\n      },\n      {\n       x: -2,\n       y: -1\n      },\n      {\n       x: -1,\n       y: -1\n      },\n      {\n       x: 0,\n       y: -1\n      },\n      {\n       x: 1,\n       y: -1\n      },\n      {\n       x: -4,\n       y: 0\n      },\n      {\n       x: -3,\n       y: 0\n      },\n      {\n       x: -2,\n       y: 0\n      },\n      {\n       x: -1,\n       y: 0\n      }\n     ]\n    ];\n    var RefinementTemplates = [\n     {\n      coding: [\n       {\n        x: 0,\n        y: -1\n       },\n       {\n        x: 1,\n        y: -1\n       },\n       {\n        x: -1,\n        y: 0\n       }\n      ],\n      reference: [\n       {\n        x: 0,\n        y: -1\n       },\n       {\n        x: 1,\n        y: -1\n       },\n       {\n        x: -1,\n        y: 0\n       },\n       {\n        x: 0,\n        y: 0\n       },\n       {\n        x: 1,\n        y: 0\n       },\n       {\n        x: -1,\n        y: 1\n       },\n       {\n        x: 0,\n        y: 1\n       },\n       {\n        x: 1,\n        y: 1\n       }\n      ]\n     },\n     {\n      coding: [\n       {\n        x: -1,\n        y: -1\n       },\n       {\n        x: 0,\n        y: -1\n       },\n       {\n        x: 1,\n        y: -1\n       },\n       {\n        x: -1,\n        y: 0\n       }\n      ],\n      reference: [\n       {\n        x: 0,\n        y: -1\n       },\n       {\n        x: -1,\n        y: 0\n       },\n       {\n        x: 0,\n        y: 0\n       },\n       {\n        x: 1,\n        y: 0\n       },\n       {\n        x: 0,\n        y: 1\n       },\n       {\n        x: 1,\n        y: 1\n       }\n      ]\n     }\n    ];\n    var ReusedContexts = [\n     0x9B25,\n     0x0795,\n     0x00E5,\n     0x0195\n    ];\n    var RefinementReusedContexts = [\n     0x0020,\n     0x0008\n    ];\n    function decodeBitmapTemplate0(width, height, decodingContext) {\n     var decoder = decodingContext.decoder;\n     var contexts = decodingContext.contextCache.getContexts('GB');\n     var contextLabel, i, j, pixel, row, row1, row2, bitmap = [];\n     var OLD_PIXEL_MASK = 0x7BF7;\n     for (i = 0; i < height; i++) {\n      row = bitmap[i] = new Uint8Array(width);\n      row1 = i < 1 ? row : bitmap[i - 1];\n      row2 = i < 2 ? row : bitmap[i - 2];\n      contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n      for (j = 0; j < width; j++) {\n       row[j] = pixel = decoder.readBit(contexts, contextLabel);\n       contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n      }\n     }\n     return bitmap;\n    }\n    function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n     if (mmr) {\n      error('JBIG2 error: MMR encoding is not supported');\n     }\n     if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n      return decodeBitmapTemplate0(width, height, decodingContext);\n     }\n     var useskip = !!skip;\n     var template = CodingTemplates[templateIndex].concat(at);\n     template.sort(function (a, b) {\n      return a.y - b.y || a.x - b.x;\n     });\n     var templateLength = template.length;\n     var templateX = new Int8Array(templateLength);\n     var templateY = new Int8Array(templateLength);\n     var changingTemplateEntries = [];\n     var reuseMask = 0, minX = 0, maxX = 0, minY = 0;\n     var c, k;\n     for (k = 0; k < templateLength; k++) {\n      templateX[k] = template[k].x;\n      templateY[k] = template[k].y;\n      minX = Math.min(minX, template[k].x);\n      maxX = Math.max(maxX, template[k].x);\n      minY = Math.min(minY, template[k].y);\n      if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n       reuseMask |= 1 << templateLength - 1 - k;\n      } else {\n       changingTemplateEntries.push(k);\n      }\n     }\n     var changingEntriesLength = changingTemplateEntries.length;\n     var changingTemplateX = new Int8Array(changingEntriesLength);\n     var changingTemplateY = new Int8Array(changingEntriesLength);\n     var changingTemplateBit = new Uint16Array(changingEntriesLength);\n     for (c = 0; c < changingEntriesLength; c++) {\n      k = changingTemplateEntries[c];\n      changingTemplateX[c] = template[k].x;\n      changingTemplateY[c] = template[k].y;\n      changingTemplateBit[c] = 1 << templateLength - 1 - k;\n     }\n     var sbb_left = -minX;\n     var sbb_top = -minY;\n     var sbb_right = width - maxX;\n     var pseudoPixelContext = ReusedContexts[templateIndex];\n     var row = new Uint8Array(width);\n     var bitmap = [];\n     var decoder = decodingContext.decoder;\n     var contexts = decodingContext.contextCache.getContexts('GB');\n     var ltp = 0, j, i0, j0, contextLabel = 0, bit, shift;\n     for (var i = 0; i < height; i++) {\n      if (prediction) {\n       var sltp = decoder.readBit(contexts, pseudoPixelContext);\n       ltp ^= sltp;\n       if (ltp) {\n        bitmap.push(row);\n        continue;\n       }\n      }\n      row = new Uint8Array(row);\n      bitmap.push(row);\n      for (j = 0; j < width; j++) {\n       if (useskip && skip[i][j]) {\n        row[j] = 0;\n        continue;\n       }\n       if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n        contextLabel = contextLabel << 1 & reuseMask;\n        for (k = 0; k < changingEntriesLength; k++) {\n         i0 = i + changingTemplateY[k];\n         j0 = j + changingTemplateX[k];\n         bit = bitmap[i0][j0];\n         if (bit) {\n          bit = changingTemplateBit[k];\n          contextLabel |= bit;\n         }\n        }\n       } else {\n        contextLabel = 0;\n        shift = templateLength - 1;\n        for (k = 0; k < templateLength; k++, shift--) {\n         j0 = j + templateX[k];\n         if (j0 >= 0 && j0 < width) {\n          i0 = i + templateY[k];\n          if (i0 >= 0) {\n           bit = bitmap[i0][j0];\n           if (bit) {\n            contextLabel |= bit << shift;\n           }\n          }\n         }\n        }\n       }\n       var pixel = decoder.readBit(contexts, contextLabel);\n       row[j] = pixel;\n      }\n     }\n     return bitmap;\n    }\n    function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n     var codingTemplate = RefinementTemplates[templateIndex].coding;\n     if (templateIndex === 0) {\n      codingTemplate = codingTemplate.concat([at[0]]);\n     }\n     var codingTemplateLength = codingTemplate.length;\n     var codingTemplateX = new Int32Array(codingTemplateLength);\n     var codingTemplateY = new Int32Array(codingTemplateLength);\n     var k;\n     for (k = 0; k < codingTemplateLength; k++) {\n      codingTemplateX[k] = codingTemplate[k].x;\n      codingTemplateY[k] = codingTemplate[k].y;\n     }\n     var referenceTemplate = RefinementTemplates[templateIndex].reference;\n     if (templateIndex === 0) {\n      referenceTemplate = referenceTemplate.concat([at[1]]);\n     }\n     var referenceTemplateLength = referenceTemplate.length;\n     var referenceTemplateX = new Int32Array(referenceTemplateLength);\n     var referenceTemplateY = new Int32Array(referenceTemplateLength);\n     for (k = 0; k < referenceTemplateLength; k++) {\n      referenceTemplateX[k] = referenceTemplate[k].x;\n      referenceTemplateY[k] = referenceTemplate[k].y;\n     }\n     var referenceWidth = referenceBitmap[0].length;\n     var referenceHeight = referenceBitmap.length;\n     var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n     var bitmap = [];\n     var decoder = decodingContext.decoder;\n     var contexts = decodingContext.contextCache.getContexts('GR');\n     var ltp = 0;\n     for (var i = 0; i < height; i++) {\n      if (prediction) {\n       var sltp = decoder.readBit(contexts, pseudoPixelContext);\n       ltp ^= sltp;\n       if (ltp) {\n        error('JBIG2 error: prediction is not supported');\n       }\n      }\n      var row = new Uint8Array(width);\n      bitmap.push(row);\n      for (var j = 0; j < width; j++) {\n       var i0, j0;\n       var contextLabel = 0;\n       for (k = 0; k < codingTemplateLength; k++) {\n        i0 = i + codingTemplateY[k];\n        j0 = j + codingTemplateX[k];\n        if (i0 < 0 || j0 < 0 || j0 >= width) {\n         contextLabel <<= 1;\n        } else\n         {\n          contextLabel = contextLabel << 1 | bitmap[i0][j0];\n         }\n       }\n       for (k = 0; k < referenceTemplateLength; k++) {\n        i0 = i + referenceTemplateY[k] + offsetY;\n        j0 = j + referenceTemplateX[k] + offsetX;\n        if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n         contextLabel <<= 1;\n        } else\n         {\n          contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n         }\n       }\n       var pixel = decoder.readBit(contexts, contextLabel);\n       row[j] = pixel;\n      }\n     }\n     return bitmap;\n    }\n    function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext) {\n     if (huffman) {\n      error('JBIG2 error: huffman is not supported');\n     }\n     var newSymbols = [];\n     var currentHeight = 0;\n     var symbolCodeLength = log2(symbols.length + numberOfNewSymbols);\n     var decoder = decodingContext.decoder;\n     var contextCache = decodingContext.contextCache;\n     while (newSymbols.length < numberOfNewSymbols) {\n      var deltaHeight = decodeInteger(contextCache, 'IADH', decoder);\n      currentHeight += deltaHeight;\n      var currentWidth = 0;\n      var totalWidth = 0;\n      while (true) {\n       var deltaWidth = decodeInteger(contextCache, 'IADW', decoder);\n       if (deltaWidth === null) {\n        break;\n       }\n       currentWidth += deltaWidth;\n       totalWidth += currentWidth;\n       var bitmap;\n       if (refinement) {\n        var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n        if (numberOfInstances > 1) {\n         bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext);\n        } else {\n         var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n         var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n         var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n         var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n         bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n        }\n       } else {\n        bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n       }\n       newSymbols.push(bitmap);\n      }\n     }\n     var exportedSymbols = [];\n     var flags = [], currentFlag = false;\n     var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n     while (flags.length < totalSymbolsLength) {\n      var runLength = decodeInteger(contextCache, 'IAEX', decoder);\n      while (runLength--) {\n       flags.push(currentFlag);\n      }\n      currentFlag = !currentFlag;\n     }\n     for (var i = 0, ii = symbols.length; i < ii; i++) {\n      if (flags[i]) {\n       exportedSymbols.push(symbols[i]);\n      }\n     }\n     for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n      if (flags[i]) {\n       exportedSymbols.push(newSymbols[j]);\n      }\n     }\n     return exportedSymbols;\n    }\n    function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext) {\n     if (huffman) {\n      error('JBIG2 error: huffman is not supported');\n     }\n     var bitmap = [];\n     var i, row;\n     for (i = 0; i < height; i++) {\n      row = new Uint8Array(width);\n      if (defaultPixelValue) {\n       for (var j = 0; j < width; j++) {\n        row[j] = defaultPixelValue;\n       }\n      }\n      bitmap.push(row);\n     }\n     var decoder = decodingContext.decoder;\n     var contextCache = decodingContext.contextCache;\n     var stripT = -decodeInteger(contextCache, 'IADT', decoder);\n     var firstS = 0;\n     i = 0;\n     while (i < numberOfSymbolInstances) {\n      var deltaT = decodeInteger(contextCache, 'IADT', decoder);\n      stripT += deltaT;\n      var deltaFirstS = decodeInteger(contextCache, 'IAFS', decoder);\n      firstS += deltaFirstS;\n      var currentS = firstS;\n      do {\n       var currentT = stripSize === 1 ? 0 : decodeInteger(contextCache, 'IAIT', decoder);\n       var t = stripSize * stripT + currentT;\n       var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n       var applyRefinement = refinement && decodeInteger(contextCache, 'IARI', decoder);\n       var symbolBitmap = inputSymbols[symbolId];\n       var symbolWidth = symbolBitmap[0].length;\n       var symbolHeight = symbolBitmap.length;\n       if (applyRefinement) {\n        var rdw = decodeInteger(contextCache, 'IARDW', decoder);\n        var rdh = decodeInteger(contextCache, 'IARDH', decoder);\n        var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n        var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n        symbolWidth += rdw;\n        symbolHeight += rdh;\n        symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n       }\n       var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight);\n       var offsetS = currentS - (referenceCorner & 2 ? symbolWidth : 0);\n       var s2, t2, symbolRow;\n       if (transposed) {\n        for (s2 = 0; s2 < symbolHeight; s2++) {\n         row = bitmap[offsetS + s2];\n         if (!row) {\n          continue;\n         }\n         symbolRow = symbolBitmap[s2];\n         var maxWidth = Math.min(width - offsetT, symbolWidth);\n         switch (combinationOperator) {\n         case 0:\n          for (t2 = 0; t2 < maxWidth; t2++) {\n           row[offsetT + t2] |= symbolRow[t2];\n          }\n          break;\n         case 2:\n          for (t2 = 0; t2 < maxWidth; t2++) {\n           row[offsetT + t2] ^= symbolRow[t2];\n          }\n          break;\n         default:\n          error('JBIG2 error: operator ' + combinationOperator + ' is not supported');\n         }\n        }\n        currentS += symbolHeight - 1;\n       } else {\n        for (t2 = 0; t2 < symbolHeight; t2++) {\n         row = bitmap[offsetT + t2];\n         if (!row) {\n          continue;\n         }\n         symbolRow = symbolBitmap[t2];\n         switch (combinationOperator) {\n         case 0:\n          for (s2 = 0; s2 < symbolWidth; s2++) {\n           row[offsetS + s2] |= symbolRow[s2];\n          }\n          break;\n         case 2:\n          for (s2 = 0; s2 < symbolWidth; s2++) {\n           row[offsetS + s2] ^= symbolRow[s2];\n          }\n          break;\n         default:\n          error('JBIG2 error: operator ' + combinationOperator + ' is not supported');\n         }\n        }\n        currentS += symbolWidth - 1;\n       }\n       i++;\n       var deltaS = decodeInteger(contextCache, 'IADS', decoder);\n       if (deltaS === null) {\n        break;\n       }\n       currentS += deltaS + dsOffset;\n      } while (true);\n     }\n     return bitmap;\n    }\n    function readSegmentHeader(data, start) {\n     var segmentHeader = {};\n     segmentHeader.number = readUint32(data, start);\n     var flags = data[start + 4];\n     var segmentType = flags & 0x3F;\n     if (!SegmentTypes[segmentType]) {\n      error('JBIG2 error: invalid segment type: ' + segmentType);\n     }\n     segmentHeader.type = segmentType;\n     segmentHeader.typeName = SegmentTypes[segmentType];\n     segmentHeader.deferredNonRetain = !!(flags & 0x80);\n     var pageAssociationFieldSize = !!(flags & 0x40);\n     var referredFlags = data[start + 5];\n     var referredToCount = referredFlags >> 5 & 7;\n     var retainBits = [referredFlags & 31];\n     var position = start + 6;\n     if (referredFlags === 7) {\n      referredToCount = readUint32(data, position - 1) & 0x1FFFFFFF;\n      position += 3;\n      var bytes = referredToCount + 7 >> 3;\n      retainBits[0] = data[position++];\n      while (--bytes > 0) {\n       retainBits.push(data[position++]);\n      }\n     } else if (referredFlags === 5 || referredFlags === 6) {\n      error('JBIG2 error: invalid referred-to flags');\n     }\n     segmentHeader.retainBits = retainBits;\n     var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n     var referredTo = [];\n     var i, ii;\n     for (i = 0; i < referredToCount; i++) {\n      var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? readUint16(data, position) : readUint32(data, position);\n      referredTo.push(number);\n      position += referredToSegmentNumberSize;\n     }\n     segmentHeader.referredTo = referredTo;\n     if (!pageAssociationFieldSize) {\n      segmentHeader.pageAssociation = data[position++];\n     } else {\n      segmentHeader.pageAssociation = readUint32(data, position);\n      position += 4;\n     }\n     segmentHeader.length = readUint32(data, position);\n     position += 4;\n     if (segmentHeader.length === 0xFFFFFFFF) {\n      if (segmentType === 38) {\n       var genericRegionInfo = readRegionSegmentInformation(data, position);\n       var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n       var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n       var searchPatternLength = 6;\n       var searchPattern = new Uint8Array(searchPatternLength);\n       if (!genericRegionMmr) {\n        searchPattern[0] = 0xFF;\n        searchPattern[1] = 0xAC;\n       }\n       searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\n       searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\n       searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\n       searchPattern[5] = genericRegionInfo.height & 0xFF;\n       for (i = position, ii = data.length; i < ii; i++) {\n        var j = 0;\n        while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n         j++;\n        }\n        if (j === searchPatternLength) {\n         segmentHeader.length = i + searchPatternLength;\n         break;\n        }\n       }\n       if (segmentHeader.length === 0xFFFFFFFF) {\n        error('JBIG2 error: segment end was not found');\n       }\n      } else {\n       error('JBIG2 error: invalid unknown segment length');\n      }\n     }\n     segmentHeader.headerEnd = position;\n     return segmentHeader;\n    }\n    function readSegments(header, data, start, end) {\n     var segments = [];\n     var position = start;\n     while (position < end) {\n      var segmentHeader = readSegmentHeader(data, position);\n      position = segmentHeader.headerEnd;\n      var segment = {\n       header: segmentHeader,\n       data: data\n      };\n      if (!header.randomAccess) {\n       segment.start = position;\n       position += segmentHeader.length;\n       segment.end = position;\n      }\n      segments.push(segment);\n      if (segmentHeader.type === 51) {\n       break;\n      }\n     }\n     if (header.randomAccess) {\n      for (var i = 0, ii = segments.length; i < ii; i++) {\n       segments[i].start = position;\n       position += segments[i].header.length;\n       segments[i].end = position;\n      }\n     }\n     return segments;\n    }\n    function readRegionSegmentInformation(data, start) {\n     return {\n      width: readUint32(data, start),\n      height: readUint32(data, start + 4),\n      x: readUint32(data, start + 8),\n      y: readUint32(data, start + 12),\n      combinationOperator: data[start + 16] & 7\n     };\n    }\n    var RegionSegmentInformationFieldLength = 17;\n    function processSegment(segment, visitor) {\n     var header = segment.header;\n     var data = segment.data, position = segment.start, end = segment.end;\n     var args, at, i, atLength;\n     switch (header.type) {\n     case 0:\n      var dictionary = {};\n      var dictionaryFlags = readUint16(data, position);\n      dictionary.huffman = !!(dictionaryFlags & 1);\n      dictionary.refinement = !!(dictionaryFlags & 2);\n      dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n      dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n      dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n      dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n      dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n      dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n      dictionary.template = dictionaryFlags >> 10 & 3;\n      dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n      position += 2;\n      if (!dictionary.huffman) {\n       atLength = dictionary.template === 0 ? 4 : 1;\n       at = [];\n       for (i = 0; i < atLength; i++) {\n        at.push({\n         x: readInt8(data, position),\n         y: readInt8(data, position + 1)\n        });\n        position += 2;\n       }\n       dictionary.at = at;\n      }\n      if (dictionary.refinement && !dictionary.refinementTemplate) {\n       at = [];\n       for (i = 0; i < 2; i++) {\n        at.push({\n         x: readInt8(data, position),\n         y: readInt8(data, position + 1)\n        });\n        position += 2;\n       }\n       dictionary.refinementAt = at;\n      }\n      dictionary.numberOfExportedSymbols = readUint32(data, position);\n      position += 4;\n      dictionary.numberOfNewSymbols = readUint32(data, position);\n      position += 4;\n      args = [\n       dictionary,\n       header.number,\n       header.referredTo,\n       data,\n       position,\n       end\n      ];\n      break;\n     case 6:\n     case 7:\n      var textRegion = {};\n      textRegion.info = readRegionSegmentInformation(data, position);\n      position += RegionSegmentInformationFieldLength;\n      var textRegionSegmentFlags = readUint16(data, position);\n      position += 2;\n      textRegion.huffman = !!(textRegionSegmentFlags & 1);\n      textRegion.refinement = !!(textRegionSegmentFlags & 2);\n      textRegion.stripSize = 1 << (textRegionSegmentFlags >> 2 & 3);\n      textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n      textRegion.transposed = !!(textRegionSegmentFlags & 64);\n      textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n      textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n      textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n      textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n      if (textRegion.huffman) {\n       var textRegionHuffmanFlags = readUint16(data, position);\n       position += 2;\n       textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n       textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n       textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n       textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n       textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n       textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n       textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n       textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 14);\n      }\n      if (textRegion.refinement && !textRegion.refinementTemplate) {\n       at = [];\n       for (i = 0; i < 2; i++) {\n        at.push({\n         x: readInt8(data, position),\n         y: readInt8(data, position + 1)\n        });\n        position += 2;\n       }\n       textRegion.refinementAt = at;\n      }\n      textRegion.numberOfSymbolInstances = readUint32(data, position);\n      position += 4;\n      if (textRegion.huffman) {\n       error('JBIG2 error: huffman is not supported');\n      }\n      args = [\n       textRegion,\n       header.referredTo,\n       data,\n       position,\n       end\n      ];\n      break;\n     case 38:\n     case 39:\n      var genericRegion = {};\n      genericRegion.info = readRegionSegmentInformation(data, position);\n      position += RegionSegmentInformationFieldLength;\n      var genericRegionSegmentFlags = data[position++];\n      genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n      genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n      genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n      if (!genericRegion.mmr) {\n       atLength = genericRegion.template === 0 ? 4 : 1;\n       at = [];\n       for (i = 0; i < atLength; i++) {\n        at.push({\n         x: readInt8(data, position),\n         y: readInt8(data, position + 1)\n        });\n        position += 2;\n       }\n       genericRegion.at = at;\n      }\n      args = [\n       genericRegion,\n       data,\n       position,\n       end\n      ];\n      break;\n     case 48:\n      var pageInfo = {\n       width: readUint32(data, position),\n       height: readUint32(data, position + 4),\n       resolutionX: readUint32(data, position + 8),\n       resolutionY: readUint32(data, position + 12)\n      };\n      if (pageInfo.height === 0xFFFFFFFF) {\n       delete pageInfo.height;\n      }\n      var pageSegmentFlags = data[position + 16];\n      var pageStripingInformation = readUint16(data, position + 17);\n      pageInfo.lossless = !!(pageSegmentFlags & 1);\n      pageInfo.refinement = !!(pageSegmentFlags & 2);\n      pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n      pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n      pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n      pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n      args = [pageInfo];\n      break;\n     case 49:\n      break;\n     case 50:\n      break;\n     case 51:\n      break;\n     case 62:\n      break;\n     default:\n      error('JBIG2 error: segment type ' + header.typeName + '(' + header.type + ') is not implemented');\n     }\n     var callbackName = 'on' + header.typeName;\n     if (callbackName in visitor) {\n      visitor[callbackName].apply(visitor, args);\n     }\n    }\n    function processSegments(segments, visitor) {\n     for (var i = 0, ii = segments.length; i < ii; i++) {\n      processSegment(segments[i], visitor);\n     }\n    }\n    function parseJbig2(data, start, end) {\n     var position = start;\n     if (data[position] !== 0x97 || data[position + 1] !== 0x4A || data[position + 2] !== 0x42 || data[position + 3] !== 0x32 || data[position + 4] !== 0x0D || data[position + 5] !== 0x0A || data[position + 6] !== 0x1A || data[position + 7] !== 0x0A) {\n      error('JBIG2 error: invalid header');\n     }\n     var header = {};\n     position += 8;\n     var flags = data[position++];\n     header.randomAccess = !(flags & 1);\n     if (!(flags & 2)) {\n      header.numberOfPages = readUint32(data, position);\n      position += 4;\n     }\n     var segments = readSegments(header, data, position, end);\n     error('Not implemented');\n    }\n    function parseJbig2Chunks(chunks) {\n     var visitor = new SimpleSegmentVisitor();\n     for (var i = 0, ii = chunks.length; i < ii; i++) {\n      var chunk = chunks[i];\n      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n      processSegments(segments, visitor);\n     }\n     return visitor.buffer;\n    }\n    function SimpleSegmentVisitor() {\n    }\n    SimpleSegmentVisitor.prototype = {\n     onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n      this.currentPageInfo = info;\n      var rowSize = info.width + 7 >> 3;\n      var buffer = new Uint8Array(rowSize * info.height);\n      if (info.defaultPixelValue) {\n       for (var i = 0, ii = buffer.length; i < ii; i++) {\n        buffer[i] = 0xFF;\n       }\n      }\n      this.buffer = buffer;\n     },\n     drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n      var pageInfo = this.currentPageInfo;\n      var width = regionInfo.width, height = regionInfo.height;\n      var rowSize = pageInfo.width + 7 >> 3;\n      var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n      var buffer = this.buffer;\n      var mask0 = 128 >> (regionInfo.x & 7);\n      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n      var i, j, mask, offset;\n      switch (combinationOperator) {\n      case 0:\n       for (i = 0; i < height; i++) {\n        mask = mask0;\n        offset = offset0;\n        for (j = 0; j < width; j++) {\n         if (bitmap[i][j]) {\n          buffer[offset] |= mask;\n         }\n         mask >>= 1;\n         if (!mask) {\n          mask = 128;\n          offset++;\n         }\n        }\n        offset0 += rowSize;\n       }\n       break;\n      case 2:\n       for (i = 0; i < height; i++) {\n        mask = mask0;\n        offset = offset0;\n        for (j = 0; j < width; j++) {\n         if (bitmap[i][j]) {\n          buffer[offset] ^= mask;\n         }\n         mask >>= 1;\n         if (!mask) {\n          mask = 128;\n          offset++;\n         }\n        }\n        offset0 += rowSize;\n       }\n       break;\n      default:\n       error('JBIG2 error: operator ' + combinationOperator + ' is not supported');\n      }\n     },\n     onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n     },\n     onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n      this.onImmediateGenericRegion.apply(this, arguments);\n     },\n     onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n      var huffmanTables;\n      if (dictionary.huffman) {\n       error('JBIG2 error: huffman is not supported');\n      }\n      var symbols = this.symbols;\n      if (!symbols) {\n       this.symbols = symbols = {};\n      }\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n       inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext);\n     },\n     onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n      var regionInfo = region.info;\n      var huffmanTables;\n      var symbols = this.symbols;\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n       inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n      }\n      var symbolCodeLength = log2(inputSymbols.length);\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n     },\n     onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n      this.onImmediateTextRegion.apply(this, arguments);\n     }\n    };\n    function Jbig2Image() {\n    }\n    Jbig2Image.prototype = {\n     parseChunks: function Jbig2Image_parseChunks(chunks) {\n      return parseJbig2Chunks(chunks);\n     }\n    };\n    return Jbig2Image;\n   }();\n   exports.Jbig2Image = Jbig2Image;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsCoreJpg = {}, root.pdfjsSharedUtil);\n  }(this, function (exports, sharedUtil) {\n   var error = sharedUtil.error;\n   var JpegImage = function JpegImageClosure() {\n    var dctZigZag = new Uint8Array([\n     0,\n     1,\n     8,\n     16,\n     9,\n     2,\n     3,\n     10,\n     17,\n     24,\n     32,\n     25,\n     18,\n     11,\n     4,\n     5,\n     12,\n     19,\n     26,\n     33,\n     40,\n     48,\n     41,\n     34,\n     27,\n     20,\n     13,\n     6,\n     7,\n     14,\n     21,\n     28,\n     35,\n     42,\n     49,\n     56,\n     57,\n     50,\n     43,\n     36,\n     29,\n     22,\n     15,\n     23,\n     30,\n     37,\n     44,\n     51,\n     58,\n     59,\n     52,\n     45,\n     38,\n     31,\n     39,\n     46,\n     53,\n     60,\n     61,\n     54,\n     47,\n     55,\n     62,\n     63\n    ]);\n    var dctCos1 = 4017;\n    var dctSin1 = 799;\n    var dctCos3 = 3406;\n    var dctSin3 = 2276;\n    var dctCos6 = 1567;\n    var dctSin6 = 3784;\n    var dctSqrt2 = 5793;\n    var dctSqrt1d2 = 2896;\n    function JpegImage() {\n     this.decodeTransform = null;\n     this.colorTransform = -1;\n    }\n    function buildHuffmanTable(codeLengths, values) {\n     var k = 0, code = [], i, j, length = 16;\n     while (length > 0 && !codeLengths[length - 1]) {\n      length--;\n     }\n     code.push({\n      children: [],\n      index: 0\n     });\n     var p = code[0], q;\n     for (i = 0; i < length; i++) {\n      for (j = 0; j < codeLengths[i]; j++) {\n       p = code.pop();\n       p.children[p.index] = values[k];\n       while (p.index > 0) {\n        p = code.pop();\n       }\n       p.index++;\n       code.push(p);\n       while (code.length <= i) {\n        code.push(q = {\n         children: [],\n         index: 0\n        });\n        p.children[p.index] = q.children;\n        p = q;\n       }\n       k++;\n      }\n      if (i + 1 < length) {\n       code.push(q = {\n        children: [],\n        index: 0\n       });\n       p.children[p.index] = q.children;\n       p = q;\n      }\n     }\n     return code[0].children;\n    }\n    function getBlockBufferOffset(component, row, col) {\n     return 64 * ((component.blocksPerLine + 1) * row + col);\n    }\n    function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n     var mcusPerLine = frame.mcusPerLine;\n     var progressive = frame.progressive;\n     var startOffset = offset, bitsData = 0, bitsCount = 0;\n     function readBit() {\n      if (bitsCount > 0) {\n       bitsCount--;\n       return bitsData >> bitsCount & 1;\n      }\n      bitsData = data[offset++];\n      if (bitsData === 0xFF) {\n       var nextByte = data[offset++];\n       if (nextByte) {\n        error('JPEG error: unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\n       }\n      }\n      bitsCount = 7;\n      return bitsData >>> 7;\n     }\n     function decodeHuffman(tree) {\n      var node = tree;\n      while (true) {\n       node = node[readBit()];\n       if (typeof node === 'number') {\n        return node;\n       }\n       if (typeof node !== 'object') {\n        error('JPEG error: invalid huffman sequence');\n       }\n      }\n     }\n     function receive(length) {\n      var n = 0;\n      while (length > 0) {\n       n = n << 1 | readBit();\n       length--;\n      }\n      return n;\n     }\n     function receiveAndExtend(length) {\n      if (length === 1) {\n       return readBit() === 1 ? 1 : -1;\n      }\n      var n = receive(length);\n      if (n >= 1 << length - 1) {\n       return n;\n      }\n      return n + (-1 << length) + 1;\n     }\n     function decodeBaseline(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\n      component.blockData[offset] = component.pred += diff;\n      var k = 1;\n      while (k < 64) {\n       var rs = decodeHuffman(component.huffmanTableAC);\n       var s = rs & 15, r = rs >> 4;\n       if (s === 0) {\n        if (r < 15) {\n         break;\n        }\n        k += 16;\n        continue;\n       }\n       k += r;\n       var z = dctZigZag[k];\n       component.blockData[offset + z] = receiveAndExtend(s);\n       k++;\n      }\n     }\n     function decodeDCFirst(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n      component.blockData[offset] = component.pred += diff;\n     }\n     function decodeDCSuccessive(component, offset) {\n      component.blockData[offset] |= readBit() << successive;\n     }\n     var eobrun = 0;\n     function decodeACFirst(component, offset) {\n      if (eobrun > 0) {\n       eobrun--;\n       return;\n      }\n      var k = spectralStart, e = spectralEnd;\n      while (k <= e) {\n       var rs = decodeHuffman(component.huffmanTableAC);\n       var s = rs & 15, r = rs >> 4;\n       if (s === 0) {\n        if (r < 15) {\n         eobrun = receive(r) + (1 << r) - 1;\n         break;\n        }\n        k += 16;\n        continue;\n       }\n       k += r;\n       var z = dctZigZag[k];\n       component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\n       k++;\n      }\n     }\n     var successiveACState = 0, successiveACNextValue;\n     function decodeACSuccessive(component, offset) {\n      var k = spectralStart;\n      var e = spectralEnd;\n      var r = 0;\n      var s;\n      var rs;\n      while (k <= e) {\n       var z = dctZigZag[k];\n       switch (successiveACState) {\n       case 0:\n        rs = decodeHuffman(component.huffmanTableAC);\n        s = rs & 15;\n        r = rs >> 4;\n        if (s === 0) {\n         if (r < 15) {\n          eobrun = receive(r) + (1 << r);\n          successiveACState = 4;\n         } else {\n          r = 16;\n          successiveACState = 1;\n         }\n        } else {\n         if (s !== 1) {\n          error('JPEG error: invalid ACn encoding');\n         }\n         successiveACNextValue = receiveAndExtend(s);\n         successiveACState = r ? 2 : 3;\n        }\n        continue;\n       case 1:\n       case 2:\n        if (component.blockData[offset + z]) {\n         component.blockData[offset + z] += readBit() << successive;\n        } else {\n         r--;\n         if (r === 0) {\n          successiveACState = successiveACState === 2 ? 3 : 0;\n         }\n        }\n        break;\n       case 3:\n        if (component.blockData[offset + z]) {\n         component.blockData[offset + z] += readBit() << successive;\n        } else {\n         component.blockData[offset + z] = successiveACNextValue << successive;\n         successiveACState = 0;\n        }\n        break;\n       case 4:\n        if (component.blockData[offset + z]) {\n         component.blockData[offset + z] += readBit() << successive;\n        }\n        break;\n       }\n       k++;\n      }\n      if (successiveACState === 4) {\n       eobrun--;\n       if (eobrun === 0) {\n        successiveACState = 0;\n       }\n      }\n     }\n     function decodeMcu(component, decode, mcu, row, col) {\n      var mcuRow = mcu / mcusPerLine | 0;\n      var mcuCol = mcu % mcusPerLine;\n      var blockRow = mcuRow * component.v + row;\n      var blockCol = mcuCol * component.h + col;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n     }\n     function decodeBlock(component, decode, mcu) {\n      var blockRow = mcu / component.blocksPerLine | 0;\n      var blockCol = mcu % component.blocksPerLine;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n     }\n     var componentsLength = components.length;\n     var component, i, j, k, n;\n     var decodeFn;\n     if (progressive) {\n      if (spectralStart === 0) {\n       decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n      } else {\n       decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n      }\n     } else {\n      decodeFn = decodeBaseline;\n     }\n     var mcu = 0, marker;\n     var mcuExpected;\n     if (componentsLength === 1) {\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n     } else {\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n     }\n     if (!resetInterval) {\n      resetInterval = mcuExpected;\n     }\n     var h, v;\n     while (mcu < mcuExpected) {\n      for (i = 0; i < componentsLength; i++) {\n       components[i].pred = 0;\n      }\n      eobrun = 0;\n      if (componentsLength === 1) {\n       component = components[0];\n       for (n = 0; n < resetInterval; n++) {\n        decodeBlock(component, decodeFn, mcu);\n        mcu++;\n       }\n      } else {\n       for (n = 0; n < resetInterval; n++) {\n        for (i = 0; i < componentsLength; i++) {\n         component = components[i];\n         h = component.h;\n         v = component.v;\n         for (j = 0; j < v; j++) {\n          for (k = 0; k < h; k++) {\n           decodeMcu(component, decodeFn, mcu, j, k);\n          }\n         }\n        }\n        mcu++;\n       }\n      }\n      bitsCount = 0;\n      marker = data[offset] << 8 | data[offset + 1];\n      while (data[offset] === 0x00 && offset < data.length - 1) {\n       offset++;\n       marker = data[offset] << 8 | data[offset + 1];\n      }\n      if (marker <= 0xFF00) {\n       error('JPEG error: marker was not found');\n      }\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n       offset += 2;\n      } else {\n       break;\n      }\n     }\n     return offset - startOffset;\n    }\n    function quantizeAndInverse(component, blockBufferOffset, p) {\n     var qt = component.quantizationTable, blockData = component.blockData;\n     var v0, v1, v2, v3, v4, v5, v6, v7;\n     var p0, p1, p2, p3, p4, p5, p6, p7;\n     var t;\n     if (!qt) {\n      error('JPEG error: missing required Quantization Table.');\n     }\n     for (var row = 0; row < 64; row += 8) {\n      p0 = blockData[blockBufferOffset + row];\n      p1 = blockData[blockBufferOffset + row + 1];\n      p2 = blockData[blockBufferOffset + row + 2];\n      p3 = blockData[blockBufferOffset + row + 3];\n      p4 = blockData[blockBufferOffset + row + 4];\n      p5 = blockData[blockBufferOffset + row + 5];\n      p6 = blockData[blockBufferOffset + row + 6];\n      p7 = blockData[blockBufferOffset + row + 7];\n      p0 *= qt[row];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n       t = dctSqrt2 * p0 + 512 >> 10;\n       p[row] = t;\n       p[row + 1] = t;\n       p[row + 2] = t;\n       p[row + 3] = t;\n       p[row + 4] = t;\n       p[row + 5] = t;\n       p[row + 6] = t;\n       p[row + 7] = t;\n       continue;\n      }\n      p1 *= qt[row + 1];\n      p2 *= qt[row + 2];\n      p3 *= qt[row + 3];\n      p4 *= qt[row + 4];\n      p5 *= qt[row + 5];\n      p6 *= qt[row + 6];\n      p7 *= qt[row + 7];\n      v0 = dctSqrt2 * p0 + 128 >> 8;\n      v1 = dctSqrt2 * p4 + 128 >> 8;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n      v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n      v5 = p3 << 4;\n      v6 = p5 << 4;\n      v0 = v0 + v1 + 1 >> 1;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p[row] = v0 + v7;\n      p[row + 7] = v0 - v7;\n      p[row + 1] = v1 + v6;\n      p[row + 6] = v1 - v6;\n      p[row + 2] = v2 + v5;\n      p[row + 5] = v2 - v5;\n      p[row + 3] = v3 + v4;\n      p[row + 4] = v3 - v4;\n     }\n     for (var col = 0; col < 8; ++col) {\n      p0 = p[col];\n      p1 = p[col + 8];\n      p2 = p[col + 16];\n      p3 = p[col + 24];\n      p4 = p[col + 32];\n      p5 = p[col + 40];\n      p6 = p[col + 48];\n      p7 = p[col + 56];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n       t = dctSqrt2 * p0 + 8192 >> 14;\n       t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\n       blockData[blockBufferOffset + col] = t;\n       blockData[blockBufferOffset + col + 8] = t;\n       blockData[blockBufferOffset + col + 16] = t;\n       blockData[blockBufferOffset + col + 24] = t;\n       blockData[blockBufferOffset + col + 32] = t;\n       blockData[blockBufferOffset + col + 40] = t;\n       blockData[blockBufferOffset + col + 48] = t;\n       blockData[blockBufferOffset + col + 56] = t;\n       continue;\n      }\n      v0 = dctSqrt2 * p0 + 2048 >> 12;\n      v1 = dctSqrt2 * p4 + 2048 >> 12;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n      v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n      v5 = p3;\n      v6 = p5;\n      v0 = (v0 + v1 + 1 >> 1) + 4112;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p0 = v0 + v7;\n      p7 = v0 - v7;\n      p1 = v1 + v6;\n      p6 = v1 - v6;\n      p2 = v2 + v5;\n      p5 = v2 - v5;\n      p3 = v3 + v4;\n      p4 = v3 - v4;\n      p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n      p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n      p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n      p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n      p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n      p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n      p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n      p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n      blockData[blockBufferOffset + col] = p0;\n      blockData[blockBufferOffset + col + 8] = p1;\n      blockData[blockBufferOffset + col + 16] = p2;\n      blockData[blockBufferOffset + col + 24] = p3;\n      blockData[blockBufferOffset + col + 32] = p4;\n      blockData[blockBufferOffset + col + 40] = p5;\n      blockData[blockBufferOffset + col + 48] = p6;\n      blockData[blockBufferOffset + col + 56] = p7;\n     }\n    }\n    function buildComponentData(frame, component) {\n     var blocksPerLine = component.blocksPerLine;\n     var blocksPerColumn = component.blocksPerColumn;\n     var computationBuffer = new Int16Array(64);\n     for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n       var offset = getBlockBufferOffset(component, blockRow, blockCol);\n       quantizeAndInverse(component, offset, computationBuffer);\n      }\n     }\n     return component.blockData;\n    }\n    function clamp0to255(a) {\n     return a <= 0 ? 0 : a >= 255 ? 255 : a;\n    }\n    JpegImage.prototype = {\n     parse: function parse(data) {\n      function readUint16() {\n       var value = data[offset] << 8 | data[offset + 1];\n       offset += 2;\n       return value;\n      }\n      function readDataBlock() {\n       var length = readUint16();\n       var array = data.subarray(offset, offset + length - 2);\n       offset += array.length;\n       return array;\n      }\n      function prepareComponents(frame) {\n       var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n       var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n       for (var i = 0; i < frame.components.length; i++) {\n        component = frame.components[i];\n        var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n        var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n        var blocksPerLineForMcu = mcusPerLine * component.h;\n        var blocksPerColumnForMcu = mcusPerColumn * component.v;\n        var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n        component.blockData = new Int16Array(blocksBufferSize);\n        component.blocksPerLine = blocksPerLine;\n        component.blocksPerColumn = blocksPerColumn;\n       }\n       frame.mcusPerLine = mcusPerLine;\n       frame.mcusPerColumn = mcusPerColumn;\n      }\n      var offset = 0;\n      var jfif = null;\n      var adobe = null;\n      var frame, resetInterval;\n      var quantizationTables = [];\n      var huffmanTablesAC = [], huffmanTablesDC = [];\n      var fileMarker = readUint16();\n      if (fileMarker !== 0xFFD8) {\n       error('JPEG error: SOI not found');\n      }\n      fileMarker = readUint16();\n      while (fileMarker !== 0xFFD9) {\n       var i, j, l;\n       switch (fileMarker) {\n       case 0xFFE0:\n       case 0xFFE1:\n       case 0xFFE2:\n       case 0xFFE3:\n       case 0xFFE4:\n       case 0xFFE5:\n       case 0xFFE6:\n       case 0xFFE7:\n       case 0xFFE8:\n       case 0xFFE9:\n       case 0xFFEA:\n       case 0xFFEB:\n       case 0xFFEC:\n       case 0xFFED:\n       case 0xFFEE:\n       case 0xFFEF:\n       case 0xFFFE:\n        var appData = readDataBlock();\n        if (fileMarker === 0xFFE0) {\n         if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n          jfif = {\n           version: {\n            major: appData[5],\n            minor: appData[6]\n           },\n           densityUnits: appData[7],\n           xDensity: appData[8] << 8 | appData[9],\n           yDensity: appData[10] << 8 | appData[11],\n           thumbWidth: appData[12],\n           thumbHeight: appData[13],\n           thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n          };\n         }\n        }\n        if (fileMarker === 0xFFEE) {\n         if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\n          adobe = {\n           version: appData[5] << 8 | appData[6],\n           flags0: appData[7] << 8 | appData[8],\n           flags1: appData[9] << 8 | appData[10],\n           transformCode: appData[11]\n          };\n         }\n        }\n        break;\n       case 0xFFDB:\n        var quantizationTablesLength = readUint16();\n        var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n        var z;\n        while (offset < quantizationTablesEnd) {\n         var quantizationTableSpec = data[offset++];\n         var tableData = new Uint16Array(64);\n         if (quantizationTableSpec >> 4 === 0) {\n          for (j = 0; j < 64; j++) {\n           z = dctZigZag[j];\n           tableData[z] = data[offset++];\n          }\n         } else if (quantizationTableSpec >> 4 === 1) {\n          for (j = 0; j < 64; j++) {\n           z = dctZigZag[j];\n           tableData[z] = readUint16();\n          }\n         } else {\n          error('JPEG error: DQT - invalid table spec');\n         }\n         quantizationTables[quantizationTableSpec & 15] = tableData;\n        }\n        break;\n       case 0xFFC0:\n       case 0xFFC1:\n       case 0xFFC2:\n        if (frame) {\n         error('JPEG error: Only single frame JPEGs supported');\n        }\n        readUint16();\n        frame = {};\n        frame.extended = fileMarker === 0xFFC1;\n        frame.progressive = fileMarker === 0xFFC2;\n        frame.precision = data[offset++];\n        frame.scanLines = readUint16();\n        frame.samplesPerLine = readUint16();\n        frame.components = [];\n        frame.componentIds = {};\n        var componentsCount = data[offset++], componentId;\n        var maxH = 0, maxV = 0;\n        for (i = 0; i < componentsCount; i++) {\n         componentId = data[offset];\n         var h = data[offset + 1] >> 4;\n         var v = data[offset + 1] & 15;\n         if (maxH < h) {\n          maxH = h;\n         }\n         if (maxV < v) {\n          maxV = v;\n         }\n         var qId = data[offset + 2];\n         l = frame.components.push({\n          h: h,\n          v: v,\n          quantizationId: qId,\n          quantizationTable: null\n         });\n         frame.componentIds[componentId] = l - 1;\n         offset += 3;\n        }\n        frame.maxH = maxH;\n        frame.maxV = maxV;\n        prepareComponents(frame);\n        break;\n       case 0xFFC4:\n        var huffmanLength = readUint16();\n        for (i = 2; i < huffmanLength;) {\n         var huffmanTableSpec = data[offset++];\n         var codeLengths = new Uint8Array(16);\n         var codeLengthSum = 0;\n         for (j = 0; j < 16; j++, offset++) {\n          codeLengthSum += codeLengths[j] = data[offset];\n         }\n         var huffmanValues = new Uint8Array(codeLengthSum);\n         for (j = 0; j < codeLengthSum; j++, offset++) {\n          huffmanValues[j] = data[offset];\n         }\n         i += 17 + codeLengthSum;\n         (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n        }\n        break;\n       case 0xFFDD:\n        readUint16();\n        resetInterval = readUint16();\n        break;\n       case 0xFFDA:\n        var scanLength = readUint16();\n        var selectorsCount = data[offset++];\n        var components = [], component;\n        for (i = 0; i < selectorsCount; i++) {\n         var componentIndex = frame.componentIds[data[offset++]];\n         component = frame.components[componentIndex];\n         var tableSpec = data[offset++];\n         component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n         component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n         components.push(component);\n        }\n        var spectralStart = data[offset++];\n        var spectralEnd = data[offset++];\n        var successiveApproximation = data[offset++];\n        var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15);\n        offset += processed;\n        break;\n       case 0xFFFF:\n        if (data[offset] !== 0xFF) {\n         offset--;\n        }\n        break;\n       default:\n        if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n         offset -= 3;\n         break;\n        }\n        error('JPEG error: unknown marker ' + fileMarker.toString(16));\n       }\n       fileMarker = readUint16();\n      }\n      this.width = frame.samplesPerLine;\n      this.height = frame.scanLines;\n      this.jfif = jfif;\n      this.adobe = adobe;\n      this.components = [];\n      for (i = 0; i < frame.components.length; i++) {\n       component = frame.components[i];\n       var quantizationTable = quantizationTables[component.quantizationId];\n       if (quantizationTable) {\n        component.quantizationTable = quantizationTable;\n       }\n       this.components.push({\n        output: buildComponentData(frame, component),\n        scaleX: component.h / frame.maxH,\n        scaleY: component.v / frame.maxV,\n        blocksPerLine: component.blocksPerLine,\n        blocksPerColumn: component.blocksPerColumn\n       });\n      }\n      this.numComponents = this.components.length;\n     },\n     _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n      var scaleX = this.width / width, scaleY = this.height / height;\n      var component, componentScaleX, componentScaleY, blocksPerScanline;\n      var x, y, i, j, k;\n      var index;\n      var offset = 0;\n      var output;\n      var numComponents = this.components.length;\n      var dataLength = width * height * numComponents;\n      var data = new Uint8Array(dataLength);\n      var xScaleBlockOffset = new Uint32Array(width);\n      var mask3LSB = 0xfffffff8;\n      for (i = 0; i < numComponents; i++) {\n       component = this.components[i];\n       componentScaleX = component.scaleX * scaleX;\n       componentScaleY = component.scaleY * scaleY;\n       offset = i;\n       output = component.output;\n       blocksPerScanline = component.blocksPerLine + 1 << 3;\n       for (x = 0; x < width; x++) {\n        j = 0 | x * componentScaleX;\n        xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n       }\n       for (y = 0; y < height; y++) {\n        j = 0 | y * componentScaleY;\n        index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n        for (x = 0; x < width; x++) {\n         data[offset] = output[index + xScaleBlockOffset[x]];\n         offset += numComponents;\n        }\n       }\n      }\n      var transform = this.decodeTransform;\n      if (transform) {\n       for (i = 0; i < dataLength;) {\n        for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n         data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n        }\n       }\n      }\n      return data;\n     },\n     _isColorConversionNeeded: function isColorConversionNeeded() {\n      if (this.adobe && this.adobe.transformCode) {\n       return true;\n      } else if (this.numComponents === 3) {\n       if (!this.adobe && this.colorTransform === 0) {\n        return false;\n       }\n       return true;\n      }\n      if (!this.adobe && this.colorTransform === 1) {\n       return true;\n      }\n      return false;\n     },\n     _convertYccToRgb: function convertYccToRgb(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 3) {\n       Y = data[i];\n       Cb = data[i + 1];\n       Cr = data[i + 2];\n       data[i] = clamp0to255(Y - 179.456 + 1.402 * Cr);\n       data[i + 1] = clamp0to255(Y + 135.459 - 0.344 * Cb - 0.714 * Cr);\n       data[i + 2] = clamp0to255(Y - 226.816 + 1.772 * Cb);\n      }\n      return data;\n     },\n     _convertYcckToRgb: function convertYcckToRgb(data) {\n      var Y, Cb, Cr, k;\n      var offset = 0;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n       Y = data[i];\n       Cb = data[i + 1];\n       Cr = data[i + 2];\n       k = data[i + 3];\n       var r = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n       var g = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n       var b = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n       data[offset++] = clamp0to255(r);\n       data[offset++] = clamp0to255(g);\n       data[offset++] = clamp0to255(b);\n      }\n      return data;\n     },\n     _convertYcckToCmyk: function convertYcckToCmyk(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n       Y = data[i];\n       Cb = data[i + 1];\n       Cr = data[i + 2];\n       data[i] = clamp0to255(434.456 - Y - 1.402 * Cr);\n       data[i + 1] = clamp0to255(119.541 - Y + 0.344 * Cb + 0.714 * Cr);\n       data[i + 2] = clamp0to255(481.816 - Y - 1.772 * Cb);\n      }\n      return data;\n     },\n     _convertCmykToRgb: function convertCmykToRgb(data) {\n      var c, m, y, k;\n      var offset = 0;\n      var min = -255 * 255 * 255;\n      var scale = 1 / 255 / 255;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n       c = data[i];\n       m = data[i + 1];\n       y = data[i + 2];\n       k = data[i + 3];\n       var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 72734.4411664936) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 1401.7366389350734) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 4465.541406466231) - k * (21.86122147463605 * k + 48317.86113160301);\n       var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 20220.756542821975) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 48691.05921601825) + y * (4.444339102852739 * y + 9.8632861493405 * k - 6341.191035517494) - k * (20.737325471181034 * k + 47890.15695978492);\n       var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 3616.812083916688) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 28620.90484698408) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 49363.43385999684) - k * (22.33816807309886 * k + 45932.16563550634);\n       data[offset++] = r >= 0 ? 255 : r <= min ? 0 : 255 + r * scale | 0;\n       data[offset++] = g >= 0 ? 255 : g <= min ? 0 : 255 + g * scale | 0;\n       data[offset++] = b >= 0 ? 255 : b <= min ? 0 : 255 + b * scale | 0;\n      }\n      return data;\n     },\n     getData: function getData(width, height, forceRGBoutput) {\n      if (this.numComponents > 4) {\n       error('JPEG error: Unsupported color mode');\n      }\n      var data = this._getLinearizedBlockData(width, height);\n      if (this.numComponents === 1 && forceRGBoutput) {\n       var dataLength = data.length;\n       var rgbData = new Uint8Array(dataLength * 3);\n       var offset = 0;\n       for (var i = 0; i < dataLength; i++) {\n        var grayColor = data[i];\n        rgbData[offset++] = grayColor;\n        rgbData[offset++] = grayColor;\n        rgbData[offset++] = grayColor;\n       }\n       return rgbData;\n      } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\n       return this._convertYccToRgb(data);\n      } else if (this.numComponents === 4) {\n       if (this._isColorConversionNeeded()) {\n        if (forceRGBoutput) {\n         return this._convertYcckToRgb(data);\n        }\n        return this._convertYcckToCmyk(data);\n       } else if (forceRGBoutput) {\n        return this._convertCmykToRgb(data);\n       }\n      }\n      return data;\n     }\n    };\n    return JpegImage;\n   }();\n   exports.JpegImage = JpegImage;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsCoreJpx = {}, root.pdfjsSharedUtil, root.pdfjsCoreArithmeticDecoder);\n  }(this, function (exports, sharedUtil, coreArithmeticDecoder) {\n   var info = sharedUtil.info;\n   var warn = sharedUtil.warn;\n   var error = sharedUtil.error;\n   var log2 = sharedUtil.log2;\n   var readUint16 = sharedUtil.readUint16;\n   var readUint32 = sharedUtil.readUint32;\n   var ArithmeticDecoder = coreArithmeticDecoder.ArithmeticDecoder;\n   var JpxImage = function JpxImageClosure() {\n    var SubbandsGainLog2 = {\n     'LL': 0,\n     'LH': 1,\n     'HL': 1,\n     'HH': 2\n    };\n    function JpxImage() {\n     this.failOnCorruptedImage = false;\n    }\n    JpxImage.prototype = {\n     parse: function JpxImage_parse(data) {\n      var head = readUint16(data, 0);\n      if (head === 0xFF4F) {\n       this.parseCodestream(data, 0, data.length);\n       return;\n      }\n      var position = 0, length = data.length;\n      while (position < length) {\n       var headerSize = 8;\n       var lbox = readUint32(data, position);\n       var tbox = readUint32(data, position + 4);\n       position += headerSize;\n       if (lbox === 1) {\n        lbox = readUint32(data, position) * 4294967296 + readUint32(data, position + 4);\n        position += 8;\n        headerSize += 8;\n       }\n       if (lbox === 0) {\n        lbox = length - position + headerSize;\n       }\n       if (lbox < headerSize) {\n        error('JPX Error: Invalid box field size');\n       }\n       var dataLength = lbox - headerSize;\n       var jumpDataLength = true;\n       switch (tbox) {\n       case 0x6A703268:\n        jumpDataLength = false;\n        break;\n       case 0x636F6C72:\n        var method = data[position];\n        if (method === 1) {\n         var colorspace = readUint32(data, position + 3);\n         switch (colorspace) {\n         case 16:\n         case 17:\n         case 18:\n          break;\n         default:\n          warn('Unknown colorspace ' + colorspace);\n          break;\n         }\n        } else if (method === 2) {\n         info('ICC profile not supported');\n        }\n        break;\n       case 0x6A703263:\n        this.parseCodestream(data, position, position + dataLength);\n        break;\n       case 0x6A502020:\n        if (0x0d0a870a !== readUint32(data, position)) {\n         warn('Invalid JP2 signature');\n        }\n        break;\n       case 0x6A501A1A:\n       case 0x66747970:\n       case 0x72726571:\n       case 0x72657320:\n       case 0x69686472:\n        break;\n       default:\n        var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\n        warn('Unsupported header type ' + tbox + ' (' + headerType + ')');\n        break;\n       }\n       if (jumpDataLength) {\n        position += dataLength;\n       }\n      }\n     },\n     parseImageProperties: function JpxImage_parseImageProperties(stream) {\n      var newByte = stream.getByte();\n      while (newByte >= 0) {\n       var oldByte = newByte;\n       newByte = stream.getByte();\n       var code = oldByte << 8 | newByte;\n       if (code === 0xFF51) {\n        stream.skip(4);\n        var Xsiz = stream.getInt32() >>> 0;\n        var Ysiz = stream.getInt32() >>> 0;\n        var XOsiz = stream.getInt32() >>> 0;\n        var YOsiz = stream.getInt32() >>> 0;\n        stream.skip(16);\n        var Csiz = stream.getUint16();\n        this.width = Xsiz - XOsiz;\n        this.height = Ysiz - YOsiz;\n        this.componentsCount = Csiz;\n        this.bitsPerComponent = 8;\n        return;\n       }\n      }\n      error('JPX Error: No size marker found in JPX stream');\n     },\n     parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n      var context = {};\n      var doNotRecover = false;\n      try {\n       var position = start;\n       while (position + 1 < end) {\n        var code = readUint16(data, position);\n        position += 2;\n        var length = 0, j, sqcd, spqcds, spqcdSize, scalarExpounded, tile;\n        switch (code) {\n        case 0xFF4F:\n         context.mainHeader = true;\n         break;\n        case 0xFFD9:\n         break;\n        case 0xFF51:\n         length = readUint16(data, position);\n         var siz = {};\n         siz.Xsiz = readUint32(data, position + 4);\n         siz.Ysiz = readUint32(data, position + 8);\n         siz.XOsiz = readUint32(data, position + 12);\n         siz.YOsiz = readUint32(data, position + 16);\n         siz.XTsiz = readUint32(data, position + 20);\n         siz.YTsiz = readUint32(data, position + 24);\n         siz.XTOsiz = readUint32(data, position + 28);\n         siz.YTOsiz = readUint32(data, position + 32);\n         var componentsCount = readUint16(data, position + 36);\n         siz.Csiz = componentsCount;\n         var components = [];\n         j = position + 38;\n         for (var i = 0; i < componentsCount; i++) {\n          var component = {\n           precision: (data[j] & 0x7F) + 1,\n           isSigned: !!(data[j] & 0x80),\n           XRsiz: data[j + 1],\n           YRsiz: data[j + 1]\n          };\n          calculateComponentDimensions(component, siz);\n          components.push(component);\n         }\n         context.SIZ = siz;\n         context.components = components;\n         calculateTileGrids(context, components);\n         context.QCC = [];\n         context.COC = [];\n         break;\n        case 0xFF5C:\n         length = readUint16(data, position);\n         var qcd = {};\n         j = position + 2;\n         sqcd = data[j++];\n         switch (sqcd & 0x1F) {\n         case 0:\n          spqcdSize = 8;\n          scalarExpounded = true;\n          break;\n         case 1:\n          spqcdSize = 16;\n          scalarExpounded = false;\n          break;\n         case 2:\n          spqcdSize = 16;\n          scalarExpounded = true;\n          break;\n         default:\n          throw new Error('Invalid SQcd value ' + sqcd);\n         }\n         qcd.noQuantization = spqcdSize === 8;\n         qcd.scalarExpounded = scalarExpounded;\n         qcd.guardBits = sqcd >> 5;\n         spqcds = [];\n         while (j < length + position) {\n          var spqcd = {};\n          if (spqcdSize === 8) {\n           spqcd.epsilon = data[j++] >> 3;\n           spqcd.mu = 0;\n          } else {\n           spqcd.epsilon = data[j] >> 3;\n           spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n           j += 2;\n          }\n          spqcds.push(spqcd);\n         }\n         qcd.SPqcds = spqcds;\n         if (context.mainHeader) {\n          context.QCD = qcd;\n         } else {\n          context.currentTile.QCD = qcd;\n          context.currentTile.QCC = [];\n         }\n         break;\n        case 0xFF5D:\n         length = readUint16(data, position);\n         var qcc = {};\n         j = position + 2;\n         var cqcc;\n         if (context.SIZ.Csiz < 257) {\n          cqcc = data[j++];\n         } else {\n          cqcc = readUint16(data, j);\n          j += 2;\n         }\n         sqcd = data[j++];\n         switch (sqcd & 0x1F) {\n         case 0:\n          spqcdSize = 8;\n          scalarExpounded = true;\n          break;\n         case 1:\n          spqcdSize = 16;\n          scalarExpounded = false;\n          break;\n         case 2:\n          spqcdSize = 16;\n          scalarExpounded = true;\n          break;\n         default:\n          throw new Error('Invalid SQcd value ' + sqcd);\n         }\n         qcc.noQuantization = spqcdSize === 8;\n         qcc.scalarExpounded = scalarExpounded;\n         qcc.guardBits = sqcd >> 5;\n         spqcds = [];\n         while (j < length + position) {\n          spqcd = {};\n          if (spqcdSize === 8) {\n           spqcd.epsilon = data[j++] >> 3;\n           spqcd.mu = 0;\n          } else {\n           spqcd.epsilon = data[j] >> 3;\n           spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n           j += 2;\n          }\n          spqcds.push(spqcd);\n         }\n         qcc.SPqcds = spqcds;\n         if (context.mainHeader) {\n          context.QCC[cqcc] = qcc;\n         } else {\n          context.currentTile.QCC[cqcc] = qcc;\n         }\n         break;\n        case 0xFF52:\n         length = readUint16(data, position);\n         var cod = {};\n         j = position + 2;\n         var scod = data[j++];\n         cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n         cod.sopMarkerUsed = !!(scod & 2);\n         cod.ephMarkerUsed = !!(scod & 4);\n         cod.progressionOrder = data[j++];\n         cod.layersCount = readUint16(data, j);\n         j += 2;\n         cod.multipleComponentTransform = data[j++];\n         cod.decompositionLevelsCount = data[j++];\n         cod.xcb = (data[j++] & 0xF) + 2;\n         cod.ycb = (data[j++] & 0xF) + 2;\n         var blockStyle = data[j++];\n         cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n         cod.resetContextProbabilities = !!(blockStyle & 2);\n         cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n         cod.verticalyStripe = !!(blockStyle & 8);\n         cod.predictableTermination = !!(blockStyle & 16);\n         cod.segmentationSymbolUsed = !!(blockStyle & 32);\n         cod.reversibleTransformation = data[j++];\n         if (cod.entropyCoderWithCustomPrecincts) {\n          var precinctsSizes = [];\n          while (j < length + position) {\n           var precinctsSize = data[j++];\n           precinctsSizes.push({\n            PPx: precinctsSize & 0xF,\n            PPy: precinctsSize >> 4\n           });\n          }\n          cod.precinctsSizes = precinctsSizes;\n         }\n         var unsupported = [];\n         if (cod.selectiveArithmeticCodingBypass) {\n          unsupported.push('selectiveArithmeticCodingBypass');\n         }\n         if (cod.resetContextProbabilities) {\n          unsupported.push('resetContextProbabilities');\n         }\n         if (cod.terminationOnEachCodingPass) {\n          unsupported.push('terminationOnEachCodingPass');\n         }\n         if (cod.verticalyStripe) {\n          unsupported.push('verticalyStripe');\n         }\n         if (cod.predictableTermination) {\n          unsupported.push('predictableTermination');\n         }\n         if (unsupported.length > 0) {\n          doNotRecover = true;\n          throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\n         }\n         if (context.mainHeader) {\n          context.COD = cod;\n         } else {\n          context.currentTile.COD = cod;\n          context.currentTile.COC = [];\n         }\n         break;\n        case 0xFF90:\n         length = readUint16(data, position);\n         tile = {};\n         tile.index = readUint16(data, position + 2);\n         tile.length = readUint32(data, position + 4);\n         tile.dataEnd = tile.length + position - 2;\n         tile.partIndex = data[position + 8];\n         tile.partsCount = data[position + 9];\n         context.mainHeader = false;\n         if (tile.partIndex === 0) {\n          tile.COD = context.COD;\n          tile.COC = context.COC.slice(0);\n          tile.QCD = context.QCD;\n          tile.QCC = context.QCC.slice(0);\n         }\n         context.currentTile = tile;\n         break;\n        case 0xFF93:\n         tile = context.currentTile;\n         if (tile.partIndex === 0) {\n          initializeTile(context, tile.index);\n          buildPackets(context);\n         }\n         length = tile.dataEnd - position;\n         parseTilePackets(context, data, position, length);\n         break;\n        case 0xFF55:\n        case 0xFF57:\n        case 0xFF58:\n        case 0xFF64:\n         length = readUint16(data, position);\n         break;\n        case 0xFF53:\n         throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\n        default:\n         throw new Error('Unknown codestream code: ' + code.toString(16));\n        }\n        position += length;\n       }\n      } catch (e) {\n       if (doNotRecover || this.failOnCorruptedImage) {\n        error('JPX Error: ' + e.message);\n       } else {\n        warn('JPX: Trying to recover from: ' + e.message);\n       }\n      }\n      this.tiles = transformComponents(context);\n      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n      this.componentsCount = context.SIZ.Csiz;\n     }\n    };\n    function calculateComponentDimensions(component, siz) {\n     component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n     component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n     component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n     component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n     component.width = component.x1 - component.x0;\n     component.height = component.y1 - component.y0;\n    }\n    function calculateTileGrids(context, components) {\n     var siz = context.SIZ;\n     var tile, tiles = [];\n     var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n     var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n     for (var q = 0; q < numYtiles; q++) {\n      for (var p = 0; p < numXtiles; p++) {\n       tile = {};\n       tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n       tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n       tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n       tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n       tile.width = tile.tx1 - tile.tx0;\n       tile.height = tile.ty1 - tile.ty0;\n       tile.components = [];\n       tiles.push(tile);\n      }\n     }\n     context.tiles = tiles;\n     var componentsCount = siz.Csiz;\n     for (var i = 0, ii = componentsCount; i < ii; i++) {\n      var component = components[i];\n      for (var j = 0, jj = tiles.length; j < jj; j++) {\n       var tileComponent = {};\n       tile = tiles[j];\n       tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n       tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n       tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n       tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n       tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n       tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n       tile.components[i] = tileComponent;\n      }\n     }\n    }\n    function getBlocksDimensions(context, component, r) {\n     var codOrCoc = component.codingStyleParameters;\n     var result = {};\n     if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n      result.PPx = 15;\n      result.PPy = 15;\n     } else {\n      result.PPx = codOrCoc.precinctsSizes[r].PPx;\n      result.PPy = codOrCoc.precinctsSizes[r].PPy;\n     }\n     result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n     result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n     return result;\n    }\n    function buildPrecincts(context, resolution, dimensions) {\n     var precinctWidth = 1 << dimensions.PPx;\n     var precinctHeight = 1 << dimensions.PPy;\n     var isZeroRes = resolution.resLevel === 0;\n     var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n     var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n     var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n     var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n     var numprecincts = numprecinctswide * numprecinctshigh;\n     resolution.precinctParameters = {\n      precinctWidth: precinctWidth,\n      precinctHeight: precinctHeight,\n      numprecinctswide: numprecinctswide,\n      numprecinctshigh: numprecinctshigh,\n      numprecincts: numprecincts,\n      precinctWidthInSubband: precinctWidthInSubband,\n      precinctHeightInSubband: precinctHeightInSubband\n     };\n    }\n    function buildCodeblocks(context, subband, dimensions) {\n     var xcb_ = dimensions.xcb_;\n     var ycb_ = dimensions.ycb_;\n     var codeblockWidth = 1 << xcb_;\n     var codeblockHeight = 1 << ycb_;\n     var cbx0 = subband.tbx0 >> xcb_;\n     var cby0 = subband.tby0 >> ycb_;\n     var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n     var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n     var precinctParameters = subband.resolution.precinctParameters;\n     var codeblocks = [];\n     var precincts = [];\n     var i, j, codeblock, precinctNumber;\n     for (j = cby0; j < cby1; j++) {\n      for (i = cbx0; i < cbx1; i++) {\n       codeblock = {\n        cbx: i,\n        cby: j,\n        tbx0: codeblockWidth * i,\n        tby0: codeblockHeight * j,\n        tbx1: codeblockWidth * (i + 1),\n        tby1: codeblockHeight * (j + 1)\n       };\n       codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n       codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n       codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n       codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n       var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n       var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n       precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n       codeblock.precinctNumber = precinctNumber;\n       codeblock.subbandType = subband.type;\n       codeblock.Lblock = 3;\n       if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n        continue;\n       }\n       codeblocks.push(codeblock);\n       var precinct = precincts[precinctNumber];\n       if (precinct !== undefined) {\n        if (i < precinct.cbxMin) {\n         precinct.cbxMin = i;\n        } else if (i > precinct.cbxMax) {\n         precinct.cbxMax = i;\n        }\n        if (j < precinct.cbyMin) {\n         precinct.cbxMin = j;\n        } else if (j > precinct.cbyMax) {\n         precinct.cbyMax = j;\n        }\n       } else {\n        precincts[precinctNumber] = precinct = {\n         cbxMin: i,\n         cbyMin: j,\n         cbxMax: i,\n         cbyMax: j\n        };\n       }\n       codeblock.precinct = precinct;\n      }\n     }\n     subband.codeblockParameters = {\n      codeblockWidth: xcb_,\n      codeblockHeight: ycb_,\n      numcodeblockwide: cbx1 - cbx0 + 1,\n      numcodeblockhigh: cby1 - cby0 + 1\n     };\n     subband.codeblocks = codeblocks;\n     subband.precincts = precincts;\n    }\n    function createPacket(resolution, precinctNumber, layerNumber) {\n     var precinctCodeblocks = [];\n     var subbands = resolution.subbands;\n     for (var i = 0, ii = subbands.length; i < ii; i++) {\n      var subband = subbands[i];\n      var codeblocks = subband.codeblocks;\n      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n       var codeblock = codeblocks[j];\n       if (codeblock.precinctNumber !== precinctNumber) {\n        continue;\n       }\n       precinctCodeblocks.push(codeblock);\n      }\n     }\n     return {\n      layerNumber: layerNumber,\n      codeblocks: precinctCodeblocks\n     };\n    }\n    function LayerResolutionComponentPositionIterator(context) {\n     var siz = context.SIZ;\n     var tileIndex = context.currentTile.index;\n     var tile = context.tiles[tileIndex];\n     var layersCount = tile.codingStyleDefaultParameters.layersCount;\n     var componentsCount = siz.Csiz;\n     var maxDecompositionLevelsCount = 0;\n     for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n     }\n     var l = 0, r = 0, i = 0, k = 0;\n     this.nextPacket = function JpxImage_nextPacket() {\n      for (; l < layersCount; l++) {\n       for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; i < componentsCount; i++) {\n         var component = tile.components[i];\n         if (r > component.codingStyleParameters.decompositionLevelsCount) {\n          continue;\n         }\n         var resolution = component.resolutions[r];\n         var numprecincts = resolution.precinctParameters.numprecincts;\n         for (; k < numprecincts;) {\n          var packet = createPacket(resolution, k, l);\n          k++;\n          return packet;\n         }\n         k = 0;\n        }\n        i = 0;\n       }\n       r = 0;\n      }\n      error('JPX Error: Out of packets');\n     };\n    }\n    function ResolutionLayerComponentPositionIterator(context) {\n     var siz = context.SIZ;\n     var tileIndex = context.currentTile.index;\n     var tile = context.tiles[tileIndex];\n     var layersCount = tile.codingStyleDefaultParameters.layersCount;\n     var componentsCount = siz.Csiz;\n     var maxDecompositionLevelsCount = 0;\n     for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n     }\n     var r = 0, l = 0, i = 0, k = 0;\n     this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n       for (; l < layersCount; l++) {\n        for (; i < componentsCount; i++) {\n         var component = tile.components[i];\n         if (r > component.codingStyleParameters.decompositionLevelsCount) {\n          continue;\n         }\n         var resolution = component.resolutions[r];\n         var numprecincts = resolution.precinctParameters.numprecincts;\n         for (; k < numprecincts;) {\n          var packet = createPacket(resolution, k, l);\n          k++;\n          return packet;\n         }\n         k = 0;\n        }\n        i = 0;\n       }\n       l = 0;\n      }\n      error('JPX Error: Out of packets');\n     };\n    }\n    function ResolutionPositionComponentLayerIterator(context) {\n     var siz = context.SIZ;\n     var tileIndex = context.currentTile.index;\n     var tile = context.tiles[tileIndex];\n     var layersCount = tile.codingStyleDefaultParameters.layersCount;\n     var componentsCount = siz.Csiz;\n     var l, r, c, p;\n     var maxDecompositionLevelsCount = 0;\n     for (c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n     }\n     var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n     for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n      var maxNumPrecincts = 0;\n      for (c = 0; c < componentsCount; ++c) {\n       var resolutions = tile.components[c].resolutions;\n       if (r < resolutions.length) {\n        maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n       }\n      }\n      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n     }\n     l = 0;\n     r = 0;\n     c = 0;\n     p = 0;\n     this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n       for (; p < maxNumPrecinctsInLevel[r]; p++) {\n        for (; c < componentsCount; c++) {\n         var component = tile.components[c];\n         if (r > component.codingStyleParameters.decompositionLevelsCount) {\n          continue;\n         }\n         var resolution = component.resolutions[r];\n         var numprecincts = resolution.precinctParameters.numprecincts;\n         if (p >= numprecincts) {\n          continue;\n         }\n         for (; l < layersCount;) {\n          var packet = createPacket(resolution, p, l);\n          l++;\n          return packet;\n         }\n         l = 0;\n        }\n        c = 0;\n       }\n       p = 0;\n      }\n      error('JPX Error: Out of packets');\n     };\n    }\n    function PositionComponentResolutionLayerIterator(context) {\n     var siz = context.SIZ;\n     var tileIndex = context.currentTile.index;\n     var tile = context.tiles[tileIndex];\n     var layersCount = tile.codingStyleDefaultParameters.layersCount;\n     var componentsCount = siz.Csiz;\n     var precinctsSizes = getPrecinctSizesInImageScale(tile);\n     var precinctsIterationSizes = precinctsSizes;\n     var l = 0, r = 0, c = 0, px = 0, py = 0;\n     this.nextPacket = function JpxImage_nextPacket() {\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n       for (; px < precinctsIterationSizes.maxNumWide; px++) {\n        for (; c < componentsCount; c++) {\n         var component = tile.components[c];\n         var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n         for (; r <= decompositionLevelsCount; r++) {\n          var resolution = component.resolutions[r];\n          var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n          var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n          if (k === null) {\n           continue;\n          }\n          for (; l < layersCount;) {\n           var packet = createPacket(resolution, k, l);\n           l++;\n           return packet;\n          }\n          l = 0;\n         }\n         r = 0;\n        }\n        c = 0;\n       }\n       px = 0;\n      }\n      error('JPX Error: Out of packets');\n     };\n    }\n    function ComponentPositionResolutionLayerIterator(context) {\n     var siz = context.SIZ;\n     var tileIndex = context.currentTile.index;\n     var tile = context.tiles[tileIndex];\n     var layersCount = tile.codingStyleDefaultParameters.layersCount;\n     var componentsCount = siz.Csiz;\n     var precinctsSizes = getPrecinctSizesInImageScale(tile);\n     var l = 0, r = 0, c = 0, px = 0, py = 0;\n     this.nextPacket = function JpxImage_nextPacket() {\n      for (; c < componentsCount; ++c) {\n       var component = tile.components[c];\n       var precinctsIterationSizes = precinctsSizes.components[c];\n       var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n       for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n         for (; r <= decompositionLevelsCount; r++) {\n          var resolution = component.resolutions[r];\n          var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n          var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n          if (k === null) {\n           continue;\n          }\n          for (; l < layersCount;) {\n           var packet = createPacket(resolution, k, l);\n           l++;\n           return packet;\n          }\n          l = 0;\n         }\n         r = 0;\n        }\n        px = 0;\n       }\n       py = 0;\n      }\n      error('JPX Error: Out of packets');\n     };\n    }\n    function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n     var posX = pxIndex * precinctIterationSizes.minWidth;\n     var posY = pyIndex * precinctIterationSizes.minHeight;\n     if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n      return null;\n     }\n     var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n     return posX / sizeInImageScale.height + startPrecinctRowIndex;\n    }\n    function getPrecinctSizesInImageScale(tile) {\n     var componentsCount = tile.components.length;\n     var minWidth = Number.MAX_VALUE;\n     var minHeight = Number.MAX_VALUE;\n     var maxNumWide = 0;\n     var maxNumHigh = 0;\n     var sizePerComponent = new Array(componentsCount);\n     for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var sizePerResolution = new Array(decompositionLevelsCount + 1);\n      var minWidthCurrentComponent = Number.MAX_VALUE;\n      var minHeightCurrentComponent = Number.MAX_VALUE;\n      var maxNumWideCurrentComponent = 0;\n      var maxNumHighCurrentComponent = 0;\n      var scale = 1;\n      for (var r = decompositionLevelsCount; r >= 0; --r) {\n       var resolution = component.resolutions[r];\n       var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n       var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n       minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n       minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n       maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n       maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n       sizePerResolution[r] = {\n        width: widthCurrentResolution,\n        height: heightCurrentResolution\n       };\n       scale <<= 1;\n      }\n      minWidth = Math.min(minWidth, minWidthCurrentComponent);\n      minHeight = Math.min(minHeight, minHeightCurrentComponent);\n      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n      sizePerComponent[c] = {\n       resolutions: sizePerResolution,\n       minWidth: minWidthCurrentComponent,\n       minHeight: minHeightCurrentComponent,\n       maxNumWide: maxNumWideCurrentComponent,\n       maxNumHigh: maxNumHighCurrentComponent\n      };\n     }\n     return {\n      components: sizePerComponent,\n      minWidth: minWidth,\n      minHeight: minHeight,\n      maxNumWide: maxNumWide,\n      maxNumHigh: maxNumHigh\n     };\n    }\n    function buildPackets(context) {\n     var siz = context.SIZ;\n     var tileIndex = context.currentTile.index;\n     var tile = context.tiles[tileIndex];\n     var componentsCount = siz.Csiz;\n     for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var resolutions = [];\n      var subbands = [];\n      for (var r = 0; r <= decompositionLevelsCount; r++) {\n       var blocksDimensions = getBlocksDimensions(context, component, r);\n       var resolution = {};\n       var scale = 1 << decompositionLevelsCount - r;\n       resolution.trx0 = Math.ceil(component.tcx0 / scale);\n       resolution.try0 = Math.ceil(component.tcy0 / scale);\n       resolution.trx1 = Math.ceil(component.tcx1 / scale);\n       resolution.try1 = Math.ceil(component.tcy1 / scale);\n       resolution.resLevel = r;\n       buildPrecincts(context, resolution, blocksDimensions);\n       resolutions.push(resolution);\n       var subband;\n       if (r === 0) {\n        subband = {};\n        subband.type = 'LL';\n        subband.tbx0 = Math.ceil(component.tcx0 / scale);\n        subband.tby0 = Math.ceil(component.tcy0 / scale);\n        subband.tbx1 = Math.ceil(component.tcx1 / scale);\n        subband.tby1 = Math.ceil(component.tcy1 / scale);\n        subband.resolution = resolution;\n        buildCodeblocks(context, subband, blocksDimensions);\n        subbands.push(subband);\n        resolution.subbands = [subband];\n       } else {\n        var bscale = 1 << decompositionLevelsCount - r + 1;\n        var resolutionSubbands = [];\n        subband = {};\n        subband.type = 'HL';\n        subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n        subband.tby0 = Math.ceil(component.tcy0 / bscale);\n        subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n        subband.tby1 = Math.ceil(component.tcy1 / bscale);\n        subband.resolution = resolution;\n        buildCodeblocks(context, subband, blocksDimensions);\n        subbands.push(subband);\n        resolutionSubbands.push(subband);\n        subband = {};\n        subband.type = 'LH';\n        subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n        subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n        subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n        subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n        subband.resolution = resolution;\n        buildCodeblocks(context, subband, blocksDimensions);\n        subbands.push(subband);\n        resolutionSubbands.push(subband);\n        subband = {};\n        subband.type = 'HH';\n        subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n        subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n        subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n        subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n        subband.resolution = resolution;\n        buildCodeblocks(context, subband, blocksDimensions);\n        subbands.push(subband);\n        resolutionSubbands.push(subband);\n        resolution.subbands = resolutionSubbands;\n       }\n      }\n      component.resolutions = resolutions;\n      component.subbands = subbands;\n     }\n     var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n     switch (progressionOrder) {\n     case 0:\n      tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n      break;\n     case 1:\n      tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n      break;\n     case 2:\n      tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n      break;\n     case 3:\n      tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n      break;\n     case 4:\n      tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n      break;\n     default:\n      error('JPX Error: Unsupported progression order ' + progressionOrder);\n     }\n    }\n    function parseTilePackets(context, data, offset, dataLength) {\n     var position = 0;\n     var buffer, bufferSize = 0, skipNextBit = false;\n     function readBits(count) {\n      while (bufferSize < count) {\n       var b = data[offset + position];\n       position++;\n       if (skipNextBit) {\n        buffer = buffer << 7 | b;\n        bufferSize += 7;\n        skipNextBit = false;\n       } else {\n        buffer = buffer << 8 | b;\n        bufferSize += 8;\n       }\n       if (b === 0xFF) {\n        skipNextBit = true;\n       }\n      }\n      bufferSize -= count;\n      return buffer >>> bufferSize & (1 << count) - 1;\n     }\n     function skipMarkerIfEqual(value) {\n      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\n       skipBytes(1);\n       return true;\n      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\n       skipBytes(2);\n       return true;\n      }\n      return false;\n     }\n     function skipBytes(count) {\n      position += count;\n     }\n     function alignToByte() {\n      bufferSize = 0;\n      if (skipNextBit) {\n       position++;\n       skipNextBit = false;\n      }\n     }\n     function readCodingpasses() {\n      if (readBits(1) === 0) {\n       return 1;\n      }\n      if (readBits(1) === 0) {\n       return 2;\n      }\n      var value = readBits(2);\n      if (value < 3) {\n       return value + 3;\n      }\n      value = readBits(5);\n      if (value < 31) {\n       return value + 6;\n      }\n      value = readBits(7);\n      return value + 37;\n     }\n     var tileIndex = context.currentTile.index;\n     var tile = context.tiles[tileIndex];\n     var sopMarkerUsed = context.COD.sopMarkerUsed;\n     var ephMarkerUsed = context.COD.ephMarkerUsed;\n     var packetsIterator = tile.packetsIterator;\n     while (position < dataLength) {\n      alignToByte();\n      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n       skipBytes(4);\n      }\n      var packet = packetsIterator.nextPacket();\n      if (!readBits(1)) {\n       continue;\n      }\n      var layerNumber = packet.layerNumber;\n      var queue = [], codeblock;\n      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n       codeblock = packet.codeblocks[i];\n       var precinct = codeblock.precinct;\n       var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n       var codeblockRow = codeblock.cby - precinct.cbyMin;\n       var codeblockIncluded = false;\n       var firstTimeInclusion = false;\n       var valueReady;\n       if (codeblock['included'] !== undefined) {\n        codeblockIncluded = !!readBits(1);\n       } else {\n        precinct = codeblock.precinct;\n        var inclusionTree, zeroBitPlanesTree;\n        if (precinct['inclusionTree'] !== undefined) {\n         inclusionTree = precinct.inclusionTree;\n        } else {\n         var width = precinct.cbxMax - precinct.cbxMin + 1;\n         var height = precinct.cbyMax - precinct.cbyMin + 1;\n         inclusionTree = new InclusionTree(width, height, layerNumber);\n         zeroBitPlanesTree = new TagTree(width, height);\n         precinct.inclusionTree = inclusionTree;\n         precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n        }\n        if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n         while (true) {\n          if (readBits(1)) {\n           valueReady = !inclusionTree.nextLevel();\n           if (valueReady) {\n            codeblock.included = true;\n            codeblockIncluded = firstTimeInclusion = true;\n            break;\n           }\n          } else {\n           inclusionTree.incrementValue(layerNumber);\n           break;\n          }\n         }\n        }\n       }\n       if (!codeblockIncluded) {\n        continue;\n       }\n       if (firstTimeInclusion) {\n        zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n        zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n        while (true) {\n         if (readBits(1)) {\n          valueReady = !zeroBitPlanesTree.nextLevel();\n          if (valueReady) {\n           break;\n          }\n         } else {\n          zeroBitPlanesTree.incrementValue();\n         }\n        }\n        codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n       }\n       var codingpasses = readCodingpasses();\n       while (readBits(1)) {\n        codeblock.Lblock++;\n       }\n       var codingpassesLog2 = log2(codingpasses);\n       var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n       var codedDataLength = readBits(bits);\n       queue.push({\n        codeblock: codeblock,\n        codingpasses: codingpasses,\n        dataLength: codedDataLength\n       });\n      }\n      alignToByte();\n      if (ephMarkerUsed) {\n       skipMarkerIfEqual(0x92);\n      }\n      while (queue.length > 0) {\n       var packetItem = queue.shift();\n       codeblock = packetItem.codeblock;\n       if (codeblock['data'] === undefined) {\n        codeblock.data = [];\n       }\n       codeblock.data.push({\n        data: data,\n        start: offset + position,\n        end: offset + position + packetItem.dataLength,\n        codingpasses: packetItem.codingpasses\n       });\n       position += packetItem.dataLength;\n      }\n     }\n     return position;\n    }\n    function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n     var x0 = subband.tbx0;\n     var y0 = subband.tby0;\n     var width = subband.tbx1 - subband.tbx0;\n     var codeblocks = subband.codeblocks;\n     var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n     var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n     for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n      var codeblock = codeblocks[i];\n      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n      if (blockWidth === 0 || blockHeight === 0) {\n       continue;\n      }\n      if (codeblock['data'] === undefined) {\n       continue;\n      }\n      var bitModel, currentCodingpassType;\n      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n      currentCodingpassType = 2;\n      var data = codeblock.data, totalLength = 0, codingpasses = 0;\n      var j, jj, dataItem;\n      for (j = 0, jj = data.length; j < jj; j++) {\n       dataItem = data[j];\n       totalLength += dataItem.end - dataItem.start;\n       codingpasses += dataItem.codingpasses;\n      }\n      var encodedData = new Uint8Array(totalLength);\n      var position = 0;\n      for (j = 0, jj = data.length; j < jj; j++) {\n       dataItem = data[j];\n       var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n       encodedData.set(chunk, position);\n       position += chunk.length;\n      }\n      var decoder = new ArithmeticDecoder(encodedData, 0, totalLength);\n      bitModel.setDecoder(decoder);\n      for (j = 0; j < codingpasses; j++) {\n       switch (currentCodingpassType) {\n       case 0:\n        bitModel.runSignificancePropagationPass();\n        break;\n       case 1:\n        bitModel.runMagnitudeRefinementPass();\n        break;\n       case 2:\n        bitModel.runCleanupPass();\n        if (segmentationSymbolUsed) {\n         bitModel.checkSegmentationSymbol();\n        }\n        break;\n       }\n       currentCodingpassType = (currentCodingpassType + 1) % 3;\n      }\n      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n      var sign = bitModel.coefficentsSign;\n      var magnitude = bitModel.coefficentsMagnitude;\n      var bitsDecoded = bitModel.bitsDecoded;\n      var magnitudeCorrection = reversible ? 0 : 0.5;\n      var k, n, nb;\n      position = 0;\n      var interleave = subband.type !== 'LL';\n      for (j = 0; j < blockHeight; j++) {\n       var row = offset / width | 0;\n       var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n       for (k = 0; k < blockWidth; k++) {\n        n = magnitude[position];\n        if (n !== 0) {\n         n = (n + magnitudeCorrection) * delta;\n         if (sign[position] !== 0) {\n          n = -n;\n         }\n         nb = bitsDecoded[position];\n         var pos = interleave ? levelOffset + (offset << 1) : offset;\n         if (reversible && nb >= mb) {\n          coefficients[pos] = n;\n         } else {\n          coefficients[pos] = n * (1 << mb - nb);\n         }\n        }\n        offset++;\n        position++;\n       }\n       offset += width - blockWidth;\n      }\n     }\n    }\n    function transformTile(context, tile, c) {\n     var component = tile.components[c];\n     var codingStyleParameters = component.codingStyleParameters;\n     var quantizationParameters = component.quantizationParameters;\n     var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n     var spqcds = quantizationParameters.SPqcds;\n     var scalarExpounded = quantizationParameters.scalarExpounded;\n     var guardBits = quantizationParameters.guardBits;\n     var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n     var precision = context.components[c].precision;\n     var reversible = codingStyleParameters.reversibleTransformation;\n     var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n     var subbandCoefficients = [];\n     var b = 0;\n     for (var i = 0; i <= decompositionLevelsCount; i++) {\n      var resolution = component.resolutions[i];\n      var width = resolution.trx1 - resolution.trx0;\n      var height = resolution.try1 - resolution.try0;\n      var coefficients = new Float32Array(width * height);\n      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n       var mu, epsilon;\n       if (!scalarExpounded) {\n        mu = spqcds[0].mu;\n        epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n       } else {\n        mu = spqcds[b].mu;\n        epsilon = spqcds[b].epsilon;\n        b++;\n       }\n       var subband = resolution.subbands[j];\n       var gainLog2 = SubbandsGainLog2[subband.type];\n       var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n       var mb = guardBits + epsilon - 1;\n       copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n      }\n      subbandCoefficients.push({\n       width: width,\n       height: height,\n       items: coefficients\n      });\n     }\n     var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n     return {\n      left: component.tcx0,\n      top: component.tcy0,\n      width: result.width,\n      height: result.height,\n      items: result.items\n     };\n    }\n    function transformComponents(context) {\n     var siz = context.SIZ;\n     var components = context.components;\n     var componentsCount = siz.Csiz;\n     var resultImages = [];\n     for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n      var tile = context.tiles[i];\n      var transformedTiles = [];\n      var c;\n      for (c = 0; c < componentsCount; c++) {\n       transformedTiles[c] = transformTile(context, tile, c);\n      }\n      var tile0 = transformedTiles[0];\n      var out = new Uint8Array(tile0.items.length * componentsCount);\n      var result = {\n       left: tile0.left,\n       top: tile0.top,\n       width: tile0.width,\n       height: tile0.height,\n       items: out\n      };\n      var shift, offset, max, min, maxK;\n      var pos = 0, j, jj, y0, y1, y2, r, g, b, k, val;\n      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n       var fourComponents = componentsCount === 4;\n       var y0items = transformedTiles[0].items;\n       var y1items = transformedTiles[1].items;\n       var y2items = transformedTiles[2].items;\n       var y3items = fourComponents ? transformedTiles[3].items : null;\n       shift = components[0].precision - 8;\n       offset = (128 << shift) + 0.5;\n       max = 255 * (1 << shift);\n       maxK = max * 0.5;\n       min = -maxK;\n       var component0 = tile.components[0];\n       var alpha01 = componentsCount - 3;\n       jj = y0items.length;\n       if (!component0.codingStyleParameters.reversibleTransformation) {\n        for (j = 0; j < jj; j++, pos += alpha01) {\n         y0 = y0items[j] + offset;\n         y1 = y1items[j];\n         y2 = y2items[j];\n         r = y0 + 1.402 * y2;\n         g = y0 - 0.34413 * y1 - 0.71414 * y2;\n         b = y0 + 1.772 * y1;\n         out[pos++] = r <= 0 ? 0 : r >= max ? 255 : r >> shift;\n         out[pos++] = g <= 0 ? 0 : g >= max ? 255 : g >> shift;\n         out[pos++] = b <= 0 ? 0 : b >= max ? 255 : b >> shift;\n        }\n       } else {\n        for (j = 0; j < jj; j++, pos += alpha01) {\n         y0 = y0items[j] + offset;\n         y1 = y1items[j];\n         y2 = y2items[j];\n         g = y0 - (y2 + y1 >> 2);\n         r = g + y2;\n         b = g + y1;\n         out[pos++] = r <= 0 ? 0 : r >= max ? 255 : r >> shift;\n         out[pos++] = g <= 0 ? 0 : g >= max ? 255 : g >> shift;\n         out[pos++] = b <= 0 ? 0 : b >= max ? 255 : b >> shift;\n        }\n       }\n       if (fourComponents) {\n        for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n         k = y3items[j];\n         out[pos] = k <= min ? 0 : k >= maxK ? 255 : k + offset >> shift;\n        }\n       }\n      } else {\n       for (c = 0; c < componentsCount; c++) {\n        var items = transformedTiles[c].items;\n        shift = components[c].precision - 8;\n        offset = (128 << shift) + 0.5;\n        max = 127.5 * (1 << shift);\n        min = -max;\n        for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n         val = items[j];\n         out[pos] = val <= min ? 0 : val >= max ? 255 : val + offset >> shift;\n         pos += componentsCount;\n        }\n       }\n      }\n      resultImages.push(result);\n     }\n     return resultImages;\n    }\n    function initializeTile(context, tileIndex) {\n     var siz = context.SIZ;\n     var componentsCount = siz.Csiz;\n     var tile = context.tiles[tileIndex];\n     for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n      component.quantizationParameters = qcdOrQcc;\n      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n      component.codingStyleParameters = codOrCoc;\n     }\n     tile.codingStyleDefaultParameters = context.currentTile.COD;\n    }\n    var TagTree = function TagTreeClosure() {\n     function TagTree(width, height) {\n      var levelsLength = log2(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n       var level = {\n        width: width,\n        height: height,\n        items: []\n       };\n       this.levels.push(level);\n       width = Math.ceil(width / 2);\n       height = Math.ceil(height / 2);\n      }\n     }\n     TagTree.prototype = {\n      reset: function TagTree_reset(i, j) {\n       var currentLevel = 0, value = 0, level;\n       while (currentLevel < this.levels.length) {\n        level = this.levels[currentLevel];\n        var index = i + j * level.width;\n        if (level.items[index] !== undefined) {\n         value = level.items[index];\n         break;\n        }\n        level.index = index;\n        i >>= 1;\n        j >>= 1;\n        currentLevel++;\n       }\n       currentLevel--;\n       level = this.levels[currentLevel];\n       level.items[level.index] = value;\n       this.currentLevel = currentLevel;\n       delete this.value;\n      },\n      incrementValue: function TagTree_incrementValue() {\n       var level = this.levels[this.currentLevel];\n       level.items[level.index]++;\n      },\n      nextLevel: function TagTree_nextLevel() {\n       var currentLevel = this.currentLevel;\n       var level = this.levels[currentLevel];\n       var value = level.items[level.index];\n       currentLevel--;\n       if (currentLevel < 0) {\n        this.value = value;\n        return false;\n       }\n       this.currentLevel = currentLevel;\n       level = this.levels[currentLevel];\n       level.items[level.index] = value;\n       return true;\n      }\n     };\n     return TagTree;\n    }();\n    var InclusionTree = function InclusionTreeClosure() {\n     function InclusionTree(width, height, defaultValue) {\n      var levelsLength = log2(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n       var items = new Uint8Array(width * height);\n       for (var j = 0, jj = items.length; j < jj; j++) {\n        items[j] = defaultValue;\n       }\n       var level = {\n        width: width,\n        height: height,\n        items: items\n       };\n       this.levels.push(level);\n       width = Math.ceil(width / 2);\n       height = Math.ceil(height / 2);\n      }\n     }\n     InclusionTree.prototype = {\n      reset: function InclusionTree_reset(i, j, stopValue) {\n       var currentLevel = 0;\n       while (currentLevel < this.levels.length) {\n        var level = this.levels[currentLevel];\n        var index = i + j * level.width;\n        level.index = index;\n        var value = level.items[index];\n        if (value === 0xFF) {\n         break;\n        }\n        if (value > stopValue) {\n         this.currentLevel = currentLevel;\n         this.propagateValues();\n         return false;\n        }\n        i >>= 1;\n        j >>= 1;\n        currentLevel++;\n       }\n       this.currentLevel = currentLevel - 1;\n       return true;\n      },\n      incrementValue: function InclusionTree_incrementValue(stopValue) {\n       var level = this.levels[this.currentLevel];\n       level.items[level.index] = stopValue + 1;\n       this.propagateValues();\n      },\n      propagateValues: function InclusionTree_propagateValues() {\n       var levelIndex = this.currentLevel;\n       var level = this.levels[levelIndex];\n       var currentValue = level.items[level.index];\n       while (--levelIndex >= 0) {\n        level = this.levels[levelIndex];\n        level.items[level.index] = currentValue;\n       }\n      },\n      nextLevel: function InclusionTree_nextLevel() {\n       var currentLevel = this.currentLevel;\n       var level = this.levels[currentLevel];\n       var value = level.items[level.index];\n       level.items[level.index] = 0xFF;\n       currentLevel--;\n       if (currentLevel < 0) {\n        return false;\n       }\n       this.currentLevel = currentLevel;\n       level = this.levels[currentLevel];\n       level.items[level.index] = value;\n       return true;\n      }\n     };\n     return InclusionTree;\n    }();\n    var BitModel = function BitModelClosure() {\n     var UNIFORM_CONTEXT = 17;\n     var RUNLENGTH_CONTEXT = 18;\n     var LLAndLHContextsLabel = new Uint8Array([\n      0,\n      5,\n      8,\n      0,\n      3,\n      7,\n      8,\n      0,\n      4,\n      7,\n      8,\n      0,\n      0,\n      0,\n      0,\n      0,\n      1,\n      6,\n      8,\n      0,\n      3,\n      7,\n      8,\n      0,\n      4,\n      7,\n      8,\n      0,\n      0,\n      0,\n      0,\n      0,\n      2,\n      6,\n      8,\n      0,\n      3,\n      7,\n      8,\n      0,\n      4,\n      7,\n      8,\n      0,\n      0,\n      0,\n      0,\n      0,\n      2,\n      6,\n      8,\n      0,\n      3,\n      7,\n      8,\n      0,\n      4,\n      7,\n      8,\n      0,\n      0,\n      0,\n      0,\n      0,\n      2,\n      6,\n      8,\n      0,\n      3,\n      7,\n      8,\n      0,\n      4,\n      7,\n      8\n     ]);\n     var HLContextLabel = new Uint8Array([\n      0,\n      3,\n      4,\n      0,\n      5,\n      7,\n      7,\n      0,\n      8,\n      8,\n      8,\n      0,\n      0,\n      0,\n      0,\n      0,\n      1,\n      3,\n      4,\n      0,\n      6,\n      7,\n      7,\n      0,\n      8,\n      8,\n      8,\n      0,\n      0,\n      0,\n      0,\n      0,\n      2,\n      3,\n      4,\n      0,\n      6,\n      7,\n      7,\n      0,\n      8,\n      8,\n      8,\n      0,\n      0,\n      0,\n      0,\n      0,\n      2,\n      3,\n      4,\n      0,\n      6,\n      7,\n      7,\n      0,\n      8,\n      8,\n      8,\n      0,\n      0,\n      0,\n      0,\n      0,\n      2,\n      3,\n      4,\n      0,\n      6,\n      7,\n      7,\n      0,\n      8,\n      8,\n      8\n     ]);\n     var HHContextLabel = new Uint8Array([\n      0,\n      1,\n      2,\n      0,\n      1,\n      2,\n      2,\n      0,\n      2,\n      2,\n      2,\n      0,\n      0,\n      0,\n      0,\n      0,\n      3,\n      4,\n      5,\n      0,\n      4,\n      5,\n      5,\n      0,\n      5,\n      5,\n      5,\n      0,\n      0,\n      0,\n      0,\n      0,\n      6,\n      7,\n      7,\n      0,\n      7,\n      7,\n      7,\n      0,\n      7,\n      7,\n      7,\n      0,\n      0,\n      0,\n      0,\n      0,\n      8,\n      8,\n      8,\n      0,\n      8,\n      8,\n      8,\n      0,\n      8,\n      8,\n      8,\n      0,\n      0,\n      0,\n      0,\n      0,\n      8,\n      8,\n      8,\n      0,\n      8,\n      8,\n      8,\n      0,\n      8,\n      8,\n      8\n     ]);\n     function BitModel(width, height, subband, zeroBitPlanes, mb) {\n      this.width = width;\n      this.height = height;\n      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\n      var coefficientCount = width * height;\n      this.neighborsSignificance = new Uint8Array(coefficientCount);\n      this.coefficentsSign = new Uint8Array(coefficientCount);\n      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\n      this.processingFlags = new Uint8Array(coefficientCount);\n      var bitsDecoded = new Uint8Array(coefficientCount);\n      if (zeroBitPlanes !== 0) {\n       for (var i = 0; i < coefficientCount; i++) {\n        bitsDecoded[i] = zeroBitPlanes;\n       }\n      }\n      this.bitsDecoded = bitsDecoded;\n      this.reset();\n     }\n     BitModel.prototype = {\n      setDecoder: function BitModel_setDecoder(decoder) {\n       this.decoder = decoder;\n      },\n      reset: function BitModel_reset() {\n       this.contexts = new Int8Array(19);\n       this.contexts[0] = 4 << 1 | 0;\n       this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n       this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n      },\n      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n       var neighborsSignificance = this.neighborsSignificance;\n       var width = this.width, height = this.height;\n       var left = column > 0;\n       var right = column + 1 < width;\n       var i;\n       if (row > 0) {\n        i = index - width;\n        if (left) {\n         neighborsSignificance[i - 1] += 0x10;\n        }\n        if (right) {\n         neighborsSignificance[i + 1] += 0x10;\n        }\n        neighborsSignificance[i] += 0x04;\n       }\n       if (row + 1 < height) {\n        i = index + width;\n        if (left) {\n         neighborsSignificance[i - 1] += 0x10;\n        }\n        if (right) {\n         neighborsSignificance[i + 1] += 0x10;\n        }\n        neighborsSignificance[i] += 0x04;\n       }\n       if (left) {\n        neighborsSignificance[index - 1] += 0x01;\n       }\n       if (right) {\n        neighborsSignificance[index + 1] += 0x01;\n       }\n       neighborsSignificance[index] |= 0x80;\n      },\n      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n       var decoder = this.decoder;\n       var width = this.width, height = this.height;\n       var coefficentsMagnitude = this.coefficentsMagnitude;\n       var coefficentsSign = this.coefficentsSign;\n       var neighborsSignificance = this.neighborsSignificance;\n       var processingFlags = this.processingFlags;\n       var contexts = this.contexts;\n       var labels = this.contextLabelTable;\n       var bitsDecoded = this.bitsDecoded;\n       var processedInverseMask = ~1;\n       var processedMask = 1;\n       var firstMagnitudeBitMask = 2;\n       for (var i0 = 0; i0 < height; i0 += 4) {\n        for (var j = 0; j < width; j++) {\n         var index = i0 * width + j;\n         for (var i1 = 0; i1 < 4; i1++, index += width) {\n          var i = i0 + i1;\n          if (i >= height) {\n           break;\n          }\n          processingFlags[index] &= processedInverseMask;\n          if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n           continue;\n          }\n          var contextLabel = labels[neighborsSignificance[index]];\n          var decision = decoder.readBit(contexts, contextLabel);\n          if (decision) {\n           var sign = this.decodeSignBit(i, j, index);\n           coefficentsSign[index] = sign;\n           coefficentsMagnitude[index] = 1;\n           this.setNeighborsSignificance(i, j, index);\n           processingFlags[index] |= firstMagnitudeBitMask;\n          }\n          bitsDecoded[index]++;\n          processingFlags[index] |= processedMask;\n         }\n        }\n       }\n      },\n      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n       var width = this.width, height = this.height;\n       var coefficentsMagnitude = this.coefficentsMagnitude;\n       var coefficentsSign = this.coefficentsSign;\n       var contribution, sign0, sign1, significance1;\n       var contextLabel, decoded;\n       significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n       if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n        sign1 = coefficentsSign[index + 1];\n        if (significance1) {\n         sign0 = coefficentsSign[index - 1];\n         contribution = 1 - sign1 - sign0;\n        } else {\n         contribution = 1 - sign1 - sign1;\n        }\n       } else if (significance1) {\n        sign0 = coefficentsSign[index - 1];\n        contribution = 1 - sign0 - sign0;\n       } else {\n        contribution = 0;\n       }\n       var horizontalContribution = 3 * contribution;\n       significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n       if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n        sign1 = coefficentsSign[index + width];\n        if (significance1) {\n         sign0 = coefficentsSign[index - width];\n         contribution = 1 - sign1 - sign0 + horizontalContribution;\n        } else {\n         contribution = 1 - sign1 - sign1 + horizontalContribution;\n        }\n       } else if (significance1) {\n        sign0 = coefficentsSign[index - width];\n        contribution = 1 - sign0 - sign0 + horizontalContribution;\n       } else {\n        contribution = horizontalContribution;\n       }\n       if (contribution >= 0) {\n        contextLabel = 9 + contribution;\n        decoded = this.decoder.readBit(this.contexts, contextLabel);\n       } else {\n        contextLabel = 9 - contribution;\n        decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n       }\n       return decoded;\n      },\n      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n       var decoder = this.decoder;\n       var width = this.width, height = this.height;\n       var coefficentsMagnitude = this.coefficentsMagnitude;\n       var neighborsSignificance = this.neighborsSignificance;\n       var contexts = this.contexts;\n       var bitsDecoded = this.bitsDecoded;\n       var processingFlags = this.processingFlags;\n       var processedMask = 1;\n       var firstMagnitudeBitMask = 2;\n       var length = width * height;\n       var width4 = width * 4;\n       for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n        indexNext = Math.min(length, index0 + width4);\n        for (var j = 0; j < width; j++) {\n         for (var index = index0 + j; index < indexNext; index += width) {\n          if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n           continue;\n          }\n          var contextLabel = 16;\n          if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n           processingFlags[index] ^= firstMagnitudeBitMask;\n           var significance = neighborsSignificance[index] & 127;\n           contextLabel = significance === 0 ? 15 : 14;\n          }\n          var bit = decoder.readBit(contexts, contextLabel);\n          coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n          bitsDecoded[index]++;\n          processingFlags[index] |= processedMask;\n         }\n        }\n       }\n      },\n      runCleanupPass: function BitModel_runCleanupPass() {\n       var decoder = this.decoder;\n       var width = this.width, height = this.height;\n       var neighborsSignificance = this.neighborsSignificance;\n       var coefficentsMagnitude = this.coefficentsMagnitude;\n       var coefficentsSign = this.coefficentsSign;\n       var contexts = this.contexts;\n       var labels = this.contextLabelTable;\n       var bitsDecoded = this.bitsDecoded;\n       var processingFlags = this.processingFlags;\n       var processedMask = 1;\n       var firstMagnitudeBitMask = 2;\n       var oneRowDown = width;\n       var twoRowsDown = width * 2;\n       var threeRowsDown = width * 3;\n       var iNext;\n       for (var i0 = 0; i0 < height; i0 = iNext) {\n        iNext = Math.min(i0 + 4, height);\n        var indexBase = i0 * width;\n        var checkAllEmpty = i0 + 3 < height;\n        for (var j = 0; j < width; j++) {\n         var index0 = indexBase + j;\n         var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n         var i1 = 0, index = index0;\n         var i = i0, sign;\n         if (allEmpty) {\n          var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n          if (!hasSignificantCoefficent) {\n           bitsDecoded[index0]++;\n           bitsDecoded[index0 + oneRowDown]++;\n           bitsDecoded[index0 + twoRowsDown]++;\n           bitsDecoded[index0 + threeRowsDown]++;\n           continue;\n          }\n          i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n          if (i1 !== 0) {\n           i = i0 + i1;\n           index += i1 * width;\n          }\n          sign = this.decodeSignBit(i, j, index);\n          coefficentsSign[index] = sign;\n          coefficentsMagnitude[index] = 1;\n          this.setNeighborsSignificance(i, j, index);\n          processingFlags[index] |= firstMagnitudeBitMask;\n          index = index0;\n          for (var i2 = i0; i2 <= i; i2++, index += width) {\n           bitsDecoded[index]++;\n          }\n          i1++;\n         }\n         for (i = i0 + i1; i < iNext; i++, index += width) {\n          if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n           continue;\n          }\n          var contextLabel = labels[neighborsSignificance[index]];\n          var decision = decoder.readBit(contexts, contextLabel);\n          if (decision === 1) {\n           sign = this.decodeSignBit(i, j, index);\n           coefficentsSign[index] = sign;\n           coefficentsMagnitude[index] = 1;\n           this.setNeighborsSignificance(i, j, index);\n           processingFlags[index] |= firstMagnitudeBitMask;\n          }\n          bitsDecoded[index]++;\n         }\n        }\n       }\n      },\n      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n       var decoder = this.decoder;\n       var contexts = this.contexts;\n       var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n       if (symbol !== 0xA) {\n        error('JPX Error: Invalid segmentation symbol');\n       }\n      }\n     };\n     return BitModel;\n    }();\n    var Transform = function TransformClosure() {\n     function Transform() {\n     }\n     Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n      var ll = subbands[0];\n      for (var i = 1, ii = subbands.length; i < ii; i++) {\n       ll = this.iterate(ll, subbands[i], u0, v0);\n      }\n      return ll;\n     };\n     Transform.prototype.extend = function extend(buffer, offset, size) {\n      var i1 = offset - 1, j1 = offset + 1;\n      var i2 = offset + size - 2, j2 = offset + size;\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1] = buffer[j1];\n      buffer[j2] = buffer[i2];\n     };\n     Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n      var llWidth = ll.width, llHeight = ll.height, llItems = ll.items;\n      var width = hl_lh_hh.width;\n      var height = hl_lh_hh.height;\n      var items = hl_lh_hh.items;\n      var i, j, k, l, u, v;\n      for (k = 0, i = 0; i < llHeight; i++) {\n       l = i * 2 * width;\n       for (j = 0; j < llWidth; j++, k++, l += 2) {\n        items[l] = llItems[k];\n       }\n      }\n      llItems = ll.items = null;\n      var bufferPadding = 4;\n      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n      if (width === 1) {\n       if ((u0 & 1) !== 0) {\n        for (v = 0, k = 0; v < height; v++, k += width) {\n         items[k] *= 0.5;\n        }\n       }\n      } else {\n       for (v = 0, k = 0; v < height; v++, k += width) {\n        rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n        this.extend(rowBuffer, bufferPadding, width);\n        this.filter(rowBuffer, bufferPadding, width);\n        items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n       }\n      }\n      var numBuffers = 16;\n      var colBuffers = [];\n      for (i = 0; i < numBuffers; i++) {\n       colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n      }\n      var b, currentBuffer = 0;\n      ll = bufferPadding + height;\n      if (height === 1) {\n       if ((v0 & 1) !== 0) {\n        for (u = 0; u < width; u++) {\n         items[u] *= 0.5;\n        }\n       }\n      } else {\n       for (u = 0; u < width; u++) {\n        if (currentBuffer === 0) {\n         numBuffers = Math.min(width - u, numBuffers);\n         for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n          for (b = 0; b < numBuffers; b++) {\n           colBuffers[b][l] = items[k + b];\n          }\n         }\n         currentBuffer = numBuffers;\n        }\n        currentBuffer--;\n        var buffer = colBuffers[currentBuffer];\n        this.extend(buffer, bufferPadding, height);\n        this.filter(buffer, bufferPadding, height);\n        if (currentBuffer === 0) {\n         k = u - numBuffers + 1;\n         for (l = bufferPadding; l < ll; k += width, l++) {\n          for (b = 0; b < numBuffers; b++) {\n           items[k + b] = colBuffers[b][l];\n          }\n         }\n        }\n       }\n      }\n      return {\n       width: width,\n       height: height,\n       items: items\n      };\n     };\n     return Transform;\n    }();\n    var IrreversibleTransform = function IrreversibleTransformClosure() {\n     function IrreversibleTransform() {\n      Transform.call(this);\n     }\n     IrreversibleTransform.prototype = Object.create(Transform.prototype);\n     IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n, current, next;\n      var alpha = -1.586134342059924;\n      var beta = -0.052980118572961;\n      var gamma = 0.882911075530934;\n      var delta = 0.443506852043971;\n      var K = 1.230174104914001;\n      var K_ = 1 / K;\n      j = offset - 3;\n      for (n = len + 4; n--; j += 2) {\n       x[j] *= K_;\n      }\n      j = offset - 2;\n      current = delta * x[j - 1];\n      for (n = len + 3; n--; j += 2) {\n       next = delta * x[j + 1];\n       x[j] = K * x[j] - current - next;\n       if (n--) {\n        j += 2;\n        current = delta * x[j + 1];\n        x[j] = K * x[j] - current - next;\n       } else {\n        break;\n       }\n      }\n      j = offset - 1;\n      current = gamma * x[j - 1];\n      for (n = len + 2; n--; j += 2) {\n       next = gamma * x[j + 1];\n       x[j] -= current + next;\n       if (n--) {\n        j += 2;\n        current = gamma * x[j + 1];\n        x[j] -= current + next;\n       } else {\n        break;\n       }\n      }\n      j = offset;\n      current = beta * x[j - 1];\n      for (n = len + 1; n--; j += 2) {\n       next = beta * x[j + 1];\n       x[j] -= current + next;\n       if (n--) {\n        j += 2;\n        current = beta * x[j + 1];\n        x[j] -= current + next;\n       } else {\n        break;\n       }\n      }\n      if (len !== 0) {\n       j = offset + 1;\n       current = alpha * x[j - 1];\n       for (n = len; n--; j += 2) {\n        next = alpha * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n         j += 2;\n         current = alpha * x[j + 1];\n         x[j] -= current + next;\n        } else {\n         break;\n        }\n       }\n      }\n     };\n     return IrreversibleTransform;\n    }();\n    var ReversibleTransform = function ReversibleTransformClosure() {\n     function ReversibleTransform() {\n      Transform.call(this);\n     }\n     ReversibleTransform.prototype = Object.create(Transform.prototype);\n     ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n;\n      for (j = offset, n = len + 1; n--; j += 2) {\n       x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n      }\n      for (j = offset + 1, n = len; n--; j += 2) {\n       x[j] += x[j - 1] + x[j + 1] >> 1;\n      }\n     };\n     return ReversibleTransform;\n    }();\n    return JpxImage;\n   }();\n   exports.JpxImage = JpxImage;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsCoreMetrics = {}, root.pdfjsSharedUtil);\n  }(this, function (exports, sharedUtil) {\n   var getLookupTableFactory = sharedUtil.getLookupTableFactory;\n   var getMetrics = getLookupTableFactory(function (t) {\n    t['Courier'] = 600;\n    t['Courier-Bold'] = 600;\n    t['Courier-BoldOblique'] = 600;\n    t['Courier-Oblique'] = 600;\n    t['Helvetica'] = getLookupTableFactory(function (t) {\n     t['space'] = 278;\n     t['exclam'] = 278;\n     t['quotedbl'] = 355;\n     t['numbersign'] = 556;\n     t['dollar'] = 556;\n     t['percent'] = 889;\n     t['ampersand'] = 667;\n     t['quoteright'] = 222;\n     t['parenleft'] = 333;\n     t['parenright'] = 333;\n     t['asterisk'] = 389;\n     t['plus'] = 584;\n     t['comma'] = 278;\n     t['hyphen'] = 333;\n     t['period'] = 278;\n     t['slash'] = 278;\n     t['zero'] = 556;\n     t['one'] = 556;\n     t['two'] = 556;\n     t['three'] = 556;\n     t['four'] = 556;\n     t['five'] = 556;\n     t['six'] = 556;\n     t['seven'] = 556;\n     t['eight'] = 556;\n     t['nine'] = 556;\n     t['colon'] = 278;\n     t['semicolon'] = 278;\n     t['less'] = 584;\n     t['equal'] = 584;\n     t['greater'] = 584;\n     t['question'] = 556;\n     t['at'] = 1015;\n     t['A'] = 667;\n     t['B'] = 667;\n     t['C'] = 722;\n     t['D'] = 722;\n     t['E'] = 667;\n     t['F'] = 611;\n     t['G'] = 778;\n     t['H'] = 722;\n     t['I'] = 278;\n     t['J'] = 500;\n     t['K'] = 667;\n     t['L'] = 556;\n     t['M'] = 833;\n     t['N'] = 722;\n     t['O'] = 778;\n     t['P'] = 667;\n     t['Q'] = 778;\n     t['R'] = 722;\n     t['S'] = 667;\n     t['T'] = 611;\n     t['U'] = 722;\n     t['V'] = 667;\n     t['W'] = 944;\n     t['X'] = 667;\n     t['Y'] = 667;\n     t['Z'] = 611;\n     t['bracketleft'] = 278;\n     t['backslash'] = 278;\n     t['bracketright'] = 278;\n     t['asciicircum'] = 469;\n     t['underscore'] = 556;\n     t['quoteleft'] = 222;\n     t['a'] = 556;\n     t['b'] = 556;\n     t['c'] = 500;\n     t['d'] = 556;\n     t['e'] = 556;\n     t['f'] = 278;\n     t['g'] = 556;\n     t['h'] = 556;\n     t['i'] = 222;\n     t['j'] = 222;\n     t['k'] = 500;\n     t['l'] = 222;\n     t['m'] = 833;\n     t['n'] = 556;\n     t['o'] = 556;\n     t['p'] = 556;\n     t['q'] = 556;\n     t['r'] = 333;\n     t['s'] = 500;\n     t['t'] = 278;\n     t['u'] = 556;\n     t['v'] = 500;\n     t['w'] = 722;\n     t['x'] = 500;\n     t['y'] = 500;\n     t['z'] = 500;\n     t['braceleft'] = 334;\n     t['bar'] = 260;\n     t['braceright'] = 334;\n     t['asciitilde'] = 584;\n     t['exclamdown'] = 333;\n     t['cent'] = 556;\n     t['sterling'] = 556;\n     t['fraction'] = 167;\n     t['yen'] = 556;\n     t['florin'] = 556;\n     t['section'] = 556;\n     t['currency'] = 556;\n     t['quotesingle'] = 191;\n     t['quotedblleft'] = 333;\n     t['guillemotleft'] = 556;\n     t['guilsinglleft'] = 333;\n     t['guilsinglright'] = 333;\n     t['fi'] = 500;\n     t['fl'] = 500;\n     t['endash'] = 556;\n     t['dagger'] = 556;\n     t['daggerdbl'] = 556;\n     t['periodcentered'] = 278;\n     t['paragraph'] = 537;\n     t['bullet'] = 350;\n     t['quotesinglbase'] = 222;\n     t['quotedblbase'] = 333;\n     t['quotedblright'] = 333;\n     t['guillemotright'] = 556;\n     t['ellipsis'] = 1000;\n     t['perthousand'] = 1000;\n     t['questiondown'] = 611;\n     t['grave'] = 333;\n     t['acute'] = 333;\n     t['circumflex'] = 333;\n     t['tilde'] = 333;\n     t['macron'] = 333;\n     t['breve'] = 333;\n     t['dotaccent'] = 333;\n     t['dieresis'] = 333;\n     t['ring'] = 333;\n     t['cedilla'] = 333;\n     t['hungarumlaut'] = 333;\n     t['ogonek'] = 333;\n     t['caron'] = 333;\n     t['emdash'] = 1000;\n     t['AE'] = 1000;\n     t['ordfeminine'] = 370;\n     t['Lslash'] = 556;\n     t['Oslash'] = 778;\n     t['OE'] = 1000;\n     t['ordmasculine'] = 365;\n     t['ae'] = 889;\n     t['dotlessi'] = 278;\n     t['lslash'] = 222;\n     t['oslash'] = 611;\n     t['oe'] = 944;\n     t['germandbls'] = 611;\n     t['Idieresis'] = 278;\n     t['eacute'] = 556;\n     t['abreve'] = 556;\n     t['uhungarumlaut'] = 556;\n     t['ecaron'] = 556;\n     t['Ydieresis'] = 667;\n     t['divide'] = 584;\n     t['Yacute'] = 667;\n     t['Acircumflex'] = 667;\n     t['aacute'] = 556;\n     t['Ucircumflex'] = 722;\n     t['yacute'] = 500;\n     t['scommaaccent'] = 500;\n     t['ecircumflex'] = 556;\n     t['Uring'] = 722;\n     t['Udieresis'] = 722;\n     t['aogonek'] = 556;\n     t['Uacute'] = 722;\n     t['uogonek'] = 556;\n     t['Edieresis'] = 667;\n     t['Dcroat'] = 722;\n     t['commaaccent'] = 250;\n     t['copyright'] = 737;\n     t['Emacron'] = 667;\n     t['ccaron'] = 500;\n     t['aring'] = 556;\n     t['Ncommaaccent'] = 722;\n     t['lacute'] = 222;\n     t['agrave'] = 556;\n     t['Tcommaaccent'] = 611;\n     t['Cacute'] = 722;\n     t['atilde'] = 556;\n     t['Edotaccent'] = 667;\n     t['scaron'] = 500;\n     t['scedilla'] = 500;\n     t['iacute'] = 278;\n     t['lozenge'] = 471;\n     t['Rcaron'] = 722;\n     t['Gcommaaccent'] = 778;\n     t['ucircumflex'] = 556;\n     t['acircumflex'] = 556;\n     t['Amacron'] = 667;\n     t['rcaron'] = 333;\n     t['ccedilla'] = 500;\n     t['Zdotaccent'] = 611;\n     t['Thorn'] = 667;\n     t['Omacron'] = 778;\n     t['Racute'] = 722;\n     t['Sacute'] = 667;\n     t['dcaron'] = 643;\n     t['Umacron'] = 722;\n     t['uring'] = 556;\n     t['threesuperior'] = 333;\n     t['Ograve'] = 778;\n     t['Agrave'] = 667;\n     t['Abreve'] = 667;\n     t['multiply'] = 584;\n     t['uacute'] = 556;\n     t['Tcaron'] = 611;\n     t['partialdiff'] = 476;\n     t['ydieresis'] = 500;\n     t['Nacute'] = 722;\n     t['icircumflex'] = 278;\n     t['Ecircumflex'] = 667;\n     t['adieresis'] = 556;\n     t['edieresis'] = 556;\n     t['cacute'] = 500;\n     t['nacute'] = 556;\n     t['umacron'] = 556;\n     t['Ncaron'] = 722;\n     t['Iacute'] = 278;\n     t['plusminus'] = 584;\n     t['brokenbar'] = 260;\n     t['registered'] = 737;\n     t['Gbreve'] = 778;\n     t['Idotaccent'] = 278;\n     t['summation'] = 600;\n     t['Egrave'] = 667;\n     t['racute'] = 333;\n     t['omacron'] = 556;\n     t['Zacute'] = 611;\n     t['Zcaron'] = 611;\n     t['greaterequal'] = 549;\n     t['Eth'] = 722;\n     t['Ccedilla'] = 722;\n     t['lcommaaccent'] = 222;\n     t['tcaron'] = 317;\n     t['eogonek'] = 556;\n     t['Uogonek'] = 722;\n     t['Aacute'] = 667;\n     t['Adieresis'] = 667;\n     t['egrave'] = 556;\n     t['zacute'] = 500;\n     t['iogonek'] = 222;\n     t['Oacute'] = 778;\n     t['oacute'] = 556;\n     t['amacron'] = 556;\n     t['sacute'] = 500;\n     t['idieresis'] = 278;\n     t['Ocircumflex'] = 778;\n     t['Ugrave'] = 722;\n     t['Delta'] = 612;\n     t['thorn'] = 556;\n     t['twosuperior'] = 333;\n     t['Odieresis'] = 778;\n     t['mu'] = 556;\n     t['igrave'] = 278;\n     t['ohungarumlaut'] = 556;\n     t['Eogonek'] = 667;\n     t['dcroat'] = 556;\n     t['threequarters'] = 834;\n     t['Scedilla'] = 667;\n     t['lcaron'] = 299;\n     t['Kcommaaccent'] = 667;\n     t['Lacute'] = 556;\n     t['trademark'] = 1000;\n     t['edotaccent'] = 556;\n     t['Igrave'] = 278;\n     t['Imacron'] = 278;\n     t['Lcaron'] = 556;\n     t['onehalf'] = 834;\n     t['lessequal'] = 549;\n     t['ocircumflex'] = 556;\n     t['ntilde'] = 556;\n     t['Uhungarumlaut'] = 722;\n     t['Eacute'] = 667;\n     t['emacron'] = 556;\n     t['gbreve'] = 556;\n     t['onequarter'] = 834;\n     t['Scaron'] = 667;\n     t['Scommaaccent'] = 667;\n     t['Ohungarumlaut'] = 778;\n     t['degree'] = 400;\n     t['ograve'] = 556;\n     t['Ccaron'] = 722;\n     t['ugrave'] = 556;\n     t['radical'] = 453;\n     t['Dcaron'] = 722;\n     t['rcommaaccent'] = 333;\n     t['Ntilde'] = 722;\n     t['otilde'] = 556;\n     t['Rcommaaccent'] = 722;\n     t['Lcommaaccent'] = 556;\n     t['Atilde'] = 667;\n     t['Aogonek'] = 667;\n     t['Aring'] = 667;\n     t['Otilde'] = 778;\n     t['zdotaccent'] = 500;\n     t['Ecaron'] = 667;\n     t['Iogonek'] = 278;\n     t['kcommaaccent'] = 500;\n     t['minus'] = 584;\n     t['Icircumflex'] = 278;\n     t['ncaron'] = 556;\n     t['tcommaaccent'] = 278;\n     t['logicalnot'] = 584;\n     t['odieresis'] = 556;\n     t['udieresis'] = 556;\n     t['notequal'] = 549;\n     t['gcommaaccent'] = 556;\n     t['eth'] = 556;\n     t['zcaron'] = 500;\n     t['ncommaaccent'] = 556;\n     t['onesuperior'] = 333;\n     t['imacron'] = 278;\n     t['Euro'] = 556;\n    });\n    t['Helvetica-Bold'] = getLookupTableFactory(function (t) {\n     t['space'] = 278;\n     t['exclam'] = 333;\n     t['quotedbl'] = 474;\n     t['numbersign'] = 556;\n     t['dollar'] = 556;\n     t['percent'] = 889;\n     t['ampersand'] = 722;\n     t['quoteright'] = 278;\n     t['parenleft'] = 333;\n     t['parenright'] = 333;\n     t['asterisk'] = 389;\n     t['plus'] = 584;\n     t['comma'] = 278;\n     t['hyphen'] = 333;\n     t['period'] = 278;\n     t['slash'] = 278;\n     t['zero'] = 556;\n     t['one'] = 556;\n     t['two'] = 556;\n     t['three'] = 556;\n     t['four'] = 556;\n     t['five'] = 556;\n     t['six'] = 556;\n     t['seven'] = 556;\n     t['eight'] = 556;\n     t['nine'] = 556;\n     t['colon'] = 333;\n     t['semicolon'] = 333;\n     t['less'] = 584;\n     t['equal'] = 584;\n     t['greater'] = 584;\n     t['question'] = 611;\n     t['at'] = 975;\n     t['A'] = 722;\n     t['B'] = 722;\n     t['C'] = 722;\n     t['D'] = 722;\n     t['E'] = 667;\n     t['F'] = 611;\n     t['G'] = 778;\n     t['H'] = 722;\n     t['I'] = 278;\n     t['J'] = 556;\n     t['K'] = 722;\n     t['L'] = 611;\n     t['M'] = 833;\n     t['N'] = 722;\n     t['O'] = 778;\n     t['P'] = 667;\n     t['Q'] = 778;\n     t['R'] = 722;\n     t['S'] = 667;\n     t['T'] = 611;\n     t['U'] = 722;\n     t['V'] = 667;\n     t['W'] = 944;\n     t['X'] = 667;\n     t['Y'] = 667;\n     t['Z'] = 611;\n     t['bracketleft'] = 333;\n     t['backslash'] = 278;\n     t['bracketright'] = 333;\n     t['asciicircum'] = 584;\n     t['underscore'] = 556;\n     t['quoteleft'] = 278;\n     t['a'] = 556;\n     t['b'] = 611;\n     t['c'] = 556;\n     t['d'] = 611;\n     t['e'] = 556;\n     t['f'] = 333;\n     t['g'] = 611;\n     t['h'] = 611;\n     t['i'] = 278;\n     t['j'] = 278;\n     t['k'] = 556;\n     t['l'] = 278;\n     t['m'] = 889;\n     t['n'] = 611;\n     t['o'] = 611;\n     t['p'] = 611;\n     t['q'] = 611;\n     t['r'] = 389;\n     t['s'] = 556;\n     t['t'] = 333;\n     t['u'] = 611;\n     t['v'] = 556;\n     t['w'] = 778;\n     t['x'] = 556;\n     t['y'] = 556;\n     t['z'] = 500;\n     t['braceleft'] = 389;\n     t['bar'] = 280;\n     t['braceright'] = 389;\n     t['asciitilde'] = 584;\n     t['exclamdown'] = 333;\n     t['cent'] = 556;\n     t['sterling'] = 556;\n     t['fraction'] = 167;\n     t['yen'] = 556;\n     t['florin'] = 556;\n     t['section'] = 556;\n     t['currency'] = 556;\n     t['quotesingle'] = 238;\n     t['quotedblleft'] = 500;\n     t['guillemotleft'] = 556;\n     t['guilsinglleft'] = 333;\n     t['guilsinglright'] = 333;\n     t['fi'] = 611;\n     t['fl'] = 611;\n     t['endash'] = 556;\n     t['dagger'] = 556;\n     t['daggerdbl'] = 556;\n     t['periodcentered'] = 278;\n     t['paragraph'] = 556;\n     t['bullet'] = 350;\n     t['quotesinglbase'] = 278;\n     t['quotedblbase'] = 500;\n     t['quotedblright'] = 500;\n     t['guillemotright'] = 556;\n     t['ellipsis'] = 1000;\n     t['perthousand'] = 1000;\n     t['questiondown'] = 611;\n     t['grave'] = 333;\n     t['acute'] = 333;\n     t['circumflex'] = 333;\n     t['tilde'] = 333;\n     t['macron'] = 333;\n     t['breve'] = 333;\n     t['dotaccent'] = 333;\n     t['dieresis'] = 333;\n     t['ring'] = 333;\n     t['cedilla'] = 333;\n     t['hungarumlaut'] = 333;\n     t['ogonek'] = 333;\n     t['caron'] = 333;\n     t['emdash'] = 1000;\n     t['AE'] = 1000;\n     t['ordfeminine'] = 370;\n     t['Lslash'] = 611;\n     t['Oslash'] = 778;\n     t['OE'] = 1000;\n     t['ordmasculine'] = 365;\n     t['ae'] = 889;\n     t['dotlessi'] = 278;\n     t['lslash'] = 278;\n     t['oslash'] = 611;\n     t['oe'] = 944;\n     t['germandbls'] = 611;\n     t['Idieresis'] = 278;\n     t['eacute'] = 556;\n     t['abreve'] = 556;\n     t['uhungarumlaut'] = 611;\n     t['ecaron'] = 556;\n     t['Ydieresis'] = 667;\n     t['divide'] = 584;\n     t['Yacute'] = 667;\n     t['Acircumflex'] = 722;\n     t['aacute'] = 556;\n     t['Ucircumflex'] = 722;\n     t['yacute'] = 556;\n     t['scommaaccent'] = 556;\n     t['ecircumflex'] = 556;\n     t['Uring'] = 722;\n     t['Udieresis'] = 722;\n     t['aogonek'] = 556;\n     t['Uacute'] = 722;\n     t['uogonek'] = 611;\n     t['Edieresis'] = 667;\n     t['Dcroat'] = 722;\n     t['commaaccent'] = 250;\n     t['copyright'] = 737;\n     t['Emacron'] = 667;\n     t['ccaron'] = 556;\n     t['aring'] = 556;\n     t['Ncommaaccent'] = 722;\n     t['lacute'] = 278;\n     t['agrave'] = 556;\n     t['Tcommaaccent'] = 611;\n     t['Cacute'] = 722;\n     t['atilde'] = 556;\n     t['Edotaccent'] = 667;\n     t['scaron'] = 556;\n     t['scedilla'] = 556;\n     t['iacute'] = 278;\n     t['lozenge'] = 494;\n     t['Rcaron'] = 722;\n     t['Gcommaaccent'] = 778;\n     t['ucircumflex'] = 611;\n     t['acircumflex'] = 556;\n     t['Amacron'] = 722;\n     t['rcaron'] = 389;\n     t['ccedilla'] = 556;\n     t['Zdotaccent'] = 611;\n     t['Thorn'] = 667;\n     t['Omacron'] = 778;\n     t['Racute'] = 722;\n     t['Sacute'] = 667;\n     t['dcaron'] = 743;\n     t['Umacron'] = 722;\n     t['uring'] = 611;\n     t['threesuperior'] = 333;\n     t['Ograve'] = 778;\n     t['Agrave'] = 722;\n     t['Abreve'] = 722;\n     t['multiply'] = 584;\n     t['uacute'] = 611;\n     t['Tcaron'] = 611;\n     t['partialdiff'] = 494;\n     t['ydieresis'] = 556;\n     t['Nacute'] = 722;\n     t['icircumflex'] = 278;\n     t['Ecircumflex'] = 667;\n     t['adieresis'] = 556;\n     t['edieresis'] = 556;\n     t['cacute'] = 556;\n     t['nacute'] = 611;\n     t['umacron'] = 611;\n     t['Ncaron'] = 722;\n     t['Iacute'] = 278;\n     t['plusminus'] = 584;\n     t['brokenbar'] = 280;\n     t['registered'] = 737;\n     t['Gbreve'] = 778;\n     t['Idotaccent'] = 278;\n     t['summation'] = 600;\n     t['Egrave'] = 667;\n     t['racute'] = 389;\n     t['omacron'] = 611;\n     t['Zacute'] = 611;\n     t['Zcaron'] = 611;\n     t['greaterequal'] = 549;\n     t['Eth'] = 722;\n     t['Ccedilla'] = 722;\n     t['lcommaaccent'] = 278;\n     t['tcaron'] = 389;\n     t['eogonek'] = 556;\n     t['Uogonek'] = 722;\n     t['Aacute'] = 722;\n     t['Adieresis'] = 722;\n     t['egrave'] = 556;\n     t['zacute'] = 500;\n     t['iogonek'] = 278;\n     t['Oacute'] = 778;\n     t['oacute'] = 611;\n     t['amacron'] = 556;\n     t['sacute'] = 556;\n     t['idieresis'] = 278;\n     t['Ocircumflex'] = 778;\n     t['Ugrave'] = 722;\n     t['Delta'] = 612;\n     t['thorn'] = 611;\n     t['twosuperior'] = 333;\n     t['Odieresis'] = 778;\n     t['mu'] = 611;\n     t['igrave'] = 278;\n     t['ohungarumlaut'] = 611;\n     t['Eogonek'] = 667;\n     t['dcroat'] = 611;\n     t['threequarters'] = 834;\n     t['Scedilla'] = 667;\n     t['lcaron'] = 400;\n     t['Kcommaaccent'] = 722;\n     t['Lacute'] = 611;\n     t['trademark'] = 1000;\n     t['edotaccent'] = 556;\n     t['Igrave'] = 278;\n     t['Imacron'] = 278;\n     t['Lcaron'] = 611;\n     t['onehalf'] = 834;\n     t['lessequal'] = 549;\n     t['ocircumflex'] = 611;\n     t['ntilde'] = 611;\n     t['Uhungarumlaut'] = 722;\n     t['Eacute'] = 667;\n     t['emacron'] = 556;\n     t['gbreve'] = 611;\n     t['onequarter'] = 834;\n     t['Scaron'] = 667;\n     t['Scommaaccent'] = 667;\n     t['Ohungarumlaut'] = 778;\n     t['degree'] = 400;\n     t['ograve'] = 611;\n     t['Ccaron'] = 722;\n     t['ugrave'] = 611;\n     t['radical'] = 549;\n     t['Dcaron'] = 722;\n     t['rcommaaccent'] = 389;\n     t['Ntilde'] = 722;\n     t['otilde'] = 611;\n     t['Rcommaaccent'] = 722;\n     t['Lcommaaccent'] = 611;\n     t['Atilde'] = 722;\n     t['Aogonek'] = 722;\n     t['Aring'] = 722;\n     t['Otilde'] = 778;\n     t['zdotaccent'] = 500;\n     t['Ecaron'] = 667;\n     t['Iogonek'] = 278;\n     t['kcommaaccent'] = 556;\n     t['minus'] = 584;\n     t['Icircumflex'] = 278;\n     t['ncaron'] = 611;\n     t['tcommaaccent'] = 333;\n     t['logicalnot'] = 584;\n     t['odieresis'] = 611;\n     t['udieresis'] = 611;\n     t['notequal'] = 549;\n     t['gcommaaccent'] = 611;\n     t['eth'] = 611;\n     t['zcaron'] = 500;\n     t['ncommaaccent'] = 611;\n     t['onesuperior'] = 333;\n     t['imacron'] = 278;\n     t['Euro'] = 556;\n    });\n    t['Helvetica-BoldOblique'] = getLookupTableFactory(function (t) {\n     t['space'] = 278;\n     t['exclam'] = 333;\n     t['quotedbl'] = 474;\n     t['numbersign'] = 556;\n     t['dollar'] = 556;\n     t['percent'] = 889;\n     t['ampersand'] = 722;\n     t['quoteright'] = 278;\n     t['parenleft'] = 333;\n     t['parenright'] = 333;\n     t['asterisk'] = 389;\n     t['plus'] = 584;\n     t['comma'] = 278;\n     t['hyphen'] = 333;\n     t['period'] = 278;\n     t['slash'] = 278;\n     t['zero'] = 556;\n     t['one'] = 556;\n     t['two'] = 556;\n     t['three'] = 556;\n     t['four'] = 556;\n     t['five'] = 556;\n     t['six'] = 556;\n     t['seven'] = 556;\n     t['eight'] = 556;\n     t['nine'] = 556;\n     t['colon'] = 333;\n     t['semicolon'] = 333;\n     t['less'] = 584;\n     t['equal'] = 584;\n     t['greater'] = 584;\n     t['question'] = 611;\n     t['at'] = 975;\n     t['A'] = 722;\n     t['B'] = 722;\n     t['C'] = 722;\n     t['D'] = 722;\n     t['E'] = 667;\n     t['F'] = 611;\n     t['G'] = 778;\n     t['H'] = 722;\n     t['I'] = 278;\n     t['J'] = 556;\n     t['K'] = 722;\n     t['L'] = 611;\n     t['M'] = 833;\n     t['N'] = 722;\n     t['O'] = 778;\n     t['P'] = 667;\n     t['Q'] = 778;\n     t['R'] = 722;\n     t['S'] = 667;\n     t['T'] = 611;\n     t['U'] = 722;\n     t['V'] = 667;\n     t['W'] = 944;\n     t['X'] = 667;\n     t['Y'] = 667;\n     t['Z'] = 611;\n     t['bracketleft'] = 333;\n     t['backslash'] = 278;\n     t['bracketright'] = 333;\n     t['asciicircum'] = 584;\n     t['underscore'] = 556;\n     t['quoteleft'] = 278;\n     t['a'] = 556;\n     t['b'] = 611;\n     t['c'] = 556;\n     t['d'] = 611;\n     t['e'] = 556;\n     t['f'] = 333;\n     t['g'] = 611;\n     t['h'] = 611;\n     t['i'] = 278;\n     t['j'] = 278;\n     t['k'] = 556;\n     t['l'] = 278;\n     t['m'] = 889;\n     t['n'] = 611;\n     t['o'] = 611;\n     t['p'] = 611;\n     t['q'] = 611;\n     t['r'] = 389;\n     t['s'] = 556;\n     t['t'] = 333;\n     t['u'] = 611;\n     t['v'] = 556;\n     t['w'] = 778;\n     t['x'] = 556;\n     t['y'] = 556;\n     t['z'] = 500;\n     t['braceleft'] = 389;\n     t['bar'] = 280;\n     t['braceright'] = 389;\n     t['asciitilde'] = 584;\n     t['exclamdown'] = 333;\n     t['cent'] = 556;\n     t['sterling'] = 556;\n     t['fraction'] = 167;\n     t['yen'] = 556;\n     t['florin'] = 556;\n     t['section'] = 556;\n     t['currency'] = 556;\n     t['quotesingle'] = 238;\n     t['quotedblleft'] = 500;\n     t['guillemotleft'] = 556;\n     t['guilsinglleft'] = 333;\n     t['guilsinglright'] = 333;\n     t['fi'] = 611;\n     t['fl'] = 611;\n     t['endash'] = 556;\n     t['dagger'] = 556;\n     t['daggerdbl'] = 556;\n     t['periodcentered'] = 278;\n     t['paragraph'] = 556;\n     t['bullet'] = 350;\n     t['quotesinglbase'] = 278;\n     t['quotedblbase'] = 500;\n     t['quotedblright'] = 500;\n     t['guillemotright'] = 556;\n     t['ellipsis'] = 1000;\n     t['perthousand'] = 1000;\n     t['questiondown'] = 611;\n     t['grave'] = 333;\n     t['acute'] = 333;\n     t['circumflex'] = 333;\n     t['tilde'] = 333;\n     t['macron'] = 333;\n     t['breve'] = 333;\n     t['dotaccent'] = 333;\n     t['dieresis'] = 333;\n     t['ring'] = 333;\n     t['cedilla'] = 333;\n     t['hungarumlaut'] = 333;\n     t['ogonek'] = 333;\n     t['caron'] = 333;\n     t['emdash'] = 1000;\n     t['AE'] = 1000;\n     t['ordfeminine'] = 370;\n     t['Lslash'] = 611;\n     t['Oslash'] = 778;\n     t['OE'] = 1000;\n     t['ordmasculine'] = 365;\n     t['ae'] = 889;\n     t['dotlessi'] = 278;\n     t['lslash'] = 278;\n     t['oslash'] = 611;\n     t['oe'] = 944;\n     t['germandbls'] = 611;\n     t['Idieresis'] = 278;\n     t['eacute'] = 556;\n     t['abreve'] = 556;\n     t['uhungarumlaut'] = 611;\n     t['ecaron'] = 556;\n     t['Ydieresis'] = 667;\n     t['divide'] = 584;\n     t['Yacute'] = 667;\n     t['Acircumflex'] = 722;\n     t['aacute'] = 556;\n     t['Ucircumflex'] = 722;\n     t['yacute'] = 556;\n     t['scommaaccent'] = 556;\n     t['ecircumflex'] = 556;\n     t['Uring'] = 722;\n     t['Udieresis'] = 722;\n     t['aogonek'] = 556;\n     t['Uacute'] = 722;\n     t['uogonek'] = 611;\n     t['Edieresis'] = 667;\n     t['Dcroat'] = 722;\n     t['commaaccent'] = 250;\n     t['copyright'] = 737;\n     t['Emacron'] = 667;\n     t['ccaron'] = 556;\n     t['aring'] = 556;\n     t['Ncommaaccent'] = 722;\n     t['lacute'] = 278;\n     t['agrave'] = 556;\n     t['Tcommaaccent'] = 611;\n     t['Cacute'] = 722;\n     t['atilde'] = 556;\n     t['Edotaccent'] = 667;\n     t['scaron'] = 556;\n     t['scedilla'] = 556;\n     t['iacute'] = 278;\n     t['lozenge'] = 494;\n     t['Rcaron'] = 722;\n     t['Gcommaaccent'] = 778;\n     t['ucircumflex'] = 611;\n     t['acircumflex'] = 556;\n     t['Amacron'] = 722;\n     t['rcaron'] = 389;\n     t['ccedilla'] = 556;\n     t['Zdotaccent'] = 611;\n     t['Thorn'] = 667;\n     t['Omacron'] = 778;\n     t['Racute'] = 722;\n     t['Sacute'] = 667;\n     t['dcaron'] = 743;\n     t['Umacron'] = 722;\n     t['uring'] = 611;\n     t['threesuperior'] = 333;\n     t['Ograve'] = 778;\n     t['Agrave'] = 722;\n     t['Abreve'] = 722;\n     t['multiply'] = 584;\n     t['uacute'] = 611;\n     t['Tcaron'] = 611;\n     t['partialdiff'] = 494;\n     t['ydieresis'] = 556;\n     t['Nacute'] = 722;\n     t['icircumflex'] = 278;\n     t['Ecircumflex'] = 667;\n     t['adieresis'] = 556;\n     t['edieresis'] = 556;\n     t['cacute'] = 556;\n     t['nacute'] = 611;\n     t['umacron'] = 611;\n     t['Ncaron'] = 722;\n     t['Iacute'] = 278;\n     t['plusminus'] = 584;\n     t['brokenbar'] = 280;\n     t['registered'] = 737;\n     t['Gbreve'] = 778;\n     t['Idotaccent'] = 278;\n     t['summation'] = 600;\n     t['Egrave'] = 667;\n     t['racute'] = 389;\n     t['omacron'] = 611;\n     t['Zacute'] = 611;\n     t['Zcaron'] = 611;\n     t['greaterequal'] = 549;\n     t['Eth'] = 722;\n     t['Ccedilla'] = 722;\n     t['lcommaaccent'] = 278;\n     t['tcaron'] = 389;\n     t['eogonek'] = 556;\n     t['Uogonek'] = 722;\n     t['Aacute'] = 722;\n     t['Adieresis'] = 722;\n     t['egrave'] = 556;\n     t['zacute'] = 500;\n     t['iogonek'] = 278;\n     t['Oacute'] = 778;\n     t['oacute'] = 611;\n     t['amacron'] = 556;\n     t['sacute'] = 556;\n     t['idieresis'] = 278;\n     t['Ocircumflex'] = 778;\n     t['Ugrave'] = 722;\n     t['Delta'] = 612;\n     t['thorn'] = 611;\n     t['twosuperior'] = 333;\n     t['Odieresis'] = 778;\n     t['mu'] = 611;\n     t['igrave'] = 278;\n     t['ohungarumlaut'] = 611;\n     t['Eogonek'] = 667;\n     t['dcroat'] = 611;\n     t['threequarters'] = 834;\n     t['Scedilla'] = 667;\n     t['lcaron'] = 400;\n     t['Kcommaaccent'] = 722;\n     t['Lacute'] = 611;\n     t['trademark'] = 1000;\n     t['edotaccent'] = 556;\n     t['Igrave'] = 278;\n     t['Imacron'] = 278;\n     t['Lcaron'] = 611;\n     t['onehalf'] = 834;\n     t['lessequal'] = 549;\n     t['ocircumflex'] = 611;\n     t['ntilde'] = 611;\n     t['Uhungarumlaut'] = 722;\n     t['Eacute'] = 667;\n     t['emacron'] = 556;\n     t['gbreve'] = 611;\n     t['onequarter'] = 834;\n     t['Scaron'] = 667;\n     t['Scommaaccent'] = 667;\n     t['Ohungarumlaut'] = 778;\n     t['degree'] = 400;\n     t['ograve'] = 611;\n     t['Ccaron'] = 722;\n     t['ugrave'] = 611;\n     t['radical'] = 549;\n     t['Dcaron'] = 722;\n     t['rcommaaccent'] = 389;\n     t['Ntilde'] = 722;\n     t['otilde'] = 611;\n     t['Rcommaaccent'] = 722;\n     t['Lcommaaccent'] = 611;\n     t['Atilde'] = 722;\n     t['Aogonek'] = 722;\n     t['Aring'] = 722;\n     t['Otilde'] = 778;\n     t['zdotaccent'] = 500;\n     t['Ecaron'] = 667;\n     t['Iogonek'] = 278;\n     t['kcommaaccent'] = 556;\n     t['minus'] = 584;\n     t['Icircumflex'] = 278;\n     t['ncaron'] = 611;\n     t['tcommaaccent'] = 333;\n     t['logicalnot'] = 584;\n     t['odieresis'] = 611;\n     t['udieresis'] = 611;\n     t['notequal'] = 549;\n     t['gcommaaccent'] = 611;\n     t['eth'] = 611;\n     t['zcaron'] = 500;\n     t['ncommaaccent'] = 611;\n     t['onesuperior'] = 333;\n     t['imacron'] = 278;\n     t['Euro'] = 556;\n    });\n    t['Helvetica-Oblique'] = getLookupTableFactory(function (t) {\n     t['space'] = 278;\n     t['exclam'] = 278;\n     t['quotedbl'] = 355;\n     t['numbersign'] = 556;\n     t['dollar'] = 556;\n     t['percent'] = 889;\n     t['ampersand'] = 667;\n     t['quoteright'] = 222;\n     t['parenleft'] = 333;\n     t['parenright'] = 333;\n     t['asterisk'] = 389;\n     t['plus'] = 584;\n     t['comma'] = 278;\n     t['hyphen'] = 333;\n     t['period'] = 278;\n     t['slash'] = 278;\n     t['zero'] = 556;\n     t['one'] = 556;\n     t['two'] = 556;\n     t['three'] = 556;\n     t['four'] = 556;\n     t['five'] = 556;\n     t['six'] = 556;\n     t['seven'] = 556;\n     t['eight'] = 556;\n     t['nine'] = 556;\n     t['colon'] = 278;\n     t['semicolon'] = 278;\n     t['less'] = 584;\n     t['equal'] = 584;\n     t['greater'] = 584;\n     t['question'] = 556;\n     t['at'] = 1015;\n     t['A'] = 667;\n     t['B'] = 667;\n     t['C'] = 722;\n     t['D'] = 722;\n     t['E'] = 667;\n     t['F'] = 611;\n     t['G'] = 778;\n     t['H'] = 722;\n     t['I'] = 278;\n     t['J'] = 500;\n     t['K'] = 667;\n     t['L'] = 556;\n     t['M'] = 833;\n     t['N'] = 722;\n     t['O'] = 778;\n     t['P'] = 667;\n     t['Q'] = 778;\n     t['R'] = 722;\n     t['S'] = 667;\n     t['T'] = 611;\n     t['U'] = 722;\n     t['V'] = 667;\n     t['W'] = 944;\n     t['X'] = 667;\n     t['Y'] = 667;\n     t['Z'] = 611;\n     t['bracketleft'] = 278;\n     t['backslash'] = 278;\n     t['bracketright'] = 278;\n     t['asciicircum'] = 469;\n     t['underscore'] = 556;\n     t['quoteleft'] = 222;\n     t['a'] = 556;\n     t['b'] = 556;\n     t['c'] = 500;\n     t['d'] = 556;\n     t['e'] = 556;\n     t['f'] = 278;\n     t['g'] = 556;\n     t['h'] = 556;\n     t['i'] = 222;\n     t['j'] = 222;\n     t['k'] = 500;\n     t['l'] = 222;\n     t['m'] = 833;\n     t['n'] = 556;\n     t['o'] = 556;\n     t['p'] = 556;\n     t['q'] = 556;\n     t['r'] = 333;\n     t['s'] = 500;\n     t['t'] = 278;\n     t['u'] = 556;\n     t['v'] = 500;\n     t['w'] = 722;\n     t['x'] = 500;\n     t['y'] = 500;\n     t['z'] = 500;\n     t['braceleft'] = 334;\n     t['bar'] = 260;\n     t['braceright'] = 334;\n     t['asciitilde'] = 584;\n     t['exclamdown'] = 333;\n     t['cent'] = 556;\n     t['sterling'] = 556;\n     t['fraction'] = 167;\n     t['yen'] = 556;\n     t['florin'] = 556;\n     t['section'] = 556;\n     t['currency'] = 556;\n     t['quotesingle'] = 191;\n     t['quotedblleft'] = 333;\n     t['guillemotleft'] = 556;\n     t['guilsinglleft'] = 333;\n     t['guilsinglright'] = 333;\n     t['fi'] = 500;\n     t['fl'] = 500;\n     t['endash'] = 556;\n     t['dagger'] = 556;\n     t['daggerdbl'] = 556;\n     t['periodcentered'] = 278;\n     t['paragraph'] = 537;\n     t['bullet'] = 350;\n     t['quotesinglbase'] = 222;\n     t['quotedblbase'] = 333;\n     t['quotedblright'] = 333;\n     t['guillemotright'] = 556;\n     t['ellipsis'] = 1000;\n     t['perthousand'] = 1000;\n     t['questiondown'] = 611;\n     t['grave'] = 333;\n     t['acute'] = 333;\n     t['circumflex'] = 333;\n     t['tilde'] = 333;\n     t['macron'] = 333;\n     t['breve'] = 333;\n     t['dotaccent'] = 333;\n     t['dieresis'] = 333;\n     t['ring'] = 333;\n     t['cedilla'] = 333;\n     t['hungarumlaut'] = 333;\n     t['ogonek'] = 333;\n     t['caron'] = 333;\n     t['emdash'] = 1000;\n     t['AE'] = 1000;\n     t['ordfeminine'] = 370;\n     t['Lslash'] = 556;\n     t['Oslash'] = 778;\n     t['OE'] = 1000;\n     t['ordmasculine'] = 365;\n     t['ae'] = 889;\n     t['dotlessi'] = 278;\n     t['lslash'] = 222;\n     t['oslash'] = 611;\n     t['oe'] = 944;\n     t['germandbls'] = 611;\n     t['Idieresis'] = 278;\n     t['eacute'] = 556;\n     t['abreve'] = 556;\n     t['uhungarumlaut'] = 556;\n     t['ecaron'] = 556;\n     t['Ydieresis'] = 667;\n     t['divide'] = 584;\n     t['Yacute'] = 667;\n     t['Acircumflex'] = 667;\n     t['aacute'] = 556;\n     t['Ucircumflex'] = 722;\n     t['yacute'] = 500;\n     t['scommaaccent'] = 500;\n     t['ecircumflex'] = 556;\n     t['Uring'] = 722;\n     t['Udieresis'] = 722;\n     t['aogonek'] = 556;\n     t['Uacute'] = 722;\n     t['uogonek'] = 556;\n     t['Edieresis'] = 667;\n     t['Dcroat'] = 722;\n     t['commaaccent'] = 250;\n     t['copyright'] = 737;\n     t['Emacron'] = 667;\n     t['ccaron'] = 500;\n     t['aring'] = 556;\n     t['Ncommaaccent'] = 722;\n     t['lacute'] = 222;\n     t['agrave'] = 556;\n     t['Tcommaaccent'] = 611;\n     t['Cacute'] = 722;\n     t['atilde'] = 556;\n     t['Edotaccent'] = 667;\n     t['scaron'] = 500;\n     t['scedilla'] = 500;\n     t['iacute'] = 278;\n     t['lozenge'] = 471;\n     t['Rcaron'] = 722;\n     t['Gcommaaccent'] = 778;\n     t['ucircumflex'] = 556;\n     t['acircumflex'] = 556;\n     t['Amacron'] = 667;\n     t['rcaron'] = 333;\n     t['ccedilla'] = 500;\n     t['Zdotaccent'] = 611;\n     t['Thorn'] = 667;\n     t['Omacron'] = 778;\n     t['Racute'] = 722;\n     t['Sacute'] = 667;\n     t['dcaron'] = 643;\n     t['Umacron'] = 722;\n     t['uring'] = 556;\n     t['threesuperior'] = 333;\n     t['Ograve'] = 778;\n     t['Agrave'] = 667;\n     t['Abreve'] = 667;\n     t['multiply'] = 584;\n     t['uacute'] = 556;\n     t['Tcaron'] = 611;\n     t['partialdiff'] = 476;\n     t['ydieresis'] = 500;\n     t['Nacute'] = 722;\n     t['icircumflex'] = 278;\n     t['Ecircumflex'] = 667;\n     t['adieresis'] = 556;\n     t['edieresis'] = 556;\n     t['cacute'] = 500;\n     t['nacute'] = 556;\n     t['umacron'] = 556;\n     t['Ncaron'] = 722;\n     t['Iacute'] = 278;\n     t['plusminus'] = 584;\n     t['brokenbar'] = 260;\n     t['registered'] = 737;\n     t['Gbreve'] = 778;\n     t['Idotaccent'] = 278;\n     t['summation'] = 600;\n     t['Egrave'] = 667;\n     t['racute'] = 333;\n     t['omacron'] = 556;\n     t['Zacute'] = 611;\n     t['Zcaron'] = 611;\n     t['greaterequal'] = 549;\n     t['Eth'] = 722;\n     t['Ccedilla'] = 722;\n     t['lcommaaccent'] = 222;\n     t['tcaron'] = 317;\n     t['eogonek'] = 556;\n     t['Uogonek'] = 722;\n     t['Aacute'] = 667;\n     t['Adieresis'] = 667;\n     t['egrave'] = 556;\n     t['zacute'] = 500;\n     t['iogonek'] = 222;\n     t['Oacute'] = 778;\n     t['oacute'] = 556;\n     t['amacron'] = 556;\n     t['sacute'] = 500;\n     t['idieresis'] = 278;\n     t['Ocircumflex'] = 778;\n     t['Ugrave'] = 722;\n     t['Delta'] = 612;\n     t['thorn'] = 556;\n     t['twosuperior'] = 333;\n     t['Odieresis'] = 778;\n     t['mu'] = 556;\n     t['igrave'] = 278;\n     t['ohungarumlaut'] = 556;\n     t['Eogonek'] = 667;\n     t['dcroat'] = 556;\n     t['threequarters'] = 834;\n     t['Scedilla'] = 667;\n     t['lcaron'] = 299;\n     t['Kcommaaccent'] = 667;\n     t['Lacute'] = 556;\n     t['trademark'] = 1000;\n     t['edotaccent'] = 556;\n     t['Igrave'] = 278;\n     t['Imacron'] = 278;\n     t['Lcaron'] = 556;\n     t['onehalf'] = 834;\n     t['lessequal'] = 549;\n     t['ocircumflex'] = 556;\n     t['ntilde'] = 556;\n     t['Uhungarumlaut'] = 722;\n     t['Eacute'] = 667;\n     t['emacron'] = 556;\n     t['gbreve'] = 556;\n     t['onequarter'] = 834;\n     t['Scaron'] = 667;\n     t['Scommaaccent'] = 667;\n     t['Ohungarumlaut'] = 778;\n     t['degree'] = 400;\n     t['ograve'] = 556;\n     t['Ccaron'] = 722;\n     t['ugrave'] = 556;\n     t['radical'] = 453;\n     t['Dcaron'] = 722;\n     t['rcommaaccent'] = 333;\n     t['Ntilde'] = 722;\n     t['otilde'] = 556;\n     t['Rcommaaccent'] = 722;\n     t['Lcommaaccent'] = 556;\n     t['Atilde'] = 667;\n     t['Aogonek'] = 667;\n     t['Aring'] = 667;\n     t['Otilde'] = 778;\n     t['zdotaccent'] = 500;\n     t['Ecaron'] = 667;\n     t['Iogonek'] = 278;\n     t['kcommaaccent'] = 500;\n     t['minus'] = 584;\n     t['Icircumflex'] = 278;\n     t['ncaron'] = 556;\n     t['tcommaaccent'] = 278;\n     t['logicalnot'] = 584;\n     t['odieresis'] = 556;\n     t['udieresis'] = 556;\n     t['notequal'] = 549;\n     t['gcommaaccent'] = 556;\n     t['eth'] = 556;\n     t['zcaron'] = 500;\n     t['ncommaaccent'] = 556;\n     t['onesuperior'] = 333;\n     t['imacron'] = 278;\n     t['Euro'] = 556;\n    });\n    t['Symbol'] = getLookupTableFactory(function (t) {\n     t['space'] = 250;\n     t['exclam'] = 333;\n     t['universal'] = 713;\n     t['numbersign'] = 500;\n     t['existential'] = 549;\n     t['percent'] = 833;\n     t['ampersand'] = 778;\n     t['suchthat'] = 439;\n     t['parenleft'] = 333;\n     t['parenright'] = 333;\n     t['asteriskmath'] = 500;\n     t['plus'] = 549;\n     t['comma'] = 250;\n     t['minus'] = 549;\n     t['period'] = 250;\n     t['slash'] = 278;\n     t['zero'] = 500;\n     t['one'] = 500;\n     t['two'] = 500;\n     t['three'] = 500;\n     t['four'] = 500;\n     t['five'] = 500;\n     t['six'] = 500;\n     t['seven'] = 500;\n     t['eight'] = 500;\n     t['nine'] = 500;\n     t['colon'] = 278;\n     t['semicolon'] = 278;\n     t['less'] = 549;\n     t['equal'] = 549;\n     t['greater'] = 549;\n     t['question'] = 444;\n     t['congruent'] = 549;\n     t['Alpha'] = 722;\n     t['Beta'] = 667;\n     t['Chi'] = 722;\n     t['Delta'] = 612;\n     t['Epsilon'] = 611;\n     t['Phi'] = 763;\n     t['Gamma'] = 603;\n     t['Eta'] = 722;\n     t['Iota'] = 333;\n     t['theta1'] = 631;\n     t['Kappa'] = 722;\n     t['Lambda'] = 686;\n     t['Mu'] = 889;\n     t['Nu'] = 722;\n     t['Omicron'] = 722;\n     t['Pi'] = 768;\n     t['Theta'] = 741;\n     t['Rho'] = 556;\n     t['Sigma'] = 592;\n     t['Tau'] = 611;\n     t['Upsilon'] = 690;\n     t['sigma1'] = 439;\n     t['Omega'] = 768;\n     t['Xi'] = 645;\n     t['Psi'] = 795;\n     t['Zeta'] = 611;\n     t['bracketleft'] = 333;\n     t['therefore'] = 863;\n     t['bracketright'] = 333;\n     t['perpendicular'] = 658;\n     t['underscore'] = 500;\n     t['radicalex'] = 500;\n     t['alpha'] = 631;\n     t['beta'] = 549;\n     t['chi'] = 549;\n     t['delta'] = 494;\n     t['epsilon'] = 439;\n     t['phi'] = 521;\n     t['gamma'] = 411;\n     t['eta'] = 603;\n     t['iota'] = 329;\n     t['phi1'] = 603;\n     t['kappa'] = 549;\n     t['lambda'] = 549;\n     t['mu'] = 576;\n     t['nu'] = 521;\n     t['omicron'] = 549;\n     t['pi'] = 549;\n     t['theta'] = 521;\n     t['rho'] = 549;\n     t['sigma'] = 603;\n     t['tau'] = 439;\n     t['upsilon'] = 576;\n     t['omega1'] = 713;\n     t['omega'] = 686;\n     t['xi'] = 493;\n     t['psi'] = 686;\n     t['zeta'] = 494;\n     t['braceleft'] = 480;\n     t['bar'] = 200;\n     t['braceright'] = 480;\n     t['similar'] = 549;\n     t['Euro'] = 750;\n     t['Upsilon1'] = 620;\n     t['minute'] = 247;\n     t['lessequal'] = 549;\n     t['fraction'] = 167;\n     t['infinity'] = 713;\n     t['florin'] = 500;\n     t['club'] = 753;\n     t['diamond'] = 753;\n     t['heart'] = 753;\n     t['spade'] = 753;\n     t['arrowboth'] = 1042;\n     t['arrowleft'] = 987;\n     t['arrowup'] = 603;\n     t['arrowright'] = 987;\n     t['arrowdown'] = 603;\n     t['degree'] = 400;\n     t['plusminus'] = 549;\n     t['second'] = 411;\n     t['greaterequal'] = 549;\n     t['multiply'] = 549;\n     t['proportional'] = 713;\n     t['partialdiff'] = 494;\n     t['bullet'] = 460;\n     t['divide'] = 549;\n     t['notequal'] = 549;\n     t['equivalence'] = 549;\n     t['approxequal'] = 549;\n     t['ellipsis'] = 1000;\n     t['arrowvertex'] = 603;\n     t['arrowhorizex'] = 1000;\n     t['carriagereturn'] = 658;\n     t['aleph'] = 823;\n     t['Ifraktur'] = 686;\n     t['Rfraktur'] = 795;\n     t['weierstrass'] = 987;\n     t['circlemultiply'] = 768;\n     t['circleplus'] = 768;\n     t['emptyset'] = 823;\n     t['intersection'] = 768;\n     t['union'] = 768;\n     t['propersuperset'] = 713;\n     t['reflexsuperset'] = 713;\n     t['notsubset'] = 713;\n     t['propersubset'] = 713;\n     t['reflexsubset'] = 713;\n     t['element'] = 713;\n     t['notelement'] = 713;\n     t['angle'] = 768;\n     t['gradient'] = 713;\n     t['registerserif'] = 790;\n     t['copyrightserif'] = 790;\n     t['trademarkserif'] = 890;\n     t['product'] = 823;\n     t['radical'] = 549;\n     t['dotmath'] = 250;\n     t['logicalnot'] = 713;\n     t['logicaland'] = 603;\n     t['logicalor'] = 603;\n     t['arrowdblboth'] = 1042;\n     t['arrowdblleft'] = 987;\n     t['arrowdblup'] = 603;\n     t['arrowdblright'] = 987;\n     t['arrowdbldown'] = 603;\n     t['lozenge'] = 494;\n     t['angleleft'] = 329;\n     t['registersans'] = 790;\n     t['copyrightsans'] = 790;\n     t['trademarksans'] = 786;\n     t['summation'] = 713;\n     t['parenlefttp'] = 384;\n     t['parenleftex'] = 384;\n     t['parenleftbt'] = 384;\n     t['bracketlefttp'] = 384;\n     t['bracketleftex'] = 384;\n     t['bracketleftbt'] = 384;\n     t['bracelefttp'] = 494;\n     t['braceleftmid'] = 494;\n     t['braceleftbt'] = 494;\n     t['braceex'] = 494;\n     t['angleright'] = 329;\n     t['integral'] = 274;\n     t['integraltp'] = 686;\n     t['integralex'] = 686;\n     t['integralbt'] = 686;\n     t['parenrighttp'] = 384;\n     t['parenrightex'] = 384;\n     t['parenrightbt'] = 384;\n     t['bracketrighttp'] = 384;\n     t['bracketrightex'] = 384;\n     t['bracketrightbt'] = 384;\n     t['bracerighttp'] = 494;\n     t['bracerightmid'] = 494;\n     t['bracerightbt'] = 494;\n     t['apple'] = 790;\n    });\n    t['Times-Roman'] = getLookupTableFactory(function (t) {\n     t['space'] = 250;\n     t['exclam'] = 333;\n     t['quotedbl'] = 408;\n     t['numbersign'] = 500;\n     t['dollar'] = 500;\n     t['percent'] = 833;\n     t['ampersand'] = 778;\n     t['quoteright'] = 333;\n     t['parenleft'] = 333;\n     t['parenright'] = 333;\n     t['asterisk'] = 500;\n     t['plus'] = 564;\n     t['comma'] = 250;\n     t['hyphen'] = 333;\n     t['period'] = 250;\n     t['slash'] = 278;\n     t['zero'] = 500;\n     t['one'] = 500;\n     t['two'] = 500;\n     t['three'] = 500;\n     t['four'] = 500;\n     t['five'] = 500;\n     t['six'] = 500;\n     t['seven'] = 500;\n     t['eight'] = 500;\n     t['nine'] = 500;\n     t['colon'] = 278;\n     t['semicolon'] = 278;\n     t['less'] = 564;\n     t['equal'] = 564;\n     t['greater'] = 564;\n     t['question'] = 444;\n     t['at'] = 921;\n     t['A'] = 722;\n     t['B'] = 667;\n     t['C'] = 667;\n     t['D'] = 722;\n     t['E'] = 611;\n     t['F'] = 556;\n     t['G'] = 722;\n     t['H'] = 722;\n     t['I'] = 333;\n     t['J'] = 389;\n     t['K'] = 722;\n     t['L'] = 611;\n     t['M'] = 889;\n     t['N'] = 722;\n     t['O'] = 722;\n     t['P'] = 556;\n     t['Q'] = 722;\n     t['R'] = 667;\n     t['S'] = 556;\n     t['T'] = 611;\n     t['U'] = 722;\n     t['V'] = 722;\n     t['W'] = 944;\n     t['X'] = 722;\n     t['Y'] = 722;\n     t['Z'] = 611;\n     t['bracketleft'] = 333;\n     t['backslash'] = 278;\n     t['bracketright'] = 333;\n     t['asciicircum'] = 469;\n     t['underscore'] = 500;\n     t['quoteleft'] = 333;\n     t['a'] = 444;\n     t['b'] = 500;\n     t['c'] = 444;\n     t['d'] = 500;\n     t['e'] = 444;\n     t['f'] = 333;\n     t['g'] = 500;\n     t['h'] = 500;\n     t['i'] = 278;\n     t['j'] = 278;\n     t['k'] = 500;\n     t['l'] = 278;\n     t['m'] = 778;\n     t['n'] = 500;\n     t['o'] = 500;\n     t['p'] = 500;\n     t['q'] = 500;\n     t['r'] = 333;\n     t['s'] = 389;\n     t['t'] = 278;\n     t['u'] = 500;\n     t['v'] = 500;\n     t['w'] = 722;\n     t['x'] = 500;\n     t['y'] = 500;\n     t['z'] = 444;\n     t['braceleft'] = 480;\n     t['bar'] = 200;\n     t['braceright'] = 480;\n     t['asciitilde'] = 541;\n     t['exclamdown'] = 333;\n     t['cent'] = 500;\n     t['sterling'] = 500;\n     t['fraction'] = 167;\n     t['yen'] = 500;\n     t['florin'] = 500;\n     t['section'] = 500;\n     t['currency'] = 500;\n     t['quotesingle'] = 180;\n     t['quotedblleft'] = 444;\n     t['guillemotleft'] = 500;\n     t['guilsinglleft'] = 333;\n     t['guilsinglright'] = 333;\n     t['fi'] = 556;\n     t['fl'] = 556;\n     t['endash'] = 500;\n     t['dagger'] = 500;\n     t['daggerdbl'] = 500;\n     t['periodcentered'] = 250;\n     t['paragraph'] = 453;\n     t['bullet'] = 350;\n     t['quotesinglbase'] = 333;\n     t['quotedblbase'] = 444;\n     t['quotedblright'] = 444;\n     t['guillemotright'] = 500;\n     t['ellipsis'] = 1000;\n     t['perthousand'] = 1000;\n     t['questiondown'] = 444;\n     t['grave'] = 333;\n     t['acute'] = 333;\n     t['circumflex'] = 333;\n     t['tilde'] = 333;\n     t['macron'] = 333;\n     t['breve'] = 333;\n     t['dotaccent'] = 333;\n     t['dieresis'] = 333;\n     t['ring'] = 333;\n     t['cedilla'] = 333;\n     t['hungarumlaut'] = 333;\n     t['ogonek'] = 333;\n     t['caron'] = 333;\n     t['emdash'] = 1000;\n     t['AE'] = 889;\n     t['ordfeminine'] = 276;\n     t['Lslash'] = 611;\n     t['Oslash'] = 722;\n     t['OE'] = 889;\n     t['ordmasculine'] = 310;\n     t['ae'] = 667;\n     t['dotlessi'] = 278;\n     t['lslash'] = 278;\n     t['oslash'] = 500;\n     t['oe'] = 722;\n     t['germandbls'] = 500;\n     t['Idieresis'] = 333;\n     t['eacute'] = 444;\n     t['abreve'] = 444;\n     t['uhungarumlaut'] = 500;\n     t['ecaron'] = 444;\n     t['Ydieresis'] = 722;\n     t['divide'] = 564;\n     t['Yacute'] = 722;\n     t['Acircumflex'] = 722;\n     t['aacute'] = 444;\n     t['Ucircumflex'] = 722;\n     t['yacute'] = 500;\n     t['scommaaccent'] = 389;\n     t['ecircumflex'] = 444;\n     t['Uring'] = 722;\n     t['Udieresis'] = 722;\n     t['aogonek'] = 444;\n     t['Uacute'] = 722;\n     t['uogonek'] = 500;\n     t['Edieresis'] = 611;\n     t['Dcroat'] = 722;\n     t['commaaccent'] = 250;\n     t['copyright'] = 760;\n     t['Emacron'] = 611;\n     t['ccaron'] = 444;\n     t['aring'] = 444;\n     t['Ncommaaccent'] = 722;\n     t['lacute'] = 278;\n     t['agrave'] = 444;\n     t['Tcommaaccent'] = 611;\n     t['Cacute'] = 667;\n     t['atilde'] = 444;\n     t['Edotaccent'] = 611;\n     t['scaron'] = 389;\n     t['scedilla'] = 389;\n     t['iacute'] = 278;\n     t['lozenge'] = 471;\n     t['Rcaron'] = 667;\n     t['Gcommaaccent'] = 722;\n     t['ucircumflex'] = 500;\n     t['acircumflex'] = 444;\n     t['Amacron'] = 722;\n     t['rcaron'] = 333;\n     t['ccedilla'] = 444;\n     t['Zdotaccent'] = 611;\n     t['Thorn'] = 556;\n     t['Omacron'] = 722;\n     t['Racute'] = 667;\n     t['Sacute'] = 556;\n     t['dcaron'] = 588;\n     t['Umacron'] = 722;\n     t['uring'] = 500;\n     t['threesuperior'] = 300;\n     t['Ograve'] = 722;\n     t['Agrave'] = 722;\n     t['Abreve'] = 722;\n     t['multiply'] = 564;\n     t['uacute'] = 500;\n     t['Tcaron'] = 611;\n     t['partialdiff'] = 476;\n     t['ydieresis'] = 500;\n     t['Nacute'] = 722;\n     t['icircumflex'] = 278;\n     t['Ecircumflex'] = 611;\n     t['adieresis'] = 444;\n     t['edieresis'] = 444;\n     t['cacute'] = 444;\n     t['nacute'] = 500;\n     t['umacron'] = 500;\n     t['Ncaron'] = 722;\n     t['Iacute'] = 333;\n     t['plusminus'] = 564;\n     t['brokenbar'] = 200;\n     t['registered'] = 760;\n     t['Gbreve'] = 722;\n     t['Idotaccent'] = 333;\n     t['summation'] = 600;\n     t['Egrave'] = 611;\n     t['racute'] = 333;\n     t['omacron'] = 500;\n     t['Zacute'] = 611;\n     t['Zcaron'] = 611;\n     t['greaterequal'] = 549;\n     t['Eth'] = 722;\n     t['Ccedilla'] = 667;\n     t['lcommaaccent'] = 278;\n     t['tcaron'] = 326;\n     t['eogonek'] = 444;\n     t['Uogonek'] = 722;\n     t['Aacute'] = 722;\n     t['Adieresis'] = 722;\n     t['egrave'] = 444;\n     t['zacute'] = 444;\n     t['iogonek'] = 278;\n     t['Oacute'] = 722;\n     t['oacute'] = 500;\n     t['amacron'] = 444;\n     t['sacute'] = 389;\n     t['idieresis'] = 278;\n     t['Ocircumflex'] = 722;\n     t['Ugrave'] = 722;\n     t['Delta'] = 612;\n     t['thorn'] = 500;\n     t['twosuperior'] = 300;\n     t['Odieresis'] = 722;\n     t['mu'] = 500;\n     t['igrave'] = 278;\n     t['ohungarumlaut'] = 500;\n     t['Eogonek'] = 611;\n     t['dcroat'] = 500;\n     t['threequarters'] = 750;\n     t['Scedilla'] = 556;\n     t['lcaron'] = 344;\n     t['Kcommaaccent'] = 722;\n     t['Lacute'] = 611;\n     t['trademark'] = 980;\n     t['edotaccent'] = 444;\n     t['Igrave'] = 333;\n     t['Imacron'] = 333;\n     t['Lcaron'] = 611;\n     t['onehalf'] = 750;\n     t['lessequal'] = 549;\n     t['ocircumflex'] = 500;\n     t['ntilde'] = 500;\n     t['Uhungarumlaut'] = 722;\n     t['Eacute'] = 611;\n     t['emacron'] = 444;\n     t['gbreve'] = 500;\n     t['onequarter'] = 750;\n     t['Scaron'] = 556;\n     t['Scommaaccent'] = 556;\n     t['Ohungarumlaut'] = 722;\n     t['degree'] = 400;\n     t['ograve'] = 500;\n     t['Ccaron'] = 667;\n     t['ugrave'] = 500;\n     t['radical'] = 453;\n     t['Dcaron'] = 722;\n     t['rcommaaccent'] = 333;\n     t['Ntilde'] = 722;\n     t['otilde'] = 500;\n     t['Rcommaaccent'] = 667;\n     t['Lcommaaccent'] = 611;\n     t['Atilde'] = 722;\n     t['Aogonek'] = 722;\n     t['Aring'] = 722;\n     t['Otilde'] = 722;\n     t['zdotaccent'] = 444;\n     t['Ecaron'] = 611;\n     t['Iogonek'] = 333;\n     t['kcommaaccent'] = 500;\n     t['minus'] = 564;\n     t['Icircumflex'] = 333;\n     t['ncaron'] = 500;\n     t['tcommaaccent'] = 278;\n     t['logicalnot'] = 564;\n     t['odieresis'] = 500;\n     t['udieresis'] = 500;\n     t['notequal'] = 549;\n     t['gcommaaccent'] = 500;\n     t['eth'] = 500;\n     t['zcaron'] = 444;\n     t['ncommaaccent'] = 500;\n     t['onesuperior'] = 300;\n     t['imacron'] = 278;\n     t['Euro'] = 500;\n    });\n    t['Times-Bold'] = getLookupTableFactory(function (t) {\n     t['space'] = 250;\n     t['exclam'] = 333;\n     t['quotedbl'] = 555;\n     t['numbersign'] = 500;\n     t['dollar'] = 500;\n     t['percent'] = 1000;\n     t['ampersand'] = 833;\n     t['quoteright'] = 333;\n     t['parenleft'] = 333;\n     t['parenright'] = 333;\n     t['asterisk'] = 500;\n     t['plus'] = 570;\n     t['comma'] = 250;\n     t['hyphen'] = 333;\n     t['period'] = 250;\n     t['slash'] = 278;\n     t['zero'] = 500;\n     t['one'] = 500;\n     t['two'] = 500;\n     t['three'] = 500;\n     t['four'] = 500;\n     t['five'] = 500;\n     t['six'] = 500;\n     t['seven'] = 500;\n     t['eight'] = 500;\n     t['nine'] = 500;\n     t['colon'] = 333;\n     t['semicolon'] = 333;\n     t['less'] = 570;\n     t['equal'] = 570;\n     t['greater'] = 570;\n     t['question'] = 500;\n     t['at'] = 930;\n     t['A'] = 722;\n     t['B'] = 667;\n     t['C'] = 722;\n     t['D'] = 722;\n     t['E'] = 667;\n     t['F'] = 611;\n     t['G'] = 778;\n     t['H'] = 778;\n     t['I'] = 389;\n     t['J'] = 500;\n     t['K'] = 778;\n     t['L'] = 667;\n     t['M'] = 944;\n     t['N'] = 722;\n     t['O'] = 778;\n     t['P'] = 611;\n     t['Q'] = 778;\n     t['R'] = 722;\n     t['S'] = 556;\n     t['T'] = 667;\n     t['U'] = 722;\n     t['V'] = 722;\n     t['W'] = 1000;\n     t['X'] = 722;\n     t['Y'] = 722;\n     t['Z'] = 667;\n     t['bracketleft'] = 333;\n     t['backslash'] = 278;\n     t['bracketright'] = 333;\n     t['asciicircum'] = 581;\n     t['underscore'] = 500;\n     t['quoteleft'] = 333;\n     t['a'] = 500;\n     t['b'] = 556;\n     t['c'] = 444;\n     t['d'] = 556;\n     t['e'] = 444;\n     t['f'] = 333;\n     t['g'] = 500;\n     t['h'] = 556;\n     t['i'] = 278;\n     t['j'] = 333;\n     t['k'] = 556;\n     t['l'] = 278;\n     t['m'] = 833;\n     t['n'] = 556;\n     t['o'] = 500;\n     t['p'] = 556;\n     t['q'] = 556;\n     t['r'] = 444;\n     t['s'] = 389;\n     t['t'] = 333;\n     t['u'] = 556;\n     t['v'] = 500;\n     t['w'] = 722;\n     t['x'] = 500;\n     t['y'] = 500;\n     t['z'] = 444;\n     t['braceleft'] = 394;\n     t['bar'] = 220;\n     t['braceright'] = 394;\n     t['asciitilde'] = 520;\n     t['exclamdown'] = 333;\n     t['cent'] = 500;\n     t['sterling'] = 500;\n     t['fraction'] = 167;\n     t['yen'] = 500;\n     t['florin'] = 500;\n     t['section'] = 500;\n     t['currency'] = 500;\n     t['quotesingle'] = 278;\n     t['quotedblleft'] = 500;\n     t['guillemotleft'] = 500;\n     t['guilsinglleft'] = 333;\n     t['guilsinglright'] = 333;\n     t['fi'] = 556;\n     t['fl'] = 556;\n     t['endash'] = 500;\n     t['dagger'] = 500;\n     t['daggerdbl'] = 500;\n     t['periodcentered'] = 250;\n     t['paragraph'] = 540;\n     t['bullet'] = 350;\n     t['quotesinglbase'] = 333;\n     t['quotedblbase'] = 500;\n     t['quotedblright'] = 500;\n     t['guillemotright'] = 500;\n     t['ellipsis'] = 1000;\n     t['perthousand'] = 1000;\n     t['questiondown'] = 500;\n     t['grave'] = 333;\n     t['acute'] = 333;\n     t['circumflex'] = 333;\n     t['tilde'] = 333;\n     t['macron'] = 333;\n     t['breve'] = 333;\n     t['dotaccent'] = 333;\n     t['dieresis'] = 333;\n     t['ring'] = 333;\n     t['cedilla'] = 333;\n     t['hungarumlaut'] = 333;\n     t['ogonek'] = 333;\n     t['caron'] = 333;\n     t['emdash'] = 1000;\n     t['AE'] = 1000;\n     t['ordfeminine'] = 300;\n     t['Lslash'] = 667;\n     t['Oslash'] = 778;\n     t['OE'] = 1000;\n     t['ordmasculine'] = 330;\n     t['ae'] = 722;\n     t['dotlessi'] = 278;\n     t['lslash'] = 278;\n     t['oslash'] = 500;\n     t['oe'] = 722;\n     t['germandbls'] = 556;\n     t['Idieresis'] = 389;\n     t['eacute'] = 444;\n     t['abreve'] = 500;\n     t['uhungarumlaut'] = 556;\n     t['ecaron'] = 444;\n     t['Ydieresis'] = 722;\n     t['divide'] = 570;\n     t['Yacute'] = 722;\n     t['Acircumflex'] = 722;\n     t['aacute'] = 500;\n     t['Ucircumflex'] = 722;\n     t['yacute'] = 500;\n     t['scommaaccent'] = 389;\n     t['ecircumflex'] = 444;\n     t['Uring'] = 722;\n     t['Udieresis'] = 722;\n     t['aogonek'] = 500;\n     t['Uacute'] = 722;\n     t['uogonek'] = 556;\n     t['Edieresis'] = 667;\n     t['Dcroat'] = 722;\n     t['commaaccent'] = 250;\n     t['copyright'] = 747;\n     t['Emacron'] = 667;\n     t['ccaron'] = 444;\n     t['aring'] = 500;\n     t['Ncommaaccent'] = 722;\n     t['lacute'] = 278;\n     t['agrave'] = 500;\n     t['Tcommaaccent'] = 667;\n     t['Cacute'] = 722;\n     t['atilde'] = 500;\n     t['Edotaccent'] = 667;\n     t['scaron'] = 389;\n     t['scedilla'] = 389;\n     t['iacute'] = 278;\n     t['lozenge'] = 494;\n     t['Rcaron'] = 722;\n     t['Gcommaaccent'] = 778;\n     t['ucircumflex'] = 556;\n     t['acircumflex'] = 500;\n     t['Amacron'] = 722;\n     t['rcaron'] = 444;\n     t['ccedilla'] = 444;\n     t['Zdotaccent'] = 667;\n     t['Thorn'] = 611;\n     t['Omacron'] = 778;\n     t['Racute'] = 722;\n     t['Sacute'] = 556;\n     t['dcaron'] = 672;\n     t['Umacron'] = 722;\n     t['uring'] = 556;\n     t['threesuperior'] = 300;\n     t['Ograve'] = 778;\n     t['Agrave'] = 722;\n     t['Abreve'] = 722;\n     t['multiply'] = 570;\n     t['uacute'] = 556;\n     t['Tcaron'] = 667;\n     t['partialdiff'] = 494;\n     t['ydieresis'] = 500;\n     t['Nacute'] = 722;\n     t['icircumflex'] = 278;\n     t['Ecircumflex'] = 667;\n     t['adieresis'] = 500;\n     t['edieresis'] = 444;\n     t['cacute'] = 444;\n     t['nacute'] = 556;\n     t['umacron'] = 556;\n     t['Ncaron'] = 722;\n     t['Iacute'] = 389;\n     t['plusminus'] = 570;\n     t['brokenbar'] = 220;\n     t['registered'] = 747;\n     t['Gbreve'] = 778;\n     t['Idotaccent'] = 389;\n     t['summation'] = 600;\n     t['Egrave'] = 667;\n     t['racute'] = 444;\n     t['omacron'] = 500;\n     t['Zacute'] = 667;\n     t['Zcaron'] = 667;\n     t['greaterequal'] = 549;\n     t['Eth'] = 722;\n     t['Ccedilla'] = 722;\n     t['lcommaaccent'] = 278;\n     t['tcaron'] = 416;\n     t['eogonek'] = 444;\n     t['Uogonek'] = 722;\n     t['Aacute'] = 722;\n     t['Adieresis'] = 722;\n     t['egrave'] = 444;\n     t['zacute'] = 444;\n     t['iogonek'] = 278;\n     t['Oacute'] = 778;\n     t['oacute'] = 500;\n     t['amacron'] = 500;\n     t['sacute'] = 389;\n     t['idieresis'] = 278;\n     t['Ocircumflex'] = 778;\n     t['Ugrave'] = 722;\n     t['Delta'] = 612;\n     t['thorn'] = 556;\n     t['twosuperior'] = 300;\n     t['Odieresis'] = 778;\n     t['mu'] = 556;\n     t['igrave'] = 278;\n     t['ohungarumlaut'] = 500;\n     t['Eogonek'] = 667;\n     t['dcroat'] = 556;\n     t['threequarters'] = 750;\n     t['Scedilla'] = 556;\n     t['lcaron'] = 394;\n     t['Kcommaaccent'] = 778;\n     t['Lacute'] = 667;\n     t['trademark'] = 1000;\n     t['edotaccent'] = 444;\n     t['Igrave'] = 389;\n     t['Imacron'] = 389;\n     t['Lcaron'] = 667;\n     t['onehalf'] = 750;\n     t['lessequal'] = 549;\n     t['ocircumflex'] = 500;\n     t['ntilde'] = 556;\n     t['Uhungarumlaut'] = 722;\n     t['Eacute'] = 667;\n     t['emacron'] = 444;\n     t['gbreve'] = 500;\n     t['onequarter'] = 750;\n     t['Scaron'] = 556;\n     t['Scommaaccent'] = 556;\n     t['Ohungarumlaut'] = 778;\n     t['degree'] = 400;\n     t['ograve'] = 500;\n     t['Ccaron'] = 722;\n     t['ugrave'] = 556;\n     t['radical'] = 549;\n     t['Dcaron'] = 722;\n     t['rcommaaccent'] = 444;\n     t['Ntilde'] = 722;\n     t['otilde'] = 500;\n     t['Rcommaaccent'] = 722;\n     t['Lcommaaccent'] = 667;\n     t['Atilde'] = 722;\n     t['Aogonek'] = 722;\n     t['Aring'] = 722;\n     t['Otilde'] = 778;\n     t['zdotaccent'] = 444;\n     t['Ecaron'] = 667;\n     t['Iogonek'] = 389;\n     t['kcommaaccent'] = 556;\n     t['minus'] = 570;\n     t['Icircumflex'] = 389;\n     t['ncaron'] = 556;\n     t['tcommaaccent'] = 333;\n     t['logicalnot'] = 570;\n     t['odieresis'] = 500;\n     t['udieresis'] = 556;\n     t['notequal'] = 549;\n     t['gcommaaccent'] = 500;\n     t['eth'] = 500;\n     t['zcaron'] = 444;\n     t['ncommaaccent'] = 556;\n     t['onesuperior'] = 300;\n     t['imacron'] = 278;\n     t['Euro'] = 500;\n    });\n    t['Times-BoldItalic'] = getLookupTableFactory(function (t) {\n     t['space'] = 250;\n     t['exclam'] = 389;\n     t['quotedbl'] = 555;\n     t['numbersign'] = 500;\n     t['dollar'] = 500;\n     t['percent'] = 833;\n     t['ampersand'] = 778;\n     t['quoteright'] = 333;\n     t['parenleft'] = 333;\n     t['parenright'] = 333;\n     t['asterisk'] = 500;\n     t['plus'] = 570;\n     t['comma'] = 250;\n     t['hyphen'] = 333;\n     t['period'] = 250;\n     t['slash'] = 278;\n     t['zero'] = 500;\n     t['one'] = 500;\n     t['two'] = 500;\n     t['three'] = 500;\n     t['four'] = 500;\n     t['five'] = 500;\n     t['six'] = 500;\n     t['seven'] = 500;\n     t['eight'] = 500;\n     t['nine'] = 500;\n     t['colon'] = 333;\n     t['semicolon'] = 333;\n     t['less'] = 570;\n     t['equal'] = 570;\n     t['greater'] = 570;\n     t['question'] = 500;\n     t['at'] = 832;\n     t['A'] = 667;\n     t['B'] = 667;\n     t['C'] = 667;\n     t['D'] = 722;\n     t['E'] = 667;\n     t['F'] = 667;\n     t['G'] = 722;\n     t['H'] = 778;\n     t['I'] = 389;\n     t['J'] = 500;\n     t['K'] = 667;\n     t['L'] = 611;\n     t['M'] = 889;\n     t['N'] = 722;\n     t['O'] = 722;\n     t['P'] = 611;\n     t['Q'] = 722;\n     t['R'] = 667;\n     t['S'] = 556;\n     t['T'] = 611;\n     t['U'] = 722;\n     t['V'] = 667;\n     t['W'] = 889;\n     t['X'] = 667;\n     t['Y'] = 611;\n     t['Z'] = 611;\n     t['bracketleft'] = 333;\n     t['backslash'] = 278;\n     t['bracketright'] = 333;\n     t['asciicircum'] = 570;\n     t['underscore'] = 500;\n     t['quoteleft'] = 333;\n     t['a'] = 500;\n     t['b'] = 500;\n     t['c'] = 444;\n     t['d'] = 500;\n     t['e'] = 444;\n     t['f'] = 333;\n     t['g'] = 500;\n     t['h'] = 556;\n     t['i'] = 278;\n     t['j'] = 278;\n     t['k'] = 500;\n     t['l'] = 278;\n     t['m'] = 778;\n     t['n'] = 556;\n     t['o'] = 500;\n     t['p'] = 500;\n     t['q'] = 500;\n     t['r'] = 389;\n     t['s'] = 389;\n     t['t'] = 278;\n     t['u'] = 556;\n     t['v'] = 444;\n     t['w'] = 667;\n     t['x'] = 500;\n     t['y'] = 444;\n     t['z'] = 389;\n     t['braceleft'] = 348;\n     t['bar'] = 220;\n     t['braceright'] = 348;\n     t['asciitilde'] = 570;\n     t['exclamdown'] = 389;\n     t['cent'] = 500;\n     t['sterling'] = 500;\n     t['fraction'] = 167;\n     t['yen'] = 500;\n     t['florin'] = 500;\n     t['section'] = 500;\n     t['currency'] = 500;\n     t['quotesingle'] = 278;\n     t['quotedblleft'] = 500;\n     t['guillemotleft'] = 500;\n     t['guilsinglleft'] = 333;\n     t['guilsinglright'] = 333;\n     t['fi'] = 556;\n     t['fl'] = 556;\n     t['endash'] = 500;\n     t['dagger'] = 500;\n     t['daggerdbl'] = 500;\n     t['periodcentered'] = 250;\n     t['paragraph'] = 500;\n     t['bullet'] = 350;\n     t['quotesinglbase'] = 333;\n     t['quotedblbase'] = 500;\n     t['quotedblright'] = 500;\n     t['guillemotright'] = 500;\n     t['ellipsis'] = 1000;\n     t['perthousand'] = 1000;\n     t['questiondown'] = 500;\n     t['grave'] = 333;\n     t['acute'] = 333;\n     t['circumflex'] = 333;\n     t['tilde'] = 333;\n     t['macron'] = 333;\n     t['breve'] = 333;\n     t['dotaccent'] = 333;\n     t['dieresis'] = 333;\n     t['ring'] = 333;\n     t['cedilla'] = 333;\n     t['hungarumlaut'] = 333;\n     t['ogonek'] = 333;\n     t['caron'] = 333;\n     t['emdash'] = 1000;\n     t['AE'] = 944;\n     t['ordfeminine'] = 266;\n     t['Lslash'] = 611;\n     t['Oslash'] = 722;\n     t['OE'] = 944;\n     t['ordmasculine'] = 300;\n     t['ae'] = 722;\n     t['dotlessi'] = 278;\n     t['lslash'] = 278;\n     t['oslash'] = 500;\n     t['oe'] = 722;\n     t['germandbls'] = 500;\n     t['Idieresis'] = 389;\n     t['eacute'] = 444;\n     t['abreve'] = 500;\n     t['uhungarumlaut'] = 556;\n     t['ecaron'] = 444;\n     t['Ydieresis'] = 611;\n     t['divide'] = 570;\n     t['Yacute'] = 611;\n     t['Acircumflex'] = 667;\n     t['aacute'] = 500;\n     t['Ucircumflex'] = 722;\n     t['yacute'] = 444;\n     t['scommaaccent'] = 389;\n     t['ecircumflex'] = 444;\n     t['Uring'] = 722;\n     t['Udieresis'] = 722;\n     t['aogonek'] = 500;\n     t['Uacute'] = 722;\n     t['uogonek'] = 556;\n     t['Edieresis'] = 667;\n     t['Dcroat'] = 722;\n     t['commaaccent'] = 250;\n     t['copyright'] = 747;\n     t['Emacron'] = 667;\n     t['ccaron'] = 444;\n     t['aring'] = 500;\n     t['Ncommaaccent'] = 722;\n     t['lacute'] = 278;\n     t['agrave'] = 500;\n     t['Tcommaaccent'] = 611;\n     t['Cacute'] = 667;\n     t['atilde'] = 500;\n     t['Edotaccent'] = 667;\n     t['scaron'] = 389;\n     t['scedilla'] = 389;\n     t['iacute'] = 278;\n     t['lozenge'] = 494;\n     t['Rcaron'] = 667;\n     t['Gcommaaccent'] = 722;\n     t['ucircumflex'] = 556;\n     t['acircumflex'] = 500;\n     t['Amacron'] = 667;\n     t['rcaron'] = 389;\n     t['ccedilla'] = 444;\n     t['Zdotaccent'] = 611;\n     t['Thorn'] = 611;\n     t['Omacron'] = 722;\n     t['Racute'] = 667;\n     t['Sacute'] = 556;\n     t['dcaron'] = 608;\n     t['Umacron'] = 722;\n     t['uring'] = 556;\n     t['threesuperior'] = 300;\n     t['Ograve'] = 722;\n     t['Agrave'] = 667;\n     t['Abreve'] = 667;\n     t['multiply'] = 570;\n     t['uacute'] = 556;\n     t['Tcaron'] = 611;\n     t['partialdiff'] = 494;\n     t['ydieresis'] = 444;\n     t['Nacute'] = 722;\n     t['icircumflex'] = 278;\n     t['Ecircumflex'] = 667;\n     t['adieresis'] = 500;\n     t['edieresis'] = 444;\n     t['cacute'] = 444;\n     t['nacute'] = 556;\n     t['umacron'] = 556;\n     t['Ncaron'] = 722;\n     t['Iacute'] = 389;\n     t['plusminus'] = 570;\n     t['brokenbar'] = 220;\n     t['registered'] = 747;\n     t['Gbreve'] = 722;\n     t['Idotaccent'] = 389;\n     t['summation'] = 600;\n     t['Egrave'] = 667;\n     t['racute'] = 389;\n     t['omacron'] = 500;\n     t['Zacute'] = 611;\n     t['Zcaron'] = 611;\n     t['greaterequal'] = 549;\n     t['Eth'] = 722;\n     t['Ccedilla'] = 667;\n     t['lcommaaccent'] = 278;\n     t['tcaron'] = 366;\n     t['eogonek'] = 444;\n     t['Uogonek'] = 722;\n     t['Aacute'] = 667;\n     t['Adieresis'] = 667;\n     t['egrave'] = 444;\n     t['zacute'] = 389;\n     t['iogonek'] = 278;\n     t['Oacute'] = 722;\n     t['oacute'] = 500;\n     t['amacron'] = 500;\n     t['sacute'] = 389;\n     t['idieresis'] = 278;\n     t['Ocircumflex'] = 722;\n     t['Ugrave'] = 722;\n     t['Delta'] = 612;\n     t['thorn'] = 500;\n     t['twosuperior'] = 300;\n     t['Odieresis'] = 722;\n     t['mu'] = 576;\n     t['igrave'] = 278;\n     t['ohungarumlaut'] = 500;\n     t['Eogonek'] = 667;\n     t['dcroat'] = 500;\n     t['threequarters'] = 750;\n     t['Scedilla'] = 556;\n     t['lcaron'] = 382;\n     t['Kcommaaccent'] = 667;\n     t['Lacute'] = 611;\n     t['trademark'] = 1000;\n     t['edotaccent'] = 444;\n     t['Igrave'] = 389;\n     t['Imacron'] = 389;\n     t['Lcaron'] = 611;\n     t['onehalf'] = 750;\n     t['lessequal'] = 549;\n     t['ocircumflex'] = 500;\n     t['ntilde'] = 556;\n     t['Uhungarumlaut'] = 722;\n     t['Eacute'] = 667;\n     t['emacron'] = 444;\n     t['gbreve'] = 500;\n     t['onequarter'] = 750;\n     t['Scaron'] = 556;\n     t['Scommaaccent'] = 556;\n     t['Ohungarumlaut'] = 722;\n     t['degree'] = 400;\n     t['ograve'] = 500;\n     t['Ccaron'] = 667;\n     t['ugrave'] = 556;\n     t['radical'] = 549;\n     t['Dcaron'] = 722;\n     t['rcommaaccent'] = 389;\n     t['Ntilde'] = 722;\n     t['otilde'] = 500;\n     t['Rcommaaccent'] = 667;\n     t['Lcommaaccent'] = 611;\n     t['Atilde'] = 667;\n     t['Aogonek'] = 667;\n     t['Aring'] = 667;\n     t['Otilde'] = 722;\n     t['zdotaccent'] = 389;\n     t['Ecaron'] = 667;\n     t['Iogonek'] = 389;\n     t['kcommaaccent'] = 500;\n     t['minus'] = 606;\n     t['Icircumflex'] = 389;\n     t['ncaron'] = 556;\n     t['tcommaaccent'] = 278;\n     t['logicalnot'] = 606;\n     t['odieresis'] = 500;\n     t['udieresis'] = 556;\n     t['notequal'] = 549;\n     t['gcommaaccent'] = 500;\n     t['eth'] = 500;\n     t['zcaron'] = 389;\n     t['ncommaaccent'] = 556;\n     t['onesuperior'] = 300;\n     t['imacron'] = 278;\n     t['Euro'] = 500;\n    });\n    t['Times-Italic'] = getLookupTableFactory(function (t) {\n     t['space'] = 250;\n     t['exclam'] = 333;\n     t['quotedbl'] = 420;\n     t['numbersign'] = 500;\n     t['dollar'] = 500;\n     t['percent'] = 833;\n     t['ampersand'] = 778;\n     t['quoteright'] = 333;\n     t['parenleft'] = 333;\n     t['parenright'] = 333;\n     t['asterisk'] = 500;\n     t['plus'] = 675;\n     t['comma'] = 250;\n     t['hyphen'] = 333;\n     t['period'] = 250;\n     t['slash'] = 278;\n     t['zero'] = 500;\n     t['one'] = 500;\n     t['two'] = 500;\n     t['three'] = 500;\n     t['four'] = 500;\n     t['five'] = 500;\n     t['six'] = 500;\n     t['seven'] = 500;\n     t['eight'] = 500;\n     t['nine'] = 500;\n     t['colon'] = 333;\n     t['semicolon'] = 333;\n     t['less'] = 675;\n     t['equal'] = 675;\n     t['greater'] = 675;\n     t['question'] = 500;\n     t['at'] = 920;\n     t['A'] = 611;\n     t['B'] = 611;\n     t['C'] = 667;\n     t['D'] = 722;\n     t['E'] = 611;\n     t['F'] = 611;\n     t['G'] = 722;\n     t['H'] = 722;\n     t['I'] = 333;\n     t['J'] = 444;\n     t['K'] = 667;\n     t['L'] = 556;\n     t['M'] = 833;\n     t['N'] = 667;\n     t['O'] = 722;\n     t['P'] = 611;\n     t['Q'] = 722;\n     t['R'] = 611;\n     t['S'] = 500;\n     t['T'] = 556;\n     t['U'] = 722;\n     t['V'] = 611;\n     t['W'] = 833;\n     t['X'] = 611;\n     t['Y'] = 556;\n     t['Z'] = 556;\n     t['bracketleft'] = 389;\n     t['backslash'] = 278;\n     t['bracketright'] = 389;\n     t['asciicircum'] = 422;\n     t['underscore'] = 500;\n     t['quoteleft'] = 333;\n     t['a'] = 500;\n     t['b'] = 500;\n     t['c'] = 444;\n     t['d'] = 500;\n     t['e'] = 444;\n     t['f'] = 278;\n     t['g'] = 500;\n     t['h'] = 500;\n     t['i'] = 278;\n     t['j'] = 278;\n     t['k'] = 444;\n     t['l'] = 278;\n     t['m'] = 722;\n     t['n'] = 500;\n     t['o'] = 500;\n     t['p'] = 500;\n     t['q'] = 500;\n     t['r'] = 389;\n     t['s'] = 389;\n     t['t'] = 278;\n     t['u'] = 500;\n     t['v'] = 444;\n     t['w'] = 667;\n     t['x'] = 444;\n     t['y'] = 444;\n     t['z'] = 389;\n     t['braceleft'] = 400;\n     t['bar'] = 275;\n     t['braceright'] = 400;\n     t['asciitilde'] = 541;\n     t['exclamdown'] = 389;\n     t['cent'] = 500;\n     t['sterling'] = 500;\n     t['fraction'] = 167;\n     t['yen'] = 500;\n     t['florin'] = 500;\n     t['section'] = 500;\n     t['currency'] = 500;\n     t['quotesingle'] = 214;\n     t['quotedblleft'] = 556;\n     t['guillemotleft'] = 500;\n     t['guilsinglleft'] = 333;\n     t['guilsinglright'] = 333;\n     t['fi'] = 500;\n     t['fl'] = 500;\n     t['endash'] = 500;\n     t['dagger'] = 500;\n     t['daggerdbl'] = 500;\n     t['periodcentered'] = 250;\n     t['paragraph'] = 523;\n     t['bullet'] = 350;\n     t['quotesinglbase'] = 333;\n     t['quotedblbase'] = 556;\n     t['quotedblright'] = 556;\n     t['guillemotright'] = 500;\n     t['ellipsis'] = 889;\n     t['perthousand'] = 1000;\n     t['questiondown'] = 500;\n     t['grave'] = 333;\n     t['acute'] = 333;\n     t['circumflex'] = 333;\n     t['tilde'] = 333;\n     t['macron'] = 333;\n     t['breve'] = 333;\n     t['dotaccent'] = 333;\n     t['dieresis'] = 333;\n     t['ring'] = 333;\n     t['cedilla'] = 333;\n     t['hungarumlaut'] = 333;\n     t['ogonek'] = 333;\n     t['caron'] = 333;\n     t['emdash'] = 889;\n     t['AE'] = 889;\n     t['ordfeminine'] = 276;\n     t['Lslash'] = 556;\n     t['Oslash'] = 722;\n     t['OE'] = 944;\n     t['ordmasculine'] = 310;\n     t['ae'] = 667;\n     t['dotlessi'] = 278;\n     t['lslash'] = 278;\n     t['oslash'] = 500;\n     t['oe'] = 667;\n     t['germandbls'] = 500;\n     t['Idieresis'] = 333;\n     t['eacute'] = 444;\n     t['abreve'] = 500;\n     t['uhungarumlaut'] = 500;\n     t['ecaron'] = 444;\n     t['Ydieresis'] = 556;\n     t['divide'] = 675;\n     t['Yacute'] = 556;\n     t['Acircumflex'] = 611;\n     t['aacute'] = 500;\n     t['Ucircumflex'] = 722;\n     t['yacute'] = 444;\n     t['scommaaccent'] = 389;\n     t['ecircumflex'] = 444;\n     t['Uring'] = 722;\n     t['Udieresis'] = 722;\n     t['aogonek'] = 500;\n     t['Uacute'] = 722;\n     t['uogonek'] = 500;\n     t['Edieresis'] = 611;\n     t['Dcroat'] = 722;\n     t['commaaccent'] = 250;\n     t['copyright'] = 760;\n     t['Emacron'] = 611;\n     t['ccaron'] = 444;\n     t['aring'] = 500;\n     t['Ncommaaccent'] = 667;\n     t['lacute'] = 278;\n     t['agrave'] = 500;\n     t['Tcommaaccent'] = 556;\n     t['Cacute'] = 667;\n     t['atilde'] = 500;\n     t['Edotaccent'] = 611;\n     t['scaron'] = 389;\n     t['scedilla'] = 389;\n     t['iacute'] = 278;\n     t['lozenge'] = 471;\n     t['Rcaron'] = 611;\n     t['Gcommaaccent'] = 722;\n     t['ucircumflex'] = 500;\n     t['acircumflex'] = 500;\n     t['Amacron'] = 611;\n     t['rcaron'] = 389;\n     t['ccedilla'] = 444;\n     t['Zdotaccent'] = 556;\n     t['Thorn'] = 611;\n     t['Omacron'] = 722;\n     t['Racute'] = 611;\n     t['Sacute'] = 500;\n     t['dcaron'] = 544;\n     t['Umacron'] = 722;\n     t['uring'] = 500;\n     t['threesuperior'] = 300;\n     t['Ograve'] = 722;\n     t['Agrave'] = 611;\n     t['Abreve'] = 611;\n     t['multiply'] = 675;\n     t['uacute'] = 500;\n     t['Tcaron'] = 556;\n     t['partialdiff'] = 476;\n     t['ydieresis'] = 444;\n     t['Nacute'] = 667;\n     t['icircumflex'] = 278;\n     t['Ecircumflex'] = 611;\n     t['adieresis'] = 500;\n     t['edieresis'] = 444;\n     t['cacute'] = 444;\n     t['nacute'] = 500;\n     t['umacron'] = 500;\n     t['Ncaron'] = 667;\n     t['Iacute'] = 333;\n     t['plusminus'] = 675;\n     t['brokenbar'] = 275;\n     t['registered'] = 760;\n     t['Gbreve'] = 722;\n     t['Idotaccent'] = 333;\n     t['summation'] = 600;\n     t['Egrave'] = 611;\n     t['racute'] = 389;\n     t['omacron'] = 500;\n     t['Zacute'] = 556;\n     t['Zcaron'] = 556;\n     t['greaterequal'] = 549;\n     t['Eth'] = 722;\n     t['Ccedilla'] = 667;\n     t['lcommaaccent'] = 278;\n     t['tcaron'] = 300;\n     t['eogonek'] = 444;\n     t['Uogonek'] = 722;\n     t['Aacute'] = 611;\n     t['Adieresis'] = 611;\n     t['egrave'] = 444;\n     t['zacute'] = 389;\n     t['iogonek'] = 278;\n     t['Oacute'] = 722;\n     t['oacute'] = 500;\n     t['amacron'] = 500;\n     t['sacute'] = 389;\n     t['idieresis'] = 278;\n     t['Ocircumflex'] = 722;\n     t['Ugrave'] = 722;\n     t['Delta'] = 612;\n     t['thorn'] = 500;\n     t['twosuperior'] = 300;\n     t['Odieresis'] = 722;\n     t['mu'] = 500;\n     t['igrave'] = 278;\n     t['ohungarumlaut'] = 500;\n     t['Eogonek'] = 611;\n     t['dcroat'] = 500;\n     t['threequarters'] = 750;\n     t['Scedilla'] = 500;\n     t['lcaron'] = 300;\n     t['Kcommaaccent'] = 667;\n     t['Lacute'] = 556;\n     t['trademark'] = 980;\n     t['edotaccent'] = 444;\n     t['Igrave'] = 333;\n     t['Imacron'] = 333;\n     t['Lcaron'] = 611;\n     t['onehalf'] = 750;\n     t['lessequal'] = 549;\n     t['ocircumflex'] = 500;\n     t['ntilde'] = 500;\n     t['Uhungarumlaut'] = 722;\n     t['Eacute'] = 611;\n     t['emacron'] = 444;\n     t['gbreve'] = 500;\n     t['onequarter'] = 750;\n     t['Scaron'] = 500;\n     t['Scommaaccent'] = 500;\n     t['Ohungarumlaut'] = 722;\n     t['degree'] = 400;\n     t['ograve'] = 500;\n     t['Ccaron'] = 667;\n     t['ugrave'] = 500;\n     t['radical'] = 453;\n     t['Dcaron'] = 722;\n     t['rcommaaccent'] = 389;\n     t['Ntilde'] = 667;\n     t['otilde'] = 500;\n     t['Rcommaaccent'] = 611;\n     t['Lcommaaccent'] = 556;\n     t['Atilde'] = 611;\n     t['Aogonek'] = 611;\n     t['Aring'] = 611;\n     t['Otilde'] = 722;\n     t['zdotaccent'] = 389;\n     t['Ecaron'] = 611;\n     t['Iogonek'] = 333;\n     t['kcommaaccent'] = 444;\n     t['minus'] = 675;\n     t['Icircumflex'] = 333;\n     t['ncaron'] = 500;\n     t['tcommaaccent'] = 278;\n     t['logicalnot'] = 675;\n     t['odieresis'] = 500;\n     t['udieresis'] = 500;\n     t['notequal'] = 549;\n     t['gcommaaccent'] = 500;\n     t['eth'] = 500;\n     t['zcaron'] = 389;\n     t['ncommaaccent'] = 500;\n     t['onesuperior'] = 300;\n     t['imacron'] = 278;\n     t['Euro'] = 500;\n    });\n    t['ZapfDingbats'] = getLookupTableFactory(function (t) {\n     t['space'] = 278;\n     t['a1'] = 974;\n     t['a2'] = 961;\n     t['a202'] = 974;\n     t['a3'] = 980;\n     t['a4'] = 719;\n     t['a5'] = 789;\n     t['a119'] = 790;\n     t['a118'] = 791;\n     t['a117'] = 690;\n     t['a11'] = 960;\n     t['a12'] = 939;\n     t['a13'] = 549;\n     t['a14'] = 855;\n     t['a15'] = 911;\n     t['a16'] = 933;\n     t['a105'] = 911;\n     t['a17'] = 945;\n     t['a18'] = 974;\n     t['a19'] = 755;\n     t['a20'] = 846;\n     t['a21'] = 762;\n     t['a22'] = 761;\n     t['a23'] = 571;\n     t['a24'] = 677;\n     t['a25'] = 763;\n     t['a26'] = 760;\n     t['a27'] = 759;\n     t['a28'] = 754;\n     t['a6'] = 494;\n     t['a7'] = 552;\n     t['a8'] = 537;\n     t['a9'] = 577;\n     t['a10'] = 692;\n     t['a29'] = 786;\n     t['a30'] = 788;\n     t['a31'] = 788;\n     t['a32'] = 790;\n     t['a33'] = 793;\n     t['a34'] = 794;\n     t['a35'] = 816;\n     t['a36'] = 823;\n     t['a37'] = 789;\n     t['a38'] = 841;\n     t['a39'] = 823;\n     t['a40'] = 833;\n     t['a41'] = 816;\n     t['a42'] = 831;\n     t['a43'] = 923;\n     t['a44'] = 744;\n     t['a45'] = 723;\n     t['a46'] = 749;\n     t['a47'] = 790;\n     t['a48'] = 792;\n     t['a49'] = 695;\n     t['a50'] = 776;\n     t['a51'] = 768;\n     t['a52'] = 792;\n     t['a53'] = 759;\n     t['a54'] = 707;\n     t['a55'] = 708;\n     t['a56'] = 682;\n     t['a57'] = 701;\n     t['a58'] = 826;\n     t['a59'] = 815;\n     t['a60'] = 789;\n     t['a61'] = 789;\n     t['a62'] = 707;\n     t['a63'] = 687;\n     t['a64'] = 696;\n     t['a65'] = 689;\n     t['a66'] = 786;\n     t['a67'] = 787;\n     t['a68'] = 713;\n     t['a69'] = 791;\n     t['a70'] = 785;\n     t['a71'] = 791;\n     t['a72'] = 873;\n     t['a73'] = 761;\n     t['a74'] = 762;\n     t['a203'] = 762;\n     t['a75'] = 759;\n     t['a204'] = 759;\n     t['a76'] = 892;\n     t['a77'] = 892;\n     t['a78'] = 788;\n     t['a79'] = 784;\n     t['a81'] = 438;\n     t['a82'] = 138;\n     t['a83'] = 277;\n     t['a84'] = 415;\n     t['a97'] = 392;\n     t['a98'] = 392;\n     t['a99'] = 668;\n     t['a100'] = 668;\n     t['a89'] = 390;\n     t['a90'] = 390;\n     t['a93'] = 317;\n     t['a94'] = 317;\n     t['a91'] = 276;\n     t['a92'] = 276;\n     t['a205'] = 509;\n     t['a85'] = 509;\n     t['a206'] = 410;\n     t['a86'] = 410;\n     t['a87'] = 234;\n     t['a88'] = 234;\n     t['a95'] = 334;\n     t['a96'] = 334;\n     t['a101'] = 732;\n     t['a102'] = 544;\n     t['a103'] = 544;\n     t['a104'] = 910;\n     t['a106'] = 667;\n     t['a107'] = 760;\n     t['a108'] = 760;\n     t['a112'] = 776;\n     t['a111'] = 595;\n     t['a110'] = 694;\n     t['a109'] = 626;\n     t['a120'] = 788;\n     t['a121'] = 788;\n     t['a122'] = 788;\n     t['a123'] = 788;\n     t['a124'] = 788;\n     t['a125'] = 788;\n     t['a126'] = 788;\n     t['a127'] = 788;\n     t['a128'] = 788;\n     t['a129'] = 788;\n     t['a130'] = 788;\n     t['a131'] = 788;\n     t['a132'] = 788;\n     t['a133'] = 788;\n     t['a134'] = 788;\n     t['a135'] = 788;\n     t['a136'] = 788;\n     t['a137'] = 788;\n     t['a138'] = 788;\n     t['a139'] = 788;\n     t['a140'] = 788;\n     t['a141'] = 788;\n     t['a142'] = 788;\n     t['a143'] = 788;\n     t['a144'] = 788;\n     t['a145'] = 788;\n     t['a146'] = 788;\n     t['a147'] = 788;\n     t['a148'] = 788;\n     t['a149'] = 788;\n     t['a150'] = 788;\n     t['a151'] = 788;\n     t['a152'] = 788;\n     t['a153'] = 788;\n     t['a154'] = 788;\n     t['a155'] = 788;\n     t['a156'] = 788;\n     t['a157'] = 788;\n     t['a158'] = 788;\n     t['a159'] = 788;\n     t['a160'] = 894;\n     t['a161'] = 838;\n     t['a163'] = 1016;\n     t['a164'] = 458;\n     t['a196'] = 748;\n     t['a165'] = 924;\n     t['a192'] = 748;\n     t['a166'] = 918;\n     t['a167'] = 927;\n     t['a168'] = 928;\n     t['a169'] = 928;\n     t['a170'] = 834;\n     t['a171'] = 873;\n     t['a172'] = 828;\n     t['a173'] = 924;\n     t['a162'] = 924;\n     t['a174'] = 917;\n     t['a175'] = 930;\n     t['a176'] = 931;\n     t['a177'] = 463;\n     t['a178'] = 883;\n     t['a179'] = 836;\n     t['a193'] = 836;\n     t['a180'] = 867;\n     t['a199'] = 867;\n     t['a181'] = 696;\n     t['a200'] = 696;\n     t['a182'] = 874;\n     t['a201'] = 874;\n     t['a183'] = 760;\n     t['a184'] = 946;\n     t['a197'] = 771;\n     t['a185'] = 865;\n     t['a194'] = 771;\n     t['a198'] = 888;\n     t['a186'] = 967;\n     t['a195'] = 888;\n     t['a187'] = 831;\n     t['a188'] = 873;\n     t['a189'] = 927;\n     t['a190'] = 970;\n     t['a191'] = 918;\n    });\n   });\n   exports.getMetrics = getMetrics;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsCoreMurmurHash3 = {}, root.pdfjsSharedUtil);\n  }(this, function (exports, sharedUtil) {\n   var Uint32ArrayView = sharedUtil.Uint32ArrayView;\n   var MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\n    var MASK_HIGH = 0xffff0000;\n    var MASK_LOW = 0xffff;\n    function MurmurHash3_64(seed) {\n     var SEED = 0xc3d2e1f0;\n     this.h1 = seed ? seed & 0xffffffff : SEED;\n     this.h2 = seed ? seed & 0xffffffff : SEED;\n    }\n    var alwaysUseUint32ArrayView = false;\n    try {\n     new Uint32Array(new Uint8Array(5).buffer, 0, 1);\n    } catch (e) {\n     alwaysUseUint32ArrayView = true;\n    }\n    MurmurHash3_64.prototype = {\n     update: function MurmurHash3_64_update(input) {\n      var useUint32ArrayView = alwaysUseUint32ArrayView;\n      var i;\n      if (typeof input === 'string') {\n       var data = new Uint8Array(input.length * 2);\n       var length = 0;\n       for (i = 0; i < input.length; i++) {\n        var code = input.charCodeAt(i);\n        if (code <= 0xff) {\n         data[length++] = code;\n        } else {\n         data[length++] = code >>> 8;\n         data[length++] = code & 0xff;\n        }\n       }\n      } else if (input instanceof Uint8Array) {\n       data = input;\n       length = data.length;\n      } else if (typeof input === 'object' && 'length' in input) {\n       data = input;\n       length = data.length;\n       useUint32ArrayView = true;\n      } else {\n       throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\n      }\n      var blockCounts = length >> 2;\n      var tailLength = length - blockCounts * 4;\n      var dataUint32 = useUint32ArrayView ? new Uint32ArrayView(data, blockCounts) : new Uint32Array(data.buffer, 0, blockCounts);\n      var k1 = 0;\n      var k2 = 0;\n      var h1 = this.h1;\n      var h2 = this.h2;\n      var C1 = 0xcc9e2d51;\n      var C2 = 0x1b873593;\n      var C1_LOW = C1 & MASK_LOW;\n      var C2_LOW = C2 & MASK_LOW;\n      for (i = 0; i < blockCounts; i++) {\n       if (i & 1) {\n        k1 = dataUint32[i];\n        k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n        k1 = k1 << 15 | k1 >>> 17;\n        k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n        h1 ^= k1;\n        h1 = h1 << 13 | h1 >>> 19;\n        h1 = h1 * 5 + 0xe6546b64;\n       } else {\n        k2 = dataUint32[i];\n        k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n        k2 = k2 << 15 | k2 >>> 17;\n        k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n        h2 ^= k2;\n        h2 = h2 << 13 | h2 >>> 19;\n        h2 = h2 * 5 + 0xe6546b64;\n       }\n      }\n      k1 = 0;\n      switch (tailLength) {\n      case 3:\n       k1 ^= data[blockCounts * 4 + 2] << 16;\n      case 2:\n       k1 ^= data[blockCounts * 4 + 1] << 8;\n      case 1:\n       k1 ^= data[blockCounts * 4];\n       k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n       k1 = k1 << 15 | k1 >>> 17;\n       k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n       if (blockCounts & 1) {\n        h1 ^= k1;\n       } else {\n        h2 ^= k1;\n       }\n      }\n      this.h1 = h1;\n      this.h2 = h2;\n      return this;\n     },\n     hexdigest: function MurmurHash3_64_hexdigest() {\n      var h1 = this.h1;\n      var h2 = this.h2;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n      h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n      h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      for (var i = 0, arr = [\n         h1,\n         h2\n        ], str = ''; i < arr.length; i++) {\n       var hex = (arr[i] >>> 0).toString(16);\n       while (hex.length < 8) {\n        hex = '0' + hex;\n       }\n       str += hex;\n      }\n      return str;\n     }\n    };\n    return MurmurHash3_64;\n   }();\n   exports.MurmurHash3_64 = MurmurHash3_64;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsCorePrimitives = {}, root.pdfjsSharedUtil);\n  }(this, function (exports, sharedUtil) {\n   var isArray = sharedUtil.isArray;\n   var EOF = {};\n   var Name = function NameClosure() {\n    function Name(name) {\n     this.name = name;\n    }\n    Name.prototype = {};\n    var nameCache = Object.create(null);\n    Name.get = function Name_get(name) {\n     var nameValue = nameCache[name];\n     return nameValue ? nameValue : nameCache[name] = new Name(name);\n    };\n    return Name;\n   }();\n   var Cmd = function CmdClosure() {\n    function Cmd(cmd) {\n     this.cmd = cmd;\n    }\n    Cmd.prototype = {};\n    var cmdCache = Object.create(null);\n    Cmd.get = function Cmd_get(cmd) {\n     var cmdValue = cmdCache[cmd];\n     return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n    };\n    return Cmd;\n   }();\n   var Dict = function DictClosure() {\n    var nonSerializable = function nonSerializableClosure() {\n     return nonSerializable;\n    };\n    function Dict(xref) {\n     this.map = Object.create(null);\n     this.xref = xref;\n     this.objId = null;\n     this.suppressEncryption = false;\n     this.__nonSerializable__ = nonSerializable;\n    }\n    Dict.prototype = {\n     assignXref: function Dict_assignXref(newXref) {\n      this.xref = newXref;\n     },\n     get: function Dict_get(key1, key2, key3) {\n      var value;\n      var xref = this.xref, suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this.map[key1]) !== 'undefined' || key1 in this.map || typeof key2 === 'undefined') {\n       return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      if (typeof (value = this.map[key2]) !== 'undefined' || key2 in this.map || typeof key3 === 'undefined') {\n       return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      value = this.map[key3] || null;\n      return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n     },\n     getAsync: function Dict_getAsync(key1, key2, key3) {\n      var value;\n      var xref = this.xref, suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this.map[key1]) !== 'undefined' || key1 in this.map || typeof key2 === 'undefined') {\n       if (xref) {\n        return xref.fetchIfRefAsync(value, suppressEncryption);\n       }\n       return Promise.resolve(value);\n      }\n      if (typeof (value = this.map[key2]) !== 'undefined' || key2 in this.map || typeof key3 === 'undefined') {\n       if (xref) {\n        return xref.fetchIfRefAsync(value, suppressEncryption);\n       }\n       return Promise.resolve(value);\n      }\n      value = this.map[key3] || null;\n      if (xref) {\n       return xref.fetchIfRefAsync(value, suppressEncryption);\n      }\n      return Promise.resolve(value);\n     },\n     getArray: function Dict_getArray(key1, key2, key3) {\n      var value = this.get(key1, key2, key3);\n      var xref = this.xref, suppressEncryption = this.suppressEncryption;\n      if (!isArray(value) || !xref) {\n       return value;\n      }\n      value = value.slice();\n      for (var i = 0, ii = value.length; i < ii; i++) {\n       if (!isRef(value[i])) {\n        continue;\n       }\n       value[i] = xref.fetch(value[i], suppressEncryption);\n      }\n      return value;\n     },\n     getRaw: function Dict_getRaw(key) {\n      return this.map[key];\n     },\n     getKeys: function Dict_getKeys() {\n      return Object.keys(this.map);\n     },\n     set: function Dict_set(key, value) {\n      this.map[key] = value;\n     },\n     has: function Dict_has(key) {\n      return key in this.map;\n     },\n     forEach: function Dict_forEach(callback) {\n      for (var key in this.map) {\n       callback(key, this.get(key));\n      }\n     }\n    };\n    Dict.empty = new Dict(null);\n    Dict.merge = function Dict_merge(xref, dictArray) {\n     var mergedDict = new Dict(xref);\n     for (var i = 0, ii = dictArray.length; i < ii; i++) {\n      var dict = dictArray[i];\n      if (!isDict(dict)) {\n       continue;\n      }\n      for (var keyName in dict.map) {\n       if (mergedDict.map[keyName]) {\n        continue;\n       }\n       mergedDict.map[keyName] = dict.map[keyName];\n      }\n     }\n     return mergedDict;\n    };\n    return Dict;\n   }();\n   var Ref = function RefClosure() {\n    function Ref(num, gen) {\n     this.num = num;\n     this.gen = gen;\n    }\n    Ref.prototype = {\n     toString: function Ref_toString() {\n      var str = this.num + 'R';\n      if (this.gen !== 0) {\n       str += this.gen;\n      }\n      return str;\n     }\n    };\n    return Ref;\n   }();\n   var RefSet = function RefSetClosure() {\n    function RefSet() {\n     this.dict = Object.create(null);\n    }\n    RefSet.prototype = {\n     has: function RefSet_has(ref) {\n      return ref.toString() in this.dict;\n     },\n     put: function RefSet_put(ref) {\n      this.dict[ref.toString()] = true;\n     },\n     remove: function RefSet_remove(ref) {\n      delete this.dict[ref.toString()];\n     }\n    };\n    return RefSet;\n   }();\n   var RefSetCache = function RefSetCacheClosure() {\n    function RefSetCache() {\n     this.dict = Object.create(null);\n    }\n    RefSetCache.prototype = {\n     get: function RefSetCache_get(ref) {\n      return this.dict[ref.toString()];\n     },\n     has: function RefSetCache_has(ref) {\n      return ref.toString() in this.dict;\n     },\n     put: function RefSetCache_put(ref, obj) {\n      this.dict[ref.toString()] = obj;\n     },\n     putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n      this.dict[ref.toString()] = this.get(aliasRef);\n     },\n     forEach: function RefSetCache_forEach(fn, thisArg) {\n      for (var i in this.dict) {\n       fn.call(thisArg, this.dict[i]);\n      }\n     },\n     clear: function RefSetCache_clear() {\n      this.dict = Object.create(null);\n     }\n    };\n    return RefSetCache;\n   }();\n   function isEOF(v) {\n    return v === EOF;\n   }\n   function isName(v, name) {\n    return v instanceof Name && (name === undefined || v.name === name);\n   }\n   function isCmd(v, cmd) {\n    return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n   }\n   function isDict(v, type) {\n    return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\n   }\n   function isRef(v) {\n    return v instanceof Ref;\n   }\n   function isRefsEqual(v1, v2) {\n    return v1.num === v2.num && v1.gen === v2.gen;\n   }\n   function isStream(v) {\n    return typeof v === 'object' && v !== null && v.getBytes !== undefined;\n   }\n   exports.EOF = EOF;\n   exports.Cmd = Cmd;\n   exports.Dict = Dict;\n   exports.Name = Name;\n   exports.Ref = Ref;\n   exports.RefSet = RefSet;\n   exports.RefSetCache = RefSetCache;\n   exports.isEOF = isEOF;\n   exports.isCmd = isCmd;\n   exports.isDict = isDict;\n   exports.isName = isName;\n   exports.isRef = isRef;\n   exports.isRefsEqual = isRefsEqual;\n   exports.isStream = isStream;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsCoreStandardFonts = {}, root.pdfjsSharedUtil);\n  }(this, function (exports, sharedUtil) {\n   var getLookupTableFactory = sharedUtil.getLookupTableFactory;\n   var getStdFontMap = getLookupTableFactory(function (t) {\n    t['ArialNarrow'] = 'Helvetica';\n    t['ArialNarrow-Bold'] = 'Helvetica-Bold';\n    t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\n    t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\n    t['ArialBlack'] = 'Helvetica';\n    t['ArialBlack-Bold'] = 'Helvetica-Bold';\n    t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\n    t['ArialBlack-Italic'] = 'Helvetica-Oblique';\n    t['Arial-Black'] = 'Helvetica';\n    t['Arial-Black-Bold'] = 'Helvetica-Bold';\n    t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\n    t['Arial-Black-Italic'] = 'Helvetica-Oblique';\n    t['Arial'] = 'Helvetica';\n    t['Arial-Bold'] = 'Helvetica-Bold';\n    t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\n    t['Arial-Italic'] = 'Helvetica-Oblique';\n    t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\n    t['Arial-BoldMT'] = 'Helvetica-Bold';\n    t['Arial-ItalicMT'] = 'Helvetica-Oblique';\n    t['ArialMT'] = 'Helvetica';\n    t['Courier-Bold'] = 'Courier-Bold';\n    t['Courier-BoldItalic'] = 'Courier-BoldOblique';\n    t['Courier-Italic'] = 'Courier-Oblique';\n    t['CourierNew'] = 'Courier';\n    t['CourierNew-Bold'] = 'Courier-Bold';\n    t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\n    t['CourierNew-Italic'] = 'Courier-Oblique';\n    t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\n    t['CourierNewPS-BoldMT'] = 'Courier-Bold';\n    t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\n    t['CourierNewPSMT'] = 'Courier';\n    t['Helvetica'] = 'Helvetica';\n    t['Helvetica-Bold'] = 'Helvetica-Bold';\n    t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\n    t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\n    t['Helvetica-Italic'] = 'Helvetica-Oblique';\n    t['Helvetica-Oblique'] = 'Helvetica-Oblique';\n    t['Symbol-Bold'] = 'Symbol';\n    t['Symbol-BoldItalic'] = 'Symbol';\n    t['Symbol-Italic'] = 'Symbol';\n    t['TimesNewRoman'] = 'Times-Roman';\n    t['TimesNewRoman-Bold'] = 'Times-Bold';\n    t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\n    t['TimesNewRoman-Italic'] = 'Times-Italic';\n    t['TimesNewRomanPS'] = 'Times-Roman';\n    t['TimesNewRomanPS-Bold'] = 'Times-Bold';\n    t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\n    t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\n    t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\n    t['TimesNewRomanPS-Italic'] = 'Times-Italic';\n    t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\n    t['TimesNewRomanPSMT'] = 'Times-Roman';\n    t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\n    t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\n    t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\n   });\n   var getNonStdFontMap = getLookupTableFactory(function (t) {\n    t['CenturyGothic'] = 'Helvetica';\n    t['CenturyGothic-Bold'] = 'Helvetica-Bold';\n    t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\n    t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\n    t['ComicSansMS'] = 'Comic Sans MS';\n    t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\n    t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\n    t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\n    t['LucidaConsole'] = 'Courier';\n    t['LucidaConsole-Bold'] = 'Courier-Bold';\n    t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\n    t['LucidaConsole-Italic'] = 'Courier-Oblique';\n    t['MS-Gothic'] = 'MS Gothic';\n    t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\n    t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\n    t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\n    t['MS-Mincho'] = 'MS Mincho';\n    t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\n    t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\n    t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\n    t['MS-PGothic'] = 'MS PGothic';\n    t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\n    t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\n    t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\n    t['MS-PMincho'] = 'MS PMincho';\n    t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\n    t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\n    t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\n    t['NuptialScript'] = 'Times-Italic';\n    t['Wingdings'] = 'ZapfDingbats';\n   });\n   var getSerifFonts = getLookupTableFactory(function (t) {\n    t['Adobe Jenson'] = true;\n    t['Adobe Text'] = true;\n    t['Albertus'] = true;\n    t['Aldus'] = true;\n    t['Alexandria'] = true;\n    t['Algerian'] = true;\n    t['American Typewriter'] = true;\n    t['Antiqua'] = true;\n    t['Apex'] = true;\n    t['Arno'] = true;\n    t['Aster'] = true;\n    t['Aurora'] = true;\n    t['Baskerville'] = true;\n    t['Bell'] = true;\n    t['Bembo'] = true;\n    t['Bembo Schoolbook'] = true;\n    t['Benguiat'] = true;\n    t['Berkeley Old Style'] = true;\n    t['Bernhard Modern'] = true;\n    t['Berthold City'] = true;\n    t['Bodoni'] = true;\n    t['Bauer Bodoni'] = true;\n    t['Book Antiqua'] = true;\n    t['Bookman'] = true;\n    t['Bordeaux Roman'] = true;\n    t['Californian FB'] = true;\n    t['Calisto'] = true;\n    t['Calvert'] = true;\n    t['Capitals'] = true;\n    t['Cambria'] = true;\n    t['Cartier'] = true;\n    t['Caslon'] = true;\n    t['Catull'] = true;\n    t['Centaur'] = true;\n    t['Century Old Style'] = true;\n    t['Century Schoolbook'] = true;\n    t['Chaparral'] = true;\n    t['Charis SIL'] = true;\n    t['Cheltenham'] = true;\n    t['Cholla Slab'] = true;\n    t['Clarendon'] = true;\n    t['Clearface'] = true;\n    t['Cochin'] = true;\n    t['Colonna'] = true;\n    t['Computer Modern'] = true;\n    t['Concrete Roman'] = true;\n    t['Constantia'] = true;\n    t['Cooper Black'] = true;\n    t['Corona'] = true;\n    t['Ecotype'] = true;\n    t['Egyptienne'] = true;\n    t['Elephant'] = true;\n    t['Excelsior'] = true;\n    t['Fairfield'] = true;\n    t['FF Scala'] = true;\n    t['Folkard'] = true;\n    t['Footlight'] = true;\n    t['FreeSerif'] = true;\n    t['Friz Quadrata'] = true;\n    t['Garamond'] = true;\n    t['Gentium'] = true;\n    t['Georgia'] = true;\n    t['Gloucester'] = true;\n    t['Goudy Old Style'] = true;\n    t['Goudy Schoolbook'] = true;\n    t['Goudy Pro Font'] = true;\n    t['Granjon'] = true;\n    t['Guardian Egyptian'] = true;\n    t['Heather'] = true;\n    t['Hercules'] = true;\n    t['High Tower Text'] = true;\n    t['Hiroshige'] = true;\n    t['Hoefler Text'] = true;\n    t['Humana Serif'] = true;\n    t['Imprint'] = true;\n    t['Ionic No. 5'] = true;\n    t['Janson'] = true;\n    t['Joanna'] = true;\n    t['Korinna'] = true;\n    t['Lexicon'] = true;\n    t['Liberation Serif'] = true;\n    t['Linux Libertine'] = true;\n    t['Literaturnaya'] = true;\n    t['Lucida'] = true;\n    t['Lucida Bright'] = true;\n    t['Melior'] = true;\n    t['Memphis'] = true;\n    t['Miller'] = true;\n    t['Minion'] = true;\n    t['Modern'] = true;\n    t['Mona Lisa'] = true;\n    t['Mrs Eaves'] = true;\n    t['MS Serif'] = true;\n    t['Museo Slab'] = true;\n    t['New York'] = true;\n    t['Nimbus Roman'] = true;\n    t['NPS Rawlinson Roadway'] = true;\n    t['NuptialScript'] = true;\n    t['Palatino'] = true;\n    t['Perpetua'] = true;\n    t['Plantin'] = true;\n    t['Plantin Schoolbook'] = true;\n    t['Playbill'] = true;\n    t['Poor Richard'] = true;\n    t['Rawlinson Roadway'] = true;\n    t['Renault'] = true;\n    t['Requiem'] = true;\n    t['Rockwell'] = true;\n    t['Roman'] = true;\n    t['Rotis Serif'] = true;\n    t['Sabon'] = true;\n    t['Scala'] = true;\n    t['Seagull'] = true;\n    t['Sistina'] = true;\n    t['Souvenir'] = true;\n    t['STIX'] = true;\n    t['Stone Informal'] = true;\n    t['Stone Serif'] = true;\n    t['Sylfaen'] = true;\n    t['Times'] = true;\n    t['Trajan'] = true;\n    t['Trinité'] = true;\n    t['Trump Mediaeval'] = true;\n    t['Utopia'] = true;\n    t['Vale Type'] = true;\n    t['Bitstream Vera'] = true;\n    t['Vera Serif'] = true;\n    t['Versailles'] = true;\n    t['Wanted'] = true;\n    t['Weiss'] = true;\n    t['Wide Latin'] = true;\n    t['Windsor'] = true;\n    t['XITS'] = true;\n   });\n   var getSymbolsFonts = getLookupTableFactory(function (t) {\n    t['Dingbats'] = true;\n    t['Symbol'] = true;\n    t['ZapfDingbats'] = true;\n   });\n   var getGlyphMapForStandardFonts = getLookupTableFactory(function (t) {\n    t[2] = 10;\n    t[3] = 32;\n    t[4] = 33;\n    t[5] = 34;\n    t[6] = 35;\n    t[7] = 36;\n    t[8] = 37;\n    t[9] = 38;\n    t[10] = 39;\n    t[11] = 40;\n    t[12] = 41;\n    t[13] = 42;\n    t[14] = 43;\n    t[15] = 44;\n    t[16] = 45;\n    t[17] = 46;\n    t[18] = 47;\n    t[19] = 48;\n    t[20] = 49;\n    t[21] = 50;\n    t[22] = 51;\n    t[23] = 52;\n    t[24] = 53;\n    t[25] = 54;\n    t[26] = 55;\n    t[27] = 56;\n    t[28] = 57;\n    t[29] = 58;\n    t[30] = 894;\n    t[31] = 60;\n    t[32] = 61;\n    t[33] = 62;\n    t[34] = 63;\n    t[35] = 64;\n    t[36] = 65;\n    t[37] = 66;\n    t[38] = 67;\n    t[39] = 68;\n    t[40] = 69;\n    t[41] = 70;\n    t[42] = 71;\n    t[43] = 72;\n    t[44] = 73;\n    t[45] = 74;\n    t[46] = 75;\n    t[47] = 76;\n    t[48] = 77;\n    t[49] = 78;\n    t[50] = 79;\n    t[51] = 80;\n    t[52] = 81;\n    t[53] = 82;\n    t[54] = 83;\n    t[55] = 84;\n    t[56] = 85;\n    t[57] = 86;\n    t[58] = 87;\n    t[59] = 88;\n    t[60] = 89;\n    t[61] = 90;\n    t[62] = 91;\n    t[63] = 92;\n    t[64] = 93;\n    t[65] = 94;\n    t[66] = 95;\n    t[67] = 96;\n    t[68] = 97;\n    t[69] = 98;\n    t[70] = 99;\n    t[71] = 100;\n    t[72] = 101;\n    t[73] = 102;\n    t[74] = 103;\n    t[75] = 104;\n    t[76] = 105;\n    t[77] = 106;\n    t[78] = 107;\n    t[79] = 108;\n    t[80] = 109;\n    t[81] = 110;\n    t[82] = 111;\n    t[83] = 112;\n    t[84] = 113;\n    t[85] = 114;\n    t[86] = 115;\n    t[87] = 116;\n    t[88] = 117;\n    t[89] = 118;\n    t[90] = 119;\n    t[91] = 120;\n    t[92] = 121;\n    t[93] = 122;\n    t[94] = 123;\n    t[95] = 124;\n    t[96] = 125;\n    t[97] = 126;\n    t[98] = 196;\n    t[99] = 197;\n    t[100] = 199;\n    t[101] = 201;\n    t[102] = 209;\n    t[103] = 214;\n    t[104] = 220;\n    t[105] = 225;\n    t[106] = 224;\n    t[107] = 226;\n    t[108] = 228;\n    t[109] = 227;\n    t[110] = 229;\n    t[111] = 231;\n    t[112] = 233;\n    t[113] = 232;\n    t[114] = 234;\n    t[115] = 235;\n    t[116] = 237;\n    t[117] = 236;\n    t[118] = 238;\n    t[119] = 239;\n    t[120] = 241;\n    t[121] = 243;\n    t[122] = 242;\n    t[123] = 244;\n    t[124] = 246;\n    t[125] = 245;\n    t[126] = 250;\n    t[127] = 249;\n    t[128] = 251;\n    t[129] = 252;\n    t[130] = 8224;\n    t[131] = 176;\n    t[132] = 162;\n    t[133] = 163;\n    t[134] = 167;\n    t[135] = 8226;\n    t[136] = 182;\n    t[137] = 223;\n    t[138] = 174;\n    t[139] = 169;\n    t[140] = 8482;\n    t[141] = 180;\n    t[142] = 168;\n    t[143] = 8800;\n    t[144] = 198;\n    t[145] = 216;\n    t[146] = 8734;\n    t[147] = 177;\n    t[148] = 8804;\n    t[149] = 8805;\n    t[150] = 165;\n    t[151] = 181;\n    t[152] = 8706;\n    t[153] = 8721;\n    t[154] = 8719;\n    t[156] = 8747;\n    t[157] = 170;\n    t[158] = 186;\n    t[159] = 8486;\n    t[160] = 230;\n    t[161] = 248;\n    t[162] = 191;\n    t[163] = 161;\n    t[164] = 172;\n    t[165] = 8730;\n    t[166] = 402;\n    t[167] = 8776;\n    t[168] = 8710;\n    t[169] = 171;\n    t[170] = 187;\n    t[171] = 8230;\n    t[210] = 218;\n    t[223] = 711;\n    t[224] = 321;\n    t[225] = 322;\n    t[227] = 353;\n    t[229] = 382;\n    t[234] = 253;\n    t[252] = 263;\n    t[253] = 268;\n    t[254] = 269;\n    t[258] = 258;\n    t[260] = 260;\n    t[261] = 261;\n    t[265] = 280;\n    t[266] = 281;\n    t[268] = 283;\n    t[269] = 313;\n    t[275] = 323;\n    t[276] = 324;\n    t[278] = 328;\n    t[284] = 345;\n    t[285] = 346;\n    t[286] = 347;\n    t[292] = 367;\n    t[295] = 377;\n    t[296] = 378;\n    t[298] = 380;\n    t[305] = 963;\n    t[306] = 964;\n    t[307] = 966;\n    t[308] = 8215;\n    t[309] = 8252;\n    t[310] = 8319;\n    t[311] = 8359;\n    t[312] = 8592;\n    t[313] = 8593;\n    t[337] = 9552;\n    t[493] = 1039;\n    t[494] = 1040;\n    t[705] = 1524;\n    t[706] = 8362;\n    t[710] = 64288;\n    t[711] = 64298;\n    t[759] = 1617;\n    t[761] = 1776;\n    t[763] = 1778;\n    t[775] = 1652;\n    t[777] = 1764;\n    t[778] = 1780;\n    t[779] = 1781;\n    t[780] = 1782;\n    t[782] = 771;\n    t[783] = 64726;\n    t[786] = 8363;\n    t[788] = 8532;\n    t[790] = 768;\n    t[791] = 769;\n    t[792] = 768;\n    t[795] = 803;\n    t[797] = 64336;\n    t[798] = 64337;\n    t[799] = 64342;\n    t[800] = 64343;\n    t[801] = 64344;\n    t[802] = 64345;\n    t[803] = 64362;\n    t[804] = 64363;\n    t[805] = 64364;\n    t[2424] = 7821;\n    t[2425] = 7822;\n    t[2426] = 7823;\n    t[2427] = 7824;\n    t[2428] = 7825;\n    t[2429] = 7826;\n    t[2430] = 7827;\n    t[2433] = 7682;\n    t[2678] = 8045;\n    t[2679] = 8046;\n    t[2830] = 1552;\n    t[2838] = 686;\n    t[2840] = 751;\n    t[2842] = 753;\n    t[2843] = 754;\n    t[2844] = 755;\n    t[2846] = 757;\n    t[2856] = 767;\n    t[2857] = 848;\n    t[2858] = 849;\n    t[2862] = 853;\n    t[2863] = 854;\n    t[2864] = 855;\n    t[2865] = 861;\n    t[2866] = 862;\n    t[2906] = 7460;\n    t[2908] = 7462;\n    t[2909] = 7463;\n    t[2910] = 7464;\n    t[2912] = 7466;\n    t[2913] = 7467;\n    t[2914] = 7468;\n    t[2916] = 7470;\n    t[2917] = 7471;\n    t[2918] = 7472;\n    t[2920] = 7474;\n    t[2921] = 7475;\n    t[2922] = 7476;\n    t[2924] = 7478;\n    t[2925] = 7479;\n    t[2926] = 7480;\n    t[2928] = 7482;\n    t[2929] = 7483;\n    t[2930] = 7484;\n    t[2932] = 7486;\n    t[2933] = 7487;\n    t[2934] = 7488;\n    t[2936] = 7490;\n    t[2937] = 7491;\n    t[2938] = 7492;\n    t[2940] = 7494;\n    t[2941] = 7495;\n    t[2942] = 7496;\n    t[2944] = 7498;\n    t[2946] = 7500;\n    t[2948] = 7502;\n    t[2950] = 7504;\n    t[2951] = 7505;\n    t[2952] = 7506;\n    t[2954] = 7508;\n    t[2955] = 7509;\n    t[2956] = 7510;\n    t[2958] = 7512;\n    t[2959] = 7513;\n    t[2960] = 7514;\n    t[2962] = 7516;\n    t[2963] = 7517;\n    t[2964] = 7518;\n    t[2966] = 7520;\n    t[2967] = 7521;\n    t[2968] = 7522;\n    t[2970] = 7524;\n    t[2971] = 7525;\n    t[2972] = 7526;\n    t[2974] = 7528;\n    t[2975] = 7529;\n    t[2976] = 7530;\n    t[2978] = 1537;\n    t[2979] = 1538;\n    t[2980] = 1539;\n    t[2982] = 1549;\n    t[2983] = 1551;\n    t[2984] = 1552;\n    t[2986] = 1554;\n    t[2987] = 1555;\n    t[2988] = 1556;\n    t[2990] = 1623;\n    t[2991] = 1624;\n    t[2995] = 1775;\n    t[2999] = 1791;\n    t[3002] = 64290;\n    t[3003] = 64291;\n    t[3004] = 64292;\n    t[3006] = 64294;\n    t[3007] = 64295;\n    t[3008] = 64296;\n    t[3011] = 1900;\n    t[3014] = 8223;\n    t[3015] = 8244;\n    t[3017] = 7532;\n    t[3018] = 7533;\n    t[3019] = 7534;\n    t[3075] = 7590;\n    t[3076] = 7591;\n    t[3079] = 7594;\n    t[3080] = 7595;\n    t[3083] = 7598;\n    t[3084] = 7599;\n    t[3087] = 7602;\n    t[3088] = 7603;\n    t[3091] = 7606;\n    t[3092] = 7607;\n    t[3095] = 7610;\n    t[3096] = 7611;\n    t[3099] = 7614;\n    t[3100] = 7615;\n    t[3103] = 7618;\n    t[3104] = 7619;\n    t[3107] = 8337;\n    t[3108] = 8338;\n    t[3116] = 1884;\n    t[3119] = 1885;\n    t[3120] = 1885;\n    t[3123] = 1886;\n    t[3124] = 1886;\n    t[3127] = 1887;\n    t[3128] = 1887;\n    t[3131] = 1888;\n    t[3132] = 1888;\n    t[3135] = 1889;\n    t[3136] = 1889;\n    t[3139] = 1890;\n    t[3140] = 1890;\n    t[3143] = 1891;\n    t[3144] = 1891;\n    t[3147] = 1892;\n    t[3148] = 1892;\n    t[3153] = 580;\n    t[3154] = 581;\n    t[3157] = 584;\n    t[3158] = 585;\n    t[3161] = 588;\n    t[3162] = 589;\n    t[3165] = 891;\n    t[3166] = 892;\n    t[3169] = 1274;\n    t[3170] = 1275;\n    t[3173] = 1278;\n    t[3174] = 1279;\n    t[3181] = 7622;\n    t[3182] = 7623;\n    t[3282] = 11799;\n    t[3316] = 578;\n    t[3379] = 42785;\n    t[3393] = 1159;\n    t[3416] = 8377;\n   });\n   var getSupplementalGlyphMapForArialBlack = getLookupTableFactory(function (t) {\n    t[227] = 322;\n    t[264] = 261;\n    t[291] = 346;\n   });\n   exports.getStdFontMap = getStdFontMap;\n   exports.getNonStdFontMap = getNonStdFontMap;\n   exports.getSerifFonts = getSerifFonts;\n   exports.getSymbolsFonts = getSymbolsFonts;\n   exports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\n   exports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsCoreUnicode = {}, root.pdfjsSharedUtil);\n  }(this, function (exports, sharedUtil) {\n   var getLookupTableFactory = sharedUtil.getLookupTableFactory;\n   var getSpecialPUASymbols = getLookupTableFactory(function (t) {\n    t[63721] = 0x00A9;\n    t[63193] = 0x00A9;\n    t[63720] = 0x00AE;\n    t[63194] = 0x00AE;\n    t[63722] = 0x2122;\n    t[63195] = 0x2122;\n    t[63729] = 0x23A7;\n    t[63730] = 0x23A8;\n    t[63731] = 0x23A9;\n    t[63740] = 0x23AB;\n    t[63741] = 0x23AC;\n    t[63742] = 0x23AD;\n    t[63726] = 0x23A1;\n    t[63727] = 0x23A2;\n    t[63728] = 0x23A3;\n    t[63737] = 0x23A4;\n    t[63738] = 0x23A5;\n    t[63739] = 0x23A6;\n    t[63723] = 0x239B;\n    t[63724] = 0x239C;\n    t[63725] = 0x239D;\n    t[63734] = 0x239E;\n    t[63735] = 0x239F;\n    t[63736] = 0x23A0;\n   });\n   function mapSpecialUnicodeValues(code) {\n    if (code >= 0xFFF0 && code <= 0xFFFF) {\n     return 0;\n    } else if (code >= 0xF600 && code <= 0xF8FF) {\n     return getSpecialPUASymbols()[code] || code;\n    }\n    return code;\n   }\n   function getUnicodeForGlyph(name, glyphsUnicodeMap) {\n    var unicode = glyphsUnicodeMap[name];\n    if (unicode !== undefined) {\n     return unicode;\n    }\n    if (!name) {\n     return -1;\n    }\n    if (name[0] === 'u') {\n     var nameLen = name.length, hexStr;\n     if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\n      hexStr = name.substr(3);\n     } else if (nameLen >= 5 && nameLen <= 7) {\n      hexStr = name.substr(1);\n     } else {\n      return -1;\n     }\n     if (hexStr === hexStr.toUpperCase()) {\n      unicode = parseInt(hexStr, 16);\n      if (unicode >= 0) {\n       return unicode;\n      }\n     }\n    }\n    return -1;\n   }\n   var UnicodeRanges = [\n    {\n     'begin': 0x0000,\n     'end': 0x007F\n    },\n    {\n     'begin': 0x0080,\n     'end': 0x00FF\n    },\n    {\n     'begin': 0x0100,\n     'end': 0x017F\n    },\n    {\n     'begin': 0x0180,\n     'end': 0x024F\n    },\n    {\n     'begin': 0x0250,\n     'end': 0x02AF\n    },\n    {\n     'begin': 0x02B0,\n     'end': 0x02FF\n    },\n    {\n     'begin': 0x0300,\n     'end': 0x036F\n    },\n    {\n     'begin': 0x0370,\n     'end': 0x03FF\n    },\n    {\n     'begin': 0x2C80,\n     'end': 0x2CFF\n    },\n    {\n     'begin': 0x0400,\n     'end': 0x04FF\n    },\n    {\n     'begin': 0x0530,\n     'end': 0x058F\n    },\n    {\n     'begin': 0x0590,\n     'end': 0x05FF\n    },\n    {\n     'begin': 0xA500,\n     'end': 0xA63F\n    },\n    {\n     'begin': 0x0600,\n     'end': 0x06FF\n    },\n    {\n     'begin': 0x07C0,\n     'end': 0x07FF\n    },\n    {\n     'begin': 0x0900,\n     'end': 0x097F\n    },\n    {\n     'begin': 0x0980,\n     'end': 0x09FF\n    },\n    {\n     'begin': 0x0A00,\n     'end': 0x0A7F\n    },\n    {\n     'begin': 0x0A80,\n     'end': 0x0AFF\n    },\n    {\n     'begin': 0x0B00,\n     'end': 0x0B7F\n    },\n    {\n     'begin': 0x0B80,\n     'end': 0x0BFF\n    },\n    {\n     'begin': 0x0C00,\n     'end': 0x0C7F\n    },\n    {\n     'begin': 0x0C80,\n     'end': 0x0CFF\n    },\n    {\n     'begin': 0x0D00,\n     'end': 0x0D7F\n    },\n    {\n     'begin': 0x0E00,\n     'end': 0x0E7F\n    },\n    {\n     'begin': 0x0E80,\n     'end': 0x0EFF\n    },\n    {\n     'begin': 0x10A0,\n     'end': 0x10FF\n    },\n    {\n     'begin': 0x1B00,\n     'end': 0x1B7F\n    },\n    {\n     'begin': 0x1100,\n     'end': 0x11FF\n    },\n    {\n     'begin': 0x1E00,\n     'end': 0x1EFF\n    },\n    {\n     'begin': 0x1F00,\n     'end': 0x1FFF\n    },\n    {\n     'begin': 0x2000,\n     'end': 0x206F\n    },\n    {\n     'begin': 0x2070,\n     'end': 0x209F\n    },\n    {\n     'begin': 0x20A0,\n     'end': 0x20CF\n    },\n    {\n     'begin': 0x20D0,\n     'end': 0x20FF\n    },\n    {\n     'begin': 0x2100,\n     'end': 0x214F\n    },\n    {\n     'begin': 0x2150,\n     'end': 0x218F\n    },\n    {\n     'begin': 0x2190,\n     'end': 0x21FF\n    },\n    {\n     'begin': 0x2200,\n     'end': 0x22FF\n    },\n    {\n     'begin': 0x2300,\n     'end': 0x23FF\n    },\n    {\n     'begin': 0x2400,\n     'end': 0x243F\n    },\n    {\n     'begin': 0x2440,\n     'end': 0x245F\n    },\n    {\n     'begin': 0x2460,\n     'end': 0x24FF\n    },\n    {\n     'begin': 0x2500,\n     'end': 0x257F\n    },\n    {\n     'begin': 0x2580,\n     'end': 0x259F\n    },\n    {\n     'begin': 0x25A0,\n     'end': 0x25FF\n    },\n    {\n     'begin': 0x2600,\n     'end': 0x26FF\n    },\n    {\n     'begin': 0x2700,\n     'end': 0x27BF\n    },\n    {\n     'begin': 0x3000,\n     'end': 0x303F\n    },\n    {\n     'begin': 0x3040,\n     'end': 0x309F\n    },\n    {\n     'begin': 0x30A0,\n     'end': 0x30FF\n    },\n    {\n     'begin': 0x3100,\n     'end': 0x312F\n    },\n    {\n     'begin': 0x3130,\n     'end': 0x318F\n    },\n    {\n     'begin': 0xA840,\n     'end': 0xA87F\n    },\n    {\n     'begin': 0x3200,\n     'end': 0x32FF\n    },\n    {\n     'begin': 0x3300,\n     'end': 0x33FF\n    },\n    {\n     'begin': 0xAC00,\n     'end': 0xD7AF\n    },\n    {\n     'begin': 0xD800,\n     'end': 0xDFFF\n    },\n    {\n     'begin': 0x10900,\n     'end': 0x1091F\n    },\n    {\n     'begin': 0x4E00,\n     'end': 0x9FFF\n    },\n    {\n     'begin': 0xE000,\n     'end': 0xF8FF\n    },\n    {\n     'begin': 0x31C0,\n     'end': 0x31EF\n    },\n    {\n     'begin': 0xFB00,\n     'end': 0xFB4F\n    },\n    {\n     'begin': 0xFB50,\n     'end': 0xFDFF\n    },\n    {\n     'begin': 0xFE20,\n     'end': 0xFE2F\n    },\n    {\n     'begin': 0xFE10,\n     'end': 0xFE1F\n    },\n    {\n     'begin': 0xFE50,\n     'end': 0xFE6F\n    },\n    {\n     'begin': 0xFE70,\n     'end': 0xFEFF\n    },\n    {\n     'begin': 0xFF00,\n     'end': 0xFFEF\n    },\n    {\n     'begin': 0xFFF0,\n     'end': 0xFFFF\n    },\n    {\n     'begin': 0x0F00,\n     'end': 0x0FFF\n    },\n    {\n     'begin': 0x0700,\n     'end': 0x074F\n    },\n    {\n     'begin': 0x0780,\n     'end': 0x07BF\n    },\n    {\n     'begin': 0x0D80,\n     'end': 0x0DFF\n    },\n    {\n     'begin': 0x1000,\n     'end': 0x109F\n    },\n    {\n     'begin': 0x1200,\n     'end': 0x137F\n    },\n    {\n     'begin': 0x13A0,\n     'end': 0x13FF\n    },\n    {\n     'begin': 0x1400,\n     'end': 0x167F\n    },\n    {\n     'begin': 0x1680,\n     'end': 0x169F\n    },\n    {\n     'begin': 0x16A0,\n     'end': 0x16FF\n    },\n    {\n     'begin': 0x1780,\n     'end': 0x17FF\n    },\n    {\n     'begin': 0x1800,\n     'end': 0x18AF\n    },\n    {\n     'begin': 0x2800,\n     'end': 0x28FF\n    },\n    {\n     'begin': 0xA000,\n     'end': 0xA48F\n    },\n    {\n     'begin': 0x1700,\n     'end': 0x171F\n    },\n    {\n     'begin': 0x10300,\n     'end': 0x1032F\n    },\n    {\n     'begin': 0x10330,\n     'end': 0x1034F\n    },\n    {\n     'begin': 0x10400,\n     'end': 0x1044F\n    },\n    {\n     'begin': 0x1D000,\n     'end': 0x1D0FF\n    },\n    {\n     'begin': 0x1D400,\n     'end': 0x1D7FF\n    },\n    {\n     'begin': 0xFF000,\n     'end': 0xFFFFD\n    },\n    {\n     'begin': 0xFE00,\n     'end': 0xFE0F\n    },\n    {\n     'begin': 0xE0000,\n     'end': 0xE007F\n    },\n    {\n     'begin': 0x1900,\n     'end': 0x194F\n    },\n    {\n     'begin': 0x1950,\n     'end': 0x197F\n    },\n    {\n     'begin': 0x1980,\n     'end': 0x19DF\n    },\n    {\n     'begin': 0x1A00,\n     'end': 0x1A1F\n    },\n    {\n     'begin': 0x2C00,\n     'end': 0x2C5F\n    },\n    {\n     'begin': 0x2D30,\n     'end': 0x2D7F\n    },\n    {\n     'begin': 0x4DC0,\n     'end': 0x4DFF\n    },\n    {\n     'begin': 0xA800,\n     'end': 0xA82F\n    },\n    {\n     'begin': 0x10000,\n     'end': 0x1007F\n    },\n    {\n     'begin': 0x10140,\n     'end': 0x1018F\n    },\n    {\n     'begin': 0x10380,\n     'end': 0x1039F\n    },\n    {\n     'begin': 0x103A0,\n     'end': 0x103DF\n    },\n    {\n     'begin': 0x10450,\n     'end': 0x1047F\n    },\n    {\n     'begin': 0x10480,\n     'end': 0x104AF\n    },\n    {\n     'begin': 0x10800,\n     'end': 0x1083F\n    },\n    {\n     'begin': 0x10A00,\n     'end': 0x10A5F\n    },\n    {\n     'begin': 0x1D300,\n     'end': 0x1D35F\n    },\n    {\n     'begin': 0x12000,\n     'end': 0x123FF\n    },\n    {\n     'begin': 0x1D360,\n     'end': 0x1D37F\n    },\n    {\n     'begin': 0x1B80,\n     'end': 0x1BBF\n    },\n    {\n     'begin': 0x1C00,\n     'end': 0x1C4F\n    },\n    {\n     'begin': 0x1C50,\n     'end': 0x1C7F\n    },\n    {\n     'begin': 0xA880,\n     'end': 0xA8DF\n    },\n    {\n     'begin': 0xA900,\n     'end': 0xA92F\n    },\n    {\n     'begin': 0xA930,\n     'end': 0xA95F\n    },\n    {\n     'begin': 0xAA00,\n     'end': 0xAA5F\n    },\n    {\n     'begin': 0x10190,\n     'end': 0x101CF\n    },\n    {\n     'begin': 0x101D0,\n     'end': 0x101FF\n    },\n    {\n     'begin': 0x102A0,\n     'end': 0x102DF\n    },\n    {\n     'begin': 0x1F030,\n     'end': 0x1F09F\n    }\n   ];\n   function getUnicodeRangeFor(value) {\n    for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n     var range = UnicodeRanges[i];\n     if (value >= range.begin && value < range.end) {\n      return i;\n     }\n    }\n    return -1;\n   }\n   function isRTLRangeFor(value) {\n    var range = UnicodeRanges[13];\n    if (value >= range.begin && value < range.end) {\n     return true;\n    }\n    range = UnicodeRanges[11];\n    if (value >= range.begin && value < range.end) {\n     return true;\n    }\n    return false;\n   }\n   var getNormalizedUnicodes = getLookupTableFactory(function (t) {\n    t['\\u00A8'] = '\\u0020\\u0308';\n    t['\\u00AF'] = '\\u0020\\u0304';\n    t['\\u00B4'] = '\\u0020\\u0301';\n    t['\\u00B5'] = '\\u03BC';\n    t['\\u00B8'] = '\\u0020\\u0327';\n    t['\\u0132'] = '\\u0049\\u004A';\n    t['\\u0133'] = '\\u0069\\u006A';\n    t['\\u013F'] = '\\u004C\\u00B7';\n    t['\\u0140'] = '\\u006C\\u00B7';\n    t['\\u0149'] = '\\u02BC\\u006E';\n    t['\\u017F'] = '\\u0073';\n    t['\\u01C4'] = '\\u0044\\u017D';\n    t['\\u01C5'] = '\\u0044\\u017E';\n    t['\\u01C6'] = '\\u0064\\u017E';\n    t['\\u01C7'] = '\\u004C\\u004A';\n    t['\\u01C8'] = '\\u004C\\u006A';\n    t['\\u01C9'] = '\\u006C\\u006A';\n    t['\\u01CA'] = '\\u004E\\u004A';\n    t['\\u01CB'] = '\\u004E\\u006A';\n    t['\\u01CC'] = '\\u006E\\u006A';\n    t['\\u01F1'] = '\\u0044\\u005A';\n    t['\\u01F2'] = '\\u0044\\u007A';\n    t['\\u01F3'] = '\\u0064\\u007A';\n    t['\\u02D8'] = '\\u0020\\u0306';\n    t['\\u02D9'] = '\\u0020\\u0307';\n    t['\\u02DA'] = '\\u0020\\u030A';\n    t['\\u02DB'] = '\\u0020\\u0328';\n    t['\\u02DC'] = '\\u0020\\u0303';\n    t['\\u02DD'] = '\\u0020\\u030B';\n    t['\\u037A'] = '\\u0020\\u0345';\n    t['\\u0384'] = '\\u0020\\u0301';\n    t['\\u03D0'] = '\\u03B2';\n    t['\\u03D1'] = '\\u03B8';\n    t['\\u03D2'] = '\\u03A5';\n    t['\\u03D5'] = '\\u03C6';\n    t['\\u03D6'] = '\\u03C0';\n    t['\\u03F0'] = '\\u03BA';\n    t['\\u03F1'] = '\\u03C1';\n    t['\\u03F2'] = '\\u03C2';\n    t['\\u03F4'] = '\\u0398';\n    t['\\u03F5'] = '\\u03B5';\n    t['\\u03F9'] = '\\u03A3';\n    t['\\u0587'] = '\\u0565\\u0582';\n    t['\\u0675'] = '\\u0627\\u0674';\n    t['\\u0676'] = '\\u0648\\u0674';\n    t['\\u0677'] = '\\u06C7\\u0674';\n    t['\\u0678'] = '\\u064A\\u0674';\n    t['\\u0E33'] = '\\u0E4D\\u0E32';\n    t['\\u0EB3'] = '\\u0ECD\\u0EB2';\n    t['\\u0EDC'] = '\\u0EAB\\u0E99';\n    t['\\u0EDD'] = '\\u0EAB\\u0EA1';\n    t['\\u0F77'] = '\\u0FB2\\u0F81';\n    t['\\u0F79'] = '\\u0FB3\\u0F81';\n    t['\\u1E9A'] = '\\u0061\\u02BE';\n    t['\\u1FBD'] = '\\u0020\\u0313';\n    t['\\u1FBF'] = '\\u0020\\u0313';\n    t['\\u1FC0'] = '\\u0020\\u0342';\n    t['\\u1FFE'] = '\\u0020\\u0314';\n    t['\\u2002'] = '\\u0020';\n    t['\\u2003'] = '\\u0020';\n    t['\\u2004'] = '\\u0020';\n    t['\\u2005'] = '\\u0020';\n    t['\\u2006'] = '\\u0020';\n    t['\\u2008'] = '\\u0020';\n    t['\\u2009'] = '\\u0020';\n    t['\\u200A'] = '\\u0020';\n    t['\\u2017'] = '\\u0020\\u0333';\n    t['\\u2024'] = '\\u002E';\n    t['\\u2025'] = '\\u002E\\u002E';\n    t['\\u2026'] = '\\u002E\\u002E\\u002E';\n    t['\\u2033'] = '\\u2032\\u2032';\n    t['\\u2034'] = '\\u2032\\u2032\\u2032';\n    t['\\u2036'] = '\\u2035\\u2035';\n    t['\\u2037'] = '\\u2035\\u2035\\u2035';\n    t['\\u203C'] = '\\u0021\\u0021';\n    t['\\u203E'] = '\\u0020\\u0305';\n    t['\\u2047'] = '\\u003F\\u003F';\n    t['\\u2048'] = '\\u003F\\u0021';\n    t['\\u2049'] = '\\u0021\\u003F';\n    t['\\u2057'] = '\\u2032\\u2032\\u2032\\u2032';\n    t['\\u205F'] = '\\u0020';\n    t['\\u20A8'] = '\\u0052\\u0073';\n    t['\\u2100'] = '\\u0061\\u002F\\u0063';\n    t['\\u2101'] = '\\u0061\\u002F\\u0073';\n    t['\\u2103'] = '\\u00B0\\u0043';\n    t['\\u2105'] = '\\u0063\\u002F\\u006F';\n    t['\\u2106'] = '\\u0063\\u002F\\u0075';\n    t['\\u2107'] = '\\u0190';\n    t['\\u2109'] = '\\u00B0\\u0046';\n    t['\\u2116'] = '\\u004E\\u006F';\n    t['\\u2121'] = '\\u0054\\u0045\\u004C';\n    t['\\u2135'] = '\\u05D0';\n    t['\\u2136'] = '\\u05D1';\n    t['\\u2137'] = '\\u05D2';\n    t['\\u2138'] = '\\u05D3';\n    t['\\u213B'] = '\\u0046\\u0041\\u0058';\n    t['\\u2160'] = '\\u0049';\n    t['\\u2161'] = '\\u0049\\u0049';\n    t['\\u2162'] = '\\u0049\\u0049\\u0049';\n    t['\\u2163'] = '\\u0049\\u0056';\n    t['\\u2164'] = '\\u0056';\n    t['\\u2165'] = '\\u0056\\u0049';\n    t['\\u2166'] = '\\u0056\\u0049\\u0049';\n    t['\\u2167'] = '\\u0056\\u0049\\u0049\\u0049';\n    t['\\u2168'] = '\\u0049\\u0058';\n    t['\\u2169'] = '\\u0058';\n    t['\\u216A'] = '\\u0058\\u0049';\n    t['\\u216B'] = '\\u0058\\u0049\\u0049';\n    t['\\u216C'] = '\\u004C';\n    t['\\u216D'] = '\\u0043';\n    t['\\u216E'] = '\\u0044';\n    t['\\u216F'] = '\\u004D';\n    t['\\u2170'] = '\\u0069';\n    t['\\u2171'] = '\\u0069\\u0069';\n    t['\\u2172'] = '\\u0069\\u0069\\u0069';\n    t['\\u2173'] = '\\u0069\\u0076';\n    t['\\u2174'] = '\\u0076';\n    t['\\u2175'] = '\\u0076\\u0069';\n    t['\\u2176'] = '\\u0076\\u0069\\u0069';\n    t['\\u2177'] = '\\u0076\\u0069\\u0069\\u0069';\n    t['\\u2178'] = '\\u0069\\u0078';\n    t['\\u2179'] = '\\u0078';\n    t['\\u217A'] = '\\u0078\\u0069';\n    t['\\u217B'] = '\\u0078\\u0069\\u0069';\n    t['\\u217C'] = '\\u006C';\n    t['\\u217D'] = '\\u0063';\n    t['\\u217E'] = '\\u0064';\n    t['\\u217F'] = '\\u006D';\n    t['\\u222C'] = '\\u222B\\u222B';\n    t['\\u222D'] = '\\u222B\\u222B\\u222B';\n    t['\\u222F'] = '\\u222E\\u222E';\n    t['\\u2230'] = '\\u222E\\u222E\\u222E';\n    t['\\u2474'] = '\\u0028\\u0031\\u0029';\n    t['\\u2475'] = '\\u0028\\u0032\\u0029';\n    t['\\u2476'] = '\\u0028\\u0033\\u0029';\n    t['\\u2477'] = '\\u0028\\u0034\\u0029';\n    t['\\u2478'] = '\\u0028\\u0035\\u0029';\n    t['\\u2479'] = '\\u0028\\u0036\\u0029';\n    t['\\u247A'] = '\\u0028\\u0037\\u0029';\n    t['\\u247B'] = '\\u0028\\u0038\\u0029';\n    t['\\u247C'] = '\\u0028\\u0039\\u0029';\n    t['\\u247D'] = '\\u0028\\u0031\\u0030\\u0029';\n    t['\\u247E'] = '\\u0028\\u0031\\u0031\\u0029';\n    t['\\u247F'] = '\\u0028\\u0031\\u0032\\u0029';\n    t['\\u2480'] = '\\u0028\\u0031\\u0033\\u0029';\n    t['\\u2481'] = '\\u0028\\u0031\\u0034\\u0029';\n    t['\\u2482'] = '\\u0028\\u0031\\u0035\\u0029';\n    t['\\u2483'] = '\\u0028\\u0031\\u0036\\u0029';\n    t['\\u2484'] = '\\u0028\\u0031\\u0037\\u0029';\n    t['\\u2485'] = '\\u0028\\u0031\\u0038\\u0029';\n    t['\\u2486'] = '\\u0028\\u0031\\u0039\\u0029';\n    t['\\u2487'] = '\\u0028\\u0032\\u0030\\u0029';\n    t['\\u2488'] = '\\u0031\\u002E';\n    t['\\u2489'] = '\\u0032\\u002E';\n    t['\\u248A'] = '\\u0033\\u002E';\n    t['\\u248B'] = '\\u0034\\u002E';\n    t['\\u248C'] = '\\u0035\\u002E';\n    t['\\u248D'] = '\\u0036\\u002E';\n    t['\\u248E'] = '\\u0037\\u002E';\n    t['\\u248F'] = '\\u0038\\u002E';\n    t['\\u2490'] = '\\u0039\\u002E';\n    t['\\u2491'] = '\\u0031\\u0030\\u002E';\n    t['\\u2492'] = '\\u0031\\u0031\\u002E';\n    t['\\u2493'] = '\\u0031\\u0032\\u002E';\n    t['\\u2494'] = '\\u0031\\u0033\\u002E';\n    t['\\u2495'] = '\\u0031\\u0034\\u002E';\n    t['\\u2496'] = '\\u0031\\u0035\\u002E';\n    t['\\u2497'] = '\\u0031\\u0036\\u002E';\n    t['\\u2498'] = '\\u0031\\u0037\\u002E';\n    t['\\u2499'] = '\\u0031\\u0038\\u002E';\n    t['\\u249A'] = '\\u0031\\u0039\\u002E';\n    t['\\u249B'] = '\\u0032\\u0030\\u002E';\n    t['\\u249C'] = '\\u0028\\u0061\\u0029';\n    t['\\u249D'] = '\\u0028\\u0062\\u0029';\n    t['\\u249E'] = '\\u0028\\u0063\\u0029';\n    t['\\u249F'] = '\\u0028\\u0064\\u0029';\n    t['\\u24A0'] = '\\u0028\\u0065\\u0029';\n    t['\\u24A1'] = '\\u0028\\u0066\\u0029';\n    t['\\u24A2'] = '\\u0028\\u0067\\u0029';\n    t['\\u24A3'] = '\\u0028\\u0068\\u0029';\n    t['\\u24A4'] = '\\u0028\\u0069\\u0029';\n    t['\\u24A5'] = '\\u0028\\u006A\\u0029';\n    t['\\u24A6'] = '\\u0028\\u006B\\u0029';\n    t['\\u24A7'] = '\\u0028\\u006C\\u0029';\n    t['\\u24A8'] = '\\u0028\\u006D\\u0029';\n    t['\\u24A9'] = '\\u0028\\u006E\\u0029';\n    t['\\u24AA'] = '\\u0028\\u006F\\u0029';\n    t['\\u24AB'] = '\\u0028\\u0070\\u0029';\n    t['\\u24AC'] = '\\u0028\\u0071\\u0029';\n    t['\\u24AD'] = '\\u0028\\u0072\\u0029';\n    t['\\u24AE'] = '\\u0028\\u0073\\u0029';\n    t['\\u24AF'] = '\\u0028\\u0074\\u0029';\n    t['\\u24B0'] = '\\u0028\\u0075\\u0029';\n    t['\\u24B1'] = '\\u0028\\u0076\\u0029';\n    t['\\u24B2'] = '\\u0028\\u0077\\u0029';\n    t['\\u24B3'] = '\\u0028\\u0078\\u0029';\n    t['\\u24B4'] = '\\u0028\\u0079\\u0029';\n    t['\\u24B5'] = '\\u0028\\u007A\\u0029';\n    t['\\u2A0C'] = '\\u222B\\u222B\\u222B\\u222B';\n    t['\\u2A74'] = '\\u003A\\u003A\\u003D';\n    t['\\u2A75'] = '\\u003D\\u003D';\n    t['\\u2A76'] = '\\u003D\\u003D\\u003D';\n    t['\\u2E9F'] = '\\u6BCD';\n    t['\\u2EF3'] = '\\u9F9F';\n    t['\\u2F00'] = '\\u4E00';\n    t['\\u2F01'] = '\\u4E28';\n    t['\\u2F02'] = '\\u4E36';\n    t['\\u2F03'] = '\\u4E3F';\n    t['\\u2F04'] = '\\u4E59';\n    t['\\u2F05'] = '\\u4E85';\n    t['\\u2F06'] = '\\u4E8C';\n    t['\\u2F07'] = '\\u4EA0';\n    t['\\u2F08'] = '\\u4EBA';\n    t['\\u2F09'] = '\\u513F';\n    t['\\u2F0A'] = '\\u5165';\n    t['\\u2F0B'] = '\\u516B';\n    t['\\u2F0C'] = '\\u5182';\n    t['\\u2F0D'] = '\\u5196';\n    t['\\u2F0E'] = '\\u51AB';\n    t['\\u2F0F'] = '\\u51E0';\n    t['\\u2F10'] = '\\u51F5';\n    t['\\u2F11'] = '\\u5200';\n    t['\\u2F12'] = '\\u529B';\n    t['\\u2F13'] = '\\u52F9';\n    t['\\u2F14'] = '\\u5315';\n    t['\\u2F15'] = '\\u531A';\n    t['\\u2F16'] = '\\u5338';\n    t['\\u2F17'] = '\\u5341';\n    t['\\u2F18'] = '\\u535C';\n    t['\\u2F19'] = '\\u5369';\n    t['\\u2F1A'] = '\\u5382';\n    t['\\u2F1B'] = '\\u53B6';\n    t['\\u2F1C'] = '\\u53C8';\n    t['\\u2F1D'] = '\\u53E3';\n    t['\\u2F1E'] = '\\u56D7';\n    t['\\u2F1F'] = '\\u571F';\n    t['\\u2F20'] = '\\u58EB';\n    t['\\u2F21'] = '\\u5902';\n    t['\\u2F22'] = '\\u590A';\n    t['\\u2F23'] = '\\u5915';\n    t['\\u2F24'] = '\\u5927';\n    t['\\u2F25'] = '\\u5973';\n    t['\\u2F26'] = '\\u5B50';\n    t['\\u2F27'] = '\\u5B80';\n    t['\\u2F28'] = '\\u5BF8';\n    t['\\u2F29'] = '\\u5C0F';\n    t['\\u2F2A'] = '\\u5C22';\n    t['\\u2F2B'] = '\\u5C38';\n    t['\\u2F2C'] = '\\u5C6E';\n    t['\\u2F2D'] = '\\u5C71';\n    t['\\u2F2E'] = '\\u5DDB';\n    t['\\u2F2F'] = '\\u5DE5';\n    t['\\u2F30'] = '\\u5DF1';\n    t['\\u2F31'] = '\\u5DFE';\n    t['\\u2F32'] = '\\u5E72';\n    t['\\u2F33'] = '\\u5E7A';\n    t['\\u2F34'] = '\\u5E7F';\n    t['\\u2F35'] = '\\u5EF4';\n    t['\\u2F36'] = '\\u5EFE';\n    t['\\u2F37'] = '\\u5F0B';\n    t['\\u2F38'] = '\\u5F13';\n    t['\\u2F39'] = '\\u5F50';\n    t['\\u2F3A'] = '\\u5F61';\n    t['\\u2F3B'] = '\\u5F73';\n    t['\\u2F3C'] = '\\u5FC3';\n    t['\\u2F3D'] = '\\u6208';\n    t['\\u2F3E'] = '\\u6236';\n    t['\\u2F3F'] = '\\u624B';\n    t['\\u2F40'] = '\\u652F';\n    t['\\u2F41'] = '\\u6534';\n    t['\\u2F42'] = '\\u6587';\n    t['\\u2F43'] = '\\u6597';\n    t['\\u2F44'] = '\\u65A4';\n    t['\\u2F45'] = '\\u65B9';\n    t['\\u2F46'] = '\\u65E0';\n    t['\\u2F47'] = '\\u65E5';\n    t['\\u2F48'] = '\\u66F0';\n    t['\\u2F49'] = '\\u6708';\n    t['\\u2F4A'] = '\\u6728';\n    t['\\u2F4B'] = '\\u6B20';\n    t['\\u2F4C'] = '\\u6B62';\n    t['\\u2F4D'] = '\\u6B79';\n    t['\\u2F4E'] = '\\u6BB3';\n    t['\\u2F4F'] = '\\u6BCB';\n    t['\\u2F50'] = '\\u6BD4';\n    t['\\u2F51'] = '\\u6BDB';\n    t['\\u2F52'] = '\\u6C0F';\n    t['\\u2F53'] = '\\u6C14';\n    t['\\u2F54'] = '\\u6C34';\n    t['\\u2F55'] = '\\u706B';\n    t['\\u2F56'] = '\\u722A';\n    t['\\u2F57'] = '\\u7236';\n    t['\\u2F58'] = '\\u723B';\n    t['\\u2F59'] = '\\u723F';\n    t['\\u2F5A'] = '\\u7247';\n    t['\\u2F5B'] = '\\u7259';\n    t['\\u2F5C'] = '\\u725B';\n    t['\\u2F5D'] = '\\u72AC';\n    t['\\u2F5E'] = '\\u7384';\n    t['\\u2F5F'] = '\\u7389';\n    t['\\u2F60'] = '\\u74DC';\n    t['\\u2F61'] = '\\u74E6';\n    t['\\u2F62'] = '\\u7518';\n    t['\\u2F63'] = '\\u751F';\n    t['\\u2F64'] = '\\u7528';\n    t['\\u2F65'] = '\\u7530';\n    t['\\u2F66'] = '\\u758B';\n    t['\\u2F67'] = '\\u7592';\n    t['\\u2F68'] = '\\u7676';\n    t['\\u2F69'] = '\\u767D';\n    t['\\u2F6A'] = '\\u76AE';\n    t['\\u2F6B'] = '\\u76BF';\n    t['\\u2F6C'] = '\\u76EE';\n    t['\\u2F6D'] = '\\u77DB';\n    t['\\u2F6E'] = '\\u77E2';\n    t['\\u2F6F'] = '\\u77F3';\n    t['\\u2F70'] = '\\u793A';\n    t['\\u2F71'] = '\\u79B8';\n    t['\\u2F72'] = '\\u79BE';\n    t['\\u2F73'] = '\\u7A74';\n    t['\\u2F74'] = '\\u7ACB';\n    t['\\u2F75'] = '\\u7AF9';\n    t['\\u2F76'] = '\\u7C73';\n    t['\\u2F77'] = '\\u7CF8';\n    t['\\u2F78'] = '\\u7F36';\n    t['\\u2F79'] = '\\u7F51';\n    t['\\u2F7A'] = '\\u7F8A';\n    t['\\u2F7B'] = '\\u7FBD';\n    t['\\u2F7C'] = '\\u8001';\n    t['\\u2F7D'] = '\\u800C';\n    t['\\u2F7E'] = '\\u8012';\n    t['\\u2F7F'] = '\\u8033';\n    t['\\u2F80'] = '\\u807F';\n    t['\\u2F81'] = '\\u8089';\n    t['\\u2F82'] = '\\u81E3';\n    t['\\u2F83'] = '\\u81EA';\n    t['\\u2F84'] = '\\u81F3';\n    t['\\u2F85'] = '\\u81FC';\n    t['\\u2F86'] = '\\u820C';\n    t['\\u2F87'] = '\\u821B';\n    t['\\u2F88'] = '\\u821F';\n    t['\\u2F89'] = '\\u826E';\n    t['\\u2F8A'] = '\\u8272';\n    t['\\u2F8B'] = '\\u8278';\n    t['\\u2F8C'] = '\\u864D';\n    t['\\u2F8D'] = '\\u866B';\n    t['\\u2F8E'] = '\\u8840';\n    t['\\u2F8F'] = '\\u884C';\n    t['\\u2F90'] = '\\u8863';\n    t['\\u2F91'] = '\\u897E';\n    t['\\u2F92'] = '\\u898B';\n    t['\\u2F93'] = '\\u89D2';\n    t['\\u2F94'] = '\\u8A00';\n    t['\\u2F95'] = '\\u8C37';\n    t['\\u2F96'] = '\\u8C46';\n    t['\\u2F97'] = '\\u8C55';\n    t['\\u2F98'] = '\\u8C78';\n    t['\\u2F99'] = '\\u8C9D';\n    t['\\u2F9A'] = '\\u8D64';\n    t['\\u2F9B'] = '\\u8D70';\n    t['\\u2F9C'] = '\\u8DB3';\n    t['\\u2F9D'] = '\\u8EAB';\n    t['\\u2F9E'] = '\\u8ECA';\n    t['\\u2F9F'] = '\\u8F9B';\n    t['\\u2FA0'] = '\\u8FB0';\n    t['\\u2FA1'] = '\\u8FB5';\n    t['\\u2FA2'] = '\\u9091';\n    t['\\u2FA3'] = '\\u9149';\n    t['\\u2FA4'] = '\\u91C6';\n    t['\\u2FA5'] = '\\u91CC';\n    t['\\u2FA6'] = '\\u91D1';\n    t['\\u2FA7'] = '\\u9577';\n    t['\\u2FA8'] = '\\u9580';\n    t['\\u2FA9'] = '\\u961C';\n    t['\\u2FAA'] = '\\u96B6';\n    t['\\u2FAB'] = '\\u96B9';\n    t['\\u2FAC'] = '\\u96E8';\n    t['\\u2FAD'] = '\\u9751';\n    t['\\u2FAE'] = '\\u975E';\n    t['\\u2FAF'] = '\\u9762';\n    t['\\u2FB0'] = '\\u9769';\n    t['\\u2FB1'] = '\\u97CB';\n    t['\\u2FB2'] = '\\u97ED';\n    t['\\u2FB3'] = '\\u97F3';\n    t['\\u2FB4'] = '\\u9801';\n    t['\\u2FB5'] = '\\u98A8';\n    t['\\u2FB6'] = '\\u98DB';\n    t['\\u2FB7'] = '\\u98DF';\n    t['\\u2FB8'] = '\\u9996';\n    t['\\u2FB9'] = '\\u9999';\n    t['\\u2FBA'] = '\\u99AC';\n    t['\\u2FBB'] = '\\u9AA8';\n    t['\\u2FBC'] = '\\u9AD8';\n    t['\\u2FBD'] = '\\u9ADF';\n    t['\\u2FBE'] = '\\u9B25';\n    t['\\u2FBF'] = '\\u9B2F';\n    t['\\u2FC0'] = '\\u9B32';\n    t['\\u2FC1'] = '\\u9B3C';\n    t['\\u2FC2'] = '\\u9B5A';\n    t['\\u2FC3'] = '\\u9CE5';\n    t['\\u2FC4'] = '\\u9E75';\n    t['\\u2FC5'] = '\\u9E7F';\n    t['\\u2FC6'] = '\\u9EA5';\n    t['\\u2FC7'] = '\\u9EBB';\n    t['\\u2FC8'] = '\\u9EC3';\n    t['\\u2FC9'] = '\\u9ECD';\n    t['\\u2FCA'] = '\\u9ED1';\n    t['\\u2FCB'] = '\\u9EF9';\n    t['\\u2FCC'] = '\\u9EFD';\n    t['\\u2FCD'] = '\\u9F0E';\n    t['\\u2FCE'] = '\\u9F13';\n    t['\\u2FCF'] = '\\u9F20';\n    t['\\u2FD0'] = '\\u9F3B';\n    t['\\u2FD1'] = '\\u9F4A';\n    t['\\u2FD2'] = '\\u9F52';\n    t['\\u2FD3'] = '\\u9F8D';\n    t['\\u2FD4'] = '\\u9F9C';\n    t['\\u2FD5'] = '\\u9FA0';\n    t['\\u3036'] = '\\u3012';\n    t['\\u3038'] = '\\u5341';\n    t['\\u3039'] = '\\u5344';\n    t['\\u303A'] = '\\u5345';\n    t['\\u309B'] = '\\u0020\\u3099';\n    t['\\u309C'] = '\\u0020\\u309A';\n    t['\\u3131'] = '\\u1100';\n    t['\\u3132'] = '\\u1101';\n    t['\\u3133'] = '\\u11AA';\n    t['\\u3134'] = '\\u1102';\n    t['\\u3135'] = '\\u11AC';\n    t['\\u3136'] = '\\u11AD';\n    t['\\u3137'] = '\\u1103';\n    t['\\u3138'] = '\\u1104';\n    t['\\u3139'] = '\\u1105';\n    t['\\u313A'] = '\\u11B0';\n    t['\\u313B'] = '\\u11B1';\n    t['\\u313C'] = '\\u11B2';\n    t['\\u313D'] = '\\u11B3';\n    t['\\u313E'] = '\\u11B4';\n    t['\\u313F'] = '\\u11B5';\n    t['\\u3140'] = '\\u111A';\n    t['\\u3141'] = '\\u1106';\n    t['\\u3142'] = '\\u1107';\n    t['\\u3143'] = '\\u1108';\n    t['\\u3144'] = '\\u1121';\n    t['\\u3145'] = '\\u1109';\n    t['\\u3146'] = '\\u110A';\n    t['\\u3147'] = '\\u110B';\n    t['\\u3148'] = '\\u110C';\n    t['\\u3149'] = '\\u110D';\n    t['\\u314A'] = '\\u110E';\n    t['\\u314B'] = '\\u110F';\n    t['\\u314C'] = '\\u1110';\n    t['\\u314D'] = '\\u1111';\n    t['\\u314E'] = '\\u1112';\n    t['\\u314F'] = '\\u1161';\n    t['\\u3150'] = '\\u1162';\n    t['\\u3151'] = '\\u1163';\n    t['\\u3152'] = '\\u1164';\n    t['\\u3153'] = '\\u1165';\n    t['\\u3154'] = '\\u1166';\n    t['\\u3155'] = '\\u1167';\n    t['\\u3156'] = '\\u1168';\n    t['\\u3157'] = '\\u1169';\n    t['\\u3158'] = '\\u116A';\n    t['\\u3159'] = '\\u116B';\n    t['\\u315A'] = '\\u116C';\n    t['\\u315B'] = '\\u116D';\n    t['\\u315C'] = '\\u116E';\n    t['\\u315D'] = '\\u116F';\n    t['\\u315E'] = '\\u1170';\n    t['\\u315F'] = '\\u1171';\n    t['\\u3160'] = '\\u1172';\n    t['\\u3161'] = '\\u1173';\n    t['\\u3162'] = '\\u1174';\n    t['\\u3163'] = '\\u1175';\n    t['\\u3164'] = '\\u1160';\n    t['\\u3165'] = '\\u1114';\n    t['\\u3166'] = '\\u1115';\n    t['\\u3167'] = '\\u11C7';\n    t['\\u3168'] = '\\u11C8';\n    t['\\u3169'] = '\\u11CC';\n    t['\\u316A'] = '\\u11CE';\n    t['\\u316B'] = '\\u11D3';\n    t['\\u316C'] = '\\u11D7';\n    t['\\u316D'] = '\\u11D9';\n    t['\\u316E'] = '\\u111C';\n    t['\\u316F'] = '\\u11DD';\n    t['\\u3170'] = '\\u11DF';\n    t['\\u3171'] = '\\u111D';\n    t['\\u3172'] = '\\u111E';\n    t['\\u3173'] = '\\u1120';\n    t['\\u3174'] = '\\u1122';\n    t['\\u3175'] = '\\u1123';\n    t['\\u3176'] = '\\u1127';\n    t['\\u3177'] = '\\u1129';\n    t['\\u3178'] = '\\u112B';\n    t['\\u3179'] = '\\u112C';\n    t['\\u317A'] = '\\u112D';\n    t['\\u317B'] = '\\u112E';\n    t['\\u317C'] = '\\u112F';\n    t['\\u317D'] = '\\u1132';\n    t['\\u317E'] = '\\u1136';\n    t['\\u317F'] = '\\u1140';\n    t['\\u3180'] = '\\u1147';\n    t['\\u3181'] = '\\u114C';\n    t['\\u3182'] = '\\u11F1';\n    t['\\u3183'] = '\\u11F2';\n    t['\\u3184'] = '\\u1157';\n    t['\\u3185'] = '\\u1158';\n    t['\\u3186'] = '\\u1159';\n    t['\\u3187'] = '\\u1184';\n    t['\\u3188'] = '\\u1185';\n    t['\\u3189'] = '\\u1188';\n    t['\\u318A'] = '\\u1191';\n    t['\\u318B'] = '\\u1192';\n    t['\\u318C'] = '\\u1194';\n    t['\\u318D'] = '\\u119E';\n    t['\\u318E'] = '\\u11A1';\n    t['\\u3200'] = '\\u0028\\u1100\\u0029';\n    t['\\u3201'] = '\\u0028\\u1102\\u0029';\n    t['\\u3202'] = '\\u0028\\u1103\\u0029';\n    t['\\u3203'] = '\\u0028\\u1105\\u0029';\n    t['\\u3204'] = '\\u0028\\u1106\\u0029';\n    t['\\u3205'] = '\\u0028\\u1107\\u0029';\n    t['\\u3206'] = '\\u0028\\u1109\\u0029';\n    t['\\u3207'] = '\\u0028\\u110B\\u0029';\n    t['\\u3208'] = '\\u0028\\u110C\\u0029';\n    t['\\u3209'] = '\\u0028\\u110E\\u0029';\n    t['\\u320A'] = '\\u0028\\u110F\\u0029';\n    t['\\u320B'] = '\\u0028\\u1110\\u0029';\n    t['\\u320C'] = '\\u0028\\u1111\\u0029';\n    t['\\u320D'] = '\\u0028\\u1112\\u0029';\n    t['\\u320E'] = '\\u0028\\u1100\\u1161\\u0029';\n    t['\\u320F'] = '\\u0028\\u1102\\u1161\\u0029';\n    t['\\u3210'] = '\\u0028\\u1103\\u1161\\u0029';\n    t['\\u3211'] = '\\u0028\\u1105\\u1161\\u0029';\n    t['\\u3212'] = '\\u0028\\u1106\\u1161\\u0029';\n    t['\\u3213'] = '\\u0028\\u1107\\u1161\\u0029';\n    t['\\u3214'] = '\\u0028\\u1109\\u1161\\u0029';\n    t['\\u3215'] = '\\u0028\\u110B\\u1161\\u0029';\n    t['\\u3216'] = '\\u0028\\u110C\\u1161\\u0029';\n    t['\\u3217'] = '\\u0028\\u110E\\u1161\\u0029';\n    t['\\u3218'] = '\\u0028\\u110F\\u1161\\u0029';\n    t['\\u3219'] = '\\u0028\\u1110\\u1161\\u0029';\n    t['\\u321A'] = '\\u0028\\u1111\\u1161\\u0029';\n    t['\\u321B'] = '\\u0028\\u1112\\u1161\\u0029';\n    t['\\u321C'] = '\\u0028\\u110C\\u116E\\u0029';\n    t['\\u321D'] = '\\u0028\\u110B\\u1169\\u110C\\u1165\\u11AB\\u0029';\n    t['\\u321E'] = '\\u0028\\u110B\\u1169\\u1112\\u116E\\u0029';\n    t['\\u3220'] = '\\u0028\\u4E00\\u0029';\n    t['\\u3221'] = '\\u0028\\u4E8C\\u0029';\n    t['\\u3222'] = '\\u0028\\u4E09\\u0029';\n    t['\\u3223'] = '\\u0028\\u56DB\\u0029';\n    t['\\u3224'] = '\\u0028\\u4E94\\u0029';\n    t['\\u3225'] = '\\u0028\\u516D\\u0029';\n    t['\\u3226'] = '\\u0028\\u4E03\\u0029';\n    t['\\u3227'] = '\\u0028\\u516B\\u0029';\n    t['\\u3228'] = '\\u0028\\u4E5D\\u0029';\n    t['\\u3229'] = '\\u0028\\u5341\\u0029';\n    t['\\u322A'] = '\\u0028\\u6708\\u0029';\n    t['\\u322B'] = '\\u0028\\u706B\\u0029';\n    t['\\u322C'] = '\\u0028\\u6C34\\u0029';\n    t['\\u322D'] = '\\u0028\\u6728\\u0029';\n    t['\\u322E'] = '\\u0028\\u91D1\\u0029';\n    t['\\u322F'] = '\\u0028\\u571F\\u0029';\n    t['\\u3230'] = '\\u0028\\u65E5\\u0029';\n    t['\\u3231'] = '\\u0028\\u682A\\u0029';\n    t['\\u3232'] = '\\u0028\\u6709\\u0029';\n    t['\\u3233'] = '\\u0028\\u793E\\u0029';\n    t['\\u3234'] = '\\u0028\\u540D\\u0029';\n    t['\\u3235'] = '\\u0028\\u7279\\u0029';\n    t['\\u3236'] = '\\u0028\\u8CA1\\u0029';\n    t['\\u3237'] = '\\u0028\\u795D\\u0029';\n    t['\\u3238'] = '\\u0028\\u52B4\\u0029';\n    t['\\u3239'] = '\\u0028\\u4EE3\\u0029';\n    t['\\u323A'] = '\\u0028\\u547C\\u0029';\n    t['\\u323B'] = '\\u0028\\u5B66\\u0029';\n    t['\\u323C'] = '\\u0028\\u76E3\\u0029';\n    t['\\u323D'] = '\\u0028\\u4F01\\u0029';\n    t['\\u323E'] = '\\u0028\\u8CC7\\u0029';\n    t['\\u323F'] = '\\u0028\\u5354\\u0029';\n    t['\\u3240'] = '\\u0028\\u796D\\u0029';\n    t['\\u3241'] = '\\u0028\\u4F11\\u0029';\n    t['\\u3242'] = '\\u0028\\u81EA\\u0029';\n    t['\\u3243'] = '\\u0028\\u81F3\\u0029';\n    t['\\u32C0'] = '\\u0031\\u6708';\n    t['\\u32C1'] = '\\u0032\\u6708';\n    t['\\u32C2'] = '\\u0033\\u6708';\n    t['\\u32C3'] = '\\u0034\\u6708';\n    t['\\u32C4'] = '\\u0035\\u6708';\n    t['\\u32C5'] = '\\u0036\\u6708';\n    t['\\u32C6'] = '\\u0037\\u6708';\n    t['\\u32C7'] = '\\u0038\\u6708';\n    t['\\u32C8'] = '\\u0039\\u6708';\n    t['\\u32C9'] = '\\u0031\\u0030\\u6708';\n    t['\\u32CA'] = '\\u0031\\u0031\\u6708';\n    t['\\u32CB'] = '\\u0031\\u0032\\u6708';\n    t['\\u3358'] = '\\u0030\\u70B9';\n    t['\\u3359'] = '\\u0031\\u70B9';\n    t['\\u335A'] = '\\u0032\\u70B9';\n    t['\\u335B'] = '\\u0033\\u70B9';\n    t['\\u335C'] = '\\u0034\\u70B9';\n    t['\\u335D'] = '\\u0035\\u70B9';\n    t['\\u335E'] = '\\u0036\\u70B9';\n    t['\\u335F'] = '\\u0037\\u70B9';\n    t['\\u3360'] = '\\u0038\\u70B9';\n    t['\\u3361'] = '\\u0039\\u70B9';\n    t['\\u3362'] = '\\u0031\\u0030\\u70B9';\n    t['\\u3363'] = '\\u0031\\u0031\\u70B9';\n    t['\\u3364'] = '\\u0031\\u0032\\u70B9';\n    t['\\u3365'] = '\\u0031\\u0033\\u70B9';\n    t['\\u3366'] = '\\u0031\\u0034\\u70B9';\n    t['\\u3367'] = '\\u0031\\u0035\\u70B9';\n    t['\\u3368'] = '\\u0031\\u0036\\u70B9';\n    t['\\u3369'] = '\\u0031\\u0037\\u70B9';\n    t['\\u336A'] = '\\u0031\\u0038\\u70B9';\n    t['\\u336B'] = '\\u0031\\u0039\\u70B9';\n    t['\\u336C'] = '\\u0032\\u0030\\u70B9';\n    t['\\u336D'] = '\\u0032\\u0031\\u70B9';\n    t['\\u336E'] = '\\u0032\\u0032\\u70B9';\n    t['\\u336F'] = '\\u0032\\u0033\\u70B9';\n    t['\\u3370'] = '\\u0032\\u0034\\u70B9';\n    t['\\u33E0'] = '\\u0031\\u65E5';\n    t['\\u33E1'] = '\\u0032\\u65E5';\n    t['\\u33E2'] = '\\u0033\\u65E5';\n    t['\\u33E3'] = '\\u0034\\u65E5';\n    t['\\u33E4'] = '\\u0035\\u65E5';\n    t['\\u33E5'] = '\\u0036\\u65E5';\n    t['\\u33E6'] = '\\u0037\\u65E5';\n    t['\\u33E7'] = '\\u0038\\u65E5';\n    t['\\u33E8'] = '\\u0039\\u65E5';\n    t['\\u33E9'] = '\\u0031\\u0030\\u65E5';\n    t['\\u33EA'] = '\\u0031\\u0031\\u65E5';\n    t['\\u33EB'] = '\\u0031\\u0032\\u65E5';\n    t['\\u33EC'] = '\\u0031\\u0033\\u65E5';\n    t['\\u33ED'] = '\\u0031\\u0034\\u65E5';\n    t['\\u33EE'] = '\\u0031\\u0035\\u65E5';\n    t['\\u33EF'] = '\\u0031\\u0036\\u65E5';\n    t['\\u33F0'] = '\\u0031\\u0037\\u65E5';\n    t['\\u33F1'] = '\\u0031\\u0038\\u65E5';\n    t['\\u33F2'] = '\\u0031\\u0039\\u65E5';\n    t['\\u33F3'] = '\\u0032\\u0030\\u65E5';\n    t['\\u33F4'] = '\\u0032\\u0031\\u65E5';\n    t['\\u33F5'] = '\\u0032\\u0032\\u65E5';\n    t['\\u33F6'] = '\\u0032\\u0033\\u65E5';\n    t['\\u33F7'] = '\\u0032\\u0034\\u65E5';\n    t['\\u33F8'] = '\\u0032\\u0035\\u65E5';\n    t['\\u33F9'] = '\\u0032\\u0036\\u65E5';\n    t['\\u33FA'] = '\\u0032\\u0037\\u65E5';\n    t['\\u33FB'] = '\\u0032\\u0038\\u65E5';\n    t['\\u33FC'] = '\\u0032\\u0039\\u65E5';\n    t['\\u33FD'] = '\\u0033\\u0030\\u65E5';\n    t['\\u33FE'] = '\\u0033\\u0031\\u65E5';\n    t['\\uFB00'] = '\\u0066\\u0066';\n    t['\\uFB01'] = '\\u0066\\u0069';\n    t['\\uFB02'] = '\\u0066\\u006C';\n    t['\\uFB03'] = '\\u0066\\u0066\\u0069';\n    t['\\uFB04'] = '\\u0066\\u0066\\u006C';\n    t['\\uFB05'] = '\\u017F\\u0074';\n    t['\\uFB06'] = '\\u0073\\u0074';\n    t['\\uFB13'] = '\\u0574\\u0576';\n    t['\\uFB14'] = '\\u0574\\u0565';\n    t['\\uFB15'] = '\\u0574\\u056B';\n    t['\\uFB16'] = '\\u057E\\u0576';\n    t['\\uFB17'] = '\\u0574\\u056D';\n    t['\\uFB4F'] = '\\u05D0\\u05DC';\n    t['\\uFB50'] = '\\u0671';\n    t['\\uFB51'] = '\\u0671';\n    t['\\uFB52'] = '\\u067B';\n    t['\\uFB53'] = '\\u067B';\n    t['\\uFB54'] = '\\u067B';\n    t['\\uFB55'] = '\\u067B';\n    t['\\uFB56'] = '\\u067E';\n    t['\\uFB57'] = '\\u067E';\n    t['\\uFB58'] = '\\u067E';\n    t['\\uFB59'] = '\\u067E';\n    t['\\uFB5A'] = '\\u0680';\n    t['\\uFB5B'] = '\\u0680';\n    t['\\uFB5C'] = '\\u0680';\n    t['\\uFB5D'] = '\\u0680';\n    t['\\uFB5E'] = '\\u067A';\n    t['\\uFB5F'] = '\\u067A';\n    t['\\uFB60'] = '\\u067A';\n    t['\\uFB61'] = '\\u067A';\n    t['\\uFB62'] = '\\u067F';\n    t['\\uFB63'] = '\\u067F';\n    t['\\uFB64'] = '\\u067F';\n    t['\\uFB65'] = '\\u067F';\n    t['\\uFB66'] = '\\u0679';\n    t['\\uFB67'] = '\\u0679';\n    t['\\uFB68'] = '\\u0679';\n    t['\\uFB69'] = '\\u0679';\n    t['\\uFB6A'] = '\\u06A4';\n    t['\\uFB6B'] = '\\u06A4';\n    t['\\uFB6C'] = '\\u06A4';\n    t['\\uFB6D'] = '\\u06A4';\n    t['\\uFB6E'] = '\\u06A6';\n    t['\\uFB6F'] = '\\u06A6';\n    t['\\uFB70'] = '\\u06A6';\n    t['\\uFB71'] = '\\u06A6';\n    t['\\uFB72'] = '\\u0684';\n    t['\\uFB73'] = '\\u0684';\n    t['\\uFB74'] = '\\u0684';\n    t['\\uFB75'] = '\\u0684';\n    t['\\uFB76'] = '\\u0683';\n    t['\\uFB77'] = '\\u0683';\n    t['\\uFB78'] = '\\u0683';\n    t['\\uFB79'] = '\\u0683';\n    t['\\uFB7A'] = '\\u0686';\n    t['\\uFB7B'] = '\\u0686';\n    t['\\uFB7C'] = '\\u0686';\n    t['\\uFB7D'] = '\\u0686';\n    t['\\uFB7E'] = '\\u0687';\n    t['\\uFB7F'] = '\\u0687';\n    t['\\uFB80'] = '\\u0687';\n    t['\\uFB81'] = '\\u0687';\n    t['\\uFB82'] = '\\u068D';\n    t['\\uFB83'] = '\\u068D';\n    t['\\uFB84'] = '\\u068C';\n    t['\\uFB85'] = '\\u068C';\n    t['\\uFB86'] = '\\u068E';\n    t['\\uFB87'] = '\\u068E';\n    t['\\uFB88'] = '\\u0688';\n    t['\\uFB89'] = '\\u0688';\n    t['\\uFB8A'] = '\\u0698';\n    t['\\uFB8B'] = '\\u0698';\n    t['\\uFB8C'] = '\\u0691';\n    t['\\uFB8D'] = '\\u0691';\n    t['\\uFB8E'] = '\\u06A9';\n    t['\\uFB8F'] = '\\u06A9';\n    t['\\uFB90'] = '\\u06A9';\n    t['\\uFB91'] = '\\u06A9';\n    t['\\uFB92'] = '\\u06AF';\n    t['\\uFB93'] = '\\u06AF';\n    t['\\uFB94'] = '\\u06AF';\n    t['\\uFB95'] = '\\u06AF';\n    t['\\uFB96'] = '\\u06B3';\n    t['\\uFB97'] = '\\u06B3';\n    t['\\uFB98'] = '\\u06B3';\n    t['\\uFB99'] = '\\u06B3';\n    t['\\uFB9A'] = '\\u06B1';\n    t['\\uFB9B'] = '\\u06B1';\n    t['\\uFB9C'] = '\\u06B1';\n    t['\\uFB9D'] = '\\u06B1';\n    t['\\uFB9E'] = '\\u06BA';\n    t['\\uFB9F'] = '\\u06BA';\n    t['\\uFBA0'] = '\\u06BB';\n    t['\\uFBA1'] = '\\u06BB';\n    t['\\uFBA2'] = '\\u06BB';\n    t['\\uFBA3'] = '\\u06BB';\n    t['\\uFBA4'] = '\\u06C0';\n    t['\\uFBA5'] = '\\u06C0';\n    t['\\uFBA6'] = '\\u06C1';\n    t['\\uFBA7'] = '\\u06C1';\n    t['\\uFBA8'] = '\\u06C1';\n    t['\\uFBA9'] = '\\u06C1';\n    t['\\uFBAA'] = '\\u06BE';\n    t['\\uFBAB'] = '\\u06BE';\n    t['\\uFBAC'] = '\\u06BE';\n    t['\\uFBAD'] = '\\u06BE';\n    t['\\uFBAE'] = '\\u06D2';\n    t['\\uFBAF'] = '\\u06D2';\n    t['\\uFBB0'] = '\\u06D3';\n    t['\\uFBB1'] = '\\u06D3';\n    t['\\uFBD3'] = '\\u06AD';\n    t['\\uFBD4'] = '\\u06AD';\n    t['\\uFBD5'] = '\\u06AD';\n    t['\\uFBD6'] = '\\u06AD';\n    t['\\uFBD7'] = '\\u06C7';\n    t['\\uFBD8'] = '\\u06C7';\n    t['\\uFBD9'] = '\\u06C6';\n    t['\\uFBDA'] = '\\u06C6';\n    t['\\uFBDB'] = '\\u06C8';\n    t['\\uFBDC'] = '\\u06C8';\n    t['\\uFBDD'] = '\\u0677';\n    t['\\uFBDE'] = '\\u06CB';\n    t['\\uFBDF'] = '\\u06CB';\n    t['\\uFBE0'] = '\\u06C5';\n    t['\\uFBE1'] = '\\u06C5';\n    t['\\uFBE2'] = '\\u06C9';\n    t['\\uFBE3'] = '\\u06C9';\n    t['\\uFBE4'] = '\\u06D0';\n    t['\\uFBE5'] = '\\u06D0';\n    t['\\uFBE6'] = '\\u06D0';\n    t['\\uFBE7'] = '\\u06D0';\n    t['\\uFBE8'] = '\\u0649';\n    t['\\uFBE9'] = '\\u0649';\n    t['\\uFBEA'] = '\\u0626\\u0627';\n    t['\\uFBEB'] = '\\u0626\\u0627';\n    t['\\uFBEC'] = '\\u0626\\u06D5';\n    t['\\uFBED'] = '\\u0626\\u06D5';\n    t['\\uFBEE'] = '\\u0626\\u0648';\n    t['\\uFBEF'] = '\\u0626\\u0648';\n    t['\\uFBF0'] = '\\u0626\\u06C7';\n    t['\\uFBF1'] = '\\u0626\\u06C7';\n    t['\\uFBF2'] = '\\u0626\\u06C6';\n    t['\\uFBF3'] = '\\u0626\\u06C6';\n    t['\\uFBF4'] = '\\u0626\\u06C8';\n    t['\\uFBF5'] = '\\u0626\\u06C8';\n    t['\\uFBF6'] = '\\u0626\\u06D0';\n    t['\\uFBF7'] = '\\u0626\\u06D0';\n    t['\\uFBF8'] = '\\u0626\\u06D0';\n    t['\\uFBF9'] = '\\u0626\\u0649';\n    t['\\uFBFA'] = '\\u0626\\u0649';\n    t['\\uFBFB'] = '\\u0626\\u0649';\n    t['\\uFBFC'] = '\\u06CC';\n    t['\\uFBFD'] = '\\u06CC';\n    t['\\uFBFE'] = '\\u06CC';\n    t['\\uFBFF'] = '\\u06CC';\n    t['\\uFC00'] = '\\u0626\\u062C';\n    t['\\uFC01'] = '\\u0626\\u062D';\n    t['\\uFC02'] = '\\u0626\\u0645';\n    t['\\uFC03'] = '\\u0626\\u0649';\n    t['\\uFC04'] = '\\u0626\\u064A';\n    t['\\uFC05'] = '\\u0628\\u062C';\n    t['\\uFC06'] = '\\u0628\\u062D';\n    t['\\uFC07'] = '\\u0628\\u062E';\n    t['\\uFC08'] = '\\u0628\\u0645';\n    t['\\uFC09'] = '\\u0628\\u0649';\n    t['\\uFC0A'] = '\\u0628\\u064A';\n    t['\\uFC0B'] = '\\u062A\\u062C';\n    t['\\uFC0C'] = '\\u062A\\u062D';\n    t['\\uFC0D'] = '\\u062A\\u062E';\n    t['\\uFC0E'] = '\\u062A\\u0645';\n    t['\\uFC0F'] = '\\u062A\\u0649';\n    t['\\uFC10'] = '\\u062A\\u064A';\n    t['\\uFC11'] = '\\u062B\\u062C';\n    t['\\uFC12'] = '\\u062B\\u0645';\n    t['\\uFC13'] = '\\u062B\\u0649';\n    t['\\uFC14'] = '\\u062B\\u064A';\n    t['\\uFC15'] = '\\u062C\\u062D';\n    t['\\uFC16'] = '\\u062C\\u0645';\n    t['\\uFC17'] = '\\u062D\\u062C';\n    t['\\uFC18'] = '\\u062D\\u0645';\n    t['\\uFC19'] = '\\u062E\\u062C';\n    t['\\uFC1A'] = '\\u062E\\u062D';\n    t['\\uFC1B'] = '\\u062E\\u0645';\n    t['\\uFC1C'] = '\\u0633\\u062C';\n    t['\\uFC1D'] = '\\u0633\\u062D';\n    t['\\uFC1E'] = '\\u0633\\u062E';\n    t['\\uFC1F'] = '\\u0633\\u0645';\n    t['\\uFC20'] = '\\u0635\\u062D';\n    t['\\uFC21'] = '\\u0635\\u0645';\n    t['\\uFC22'] = '\\u0636\\u062C';\n    t['\\uFC23'] = '\\u0636\\u062D';\n    t['\\uFC24'] = '\\u0636\\u062E';\n    t['\\uFC25'] = '\\u0636\\u0645';\n    t['\\uFC26'] = '\\u0637\\u062D';\n    t['\\uFC27'] = '\\u0637\\u0645';\n    t['\\uFC28'] = '\\u0638\\u0645';\n    t['\\uFC29'] = '\\u0639\\u062C';\n    t['\\uFC2A'] = '\\u0639\\u0645';\n    t['\\uFC2B'] = '\\u063A\\u062C';\n    t['\\uFC2C'] = '\\u063A\\u0645';\n    t['\\uFC2D'] = '\\u0641\\u062C';\n    t['\\uFC2E'] = '\\u0641\\u062D';\n    t['\\uFC2F'] = '\\u0641\\u062E';\n    t['\\uFC30'] = '\\u0641\\u0645';\n    t['\\uFC31'] = '\\u0641\\u0649';\n    t['\\uFC32'] = '\\u0641\\u064A';\n    t['\\uFC33'] = '\\u0642\\u062D';\n    t['\\uFC34'] = '\\u0642\\u0645';\n    t['\\uFC35'] = '\\u0642\\u0649';\n    t['\\uFC36'] = '\\u0642\\u064A';\n    t['\\uFC37'] = '\\u0643\\u0627';\n    t['\\uFC38'] = '\\u0643\\u062C';\n    t['\\uFC39'] = '\\u0643\\u062D';\n    t['\\uFC3A'] = '\\u0643\\u062E';\n    t['\\uFC3B'] = '\\u0643\\u0644';\n    t['\\uFC3C'] = '\\u0643\\u0645';\n    t['\\uFC3D'] = '\\u0643\\u0649';\n    t['\\uFC3E'] = '\\u0643\\u064A';\n    t['\\uFC3F'] = '\\u0644\\u062C';\n    t['\\uFC40'] = '\\u0644\\u062D';\n    t['\\uFC41'] = '\\u0644\\u062E';\n    t['\\uFC42'] = '\\u0644\\u0645';\n    t['\\uFC43'] = '\\u0644\\u0649';\n    t['\\uFC44'] = '\\u0644\\u064A';\n    t['\\uFC45'] = '\\u0645\\u062C';\n    t['\\uFC46'] = '\\u0645\\u062D';\n    t['\\uFC47'] = '\\u0645\\u062E';\n    t['\\uFC48'] = '\\u0645\\u0645';\n    t['\\uFC49'] = '\\u0645\\u0649';\n    t['\\uFC4A'] = '\\u0645\\u064A';\n    t['\\uFC4B'] = '\\u0646\\u062C';\n    t['\\uFC4C'] = '\\u0646\\u062D';\n    t['\\uFC4D'] = '\\u0646\\u062E';\n    t['\\uFC4E'] = '\\u0646\\u0645';\n    t['\\uFC4F'] = '\\u0646\\u0649';\n    t['\\uFC50'] = '\\u0646\\u064A';\n    t['\\uFC51'] = '\\u0647\\u062C';\n    t['\\uFC52'] = '\\u0647\\u0645';\n    t['\\uFC53'] = '\\u0647\\u0649';\n    t['\\uFC54'] = '\\u0647\\u064A';\n    t['\\uFC55'] = '\\u064A\\u062C';\n    t['\\uFC56'] = '\\u064A\\u062D';\n    t['\\uFC57'] = '\\u064A\\u062E';\n    t['\\uFC58'] = '\\u064A\\u0645';\n    t['\\uFC59'] = '\\u064A\\u0649';\n    t['\\uFC5A'] = '\\u064A\\u064A';\n    t['\\uFC5B'] = '\\u0630\\u0670';\n    t['\\uFC5C'] = '\\u0631\\u0670';\n    t['\\uFC5D'] = '\\u0649\\u0670';\n    t['\\uFC5E'] = '\\u0020\\u064C\\u0651';\n    t['\\uFC5F'] = '\\u0020\\u064D\\u0651';\n    t['\\uFC60'] = '\\u0020\\u064E\\u0651';\n    t['\\uFC61'] = '\\u0020\\u064F\\u0651';\n    t['\\uFC62'] = '\\u0020\\u0650\\u0651';\n    t['\\uFC63'] = '\\u0020\\u0651\\u0670';\n    t['\\uFC64'] = '\\u0626\\u0631';\n    t['\\uFC65'] = '\\u0626\\u0632';\n    t['\\uFC66'] = '\\u0626\\u0645';\n    t['\\uFC67'] = '\\u0626\\u0646';\n    t['\\uFC68'] = '\\u0626\\u0649';\n    t['\\uFC69'] = '\\u0626\\u064A';\n    t['\\uFC6A'] = '\\u0628\\u0631';\n    t['\\uFC6B'] = '\\u0628\\u0632';\n    t['\\uFC6C'] = '\\u0628\\u0645';\n    t['\\uFC6D'] = '\\u0628\\u0646';\n    t['\\uFC6E'] = '\\u0628\\u0649';\n    t['\\uFC6F'] = '\\u0628\\u064A';\n    t['\\uFC70'] = '\\u062A\\u0631';\n    t['\\uFC71'] = '\\u062A\\u0632';\n    t['\\uFC72'] = '\\u062A\\u0645';\n    t['\\uFC73'] = '\\u062A\\u0646';\n    t['\\uFC74'] = '\\u062A\\u0649';\n    t['\\uFC75'] = '\\u062A\\u064A';\n    t['\\uFC76'] = '\\u062B\\u0631';\n    t['\\uFC77'] = '\\u062B\\u0632';\n    t['\\uFC78'] = '\\u062B\\u0645';\n    t['\\uFC79'] = '\\u062B\\u0646';\n    t['\\uFC7A'] = '\\u062B\\u0649';\n    t['\\uFC7B'] = '\\u062B\\u064A';\n    t['\\uFC7C'] = '\\u0641\\u0649';\n    t['\\uFC7D'] = '\\u0641\\u064A';\n    t['\\uFC7E'] = '\\u0642\\u0649';\n    t['\\uFC7F'] = '\\u0642\\u064A';\n    t['\\uFC80'] = '\\u0643\\u0627';\n    t['\\uFC81'] = '\\u0643\\u0644';\n    t['\\uFC82'] = '\\u0643\\u0645';\n    t['\\uFC83'] = '\\u0643\\u0649';\n    t['\\uFC84'] = '\\u0643\\u064A';\n    t['\\uFC85'] = '\\u0644\\u0645';\n    t['\\uFC86'] = '\\u0644\\u0649';\n    t['\\uFC87'] = '\\u0644\\u064A';\n    t['\\uFC88'] = '\\u0645\\u0627';\n    t['\\uFC89'] = '\\u0645\\u0645';\n    t['\\uFC8A'] = '\\u0646\\u0631';\n    t['\\uFC8B'] = '\\u0646\\u0632';\n    t['\\uFC8C'] = '\\u0646\\u0645';\n    t['\\uFC8D'] = '\\u0646\\u0646';\n    t['\\uFC8E'] = '\\u0646\\u0649';\n    t['\\uFC8F'] = '\\u0646\\u064A';\n    t['\\uFC90'] = '\\u0649\\u0670';\n    t['\\uFC91'] = '\\u064A\\u0631';\n    t['\\uFC92'] = '\\u064A\\u0632';\n    t['\\uFC93'] = '\\u064A\\u0645';\n    t['\\uFC94'] = '\\u064A\\u0646';\n    t['\\uFC95'] = '\\u064A\\u0649';\n    t['\\uFC96'] = '\\u064A\\u064A';\n    t['\\uFC97'] = '\\u0626\\u062C';\n    t['\\uFC98'] = '\\u0626\\u062D';\n    t['\\uFC99'] = '\\u0626\\u062E';\n    t['\\uFC9A'] = '\\u0626\\u0645';\n    t['\\uFC9B'] = '\\u0626\\u0647';\n    t['\\uFC9C'] = '\\u0628\\u062C';\n    t['\\uFC9D'] = '\\u0628\\u062D';\n    t['\\uFC9E'] = '\\u0628\\u062E';\n    t['\\uFC9F'] = '\\u0628\\u0645';\n    t['\\uFCA0'] = '\\u0628\\u0647';\n    t['\\uFCA1'] = '\\u062A\\u062C';\n    t['\\uFCA2'] = '\\u062A\\u062D';\n    t['\\uFCA3'] = '\\u062A\\u062E';\n    t['\\uFCA4'] = '\\u062A\\u0645';\n    t['\\uFCA5'] = '\\u062A\\u0647';\n    t['\\uFCA6'] = '\\u062B\\u0645';\n    t['\\uFCA7'] = '\\u062C\\u062D';\n    t['\\uFCA8'] = '\\u062C\\u0645';\n    t['\\uFCA9'] = '\\u062D\\u062C';\n    t['\\uFCAA'] = '\\u062D\\u0645';\n    t['\\uFCAB'] = '\\u062E\\u062C';\n    t['\\uFCAC'] = '\\u062E\\u0645';\n    t['\\uFCAD'] = '\\u0633\\u062C';\n    t['\\uFCAE'] = '\\u0633\\u062D';\n    t['\\uFCAF'] = '\\u0633\\u062E';\n    t['\\uFCB0'] = '\\u0633\\u0645';\n    t['\\uFCB1'] = '\\u0635\\u062D';\n    t['\\uFCB2'] = '\\u0635\\u062E';\n    t['\\uFCB3'] = '\\u0635\\u0645';\n    t['\\uFCB4'] = '\\u0636\\u062C';\n    t['\\uFCB5'] = '\\u0636\\u062D';\n    t['\\uFCB6'] = '\\u0636\\u062E';\n    t['\\uFCB7'] = '\\u0636\\u0645';\n    t['\\uFCB8'] = '\\u0637\\u062D';\n    t['\\uFCB9'] = '\\u0638\\u0645';\n    t['\\uFCBA'] = '\\u0639\\u062C';\n    t['\\uFCBB'] = '\\u0639\\u0645';\n    t['\\uFCBC'] = '\\u063A\\u062C';\n    t['\\uFCBD'] = '\\u063A\\u0645';\n    t['\\uFCBE'] = '\\u0641\\u062C';\n    t['\\uFCBF'] = '\\u0641\\u062D';\n    t['\\uFCC0'] = '\\u0641\\u062E';\n    t['\\uFCC1'] = '\\u0641\\u0645';\n    t['\\uFCC2'] = '\\u0642\\u062D';\n    t['\\uFCC3'] = '\\u0642\\u0645';\n    t['\\uFCC4'] = '\\u0643\\u062C';\n    t['\\uFCC5'] = '\\u0643\\u062D';\n    t['\\uFCC6'] = '\\u0643\\u062E';\n    t['\\uFCC7'] = '\\u0643\\u0644';\n    t['\\uFCC8'] = '\\u0643\\u0645';\n    t['\\uFCC9'] = '\\u0644\\u062C';\n    t['\\uFCCA'] = '\\u0644\\u062D';\n    t['\\uFCCB'] = '\\u0644\\u062E';\n    t['\\uFCCC'] = '\\u0644\\u0645';\n    t['\\uFCCD'] = '\\u0644\\u0647';\n    t['\\uFCCE'] = '\\u0645\\u062C';\n    t['\\uFCCF'] = '\\u0645\\u062D';\n    t['\\uFCD0'] = '\\u0645\\u062E';\n    t['\\uFCD1'] = '\\u0645\\u0645';\n    t['\\uFCD2'] = '\\u0646\\u062C';\n    t['\\uFCD3'] = '\\u0646\\u062D';\n    t['\\uFCD4'] = '\\u0646\\u062E';\n    t['\\uFCD5'] = '\\u0646\\u0645';\n    t['\\uFCD6'] = '\\u0646\\u0647';\n    t['\\uFCD7'] = '\\u0647\\u062C';\n    t['\\uFCD8'] = '\\u0647\\u0645';\n    t['\\uFCD9'] = '\\u0647\\u0670';\n    t['\\uFCDA'] = '\\u064A\\u062C';\n    t['\\uFCDB'] = '\\u064A\\u062D';\n    t['\\uFCDC'] = '\\u064A\\u062E';\n    t['\\uFCDD'] = '\\u064A\\u0645';\n    t['\\uFCDE'] = '\\u064A\\u0647';\n    t['\\uFCDF'] = '\\u0626\\u0645';\n    t['\\uFCE0'] = '\\u0626\\u0647';\n    t['\\uFCE1'] = '\\u0628\\u0645';\n    t['\\uFCE2'] = '\\u0628\\u0647';\n    t['\\uFCE3'] = '\\u062A\\u0645';\n    t['\\uFCE4'] = '\\u062A\\u0647';\n    t['\\uFCE5'] = '\\u062B\\u0645';\n    t['\\uFCE6'] = '\\u062B\\u0647';\n    t['\\uFCE7'] = '\\u0633\\u0645';\n    t['\\uFCE8'] = '\\u0633\\u0647';\n    t['\\uFCE9'] = '\\u0634\\u0645';\n    t['\\uFCEA'] = '\\u0634\\u0647';\n    t['\\uFCEB'] = '\\u0643\\u0644';\n    t['\\uFCEC'] = '\\u0643\\u0645';\n    t['\\uFCED'] = '\\u0644\\u0645';\n    t['\\uFCEE'] = '\\u0646\\u0645';\n    t['\\uFCEF'] = '\\u0646\\u0647';\n    t['\\uFCF0'] = '\\u064A\\u0645';\n    t['\\uFCF1'] = '\\u064A\\u0647';\n    t['\\uFCF2'] = '\\u0640\\u064E\\u0651';\n    t['\\uFCF3'] = '\\u0640\\u064F\\u0651';\n    t['\\uFCF4'] = '\\u0640\\u0650\\u0651';\n    t['\\uFCF5'] = '\\u0637\\u0649';\n    t['\\uFCF6'] = '\\u0637\\u064A';\n    t['\\uFCF7'] = '\\u0639\\u0649';\n    t['\\uFCF8'] = '\\u0639\\u064A';\n    t['\\uFCF9'] = '\\u063A\\u0649';\n    t['\\uFCFA'] = '\\u063A\\u064A';\n    t['\\uFCFB'] = '\\u0633\\u0649';\n    t['\\uFCFC'] = '\\u0633\\u064A';\n    t['\\uFCFD'] = '\\u0634\\u0649';\n    t['\\uFCFE'] = '\\u0634\\u064A';\n    t['\\uFCFF'] = '\\u062D\\u0649';\n    t['\\uFD00'] = '\\u062D\\u064A';\n    t['\\uFD01'] = '\\u062C\\u0649';\n    t['\\uFD02'] = '\\u062C\\u064A';\n    t['\\uFD03'] = '\\u062E\\u0649';\n    t['\\uFD04'] = '\\u062E\\u064A';\n    t['\\uFD05'] = '\\u0635\\u0649';\n    t['\\uFD06'] = '\\u0635\\u064A';\n    t['\\uFD07'] = '\\u0636\\u0649';\n    t['\\uFD08'] = '\\u0636\\u064A';\n    t['\\uFD09'] = '\\u0634\\u062C';\n    t['\\uFD0A'] = '\\u0634\\u062D';\n    t['\\uFD0B'] = '\\u0634\\u062E';\n    t['\\uFD0C'] = '\\u0634\\u0645';\n    t['\\uFD0D'] = '\\u0634\\u0631';\n    t['\\uFD0E'] = '\\u0633\\u0631';\n    t['\\uFD0F'] = '\\u0635\\u0631';\n    t['\\uFD10'] = '\\u0636\\u0631';\n    t['\\uFD11'] = '\\u0637\\u0649';\n    t['\\uFD12'] = '\\u0637\\u064A';\n    t['\\uFD13'] = '\\u0639\\u0649';\n    t['\\uFD14'] = '\\u0639\\u064A';\n    t['\\uFD15'] = '\\u063A\\u0649';\n    t['\\uFD16'] = '\\u063A\\u064A';\n    t['\\uFD17'] = '\\u0633\\u0649';\n    t['\\uFD18'] = '\\u0633\\u064A';\n    t['\\uFD19'] = '\\u0634\\u0649';\n    t['\\uFD1A'] = '\\u0634\\u064A';\n    t['\\uFD1B'] = '\\u062D\\u0649';\n    t['\\uFD1C'] = '\\u062D\\u064A';\n    t['\\uFD1D'] = '\\u062C\\u0649';\n    t['\\uFD1E'] = '\\u062C\\u064A';\n    t['\\uFD1F'] = '\\u062E\\u0649';\n    t['\\uFD20'] = '\\u062E\\u064A';\n    t['\\uFD21'] = '\\u0635\\u0649';\n    t['\\uFD22'] = '\\u0635\\u064A';\n    t['\\uFD23'] = '\\u0636\\u0649';\n    t['\\uFD24'] = '\\u0636\\u064A';\n    t['\\uFD25'] = '\\u0634\\u062C';\n    t['\\uFD26'] = '\\u0634\\u062D';\n    t['\\uFD27'] = '\\u0634\\u062E';\n    t['\\uFD28'] = '\\u0634\\u0645';\n    t['\\uFD29'] = '\\u0634\\u0631';\n    t['\\uFD2A'] = '\\u0633\\u0631';\n    t['\\uFD2B'] = '\\u0635\\u0631';\n    t['\\uFD2C'] = '\\u0636\\u0631';\n    t['\\uFD2D'] = '\\u0634\\u062C';\n    t['\\uFD2E'] = '\\u0634\\u062D';\n    t['\\uFD2F'] = '\\u0634\\u062E';\n    t['\\uFD30'] = '\\u0634\\u0645';\n    t['\\uFD31'] = '\\u0633\\u0647';\n    t['\\uFD32'] = '\\u0634\\u0647';\n    t['\\uFD33'] = '\\u0637\\u0645';\n    t['\\uFD34'] = '\\u0633\\u062C';\n    t['\\uFD35'] = '\\u0633\\u062D';\n    t['\\uFD36'] = '\\u0633\\u062E';\n    t['\\uFD37'] = '\\u0634\\u062C';\n    t['\\uFD38'] = '\\u0634\\u062D';\n    t['\\uFD39'] = '\\u0634\\u062E';\n    t['\\uFD3A'] = '\\u0637\\u0645';\n    t['\\uFD3B'] = '\\u0638\\u0645';\n    t['\\uFD3C'] = '\\u0627\\u064B';\n    t['\\uFD3D'] = '\\u0627\\u064B';\n    t['\\uFD50'] = '\\u062A\\u062C\\u0645';\n    t['\\uFD51'] = '\\u062A\\u062D\\u062C';\n    t['\\uFD52'] = '\\u062A\\u062D\\u062C';\n    t['\\uFD53'] = '\\u062A\\u062D\\u0645';\n    t['\\uFD54'] = '\\u062A\\u062E\\u0645';\n    t['\\uFD55'] = '\\u062A\\u0645\\u062C';\n    t['\\uFD56'] = '\\u062A\\u0645\\u062D';\n    t['\\uFD57'] = '\\u062A\\u0645\\u062E';\n    t['\\uFD58'] = '\\u062C\\u0645\\u062D';\n    t['\\uFD59'] = '\\u062C\\u0645\\u062D';\n    t['\\uFD5A'] = '\\u062D\\u0645\\u064A';\n    t['\\uFD5B'] = '\\u062D\\u0645\\u0649';\n    t['\\uFD5C'] = '\\u0633\\u062D\\u062C';\n    t['\\uFD5D'] = '\\u0633\\u062C\\u062D';\n    t['\\uFD5E'] = '\\u0633\\u062C\\u0649';\n    t['\\uFD5F'] = '\\u0633\\u0645\\u062D';\n    t['\\uFD60'] = '\\u0633\\u0645\\u062D';\n    t['\\uFD61'] = '\\u0633\\u0645\\u062C';\n    t['\\uFD62'] = '\\u0633\\u0645\\u0645';\n    t['\\uFD63'] = '\\u0633\\u0645\\u0645';\n    t['\\uFD64'] = '\\u0635\\u062D\\u062D';\n    t['\\uFD65'] = '\\u0635\\u062D\\u062D';\n    t['\\uFD66'] = '\\u0635\\u0645\\u0645';\n    t['\\uFD67'] = '\\u0634\\u062D\\u0645';\n    t['\\uFD68'] = '\\u0634\\u062D\\u0645';\n    t['\\uFD69'] = '\\u0634\\u062C\\u064A';\n    t['\\uFD6A'] = '\\u0634\\u0645\\u062E';\n    t['\\uFD6B'] = '\\u0634\\u0645\\u062E';\n    t['\\uFD6C'] = '\\u0634\\u0645\\u0645';\n    t['\\uFD6D'] = '\\u0634\\u0645\\u0645';\n    t['\\uFD6E'] = '\\u0636\\u062D\\u0649';\n    t['\\uFD6F'] = '\\u0636\\u062E\\u0645';\n    t['\\uFD70'] = '\\u0636\\u062E\\u0645';\n    t['\\uFD71'] = '\\u0637\\u0645\\u062D';\n    t['\\uFD72'] = '\\u0637\\u0645\\u062D';\n    t['\\uFD73'] = '\\u0637\\u0645\\u0645';\n    t['\\uFD74'] = '\\u0637\\u0645\\u064A';\n    t['\\uFD75'] = '\\u0639\\u062C\\u0645';\n    t['\\uFD76'] = '\\u0639\\u0645\\u0645';\n    t['\\uFD77'] = '\\u0639\\u0645\\u0645';\n    t['\\uFD78'] = '\\u0639\\u0645\\u0649';\n    t['\\uFD79'] = '\\u063A\\u0645\\u0645';\n    t['\\uFD7A'] = '\\u063A\\u0645\\u064A';\n    t['\\uFD7B'] = '\\u063A\\u0645\\u0649';\n    t['\\uFD7C'] = '\\u0641\\u062E\\u0645';\n    t['\\uFD7D'] = '\\u0641\\u062E\\u0645';\n    t['\\uFD7E'] = '\\u0642\\u0645\\u062D';\n    t['\\uFD7F'] = '\\u0642\\u0645\\u0645';\n    t['\\uFD80'] = '\\u0644\\u062D\\u0645';\n    t['\\uFD81'] = '\\u0644\\u062D\\u064A';\n    t['\\uFD82'] = '\\u0644\\u062D\\u0649';\n    t['\\uFD83'] = '\\u0644\\u062C\\u062C';\n    t['\\uFD84'] = '\\u0644\\u062C\\u062C';\n    t['\\uFD85'] = '\\u0644\\u062E\\u0645';\n    t['\\uFD86'] = '\\u0644\\u062E\\u0645';\n    t['\\uFD87'] = '\\u0644\\u0645\\u062D';\n    t['\\uFD88'] = '\\u0644\\u0645\\u062D';\n    t['\\uFD89'] = '\\u0645\\u062D\\u062C';\n    t['\\uFD8A'] = '\\u0645\\u062D\\u0645';\n    t['\\uFD8B'] = '\\u0645\\u062D\\u064A';\n    t['\\uFD8C'] = '\\u0645\\u062C\\u062D';\n    t['\\uFD8D'] = '\\u0645\\u062C\\u0645';\n    t['\\uFD8E'] = '\\u0645\\u062E\\u062C';\n    t['\\uFD8F'] = '\\u0645\\u062E\\u0645';\n    t['\\uFD92'] = '\\u0645\\u062C\\u062E';\n    t['\\uFD93'] = '\\u0647\\u0645\\u062C';\n    t['\\uFD94'] = '\\u0647\\u0645\\u0645';\n    t['\\uFD95'] = '\\u0646\\u062D\\u0645';\n    t['\\uFD96'] = '\\u0646\\u062D\\u0649';\n    t['\\uFD97'] = '\\u0646\\u062C\\u0645';\n    t['\\uFD98'] = '\\u0646\\u062C\\u0645';\n    t['\\uFD99'] = '\\u0646\\u062C\\u0649';\n    t['\\uFD9A'] = '\\u0646\\u0645\\u064A';\n    t['\\uFD9B'] = '\\u0646\\u0645\\u0649';\n    t['\\uFD9C'] = '\\u064A\\u0645\\u0645';\n    t['\\uFD9D'] = '\\u064A\\u0645\\u0645';\n    t['\\uFD9E'] = '\\u0628\\u062E\\u064A';\n    t['\\uFD9F'] = '\\u062A\\u062C\\u064A';\n    t['\\uFDA0'] = '\\u062A\\u062C\\u0649';\n    t['\\uFDA1'] = '\\u062A\\u062E\\u064A';\n    t['\\uFDA2'] = '\\u062A\\u062E\\u0649';\n    t['\\uFDA3'] = '\\u062A\\u0645\\u064A';\n    t['\\uFDA4'] = '\\u062A\\u0645\\u0649';\n    t['\\uFDA5'] = '\\u062C\\u0645\\u064A';\n    t['\\uFDA6'] = '\\u062C\\u062D\\u0649';\n    t['\\uFDA7'] = '\\u062C\\u0645\\u0649';\n    t['\\uFDA8'] = '\\u0633\\u062E\\u0649';\n    t['\\uFDA9'] = '\\u0635\\u062D\\u064A';\n    t['\\uFDAA'] = '\\u0634\\u062D\\u064A';\n    t['\\uFDAB'] = '\\u0636\\u062D\\u064A';\n    t['\\uFDAC'] = '\\u0644\\u062C\\u064A';\n    t['\\uFDAD'] = '\\u0644\\u0645\\u064A';\n    t['\\uFDAE'] = '\\u064A\\u062D\\u064A';\n    t['\\uFDAF'] = '\\u064A\\u062C\\u064A';\n    t['\\uFDB0'] = '\\u064A\\u0645\\u064A';\n    t['\\uFDB1'] = '\\u0645\\u0645\\u064A';\n    t['\\uFDB2'] = '\\u0642\\u0645\\u064A';\n    t['\\uFDB3'] = '\\u0646\\u062D\\u064A';\n    t['\\uFDB4'] = '\\u0642\\u0645\\u062D';\n    t['\\uFDB5'] = '\\u0644\\u062D\\u0645';\n    t['\\uFDB6'] = '\\u0639\\u0645\\u064A';\n    t['\\uFDB7'] = '\\u0643\\u0645\\u064A';\n    t['\\uFDB8'] = '\\u0646\\u062C\\u062D';\n    t['\\uFDB9'] = '\\u0645\\u062E\\u064A';\n    t['\\uFDBA'] = '\\u0644\\u062C\\u0645';\n    t['\\uFDBB'] = '\\u0643\\u0645\\u0645';\n    t['\\uFDBC'] = '\\u0644\\u062C\\u0645';\n    t['\\uFDBD'] = '\\u0646\\u062C\\u062D';\n    t['\\uFDBE'] = '\\u062C\\u062D\\u064A';\n    t['\\uFDBF'] = '\\u062D\\u062C\\u064A';\n    t['\\uFDC0'] = '\\u0645\\u062C\\u064A';\n    t['\\uFDC1'] = '\\u0641\\u0645\\u064A';\n    t['\\uFDC2'] = '\\u0628\\u062D\\u064A';\n    t['\\uFDC3'] = '\\u0643\\u0645\\u0645';\n    t['\\uFDC4'] = '\\u0639\\u062C\\u0645';\n    t['\\uFDC5'] = '\\u0635\\u0645\\u0645';\n    t['\\uFDC6'] = '\\u0633\\u062E\\u064A';\n    t['\\uFDC7'] = '\\u0646\\u062C\\u064A';\n    t['\\uFE49'] = '\\u203E';\n    t['\\uFE4A'] = '\\u203E';\n    t['\\uFE4B'] = '\\u203E';\n    t['\\uFE4C'] = '\\u203E';\n    t['\\uFE4D'] = '\\u005F';\n    t['\\uFE4E'] = '\\u005F';\n    t['\\uFE4F'] = '\\u005F';\n    t['\\uFE80'] = '\\u0621';\n    t['\\uFE81'] = '\\u0622';\n    t['\\uFE82'] = '\\u0622';\n    t['\\uFE83'] = '\\u0623';\n    t['\\uFE84'] = '\\u0623';\n    t['\\uFE85'] = '\\u0624';\n    t['\\uFE86'] = '\\u0624';\n    t['\\uFE87'] = '\\u0625';\n    t['\\uFE88'] = '\\u0625';\n    t['\\uFE89'] = '\\u0626';\n    t['\\uFE8A'] = '\\u0626';\n    t['\\uFE8B'] = '\\u0626';\n    t['\\uFE8C'] = '\\u0626';\n    t['\\uFE8D'] = '\\u0627';\n    t['\\uFE8E'] = '\\u0627';\n    t['\\uFE8F'] = '\\u0628';\n    t['\\uFE90'] = '\\u0628';\n    t['\\uFE91'] = '\\u0628';\n    t['\\uFE92'] = '\\u0628';\n    t['\\uFE93'] = '\\u0629';\n    t['\\uFE94'] = '\\u0629';\n    t['\\uFE95'] = '\\u062A';\n    t['\\uFE96'] = '\\u062A';\n    t['\\uFE97'] = '\\u062A';\n    t['\\uFE98'] = '\\u062A';\n    t['\\uFE99'] = '\\u062B';\n    t['\\uFE9A'] = '\\u062B';\n    t['\\uFE9B'] = '\\u062B';\n    t['\\uFE9C'] = '\\u062B';\n    t['\\uFE9D'] = '\\u062C';\n    t['\\uFE9E'] = '\\u062C';\n    t['\\uFE9F'] = '\\u062C';\n    t['\\uFEA0'] = '\\u062C';\n    t['\\uFEA1'] = '\\u062D';\n    t['\\uFEA2'] = '\\u062D';\n    t['\\uFEA3'] = '\\u062D';\n    t['\\uFEA4'] = '\\u062D';\n    t['\\uFEA5'] = '\\u062E';\n    t['\\uFEA6'] = '\\u062E';\n    t['\\uFEA7'] = '\\u062E';\n    t['\\uFEA8'] = '\\u062E';\n    t['\\uFEA9'] = '\\u062F';\n    t['\\uFEAA'] = '\\u062F';\n    t['\\uFEAB'] = '\\u0630';\n    t['\\uFEAC'] = '\\u0630';\n    t['\\uFEAD'] = '\\u0631';\n    t['\\uFEAE'] = '\\u0631';\n    t['\\uFEAF'] = '\\u0632';\n    t['\\uFEB0'] = '\\u0632';\n    t['\\uFEB1'] = '\\u0633';\n    t['\\uFEB2'] = '\\u0633';\n    t['\\uFEB3'] = '\\u0633';\n    t['\\uFEB4'] = '\\u0633';\n    t['\\uFEB5'] = '\\u0634';\n    t['\\uFEB6'] = '\\u0634';\n    t['\\uFEB7'] = '\\u0634';\n    t['\\uFEB8'] = '\\u0634';\n    t['\\uFEB9'] = '\\u0635';\n    t['\\uFEBA'] = '\\u0635';\n    t['\\uFEBB'] = '\\u0635';\n    t['\\uFEBC'] = '\\u0635';\n    t['\\uFEBD'] = '\\u0636';\n    t['\\uFEBE'] = '\\u0636';\n    t['\\uFEBF'] = '\\u0636';\n    t['\\uFEC0'] = '\\u0636';\n    t['\\uFEC1'] = '\\u0637';\n    t['\\uFEC2'] = '\\u0637';\n    t['\\uFEC3'] = '\\u0637';\n    t['\\uFEC4'] = '\\u0637';\n    t['\\uFEC5'] = '\\u0638';\n    t['\\uFEC6'] = '\\u0638';\n    t['\\uFEC7'] = '\\u0638';\n    t['\\uFEC8'] = '\\u0638';\n    t['\\uFEC9'] = '\\u0639';\n    t['\\uFECA'] = '\\u0639';\n    t['\\uFECB'] = '\\u0639';\n    t['\\uFECC'] = '\\u0639';\n    t['\\uFECD'] = '\\u063A';\n    t['\\uFECE'] = '\\u063A';\n    t['\\uFECF'] = '\\u063A';\n    t['\\uFED0'] = '\\u063A';\n    t['\\uFED1'] = '\\u0641';\n    t['\\uFED2'] = '\\u0641';\n    t['\\uFED3'] = '\\u0641';\n    t['\\uFED4'] = '\\u0641';\n    t['\\uFED5'] = '\\u0642';\n    t['\\uFED6'] = '\\u0642';\n    t['\\uFED7'] = '\\u0642';\n    t['\\uFED8'] = '\\u0642';\n    t['\\uFED9'] = '\\u0643';\n    t['\\uFEDA'] = '\\u0643';\n    t['\\uFEDB'] = '\\u0643';\n    t['\\uFEDC'] = '\\u0643';\n    t['\\uFEDD'] = '\\u0644';\n    t['\\uFEDE'] = '\\u0644';\n    t['\\uFEDF'] = '\\u0644';\n    t['\\uFEE0'] = '\\u0644';\n    t['\\uFEE1'] = '\\u0645';\n    t['\\uFEE2'] = '\\u0645';\n    t['\\uFEE3'] = '\\u0645';\n    t['\\uFEE4'] = '\\u0645';\n    t['\\uFEE5'] = '\\u0646';\n    t['\\uFEE6'] = '\\u0646';\n    t['\\uFEE7'] = '\\u0646';\n    t['\\uFEE8'] = '\\u0646';\n    t['\\uFEE9'] = '\\u0647';\n    t['\\uFEEA'] = '\\u0647';\n    t['\\uFEEB'] = '\\u0647';\n    t['\\uFEEC'] = '\\u0647';\n    t['\\uFEED'] = '\\u0648';\n    t['\\uFEEE'] = '\\u0648';\n    t['\\uFEEF'] = '\\u0649';\n    t['\\uFEF0'] = '\\u0649';\n    t['\\uFEF1'] = '\\u064A';\n    t['\\uFEF2'] = '\\u064A';\n    t['\\uFEF3'] = '\\u064A';\n    t['\\uFEF4'] = '\\u064A';\n    t['\\uFEF5'] = '\\u0644\\u0622';\n    t['\\uFEF6'] = '\\u0644\\u0622';\n    t['\\uFEF7'] = '\\u0644\\u0623';\n    t['\\uFEF8'] = '\\u0644\\u0623';\n    t['\\uFEF9'] = '\\u0644\\u0625';\n    t['\\uFEFA'] = '\\u0644\\u0625';\n    t['\\uFEFB'] = '\\u0644\\u0627';\n    t['\\uFEFC'] = '\\u0644\\u0627';\n   });\n   function reverseIfRtl(chars) {\n    var charsLength = chars.length;\n    if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n     return chars;\n    }\n    var s = '';\n    for (var ii = charsLength - 1; ii >= 0; ii--) {\n     s += chars[ii];\n    }\n    return s;\n   }\n   exports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\n   exports.reverseIfRtl = reverseIfRtl;\n   exports.getUnicodeRangeFor = getUnicodeRangeFor;\n   exports.getNormalizedUnicodes = getNormalizedUnicodes;\n   exports.getUnicodeForGlyph = getUnicodeForGlyph;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsCorePsParser = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives);\n  }(this, function (exports, sharedUtil, corePrimitives) {\n   var error = sharedUtil.error;\n   var isSpace = sharedUtil.isSpace;\n   var EOF = corePrimitives.EOF;\n   var PostScriptParser = function PostScriptParserClosure() {\n    function PostScriptParser(lexer) {\n     this.lexer = lexer;\n     this.operators = [];\n     this.token = null;\n     this.prev = null;\n    }\n    PostScriptParser.prototype = {\n     nextToken: function PostScriptParser_nextToken() {\n      this.prev = this.token;\n      this.token = this.lexer.getToken();\n     },\n     accept: function PostScriptParser_accept(type) {\n      if (this.token.type === type) {\n       this.nextToken();\n       return true;\n      }\n      return false;\n     },\n     expect: function PostScriptParser_expect(type) {\n      if (this.accept(type)) {\n       return true;\n      }\n      error('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\n     },\n     parse: function PostScriptParser_parse() {\n      this.nextToken();\n      this.expect(PostScriptTokenTypes.LBRACE);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      return this.operators;\n     },\n     parseBlock: function PostScriptParser_parseBlock() {\n      while (true) {\n       if (this.accept(PostScriptTokenTypes.NUMBER)) {\n        this.operators.push(this.prev.value);\n       } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n        this.operators.push(this.prev.value);\n       } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n        this.parseCondition();\n       } else {\n        return;\n       }\n      }\n     },\n     parseCondition: function PostScriptParser_parseCondition() {\n      var conditionLocation = this.operators.length;\n      this.operators.push(null, null);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      if (this.accept(PostScriptTokenTypes.IF)) {\n       this.operators[conditionLocation] = this.operators.length;\n       this.operators[conditionLocation + 1] = 'jz';\n      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n       var jumpLocation = this.operators.length;\n       this.operators.push(null, null);\n       var endOfTrue = this.operators.length;\n       this.parseBlock();\n       this.expect(PostScriptTokenTypes.RBRACE);\n       this.expect(PostScriptTokenTypes.IFELSE);\n       this.operators[jumpLocation] = this.operators.length;\n       this.operators[jumpLocation + 1] = 'j';\n       this.operators[conditionLocation] = endOfTrue;\n       this.operators[conditionLocation + 1] = 'jz';\n      } else {\n       error('PS Function: error parsing conditional.');\n      }\n     }\n    };\n    return PostScriptParser;\n   }();\n   var PostScriptTokenTypes = {\n    LBRACE: 0,\n    RBRACE: 1,\n    NUMBER: 2,\n    OPERATOR: 3,\n    IF: 4,\n    IFELSE: 5\n   };\n   var PostScriptToken = function PostScriptTokenClosure() {\n    function PostScriptToken(type, value) {\n     this.type = type;\n     this.value = value;\n    }\n    var opCache = Object.create(null);\n    PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n     var opValue = opCache[op];\n     if (opValue) {\n      return opValue;\n     }\n     return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n    };\n    PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\n    PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\n    PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n    PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\n    return PostScriptToken;\n   }();\n   var PostScriptLexer = function PostScriptLexerClosure() {\n    function PostScriptLexer(stream) {\n     this.stream = stream;\n     this.nextChar();\n     this.strBuf = [];\n    }\n    PostScriptLexer.prototype = {\n     nextChar: function PostScriptLexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n     },\n     getToken: function PostScriptLexer_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n       if (ch < 0) {\n        return EOF;\n       }\n       if (comment) {\n        if (ch === 0x0A || ch === 0x0D) {\n         comment = false;\n        }\n       } else if (ch === 0x25) {\n        comment = true;\n       } else if (!isSpace(ch)) {\n        break;\n       }\n       ch = this.nextChar();\n      }\n      switch (ch | 0) {\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x2B:\n      case 0x2D:\n      case 0x2E:\n       return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n      case 0x7B:\n       this.nextChar();\n       return PostScriptToken.LBRACE;\n      case 0x7D:\n       this.nextChar();\n       return PostScriptToken.RBRACE;\n      }\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\n       strBuf.push(String.fromCharCode(ch));\n      }\n      var str = strBuf.join('');\n      switch (str.toLowerCase()) {\n      case 'if':\n       return PostScriptToken.IF;\n      case 'ifelse':\n       return PostScriptToken.IFELSE;\n      default:\n       return PostScriptToken.getOperator(str);\n      }\n     },\n     getNumber: function PostScriptLexer_getNumber() {\n      var ch = this.currentChar;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0) {\n       if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\n        strBuf.push(String.fromCharCode(ch));\n       } else {\n        break;\n       }\n      }\n      var value = parseFloat(strBuf.join(''));\n      if (isNaN(value)) {\n       error('Invalid floating point number: ' + value);\n      }\n      return value;\n     }\n    };\n    return PostScriptLexer;\n   }();\n   exports.PostScriptLexer = PostScriptLexer;\n   exports.PostScriptParser = PostScriptParser;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsCoreStream = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreJbig2, root.pdfjsCoreJpg, root.pdfjsCoreJpx);\n  }(this, function (exports, sharedUtil, corePrimitives, coreJbig2, coreJpg, coreJpx) {\n   var Util = sharedUtil.Util;\n   var error = sharedUtil.error;\n   var info = sharedUtil.info;\n   var isInt = sharedUtil.isInt;\n   var isArray = sharedUtil.isArray;\n   var createObjectURL = sharedUtil.createObjectURL;\n   var shadow = sharedUtil.shadow;\n   var warn = sharedUtil.warn;\n   var isSpace = sharedUtil.isSpace;\n   var Dict = corePrimitives.Dict;\n   var isDict = corePrimitives.isDict;\n   var isStream = corePrimitives.isStream;\n   var Jbig2Image = coreJbig2.Jbig2Image;\n   var JpegImage = coreJpg.JpegImage;\n   var JpxImage = coreJpx.JpxImage;\n   var Stream = function StreamClosure() {\n    function Stream(arrayBuffer, start, length, dict) {\n     this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n     this.start = start || 0;\n     this.pos = this.start;\n     this.end = start + length || this.bytes.length;\n     this.dict = dict;\n    }\n    Stream.prototype = {\n     get length() {\n      return this.end - this.start;\n     },\n     get isEmpty() {\n      return this.length === 0;\n     },\n     getByte: function Stream_getByte() {\n      if (this.pos >= this.end) {\n       return -1;\n      }\n      return this.bytes[this.pos++];\n     },\n     getUint16: function Stream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n       return -1;\n      }\n      return (b0 << 8) + b1;\n     },\n     getInt32: function Stream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n     },\n     getBytes: function Stream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n       return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n       end = strEnd;\n      }\n      this.pos = end;\n      return bytes.subarray(pos, end);\n     },\n     peekByte: function Stream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n     },\n     peekBytes: function Stream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n     },\n     skip: function Stream_skip(n) {\n      if (!n) {\n       n = 1;\n      }\n      this.pos += n;\n     },\n     reset: function Stream_reset() {\n      this.pos = this.start;\n     },\n     moveStart: function Stream_moveStart() {\n      this.start = this.pos;\n     },\n     makeSubStream: function Stream_makeSubStream(start, length, dict) {\n      return new Stream(this.bytes.buffer, start, length, dict);\n     },\n     isStream: true\n    };\n    return Stream;\n   }();\n   var StringStream = function StringStreamClosure() {\n    function StringStream(str) {\n     var length = str.length;\n     var bytes = new Uint8Array(length);\n     for (var n = 0; n < length; ++n) {\n      bytes[n] = str.charCodeAt(n);\n     }\n     Stream.call(this, bytes);\n    }\n    StringStream.prototype = Stream.prototype;\n    return StringStream;\n   }();\n   var DecodeStream = function DecodeStreamClosure() {\n    var emptyBuffer = new Uint8Array(0);\n    function DecodeStream(maybeMinBufferLength) {\n     this.pos = 0;\n     this.bufferLength = 0;\n     this.eof = false;\n     this.buffer = emptyBuffer;\n     this.minBufferLength = 512;\n     if (maybeMinBufferLength) {\n      while (this.minBufferLength < maybeMinBufferLength) {\n       this.minBufferLength *= 2;\n      }\n     }\n    }\n    DecodeStream.prototype = {\n     get isEmpty() {\n      while (!this.eof && this.bufferLength === 0) {\n       this.readBlock();\n      }\n      return this.bufferLength === 0;\n     },\n     ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n      var buffer = this.buffer;\n      if (requested <= buffer.byteLength) {\n       return buffer;\n      }\n      var size = this.minBufferLength;\n      while (size < requested) {\n       size *= 2;\n      }\n      var buffer2 = new Uint8Array(size);\n      buffer2.set(buffer);\n      return this.buffer = buffer2;\n     },\n     getByte: function DecodeStream_getByte() {\n      var pos = this.pos;\n      while (this.bufferLength <= pos) {\n       if (this.eof) {\n        return -1;\n       }\n       this.readBlock();\n      }\n      return this.buffer[this.pos++];\n     },\n     getUint16: function DecodeStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n       return -1;\n      }\n      return (b0 << 8) + b1;\n     },\n     getInt32: function DecodeStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n     },\n     getBytes: function DecodeStream_getBytes(length) {\n      var end, pos = this.pos;\n      if (length) {\n       this.ensureBuffer(pos + length);\n       end = pos + length;\n       while (!this.eof && this.bufferLength < end) {\n        this.readBlock();\n       }\n       var bufEnd = this.bufferLength;\n       if (end > bufEnd) {\n        end = bufEnd;\n       }\n      } else {\n       while (!this.eof) {\n        this.readBlock();\n       }\n       end = this.bufferLength;\n      }\n      this.pos = end;\n      return this.buffer.subarray(pos, end);\n     },\n     peekByte: function DecodeStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n     },\n     peekBytes: function DecodeStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n     },\n     makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n      var end = start + length;\n      while (this.bufferLength <= end && !this.eof) {\n       this.readBlock();\n      }\n      return new Stream(this.buffer, start, length, dict);\n     },\n     skip: function DecodeStream_skip(n) {\n      if (!n) {\n       n = 1;\n      }\n      this.pos += n;\n     },\n     reset: function DecodeStream_reset() {\n      this.pos = 0;\n     },\n     getBaseStreams: function DecodeStream_getBaseStreams() {\n      if (this.str && this.str.getBaseStreams) {\n       return this.str.getBaseStreams();\n      }\n      return [];\n     }\n    };\n    return DecodeStream;\n   }();\n   var StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n    function StreamsSequenceStream(streams) {\n     this.streams = streams;\n     DecodeStream.call(this, null);\n    }\n    StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n    StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n     var streams = this.streams;\n     if (streams.length === 0) {\n      this.eof = true;\n      return;\n     }\n     var stream = streams.shift();\n     var chunk = stream.getBytes();\n     var bufferLength = this.bufferLength;\n     var newLength = bufferLength + chunk.length;\n     var buffer = this.ensureBuffer(newLength);\n     buffer.set(chunk, bufferLength);\n     this.bufferLength = newLength;\n    };\n    StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n     var baseStreams = [];\n     for (var i = 0, ii = this.streams.length; i < ii; i++) {\n      var stream = this.streams[i];\n      if (stream.getBaseStreams) {\n       Util.appendToArray(baseStreams, stream.getBaseStreams());\n      }\n     }\n     return baseStreams;\n    };\n    return StreamsSequenceStream;\n   }();\n   var FlateStream = function FlateStreamClosure() {\n    var codeLenCodeMap = new Int32Array([\n     16,\n     17,\n     18,\n     0,\n     8,\n     7,\n     9,\n     6,\n     10,\n     5,\n     11,\n     4,\n     12,\n     3,\n     13,\n     2,\n     14,\n     1,\n     15\n    ]);\n    var lengthDecode = new Int32Array([\n     0x00003,\n     0x00004,\n     0x00005,\n     0x00006,\n     0x00007,\n     0x00008,\n     0x00009,\n     0x0000a,\n     0x1000b,\n     0x1000d,\n     0x1000f,\n     0x10011,\n     0x20013,\n     0x20017,\n     0x2001b,\n     0x2001f,\n     0x30023,\n     0x3002b,\n     0x30033,\n     0x3003b,\n     0x40043,\n     0x40053,\n     0x40063,\n     0x40073,\n     0x50083,\n     0x500a3,\n     0x500c3,\n     0x500e3,\n     0x00102,\n     0x00102,\n     0x00102\n    ]);\n    var distDecode = new Int32Array([\n     0x00001,\n     0x00002,\n     0x00003,\n     0x00004,\n     0x10005,\n     0x10007,\n     0x20009,\n     0x2000d,\n     0x30011,\n     0x30019,\n     0x40021,\n     0x40031,\n     0x50041,\n     0x50061,\n     0x60081,\n     0x600c1,\n     0x70101,\n     0x70181,\n     0x80201,\n     0x80301,\n     0x90401,\n     0x90601,\n     0xa0801,\n     0xa0c01,\n     0xb1001,\n     0xb1801,\n     0xc2001,\n     0xc3001,\n     0xd4001,\n     0xd6001\n    ]);\n    var fixedLitCodeTab = [\n     new Int32Array([\n      0x70100,\n      0x80050,\n      0x80010,\n      0x80118,\n      0x70110,\n      0x80070,\n      0x80030,\n      0x900c0,\n      0x70108,\n      0x80060,\n      0x80020,\n      0x900a0,\n      0x80000,\n      0x80080,\n      0x80040,\n      0x900e0,\n      0x70104,\n      0x80058,\n      0x80018,\n      0x90090,\n      0x70114,\n      0x80078,\n      0x80038,\n      0x900d0,\n      0x7010c,\n      0x80068,\n      0x80028,\n      0x900b0,\n      0x80008,\n      0x80088,\n      0x80048,\n      0x900f0,\n      0x70102,\n      0x80054,\n      0x80014,\n      0x8011c,\n      0x70112,\n      0x80074,\n      0x80034,\n      0x900c8,\n      0x7010a,\n      0x80064,\n      0x80024,\n      0x900a8,\n      0x80004,\n      0x80084,\n      0x80044,\n      0x900e8,\n      0x70106,\n      0x8005c,\n      0x8001c,\n      0x90098,\n      0x70116,\n      0x8007c,\n      0x8003c,\n      0x900d8,\n      0x7010e,\n      0x8006c,\n      0x8002c,\n      0x900b8,\n      0x8000c,\n      0x8008c,\n      0x8004c,\n      0x900f8,\n      0x70101,\n      0x80052,\n      0x80012,\n      0x8011a,\n      0x70111,\n      0x80072,\n      0x80032,\n      0x900c4,\n      0x70109,\n      0x80062,\n      0x80022,\n      0x900a4,\n      0x80002,\n      0x80082,\n      0x80042,\n      0x900e4,\n      0x70105,\n      0x8005a,\n      0x8001a,\n      0x90094,\n      0x70115,\n      0x8007a,\n      0x8003a,\n      0x900d4,\n      0x7010d,\n      0x8006a,\n      0x8002a,\n      0x900b4,\n      0x8000a,\n      0x8008a,\n      0x8004a,\n      0x900f4,\n      0x70103,\n      0x80056,\n      0x80016,\n      0x8011e,\n      0x70113,\n      0x80076,\n      0x80036,\n      0x900cc,\n      0x7010b,\n      0x80066,\n      0x80026,\n      0x900ac,\n      0x80006,\n      0x80086,\n      0x80046,\n      0x900ec,\n      0x70107,\n      0x8005e,\n      0x8001e,\n      0x9009c,\n      0x70117,\n      0x8007e,\n      0x8003e,\n      0x900dc,\n      0x7010f,\n      0x8006e,\n      0x8002e,\n      0x900bc,\n      0x8000e,\n      0x8008e,\n      0x8004e,\n      0x900fc,\n      0x70100,\n      0x80051,\n      0x80011,\n      0x80119,\n      0x70110,\n      0x80071,\n      0x80031,\n      0x900c2,\n      0x70108,\n      0x80061,\n      0x80021,\n      0x900a2,\n      0x80001,\n      0x80081,\n      0x80041,\n      0x900e2,\n      0x70104,\n      0x80059,\n      0x80019,\n      0x90092,\n      0x70114,\n      0x80079,\n      0x80039,\n      0x900d2,\n      0x7010c,\n      0x80069,\n      0x80029,\n      0x900b2,\n      0x80009,\n      0x80089,\n      0x80049,\n      0x900f2,\n      0x70102,\n      0x80055,\n      0x80015,\n      0x8011d,\n      0x70112,\n      0x80075,\n      0x80035,\n      0x900ca,\n      0x7010a,\n      0x80065,\n      0x80025,\n      0x900aa,\n      0x80005,\n      0x80085,\n      0x80045,\n      0x900ea,\n      0x70106,\n      0x8005d,\n      0x8001d,\n      0x9009a,\n      0x70116,\n      0x8007d,\n      0x8003d,\n      0x900da,\n      0x7010e,\n      0x8006d,\n      0x8002d,\n      0x900ba,\n      0x8000d,\n      0x8008d,\n      0x8004d,\n      0x900fa,\n      0x70101,\n      0x80053,\n      0x80013,\n      0x8011b,\n      0x70111,\n      0x80073,\n      0x80033,\n      0x900c6,\n      0x70109,\n      0x80063,\n      0x80023,\n      0x900a6,\n      0x80003,\n      0x80083,\n      0x80043,\n      0x900e6,\n      0x70105,\n      0x8005b,\n      0x8001b,\n      0x90096,\n      0x70115,\n      0x8007b,\n      0x8003b,\n      0x900d6,\n      0x7010d,\n      0x8006b,\n      0x8002b,\n      0x900b6,\n      0x8000b,\n      0x8008b,\n      0x8004b,\n      0x900f6,\n      0x70103,\n      0x80057,\n      0x80017,\n      0x8011f,\n      0x70113,\n      0x80077,\n      0x80037,\n      0x900ce,\n      0x7010b,\n      0x80067,\n      0x80027,\n      0x900ae,\n      0x80007,\n      0x80087,\n      0x80047,\n      0x900ee,\n      0x70107,\n      0x8005f,\n      0x8001f,\n      0x9009e,\n      0x70117,\n      0x8007f,\n      0x8003f,\n      0x900de,\n      0x7010f,\n      0x8006f,\n      0x8002f,\n      0x900be,\n      0x8000f,\n      0x8008f,\n      0x8004f,\n      0x900fe,\n      0x70100,\n      0x80050,\n      0x80010,\n      0x80118,\n      0x70110,\n      0x80070,\n      0x80030,\n      0x900c1,\n      0x70108,\n      0x80060,\n      0x80020,\n      0x900a1,\n      0x80000,\n      0x80080,\n      0x80040,\n      0x900e1,\n      0x70104,\n      0x80058,\n      0x80018,\n      0x90091,\n      0x70114,\n      0x80078,\n      0x80038,\n      0x900d1,\n      0x7010c,\n      0x80068,\n      0x80028,\n      0x900b1,\n      0x80008,\n      0x80088,\n      0x80048,\n      0x900f1,\n      0x70102,\n      0x80054,\n      0x80014,\n      0x8011c,\n      0x70112,\n      0x80074,\n      0x80034,\n      0x900c9,\n      0x7010a,\n      0x80064,\n      0x80024,\n      0x900a9,\n      0x80004,\n      0x80084,\n      0x80044,\n      0x900e9,\n      0x70106,\n      0x8005c,\n      0x8001c,\n      0x90099,\n      0x70116,\n      0x8007c,\n      0x8003c,\n      0x900d9,\n      0x7010e,\n      0x8006c,\n      0x8002c,\n      0x900b9,\n      0x8000c,\n      0x8008c,\n      0x8004c,\n      0x900f9,\n      0x70101,\n      0x80052,\n      0x80012,\n      0x8011a,\n      0x70111,\n      0x80072,\n      0x80032,\n      0x900c5,\n      0x70109,\n      0x80062,\n      0x80022,\n      0x900a5,\n      0x80002,\n      0x80082,\n      0x80042,\n      0x900e5,\n      0x70105,\n      0x8005a,\n      0x8001a,\n      0x90095,\n      0x70115,\n      0x8007a,\n      0x8003a,\n      0x900d5,\n      0x7010d,\n      0x8006a,\n      0x8002a,\n      0x900b5,\n      0x8000a,\n      0x8008a,\n      0x8004a,\n      0x900f5,\n      0x70103,\n      0x80056,\n      0x80016,\n      0x8011e,\n      0x70113,\n      0x80076,\n      0x80036,\n      0x900cd,\n      0x7010b,\n      0x80066,\n      0x80026,\n      0x900ad,\n      0x80006,\n      0x80086,\n      0x80046,\n      0x900ed,\n      0x70107,\n      0x8005e,\n      0x8001e,\n      0x9009d,\n      0x70117,\n      0x8007e,\n      0x8003e,\n      0x900dd,\n      0x7010f,\n      0x8006e,\n      0x8002e,\n      0x900bd,\n      0x8000e,\n      0x8008e,\n      0x8004e,\n      0x900fd,\n      0x70100,\n      0x80051,\n      0x80011,\n      0x80119,\n      0x70110,\n      0x80071,\n      0x80031,\n      0x900c3,\n      0x70108,\n      0x80061,\n      0x80021,\n      0x900a3,\n      0x80001,\n      0x80081,\n      0x80041,\n      0x900e3,\n      0x70104,\n      0x80059,\n      0x80019,\n      0x90093,\n      0x70114,\n      0x80079,\n      0x80039,\n      0x900d3,\n      0x7010c,\n      0x80069,\n      0x80029,\n      0x900b3,\n      0x80009,\n      0x80089,\n      0x80049,\n      0x900f3,\n      0x70102,\n      0x80055,\n      0x80015,\n      0x8011d,\n      0x70112,\n      0x80075,\n      0x80035,\n      0x900cb,\n      0x7010a,\n      0x80065,\n      0x80025,\n      0x900ab,\n      0x80005,\n      0x80085,\n      0x80045,\n      0x900eb,\n      0x70106,\n      0x8005d,\n      0x8001d,\n      0x9009b,\n      0x70116,\n      0x8007d,\n      0x8003d,\n      0x900db,\n      0x7010e,\n      0x8006d,\n      0x8002d,\n      0x900bb,\n      0x8000d,\n      0x8008d,\n      0x8004d,\n      0x900fb,\n      0x70101,\n      0x80053,\n      0x80013,\n      0x8011b,\n      0x70111,\n      0x80073,\n      0x80033,\n      0x900c7,\n      0x70109,\n      0x80063,\n      0x80023,\n      0x900a7,\n      0x80003,\n      0x80083,\n      0x80043,\n      0x900e7,\n      0x70105,\n      0x8005b,\n      0x8001b,\n      0x90097,\n      0x70115,\n      0x8007b,\n      0x8003b,\n      0x900d7,\n      0x7010d,\n      0x8006b,\n      0x8002b,\n      0x900b7,\n      0x8000b,\n      0x8008b,\n      0x8004b,\n      0x900f7,\n      0x70103,\n      0x80057,\n      0x80017,\n      0x8011f,\n      0x70113,\n      0x80077,\n      0x80037,\n      0x900cf,\n      0x7010b,\n      0x80067,\n      0x80027,\n      0x900af,\n      0x80007,\n      0x80087,\n      0x80047,\n      0x900ef,\n      0x70107,\n      0x8005f,\n      0x8001f,\n      0x9009f,\n      0x70117,\n      0x8007f,\n      0x8003f,\n      0x900df,\n      0x7010f,\n      0x8006f,\n      0x8002f,\n      0x900bf,\n      0x8000f,\n      0x8008f,\n      0x8004f,\n      0x900ff\n     ]),\n     9\n    ];\n    var fixedDistCodeTab = [\n     new Int32Array([\n      0x50000,\n      0x50010,\n      0x50008,\n      0x50018,\n      0x50004,\n      0x50014,\n      0x5000c,\n      0x5001c,\n      0x50002,\n      0x50012,\n      0x5000a,\n      0x5001a,\n      0x50006,\n      0x50016,\n      0x5000e,\n      0x00000,\n      0x50001,\n      0x50011,\n      0x50009,\n      0x50019,\n      0x50005,\n      0x50015,\n      0x5000d,\n      0x5001d,\n      0x50003,\n      0x50013,\n      0x5000b,\n      0x5001b,\n      0x50007,\n      0x50017,\n      0x5000f,\n      0x00000\n     ]),\n     5\n    ];\n    function FlateStream(str, maybeLength) {\n     this.str = str;\n     this.dict = str.dict;\n     var cmf = str.getByte();\n     var flg = str.getByte();\n     if (cmf === -1 || flg === -1) {\n      error('Invalid header in flate stream: ' + cmf + ', ' + flg);\n     }\n     if ((cmf & 0x0f) !== 0x08) {\n      error('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n     }\n     if (((cmf << 8) + flg) % 31 !== 0) {\n      error('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n     }\n     if (flg & 0x20) {\n      error('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n     }\n     this.codeSize = 0;\n     this.codeBuf = 0;\n     DecodeStream.call(this, maybeLength);\n    }\n    FlateStream.prototype = Object.create(DecodeStream.prototype);\n    FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n     var str = this.str;\n     var codeSize = this.codeSize;\n     var codeBuf = this.codeBuf;\n     var b;\n     while (codeSize < bits) {\n      if ((b = str.getByte()) === -1) {\n       error('Bad encoding in flate stream');\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n     }\n     b = codeBuf & (1 << bits) - 1;\n     this.codeBuf = codeBuf >> bits;\n     this.codeSize = codeSize -= bits;\n     return b;\n    };\n    FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n     var str = this.str;\n     var codes = table[0];\n     var maxLen = table[1];\n     var codeSize = this.codeSize;\n     var codeBuf = this.codeBuf;\n     var b;\n     while (codeSize < maxLen) {\n      if ((b = str.getByte()) === -1) {\n       break;\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n     }\n     var code = codes[codeBuf & (1 << maxLen) - 1];\n     var codeLen = code >> 16;\n     var codeVal = code & 0xffff;\n     if (codeLen < 1 || codeSize < codeLen) {\n      error('Bad encoding in flate stream');\n     }\n     this.codeBuf = codeBuf >> codeLen;\n     this.codeSize = codeSize - codeLen;\n     return codeVal;\n    };\n    FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n     var n = lengths.length;\n     var maxLen = 0;\n     var i;\n     for (i = 0; i < n; ++i) {\n      if (lengths[i] > maxLen) {\n       maxLen = lengths[i];\n      }\n     }\n     var size = 1 << maxLen;\n     var codes = new Int32Array(size);\n     for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n      for (var val = 0; val < n; ++val) {\n       if (lengths[val] === len) {\n        var code2 = 0;\n        var t = code;\n        for (i = 0; i < len; ++i) {\n         code2 = code2 << 1 | t & 1;\n         t >>= 1;\n        }\n        for (i = code2; i < size; i += skip) {\n         codes[i] = len << 16 | val;\n        }\n        ++code;\n       }\n      }\n     }\n     return [\n      codes,\n      maxLen\n     ];\n    };\n    FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n     var buffer, len;\n     var str = this.str;\n     var hdr = this.getBits(3);\n     if (hdr & 1) {\n      this.eof = true;\n     }\n     hdr >>= 1;\n     if (hdr === 0) {\n      var b;\n      if ((b = str.getByte()) === -1) {\n       error('Bad block header in flate stream');\n      }\n      var blockLen = b;\n      if ((b = str.getByte()) === -1) {\n       error('Bad block header in flate stream');\n      }\n      blockLen |= b << 8;\n      if ((b = str.getByte()) === -1) {\n       error('Bad block header in flate stream');\n      }\n      var check = b;\n      if ((b = str.getByte()) === -1) {\n       error('Bad block header in flate stream');\n      }\n      check |= b << 8;\n      if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n       error('Bad uncompressed block length in flate stream');\n      }\n      this.codeBuf = 0;\n      this.codeSize = 0;\n      var bufferLength = this.bufferLength;\n      buffer = this.ensureBuffer(bufferLength + blockLen);\n      var end = bufferLength + blockLen;\n      this.bufferLength = end;\n      if (blockLen === 0) {\n       if (str.peekByte() === -1) {\n        this.eof = true;\n       }\n      } else {\n       for (var n = bufferLength; n < end; ++n) {\n        if ((b = str.getByte()) === -1) {\n         this.eof = true;\n         break;\n        }\n        buffer[n] = b;\n       }\n      }\n      return;\n     }\n     var litCodeTable;\n     var distCodeTable;\n     if (hdr === 1) {\n      litCodeTable = fixedLitCodeTab;\n      distCodeTable = fixedDistCodeTab;\n     } else if (hdr === 2) {\n      var numLitCodes = this.getBits(5) + 257;\n      var numDistCodes = this.getBits(5) + 1;\n      var numCodeLenCodes = this.getBits(4) + 4;\n      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n      var i;\n      for (i = 0; i < numCodeLenCodes; ++i) {\n       codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n      }\n      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n      len = 0;\n      i = 0;\n      var codes = numLitCodes + numDistCodes;\n      var codeLengths = new Uint8Array(codes);\n      var bitsLength, bitsOffset, what;\n      while (i < codes) {\n       var code = this.getCode(codeLenCodeTab);\n       if (code === 16) {\n        bitsLength = 2;\n        bitsOffset = 3;\n        what = len;\n       } else if (code === 17) {\n        bitsLength = 3;\n        bitsOffset = 3;\n        what = len = 0;\n       } else if (code === 18) {\n        bitsLength = 7;\n        bitsOffset = 11;\n        what = len = 0;\n       } else {\n        codeLengths[i++] = len = code;\n        continue;\n       }\n       var repeatLength = this.getBits(bitsLength) + bitsOffset;\n       while (repeatLength-- > 0) {\n        codeLengths[i++] = what;\n       }\n      }\n      litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n      distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n     } else {\n      error('Unknown block type in flate stream');\n     }\n     buffer = this.buffer;\n     var limit = buffer ? buffer.length : 0;\n     var pos = this.bufferLength;\n     while (true) {\n      var code1 = this.getCode(litCodeTable);\n      if (code1 < 256) {\n       if (pos + 1 >= limit) {\n        buffer = this.ensureBuffer(pos + 1);\n        limit = buffer.length;\n       }\n       buffer[pos++] = code1;\n       continue;\n      }\n      if (code1 === 256) {\n       this.bufferLength = pos;\n       return;\n      }\n      code1 -= 257;\n      code1 = lengthDecode[code1];\n      var code2 = code1 >> 16;\n      if (code2 > 0) {\n       code2 = this.getBits(code2);\n      }\n      len = (code1 & 0xffff) + code2;\n      code1 = this.getCode(distCodeTable);\n      code1 = distDecode[code1];\n      code2 = code1 >> 16;\n      if (code2 > 0) {\n       code2 = this.getBits(code2);\n      }\n      var dist = (code1 & 0xffff) + code2;\n      if (pos + len >= limit) {\n       buffer = this.ensureBuffer(pos + len);\n       limit = buffer.length;\n      }\n      for (var k = 0; k < len; ++k, ++pos) {\n       buffer[pos] = buffer[pos - dist];\n      }\n     }\n    };\n    return FlateStream;\n   }();\n   var PredictorStream = function PredictorStreamClosure() {\n    function PredictorStream(str, maybeLength, params) {\n     if (!isDict(params)) {\n      return str;\n     }\n     var predictor = this.predictor = params.get('Predictor') || 1;\n     if (predictor <= 1) {\n      return str;\n     }\n     if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n      error('Unsupported predictor: ' + predictor);\n     }\n     if (predictor === 2) {\n      this.readBlock = this.readBlockTiff;\n     } else {\n      this.readBlock = this.readBlockPng;\n     }\n     this.str = str;\n     this.dict = str.dict;\n     var colors = this.colors = params.get('Colors') || 1;\n     var bits = this.bits = params.get('BitsPerComponent') || 8;\n     var columns = this.columns = params.get('Columns') || 1;\n     this.pixBytes = colors * bits + 7 >> 3;\n     this.rowBytes = columns * colors * bits + 7 >> 3;\n     DecodeStream.call(this, maybeLength);\n     return this;\n    }\n    PredictorStream.prototype = Object.create(DecodeStream.prototype);\n    PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n     var rowBytes = this.rowBytes;\n     var bufferLength = this.bufferLength;\n     var buffer = this.ensureBuffer(bufferLength + rowBytes);\n     var bits = this.bits;\n     var colors = this.colors;\n     var rawBytes = this.str.getBytes(rowBytes);\n     this.eof = !rawBytes.length;\n     if (this.eof) {\n      return;\n     }\n     var inbuf = 0, outbuf = 0;\n     var inbits = 0, outbits = 0;\n     var pos = bufferLength;\n     var i;\n     if (bits === 1 && colors === 1) {\n      for (i = 0; i < rowBytes; ++i) {\n       var c = rawBytes[i] ^ inbuf;\n       c ^= c >> 1;\n       c ^= c >> 2;\n       c ^= c >> 4;\n       inbuf = (c & 1) << 7;\n       buffer[pos++] = c;\n      }\n     } else if (bits === 8) {\n      for (i = 0; i < colors; ++i) {\n       buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; ++i) {\n       buffer[pos] = buffer[pos - colors] + rawBytes[i];\n       pos++;\n      }\n     } else {\n      var compArray = new Uint8Array(colors + 1);\n      var bitMask = (1 << bits) - 1;\n      var j = 0, k = bufferLength;\n      var columns = this.columns;\n      for (i = 0; i < columns; ++i) {\n       for (var kk = 0; kk < colors; ++kk) {\n        if (inbits < bits) {\n         inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\n         inbits += 8;\n        }\n        compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n        inbits -= bits;\n        outbuf = outbuf << bits | compArray[kk];\n        outbits += bits;\n        if (outbits >= 8) {\n         buffer[k++] = outbuf >> outbits - 8 & 0xFF;\n         outbits -= 8;\n        }\n       }\n      }\n      if (outbits > 0) {\n       buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n      }\n     }\n     this.bufferLength += rowBytes;\n    };\n    PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n     var rowBytes = this.rowBytes;\n     var pixBytes = this.pixBytes;\n     var predictor = this.str.getByte();\n     var rawBytes = this.str.getBytes(rowBytes);\n     this.eof = !rawBytes.length;\n     if (this.eof) {\n      return;\n     }\n     var bufferLength = this.bufferLength;\n     var buffer = this.ensureBuffer(bufferLength + rowBytes);\n     var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n     if (prevRow.length === 0) {\n      prevRow = new Uint8Array(rowBytes);\n     }\n     var i, j = bufferLength, up, c;\n     switch (predictor) {\n     case 0:\n      for (i = 0; i < rowBytes; ++i) {\n       buffer[j++] = rawBytes[i];\n      }\n      break;\n     case 1:\n      for (i = 0; i < pixBytes; ++i) {\n       buffer[j++] = rawBytes[i];\n      }\n      for (; i < rowBytes; ++i) {\n       buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\n       j++;\n      }\n      break;\n     case 2:\n      for (i = 0; i < rowBytes; ++i) {\n       buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\n      }\n      break;\n     case 3:\n      for (i = 0; i < pixBytes; ++i) {\n       buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n      }\n      for (; i < rowBytes; ++i) {\n       buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\n       j++;\n      }\n      break;\n     case 4:\n      for (i = 0; i < pixBytes; ++i) {\n       up = prevRow[i];\n       c = rawBytes[i];\n       buffer[j++] = up + c;\n      }\n      for (; i < rowBytes; ++i) {\n       up = prevRow[i];\n       var upLeft = prevRow[i - pixBytes];\n       var left = buffer[j - pixBytes];\n       var p = left + up - upLeft;\n       var pa = p - left;\n       if (pa < 0) {\n        pa = -pa;\n       }\n       var pb = p - up;\n       if (pb < 0) {\n        pb = -pb;\n       }\n       var pc = p - upLeft;\n       if (pc < 0) {\n        pc = -pc;\n       }\n       c = rawBytes[i];\n       if (pa <= pb && pa <= pc) {\n        buffer[j++] = left + c;\n       } else if (pb <= pc) {\n        buffer[j++] = up + c;\n       } else {\n        buffer[j++] = upLeft + c;\n       }\n      }\n      break;\n     default:\n      error('Unsupported predictor: ' + predictor);\n     }\n     this.bufferLength += rowBytes;\n    };\n    return PredictorStream;\n   }();\n   var JpegStream = function JpegStreamClosure() {\n    function JpegStream(stream, maybeLength, dict, params) {\n     var ch;\n     while ((ch = stream.getByte()) !== -1) {\n      if (ch === 0xFF) {\n       stream.skip(-1);\n       break;\n      }\n     }\n     this.stream = stream;\n     this.maybeLength = maybeLength;\n     this.dict = dict;\n     this.params = params;\n     DecodeStream.call(this, maybeLength);\n    }\n    JpegStream.prototype = Object.create(DecodeStream.prototype);\n    Object.defineProperty(JpegStream.prototype, 'bytes', {\n     get: function JpegStream_bytes() {\n      return shadow(this, 'bytes', this.stream.getBytes(this.maybeLength));\n     },\n     configurable: true\n    });\n    JpegStream.prototype.ensureBuffer = function JpegStream_ensureBuffer(req) {\n     if (this.bufferLength) {\n      return;\n     }\n     var jpegImage = new JpegImage();\n     var decodeArr = this.dict.getArray('Decode', 'D');\n     if (this.forceRGB && isArray(decodeArr)) {\n      var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n      var decodeArrLength = decodeArr.length;\n      var transform = new Int32Array(decodeArrLength);\n      var transformNeeded = false;\n      var maxValue = (1 << bitsPerComponent) - 1;\n      for (var i = 0; i < decodeArrLength; i += 2) {\n       transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n       transform[i + 1] = decodeArr[i] * maxValue | 0;\n       if (transform[i] !== 256 || transform[i + 1] !== 0) {\n        transformNeeded = true;\n       }\n      }\n      if (transformNeeded) {\n       jpegImage.decodeTransform = transform;\n      }\n     }\n     if (isDict(this.params)) {\n      var colorTransform = this.params.get('ColorTransform');\n      if (isInt(colorTransform)) {\n       jpegImage.colorTransform = colorTransform;\n      }\n     }\n     jpegImage.parse(this.bytes);\n     var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\n     this.buffer = data;\n     this.bufferLength = data.length;\n     this.eof = true;\n    };\n    JpegStream.prototype.getBytes = function JpegStream_getBytes(length) {\n     this.ensureBuffer();\n     return this.buffer;\n    };\n    JpegStream.prototype.getIR = function JpegStream_getIR(forceDataSchema) {\n     return createObjectURL(this.bytes, 'image/jpeg', forceDataSchema);\n    };\n    return JpegStream;\n   }();\n   var JpxStream = function JpxStreamClosure() {\n    function JpxStream(stream, maybeLength, dict, params) {\n     this.stream = stream;\n     this.maybeLength = maybeLength;\n     this.dict = dict;\n     this.params = params;\n     DecodeStream.call(this, maybeLength);\n    }\n    JpxStream.prototype = Object.create(DecodeStream.prototype);\n    Object.defineProperty(JpxStream.prototype, 'bytes', {\n     get: function JpxStream_bytes() {\n      return shadow(this, 'bytes', this.stream.getBytes(this.maybeLength));\n     },\n     configurable: true\n    });\n    JpxStream.prototype.ensureBuffer = function JpxStream_ensureBuffer(req) {\n     if (this.bufferLength) {\n      return;\n     }\n     var jpxImage = new JpxImage();\n     jpxImage.parse(this.bytes);\n     var width = jpxImage.width;\n     var height = jpxImage.height;\n     var componentsCount = jpxImage.componentsCount;\n     var tileCount = jpxImage.tiles.length;\n     if (tileCount === 1) {\n      this.buffer = jpxImage.tiles[0].items;\n     } else {\n      var data = new Uint8Array(width * height * componentsCount);\n      for (var k = 0; k < tileCount; k++) {\n       var tileComponents = jpxImage.tiles[k];\n       var tileWidth = tileComponents.width;\n       var tileHeight = tileComponents.height;\n       var tileLeft = tileComponents.left;\n       var tileTop = tileComponents.top;\n       var src = tileComponents.items;\n       var srcPosition = 0;\n       var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n       var imgRowSize = width * componentsCount;\n       var tileRowSize = tileWidth * componentsCount;\n       for (var j = 0; j < tileHeight; j++) {\n        var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n        data.set(rowBytes, dataPosition);\n        srcPosition += tileRowSize;\n        dataPosition += imgRowSize;\n       }\n      }\n      this.buffer = data;\n     }\n     this.bufferLength = this.buffer.length;\n     this.eof = true;\n    };\n    return JpxStream;\n   }();\n   var Jbig2Stream = function Jbig2StreamClosure() {\n    function Jbig2Stream(stream, maybeLength, dict, params) {\n     this.stream = stream;\n     this.maybeLength = maybeLength;\n     this.dict = dict;\n     this.params = params;\n     DecodeStream.call(this, maybeLength);\n    }\n    Jbig2Stream.prototype = Object.create(DecodeStream.prototype);\n    Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n     get: function Jbig2Stream_bytes() {\n      return shadow(this, 'bytes', this.stream.getBytes(this.maybeLength));\n     },\n     configurable: true\n    });\n    Jbig2Stream.prototype.ensureBuffer = function Jbig2Stream_ensureBuffer(req) {\n     if (this.bufferLength) {\n      return;\n     }\n     var jbig2Image = new Jbig2Image();\n     var chunks = [];\n     if (isDict(this.params)) {\n      var globalsStream = this.params.get('JBIG2Globals');\n      if (isStream(globalsStream)) {\n       var globals = globalsStream.getBytes();\n       chunks.push({\n        data: globals,\n        start: 0,\n        end: globals.length\n       });\n      }\n     }\n     chunks.push({\n      data: this.bytes,\n      start: 0,\n      end: this.bytes.length\n     });\n     var data = jbig2Image.parseChunks(chunks);\n     var dataLength = data.length;\n     for (var i = 0; i < dataLength; i++) {\n      data[i] ^= 0xFF;\n     }\n     this.buffer = data;\n     this.bufferLength = dataLength;\n     this.eof = true;\n    };\n    return Jbig2Stream;\n   }();\n   var DecryptStream = function DecryptStreamClosure() {\n    function DecryptStream(str, maybeLength, decrypt) {\n     this.str = str;\n     this.dict = str.dict;\n     this.decrypt = decrypt;\n     this.nextChunk = null;\n     this.initialized = false;\n     DecodeStream.call(this, maybeLength);\n    }\n    var chunkSize = 512;\n    DecryptStream.prototype = Object.create(DecodeStream.prototype);\n    DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n     var chunk;\n     if (this.initialized) {\n      chunk = this.nextChunk;\n     } else {\n      chunk = this.str.getBytes(chunkSize);\n      this.initialized = true;\n     }\n     if (!chunk || chunk.length === 0) {\n      this.eof = true;\n      return;\n     }\n     this.nextChunk = this.str.getBytes(chunkSize);\n     var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n     var decrypt = this.decrypt;\n     chunk = decrypt(chunk, !hasMoreData);\n     var bufferLength = this.bufferLength;\n     var i, n = chunk.length;\n     var buffer = this.ensureBuffer(bufferLength + n);\n     for (i = 0; i < n; i++) {\n      buffer[bufferLength++] = chunk[i];\n     }\n     this.bufferLength = bufferLength;\n    };\n    return DecryptStream;\n   }();\n   var Ascii85Stream = function Ascii85StreamClosure() {\n    function Ascii85Stream(str, maybeLength) {\n     this.str = str;\n     this.dict = str.dict;\n     this.input = new Uint8Array(5);\n     if (maybeLength) {\n      maybeLength = 0.8 * maybeLength;\n     }\n     DecodeStream.call(this, maybeLength);\n    }\n    Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n    Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n     var TILDA_CHAR = 0x7E;\n     var Z_LOWER_CHAR = 0x7A;\n     var EOF = -1;\n     var str = this.str;\n     var c = str.getByte();\n     while (isSpace(c)) {\n      c = str.getByte();\n     }\n     if (c === EOF || c === TILDA_CHAR) {\n      this.eof = true;\n      return;\n     }\n     var bufferLength = this.bufferLength, buffer;\n     var i;\n     if (c === Z_LOWER_CHAR) {\n      buffer = this.ensureBuffer(bufferLength + 4);\n      for (i = 0; i < 4; ++i) {\n       buffer[bufferLength + i] = 0;\n      }\n      this.bufferLength += 4;\n     } else {\n      var input = this.input;\n      input[0] = c;\n      for (i = 1; i < 5; ++i) {\n       c = str.getByte();\n       while (isSpace(c)) {\n        c = str.getByte();\n       }\n       input[i] = c;\n       if (c === EOF || c === TILDA_CHAR) {\n        break;\n       }\n      }\n      buffer = this.ensureBuffer(bufferLength + i - 1);\n      this.bufferLength += i - 1;\n      if (i < 5) {\n       for (; i < 5; ++i) {\n        input[i] = 0x21 + 84;\n       }\n       this.eof = true;\n      }\n      var t = 0;\n      for (i = 0; i < 5; ++i) {\n       t = t * 85 + (input[i] - 0x21);\n      }\n      for (i = 3; i >= 0; --i) {\n       buffer[bufferLength + i] = t & 0xFF;\n       t >>= 8;\n      }\n     }\n    };\n    return Ascii85Stream;\n   }();\n   var AsciiHexStream = function AsciiHexStreamClosure() {\n    function AsciiHexStream(str, maybeLength) {\n     this.str = str;\n     this.dict = str.dict;\n     this.firstDigit = -1;\n     if (maybeLength) {\n      maybeLength = 0.5 * maybeLength;\n     }\n     DecodeStream.call(this, maybeLength);\n    }\n    AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n    AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n     var UPSTREAM_BLOCK_SIZE = 8000;\n     var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n     if (!bytes.length) {\n      this.eof = true;\n      return;\n     }\n     var maxDecodeLength = bytes.length + 1 >> 1;\n     var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n     var bufferLength = this.bufferLength;\n     var firstDigit = this.firstDigit;\n     for (var i = 0, ii = bytes.length; i < ii; i++) {\n      var ch = bytes[i], digit;\n      if (ch >= 0x30 && ch <= 0x39) {\n       digit = ch & 0x0F;\n      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n       digit = (ch & 0x0F) + 9;\n      } else if (ch === 0x3E) {\n       this.eof = true;\n       break;\n      } else {\n       continue;\n      }\n      if (firstDigit < 0) {\n       firstDigit = digit;\n      } else {\n       buffer[bufferLength++] = firstDigit << 4 | digit;\n       firstDigit = -1;\n      }\n     }\n     if (firstDigit >= 0 && this.eof) {\n      buffer[bufferLength++] = firstDigit << 4;\n      firstDigit = -1;\n     }\n     this.firstDigit = firstDigit;\n     this.bufferLength = bufferLength;\n    };\n    return AsciiHexStream;\n   }();\n   var RunLengthStream = function RunLengthStreamClosure() {\n    function RunLengthStream(str, maybeLength) {\n     this.str = str;\n     this.dict = str.dict;\n     DecodeStream.call(this, maybeLength);\n    }\n    RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n    RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n     var repeatHeader = this.str.getBytes(2);\n     if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n      this.eof = true;\n      return;\n     }\n     var buffer;\n     var bufferLength = this.bufferLength;\n     var n = repeatHeader[0];\n     if (n < 128) {\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      buffer[bufferLength++] = repeatHeader[1];\n      if (n > 0) {\n       var source = this.str.getBytes(n);\n       buffer.set(source, bufferLength);\n       bufferLength += n;\n      }\n     } else {\n      n = 257 - n;\n      var b = repeatHeader[1];\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      for (var i = 0; i < n; i++) {\n       buffer[bufferLength++] = b;\n      }\n     }\n     this.bufferLength = bufferLength;\n    };\n    return RunLengthStream;\n   }();\n   var CCITTFaxStream = function CCITTFaxStreamClosure() {\n    var ccittEOL = -2;\n    var ccittEOF = -1;\n    var twoDimPass = 0;\n    var twoDimHoriz = 1;\n    var twoDimVert0 = 2;\n    var twoDimVertR1 = 3;\n    var twoDimVertL1 = 4;\n    var twoDimVertR2 = 5;\n    var twoDimVertL2 = 6;\n    var twoDimVertR3 = 7;\n    var twoDimVertL3 = 8;\n    var twoDimTable = [\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      7,\n      twoDimVertL3\n     ],\n     [\n      7,\n      twoDimVertR3\n     ],\n     [\n      6,\n      twoDimVertL2\n     ],\n     [\n      6,\n      twoDimVertL2\n     ],\n     [\n      6,\n      twoDimVertR2\n     ],\n     [\n      6,\n      twoDimVertR2\n     ],\n     [\n      4,\n      twoDimPass\n     ],\n     [\n      4,\n      twoDimPass\n     ],\n     [\n      4,\n      twoDimPass\n     ],\n     [\n      4,\n      twoDimPass\n     ],\n     [\n      4,\n      twoDimPass\n     ],\n     [\n      4,\n      twoDimPass\n     ],\n     [\n      4,\n      twoDimPass\n     ],\n     [\n      4,\n      twoDimPass\n     ],\n     [\n      3,\n      twoDimHoriz\n     ],\n     [\n      3,\n      twoDimHoriz\n     ],\n     [\n      3,\n      twoDimHoriz\n     ],\n     [\n      3,\n      twoDimHoriz\n     ],\n     [\n      3,\n      twoDimHoriz\n     ],\n     [\n      3,\n      twoDimHoriz\n     ],\n     [\n      3,\n      twoDimHoriz\n     ],\n     [\n      3,\n      twoDimHoriz\n     ],\n     [\n      3,\n      twoDimHoriz\n     ],\n     [\n      3,\n      twoDimHoriz\n     ],\n     [\n      3,\n      twoDimHoriz\n     ],\n     [\n      3,\n      twoDimHoriz\n     ],\n     [\n      3,\n      twoDimHoriz\n     ],\n     [\n      3,\n      twoDimHoriz\n     ],\n     [\n      3,\n      twoDimHoriz\n     ],\n     [\n      3,\n      twoDimHoriz\n     ],\n     [\n      3,\n      twoDimVertL1\n     ],\n     [\n      3,\n      twoDimVertL1\n     ],\n     [\n      3,\n      twoDimVertL1\n     ],\n     [\n      3,\n      twoDimVertL1\n     ],\n     [\n      3,\n      twoDimVertL1\n     ],\n     [\n      3,\n      twoDimVertL1\n     ],\n     [\n      3,\n      twoDimVertL1\n     ],\n     [\n      3,\n      twoDimVertL1\n     ],\n     [\n      3,\n      twoDimVertL1\n     ],\n     [\n      3,\n      twoDimVertL1\n     ],\n     [\n      3,\n      twoDimVertL1\n     ],\n     [\n      3,\n      twoDimVertL1\n     ],\n     [\n      3,\n      twoDimVertL1\n     ],\n     [\n      3,\n      twoDimVertL1\n     ],\n     [\n      3,\n      twoDimVertL1\n     ],\n     [\n      3,\n      twoDimVertL1\n     ],\n     [\n      3,\n      twoDimVertR1\n     ],\n     [\n      3,\n      twoDimVertR1\n     ],\n     [\n      3,\n      twoDimVertR1\n     ],\n     [\n      3,\n      twoDimVertR1\n     ],\n     [\n      3,\n      twoDimVertR1\n     ],\n     [\n      3,\n      twoDimVertR1\n     ],\n     [\n      3,\n      twoDimVertR1\n     ],\n     [\n      3,\n      twoDimVertR1\n     ],\n     [\n      3,\n      twoDimVertR1\n     ],\n     [\n      3,\n      twoDimVertR1\n     ],\n     [\n      3,\n      twoDimVertR1\n     ],\n     [\n      3,\n      twoDimVertR1\n     ],\n     [\n      3,\n      twoDimVertR1\n     ],\n     [\n      3,\n      twoDimVertR1\n     ],\n     [\n      3,\n      twoDimVertR1\n     ],\n     [\n      3,\n      twoDimVertR1\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ],\n     [\n      1,\n      twoDimVert0\n     ]\n    ];\n    var whiteTable1 = [\n     [\n      -1,\n      -1\n     ],\n     [\n      12,\n      ccittEOL\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      11,\n      1792\n     ],\n     [\n      11,\n      1792\n     ],\n     [\n      12,\n      1984\n     ],\n     [\n      12,\n      2048\n     ],\n     [\n      12,\n      2112\n     ],\n     [\n      12,\n      2176\n     ],\n     [\n      12,\n      2240\n     ],\n     [\n      12,\n      2304\n     ],\n     [\n      11,\n      1856\n     ],\n     [\n      11,\n      1856\n     ],\n     [\n      11,\n      1920\n     ],\n     [\n      11,\n      1920\n     ],\n     [\n      12,\n      2368\n     ],\n     [\n      12,\n      2432\n     ],\n     [\n      12,\n      2496\n     ],\n     [\n      12,\n      2560\n     ]\n    ];\n    var whiteTable2 = [\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      8,\n      29\n     ],\n     [\n      8,\n      29\n     ],\n     [\n      8,\n      30\n     ],\n     [\n      8,\n      30\n     ],\n     [\n      8,\n      45\n     ],\n     [\n      8,\n      45\n     ],\n     [\n      8,\n      46\n     ],\n     [\n      8,\n      46\n     ],\n     [\n      7,\n      22\n     ],\n     [\n      7,\n      22\n     ],\n     [\n      7,\n      22\n     ],\n     [\n      7,\n      22\n     ],\n     [\n      7,\n      23\n     ],\n     [\n      7,\n      23\n     ],\n     [\n      7,\n      23\n     ],\n     [\n      7,\n      23\n     ],\n     [\n      8,\n      47\n     ],\n     [\n      8,\n      47\n     ],\n     [\n      8,\n      48\n     ],\n     [\n      8,\n      48\n     ],\n     [\n      6,\n      13\n     ],\n     [\n      6,\n      13\n     ],\n     [\n      6,\n      13\n     ],\n     [\n      6,\n      13\n     ],\n     [\n      6,\n      13\n     ],\n     [\n      6,\n      13\n     ],\n     [\n      6,\n      13\n     ],\n     [\n      6,\n      13\n     ],\n     [\n      7,\n      20\n     ],\n     [\n      7,\n      20\n     ],\n     [\n      7,\n      20\n     ],\n     [\n      7,\n      20\n     ],\n     [\n      8,\n      33\n     ],\n     [\n      8,\n      33\n     ],\n     [\n      8,\n      34\n     ],\n     [\n      8,\n      34\n     ],\n     [\n      8,\n      35\n     ],\n     [\n      8,\n      35\n     ],\n     [\n      8,\n      36\n     ],\n     [\n      8,\n      36\n     ],\n     [\n      8,\n      37\n     ],\n     [\n      8,\n      37\n     ],\n     [\n      8,\n      38\n     ],\n     [\n      8,\n      38\n     ],\n     [\n      7,\n      19\n     ],\n     [\n      7,\n      19\n     ],\n     [\n      7,\n      19\n     ],\n     [\n      7,\n      19\n     ],\n     [\n      8,\n      31\n     ],\n     [\n      8,\n      31\n     ],\n     [\n      8,\n      32\n     ],\n     [\n      8,\n      32\n     ],\n     [\n      6,\n      1\n     ],\n     [\n      6,\n      1\n     ],\n     [\n      6,\n      1\n     ],\n     [\n      6,\n      1\n     ],\n     [\n      6,\n      1\n     ],\n     [\n      6,\n      1\n     ],\n     [\n      6,\n      1\n     ],\n     [\n      6,\n      1\n     ],\n     [\n      6,\n      12\n     ],\n     [\n      6,\n      12\n     ],\n     [\n      6,\n      12\n     ],\n     [\n      6,\n      12\n     ],\n     [\n      6,\n      12\n     ],\n     [\n      6,\n      12\n     ],\n     [\n      6,\n      12\n     ],\n     [\n      6,\n      12\n     ],\n     [\n      8,\n      53\n     ],\n     [\n      8,\n      53\n     ],\n     [\n      8,\n      54\n     ],\n     [\n      8,\n      54\n     ],\n     [\n      7,\n      26\n     ],\n     [\n      7,\n      26\n     ],\n     [\n      7,\n      26\n     ],\n     [\n      7,\n      26\n     ],\n     [\n      8,\n      39\n     ],\n     [\n      8,\n      39\n     ],\n     [\n      8,\n      40\n     ],\n     [\n      8,\n      40\n     ],\n     [\n      8,\n      41\n     ],\n     [\n      8,\n      41\n     ],\n     [\n      8,\n      42\n     ],\n     [\n      8,\n      42\n     ],\n     [\n      8,\n      43\n     ],\n     [\n      8,\n      43\n     ],\n     [\n      8,\n      44\n     ],\n     [\n      8,\n      44\n     ],\n     [\n      7,\n      21\n     ],\n     [\n      7,\n      21\n     ],\n     [\n      7,\n      21\n     ],\n     [\n      7,\n      21\n     ],\n     [\n      7,\n      28\n     ],\n     [\n      7,\n      28\n     ],\n     [\n      7,\n      28\n     ],\n     [\n      7,\n      28\n     ],\n     [\n      8,\n      61\n     ],\n     [\n      8,\n      61\n     ],\n     [\n      8,\n      62\n     ],\n     [\n      8,\n      62\n     ],\n     [\n      8,\n      63\n     ],\n     [\n      8,\n      63\n     ],\n     [\n      8,\n      0\n     ],\n     [\n      8,\n      0\n     ],\n     [\n      8,\n      320\n     ],\n     [\n      8,\n      320\n     ],\n     [\n      8,\n      384\n     ],\n     [\n      8,\n      384\n     ],\n     [\n      5,\n      10\n     ],\n     [\n      5,\n      10\n     ],\n     [\n      5,\n      10\n     ],\n     [\n      5,\n      10\n     ],\n     [\n      5,\n      10\n     ],\n     [\n      5,\n      10\n     ],\n     [\n      5,\n      10\n     ],\n     [\n      5,\n      10\n     ],\n     [\n      5,\n      10\n     ],\n     [\n      5,\n      10\n     ],\n     [\n      5,\n      10\n     ],\n     [\n      5,\n      10\n     ],\n     [\n      5,\n      10\n     ],\n     [\n      5,\n      10\n     ],\n     [\n      5,\n      10\n     ],\n     [\n      5,\n      10\n     ],\n     [\n      5,\n      11\n     ],\n     [\n      5,\n      11\n     ],\n     [\n      5,\n      11\n     ],\n     [\n      5,\n      11\n     ],\n     [\n      5,\n      11\n     ],\n     [\n      5,\n      11\n     ],\n     [\n      5,\n      11\n     ],\n     [\n      5,\n      11\n     ],\n     [\n      5,\n      11\n     ],\n     [\n      5,\n      11\n     ],\n     [\n      5,\n      11\n     ],\n     [\n      5,\n      11\n     ],\n     [\n      5,\n      11\n     ],\n     [\n      5,\n      11\n     ],\n     [\n      5,\n      11\n     ],\n     [\n      5,\n      11\n     ],\n     [\n      7,\n      27\n     ],\n     [\n      7,\n      27\n     ],\n     [\n      7,\n      27\n     ],\n     [\n      7,\n      27\n     ],\n     [\n      8,\n      59\n     ],\n     [\n      8,\n      59\n     ],\n     [\n      8,\n      60\n     ],\n     [\n      8,\n      60\n     ],\n     [\n      9,\n      1472\n     ],\n     [\n      9,\n      1536\n     ],\n     [\n      9,\n      1600\n     ],\n     [\n      9,\n      1728\n     ],\n     [\n      7,\n      18\n     ],\n     [\n      7,\n      18\n     ],\n     [\n      7,\n      18\n     ],\n     [\n      7,\n      18\n     ],\n     [\n      7,\n      24\n     ],\n     [\n      7,\n      24\n     ],\n     [\n      7,\n      24\n     ],\n     [\n      7,\n      24\n     ],\n     [\n      8,\n      49\n     ],\n     [\n      8,\n      49\n     ],\n     [\n      8,\n      50\n     ],\n     [\n      8,\n      50\n     ],\n     [\n      8,\n      51\n     ],\n     [\n      8,\n      51\n     ],\n     [\n      8,\n      52\n     ],\n     [\n      8,\n      52\n     ],\n     [\n      7,\n      25\n     ],\n     [\n      7,\n      25\n     ],\n     [\n      7,\n      25\n     ],\n     [\n      7,\n      25\n     ],\n     [\n      8,\n      55\n     ],\n     [\n      8,\n      55\n     ],\n     [\n      8,\n      56\n     ],\n     [\n      8,\n      56\n     ],\n     [\n      8,\n      57\n     ],\n     [\n      8,\n      57\n     ],\n     [\n      8,\n      58\n     ],\n     [\n      8,\n      58\n     ],\n     [\n      6,\n      192\n     ],\n     [\n      6,\n      192\n     ],\n     [\n      6,\n      192\n     ],\n     [\n      6,\n      192\n     ],\n     [\n      6,\n      192\n     ],\n     [\n      6,\n      192\n     ],\n     [\n      6,\n      192\n     ],\n     [\n      6,\n      192\n     ],\n     [\n      6,\n      1664\n     ],\n     [\n      6,\n      1664\n     ],\n     [\n      6,\n      1664\n     ],\n     [\n      6,\n      1664\n     ],\n     [\n      6,\n      1664\n     ],\n     [\n      6,\n      1664\n     ],\n     [\n      6,\n      1664\n     ],\n     [\n      6,\n      1664\n     ],\n     [\n      8,\n      448\n     ],\n     [\n      8,\n      448\n     ],\n     [\n      8,\n      512\n     ],\n     [\n      8,\n      512\n     ],\n     [\n      9,\n      704\n     ],\n     [\n      9,\n      768\n     ],\n     [\n      8,\n      640\n     ],\n     [\n      8,\n      640\n     ],\n     [\n      8,\n      576\n     ],\n     [\n      8,\n      576\n     ],\n     [\n      9,\n      832\n     ],\n     [\n      9,\n      896\n     ],\n     [\n      9,\n      960\n     ],\n     [\n      9,\n      1024\n     ],\n     [\n      9,\n      1088\n     ],\n     [\n      9,\n      1152\n     ],\n     [\n      9,\n      1216\n     ],\n     [\n      9,\n      1280\n     ],\n     [\n      9,\n      1344\n     ],\n     [\n      9,\n      1408\n     ],\n     [\n      7,\n      256\n     ],\n     [\n      7,\n      256\n     ],\n     [\n      7,\n      256\n     ],\n     [\n      7,\n      256\n     ],\n     [\n      4,\n      2\n     ],\n     [\n      4,\n      2\n     ],\n     [\n      4,\n      2\n     ],\n     [\n      4,\n      2\n     ],\n     [\n      4,\n      2\n     ],\n     [\n      4,\n      2\n     ],\n     [\n      4,\n      2\n     ],\n     [\n      4,\n      2\n     ],\n     [\n      4,\n      2\n     ],\n     [\n      4,\n      2\n     ],\n     [\n      4,\n      2\n     ],\n     [\n      4,\n      2\n     ],\n     [\n      4,\n      2\n     ],\n     [\n      4,\n      2\n     ],\n     [\n      4,\n      2\n     ],\n     [\n      4,\n      2\n     ],\n     [\n      4,\n      2\n     ],\n     [\n      4,\n      2\n     ],\n     [\n      4,\n      2\n     ],\n     [\n      4,\n      2\n     ],\n     [\n      4,\n      2\n     ],\n     [\n      4,\n      2\n     ],\n     [\n      4,\n      2\n     ],\n     [\n      4,\n      2\n     ],\n     [\n      4,\n      2\n     ],\n     [\n      4,\n      2\n     ],\n     [\n      4,\n      2\n     ],\n     [\n      4,\n      2\n     ],\n     [\n      4,\n      2\n     ],\n     [\n      4,\n      2\n     ],\n     [\n      4,\n      2\n     ],\n     [\n      4,\n      2\n     ],\n     [\n      4,\n      3\n     ],\n     [\n      4,\n      3\n     ],\n     [\n      4,\n      3\n     ],\n     [\n      4,\n      3\n     ],\n     [\n      4,\n      3\n     ],\n     [\n      4,\n      3\n     ],\n     [\n      4,\n      3\n     ],\n     [\n      4,\n      3\n     ],\n     [\n      4,\n      3\n     ],\n     [\n      4,\n      3\n     ],\n     [\n      4,\n      3\n     ],\n     [\n      4,\n      3\n     ],\n     [\n      4,\n      3\n     ],\n     [\n      4,\n      3\n     ],\n     [\n      4,\n      3\n     ],\n     [\n      4,\n      3\n     ],\n     [\n      4,\n      3\n     ],\n     [\n      4,\n      3\n     ],\n     [\n      4,\n      3\n     ],\n     [\n      4,\n      3\n     ],\n     [\n      4,\n      3\n     ],\n     [\n      4,\n      3\n     ],\n     [\n      4,\n      3\n     ],\n     [\n      4,\n      3\n     ],\n     [\n      4,\n      3\n     ],\n     [\n      4,\n      3\n     ],\n     [\n      4,\n      3\n     ],\n     [\n      4,\n      3\n     ],\n     [\n      4,\n      3\n     ],\n     [\n      4,\n      3\n     ],\n     [\n      4,\n      3\n     ],\n     [\n      4,\n      3\n     ],\n     [\n      5,\n      128\n     ],\n     [\n      5,\n      128\n     ],\n     [\n      5,\n      128\n     ],\n     [\n      5,\n      128\n     ],\n     [\n      5,\n      128\n     ],\n     [\n      5,\n      128\n     ],\n     [\n      5,\n      128\n     ],\n     [\n      5,\n      128\n     ],\n     [\n      5,\n      128\n     ],\n     [\n      5,\n      128\n     ],\n     [\n      5,\n      128\n     ],\n     [\n      5,\n      128\n     ],\n     [\n      5,\n      128\n     ],\n     [\n      5,\n      128\n     ],\n     [\n      5,\n      128\n     ],\n     [\n      5,\n      128\n     ],\n     [\n      5,\n      8\n     ],\n     [\n      5,\n      8\n     ],\n     [\n      5,\n      8\n     ],\n     [\n      5,\n      8\n     ],\n     [\n      5,\n      8\n     ],\n     [\n      5,\n      8\n     ],\n     [\n      5,\n      8\n     ],\n     [\n      5,\n      8\n     ],\n     [\n      5,\n      8\n     ],\n     [\n      5,\n      8\n     ],\n     [\n      5,\n      8\n     ],\n     [\n      5,\n      8\n     ],\n     [\n      5,\n      8\n     ],\n     [\n      5,\n      8\n     ],\n     [\n      5,\n      8\n     ],\n     [\n      5,\n      8\n     ],\n     [\n      5,\n      9\n     ],\n     [\n      5,\n      9\n     ],\n     [\n      5,\n      9\n     ],\n     [\n      5,\n      9\n     ],\n     [\n      5,\n      9\n     ],\n     [\n      5,\n      9\n     ],\n     [\n      5,\n      9\n     ],\n     [\n      5,\n      9\n     ],\n     [\n      5,\n      9\n     ],\n     [\n      5,\n      9\n     ],\n     [\n      5,\n      9\n     ],\n     [\n      5,\n      9\n     ],\n     [\n      5,\n      9\n     ],\n     [\n      5,\n      9\n     ],\n     [\n      5,\n      9\n     ],\n     [\n      5,\n      9\n     ],\n     [\n      6,\n      16\n     ],\n     [\n      6,\n      16\n     ],\n     [\n      6,\n      16\n     ],\n     [\n      6,\n      16\n     ],\n     [\n      6,\n      16\n     ],\n     [\n      6,\n      16\n     ],\n     [\n      6,\n      16\n     ],\n     [\n      6,\n      16\n     ],\n     [\n      6,\n      17\n     ],\n     [\n      6,\n      17\n     ],\n     [\n      6,\n      17\n     ],\n     [\n      6,\n      17\n     ],\n     [\n      6,\n      17\n     ],\n     [\n      6,\n      17\n     ],\n     [\n      6,\n      17\n     ],\n     [\n      6,\n      17\n     ],\n     [\n      4,\n      4\n     ],\n     [\n      4,\n      4\n     ],\n     [\n      4,\n      4\n     ],\n     [\n      4,\n      4\n     ],\n     [\n      4,\n      4\n     ],\n     [\n      4,\n      4\n     ],\n     [\n      4,\n      4\n     ],\n     [\n      4,\n      4\n     ],\n     [\n      4,\n      4\n     ],\n     [\n      4,\n      4\n     ],\n     [\n      4,\n      4\n     ],\n     [\n      4,\n      4\n     ],\n     [\n      4,\n      4\n     ],\n     [\n      4,\n      4\n     ],\n     [\n      4,\n      4\n     ],\n     [\n      4,\n      4\n     ],\n     [\n      4,\n      4\n     ],\n     [\n      4,\n      4\n     ],\n     [\n      4,\n      4\n     ],\n     [\n      4,\n      4\n     ],\n     [\n      4,\n      4\n     ],\n     [\n      4,\n      4\n     ],\n     [\n      4,\n      4\n     ],\n     [\n      4,\n      4\n     ],\n     [\n      4,\n      4\n     ],\n     [\n      4,\n      4\n     ],\n     [\n      4,\n      4\n     ],\n     [\n      4,\n      4\n     ],\n     [\n      4,\n      4\n     ],\n     [\n      4,\n      4\n     ],\n     [\n      4,\n      4\n     ],\n     [\n      4,\n      4\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      6,\n      14\n     ],\n     [\n      6,\n      14\n     ],\n     [\n      6,\n      14\n     ],\n     [\n      6,\n      14\n     ],\n     [\n      6,\n      14\n     ],\n     [\n      6,\n      14\n     ],\n     [\n      6,\n      14\n     ],\n     [\n      6,\n      14\n     ],\n     [\n      6,\n      15\n     ],\n     [\n      6,\n      15\n     ],\n     [\n      6,\n      15\n     ],\n     [\n      6,\n      15\n     ],\n     [\n      6,\n      15\n     ],\n     [\n      6,\n      15\n     ],\n     [\n      6,\n      15\n     ],\n     [\n      6,\n      15\n     ],\n     [\n      5,\n      64\n     ],\n     [\n      5,\n      64\n     ],\n     [\n      5,\n      64\n     ],\n     [\n      5,\n      64\n     ],\n     [\n      5,\n      64\n     ],\n     [\n      5,\n      64\n     ],\n     [\n      5,\n      64\n     ],\n     [\n      5,\n      64\n     ],\n     [\n      5,\n      64\n     ],\n     [\n      5,\n      64\n     ],\n     [\n      5,\n      64\n     ],\n     [\n      5,\n      64\n     ],\n     [\n      5,\n      64\n     ],\n     [\n      5,\n      64\n     ],\n     [\n      5,\n      64\n     ],\n     [\n      5,\n      64\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      7\n     ],\n     [\n      4,\n      7\n     ],\n     [\n      4,\n      7\n     ],\n     [\n      4,\n      7\n     ],\n     [\n      4,\n      7\n     ],\n     [\n      4,\n      7\n     ],\n     [\n      4,\n      7\n     ],\n     [\n      4,\n      7\n     ],\n     [\n      4,\n      7\n     ],\n     [\n      4,\n      7\n     ],\n     [\n      4,\n      7\n     ],\n     [\n      4,\n      7\n     ],\n     [\n      4,\n      7\n     ],\n     [\n      4,\n      7\n     ],\n     [\n      4,\n      7\n     ],\n     [\n      4,\n      7\n     ],\n     [\n      4,\n      7\n     ],\n     [\n      4,\n      7\n     ],\n     [\n      4,\n      7\n     ],\n     [\n      4,\n      7\n     ],\n     [\n      4,\n      7\n     ],\n     [\n      4,\n      7\n     ],\n     [\n      4,\n      7\n     ],\n     [\n      4,\n      7\n     ],\n     [\n      4,\n      7\n     ],\n     [\n      4,\n      7\n     ],\n     [\n      4,\n      7\n     ],\n     [\n      4,\n      7\n     ],\n     [\n      4,\n      7\n     ],\n     [\n      4,\n      7\n     ],\n     [\n      4,\n      7\n     ],\n     [\n      4,\n      7\n     ]\n    ];\n    var blackTable1 = [\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      12,\n      ccittEOL\n     ],\n     [\n      12,\n      ccittEOL\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      11,\n      1792\n     ],\n     [\n      11,\n      1792\n     ],\n     [\n      11,\n      1792\n     ],\n     [\n      11,\n      1792\n     ],\n     [\n      12,\n      1984\n     ],\n     [\n      12,\n      1984\n     ],\n     [\n      12,\n      2048\n     ],\n     [\n      12,\n      2048\n     ],\n     [\n      12,\n      2112\n     ],\n     [\n      12,\n      2112\n     ],\n     [\n      12,\n      2176\n     ],\n     [\n      12,\n      2176\n     ],\n     [\n      12,\n      2240\n     ],\n     [\n      12,\n      2240\n     ],\n     [\n      12,\n      2304\n     ],\n     [\n      12,\n      2304\n     ],\n     [\n      11,\n      1856\n     ],\n     [\n      11,\n      1856\n     ],\n     [\n      11,\n      1856\n     ],\n     [\n      11,\n      1856\n     ],\n     [\n      11,\n      1920\n     ],\n     [\n      11,\n      1920\n     ],\n     [\n      11,\n      1920\n     ],\n     [\n      11,\n      1920\n     ],\n     [\n      12,\n      2368\n     ],\n     [\n      12,\n      2368\n     ],\n     [\n      12,\n      2432\n     ],\n     [\n      12,\n      2432\n     ],\n     [\n      12,\n      2496\n     ],\n     [\n      12,\n      2496\n     ],\n     [\n      12,\n      2560\n     ],\n     [\n      12,\n      2560\n     ],\n     [\n      10,\n      18\n     ],\n     [\n      10,\n      18\n     ],\n     [\n      10,\n      18\n     ],\n     [\n      10,\n      18\n     ],\n     [\n      10,\n      18\n     ],\n     [\n      10,\n      18\n     ],\n     [\n      10,\n      18\n     ],\n     [\n      10,\n      18\n     ],\n     [\n      12,\n      52\n     ],\n     [\n      12,\n      52\n     ],\n     [\n      13,\n      640\n     ],\n     [\n      13,\n      704\n     ],\n     [\n      13,\n      768\n     ],\n     [\n      13,\n      832\n     ],\n     [\n      12,\n      55\n     ],\n     [\n      12,\n      55\n     ],\n     [\n      12,\n      56\n     ],\n     [\n      12,\n      56\n     ],\n     [\n      13,\n      1280\n     ],\n     [\n      13,\n      1344\n     ],\n     [\n      13,\n      1408\n     ],\n     [\n      13,\n      1472\n     ],\n     [\n      12,\n      59\n     ],\n     [\n      12,\n      59\n     ],\n     [\n      12,\n      60\n     ],\n     [\n      12,\n      60\n     ],\n     [\n      13,\n      1536\n     ],\n     [\n      13,\n      1600\n     ],\n     [\n      11,\n      24\n     ],\n     [\n      11,\n      24\n     ],\n     [\n      11,\n      24\n     ],\n     [\n      11,\n      24\n     ],\n     [\n      11,\n      25\n     ],\n     [\n      11,\n      25\n     ],\n     [\n      11,\n      25\n     ],\n     [\n      11,\n      25\n     ],\n     [\n      13,\n      1664\n     ],\n     [\n      13,\n      1728\n     ],\n     [\n      12,\n      320\n     ],\n     [\n      12,\n      320\n     ],\n     [\n      12,\n      384\n     ],\n     [\n      12,\n      384\n     ],\n     [\n      12,\n      448\n     ],\n     [\n      12,\n      448\n     ],\n     [\n      13,\n      512\n     ],\n     [\n      13,\n      576\n     ],\n     [\n      12,\n      53\n     ],\n     [\n      12,\n      53\n     ],\n     [\n      12,\n      54\n     ],\n     [\n      12,\n      54\n     ],\n     [\n      13,\n      896\n     ],\n     [\n      13,\n      960\n     ],\n     [\n      13,\n      1024\n     ],\n     [\n      13,\n      1088\n     ],\n     [\n      13,\n      1152\n     ],\n     [\n      13,\n      1216\n     ],\n     [\n      10,\n      64\n     ],\n     [\n      10,\n      64\n     ],\n     [\n      10,\n      64\n     ],\n     [\n      10,\n      64\n     ],\n     [\n      10,\n      64\n     ],\n     [\n      10,\n      64\n     ],\n     [\n      10,\n      64\n     ],\n     [\n      10,\n      64\n     ]\n    ];\n    var blackTable2 = [\n     [\n      8,\n      13\n     ],\n     [\n      8,\n      13\n     ],\n     [\n      8,\n      13\n     ],\n     [\n      8,\n      13\n     ],\n     [\n      8,\n      13\n     ],\n     [\n      8,\n      13\n     ],\n     [\n      8,\n      13\n     ],\n     [\n      8,\n      13\n     ],\n     [\n      8,\n      13\n     ],\n     [\n      8,\n      13\n     ],\n     [\n      8,\n      13\n     ],\n     [\n      8,\n      13\n     ],\n     [\n      8,\n      13\n     ],\n     [\n      8,\n      13\n     ],\n     [\n      8,\n      13\n     ],\n     [\n      8,\n      13\n     ],\n     [\n      11,\n      23\n     ],\n     [\n      11,\n      23\n     ],\n     [\n      12,\n      50\n     ],\n     [\n      12,\n      51\n     ],\n     [\n      12,\n      44\n     ],\n     [\n      12,\n      45\n     ],\n     [\n      12,\n      46\n     ],\n     [\n      12,\n      47\n     ],\n     [\n      12,\n      57\n     ],\n     [\n      12,\n      58\n     ],\n     [\n      12,\n      61\n     ],\n     [\n      12,\n      256\n     ],\n     [\n      10,\n      16\n     ],\n     [\n      10,\n      16\n     ],\n     [\n      10,\n      16\n     ],\n     [\n      10,\n      16\n     ],\n     [\n      10,\n      17\n     ],\n     [\n      10,\n      17\n     ],\n     [\n      10,\n      17\n     ],\n     [\n      10,\n      17\n     ],\n     [\n      12,\n      48\n     ],\n     [\n      12,\n      49\n     ],\n     [\n      12,\n      62\n     ],\n     [\n      12,\n      63\n     ],\n     [\n      12,\n      30\n     ],\n     [\n      12,\n      31\n     ],\n     [\n      12,\n      32\n     ],\n     [\n      12,\n      33\n     ],\n     [\n      12,\n      40\n     ],\n     [\n      12,\n      41\n     ],\n     [\n      11,\n      22\n     ],\n     [\n      11,\n      22\n     ],\n     [\n      8,\n      14\n     ],\n     [\n      8,\n      14\n     ],\n     [\n      8,\n      14\n     ],\n     [\n      8,\n      14\n     ],\n     [\n      8,\n      14\n     ],\n     [\n      8,\n      14\n     ],\n     [\n      8,\n      14\n     ],\n     [\n      8,\n      14\n     ],\n     [\n      8,\n      14\n     ],\n     [\n      8,\n      14\n     ],\n     [\n      8,\n      14\n     ],\n     [\n      8,\n      14\n     ],\n     [\n      8,\n      14\n     ],\n     [\n      8,\n      14\n     ],\n     [\n      8,\n      14\n     ],\n     [\n      8,\n      14\n     ],\n     [\n      7,\n      10\n     ],\n     [\n      7,\n      10\n     ],\n     [\n      7,\n      10\n     ],\n     [\n      7,\n      10\n     ],\n     [\n      7,\n      10\n     ],\n     [\n      7,\n      10\n     ],\n     [\n      7,\n      10\n     ],\n     [\n      7,\n      10\n     ],\n     [\n      7,\n      10\n     ],\n     [\n      7,\n      10\n     ],\n     [\n      7,\n      10\n     ],\n     [\n      7,\n      10\n     ],\n     [\n      7,\n      10\n     ],\n     [\n      7,\n      10\n     ],\n     [\n      7,\n      10\n     ],\n     [\n      7,\n      10\n     ],\n     [\n      7,\n      10\n     ],\n     [\n      7,\n      10\n     ],\n     [\n      7,\n      10\n     ],\n     [\n      7,\n      10\n     ],\n     [\n      7,\n      10\n     ],\n     [\n      7,\n      10\n     ],\n     [\n      7,\n      10\n     ],\n     [\n      7,\n      10\n     ],\n     [\n      7,\n      10\n     ],\n     [\n      7,\n      10\n     ],\n     [\n      7,\n      10\n     ],\n     [\n      7,\n      10\n     ],\n     [\n      7,\n      10\n     ],\n     [\n      7,\n      10\n     ],\n     [\n      7,\n      10\n     ],\n     [\n      7,\n      10\n     ],\n     [\n      7,\n      11\n     ],\n     [\n      7,\n      11\n     ],\n     [\n      7,\n      11\n     ],\n     [\n      7,\n      11\n     ],\n     [\n      7,\n      11\n     ],\n     [\n      7,\n      11\n     ],\n     [\n      7,\n      11\n     ],\n     [\n      7,\n      11\n     ],\n     [\n      7,\n      11\n     ],\n     [\n      7,\n      11\n     ],\n     [\n      7,\n      11\n     ],\n     [\n      7,\n      11\n     ],\n     [\n      7,\n      11\n     ],\n     [\n      7,\n      11\n     ],\n     [\n      7,\n      11\n     ],\n     [\n      7,\n      11\n     ],\n     [\n      7,\n      11\n     ],\n     [\n      7,\n      11\n     ],\n     [\n      7,\n      11\n     ],\n     [\n      7,\n      11\n     ],\n     [\n      7,\n      11\n     ],\n     [\n      7,\n      11\n     ],\n     [\n      7,\n      11\n     ],\n     [\n      7,\n      11\n     ],\n     [\n      7,\n      11\n     ],\n     [\n      7,\n      11\n     ],\n     [\n      7,\n      11\n     ],\n     [\n      7,\n      11\n     ],\n     [\n      7,\n      11\n     ],\n     [\n      7,\n      11\n     ],\n     [\n      7,\n      11\n     ],\n     [\n      7,\n      11\n     ],\n     [\n      9,\n      15\n     ],\n     [\n      9,\n      15\n     ],\n     [\n      9,\n      15\n     ],\n     [\n      9,\n      15\n     ],\n     [\n      9,\n      15\n     ],\n     [\n      9,\n      15\n     ],\n     [\n      9,\n      15\n     ],\n     [\n      9,\n      15\n     ],\n     [\n      12,\n      128\n     ],\n     [\n      12,\n      192\n     ],\n     [\n      12,\n      26\n     ],\n     [\n      12,\n      27\n     ],\n     [\n      12,\n      28\n     ],\n     [\n      12,\n      29\n     ],\n     [\n      11,\n      19\n     ],\n     [\n      11,\n      19\n     ],\n     [\n      11,\n      20\n     ],\n     [\n      11,\n      20\n     ],\n     [\n      12,\n      34\n     ],\n     [\n      12,\n      35\n     ],\n     [\n      12,\n      36\n     ],\n     [\n      12,\n      37\n     ],\n     [\n      12,\n      38\n     ],\n     [\n      12,\n      39\n     ],\n     [\n      11,\n      21\n     ],\n     [\n      11,\n      21\n     ],\n     [\n      12,\n      42\n     ],\n     [\n      12,\n      43\n     ],\n     [\n      10,\n      0\n     ],\n     [\n      10,\n      0\n     ],\n     [\n      10,\n      0\n     ],\n     [\n      10,\n      0\n     ],\n     [\n      7,\n      12\n     ],\n     [\n      7,\n      12\n     ],\n     [\n      7,\n      12\n     ],\n     [\n      7,\n      12\n     ],\n     [\n      7,\n      12\n     ],\n     [\n      7,\n      12\n     ],\n     [\n      7,\n      12\n     ],\n     [\n      7,\n      12\n     ],\n     [\n      7,\n      12\n     ],\n     [\n      7,\n      12\n     ],\n     [\n      7,\n      12\n     ],\n     [\n      7,\n      12\n     ],\n     [\n      7,\n      12\n     ],\n     [\n      7,\n      12\n     ],\n     [\n      7,\n      12\n     ],\n     [\n      7,\n      12\n     ],\n     [\n      7,\n      12\n     ],\n     [\n      7,\n      12\n     ],\n     [\n      7,\n      12\n     ],\n     [\n      7,\n      12\n     ],\n     [\n      7,\n      12\n     ],\n     [\n      7,\n      12\n     ],\n     [\n      7,\n      12\n     ],\n     [\n      7,\n      12\n     ],\n     [\n      7,\n      12\n     ],\n     [\n      7,\n      12\n     ],\n     [\n      7,\n      12\n     ],\n     [\n      7,\n      12\n     ],\n     [\n      7,\n      12\n     ],\n     [\n      7,\n      12\n     ],\n     [\n      7,\n      12\n     ],\n     [\n      7,\n      12\n     ]\n    ];\n    var blackTable3 = [\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      -1,\n      -1\n     ],\n     [\n      6,\n      9\n     ],\n     [\n      6,\n      8\n     ],\n     [\n      5,\n      7\n     ],\n     [\n      5,\n      7\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      6\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      4,\n      5\n     ],\n     [\n      3,\n      1\n     ],\n     [\n      3,\n      1\n     ],\n     [\n      3,\n      1\n     ],\n     [\n      3,\n      1\n     ],\n     [\n      3,\n      1\n     ],\n     [\n      3,\n      1\n     ],\n     [\n      3,\n      1\n     ],\n     [\n      3,\n      1\n     ],\n     [\n      3,\n      4\n     ],\n     [\n      3,\n      4\n     ],\n     [\n      3,\n      4\n     ],\n     [\n      3,\n      4\n     ],\n     [\n      3,\n      4\n     ],\n     [\n      3,\n      4\n     ],\n     [\n      3,\n      4\n     ],\n     [\n      3,\n      4\n     ],\n     [\n      2,\n      3\n     ],\n     [\n      2,\n      3\n     ],\n     [\n      2,\n      3\n     ],\n     [\n      2,\n      3\n     ],\n     [\n      2,\n      3\n     ],\n     [\n      2,\n      3\n     ],\n     [\n      2,\n      3\n     ],\n     [\n      2,\n      3\n     ],\n     [\n      2,\n      3\n     ],\n     [\n      2,\n      3\n     ],\n     [\n      2,\n      3\n     ],\n     [\n      2,\n      3\n     ],\n     [\n      2,\n      3\n     ],\n     [\n      2,\n      3\n     ],\n     [\n      2,\n      3\n     ],\n     [\n      2,\n      3\n     ],\n     [\n      2,\n      2\n     ],\n     [\n      2,\n      2\n     ],\n     [\n      2,\n      2\n     ],\n     [\n      2,\n      2\n     ],\n     [\n      2,\n      2\n     ],\n     [\n      2,\n      2\n     ],\n     [\n      2,\n      2\n     ],\n     [\n      2,\n      2\n     ],\n     [\n      2,\n      2\n     ],\n     [\n      2,\n      2\n     ],\n     [\n      2,\n      2\n     ],\n     [\n      2,\n      2\n     ],\n     [\n      2,\n      2\n     ],\n     [\n      2,\n      2\n     ],\n     [\n      2,\n      2\n     ],\n     [\n      2,\n      2\n     ]\n    ];\n    function CCITTFaxStream(str, maybeLength, params) {\n     this.str = str;\n     this.dict = str.dict;\n     params = params || Dict.empty;\n     this.encoding = params.get('K') || 0;\n     this.eoline = params.get('EndOfLine') || false;\n     this.byteAlign = params.get('EncodedByteAlign') || false;\n     this.columns = params.get('Columns') || 1728;\n     this.rows = params.get('Rows') || 0;\n     var eoblock = params.get('EndOfBlock');\n     if (eoblock === null || eoblock === undefined) {\n      eoblock = true;\n     }\n     this.eoblock = eoblock;\n     this.black = params.get('BlackIs1') || false;\n     this.codingLine = new Uint32Array(this.columns + 1);\n     this.refLine = new Uint32Array(this.columns + 2);\n     this.codingLine[0] = this.columns;\n     this.codingPos = 0;\n     this.row = 0;\n     this.nextLine2D = this.encoding < 0;\n     this.inputBits = 0;\n     this.inputBuf = 0;\n     this.outputBits = 0;\n     var code1;\n     while ((code1 = this.lookBits(12)) === 0) {\n      this.eatBits(1);\n     }\n     if (code1 === 1) {\n      this.eatBits(12);\n     }\n     if (this.encoding > 0) {\n      this.nextLine2D = !this.lookBits(1);\n      this.eatBits(1);\n     }\n     DecodeStream.call(this, maybeLength);\n    }\n    CCITTFaxStream.prototype = Object.create(DecodeStream.prototype);\n    CCITTFaxStream.prototype.readBlock = function CCITTFaxStream_readBlock() {\n     while (!this.eof) {\n      var c = this.lookChar();\n      this.ensureBuffer(this.bufferLength + 1);\n      this.buffer[this.bufferLength++] = c;\n     }\n    };\n    CCITTFaxStream.prototype.addPixels = function ccittFaxStreamAddPixels(a1, blackPixels) {\n     var codingLine = this.codingLine;\n     var codingPos = this.codingPos;\n     if (a1 > codingLine[codingPos]) {\n      if (a1 > this.columns) {\n       info('row is wrong length');\n       this.err = true;\n       a1 = this.columns;\n      }\n      if (codingPos & 1 ^ blackPixels) {\n       ++codingPos;\n      }\n      codingLine[codingPos] = a1;\n     }\n     this.codingPos = codingPos;\n    };\n    CCITTFaxStream.prototype.addPixelsNeg = function ccittFaxStreamAddPixelsNeg(a1, blackPixels) {\n     var codingLine = this.codingLine;\n     var codingPos = this.codingPos;\n     if (a1 > codingLine[codingPos]) {\n      if (a1 > this.columns) {\n       info('row is wrong length');\n       this.err = true;\n       a1 = this.columns;\n      }\n      if (codingPos & 1 ^ blackPixels) {\n       ++codingPos;\n      }\n      codingLine[codingPos] = a1;\n     } else if (a1 < codingLine[codingPos]) {\n      if (a1 < 0) {\n       info('invalid code');\n       this.err = true;\n       a1 = 0;\n      }\n      while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n       --codingPos;\n      }\n      codingLine[codingPos] = a1;\n     }\n     this.codingPos = codingPos;\n    };\n    CCITTFaxStream.prototype.lookChar = function CCITTFaxStream_lookChar() {\n     var refLine = this.refLine;\n     var codingLine = this.codingLine;\n     var columns = this.columns;\n     var refPos, blackPixels, bits, i;\n     if (this.outputBits === 0) {\n      if (this.eof) {\n       return null;\n      }\n      this.err = false;\n      var code1, code2, code3;\n      if (this.nextLine2D) {\n       for (i = 0; codingLine[i] < columns; ++i) {\n        refLine[i] = codingLine[i];\n       }\n       refLine[i++] = columns;\n       refLine[i] = columns;\n       codingLine[0] = 0;\n       this.codingPos = 0;\n       refPos = 0;\n       blackPixels = 0;\n       while (codingLine[this.codingPos] < columns) {\n        code1 = this.getTwoDimCode();\n        switch (code1) {\n        case twoDimPass:\n         this.addPixels(refLine[refPos + 1], blackPixels);\n         if (refLine[refPos + 1] < columns) {\n          refPos += 2;\n         }\n         break;\n        case twoDimHoriz:\n         code1 = code2 = 0;\n         if (blackPixels) {\n          do {\n           code1 += code3 = this.getBlackCode();\n          } while (code3 >= 64);\n          do {\n           code2 += code3 = this.getWhiteCode();\n          } while (code3 >= 64);\n         } else {\n          do {\n           code1 += code3 = this.getWhiteCode();\n          } while (code3 >= 64);\n          do {\n           code2 += code3 = this.getBlackCode();\n          } while (code3 >= 64);\n         }\n         this.addPixels(codingLine[this.codingPos] + code1, blackPixels);\n         if (codingLine[this.codingPos] < columns) {\n          this.addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n         }\n         while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n          refPos += 2;\n         }\n         break;\n        case twoDimVertR3:\n         this.addPixels(refLine[refPos] + 3, blackPixels);\n         blackPixels ^= 1;\n         if (codingLine[this.codingPos] < columns) {\n          ++refPos;\n          while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n           refPos += 2;\n          }\n         }\n         break;\n        case twoDimVertR2:\n         this.addPixels(refLine[refPos] + 2, blackPixels);\n         blackPixels ^= 1;\n         if (codingLine[this.codingPos] < columns) {\n          ++refPos;\n          while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n           refPos += 2;\n          }\n         }\n         break;\n        case twoDimVertR1:\n         this.addPixels(refLine[refPos] + 1, blackPixels);\n         blackPixels ^= 1;\n         if (codingLine[this.codingPos] < columns) {\n          ++refPos;\n          while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n           refPos += 2;\n          }\n         }\n         break;\n        case twoDimVert0:\n         this.addPixels(refLine[refPos], blackPixels);\n         blackPixels ^= 1;\n         if (codingLine[this.codingPos] < columns) {\n          ++refPos;\n          while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n           refPos += 2;\n          }\n         }\n         break;\n        case twoDimVertL3:\n         this.addPixelsNeg(refLine[refPos] - 3, blackPixels);\n         blackPixels ^= 1;\n         if (codingLine[this.codingPos] < columns) {\n          if (refPos > 0) {\n           --refPos;\n          } else {\n           ++refPos;\n          }\n          while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n           refPos += 2;\n          }\n         }\n         break;\n        case twoDimVertL2:\n         this.addPixelsNeg(refLine[refPos] - 2, blackPixels);\n         blackPixels ^= 1;\n         if (codingLine[this.codingPos] < columns) {\n          if (refPos > 0) {\n           --refPos;\n          } else {\n           ++refPos;\n          }\n          while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n           refPos += 2;\n          }\n         }\n         break;\n        case twoDimVertL1:\n         this.addPixelsNeg(refLine[refPos] - 1, blackPixels);\n         blackPixels ^= 1;\n         if (codingLine[this.codingPos] < columns) {\n          if (refPos > 0) {\n           --refPos;\n          } else {\n           ++refPos;\n          }\n          while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n           refPos += 2;\n          }\n         }\n         break;\n        case ccittEOF:\n         this.addPixels(columns, 0);\n         this.eof = true;\n         break;\n        default:\n         info('bad 2d code');\n         this.addPixels(columns, 0);\n         this.err = true;\n        }\n       }\n      } else {\n       codingLine[0] = 0;\n       this.codingPos = 0;\n       blackPixels = 0;\n       while (codingLine[this.codingPos] < columns) {\n        code1 = 0;\n        if (blackPixels) {\n         do {\n          code1 += code3 = this.getBlackCode();\n         } while (code3 >= 64);\n        } else {\n         do {\n          code1 += code3 = this.getWhiteCode();\n         } while (code3 >= 64);\n        }\n        this.addPixels(codingLine[this.codingPos] + code1, blackPixels);\n        blackPixels ^= 1;\n       }\n      }\n      var gotEOL = false;\n      if (this.byteAlign) {\n       this.inputBits &= ~7;\n      }\n      if (!this.eoblock && this.row === this.rows - 1) {\n       this.eof = true;\n      } else {\n       code1 = this.lookBits(12);\n       if (this.eoline) {\n        while (code1 !== ccittEOF && code1 !== 1) {\n         this.eatBits(1);\n         code1 = this.lookBits(12);\n        }\n       } else {\n        while (code1 === 0) {\n         this.eatBits(1);\n         code1 = this.lookBits(12);\n        }\n       }\n       if (code1 === 1) {\n        this.eatBits(12);\n        gotEOL = true;\n       } else if (code1 === ccittEOF) {\n        this.eof = true;\n       }\n      }\n      if (!this.eof && this.encoding > 0) {\n       this.nextLine2D = !this.lookBits(1);\n       this.eatBits(1);\n      }\n      if (this.eoblock && gotEOL && this.byteAlign) {\n       code1 = this.lookBits(12);\n       if (code1 === 1) {\n        this.eatBits(12);\n        if (this.encoding > 0) {\n         this.lookBits(1);\n         this.eatBits(1);\n        }\n        if (this.encoding >= 0) {\n         for (i = 0; i < 4; ++i) {\n          code1 = this.lookBits(12);\n          if (code1 !== 1) {\n           info('bad rtc code: ' + code1);\n          }\n          this.eatBits(12);\n          if (this.encoding > 0) {\n           this.lookBits(1);\n           this.eatBits(1);\n          }\n         }\n        }\n        this.eof = true;\n       }\n      } else if (this.err && this.eoline) {\n       while (true) {\n        code1 = this.lookBits(13);\n        if (code1 === ccittEOF) {\n         this.eof = true;\n         return null;\n        }\n        if (code1 >> 1 === 1) {\n         break;\n        }\n        this.eatBits(1);\n       }\n       this.eatBits(12);\n       if (this.encoding > 0) {\n        this.eatBits(1);\n        this.nextLine2D = !(code1 & 1);\n       }\n      }\n      if (codingLine[0] > 0) {\n       this.outputBits = codingLine[this.codingPos = 0];\n      } else {\n       this.outputBits = codingLine[this.codingPos = 1];\n      }\n      this.row++;\n     }\n     var c;\n     if (this.outputBits >= 8) {\n      c = this.codingPos & 1 ? 0 : 0xFF;\n      this.outputBits -= 8;\n      if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n       this.codingPos++;\n       this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n      }\n     } else {\n      bits = 8;\n      c = 0;\n      do {\n       if (this.outputBits > bits) {\n        c <<= bits;\n        if (!(this.codingPos & 1)) {\n         c |= 0xFF >> 8 - bits;\n        }\n        this.outputBits -= bits;\n        bits = 0;\n       } else {\n        c <<= this.outputBits;\n        if (!(this.codingPos & 1)) {\n         c |= 0xFF >> 8 - this.outputBits;\n        }\n        bits -= this.outputBits;\n        this.outputBits = 0;\n        if (codingLine[this.codingPos] < columns) {\n         this.codingPos++;\n         this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n        } else if (bits > 0) {\n         c <<= bits;\n         bits = 0;\n        }\n       }\n      } while (bits);\n     }\n     if (this.black) {\n      c ^= 0xFF;\n     }\n     return c;\n    };\n    CCITTFaxStream.prototype.findTableCode = function ccittFaxStreamFindTableCode(start, end, table, limit) {\n     var limitValue = limit || 0;\n     for (var i = start; i <= end; ++i) {\n      var code = this.lookBits(i);\n      if (code === ccittEOF) {\n       return [\n        true,\n        1,\n        false\n       ];\n      }\n      if (i < end) {\n       code <<= end - i;\n      }\n      if (!limitValue || code >= limitValue) {\n       var p = table[code - limitValue];\n       if (p[0] === i) {\n        this.eatBits(i);\n        return [\n         true,\n         p[1],\n         true\n        ];\n       }\n      }\n     }\n     return [\n      false,\n      0,\n      false\n     ];\n    };\n    CCITTFaxStream.prototype.getTwoDimCode = function ccittFaxStreamGetTwoDimCode() {\n     var code = 0;\n     var p;\n     if (this.eoblock) {\n      code = this.lookBits(7);\n      p = twoDimTable[code];\n      if (p && p[0] > 0) {\n       this.eatBits(p[0]);\n       return p[1];\n      }\n     } else {\n      var result = this.findTableCode(1, 7, twoDimTable);\n      if (result[0] && result[2]) {\n       return result[1];\n      }\n     }\n     info('Bad two dim code');\n     return ccittEOF;\n    };\n    CCITTFaxStream.prototype.getWhiteCode = function ccittFaxStreamGetWhiteCode() {\n     var code = 0;\n     var p;\n     if (this.eoblock) {\n      code = this.lookBits(12);\n      if (code === ccittEOF) {\n       return 1;\n      }\n      if (code >> 5 === 0) {\n       p = whiteTable1[code];\n      } else {\n       p = whiteTable2[code >> 3];\n      }\n      if (p[0] > 0) {\n       this.eatBits(p[0]);\n       return p[1];\n      }\n     } else {\n      var result = this.findTableCode(1, 9, whiteTable2);\n      if (result[0]) {\n       return result[1];\n      }\n      result = this.findTableCode(11, 12, whiteTable1);\n      if (result[0]) {\n       return result[1];\n      }\n     }\n     info('bad white code');\n     this.eatBits(1);\n     return 1;\n    };\n    CCITTFaxStream.prototype.getBlackCode = function ccittFaxStreamGetBlackCode() {\n     var code, p;\n     if (this.eoblock) {\n      code = this.lookBits(13);\n      if (code === ccittEOF) {\n       return 1;\n      }\n      if (code >> 7 === 0) {\n       p = blackTable1[code];\n      } else if (code >> 9 === 0 && code >> 7 !== 0) {\n       p = blackTable2[(code >> 1) - 64];\n      } else {\n       p = blackTable3[code >> 7];\n      }\n      if (p[0] > 0) {\n       this.eatBits(p[0]);\n       return p[1];\n      }\n     } else {\n      var result = this.findTableCode(2, 6, blackTable3);\n      if (result[0]) {\n       return result[1];\n      }\n      result = this.findTableCode(7, 12, blackTable2, 64);\n      if (result[0]) {\n       return result[1];\n      }\n      result = this.findTableCode(10, 13, blackTable1);\n      if (result[0]) {\n       return result[1];\n      }\n     }\n     info('bad black code');\n     this.eatBits(1);\n     return 1;\n    };\n    CCITTFaxStream.prototype.lookBits = function CCITTFaxStream_lookBits(n) {\n     var c;\n     while (this.inputBits < n) {\n      if ((c = this.str.getByte()) === -1) {\n       if (this.inputBits === 0) {\n        return ccittEOF;\n       }\n       return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\n      }\n      this.inputBuf = this.inputBuf << 8 | c;\n      this.inputBits += 8;\n     }\n     return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\n    };\n    CCITTFaxStream.prototype.eatBits = function CCITTFaxStream_eatBits(n) {\n     if ((this.inputBits -= n) < 0) {\n      this.inputBits = 0;\n     }\n    };\n    return CCITTFaxStream;\n   }();\n   var LZWStream = function LZWStreamClosure() {\n    function LZWStream(str, maybeLength, earlyChange) {\n     this.str = str;\n     this.dict = str.dict;\n     this.cachedData = 0;\n     this.bitsCached = 0;\n     var maxLzwDictionarySize = 4096;\n     var lzwState = {\n      earlyChange: earlyChange,\n      codeLength: 9,\n      nextCode: 258,\n      dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n      currentSequence: new Uint8Array(maxLzwDictionarySize),\n      currentSequenceLength: 0\n     };\n     for (var i = 0; i < 256; ++i) {\n      lzwState.dictionaryValues[i] = i;\n      lzwState.dictionaryLengths[i] = 1;\n     }\n     this.lzwState = lzwState;\n     DecodeStream.call(this, maybeLength);\n    }\n    LZWStream.prototype = Object.create(DecodeStream.prototype);\n    LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n     var bitsCached = this.bitsCached;\n     var cachedData = this.cachedData;\n     while (bitsCached < n) {\n      var c = this.str.getByte();\n      if (c === -1) {\n       this.eof = true;\n       return null;\n      }\n      cachedData = cachedData << 8 | c;\n      bitsCached += 8;\n     }\n     this.bitsCached = bitsCached -= n;\n     this.cachedData = cachedData;\n     this.lastCode = null;\n     return cachedData >>> bitsCached & (1 << n) - 1;\n    };\n    LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n     var blockSize = 512;\n     var estimatedDecodedSize = blockSize * 2, decodedSizeDelta = blockSize;\n     var i, j, q;\n     var lzwState = this.lzwState;\n     if (!lzwState) {\n      return;\n     }\n     var earlyChange = lzwState.earlyChange;\n     var nextCode = lzwState.nextCode;\n     var dictionaryValues = lzwState.dictionaryValues;\n     var dictionaryLengths = lzwState.dictionaryLengths;\n     var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n     var codeLength = lzwState.codeLength;\n     var prevCode = lzwState.prevCode;\n     var currentSequence = lzwState.currentSequence;\n     var currentSequenceLength = lzwState.currentSequenceLength;\n     var decodedLength = 0;\n     var currentBufferLength = this.bufferLength;\n     var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n     for (i = 0; i < blockSize; i++) {\n      var code = this.readBits(codeLength);\n      var hasPrev = currentSequenceLength > 0;\n      if (code < 256) {\n       currentSequence[0] = code;\n       currentSequenceLength = 1;\n      } else if (code >= 258) {\n       if (code < nextCode) {\n        currentSequenceLength = dictionaryLengths[code];\n        for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n         currentSequence[j] = dictionaryValues[q];\n         q = dictionaryPrevCodes[q];\n        }\n       } else {\n        currentSequence[currentSequenceLength++] = currentSequence[0];\n       }\n      } else if (code === 256) {\n       codeLength = 9;\n       nextCode = 258;\n       currentSequenceLength = 0;\n       continue;\n      } else {\n       this.eof = true;\n       delete this.lzwState;\n       break;\n      }\n      if (hasPrev) {\n       dictionaryPrevCodes[nextCode] = prevCode;\n       dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n       dictionaryValues[nextCode] = currentSequence[0];\n       nextCode++;\n       codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n      }\n      prevCode = code;\n      decodedLength += currentSequenceLength;\n      if (estimatedDecodedSize < decodedLength) {\n       do {\n        estimatedDecodedSize += decodedSizeDelta;\n       } while (estimatedDecodedSize < decodedLength);\n       buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n      }\n      for (j = 0; j < currentSequenceLength; j++) {\n       buffer[currentBufferLength++] = currentSequence[j];\n      }\n     }\n     lzwState.nextCode = nextCode;\n     lzwState.codeLength = codeLength;\n     lzwState.prevCode = prevCode;\n     lzwState.currentSequenceLength = currentSequenceLength;\n     this.bufferLength = currentBufferLength;\n    };\n    return LZWStream;\n   }();\n   var NullStream = function NullStreamClosure() {\n    function NullStream() {\n     Stream.call(this, new Uint8Array(0));\n    }\n    NullStream.prototype = Stream.prototype;\n    return NullStream;\n   }();\n   exports.Ascii85Stream = Ascii85Stream;\n   exports.AsciiHexStream = AsciiHexStream;\n   exports.CCITTFaxStream = CCITTFaxStream;\n   exports.DecryptStream = DecryptStream;\n   exports.DecodeStream = DecodeStream;\n   exports.FlateStream = FlateStream;\n   exports.Jbig2Stream = Jbig2Stream;\n   exports.JpegStream = JpegStream;\n   exports.JpxStream = JpxStream;\n   exports.NullStream = NullStream;\n   exports.PredictorStream = PredictorStream;\n   exports.RunLengthStream = RunLengthStream;\n   exports.Stream = Stream;\n   exports.StreamsSequenceStream = StreamsSequenceStream;\n   exports.StringStream = StringStream;\n   exports.LZWStream = LZWStream;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsCoreCrypto = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreStream);\n  }(this, function (exports, sharedUtil, corePrimitives, coreStream) {\n   var PasswordException = sharedUtil.PasswordException;\n   var PasswordResponses = sharedUtil.PasswordResponses;\n   var bytesToString = sharedUtil.bytesToString;\n   var warn = sharedUtil.warn;\n   var error = sharedUtil.error;\n   var assert = sharedUtil.assert;\n   var isInt = sharedUtil.isInt;\n   var stringToBytes = sharedUtil.stringToBytes;\n   var utf8StringToString = sharedUtil.utf8StringToString;\n   var Name = corePrimitives.Name;\n   var isName = corePrimitives.isName;\n   var isDict = corePrimitives.isDict;\n   var DecryptStream = coreStream.DecryptStream;\n   var ARCFourCipher = function ARCFourCipherClosure() {\n    function ARCFourCipher(key) {\n     this.a = 0;\n     this.b = 0;\n     var s = new Uint8Array(256);\n     var i, j = 0, tmp, keyLength = key.length;\n     for (i = 0; i < 256; ++i) {\n      s[i] = i;\n     }\n     for (i = 0; i < 256; ++i) {\n      tmp = s[i];\n      j = j + tmp + key[i % keyLength] & 0xFF;\n      s[i] = s[j];\n      s[j] = tmp;\n     }\n     this.s = s;\n    }\n    ARCFourCipher.prototype = {\n     encryptBlock: function ARCFourCipher_encryptBlock(data) {\n      var i, n = data.length, tmp, tmp2;\n      var a = this.a, b = this.b, s = this.s;\n      var output = new Uint8Array(n);\n      for (i = 0; i < n; ++i) {\n       a = a + 1 & 0xFF;\n       tmp = s[a];\n       b = b + tmp & 0xFF;\n       tmp2 = s[b];\n       s[a] = tmp2;\n       s[b] = tmp;\n       output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\n      }\n      this.a = a;\n      this.b = b;\n      return output;\n     }\n    };\n    ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n    return ARCFourCipher;\n   }();\n   var calculateMD5 = function calculateMD5Closure() {\n    var r = new Uint8Array([\n     7,\n     12,\n     17,\n     22,\n     7,\n     12,\n     17,\n     22,\n     7,\n     12,\n     17,\n     22,\n     7,\n     12,\n     17,\n     22,\n     5,\n     9,\n     14,\n     20,\n     5,\n     9,\n     14,\n     20,\n     5,\n     9,\n     14,\n     20,\n     5,\n     9,\n     14,\n     20,\n     4,\n     11,\n     16,\n     23,\n     4,\n     11,\n     16,\n     23,\n     4,\n     11,\n     16,\n     23,\n     4,\n     11,\n     16,\n     23,\n     6,\n     10,\n     15,\n     21,\n     6,\n     10,\n     15,\n     21,\n     6,\n     10,\n     15,\n     21,\n     6,\n     10,\n     15,\n     21\n    ]);\n    var k = new Int32Array([\n     -680876936,\n     -389564586,\n     606105819,\n     -1044525330,\n     -176418897,\n     1200080426,\n     -1473231341,\n     -45705983,\n     1770035416,\n     -1958414417,\n     -42063,\n     -1990404162,\n     1804603682,\n     -40341101,\n     -1502002290,\n     1236535329,\n     -165796510,\n     -1069501632,\n     643717713,\n     -373897302,\n     -701558691,\n     38016083,\n     -660478335,\n     -405537848,\n     568446438,\n     -1019803690,\n     -187363961,\n     1163531501,\n     -1444681467,\n     -51403784,\n     1735328473,\n     -1926607734,\n     -378558,\n     -2022574463,\n     1839030562,\n     -35309556,\n     -1530992060,\n     1272893353,\n     -155497632,\n     -1094730640,\n     681279174,\n     -358537222,\n     -722521979,\n     76029189,\n     -640364487,\n     -421815835,\n     530742520,\n     -995338651,\n     -198630844,\n     1126891415,\n     -1416354905,\n     -57434055,\n     1700485571,\n     -1894986606,\n     -1051523,\n     -2054922799,\n     1873313359,\n     -30611744,\n     -1560198380,\n     1309151649,\n     -145523070,\n     -1120210379,\n     718787259,\n     -343485551\n    ]);\n    function hash(data, offset, length) {\n     var h0 = 1732584193, h1 = -271733879, h2 = -1732584194, h3 = 271733878;\n     var paddedLength = length + 72 & ~63;\n     var padded = new Uint8Array(paddedLength);\n     var i, j, n;\n     for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n     }\n     padded[i++] = 0x80;\n     n = paddedLength - 8;\n     while (i < n) {\n      padded[i++] = 0;\n     }\n     padded[i++] = length << 3 & 0xFF;\n     padded[i++] = length >> 5 & 0xFF;\n     padded[i++] = length >> 13 & 0xFF;\n     padded[i++] = length >> 21 & 0xFF;\n     padded[i++] = length >>> 29 & 0xFF;\n     padded[i++] = 0;\n     padded[i++] = 0;\n     padded[i++] = 0;\n     var w = new Int32Array(16);\n     for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j, i += 4) {\n       w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n      }\n      var a = h0, b = h1, c = h2, d = h3, f, g;\n      for (j = 0; j < 64; ++j) {\n       if (j < 16) {\n        f = b & c | ~b & d;\n        g = j;\n       } else if (j < 32) {\n        f = d & b | ~d & c;\n        g = 5 * j + 1 & 15;\n       } else if (j < 48) {\n        f = b ^ c ^ d;\n        g = 3 * j + 5 & 15;\n       } else {\n        f = c ^ (b | ~d);\n        g = 7 * j & 15;\n       }\n       var tmp = d, rotateArg = a + f + k[j] + w[g] | 0, rotate = r[j];\n       d = c;\n       c = b;\n       b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n       a = tmp;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n     }\n     return new Uint8Array([\n      h0 & 0xFF,\n      h0 >> 8 & 0xFF,\n      h0 >> 16 & 0xFF,\n      h0 >>> 24 & 0xFF,\n      h1 & 0xFF,\n      h1 >> 8 & 0xFF,\n      h1 >> 16 & 0xFF,\n      h1 >>> 24 & 0xFF,\n      h2 & 0xFF,\n      h2 >> 8 & 0xFF,\n      h2 >> 16 & 0xFF,\n      h2 >>> 24 & 0xFF,\n      h3 & 0xFF,\n      h3 >> 8 & 0xFF,\n      h3 >> 16 & 0xFF,\n      h3 >>> 24 & 0xFF\n     ]);\n    }\n    return hash;\n   }();\n   var Word64 = function Word64Closure() {\n    function Word64(highInteger, lowInteger) {\n     this.high = highInteger | 0;\n     this.low = lowInteger | 0;\n    }\n    Word64.prototype = {\n     and: function Word64_and(word) {\n      this.high &= word.high;\n      this.low &= word.low;\n     },\n     xor: function Word64_xor(word) {\n      this.high ^= word.high;\n      this.low ^= word.low;\n     },\n     or: function Word64_or(word) {\n      this.high |= word.high;\n      this.low |= word.low;\n     },\n     shiftRight: function Word64_shiftRight(places) {\n      if (places >= 32) {\n       this.low = this.high >>> places - 32 | 0;\n       this.high = 0;\n      } else {\n       this.low = this.low >>> places | this.high << 32 - places;\n       this.high = this.high >>> places | 0;\n      }\n     },\n     shiftLeft: function Word64_shiftLeft(places) {\n      if (places >= 32) {\n       this.high = this.low << places - 32;\n       this.low = 0;\n      } else {\n       this.high = this.high << places | this.low >>> 32 - places;\n       this.low = this.low << places;\n      }\n     },\n     rotateRight: function Word64_rotateRight(places) {\n      var low, high;\n      if (places & 32) {\n       high = this.low;\n       low = this.high;\n      } else {\n       low = this.low;\n       high = this.high;\n      }\n      places &= 31;\n      this.low = low >>> places | high << 32 - places;\n      this.high = high >>> places | low << 32 - places;\n     },\n     not: function Word64_not() {\n      this.high = ~this.high;\n      this.low = ~this.low;\n     },\n     add: function Word64_add(word) {\n      var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n      var highAdd = (this.high >>> 0) + (word.high >>> 0);\n      if (lowAdd > 0xFFFFFFFF) {\n       highAdd += 1;\n      }\n      this.low = lowAdd | 0;\n      this.high = highAdd | 0;\n     },\n     copyTo: function Word64_copyTo(bytes, offset) {\n      bytes[offset] = this.high >>> 24 & 0xFF;\n      bytes[offset + 1] = this.high >> 16 & 0xFF;\n      bytes[offset + 2] = this.high >> 8 & 0xFF;\n      bytes[offset + 3] = this.high & 0xFF;\n      bytes[offset + 4] = this.low >>> 24 & 0xFF;\n      bytes[offset + 5] = this.low >> 16 & 0xFF;\n      bytes[offset + 6] = this.low >> 8 & 0xFF;\n      bytes[offset + 7] = this.low & 0xFF;\n     },\n     assign: function Word64_assign(word) {\n      this.high = word.high;\n      this.low = word.low;\n     }\n    };\n    return Word64;\n   }();\n   var calculateSHA256 = function calculateSHA256Closure() {\n    function rotr(x, n) {\n     return x >>> n | x << 32 - n;\n    }\n    function ch(x, y, z) {\n     return x & y ^ ~x & z;\n    }\n    function maj(x, y, z) {\n     return x & y ^ x & z ^ y & z;\n    }\n    function sigma(x) {\n     return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n    }\n    function sigmaPrime(x) {\n     return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n    }\n    function littleSigma(x) {\n     return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n    }\n    function littleSigmaPrime(x) {\n     return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n    }\n    var k = [\n     0x428a2f98,\n     0x71374491,\n     0xb5c0fbcf,\n     0xe9b5dba5,\n     0x3956c25b,\n     0x59f111f1,\n     0x923f82a4,\n     0xab1c5ed5,\n     0xd807aa98,\n     0x12835b01,\n     0x243185be,\n     0x550c7dc3,\n     0x72be5d74,\n     0x80deb1fe,\n     0x9bdc06a7,\n     0xc19bf174,\n     0xe49b69c1,\n     0xefbe4786,\n     0x0fc19dc6,\n     0x240ca1cc,\n     0x2de92c6f,\n     0x4a7484aa,\n     0x5cb0a9dc,\n     0x76f988da,\n     0x983e5152,\n     0xa831c66d,\n     0xb00327c8,\n     0xbf597fc7,\n     0xc6e00bf3,\n     0xd5a79147,\n     0x06ca6351,\n     0x14292967,\n     0x27b70a85,\n     0x2e1b2138,\n     0x4d2c6dfc,\n     0x53380d13,\n     0x650a7354,\n     0x766a0abb,\n     0x81c2c92e,\n     0x92722c85,\n     0xa2bfe8a1,\n     0xa81a664b,\n     0xc24b8b70,\n     0xc76c51a3,\n     0xd192e819,\n     0xd6990624,\n     0xf40e3585,\n     0x106aa070,\n     0x19a4c116,\n     0x1e376c08,\n     0x2748774c,\n     0x34b0bcb5,\n     0x391c0cb3,\n     0x4ed8aa4a,\n     0x5b9cca4f,\n     0x682e6ff3,\n     0x748f82ee,\n     0x78a5636f,\n     0x84c87814,\n     0x8cc70208,\n     0x90befffa,\n     0xa4506ceb,\n     0xbef9a3f7,\n     0xc67178f2\n    ];\n    function hash(data, offset, length) {\n     var h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a, h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;\n     var paddedLength = Math.ceil((length + 9) / 64) * 64;\n     var padded = new Uint8Array(paddedLength);\n     var i, j, n;\n     for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n     }\n     padded[i++] = 0x80;\n     n = paddedLength - 8;\n     while (i < n) {\n      padded[i++] = 0;\n     }\n     padded[i++] = 0;\n     padded[i++] = 0;\n     padded[i++] = 0;\n     padded[i++] = length >>> 29 & 0xFF;\n     padded[i++] = length >> 21 & 0xFF;\n     padded[i++] = length >> 13 & 0xFF;\n     padded[i++] = length >> 5 & 0xFF;\n     padded[i++] = length << 3 & 0xFF;\n     var w = new Uint32Array(64);\n     for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n       w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n       i += 4;\n      }\n      for (j = 16; j < 64; ++j) {\n       w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n      }\n      var a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, t1, t2;\n      for (j = 0; j < 64; ++j) {\n       t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n       t2 = sigma(a) + maj(a, b, c);\n       h = g;\n       g = f;\n       f = e;\n       e = d + t1 | 0;\n       d = c;\n       c = b;\n       b = a;\n       a = t1 + t2 | 0;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n      h4 = h4 + e | 0;\n      h5 = h5 + f | 0;\n      h6 = h6 + g | 0;\n      h7 = h7 + h | 0;\n     }\n     return new Uint8Array([\n      h0 >> 24 & 0xFF,\n      h0 >> 16 & 0xFF,\n      h0 >> 8 & 0xFF,\n      h0 & 0xFF,\n      h1 >> 24 & 0xFF,\n      h1 >> 16 & 0xFF,\n      h1 >> 8 & 0xFF,\n      h1 & 0xFF,\n      h2 >> 24 & 0xFF,\n      h2 >> 16 & 0xFF,\n      h2 >> 8 & 0xFF,\n      h2 & 0xFF,\n      h3 >> 24 & 0xFF,\n      h3 >> 16 & 0xFF,\n      h3 >> 8 & 0xFF,\n      h3 & 0xFF,\n      h4 >> 24 & 0xFF,\n      h4 >> 16 & 0xFF,\n      h4 >> 8 & 0xFF,\n      h4 & 0xFF,\n      h5 >> 24 & 0xFF,\n      h5 >> 16 & 0xFF,\n      h5 >> 8 & 0xFF,\n      h5 & 0xFF,\n      h6 >> 24 & 0xFF,\n      h6 >> 16 & 0xFF,\n      h6 >> 8 & 0xFF,\n      h6 & 0xFF,\n      h7 >> 24 & 0xFF,\n      h7 >> 16 & 0xFF,\n      h7 >> 8 & 0xFF,\n      h7 & 0xFF\n     ]);\n    }\n    return hash;\n   }();\n   var calculateSHA512 = function calculateSHA512Closure() {\n    function ch(result, x, y, z, tmp) {\n     result.assign(x);\n     result.and(y);\n     tmp.assign(x);\n     tmp.not();\n     tmp.and(z);\n     result.xor(tmp);\n    }\n    function maj(result, x, y, z, tmp) {\n     result.assign(x);\n     result.and(y);\n     tmp.assign(x);\n     tmp.and(z);\n     result.xor(tmp);\n     tmp.assign(y);\n     tmp.and(z);\n     result.xor(tmp);\n    }\n    function sigma(result, x, tmp) {\n     result.assign(x);\n     result.rotateRight(28);\n     tmp.assign(x);\n     tmp.rotateRight(34);\n     result.xor(tmp);\n     tmp.assign(x);\n     tmp.rotateRight(39);\n     result.xor(tmp);\n    }\n    function sigmaPrime(result, x, tmp) {\n     result.assign(x);\n     result.rotateRight(14);\n     tmp.assign(x);\n     tmp.rotateRight(18);\n     result.xor(tmp);\n     tmp.assign(x);\n     tmp.rotateRight(41);\n     result.xor(tmp);\n    }\n    function littleSigma(result, x, tmp) {\n     result.assign(x);\n     result.rotateRight(1);\n     tmp.assign(x);\n     tmp.rotateRight(8);\n     result.xor(tmp);\n     tmp.assign(x);\n     tmp.shiftRight(7);\n     result.xor(tmp);\n    }\n    function littleSigmaPrime(result, x, tmp) {\n     result.assign(x);\n     result.rotateRight(19);\n     tmp.assign(x);\n     tmp.rotateRight(61);\n     result.xor(tmp);\n     tmp.assign(x);\n     tmp.shiftRight(6);\n     result.xor(tmp);\n    }\n    var k = [\n     new Word64(0x428a2f98, 0xd728ae22),\n     new Word64(0x71374491, 0x23ef65cd),\n     new Word64(0xb5c0fbcf, 0xec4d3b2f),\n     new Word64(0xe9b5dba5, 0x8189dbbc),\n     new Word64(0x3956c25b, 0xf348b538),\n     new Word64(0x59f111f1, 0xb605d019),\n     new Word64(0x923f82a4, 0xaf194f9b),\n     new Word64(0xab1c5ed5, 0xda6d8118),\n     new Word64(0xd807aa98, 0xa3030242),\n     new Word64(0x12835b01, 0x45706fbe),\n     new Word64(0x243185be, 0x4ee4b28c),\n     new Word64(0x550c7dc3, 0xd5ffb4e2),\n     new Word64(0x72be5d74, 0xf27b896f),\n     new Word64(0x80deb1fe, 0x3b1696b1),\n     new Word64(0x9bdc06a7, 0x25c71235),\n     new Word64(0xc19bf174, 0xcf692694),\n     new Word64(0xe49b69c1, 0x9ef14ad2),\n     new Word64(0xefbe4786, 0x384f25e3),\n     new Word64(0x0fc19dc6, 0x8b8cd5b5),\n     new Word64(0x240ca1cc, 0x77ac9c65),\n     new Word64(0x2de92c6f, 0x592b0275),\n     new Word64(0x4a7484aa, 0x6ea6e483),\n     new Word64(0x5cb0a9dc, 0xbd41fbd4),\n     new Word64(0x76f988da, 0x831153b5),\n     new Word64(0x983e5152, 0xee66dfab),\n     new Word64(0xa831c66d, 0x2db43210),\n     new Word64(0xb00327c8, 0x98fb213f),\n     new Word64(0xbf597fc7, 0xbeef0ee4),\n     new Word64(0xc6e00bf3, 0x3da88fc2),\n     new Word64(0xd5a79147, 0x930aa725),\n     new Word64(0x06ca6351, 0xe003826f),\n     new Word64(0x14292967, 0x0a0e6e70),\n     new Word64(0x27b70a85, 0x46d22ffc),\n     new Word64(0x2e1b2138, 0x5c26c926),\n     new Word64(0x4d2c6dfc, 0x5ac42aed),\n     new Word64(0x53380d13, 0x9d95b3df),\n     new Word64(0x650a7354, 0x8baf63de),\n     new Word64(0x766a0abb, 0x3c77b2a8),\n     new Word64(0x81c2c92e, 0x47edaee6),\n     new Word64(0x92722c85, 0x1482353b),\n     new Word64(0xa2bfe8a1, 0x4cf10364),\n     new Word64(0xa81a664b, 0xbc423001),\n     new Word64(0xc24b8b70, 0xd0f89791),\n     new Word64(0xc76c51a3, 0x0654be30),\n     new Word64(0xd192e819, 0xd6ef5218),\n     new Word64(0xd6990624, 0x5565a910),\n     new Word64(0xf40e3585, 0x5771202a),\n     new Word64(0x106aa070, 0x32bbd1b8),\n     new Word64(0x19a4c116, 0xb8d2d0c8),\n     new Word64(0x1e376c08, 0x5141ab53),\n     new Word64(0x2748774c, 0xdf8eeb99),\n     new Word64(0x34b0bcb5, 0xe19b48a8),\n     new Word64(0x391c0cb3, 0xc5c95a63),\n     new Word64(0x4ed8aa4a, 0xe3418acb),\n     new Word64(0x5b9cca4f, 0x7763e373),\n     new Word64(0x682e6ff3, 0xd6b2b8a3),\n     new Word64(0x748f82ee, 0x5defb2fc),\n     new Word64(0x78a5636f, 0x43172f60),\n     new Word64(0x84c87814, 0xa1f0ab72),\n     new Word64(0x8cc70208, 0x1a6439ec),\n     new Word64(0x90befffa, 0x23631e28),\n     new Word64(0xa4506ceb, 0xde82bde9),\n     new Word64(0xbef9a3f7, 0xb2c67915),\n     new Word64(0xc67178f2, 0xe372532b),\n     new Word64(0xca273ece, 0xea26619c),\n     new Word64(0xd186b8c7, 0x21c0c207),\n     new Word64(0xeada7dd6, 0xcde0eb1e),\n     new Word64(0xf57d4f7f, 0xee6ed178),\n     new Word64(0x06f067aa, 0x72176fba),\n     new Word64(0x0a637dc5, 0xa2c898a6),\n     new Word64(0x113f9804, 0xbef90dae),\n     new Word64(0x1b710b35, 0x131c471b),\n     new Word64(0x28db77f5, 0x23047d84),\n     new Word64(0x32caab7b, 0x40c72493),\n     new Word64(0x3c9ebe0a, 0x15c9bebc),\n     new Word64(0x431d67c4, 0x9c100d4c),\n     new Word64(0x4cc5d4be, 0xcb3e42b6),\n     new Word64(0x597f299c, 0xfc657e2a),\n     new Word64(0x5fcb6fab, 0x3ad6faec),\n     new Word64(0x6c44198c, 0x4a475817)\n    ];\n    function hash(data, offset, length, mode384) {\n     mode384 = !!mode384;\n     var h0, h1, h2, h3, h4, h5, h6, h7;\n     if (!mode384) {\n      h0 = new Word64(0x6a09e667, 0xf3bcc908);\n      h1 = new Word64(0xbb67ae85, 0x84caa73b);\n      h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n      h4 = new Word64(0x510e527f, 0xade682d1);\n      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n      h7 = new Word64(0x5be0cd19, 0x137e2179);\n     } else {\n      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n      h1 = new Word64(0x629a292a, 0x367cd507);\n      h2 = new Word64(0x9159015a, 0x3070dd17);\n      h3 = new Word64(0x152fecd8, 0xf70e5939);\n      h4 = new Word64(0x67332667, 0xffc00b31);\n      h5 = new Word64(0x8eb44a87, 0x68581511);\n      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n      h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n     }\n     var paddedLength = Math.ceil((length + 17) / 128) * 128;\n     var padded = new Uint8Array(paddedLength);\n     var i, j, n;\n     for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n     }\n     padded[i++] = 0x80;\n     n = paddedLength - 16;\n     while (i < n) {\n      padded[i++] = 0;\n     }\n     padded[i++] = 0;\n     padded[i++] = 0;\n     padded[i++] = 0;\n     padded[i++] = 0;\n     padded[i++] = 0;\n     padded[i++] = 0;\n     padded[i++] = 0;\n     padded[i++] = 0;\n     padded[i++] = 0;\n     padded[i++] = 0;\n     padded[i++] = 0;\n     padded[i++] = length >>> 29 & 0xFF;\n     padded[i++] = length >> 21 & 0xFF;\n     padded[i++] = length >> 13 & 0xFF;\n     padded[i++] = length >> 5 & 0xFF;\n     padded[i++] = length << 3 & 0xFF;\n     var w = new Array(80);\n     for (i = 0; i < 80; i++) {\n      w[i] = new Word64(0, 0);\n     }\n     var a = new Word64(0, 0), b = new Word64(0, 0), c = new Word64(0, 0);\n     var d = new Word64(0, 0), e = new Word64(0, 0), f = new Word64(0, 0);\n     var g = new Word64(0, 0), h = new Word64(0, 0);\n     var t1 = new Word64(0, 0), t2 = new Word64(0, 0);\n     var tmp1 = new Word64(0, 0), tmp2 = new Word64(0, 0), tmp3;\n     for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n       w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n       w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n       i += 8;\n      }\n      for (j = 16; j < 80; ++j) {\n       tmp3 = w[j];\n       littleSigmaPrime(tmp3, w[j - 2], tmp2);\n       tmp3.add(w[j - 7]);\n       littleSigma(tmp1, w[j - 15], tmp2);\n       tmp3.add(tmp1);\n       tmp3.add(w[j - 16]);\n      }\n      a.assign(h0);\n      b.assign(h1);\n      c.assign(h2);\n      d.assign(h3);\n      e.assign(h4);\n      f.assign(h5);\n      g.assign(h6);\n      h.assign(h7);\n      for (j = 0; j < 80; ++j) {\n       t1.assign(h);\n       sigmaPrime(tmp1, e, tmp2);\n       t1.add(tmp1);\n       ch(tmp1, e, f, g, tmp2);\n       t1.add(tmp1);\n       t1.add(k[j]);\n       t1.add(w[j]);\n       sigma(t2, a, tmp2);\n       maj(tmp1, a, b, c, tmp2);\n       t2.add(tmp1);\n       tmp3 = h;\n       h = g;\n       g = f;\n       f = e;\n       d.add(t1);\n       e = d;\n       d = c;\n       c = b;\n       b = a;\n       tmp3.assign(t1);\n       tmp3.add(t2);\n       a = tmp3;\n      }\n      h0.add(a);\n      h1.add(b);\n      h2.add(c);\n      h3.add(d);\n      h4.add(e);\n      h5.add(f);\n      h6.add(g);\n      h7.add(h);\n     }\n     var result;\n     if (!mode384) {\n      result = new Uint8Array(64);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n      h6.copyTo(result, 48);\n      h7.copyTo(result, 56);\n     } else {\n      result = new Uint8Array(48);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n     }\n     return result;\n    }\n    return hash;\n   }();\n   var calculateSHA384 = function calculateSHA384Closure() {\n    function hash(data, offset, length) {\n     return calculateSHA512(data, offset, length, true);\n    }\n    return hash;\n   }();\n   var NullCipher = function NullCipherClosure() {\n    function NullCipher() {\n    }\n    NullCipher.prototype = {\n     decryptBlock: function NullCipher_decryptBlock(data) {\n      return data;\n     }\n    };\n    return NullCipher;\n   }();\n   var AES128Cipher = function AES128CipherClosure() {\n    var rcon = new Uint8Array([\n     0x8d,\n     0x01,\n     0x02,\n     0x04,\n     0x08,\n     0x10,\n     0x20,\n     0x40,\n     0x80,\n     0x1b,\n     0x36,\n     0x6c,\n     0xd8,\n     0xab,\n     0x4d,\n     0x9a,\n     0x2f,\n     0x5e,\n     0xbc,\n     0x63,\n     0xc6,\n     0x97,\n     0x35,\n     0x6a,\n     0xd4,\n     0xb3,\n     0x7d,\n     0xfa,\n     0xef,\n     0xc5,\n     0x91,\n     0x39,\n     0x72,\n     0xe4,\n     0xd3,\n     0xbd,\n     0x61,\n     0xc2,\n     0x9f,\n     0x25,\n     0x4a,\n     0x94,\n     0x33,\n     0x66,\n     0xcc,\n     0x83,\n     0x1d,\n     0x3a,\n     0x74,\n     0xe8,\n     0xcb,\n     0x8d,\n     0x01,\n     0x02,\n     0x04,\n     0x08,\n     0x10,\n     0x20,\n     0x40,\n     0x80,\n     0x1b,\n     0x36,\n     0x6c,\n     0xd8,\n     0xab,\n     0x4d,\n     0x9a,\n     0x2f,\n     0x5e,\n     0xbc,\n     0x63,\n     0xc6,\n     0x97,\n     0x35,\n     0x6a,\n     0xd4,\n     0xb3,\n     0x7d,\n     0xfa,\n     0xef,\n     0xc5,\n     0x91,\n     0x39,\n     0x72,\n     0xe4,\n     0xd3,\n     0xbd,\n     0x61,\n     0xc2,\n     0x9f,\n     0x25,\n     0x4a,\n     0x94,\n     0x33,\n     0x66,\n     0xcc,\n     0x83,\n     0x1d,\n     0x3a,\n     0x74,\n     0xe8,\n     0xcb,\n     0x8d,\n     0x01,\n     0x02,\n     0x04,\n     0x08,\n     0x10,\n     0x20,\n     0x40,\n     0x80,\n     0x1b,\n     0x36,\n     0x6c,\n     0xd8,\n     0xab,\n     0x4d,\n     0x9a,\n     0x2f,\n     0x5e,\n     0xbc,\n     0x63,\n     0xc6,\n     0x97,\n     0x35,\n     0x6a,\n     0xd4,\n     0xb3,\n     0x7d,\n     0xfa,\n     0xef,\n     0xc5,\n     0x91,\n     0x39,\n     0x72,\n     0xe4,\n     0xd3,\n     0xbd,\n     0x61,\n     0xc2,\n     0x9f,\n     0x25,\n     0x4a,\n     0x94,\n     0x33,\n     0x66,\n     0xcc,\n     0x83,\n     0x1d,\n     0x3a,\n     0x74,\n     0xe8,\n     0xcb,\n     0x8d,\n     0x01,\n     0x02,\n     0x04,\n     0x08,\n     0x10,\n     0x20,\n     0x40,\n     0x80,\n     0x1b,\n     0x36,\n     0x6c,\n     0xd8,\n     0xab,\n     0x4d,\n     0x9a,\n     0x2f,\n     0x5e,\n     0xbc,\n     0x63,\n     0xc6,\n     0x97,\n     0x35,\n     0x6a,\n     0xd4,\n     0xb3,\n     0x7d,\n     0xfa,\n     0xef,\n     0xc5,\n     0x91,\n     0x39,\n     0x72,\n     0xe4,\n     0xd3,\n     0xbd,\n     0x61,\n     0xc2,\n     0x9f,\n     0x25,\n     0x4a,\n     0x94,\n     0x33,\n     0x66,\n     0xcc,\n     0x83,\n     0x1d,\n     0x3a,\n     0x74,\n     0xe8,\n     0xcb,\n     0x8d,\n     0x01,\n     0x02,\n     0x04,\n     0x08,\n     0x10,\n     0x20,\n     0x40,\n     0x80,\n     0x1b,\n     0x36,\n     0x6c,\n     0xd8,\n     0xab,\n     0x4d,\n     0x9a,\n     0x2f,\n     0x5e,\n     0xbc,\n     0x63,\n     0xc6,\n     0x97,\n     0x35,\n     0x6a,\n     0xd4,\n     0xb3,\n     0x7d,\n     0xfa,\n     0xef,\n     0xc5,\n     0x91,\n     0x39,\n     0x72,\n     0xe4,\n     0xd3,\n     0xbd,\n     0x61,\n     0xc2,\n     0x9f,\n     0x25,\n     0x4a,\n     0x94,\n     0x33,\n     0x66,\n     0xcc,\n     0x83,\n     0x1d,\n     0x3a,\n     0x74,\n     0xe8,\n     0xcb,\n     0x8d\n    ]);\n    var s = new Uint8Array([\n     0x63,\n     0x7c,\n     0x77,\n     0x7b,\n     0xf2,\n     0x6b,\n     0x6f,\n     0xc5,\n     0x30,\n     0x01,\n     0x67,\n     0x2b,\n     0xfe,\n     0xd7,\n     0xab,\n     0x76,\n     0xca,\n     0x82,\n     0xc9,\n     0x7d,\n     0xfa,\n     0x59,\n     0x47,\n     0xf0,\n     0xad,\n     0xd4,\n     0xa2,\n     0xaf,\n     0x9c,\n     0xa4,\n     0x72,\n     0xc0,\n     0xb7,\n     0xfd,\n     0x93,\n     0x26,\n     0x36,\n     0x3f,\n     0xf7,\n     0xcc,\n     0x34,\n     0xa5,\n     0xe5,\n     0xf1,\n     0x71,\n     0xd8,\n     0x31,\n     0x15,\n     0x04,\n     0xc7,\n     0x23,\n     0xc3,\n     0x18,\n     0x96,\n     0x05,\n     0x9a,\n     0x07,\n     0x12,\n     0x80,\n     0xe2,\n     0xeb,\n     0x27,\n     0xb2,\n     0x75,\n     0x09,\n     0x83,\n     0x2c,\n     0x1a,\n     0x1b,\n     0x6e,\n     0x5a,\n     0xa0,\n     0x52,\n     0x3b,\n     0xd6,\n     0xb3,\n     0x29,\n     0xe3,\n     0x2f,\n     0x84,\n     0x53,\n     0xd1,\n     0x00,\n     0xed,\n     0x20,\n     0xfc,\n     0xb1,\n     0x5b,\n     0x6a,\n     0xcb,\n     0xbe,\n     0x39,\n     0x4a,\n     0x4c,\n     0x58,\n     0xcf,\n     0xd0,\n     0xef,\n     0xaa,\n     0xfb,\n     0x43,\n     0x4d,\n     0x33,\n     0x85,\n     0x45,\n     0xf9,\n     0x02,\n     0x7f,\n     0x50,\n     0x3c,\n     0x9f,\n     0xa8,\n     0x51,\n     0xa3,\n     0x40,\n     0x8f,\n     0x92,\n     0x9d,\n     0x38,\n     0xf5,\n     0xbc,\n     0xb6,\n     0xda,\n     0x21,\n     0x10,\n     0xff,\n     0xf3,\n     0xd2,\n     0xcd,\n     0x0c,\n     0x13,\n     0xec,\n     0x5f,\n     0x97,\n     0x44,\n     0x17,\n     0xc4,\n     0xa7,\n     0x7e,\n     0x3d,\n     0x64,\n     0x5d,\n     0x19,\n     0x73,\n     0x60,\n     0x81,\n     0x4f,\n     0xdc,\n     0x22,\n     0x2a,\n     0x90,\n     0x88,\n     0x46,\n     0xee,\n     0xb8,\n     0x14,\n     0xde,\n     0x5e,\n     0x0b,\n     0xdb,\n     0xe0,\n     0x32,\n     0x3a,\n     0x0a,\n     0x49,\n     0x06,\n     0x24,\n     0x5c,\n     0xc2,\n     0xd3,\n     0xac,\n     0x62,\n     0x91,\n     0x95,\n     0xe4,\n     0x79,\n     0xe7,\n     0xc8,\n     0x37,\n     0x6d,\n     0x8d,\n     0xd5,\n     0x4e,\n     0xa9,\n     0x6c,\n     0x56,\n     0xf4,\n     0xea,\n     0x65,\n     0x7a,\n     0xae,\n     0x08,\n     0xba,\n     0x78,\n     0x25,\n     0x2e,\n     0x1c,\n     0xa6,\n     0xb4,\n     0xc6,\n     0xe8,\n     0xdd,\n     0x74,\n     0x1f,\n     0x4b,\n     0xbd,\n     0x8b,\n     0x8a,\n     0x70,\n     0x3e,\n     0xb5,\n     0x66,\n     0x48,\n     0x03,\n     0xf6,\n     0x0e,\n     0x61,\n     0x35,\n     0x57,\n     0xb9,\n     0x86,\n     0xc1,\n     0x1d,\n     0x9e,\n     0xe1,\n     0xf8,\n     0x98,\n     0x11,\n     0x69,\n     0xd9,\n     0x8e,\n     0x94,\n     0x9b,\n     0x1e,\n     0x87,\n     0xe9,\n     0xce,\n     0x55,\n     0x28,\n     0xdf,\n     0x8c,\n     0xa1,\n     0x89,\n     0x0d,\n     0xbf,\n     0xe6,\n     0x42,\n     0x68,\n     0x41,\n     0x99,\n     0x2d,\n     0x0f,\n     0xb0,\n     0x54,\n     0xbb,\n     0x16\n    ]);\n    var inv_s = new Uint8Array([\n     0x52,\n     0x09,\n     0x6a,\n     0xd5,\n     0x30,\n     0x36,\n     0xa5,\n     0x38,\n     0xbf,\n     0x40,\n     0xa3,\n     0x9e,\n     0x81,\n     0xf3,\n     0xd7,\n     0xfb,\n     0x7c,\n     0xe3,\n     0x39,\n     0x82,\n     0x9b,\n     0x2f,\n     0xff,\n     0x87,\n     0x34,\n     0x8e,\n     0x43,\n     0x44,\n     0xc4,\n     0xde,\n     0xe9,\n     0xcb,\n     0x54,\n     0x7b,\n     0x94,\n     0x32,\n     0xa6,\n     0xc2,\n     0x23,\n     0x3d,\n     0xee,\n     0x4c,\n     0x95,\n     0x0b,\n     0x42,\n     0xfa,\n     0xc3,\n     0x4e,\n     0x08,\n     0x2e,\n     0xa1,\n     0x66,\n     0x28,\n     0xd9,\n     0x24,\n     0xb2,\n     0x76,\n     0x5b,\n     0xa2,\n     0x49,\n     0x6d,\n     0x8b,\n     0xd1,\n     0x25,\n     0x72,\n     0xf8,\n     0xf6,\n     0x64,\n     0x86,\n     0x68,\n     0x98,\n     0x16,\n     0xd4,\n     0xa4,\n     0x5c,\n     0xcc,\n     0x5d,\n     0x65,\n     0xb6,\n     0x92,\n     0x6c,\n     0x70,\n     0x48,\n     0x50,\n     0xfd,\n     0xed,\n     0xb9,\n     0xda,\n     0x5e,\n     0x15,\n     0x46,\n     0x57,\n     0xa7,\n     0x8d,\n     0x9d,\n     0x84,\n     0x90,\n     0xd8,\n     0xab,\n     0x00,\n     0x8c,\n     0xbc,\n     0xd3,\n     0x0a,\n     0xf7,\n     0xe4,\n     0x58,\n     0x05,\n     0xb8,\n     0xb3,\n     0x45,\n     0x06,\n     0xd0,\n     0x2c,\n     0x1e,\n     0x8f,\n     0xca,\n     0x3f,\n     0x0f,\n     0x02,\n     0xc1,\n     0xaf,\n     0xbd,\n     0x03,\n     0x01,\n     0x13,\n     0x8a,\n     0x6b,\n     0x3a,\n     0x91,\n     0x11,\n     0x41,\n     0x4f,\n     0x67,\n     0xdc,\n     0xea,\n     0x97,\n     0xf2,\n     0xcf,\n     0xce,\n     0xf0,\n     0xb4,\n     0xe6,\n     0x73,\n     0x96,\n     0xac,\n     0x74,\n     0x22,\n     0xe7,\n     0xad,\n     0x35,\n     0x85,\n     0xe2,\n     0xf9,\n     0x37,\n     0xe8,\n     0x1c,\n     0x75,\n     0xdf,\n     0x6e,\n     0x47,\n     0xf1,\n     0x1a,\n     0x71,\n     0x1d,\n     0x29,\n     0xc5,\n     0x89,\n     0x6f,\n     0xb7,\n     0x62,\n     0x0e,\n     0xaa,\n     0x18,\n     0xbe,\n     0x1b,\n     0xfc,\n     0x56,\n     0x3e,\n     0x4b,\n     0xc6,\n     0xd2,\n     0x79,\n     0x20,\n     0x9a,\n     0xdb,\n     0xc0,\n     0xfe,\n     0x78,\n     0xcd,\n     0x5a,\n     0xf4,\n     0x1f,\n     0xdd,\n     0xa8,\n     0x33,\n     0x88,\n     0x07,\n     0xc7,\n     0x31,\n     0xb1,\n     0x12,\n     0x10,\n     0x59,\n     0x27,\n     0x80,\n     0xec,\n     0x5f,\n     0x60,\n     0x51,\n     0x7f,\n     0xa9,\n     0x19,\n     0xb5,\n     0x4a,\n     0x0d,\n     0x2d,\n     0xe5,\n     0x7a,\n     0x9f,\n     0x93,\n     0xc9,\n     0x9c,\n     0xef,\n     0xa0,\n     0xe0,\n     0x3b,\n     0x4d,\n     0xae,\n     0x2a,\n     0xf5,\n     0xb0,\n     0xc8,\n     0xeb,\n     0xbb,\n     0x3c,\n     0x83,\n     0x53,\n     0x99,\n     0x61,\n     0x17,\n     0x2b,\n     0x04,\n     0x7e,\n     0xba,\n     0x77,\n     0xd6,\n     0x26,\n     0xe1,\n     0x69,\n     0x14,\n     0x63,\n     0x55,\n     0x21,\n     0x0c,\n     0x7d\n    ]);\n    var mixCol = new Uint8Array(256);\n    for (var i = 0; i < 256; i++) {\n     if (i < 128) {\n      mixCol[i] = i << 1;\n     } else {\n      mixCol[i] = i << 1 ^ 0x1b;\n     }\n    }\n    var mix = new Uint32Array([\n     0x00000000,\n     0x0e090d0b,\n     0x1c121a16,\n     0x121b171d,\n     0x3824342c,\n     0x362d3927,\n     0x24362e3a,\n     0x2a3f2331,\n     0x70486858,\n     0x7e416553,\n     0x6c5a724e,\n     0x62537f45,\n     0x486c5c74,\n     0x4665517f,\n     0x547e4662,\n     0x5a774b69,\n     0xe090d0b0,\n     0xee99ddbb,\n     0xfc82caa6,\n     0xf28bc7ad,\n     0xd8b4e49c,\n     0xd6bde997,\n     0xc4a6fe8a,\n     0xcaaff381,\n     0x90d8b8e8,\n     0x9ed1b5e3,\n     0x8ccaa2fe,\n     0x82c3aff5,\n     0xa8fc8cc4,\n     0xa6f581cf,\n     0xb4ee96d2,\n     0xbae79bd9,\n     0xdb3bbb7b,\n     0xd532b670,\n     0xc729a16d,\n     0xc920ac66,\n     0xe31f8f57,\n     0xed16825c,\n     0xff0d9541,\n     0xf104984a,\n     0xab73d323,\n     0xa57ade28,\n     0xb761c935,\n     0xb968c43e,\n     0x9357e70f,\n     0x9d5eea04,\n     0x8f45fd19,\n     0x814cf012,\n     0x3bab6bcb,\n     0x35a266c0,\n     0x27b971dd,\n     0x29b07cd6,\n     0x038f5fe7,\n     0x0d8652ec,\n     0x1f9d45f1,\n     0x119448fa,\n     0x4be30393,\n     0x45ea0e98,\n     0x57f11985,\n     0x59f8148e,\n     0x73c737bf,\n     0x7dce3ab4,\n     0x6fd52da9,\n     0x61dc20a2,\n     0xad766df6,\n     0xa37f60fd,\n     0xb16477e0,\n     0xbf6d7aeb,\n     0x955259da,\n     0x9b5b54d1,\n     0x894043cc,\n     0x87494ec7,\n     0xdd3e05ae,\n     0xd33708a5,\n     0xc12c1fb8,\n     0xcf2512b3,\n     0xe51a3182,\n     0xeb133c89,\n     0xf9082b94,\n     0xf701269f,\n     0x4de6bd46,\n     0x43efb04d,\n     0x51f4a750,\n     0x5ffdaa5b,\n     0x75c2896a,\n     0x7bcb8461,\n     0x69d0937c,\n     0x67d99e77,\n     0x3daed51e,\n     0x33a7d815,\n     0x21bccf08,\n     0x2fb5c203,\n     0x058ae132,\n     0x0b83ec39,\n     0x1998fb24,\n     0x1791f62f,\n     0x764dd68d,\n     0x7844db86,\n     0x6a5fcc9b,\n     0x6456c190,\n     0x4e69e2a1,\n     0x4060efaa,\n     0x527bf8b7,\n     0x5c72f5bc,\n     0x0605bed5,\n     0x080cb3de,\n     0x1a17a4c3,\n     0x141ea9c8,\n     0x3e218af9,\n     0x302887f2,\n     0x223390ef,\n     0x2c3a9de4,\n     0x96dd063d,\n     0x98d40b36,\n     0x8acf1c2b,\n     0x84c61120,\n     0xaef93211,\n     0xa0f03f1a,\n     0xb2eb2807,\n     0xbce2250c,\n     0xe6956e65,\n     0xe89c636e,\n     0xfa877473,\n     0xf48e7978,\n     0xdeb15a49,\n     0xd0b85742,\n     0xc2a3405f,\n     0xccaa4d54,\n     0x41ecdaf7,\n     0x4fe5d7fc,\n     0x5dfec0e1,\n     0x53f7cdea,\n     0x79c8eedb,\n     0x77c1e3d0,\n     0x65daf4cd,\n     0x6bd3f9c6,\n     0x31a4b2af,\n     0x3fadbfa4,\n     0x2db6a8b9,\n     0x23bfa5b2,\n     0x09808683,\n     0x07898b88,\n     0x15929c95,\n     0x1b9b919e,\n     0xa17c0a47,\n     0xaf75074c,\n     0xbd6e1051,\n     0xb3671d5a,\n     0x99583e6b,\n     0x97513360,\n     0x854a247d,\n     0x8b432976,\n     0xd134621f,\n     0xdf3d6f14,\n     0xcd267809,\n     0xc32f7502,\n     0xe9105633,\n     0xe7195b38,\n     0xf5024c25,\n     0xfb0b412e,\n     0x9ad7618c,\n     0x94de6c87,\n     0x86c57b9a,\n     0x88cc7691,\n     0xa2f355a0,\n     0xacfa58ab,\n     0xbee14fb6,\n     0xb0e842bd,\n     0xea9f09d4,\n     0xe49604df,\n     0xf68d13c2,\n     0xf8841ec9,\n     0xd2bb3df8,\n     0xdcb230f3,\n     0xcea927ee,\n     0xc0a02ae5,\n     0x7a47b13c,\n     0x744ebc37,\n     0x6655ab2a,\n     0x685ca621,\n     0x42638510,\n     0x4c6a881b,\n     0x5e719f06,\n     0x5078920d,\n     0x0a0fd964,\n     0x0406d46f,\n     0x161dc372,\n     0x1814ce79,\n     0x322bed48,\n     0x3c22e043,\n     0x2e39f75e,\n     0x2030fa55,\n     0xec9ab701,\n     0xe293ba0a,\n     0xf088ad17,\n     0xfe81a01c,\n     0xd4be832d,\n     0xdab78e26,\n     0xc8ac993b,\n     0xc6a59430,\n     0x9cd2df59,\n     0x92dbd252,\n     0x80c0c54f,\n     0x8ec9c844,\n     0xa4f6eb75,\n     0xaaffe67e,\n     0xb8e4f163,\n     0xb6edfc68,\n     0x0c0a67b1,\n     0x02036aba,\n     0x10187da7,\n     0x1e1170ac,\n     0x342e539d,\n     0x3a275e96,\n     0x283c498b,\n     0x26354480,\n     0x7c420fe9,\n     0x724b02e2,\n     0x605015ff,\n     0x6e5918f4,\n     0x44663bc5,\n     0x4a6f36ce,\n     0x587421d3,\n     0x567d2cd8,\n     0x37a10c7a,\n     0x39a80171,\n     0x2bb3166c,\n     0x25ba1b67,\n     0x0f853856,\n     0x018c355d,\n     0x13972240,\n     0x1d9e2f4b,\n     0x47e96422,\n     0x49e06929,\n     0x5bfb7e34,\n     0x55f2733f,\n     0x7fcd500e,\n     0x71c45d05,\n     0x63df4a18,\n     0x6dd64713,\n     0xd731dcca,\n     0xd938d1c1,\n     0xcb23c6dc,\n     0xc52acbd7,\n     0xef15e8e6,\n     0xe11ce5ed,\n     0xf307f2f0,\n     0xfd0efffb,\n     0xa779b492,\n     0xa970b999,\n     0xbb6bae84,\n     0xb562a38f,\n     0x9f5d80be,\n     0x91548db5,\n     0x834f9aa8,\n     0x8d4697a3\n    ]);\n    function expandKey128(cipherKey) {\n     var b = 176, result = new Uint8Array(b);\n     result.set(cipherKey);\n     for (var j = 16, i = 1; j < b; ++i) {\n      var t1 = result[j - 3], t2 = result[j - 2], t3 = result[j - 1], t4 = result[j - 4];\n      t1 = s[t1];\n      t2 = s[t2];\n      t3 = s[t3];\n      t4 = s[t4];\n      t1 = t1 ^ rcon[i];\n      for (var n = 0; n < 4; ++n) {\n       result[j] = t1 ^= result[j - 16];\n       j++;\n       result[j] = t2 ^= result[j - 16];\n       j++;\n       result[j] = t3 ^= result[j - 16];\n       j++;\n       result[j] = t4 ^= result[j - 16];\n       j++;\n      }\n     }\n     return result;\n    }\n    function decrypt128(input, key) {\n     var state = new Uint8Array(16);\n     state.set(input);\n     var i, j, k;\n     var t, u, v;\n     for (j = 0, k = 160; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n     }\n     for (i = 9; i >= 1; --i) {\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (j = 0; j < 16; ++j) {\n       state[j] = inv_s[state[j]];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n       state[j] ^= key[k];\n      }\n      for (j = 0; j < 16; j += 4) {\n       var s0 = mix[state[j]], s1 = mix[state[j + 1]], s2 = mix[state[j + 2]], s3 = mix[state[j + 3]];\n       t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n       state[j] = t >>> 24 & 0xFF;\n       state[j + 1] = t >> 16 & 0xFF;\n       state[j + 2] = t >> 8 & 0xFF;\n       state[j + 3] = t & 0xFF;\n      }\n     }\n     t = state[13];\n     state[13] = state[9];\n     state[9] = state[5];\n     state[5] = state[1];\n     state[1] = t;\n     t = state[14];\n     u = state[10];\n     state[14] = state[6];\n     state[10] = state[2];\n     state[6] = t;\n     state[2] = u;\n     t = state[15];\n     u = state[11];\n     v = state[7];\n     state[15] = state[3];\n     state[11] = t;\n     state[7] = u;\n     state[3] = v;\n     for (j = 0; j < 16; ++j) {\n      state[j] = inv_s[state[j]];\n      state[j] ^= key[j];\n     }\n     return state;\n    }\n    function encrypt128(input, key) {\n     var t, u, v, k;\n     var state = new Uint8Array(16);\n     state.set(input);\n     for (j = 0; j < 16; ++j) {\n      state[j] ^= key[j];\n     }\n     for (i = 1; i < 10; i++) {\n      for (j = 0; j < 16; ++j) {\n       state[j] = s[state[j]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (var j = 0; j < 16; j += 4) {\n       var s0 = state[j + 0], s1 = state[j + 1];\n       var s2 = state[j + 2], s3 = state[j + 3];\n       t = s0 ^ s1 ^ s2 ^ s3;\n       state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n       state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n       state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n       state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n       state[j] ^= key[k];\n      }\n     }\n     for (j = 0; j < 16; ++j) {\n      state[j] = s[state[j]];\n     }\n     v = state[1];\n     state[1] = state[5];\n     state[5] = state[9];\n     state[9] = state[13];\n     state[13] = v;\n     v = state[2];\n     u = state[6];\n     state[2] = state[10];\n     state[6] = state[14];\n     state[10] = v;\n     state[14] = u;\n     v = state[3];\n     u = state[7];\n     t = state[11];\n     state[3] = state[15];\n     state[7] = v;\n     state[11] = u;\n     state[15] = t;\n     for (j = 0, k = 160; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n     }\n     return state;\n    }\n    function AES128Cipher(key) {\n     this.key = expandKey128(key);\n     this.buffer = new Uint8Array(16);\n     this.bufferPosition = 0;\n    }\n    function decryptBlock2(data, finalize) {\n     var i, j, ii, sourceLength = data.length, buffer = this.buffer, bufferLength = this.bufferPosition, result = [], iv = this.iv;\n     for (i = 0; i < sourceLength; ++i) {\n      buffer[bufferLength] = data[i];\n      ++bufferLength;\n      if (bufferLength < 16) {\n       continue;\n      }\n      var plain = decrypt128(buffer, this.key);\n      for (j = 0; j < 16; ++j) {\n       plain[j] ^= iv[j];\n      }\n      iv = buffer;\n      result.push(plain);\n      buffer = new Uint8Array(16);\n      bufferLength = 0;\n     }\n     this.buffer = buffer;\n     this.bufferLength = bufferLength;\n     this.iv = iv;\n     if (result.length === 0) {\n      return new Uint8Array([]);\n     }\n     var outputLength = 16 * result.length;\n     if (finalize) {\n      var lastBlock = result[result.length - 1];\n      var psLen = lastBlock[15];\n      if (psLen <= 16) {\n       for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n        if (lastBlock[i] !== psLen) {\n         psLen = 0;\n         break;\n        }\n       }\n       outputLength -= psLen;\n       result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n      }\n     }\n     var output = new Uint8Array(outputLength);\n     for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n      output.set(result[i], j);\n     }\n     return output;\n    }\n    AES128Cipher.prototype = {\n     decryptBlock: function AES128Cipher_decryptBlock(data, finalize) {\n      var i, sourceLength = data.length;\n      var buffer = this.buffer, bufferLength = this.bufferPosition;\n      for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n       buffer[bufferLength] = data[i];\n      }\n      if (bufferLength < 16) {\n       this.bufferLength = bufferLength;\n       return new Uint8Array([]);\n      }\n      this.iv = buffer;\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = decryptBlock2;\n      return this.decryptBlock(data.subarray(16), finalize);\n     },\n     encrypt: function AES128Cipher_encrypt(data, iv) {\n      var i, j, ii, sourceLength = data.length, buffer = this.buffer, bufferLength = this.bufferPosition, result = [];\n      if (!iv) {\n       iv = new Uint8Array(16);\n      }\n      for (i = 0; i < sourceLength; ++i) {\n       buffer[bufferLength] = data[i];\n       ++bufferLength;\n       if (bufferLength < 16) {\n        continue;\n       }\n       for (j = 0; j < 16; ++j) {\n        buffer[j] ^= iv[j];\n       }\n       var cipher = encrypt128(buffer, this.key);\n       iv = cipher;\n       result.push(cipher);\n       buffer = new Uint8Array(16);\n       bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n       return new Uint8Array([]);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n       output.set(result[i], j);\n      }\n      return output;\n     }\n    };\n    return AES128Cipher;\n   }();\n   var AES256Cipher = function AES256CipherClosure() {\n    var rcon = new Uint8Array([\n     0x8d,\n     0x01,\n     0x02,\n     0x04,\n     0x08,\n     0x10,\n     0x20,\n     0x40,\n     0x80,\n     0x1b,\n     0x36,\n     0x6c,\n     0xd8,\n     0xab,\n     0x4d,\n     0x9a,\n     0x2f,\n     0x5e,\n     0xbc,\n     0x63,\n     0xc6,\n     0x97,\n     0x35,\n     0x6a,\n     0xd4,\n     0xb3,\n     0x7d,\n     0xfa,\n     0xef,\n     0xc5,\n     0x91,\n     0x39,\n     0x72,\n     0xe4,\n     0xd3,\n     0xbd,\n     0x61,\n     0xc2,\n     0x9f,\n     0x25,\n     0x4a,\n     0x94,\n     0x33,\n     0x66,\n     0xcc,\n     0x83,\n     0x1d,\n     0x3a,\n     0x74,\n     0xe8,\n     0xcb,\n     0x8d,\n     0x01,\n     0x02,\n     0x04,\n     0x08,\n     0x10,\n     0x20,\n     0x40,\n     0x80,\n     0x1b,\n     0x36,\n     0x6c,\n     0xd8,\n     0xab,\n     0x4d,\n     0x9a,\n     0x2f,\n     0x5e,\n     0xbc,\n     0x63,\n     0xc6,\n     0x97,\n     0x35,\n     0x6a,\n     0xd4,\n     0xb3,\n     0x7d,\n     0xfa,\n     0xef,\n     0xc5,\n     0x91,\n     0x39,\n     0x72,\n     0xe4,\n     0xd3,\n     0xbd,\n     0x61,\n     0xc2,\n     0x9f,\n     0x25,\n     0x4a,\n     0x94,\n     0x33,\n     0x66,\n     0xcc,\n     0x83,\n     0x1d,\n     0x3a,\n     0x74,\n     0xe8,\n     0xcb,\n     0x8d,\n     0x01,\n     0x02,\n     0x04,\n     0x08,\n     0x10,\n     0x20,\n     0x40,\n     0x80,\n     0x1b,\n     0x36,\n     0x6c,\n     0xd8,\n     0xab,\n     0x4d,\n     0x9a,\n     0x2f,\n     0x5e,\n     0xbc,\n     0x63,\n     0xc6,\n     0x97,\n     0x35,\n     0x6a,\n     0xd4,\n     0xb3,\n     0x7d,\n     0xfa,\n     0xef,\n     0xc5,\n     0x91,\n     0x39,\n     0x72,\n     0xe4,\n     0xd3,\n     0xbd,\n     0x61,\n     0xc2,\n     0x9f,\n     0x25,\n     0x4a,\n     0x94,\n     0x33,\n     0x66,\n     0xcc,\n     0x83,\n     0x1d,\n     0x3a,\n     0x74,\n     0xe8,\n     0xcb,\n     0x8d,\n     0x01,\n     0x02,\n     0x04,\n     0x08,\n     0x10,\n     0x20,\n     0x40,\n     0x80,\n     0x1b,\n     0x36,\n     0x6c,\n     0xd8,\n     0xab,\n     0x4d,\n     0x9a,\n     0x2f,\n     0x5e,\n     0xbc,\n     0x63,\n     0xc6,\n     0x97,\n     0x35,\n     0x6a,\n     0xd4,\n     0xb3,\n     0x7d,\n     0xfa,\n     0xef,\n     0xc5,\n     0x91,\n     0x39,\n     0x72,\n     0xe4,\n     0xd3,\n     0xbd,\n     0x61,\n     0xc2,\n     0x9f,\n     0x25,\n     0x4a,\n     0x94,\n     0x33,\n     0x66,\n     0xcc,\n     0x83,\n     0x1d,\n     0x3a,\n     0x74,\n     0xe8,\n     0xcb,\n     0x8d,\n     0x01,\n     0x02,\n     0x04,\n     0x08,\n     0x10,\n     0x20,\n     0x40,\n     0x80,\n     0x1b,\n     0x36,\n     0x6c,\n     0xd8,\n     0xab,\n     0x4d,\n     0x9a,\n     0x2f,\n     0x5e,\n     0xbc,\n     0x63,\n     0xc6,\n     0x97,\n     0x35,\n     0x6a,\n     0xd4,\n     0xb3,\n     0x7d,\n     0xfa,\n     0xef,\n     0xc5,\n     0x91,\n     0x39,\n     0x72,\n     0xe4,\n     0xd3,\n     0xbd,\n     0x61,\n     0xc2,\n     0x9f,\n     0x25,\n     0x4a,\n     0x94,\n     0x33,\n     0x66,\n     0xcc,\n     0x83,\n     0x1d,\n     0x3a,\n     0x74,\n     0xe8,\n     0xcb,\n     0x8d\n    ]);\n    var s = new Uint8Array([\n     0x63,\n     0x7c,\n     0x77,\n     0x7b,\n     0xf2,\n     0x6b,\n     0x6f,\n     0xc5,\n     0x30,\n     0x01,\n     0x67,\n     0x2b,\n     0xfe,\n     0xd7,\n     0xab,\n     0x76,\n     0xca,\n     0x82,\n     0xc9,\n     0x7d,\n     0xfa,\n     0x59,\n     0x47,\n     0xf0,\n     0xad,\n     0xd4,\n     0xa2,\n     0xaf,\n     0x9c,\n     0xa4,\n     0x72,\n     0xc0,\n     0xb7,\n     0xfd,\n     0x93,\n     0x26,\n     0x36,\n     0x3f,\n     0xf7,\n     0xcc,\n     0x34,\n     0xa5,\n     0xe5,\n     0xf1,\n     0x71,\n     0xd8,\n     0x31,\n     0x15,\n     0x04,\n     0xc7,\n     0x23,\n     0xc3,\n     0x18,\n     0x96,\n     0x05,\n     0x9a,\n     0x07,\n     0x12,\n     0x80,\n     0xe2,\n     0xeb,\n     0x27,\n     0xb2,\n     0x75,\n     0x09,\n     0x83,\n     0x2c,\n     0x1a,\n     0x1b,\n     0x6e,\n     0x5a,\n     0xa0,\n     0x52,\n     0x3b,\n     0xd6,\n     0xb3,\n     0x29,\n     0xe3,\n     0x2f,\n     0x84,\n     0x53,\n     0xd1,\n     0x00,\n     0xed,\n     0x20,\n     0xfc,\n     0xb1,\n     0x5b,\n     0x6a,\n     0xcb,\n     0xbe,\n     0x39,\n     0x4a,\n     0x4c,\n     0x58,\n     0xcf,\n     0xd0,\n     0xef,\n     0xaa,\n     0xfb,\n     0x43,\n     0x4d,\n     0x33,\n     0x85,\n     0x45,\n     0xf9,\n     0x02,\n     0x7f,\n     0x50,\n     0x3c,\n     0x9f,\n     0xa8,\n     0x51,\n     0xa3,\n     0x40,\n     0x8f,\n     0x92,\n     0x9d,\n     0x38,\n     0xf5,\n     0xbc,\n     0xb6,\n     0xda,\n     0x21,\n     0x10,\n     0xff,\n     0xf3,\n     0xd2,\n     0xcd,\n     0x0c,\n     0x13,\n     0xec,\n     0x5f,\n     0x97,\n     0x44,\n     0x17,\n     0xc4,\n     0xa7,\n     0x7e,\n     0x3d,\n     0x64,\n     0x5d,\n     0x19,\n     0x73,\n     0x60,\n     0x81,\n     0x4f,\n     0xdc,\n     0x22,\n     0x2a,\n     0x90,\n     0x88,\n     0x46,\n     0xee,\n     0xb8,\n     0x14,\n     0xde,\n     0x5e,\n     0x0b,\n     0xdb,\n     0xe0,\n     0x32,\n     0x3a,\n     0x0a,\n     0x49,\n     0x06,\n     0x24,\n     0x5c,\n     0xc2,\n     0xd3,\n     0xac,\n     0x62,\n     0x91,\n     0x95,\n     0xe4,\n     0x79,\n     0xe7,\n     0xc8,\n     0x37,\n     0x6d,\n     0x8d,\n     0xd5,\n     0x4e,\n     0xa9,\n     0x6c,\n     0x56,\n     0xf4,\n     0xea,\n     0x65,\n     0x7a,\n     0xae,\n     0x08,\n     0xba,\n     0x78,\n     0x25,\n     0x2e,\n     0x1c,\n     0xa6,\n     0xb4,\n     0xc6,\n     0xe8,\n     0xdd,\n     0x74,\n     0x1f,\n     0x4b,\n     0xbd,\n     0x8b,\n     0x8a,\n     0x70,\n     0x3e,\n     0xb5,\n     0x66,\n     0x48,\n     0x03,\n     0xf6,\n     0x0e,\n     0x61,\n     0x35,\n     0x57,\n     0xb9,\n     0x86,\n     0xc1,\n     0x1d,\n     0x9e,\n     0xe1,\n     0xf8,\n     0x98,\n     0x11,\n     0x69,\n     0xd9,\n     0x8e,\n     0x94,\n     0x9b,\n     0x1e,\n     0x87,\n     0xe9,\n     0xce,\n     0x55,\n     0x28,\n     0xdf,\n     0x8c,\n     0xa1,\n     0x89,\n     0x0d,\n     0xbf,\n     0xe6,\n     0x42,\n     0x68,\n     0x41,\n     0x99,\n     0x2d,\n     0x0f,\n     0xb0,\n     0x54,\n     0xbb,\n     0x16\n    ]);\n    var inv_s = new Uint8Array([\n     0x52,\n     0x09,\n     0x6a,\n     0xd5,\n     0x30,\n     0x36,\n     0xa5,\n     0x38,\n     0xbf,\n     0x40,\n     0xa3,\n     0x9e,\n     0x81,\n     0xf3,\n     0xd7,\n     0xfb,\n     0x7c,\n     0xe3,\n     0x39,\n     0x82,\n     0x9b,\n     0x2f,\n     0xff,\n     0x87,\n     0x34,\n     0x8e,\n     0x43,\n     0x44,\n     0xc4,\n     0xde,\n     0xe9,\n     0xcb,\n     0x54,\n     0x7b,\n     0x94,\n     0x32,\n     0xa6,\n     0xc2,\n     0x23,\n     0x3d,\n     0xee,\n     0x4c,\n     0x95,\n     0x0b,\n     0x42,\n     0xfa,\n     0xc3,\n     0x4e,\n     0x08,\n     0x2e,\n     0xa1,\n     0x66,\n     0x28,\n     0xd9,\n     0x24,\n     0xb2,\n     0x76,\n     0x5b,\n     0xa2,\n     0x49,\n     0x6d,\n     0x8b,\n     0xd1,\n     0x25,\n     0x72,\n     0xf8,\n     0xf6,\n     0x64,\n     0x86,\n     0x68,\n     0x98,\n     0x16,\n     0xd4,\n     0xa4,\n     0x5c,\n     0xcc,\n     0x5d,\n     0x65,\n     0xb6,\n     0x92,\n     0x6c,\n     0x70,\n     0x48,\n     0x50,\n     0xfd,\n     0xed,\n     0xb9,\n     0xda,\n     0x5e,\n     0x15,\n     0x46,\n     0x57,\n     0xa7,\n     0x8d,\n     0x9d,\n     0x84,\n     0x90,\n     0xd8,\n     0xab,\n     0x00,\n     0x8c,\n     0xbc,\n     0xd3,\n     0x0a,\n     0xf7,\n     0xe4,\n     0x58,\n     0x05,\n     0xb8,\n     0xb3,\n     0x45,\n     0x06,\n     0xd0,\n     0x2c,\n     0x1e,\n     0x8f,\n     0xca,\n     0x3f,\n     0x0f,\n     0x02,\n     0xc1,\n     0xaf,\n     0xbd,\n     0x03,\n     0x01,\n     0x13,\n     0x8a,\n     0x6b,\n     0x3a,\n     0x91,\n     0x11,\n     0x41,\n     0x4f,\n     0x67,\n     0xdc,\n     0xea,\n     0x97,\n     0xf2,\n     0xcf,\n     0xce,\n     0xf0,\n     0xb4,\n     0xe6,\n     0x73,\n     0x96,\n     0xac,\n     0x74,\n     0x22,\n     0xe7,\n     0xad,\n     0x35,\n     0x85,\n     0xe2,\n     0xf9,\n     0x37,\n     0xe8,\n     0x1c,\n     0x75,\n     0xdf,\n     0x6e,\n     0x47,\n     0xf1,\n     0x1a,\n     0x71,\n     0x1d,\n     0x29,\n     0xc5,\n     0x89,\n     0x6f,\n     0xb7,\n     0x62,\n     0x0e,\n     0xaa,\n     0x18,\n     0xbe,\n     0x1b,\n     0xfc,\n     0x56,\n     0x3e,\n     0x4b,\n     0xc6,\n     0xd2,\n     0x79,\n     0x20,\n     0x9a,\n     0xdb,\n     0xc0,\n     0xfe,\n     0x78,\n     0xcd,\n     0x5a,\n     0xf4,\n     0x1f,\n     0xdd,\n     0xa8,\n     0x33,\n     0x88,\n     0x07,\n     0xc7,\n     0x31,\n     0xb1,\n     0x12,\n     0x10,\n     0x59,\n     0x27,\n     0x80,\n     0xec,\n     0x5f,\n     0x60,\n     0x51,\n     0x7f,\n     0xa9,\n     0x19,\n     0xb5,\n     0x4a,\n     0x0d,\n     0x2d,\n     0xe5,\n     0x7a,\n     0x9f,\n     0x93,\n     0xc9,\n     0x9c,\n     0xef,\n     0xa0,\n     0xe0,\n     0x3b,\n     0x4d,\n     0xae,\n     0x2a,\n     0xf5,\n     0xb0,\n     0xc8,\n     0xeb,\n     0xbb,\n     0x3c,\n     0x83,\n     0x53,\n     0x99,\n     0x61,\n     0x17,\n     0x2b,\n     0x04,\n     0x7e,\n     0xba,\n     0x77,\n     0xd6,\n     0x26,\n     0xe1,\n     0x69,\n     0x14,\n     0x63,\n     0x55,\n     0x21,\n     0x0c,\n     0x7d\n    ]);\n    var mixCol = new Uint8Array(256);\n    for (var i = 0; i < 256; i++) {\n     if (i < 128) {\n      mixCol[i] = i << 1;\n     } else {\n      mixCol[i] = i << 1 ^ 0x1b;\n     }\n    }\n    var mix = new Uint32Array([\n     0x00000000,\n     0x0e090d0b,\n     0x1c121a16,\n     0x121b171d,\n     0x3824342c,\n     0x362d3927,\n     0x24362e3a,\n     0x2a3f2331,\n     0x70486858,\n     0x7e416553,\n     0x6c5a724e,\n     0x62537f45,\n     0x486c5c74,\n     0x4665517f,\n     0x547e4662,\n     0x5a774b69,\n     0xe090d0b0,\n     0xee99ddbb,\n     0xfc82caa6,\n     0xf28bc7ad,\n     0xd8b4e49c,\n     0xd6bde997,\n     0xc4a6fe8a,\n     0xcaaff381,\n     0x90d8b8e8,\n     0x9ed1b5e3,\n     0x8ccaa2fe,\n     0x82c3aff5,\n     0xa8fc8cc4,\n     0xa6f581cf,\n     0xb4ee96d2,\n     0xbae79bd9,\n     0xdb3bbb7b,\n     0xd532b670,\n     0xc729a16d,\n     0xc920ac66,\n     0xe31f8f57,\n     0xed16825c,\n     0xff0d9541,\n     0xf104984a,\n     0xab73d323,\n     0xa57ade28,\n     0xb761c935,\n     0xb968c43e,\n     0x9357e70f,\n     0x9d5eea04,\n     0x8f45fd19,\n     0x814cf012,\n     0x3bab6bcb,\n     0x35a266c0,\n     0x27b971dd,\n     0x29b07cd6,\n     0x038f5fe7,\n     0x0d8652ec,\n     0x1f9d45f1,\n     0x119448fa,\n     0x4be30393,\n     0x45ea0e98,\n     0x57f11985,\n     0x59f8148e,\n     0x73c737bf,\n     0x7dce3ab4,\n     0x6fd52da9,\n     0x61dc20a2,\n     0xad766df6,\n     0xa37f60fd,\n     0xb16477e0,\n     0xbf6d7aeb,\n     0x955259da,\n     0x9b5b54d1,\n     0x894043cc,\n     0x87494ec7,\n     0xdd3e05ae,\n     0xd33708a5,\n     0xc12c1fb8,\n     0xcf2512b3,\n     0xe51a3182,\n     0xeb133c89,\n     0xf9082b94,\n     0xf701269f,\n     0x4de6bd46,\n     0x43efb04d,\n     0x51f4a750,\n     0x5ffdaa5b,\n     0x75c2896a,\n     0x7bcb8461,\n     0x69d0937c,\n     0x67d99e77,\n     0x3daed51e,\n     0x33a7d815,\n     0x21bccf08,\n     0x2fb5c203,\n     0x058ae132,\n     0x0b83ec39,\n     0x1998fb24,\n     0x1791f62f,\n     0x764dd68d,\n     0x7844db86,\n     0x6a5fcc9b,\n     0x6456c190,\n     0x4e69e2a1,\n     0x4060efaa,\n     0x527bf8b7,\n     0x5c72f5bc,\n     0x0605bed5,\n     0x080cb3de,\n     0x1a17a4c3,\n     0x141ea9c8,\n     0x3e218af9,\n     0x302887f2,\n     0x223390ef,\n     0x2c3a9de4,\n     0x96dd063d,\n     0x98d40b36,\n     0x8acf1c2b,\n     0x84c61120,\n     0xaef93211,\n     0xa0f03f1a,\n     0xb2eb2807,\n     0xbce2250c,\n     0xe6956e65,\n     0xe89c636e,\n     0xfa877473,\n     0xf48e7978,\n     0xdeb15a49,\n     0xd0b85742,\n     0xc2a3405f,\n     0xccaa4d54,\n     0x41ecdaf7,\n     0x4fe5d7fc,\n     0x5dfec0e1,\n     0x53f7cdea,\n     0x79c8eedb,\n     0x77c1e3d0,\n     0x65daf4cd,\n     0x6bd3f9c6,\n     0x31a4b2af,\n     0x3fadbfa4,\n     0x2db6a8b9,\n     0x23bfa5b2,\n     0x09808683,\n     0x07898b88,\n     0x15929c95,\n     0x1b9b919e,\n     0xa17c0a47,\n     0xaf75074c,\n     0xbd6e1051,\n     0xb3671d5a,\n     0x99583e6b,\n     0x97513360,\n     0x854a247d,\n     0x8b432976,\n     0xd134621f,\n     0xdf3d6f14,\n     0xcd267809,\n     0xc32f7502,\n     0xe9105633,\n     0xe7195b38,\n     0xf5024c25,\n     0xfb0b412e,\n     0x9ad7618c,\n     0x94de6c87,\n     0x86c57b9a,\n     0x88cc7691,\n     0xa2f355a0,\n     0xacfa58ab,\n     0xbee14fb6,\n     0xb0e842bd,\n     0xea9f09d4,\n     0xe49604df,\n     0xf68d13c2,\n     0xf8841ec9,\n     0xd2bb3df8,\n     0xdcb230f3,\n     0xcea927ee,\n     0xc0a02ae5,\n     0x7a47b13c,\n     0x744ebc37,\n     0x6655ab2a,\n     0x685ca621,\n     0x42638510,\n     0x4c6a881b,\n     0x5e719f06,\n     0x5078920d,\n     0x0a0fd964,\n     0x0406d46f,\n     0x161dc372,\n     0x1814ce79,\n     0x322bed48,\n     0x3c22e043,\n     0x2e39f75e,\n     0x2030fa55,\n     0xec9ab701,\n     0xe293ba0a,\n     0xf088ad17,\n     0xfe81a01c,\n     0xd4be832d,\n     0xdab78e26,\n     0xc8ac993b,\n     0xc6a59430,\n     0x9cd2df59,\n     0x92dbd252,\n     0x80c0c54f,\n     0x8ec9c844,\n     0xa4f6eb75,\n     0xaaffe67e,\n     0xb8e4f163,\n     0xb6edfc68,\n     0x0c0a67b1,\n     0x02036aba,\n     0x10187da7,\n     0x1e1170ac,\n     0x342e539d,\n     0x3a275e96,\n     0x283c498b,\n     0x26354480,\n     0x7c420fe9,\n     0x724b02e2,\n     0x605015ff,\n     0x6e5918f4,\n     0x44663bc5,\n     0x4a6f36ce,\n     0x587421d3,\n     0x567d2cd8,\n     0x37a10c7a,\n     0x39a80171,\n     0x2bb3166c,\n     0x25ba1b67,\n     0x0f853856,\n     0x018c355d,\n     0x13972240,\n     0x1d9e2f4b,\n     0x47e96422,\n     0x49e06929,\n     0x5bfb7e34,\n     0x55f2733f,\n     0x7fcd500e,\n     0x71c45d05,\n     0x63df4a18,\n     0x6dd64713,\n     0xd731dcca,\n     0xd938d1c1,\n     0xcb23c6dc,\n     0xc52acbd7,\n     0xef15e8e6,\n     0xe11ce5ed,\n     0xf307f2f0,\n     0xfd0efffb,\n     0xa779b492,\n     0xa970b999,\n     0xbb6bae84,\n     0xb562a38f,\n     0x9f5d80be,\n     0x91548db5,\n     0x834f9aa8,\n     0x8d4697a3\n    ]);\n    function expandKey256(cipherKey) {\n     var b = 240, result = new Uint8Array(b);\n     var r = 1;\n     result.set(cipherKey);\n     for (var j = 32, i = 1; j < b; ++i) {\n      if (j % 32 === 16) {\n       t1 = s[t1];\n       t2 = s[t2];\n       t3 = s[t3];\n       t4 = s[t4];\n      } else if (j % 32 === 0) {\n       var t1 = result[j - 3], t2 = result[j - 2], t3 = result[j - 1], t4 = result[j - 4];\n       t1 = s[t1];\n       t2 = s[t2];\n       t3 = s[t3];\n       t4 = s[t4];\n       t1 = t1 ^ r;\n       if ((r <<= 1) >= 256) {\n        r = (r ^ 0x1b) & 0xFF;\n       }\n      }\n      for (var n = 0; n < 4; ++n) {\n       result[j] = t1 ^= result[j - 32];\n       j++;\n       result[j] = t2 ^= result[j - 32];\n       j++;\n       result[j] = t3 ^= result[j - 32];\n       j++;\n       result[j] = t4 ^= result[j - 32];\n       j++;\n      }\n     }\n     return result;\n    }\n    function decrypt256(input, key) {\n     var state = new Uint8Array(16);\n     state.set(input);\n     var i, j, k;\n     var t, u, v;\n     for (j = 0, k = 224; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n     }\n     for (i = 13; i >= 1; --i) {\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (j = 0; j < 16; ++j) {\n       state[j] = inv_s[state[j]];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n       state[j] ^= key[k];\n      }\n      for (j = 0; j < 16; j += 4) {\n       var s0 = mix[state[j]], s1 = mix[state[j + 1]], s2 = mix[state[j + 2]], s3 = mix[state[j + 3]];\n       t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n       state[j] = t >>> 24 & 0xFF;\n       state[j + 1] = t >> 16 & 0xFF;\n       state[j + 2] = t >> 8 & 0xFF;\n       state[j + 3] = t & 0xFF;\n      }\n     }\n     t = state[13];\n     state[13] = state[9];\n     state[9] = state[5];\n     state[5] = state[1];\n     state[1] = t;\n     t = state[14];\n     u = state[10];\n     state[14] = state[6];\n     state[10] = state[2];\n     state[6] = t;\n     state[2] = u;\n     t = state[15];\n     u = state[11];\n     v = state[7];\n     state[15] = state[3];\n     state[11] = t;\n     state[7] = u;\n     state[3] = v;\n     for (j = 0; j < 16; ++j) {\n      state[j] = inv_s[state[j]];\n      state[j] ^= key[j];\n     }\n     return state;\n    }\n    function encrypt256(input, key) {\n     var t, u, v, k;\n     var state = new Uint8Array(16);\n     state.set(input);\n     for (j = 0; j < 16; ++j) {\n      state[j] ^= key[j];\n     }\n     for (i = 1; i < 14; i++) {\n      for (j = 0; j < 16; ++j) {\n       state[j] = s[state[j]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (var j = 0; j < 16; j += 4) {\n       var s0 = state[j + 0], s1 = state[j + 1];\n       var s2 = state[j + 2], s3 = state[j + 3];\n       t = s0 ^ s1 ^ s2 ^ s3;\n       state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n       state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n       state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n       state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n       state[j] ^= key[k];\n      }\n     }\n     for (j = 0; j < 16; ++j) {\n      state[j] = s[state[j]];\n     }\n     v = state[1];\n     state[1] = state[5];\n     state[5] = state[9];\n     state[9] = state[13];\n     state[13] = v;\n     v = state[2];\n     u = state[6];\n     state[2] = state[10];\n     state[6] = state[14];\n     state[10] = v;\n     state[14] = u;\n     v = state[3];\n     u = state[7];\n     t = state[11];\n     state[3] = state[15];\n     state[7] = v;\n     state[11] = u;\n     state[15] = t;\n     for (j = 0, k = 224; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n     }\n     return state;\n    }\n    function AES256Cipher(key) {\n     this.key = expandKey256(key);\n     this.buffer = new Uint8Array(16);\n     this.bufferPosition = 0;\n    }\n    function decryptBlock2(data, finalize) {\n     var i, j, ii, sourceLength = data.length, buffer = this.buffer, bufferLength = this.bufferPosition, result = [], iv = this.iv;\n     for (i = 0; i < sourceLength; ++i) {\n      buffer[bufferLength] = data[i];\n      ++bufferLength;\n      if (bufferLength < 16) {\n       continue;\n      }\n      var plain = decrypt256(buffer, this.key);\n      for (j = 0; j < 16; ++j) {\n       plain[j] ^= iv[j];\n      }\n      iv = buffer;\n      result.push(plain);\n      buffer = new Uint8Array(16);\n      bufferLength = 0;\n     }\n     this.buffer = buffer;\n     this.bufferLength = bufferLength;\n     this.iv = iv;\n     if (result.length === 0) {\n      return new Uint8Array([]);\n     }\n     var outputLength = 16 * result.length;\n     if (finalize) {\n      var lastBlock = result[result.length - 1];\n      var psLen = lastBlock[15];\n      if (psLen <= 16) {\n       for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n        if (lastBlock[i] !== psLen) {\n         psLen = 0;\n         break;\n        }\n       }\n       outputLength -= psLen;\n       result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n      }\n     }\n     var output = new Uint8Array(outputLength);\n     for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n      output.set(result[i], j);\n     }\n     return output;\n    }\n    AES256Cipher.prototype = {\n     decryptBlock: function AES256Cipher_decryptBlock(data, finalize, iv) {\n      var i, sourceLength = data.length;\n      var buffer = this.buffer, bufferLength = this.bufferPosition;\n      if (iv) {\n       this.iv = iv;\n      } else {\n       for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n        buffer[bufferLength] = data[i];\n       }\n       if (bufferLength < 16) {\n        this.bufferLength = bufferLength;\n        return new Uint8Array([]);\n       }\n       this.iv = buffer;\n       data = data.subarray(16);\n      }\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = decryptBlock2;\n      return this.decryptBlock(data, finalize);\n     },\n     encrypt: function AES256Cipher_encrypt(data, iv) {\n      var i, j, ii, sourceLength = data.length, buffer = this.buffer, bufferLength = this.bufferPosition, result = [];\n      if (!iv) {\n       iv = new Uint8Array(16);\n      }\n      for (i = 0; i < sourceLength; ++i) {\n       buffer[bufferLength] = data[i];\n       ++bufferLength;\n       if (bufferLength < 16) {\n        continue;\n       }\n       for (j = 0; j < 16; ++j) {\n        buffer[j] ^= iv[j];\n       }\n       var cipher = encrypt256(buffer, this.key);\n       this.iv = cipher;\n       result.push(cipher);\n       buffer = new Uint8Array(16);\n       bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n       return new Uint8Array([]);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n       output.set(result[i], j);\n      }\n      return output;\n     }\n    };\n    return AES256Cipher;\n   }();\n   var PDF17 = function PDF17Closure() {\n    function compareByteArrays(array1, array2) {\n     if (array1.length !== array2.length) {\n      return false;\n     }\n     for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n       return false;\n      }\n     }\n     return true;\n    }\n    function PDF17() {\n    }\n    PDF17.prototype = {\n     checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, ownerPassword);\n     },\n     checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, userPassword);\n     },\n     getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n     },\n     getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n     }\n    };\n    return PDF17;\n   }();\n   var PDF20 = function PDF20Closure() {\n    function concatArrays(array1, array2) {\n     var t = new Uint8Array(array1.length + array2.length);\n     t.set(array1, 0);\n     t.set(array2, array1.length);\n     return t;\n    }\n    function calculatePDF20Hash(password, input, userBytes) {\n     var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n     var e = [0];\n     var i = 0;\n     while (i < 64 || e[e.length - 1] > i - 32) {\n      var arrayLength = password.length + k.length + userBytes.length;\n      var k1 = new Uint8Array(arrayLength * 64);\n      var array = concatArrays(password, k);\n      array = concatArrays(array, userBytes);\n      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n       k1.set(array, pos);\n      }\n      var cipher = new AES128Cipher(k.subarray(0, 16));\n      e = cipher.encrypt(k1, k.subarray(16, 32));\n      var remainder = 0;\n      for (var z = 0; z < 16; z++) {\n       remainder *= 256 % 3;\n       remainder %= 3;\n       remainder += (e[z] >>> 0) % 3;\n       remainder %= 3;\n      }\n      if (remainder === 0) {\n       k = calculateSHA256(e, 0, e.length);\n      } else if (remainder === 1) {\n       k = calculateSHA384(e, 0, e.length);\n      } else if (remainder === 2) {\n       k = calculateSHA512(e, 0, e.length);\n      }\n      i++;\n     }\n     return k.subarray(0, 32);\n    }\n    function PDF20() {\n    }\n    function compareByteArrays(array1, array2) {\n     if (array1.length !== array2.length) {\n      return false;\n     }\n     for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n       return false;\n      }\n     }\n     return true;\n    }\n    PDF20.prototype = {\n     hash: function PDF20_hash(password, concatBytes, userBytes) {\n      return calculatePDF20Hash(password, concatBytes, userBytes);\n     },\n     checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculatePDF20Hash(password, hashData, userBytes);\n      return compareByteArrays(result, ownerPassword);\n     },\n     checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculatePDF20Hash(password, hashData, []);\n      return compareByteArrays(result, userPassword);\n     },\n     getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculatePDF20Hash(password, hashData, userBytes);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n     },\n     getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculatePDF20Hash(password, hashData, []);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n     }\n    };\n    return PDF20;\n   }();\n   var CipherTransform = function CipherTransformClosure() {\n    function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n     this.StringCipherConstructor = stringCipherConstructor;\n     this.StreamCipherConstructor = streamCipherConstructor;\n    }\n    CipherTransform.prototype = {\n     createStream: function CipherTransform_createStream(stream, length) {\n      var cipher = new this.StreamCipherConstructor();\n      return new DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n       return cipher.decryptBlock(data, finalize);\n      });\n     },\n     decryptString: function CipherTransform_decryptString(s) {\n      var cipher = new this.StringCipherConstructor();\n      var data = stringToBytes(s);\n      data = cipher.decryptBlock(data, true);\n      return bytesToString(data);\n     }\n    };\n    return CipherTransform;\n   }();\n   var CipherTransformFactory = function CipherTransformFactoryClosure() {\n    var defaultPasswordBytes = new Uint8Array([\n     0x28,\n     0xBF,\n     0x4E,\n     0x5E,\n     0x4E,\n     0x75,\n     0x8A,\n     0x41,\n     0x64,\n     0x00,\n     0x4E,\n     0x56,\n     0xFF,\n     0xFA,\n     0x01,\n     0x08,\n     0x2E,\n     0x2E,\n     0x00,\n     0xB6,\n     0xD0,\n     0x68,\n     0x3E,\n     0x80,\n     0x2F,\n     0x0C,\n     0xA9,\n     0xFE,\n     0x64,\n     0x53,\n     0x69,\n     0x7A\n    ]);\n    function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n     if (password) {\n      var passwordLength = Math.min(127, password.length);\n      password = password.subarray(0, passwordLength);\n     } else {\n      password = [];\n     }\n     var pdfAlgorithm;\n     if (revision === 6) {\n      pdfAlgorithm = new PDF20();\n     } else {\n      pdfAlgorithm = new PDF17();\n     }\n     if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n      return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n     } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n      return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n     }\n     return null;\n    }\n    function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n     var hashDataSize = 40 + ownerPassword.length + fileId.length;\n     var hashData = new Uint8Array(hashDataSize), i = 0, j, n;\n     if (password) {\n      n = Math.min(32, password.length);\n      for (; i < n; ++i) {\n       hashData[i] = password[i];\n      }\n     }\n     j = 0;\n     while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n     }\n     for (j = 0, n = ownerPassword.length; j < n; ++j) {\n      hashData[i++] = ownerPassword[j];\n     }\n     hashData[i++] = flags & 0xFF;\n     hashData[i++] = flags >> 8 & 0xFF;\n     hashData[i++] = flags >> 16 & 0xFF;\n     hashData[i++] = flags >>> 24 & 0xFF;\n     for (j = 0, n = fileId.length; j < n; ++j) {\n      hashData[i++] = fileId[j];\n     }\n     if (revision >= 4 && !encryptMetadata) {\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n     }\n     var hash = calculateMD5(hashData, 0, i);\n     var keyLengthInBytes = keyLength >> 3;\n     if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n       hash = calculateMD5(hash, 0, keyLengthInBytes);\n      }\n     }\n     var encryptionKey = hash.subarray(0, keyLengthInBytes);\n     var cipher, checkData;\n     if (revision >= 3) {\n      for (i = 0; i < 32; ++i) {\n       hashData[i] = defaultPasswordBytes[i];\n      }\n      for (j = 0, n = fileId.length; j < n; ++j) {\n       hashData[i++] = fileId[j];\n      }\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n      n = encryptionKey.length;\n      var derivedKey = new Uint8Array(n), k;\n      for (j = 1; j <= 19; ++j) {\n       for (k = 0; k < n; ++k) {\n        derivedKey[k] = encryptionKey[k] ^ j;\n       }\n       cipher = new ARCFourCipher(derivedKey);\n       checkData = cipher.encryptBlock(checkData);\n      }\n      for (j = 0, n = checkData.length; j < n; ++j) {\n       if (userPassword[j] !== checkData[j]) {\n        return null;\n       }\n      }\n     } else {\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(defaultPasswordBytes);\n      for (j = 0, n = checkData.length; j < n; ++j) {\n       if (userPassword[j] !== checkData[j]) {\n        return null;\n       }\n      }\n     }\n     return encryptionKey;\n    }\n    function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n     var hashData = new Uint8Array(32), i = 0, j, n;\n     n = Math.min(32, password.length);\n     for (; i < n; ++i) {\n      hashData[i] = password[i];\n     }\n     j = 0;\n     while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n     }\n     var hash = calculateMD5(hashData, 0, i);\n     var keyLengthInBytes = keyLength >> 3;\n     if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n       hash = calculateMD5(hash, 0, hash.length);\n      }\n     }\n     var cipher, userPassword;\n     if (revision >= 3) {\n      userPassword = ownerPassword;\n      var derivedKey = new Uint8Array(keyLengthInBytes), k;\n      for (j = 19; j >= 0; j--) {\n       for (k = 0; k < keyLengthInBytes; ++k) {\n        derivedKey[k] = hash[k] ^ j;\n       }\n       cipher = new ARCFourCipher(derivedKey);\n       userPassword = cipher.encryptBlock(userPassword);\n      }\n     } else {\n      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n      userPassword = cipher.encryptBlock(ownerPassword);\n     }\n     return userPassword;\n    }\n    var identityName = Name.get('Identity');\n    function CipherTransformFactory(dict, fileId, password) {\n     var filter = dict.get('Filter');\n     if (!isName(filter, 'Standard')) {\n      error('unknown encryption method');\n     }\n     this.dict = dict;\n     var algorithm = dict.get('V');\n     if (!isInt(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n      error('unsupported encryption algorithm');\n     }\n     this.algorithm = algorithm;\n     var keyLength = dict.get('Length');\n     if (!keyLength) {\n      if (algorithm <= 3) {\n       keyLength = 40;\n      } else {\n       var cfDict = dict.get('CF');\n       var streamCryptoName = dict.get('StmF');\n       if (isDict(cfDict) && isName(streamCryptoName)) {\n        cfDict.suppressEncryption = true;\n        var handlerDict = cfDict.get(streamCryptoName.name);\n        keyLength = handlerDict && handlerDict.get('Length') || 128;\n        if (keyLength < 40) {\n         keyLength <<= 3;\n        }\n       }\n      }\n     }\n     if (!isInt(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n      error('invalid key length');\n     }\n     var ownerPassword = stringToBytes(dict.get('O')).subarray(0, 32);\n     var userPassword = stringToBytes(dict.get('U')).subarray(0, 32);\n     var flags = dict.get('P');\n     var revision = dict.get('R');\n     var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\n     this.encryptMetadata = encryptMetadata;\n     var fileIdBytes = stringToBytes(fileId);\n     var passwordBytes;\n     if (password) {\n      if (revision === 6) {\n       try {\n        password = utf8StringToString(password);\n       } catch (ex) {\n        warn('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\n       }\n      }\n      passwordBytes = stringToBytes(password);\n     }\n     var encryptionKey;\n     if (algorithm !== 5) {\n      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n     } else {\n      var ownerValidationSalt = stringToBytes(dict.get('O')).subarray(32, 40);\n      var ownerKeySalt = stringToBytes(dict.get('O')).subarray(40, 48);\n      var uBytes = stringToBytes(dict.get('U')).subarray(0, 48);\n      var userValidationSalt = stringToBytes(dict.get('U')).subarray(32, 40);\n      var userKeySalt = stringToBytes(dict.get('U')).subarray(40, 48);\n      var ownerEncryption = stringToBytes(dict.get('OE'));\n      var userEncryption = stringToBytes(dict.get('UE'));\n      var perms = stringToBytes(dict.get('Perms'));\n      encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n     }\n     if (!encryptionKey && !password) {\n      throw new PasswordException('No password given', PasswordResponses.NEED_PASSWORD);\n     } else if (!encryptionKey && password) {\n      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n     }\n     if (!encryptionKey) {\n      throw new PasswordException('Incorrect Password', PasswordResponses.INCORRECT_PASSWORD);\n     }\n     this.encryptionKey = encryptionKey;\n     if (algorithm >= 4) {\n      var cf = dict.get('CF');\n      if (isDict(cf)) {\n       cf.suppressEncryption = true;\n      }\n      this.cf = cf;\n      this.stmf = dict.get('StmF') || identityName;\n      this.strf = dict.get('StrF') || identityName;\n      this.eff = dict.get('EFF') || this.stmf;\n     }\n    }\n    function buildObjectKey(num, gen, encryptionKey, isAes) {\n     var key = new Uint8Array(encryptionKey.length + 9), i, n;\n     for (i = 0, n = encryptionKey.length; i < n; ++i) {\n      key[i] = encryptionKey[i];\n     }\n     key[i++] = num & 0xFF;\n     key[i++] = num >> 8 & 0xFF;\n     key[i++] = num >> 16 & 0xFF;\n     key[i++] = gen & 0xFF;\n     key[i++] = gen >> 8 & 0xFF;\n     if (isAes) {\n      key[i++] = 0x73;\n      key[i++] = 0x41;\n      key[i++] = 0x6C;\n      key[i++] = 0x54;\n     }\n     var hash = calculateMD5(key, 0, i);\n     return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n    }\n    function buildCipherConstructor(cf, name, num, gen, key) {\n     assert(isName(name), 'Invalid crypt filter name.');\n     var cryptFilter = cf.get(name.name);\n     var cfm;\n     if (cryptFilter !== null && cryptFilter !== undefined) {\n      cfm = cryptFilter.get('CFM');\n     }\n     if (!cfm || cfm.name === 'None') {\n      return function cipherTransformFactoryBuildCipherConstructorNone() {\n       return new NullCipher();\n      };\n     }\n     if (cfm.name === 'V2') {\n      return function cipherTransformFactoryBuildCipherConstructorV2() {\n       return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n      };\n     }\n     if (cfm.name === 'AESV2') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n       return new AES128Cipher(buildObjectKey(num, gen, key, true));\n      };\n     }\n     if (cfm.name === 'AESV3') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n       return new AES256Cipher(key);\n      };\n     }\n     error('Unknown crypto method');\n    }\n    CipherTransformFactory.prototype = {\n     createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n      if (this.algorithm === 4 || this.algorithm === 5) {\n       return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n      }\n      var key = buildObjectKey(num, gen, this.encryptionKey, false);\n      var cipherConstructor = function buildCipherCipherConstructor() {\n       return new ARCFourCipher(key);\n      };\n      return new CipherTransform(cipherConstructor, cipherConstructor);\n     }\n    };\n    return CipherTransformFactory;\n   }();\n   exports.AES128Cipher = AES128Cipher;\n   exports.AES256Cipher = AES256Cipher;\n   exports.ARCFourCipher = ARCFourCipher;\n   exports.CipherTransformFactory = CipherTransformFactory;\n   exports.PDF17 = PDF17;\n   exports.PDF20 = PDF20;\n   exports.calculateMD5 = calculateMD5;\n   exports.calculateSHA256 = calculateSHA256;\n   exports.calculateSHA384 = calculateSHA384;\n   exports.calculateSHA512 = calculateSHA512;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsCoreFontRenderer = {}, root.pdfjsSharedUtil, root.pdfjsCoreStream, root.pdfjsCoreGlyphList, root.pdfjsCoreEncodings, root.pdfjsCoreCFFParser);\n  }(this, function (exports, sharedUtil, coreStream, coreGlyphList, coreEncodings, coreCFFParser) {\n   var Util = sharedUtil.Util;\n   var bytesToString = sharedUtil.bytesToString;\n   var error = sharedUtil.error;\n   var Stream = coreStream.Stream;\n   var getGlyphsUnicode = coreGlyphList.getGlyphsUnicode;\n   var StandardEncoding = coreEncodings.StandardEncoding;\n   var CFFParser = coreCFFParser.CFFParser;\n   var FontRendererFactory = function FontRendererFactoryClosure() {\n    function getLong(data, offset) {\n     return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n    }\n    function getUshort(data, offset) {\n     return data[offset] << 8 | data[offset + 1];\n    }\n    function parseCmap(data, start, end) {\n     var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n     var format = getUshort(data, start + offset);\n     var length, ranges, p, i;\n     if (format === 4) {\n      length = getUshort(data, start + offset + 2);\n      var segCount = getUshort(data, start + offset + 6) >> 1;\n      p = start + offset + 14;\n      ranges = [];\n      for (i = 0; i < segCount; i++, p += 2) {\n       ranges[i] = { end: getUshort(data, p) };\n      }\n      p += 2;\n      for (i = 0; i < segCount; i++, p += 2) {\n       ranges[i].start = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n       ranges[i].idDelta = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n       var idOffset = getUshort(data, p);\n       if (idOffset === 0) {\n        continue;\n       }\n       ranges[i].ids = [];\n       for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n        ranges[i].ids[j] = getUshort(data, p + idOffset);\n        idOffset += 2;\n       }\n      }\n      return ranges;\n     } else if (format === 12) {\n      length = getLong(data, start + offset + 4);\n      var groups = getLong(data, start + offset + 12);\n      p = start + offset + 16;\n      ranges = [];\n      for (i = 0; i < groups; i++) {\n       ranges.push({\n        start: getLong(data, p),\n        end: getLong(data, p + 4),\n        idDelta: getLong(data, p + 8) - getLong(data, p)\n       });\n       p += 12;\n      }\n      return ranges;\n     }\n     error('not supported cmap: ' + format);\n    }\n    function parseCff(data, start, end, seacAnalysisEnabled) {\n     var properties = {};\n     var parser = new CFFParser(new Stream(data, start, end - start), properties, seacAnalysisEnabled);\n     var cff = parser.parse();\n     return {\n      glyphs: cff.charStrings.objects,\n      subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects\n     };\n    }\n    function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n     var itemSize, itemDecode;\n     if (isGlyphLocationsLong) {\n      itemSize = 4;\n      itemDecode = function fontItemDecodeLong(data, offset) {\n       return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n      };\n     } else {\n      itemSize = 2;\n      itemDecode = function fontItemDecode(data, offset) {\n       return data[offset] << 9 | data[offset + 1] << 1;\n      };\n     }\n     var glyphs = [];\n     var startOffset = itemDecode(loca, 0);\n     for (var j = itemSize; j < loca.length; j += itemSize) {\n      var endOffset = itemDecode(loca, j);\n      glyphs.push(glyf.subarray(startOffset, endOffset));\n      startOffset = endOffset;\n     }\n     return glyphs;\n    }\n    function lookupCmap(ranges, unicode) {\n     var code = unicode.charCodeAt(0), gid = 0;\n     var l = 0, r = ranges.length - 1;\n     while (l < r) {\n      var c = l + r + 1 >> 1;\n      if (code < ranges[c].start) {\n       r = c - 1;\n      } else {\n       l = c;\n      }\n     }\n     if (ranges[l].start <= code && code <= ranges[l].end) {\n      gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\n     }\n     return {\n      charCode: code,\n      glyphId: gid\n     };\n    }\n    function compileGlyf(code, cmds, font) {\n     function moveTo(x, y) {\n      cmds.push({\n       cmd: 'moveTo',\n       args: [\n        x,\n        y\n       ]\n      });\n     }\n     function lineTo(x, y) {\n      cmds.push({\n       cmd: 'lineTo',\n       args: [\n        x,\n        y\n       ]\n      });\n     }\n     function quadraticCurveTo(xa, ya, x, y) {\n      cmds.push({\n       cmd: 'quadraticCurveTo',\n       args: [\n        xa,\n        ya,\n        x,\n        y\n       ]\n      });\n     }\n     var i = 0;\n     var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n     var flags;\n     var x = 0, y = 0;\n     i += 10;\n     if (numberOfContours < 0) {\n      do {\n       flags = code[i] << 8 | code[i + 1];\n       var glyphIndex = code[i + 2] << 8 | code[i + 3];\n       i += 4;\n       var arg1, arg2;\n       if (flags & 0x01) {\n        arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n        arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n        i += 4;\n       } else {\n        arg1 = code[i++];\n        arg2 = code[i++];\n       }\n       if (flags & 0x02) {\n        x = arg1;\n        y = arg2;\n       } else {\n        x = 0;\n        y = 0;\n       }\n       var scaleX = 1, scaleY = 1, scale01 = 0, scale10 = 0;\n       if (flags & 0x08) {\n        scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n        i += 2;\n       } else if (flags & 0x40) {\n        scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n        scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n        i += 4;\n       } else if (flags & 0x80) {\n        scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n        scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n        scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n        scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n        i += 8;\n       }\n       var subglyph = font.glyphs[glyphIndex];\n       if (subglyph) {\n        cmds.push({ cmd: 'save' });\n        cmds.push({\n         cmd: 'transform',\n         args: [\n          scaleX,\n          scale01,\n          scale10,\n          scaleY,\n          x,\n          y\n         ]\n        });\n        compileGlyf(subglyph, cmds, font);\n        cmds.push({ cmd: 'restore' });\n       }\n      } while (flags & 0x20);\n     } else {\n      var endPtsOfContours = [];\n      var j, jj;\n      for (j = 0; j < numberOfContours; j++) {\n       endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n       i += 2;\n      }\n      var instructionLength = code[i] << 8 | code[i + 1];\n      i += 2 + instructionLength;\n      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n      var points = [];\n      while (points.length < numberOfPoints) {\n       flags = code[i++];\n       var repeat = 1;\n       if (flags & 0x08) {\n        repeat += code[i++];\n       }\n       while (repeat-- > 0) {\n        points.push({ flags: flags });\n       }\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n       switch (points[j].flags & 0x12) {\n       case 0x00:\n        x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n        i += 2;\n        break;\n       case 0x02:\n        x -= code[i++];\n        break;\n       case 0x12:\n        x += code[i++];\n        break;\n       }\n       points[j].x = x;\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n       switch (points[j].flags & 0x24) {\n       case 0x00:\n        y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n        i += 2;\n        break;\n       case 0x04:\n        y -= code[i++];\n        break;\n       case 0x24:\n        y += code[i++];\n        break;\n       }\n       points[j].y = y;\n      }\n      var startPoint = 0;\n      for (i = 0; i < numberOfContours; i++) {\n       var endPoint = endPtsOfContours[i];\n       var contour = points.slice(startPoint, endPoint + 1);\n       if (contour[0].flags & 1) {\n        contour.push(contour[0]);\n       } else if (contour[contour.length - 1].flags & 1) {\n        contour.unshift(contour[contour.length - 1]);\n       } else {\n        var p = {\n         flags: 1,\n         x: (contour[0].x + contour[contour.length - 1].x) / 2,\n         y: (contour[0].y + contour[contour.length - 1].y) / 2\n        };\n        contour.unshift(p);\n        contour.push(p);\n       }\n       moveTo(contour[0].x, contour[0].y);\n       for (j = 1, jj = contour.length; j < jj; j++) {\n        if (contour[j].flags & 1) {\n         lineTo(contour[j].x, contour[j].y);\n        } else if (contour[j + 1].flags & 1) {\n         quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n         j++;\n        } else {\n         quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n        }\n       }\n       startPoint = endPoint + 1;\n      }\n     }\n    }\n    function compileCharString(code, cmds, font) {\n     var stack = [];\n     var x = 0, y = 0;\n     var stems = 0;\n     function moveTo(x, y) {\n      cmds.push({\n       cmd: 'moveTo',\n       args: [\n        x,\n        y\n       ]\n      });\n     }\n     function lineTo(x, y) {\n      cmds.push({\n       cmd: 'lineTo',\n       args: [\n        x,\n        y\n       ]\n      });\n     }\n     function bezierCurveTo(x1, y1, x2, y2, x, y) {\n      cmds.push({\n       cmd: 'bezierCurveTo',\n       args: [\n        x1,\n        y1,\n        x2,\n        y2,\n        x,\n        y\n       ]\n      });\n     }\n     function parse(code) {\n      var i = 0;\n      while (i < code.length) {\n       var stackClean = false;\n       var v = code[i++];\n       var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n       switch (v) {\n       case 1:\n        stems += stack.length >> 1;\n        stackClean = true;\n        break;\n       case 3:\n        stems += stack.length >> 1;\n        stackClean = true;\n        break;\n       case 4:\n        y += stack.pop();\n        moveTo(x, y);\n        stackClean = true;\n        break;\n       case 5:\n        while (stack.length > 0) {\n         x += stack.shift();\n         y += stack.shift();\n         lineTo(x, y);\n        }\n        break;\n       case 6:\n        while (stack.length > 0) {\n         x += stack.shift();\n         lineTo(x, y);\n         if (stack.length === 0) {\n          break;\n         }\n         y += stack.shift();\n         lineTo(x, y);\n        }\n        break;\n       case 7:\n        while (stack.length > 0) {\n         y += stack.shift();\n         lineTo(x, y);\n         if (stack.length === 0) {\n          break;\n         }\n         x += stack.shift();\n         lineTo(x, y);\n        }\n        break;\n       case 8:\n        while (stack.length > 0) {\n         xa = x + stack.shift();\n         ya = y + stack.shift();\n         xb = xa + stack.shift();\n         yb = ya + stack.shift();\n         x = xb + stack.shift();\n         y = yb + stack.shift();\n         bezierCurveTo(xa, ya, xb, yb, x, y);\n        }\n        break;\n       case 10:\n        n = stack.pop() + font.subrsBias;\n        subrCode = font.subrs[n];\n        if (subrCode) {\n         parse(subrCode);\n        }\n        break;\n       case 11:\n        return;\n       case 12:\n        v = code[i++];\n        switch (v) {\n        case 34:\n         xa = x + stack.shift();\n         xb = xa + stack.shift();\n         y1 = y + stack.shift();\n         x = xb + stack.shift();\n         bezierCurveTo(xa, y, xb, y1, x, y1);\n         xa = x + stack.shift();\n         xb = xa + stack.shift();\n         x = xb + stack.shift();\n         bezierCurveTo(xa, y1, xb, y, x, y);\n         break;\n        case 35:\n         xa = x + stack.shift();\n         ya = y + stack.shift();\n         xb = xa + stack.shift();\n         yb = ya + stack.shift();\n         x = xb + stack.shift();\n         y = yb + stack.shift();\n         bezierCurveTo(xa, ya, xb, yb, x, y);\n         xa = x + stack.shift();\n         ya = y + stack.shift();\n         xb = xa + stack.shift();\n         yb = ya + stack.shift();\n         x = xb + stack.shift();\n         y = yb + stack.shift();\n         bezierCurveTo(xa, ya, xb, yb, x, y);\n         stack.pop();\n         break;\n        case 36:\n         xa = x + stack.shift();\n         y1 = y + stack.shift();\n         xb = xa + stack.shift();\n         y2 = y1 + stack.shift();\n         x = xb + stack.shift();\n         bezierCurveTo(xa, y1, xb, y2, x, y2);\n         xa = x + stack.shift();\n         xb = xa + stack.shift();\n         y3 = y2 + stack.shift();\n         x = xb + stack.shift();\n         bezierCurveTo(xa, y2, xb, y3, x, y);\n         break;\n        case 37:\n         var x0 = x, y0 = y;\n         xa = x + stack.shift();\n         ya = y + stack.shift();\n         xb = xa + stack.shift();\n         yb = ya + stack.shift();\n         x = xb + stack.shift();\n         y = yb + stack.shift();\n         bezierCurveTo(xa, ya, xb, yb, x, y);\n         xa = x + stack.shift();\n         ya = y + stack.shift();\n         xb = xa + stack.shift();\n         yb = ya + stack.shift();\n         x = xb;\n         y = yb;\n         if (Math.abs(x - x0) > Math.abs(y - y0)) {\n          x += stack.shift();\n         } else {\n          y += stack.shift();\n         }\n         bezierCurveTo(xa, ya, xb, yb, x, y);\n         break;\n        default:\n         error('unknown operator: 12 ' + v);\n        }\n        break;\n       case 14:\n        if (stack.length >= 4) {\n         var achar = stack.pop();\n         var bchar = stack.pop();\n         y = stack.pop();\n         x = stack.pop();\n         cmds.push({ cmd: 'save' });\n         cmds.push({\n          cmd: 'translate',\n          args: [\n           x,\n           y\n          ]\n         });\n         var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[StandardEncoding[achar]]));\n         compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n         cmds.push({ cmd: 'restore' });\n         cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[StandardEncoding[bchar]]));\n         compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n        }\n        return;\n       case 18:\n        stems += stack.length >> 1;\n        stackClean = true;\n        break;\n       case 19:\n        stems += stack.length >> 1;\n        i += stems + 7 >> 3;\n        stackClean = true;\n        break;\n       case 20:\n        stems += stack.length >> 1;\n        i += stems + 7 >> 3;\n        stackClean = true;\n        break;\n       case 21:\n        y += stack.pop();\n        x += stack.pop();\n        moveTo(x, y);\n        stackClean = true;\n        break;\n       case 22:\n        x += stack.pop();\n        moveTo(x, y);\n        stackClean = true;\n        break;\n       case 23:\n        stems += stack.length >> 1;\n        stackClean = true;\n        break;\n       case 24:\n        while (stack.length > 2) {\n         xa = x + stack.shift();\n         ya = y + stack.shift();\n         xb = xa + stack.shift();\n         yb = ya + stack.shift();\n         x = xb + stack.shift();\n         y = yb + stack.shift();\n         bezierCurveTo(xa, ya, xb, yb, x, y);\n        }\n        x += stack.shift();\n        y += stack.shift();\n        lineTo(x, y);\n        break;\n       case 25:\n        while (stack.length > 6) {\n         x += stack.shift();\n         y += stack.shift();\n         lineTo(x, y);\n        }\n        xa = x + stack.shift();\n        ya = y + stack.shift();\n        xb = xa + stack.shift();\n        yb = ya + stack.shift();\n        x = xb + stack.shift();\n        y = yb + stack.shift();\n        bezierCurveTo(xa, ya, xb, yb, x, y);\n        break;\n       case 26:\n        if (stack.length % 2) {\n         x += stack.shift();\n        }\n        while (stack.length > 0) {\n         xa = x;\n         ya = y + stack.shift();\n         xb = xa + stack.shift();\n         yb = ya + stack.shift();\n         x = xb;\n         y = yb + stack.shift();\n         bezierCurveTo(xa, ya, xb, yb, x, y);\n        }\n        break;\n       case 27:\n        if (stack.length % 2) {\n         y += stack.shift();\n        }\n        while (stack.length > 0) {\n         xa = x + stack.shift();\n         ya = y;\n         xb = xa + stack.shift();\n         yb = ya + stack.shift();\n         x = xb + stack.shift();\n         y = yb;\n         bezierCurveTo(xa, ya, xb, yb, x, y);\n        }\n        break;\n       case 28:\n        stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n        i += 2;\n        break;\n       case 29:\n        n = stack.pop() + font.gsubrsBias;\n        subrCode = font.gsubrs[n];\n        if (subrCode) {\n         parse(subrCode);\n        }\n        break;\n       case 30:\n        while (stack.length > 0) {\n         xa = x;\n         ya = y + stack.shift();\n         xb = xa + stack.shift();\n         yb = ya + stack.shift();\n         x = xb + stack.shift();\n         y = yb + (stack.length === 1 ? stack.shift() : 0);\n         bezierCurveTo(xa, ya, xb, yb, x, y);\n         if (stack.length === 0) {\n          break;\n         }\n         xa = x + stack.shift();\n         ya = y;\n         xb = xa + stack.shift();\n         yb = ya + stack.shift();\n         y = yb + stack.shift();\n         x = xb + (stack.length === 1 ? stack.shift() : 0);\n         bezierCurveTo(xa, ya, xb, yb, x, y);\n        }\n        break;\n       case 31:\n        while (stack.length > 0) {\n         xa = x + stack.shift();\n         ya = y;\n         xb = xa + stack.shift();\n         yb = ya + stack.shift();\n         y = yb + stack.shift();\n         x = xb + (stack.length === 1 ? stack.shift() : 0);\n         bezierCurveTo(xa, ya, xb, yb, x, y);\n         if (stack.length === 0) {\n          break;\n         }\n         xa = x;\n         ya = y + stack.shift();\n         xb = xa + stack.shift();\n         yb = ya + stack.shift();\n         x = xb + stack.shift();\n         y = yb + (stack.length === 1 ? stack.shift() : 0);\n         bezierCurveTo(xa, ya, xb, yb, x, y);\n        }\n        break;\n       default:\n        if (v < 32) {\n         error('unknown operator: ' + v);\n        }\n        if (v < 247) {\n         stack.push(v - 139);\n        } else if (v < 251) {\n         stack.push((v - 247) * 256 + code[i++] + 108);\n        } else if (v < 255) {\n         stack.push(-(v - 251) * 256 - code[i++] - 108);\n        } else {\n         stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n         i += 4;\n        }\n        break;\n       }\n       if (stackClean) {\n        stack.length = 0;\n       }\n      }\n     }\n     parse(code);\n    }\n    var noop = '';\n    function CompiledFont(fontMatrix) {\n     this.compiledGlyphs = Object.create(null);\n     this.compiledCharCodeToGlyphId = Object.create(null);\n     this.fontMatrix = fontMatrix;\n    }\n    CompiledFont.prototype = {\n     getPathJs: function (unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      var fn = this.compiledGlyphs[cmap.glyphId];\n      if (!fn) {\n       fn = this.compileGlyph(this.glyphs[cmap.glyphId]);\n       this.compiledGlyphs[cmap.glyphId] = fn;\n      }\n      if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n       this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n      }\n      return fn;\n     },\n     compileGlyph: function (code) {\n      if (!code || code.length === 0 || code[0] === 14) {\n       return noop;\n      }\n      var cmds = [];\n      cmds.push({ cmd: 'save' });\n      cmds.push({\n       cmd: 'transform',\n       args: this.fontMatrix.slice()\n      });\n      cmds.push({\n       cmd: 'scale',\n       args: [\n        'size',\n        '-size'\n       ]\n      });\n      this.compileGlyphImpl(code, cmds);\n      cmds.push({ cmd: 'restore' });\n      return cmds;\n     },\n     compileGlyphImpl: function () {\n      error('Children classes should implement this.');\n     },\n     hasBuiltPath: function (unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n     }\n    };\n    function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n     fontMatrix = fontMatrix || [\n      0.000488,\n      0,\n      0,\n      0.000488,\n      0,\n      0\n     ];\n     CompiledFont.call(this, fontMatrix);\n     this.glyphs = glyphs;\n     this.cmap = cmap;\n    }\n    Util.inherit(TrueTypeCompiled, CompiledFont, {\n     compileGlyphImpl: function (code, cmds) {\n      compileGlyf(code, cmds, this);\n     }\n    });\n    function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n     fontMatrix = fontMatrix || [\n      0.001,\n      0,\n      0,\n      0.001,\n      0,\n      0\n     ];\n     CompiledFont.call(this, fontMatrix);\n     this.glyphs = cffInfo.glyphs;\n     this.gsubrs = cffInfo.gsubrs || [];\n     this.subrs = cffInfo.subrs || [];\n     this.cmap = cmap;\n     this.glyphNameMap = glyphNameMap || getGlyphsUnicode();\n     this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\n     this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\n    }\n    Util.inherit(Type2Compiled, CompiledFont, {\n     compileGlyphImpl: function (code, cmds) {\n      compileCharString(code, cmds, this);\n     }\n    });\n    return {\n     create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n      var data = new Uint8Array(font.data);\n      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n      var numTables = getUshort(data, 4);\n      for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n       var tag = bytesToString(data.subarray(p, p + 4));\n       var offset = getLong(data, p + 8);\n       var length = getLong(data, p + 12);\n       switch (tag) {\n       case 'cmap':\n        cmap = parseCmap(data, offset, offset + length);\n        break;\n       case 'glyf':\n        glyf = data.subarray(offset, offset + length);\n        break;\n       case 'loca':\n        loca = data.subarray(offset, offset + length);\n        break;\n       case 'head':\n        unitsPerEm = getUshort(data, offset + 18);\n        indexToLocFormat = getUshort(data, offset + 50);\n        break;\n       case 'CFF ':\n        cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n        break;\n       }\n      }\n      if (glyf) {\n       var fontMatrix = !unitsPerEm ? font.fontMatrix : [\n        1 / unitsPerEm,\n        0,\n        0,\n        1 / unitsPerEm,\n        0,\n        0\n       ];\n       return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n      }\n      return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n     }\n    };\n   }();\n   exports.FontRendererFactory = FontRendererFactory;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsCoreFunction = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCorePsParser);\n  }(this, function (exports, sharedUtil, corePrimitives, corePsParser) {\n   var error = sharedUtil.error;\n   var info = sharedUtil.info;\n   var isArray = sharedUtil.isArray;\n   var isBool = sharedUtil.isBool;\n   var isDict = corePrimitives.isDict;\n   var isStream = corePrimitives.isStream;\n   var PostScriptLexer = corePsParser.PostScriptLexer;\n   var PostScriptParser = corePsParser.PostScriptParser;\n   var PDFFunction = function PDFFunctionClosure() {\n    var CONSTRUCT_SAMPLED = 0;\n    var CONSTRUCT_INTERPOLATED = 2;\n    var CONSTRUCT_STICHED = 3;\n    var CONSTRUCT_POSTSCRIPT = 4;\n    return {\n     getSampleArray: function PDFFunction_getSampleArray(size, outputSize, bps, str) {\n      var i, ii;\n      var length = 1;\n      for (i = 0, ii = size.length; i < ii; i++) {\n       length *= size[i];\n      }\n      length *= outputSize;\n      var array = new Array(length);\n      var codeSize = 0;\n      var codeBuf = 0;\n      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n      var strBytes = str.getBytes((length * bps + 7) / 8);\n      var strIdx = 0;\n      for (i = 0; i < length; i++) {\n       while (codeSize < bps) {\n        codeBuf <<= 8;\n        codeBuf |= strBytes[strIdx++];\n        codeSize += 8;\n       }\n       codeSize -= bps;\n       array[i] = (codeBuf >> codeSize) * sampleMul;\n       codeBuf &= (1 << codeSize) - 1;\n      }\n      return array;\n     },\n     getIR: function PDFFunction_getIR(xref, fn) {\n      var dict = fn.dict;\n      if (!dict) {\n       dict = fn;\n      }\n      var types = [\n       this.constructSampled,\n       null,\n       this.constructInterpolated,\n       this.constructStiched,\n       this.constructPostScript\n      ];\n      var typeNum = dict.get('FunctionType');\n      var typeFn = types[typeNum];\n      if (!typeFn) {\n       error('Unknown type of function');\n      }\n      return typeFn.call(this, fn, dict, xref);\n     },\n     fromIR: function PDFFunction_fromIR(IR) {\n      var type = IR[0];\n      switch (type) {\n      case CONSTRUCT_SAMPLED:\n       return this.constructSampledFromIR(IR);\n      case CONSTRUCT_INTERPOLATED:\n       return this.constructInterpolatedFromIR(IR);\n      case CONSTRUCT_STICHED:\n       return this.constructStichedFromIR(IR);\n      default:\n       return this.constructPostScriptFromIR(IR);\n      }\n     },\n     parse: function PDFFunction_parse(xref, fn) {\n      var IR = this.getIR(xref, fn);\n      return this.fromIR(IR);\n     },\n     parseArray: function PDFFunction_parseArray(xref, fnObj) {\n      if (!isArray(fnObj)) {\n       return this.parse(xref, fnObj);\n      }\n      var fnArray = [];\n      for (var j = 0, jj = fnObj.length; j < jj; j++) {\n       var obj = xref.fetchIfRef(fnObj[j]);\n       fnArray.push(PDFFunction.parse(xref, obj));\n      }\n      return function (src, srcOffset, dest, destOffset) {\n       for (var i = 0, ii = fnArray.length; i < ii; i++) {\n        fnArray[i](src, srcOffset, dest, destOffset + i);\n       }\n      };\n     },\n     constructSampled: function PDFFunction_constructSampled(str, dict) {\n      function toMultiArray(arr) {\n       var inputLength = arr.length;\n       var out = [];\n       var index = 0;\n       for (var i = 0; i < inputLength; i += 2) {\n        out[index] = [\n         arr[i],\n         arr[i + 1]\n        ];\n        ++index;\n       }\n       return out;\n      }\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain || !range) {\n       error('No domain or range');\n      }\n      var inputSize = domain.length / 2;\n      var outputSize = range.length / 2;\n      domain = toMultiArray(domain);\n      range = toMultiArray(range);\n      var size = dict.get('Size');\n      var bps = dict.get('BitsPerSample');\n      var order = dict.get('Order') || 1;\n      if (order !== 1) {\n       info('No support for cubic spline interpolation: ' + order);\n      }\n      var encode = dict.getArray('Encode');\n      if (!encode) {\n       encode = [];\n       for (var i = 0; i < inputSize; ++i) {\n        encode.push(0);\n        encode.push(size[i] - 1);\n       }\n      }\n      encode = toMultiArray(encode);\n      var decode = dict.getArray('Decode');\n      if (!decode) {\n       decode = range;\n      } else {\n       decode = toMultiArray(decode);\n      }\n      var samples = this.getSampleArray(size, outputSize, bps, str);\n      return [\n       CONSTRUCT_SAMPLED,\n       inputSize,\n       domain,\n       encode,\n       decode,\n       samples,\n       size,\n       outputSize,\n       Math.pow(2, bps) - 1,\n       range\n      ];\n     },\n     constructSampledFromIR: function PDFFunction_constructSampledFromIR(IR) {\n      function interpolate(x, xmin, xmax, ymin, ymax) {\n       return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n      }\n      return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n       var m = IR[1];\n       var domain = IR[2];\n       var encode = IR[3];\n       var decode = IR[4];\n       var samples = IR[5];\n       var size = IR[6];\n       var n = IR[7];\n       var range = IR[9];\n       var cubeVertices = 1 << m;\n       var cubeN = new Float64Array(cubeVertices);\n       var cubeVertex = new Uint32Array(cubeVertices);\n       var i, j;\n       for (j = 0; j < cubeVertices; j++) {\n        cubeN[j] = 1;\n       }\n       var k = n, pos = 1;\n       for (i = 0; i < m; ++i) {\n        var domain_2i = domain[i][0];\n        var domain_2i_1 = domain[i][1];\n        var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n        var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n        var size_i = size[i];\n        e = Math.min(Math.max(e, 0), size_i - 1);\n        var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n        var n0 = e0 + 1 - e;\n        var n1 = e - e0;\n        var offset0 = e0 * k;\n        var offset1 = offset0 + k;\n        for (j = 0; j < cubeVertices; j++) {\n         if (j & pos) {\n          cubeN[j] *= n1;\n          cubeVertex[j] += offset1;\n         } else {\n          cubeN[j] *= n0;\n          cubeVertex[j] += offset0;\n         }\n        }\n        k *= size_i;\n        pos <<= 1;\n       }\n       for (j = 0; j < n; ++j) {\n        var rj = 0;\n        for (i = 0; i < cubeVertices; i++) {\n         rj += samples[cubeVertex[i] + j] * cubeN[i];\n        }\n        rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n        dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n       }\n      };\n     },\n     constructInterpolated: function PDFFunction_constructInterpolated(str, dict) {\n      var c0 = dict.getArray('C0') || [0];\n      var c1 = dict.getArray('C1') || [1];\n      var n = dict.get('N');\n      if (!isArray(c0) || !isArray(c1)) {\n       error('Illegal dictionary for interpolated function');\n      }\n      var length = c0.length;\n      var diff = [];\n      for (var i = 0; i < length; ++i) {\n       diff.push(c1[i] - c0[i]);\n      }\n      return [\n       CONSTRUCT_INTERPOLATED,\n       c0,\n       diff,\n       n\n      ];\n     },\n     constructInterpolatedFromIR: function PDFFunction_constructInterpolatedFromIR(IR) {\n      var c0 = IR[1];\n      var diff = IR[2];\n      var n = IR[3];\n      var length = diff.length;\n      return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n       var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n       for (var j = 0; j < length; ++j) {\n        dest[destOffset + j] = c0[j] + x * diff[j];\n       }\n      };\n     },\n     constructStiched: function PDFFunction_constructStiched(fn, dict, xref) {\n      var domain = dict.getArray('Domain');\n      if (!domain) {\n       error('No domain');\n      }\n      var inputSize = domain.length / 2;\n      if (inputSize !== 1) {\n       error('Bad domain for stiched function');\n      }\n      var fnRefs = dict.get('Functions');\n      var fns = [];\n      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n       fns.push(PDFFunction.getIR(xref, xref.fetchIfRef(fnRefs[i])));\n      }\n      var bounds = dict.getArray('Bounds');\n      var encode = dict.getArray('Encode');\n      return [\n       CONSTRUCT_STICHED,\n       domain,\n       bounds,\n       encode,\n       fns\n      ];\n     },\n     constructStichedFromIR: function PDFFunction_constructStichedFromIR(IR) {\n      var domain = IR[1];\n      var bounds = IR[2];\n      var encode = IR[3];\n      var fnsIR = IR[4];\n      var fns = [];\n      var tmpBuf = new Float32Array(1);\n      for (var i = 0, ii = fnsIR.length; i < ii; i++) {\n       fns.push(PDFFunction.fromIR(fnsIR[i]));\n      }\n      return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n       var clip = function constructStichedFromIRClip(v, min, max) {\n        if (v > max) {\n         v = max;\n        } else if (v < min) {\n         v = min;\n        }\n        return v;\n       };\n       var v = clip(src[srcOffset], domain[0], domain[1]);\n       for (var i = 0, ii = bounds.length; i < ii; ++i) {\n        if (v < bounds[i]) {\n         break;\n        }\n       }\n       var dmin = domain[0];\n       if (i > 0) {\n        dmin = bounds[i - 1];\n       }\n       var dmax = domain[1];\n       if (i < bounds.length) {\n        dmax = bounds[i];\n       }\n       var rmin = encode[2 * i];\n       var rmax = encode[2 * i + 1];\n       tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n       fns[i](tmpBuf, 0, dest, destOffset);\n      };\n     },\n     constructPostScript: function PDFFunction_constructPostScript(fn, dict, xref) {\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain) {\n       error('No domain.');\n      }\n      if (!range) {\n       error('No range.');\n      }\n      var lexer = new PostScriptLexer(fn);\n      var parser = new PostScriptParser(lexer);\n      var code = parser.parse();\n      return [\n       CONSTRUCT_POSTSCRIPT,\n       domain,\n       range,\n       code\n      ];\n     },\n     constructPostScriptFromIR: function PDFFunction_constructPostScriptFromIR(IR) {\n      var domain = IR[1];\n      var range = IR[2];\n      var code = IR[3];\n      var compiled = new PostScriptCompiler().compile(code, domain, range);\n      if (compiled) {\n       return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n      }\n      info('Unable to compile PS function');\n      var numOutputs = range.length >> 1;\n      var numInputs = domain.length >> 1;\n      var evaluator = new PostScriptEvaluator(code);\n      var cache = Object.create(null);\n      var MAX_CACHE_SIZE = 2048 * 4;\n      var cache_available = MAX_CACHE_SIZE;\n      var tmpBuf = new Float32Array(numInputs);\n      return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n       var i, value;\n       var key = '';\n       var input = tmpBuf;\n       for (i = 0; i < numInputs; i++) {\n        value = src[srcOffset + i];\n        input[i] = value;\n        key += value + '_';\n       }\n       var cachedValue = cache[key];\n       if (cachedValue !== undefined) {\n        dest.set(cachedValue, destOffset);\n        return;\n       }\n       var output = new Float32Array(numOutputs);\n       var stack = evaluator.execute(input);\n       var stackIndex = stack.length - numOutputs;\n       for (i = 0; i < numOutputs; i++) {\n        value = stack[stackIndex + i];\n        var bound = range[i * 2];\n        if (value < bound) {\n         value = bound;\n        } else {\n         bound = range[i * 2 + 1];\n         if (value > bound) {\n          value = bound;\n         }\n        }\n        output[i] = value;\n       }\n       if (cache_available > 0) {\n        cache_available--;\n        cache[key] = output;\n       }\n       dest.set(output, destOffset);\n      };\n     }\n    };\n   }();\n   function isPDFFunction(v) {\n    var fnDict;\n    if (typeof v !== 'object') {\n     return false;\n    } else if (isDict(v)) {\n     fnDict = v;\n    } else if (isStream(v)) {\n     fnDict = v.dict;\n    } else {\n     return false;\n    }\n    return fnDict.has('FunctionType');\n   }\n   var PostScriptStack = function PostScriptStackClosure() {\n    var MAX_STACK_SIZE = 100;\n    function PostScriptStack(initialStack) {\n     this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n    }\n    PostScriptStack.prototype = {\n     push: function PostScriptStack_push(value) {\n      if (this.stack.length >= MAX_STACK_SIZE) {\n       error('PostScript function stack overflow.');\n      }\n      this.stack.push(value);\n     },\n     pop: function PostScriptStack_pop() {\n      if (this.stack.length <= 0) {\n       error('PostScript function stack underflow.');\n      }\n      return this.stack.pop();\n     },\n     copy: function PostScriptStack_copy(n) {\n      if (this.stack.length + n >= MAX_STACK_SIZE) {\n       error('PostScript function stack overflow.');\n      }\n      var stack = this.stack;\n      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n       stack.push(stack[i]);\n      }\n     },\n     index: function PostScriptStack_index(n) {\n      this.push(this.stack[this.stack.length - n - 1]);\n     },\n     roll: function PostScriptStack_roll(n, p) {\n      var stack = this.stack;\n      var l = stack.length - n;\n      var r = stack.length - 1, c = l + (p - Math.floor(p / n) * n), i, j, t;\n      for (i = l, j = r; i < j; i++, j--) {\n       t = stack[i];\n       stack[i] = stack[j];\n       stack[j] = t;\n      }\n      for (i = l, j = c - 1; i < j; i++, j--) {\n       t = stack[i];\n       stack[i] = stack[j];\n       stack[j] = t;\n      }\n      for (i = c, j = r; i < j; i++, j--) {\n       t = stack[i];\n       stack[i] = stack[j];\n       stack[j] = t;\n      }\n     }\n    };\n    return PostScriptStack;\n   }();\n   var PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n    function PostScriptEvaluator(operators) {\n     this.operators = operators;\n    }\n    PostScriptEvaluator.prototype = {\n     execute: function PostScriptEvaluator_execute(initialStack) {\n      var stack = new PostScriptStack(initialStack);\n      var counter = 0;\n      var operators = this.operators;\n      var length = operators.length;\n      var operator, a, b;\n      while (counter < length) {\n       operator = operators[counter++];\n       if (typeof operator === 'number') {\n        stack.push(operator);\n        continue;\n       }\n       switch (operator) {\n       case 'jz':\n        b = stack.pop();\n        a = stack.pop();\n        if (!a) {\n         counter = b;\n        }\n        break;\n       case 'j':\n        a = stack.pop();\n        counter = a;\n        break;\n       case 'abs':\n        a = stack.pop();\n        stack.push(Math.abs(a));\n        break;\n       case 'add':\n        b = stack.pop();\n        a = stack.pop();\n        stack.push(a + b);\n        break;\n       case 'and':\n        b = stack.pop();\n        a = stack.pop();\n        if (isBool(a) && isBool(b)) {\n         stack.push(a && b);\n        } else {\n         stack.push(a & b);\n        }\n        break;\n       case 'atan':\n        a = stack.pop();\n        stack.push(Math.atan(a));\n        break;\n       case 'bitshift':\n        b = stack.pop();\n        a = stack.pop();\n        if (a > 0) {\n         stack.push(a << b);\n        } else {\n         stack.push(a >> b);\n        }\n        break;\n       case 'ceiling':\n        a = stack.pop();\n        stack.push(Math.ceil(a));\n        break;\n       case 'copy':\n        a = stack.pop();\n        stack.copy(a);\n        break;\n       case 'cos':\n        a = stack.pop();\n        stack.push(Math.cos(a));\n        break;\n       case 'cvi':\n        a = stack.pop() | 0;\n        stack.push(a);\n        break;\n       case 'cvr':\n        break;\n       case 'div':\n        b = stack.pop();\n        a = stack.pop();\n        stack.push(a / b);\n        break;\n       case 'dup':\n        stack.copy(1);\n        break;\n       case 'eq':\n        b = stack.pop();\n        a = stack.pop();\n        stack.push(a === b);\n        break;\n       case 'exch':\n        stack.roll(2, 1);\n        break;\n       case 'exp':\n        b = stack.pop();\n        a = stack.pop();\n        stack.push(Math.pow(a, b));\n        break;\n       case 'false':\n        stack.push(false);\n        break;\n       case 'floor':\n        a = stack.pop();\n        stack.push(Math.floor(a));\n        break;\n       case 'ge':\n        b = stack.pop();\n        a = stack.pop();\n        stack.push(a >= b);\n        break;\n       case 'gt':\n        b = stack.pop();\n        a = stack.pop();\n        stack.push(a > b);\n        break;\n       case 'idiv':\n        b = stack.pop();\n        a = stack.pop();\n        stack.push(a / b | 0);\n        break;\n       case 'index':\n        a = stack.pop();\n        stack.index(a);\n        break;\n       case 'le':\n        b = stack.pop();\n        a = stack.pop();\n        stack.push(a <= b);\n        break;\n       case 'ln':\n        a = stack.pop();\n        stack.push(Math.log(a));\n        break;\n       case 'log':\n        a = stack.pop();\n        stack.push(Math.log(a) / Math.LN10);\n        break;\n       case 'lt':\n        b = stack.pop();\n        a = stack.pop();\n        stack.push(a < b);\n        break;\n       case 'mod':\n        b = stack.pop();\n        a = stack.pop();\n        stack.push(a % b);\n        break;\n       case 'mul':\n        b = stack.pop();\n        a = stack.pop();\n        stack.push(a * b);\n        break;\n       case 'ne':\n        b = stack.pop();\n        a = stack.pop();\n        stack.push(a !== b);\n        break;\n       case 'neg':\n        a = stack.pop();\n        stack.push(-a);\n        break;\n       case 'not':\n        a = stack.pop();\n        if (isBool(a)) {\n         stack.push(!a);\n        } else {\n         stack.push(~a);\n        }\n        break;\n       case 'or':\n        b = stack.pop();\n        a = stack.pop();\n        if (isBool(a) && isBool(b)) {\n         stack.push(a || b);\n        } else {\n         stack.push(a | b);\n        }\n        break;\n       case 'pop':\n        stack.pop();\n        break;\n       case 'roll':\n        b = stack.pop();\n        a = stack.pop();\n        stack.roll(a, b);\n        break;\n       case 'round':\n        a = stack.pop();\n        stack.push(Math.round(a));\n        break;\n       case 'sin':\n        a = stack.pop();\n        stack.push(Math.sin(a));\n        break;\n       case 'sqrt':\n        a = stack.pop();\n        stack.push(Math.sqrt(a));\n        break;\n       case 'sub':\n        b = stack.pop();\n        a = stack.pop();\n        stack.push(a - b);\n        break;\n       case 'true':\n        stack.push(true);\n        break;\n       case 'truncate':\n        a = stack.pop();\n        a = a < 0 ? Math.ceil(a) : Math.floor(a);\n        stack.push(a);\n        break;\n       case 'xor':\n        b = stack.pop();\n        a = stack.pop();\n        if (isBool(a) && isBool(b)) {\n         stack.push(a !== b);\n        } else {\n         stack.push(a ^ b);\n        }\n        break;\n       default:\n        error('Unknown operator ' + operator);\n        break;\n       }\n      }\n      return stack.stack;\n     }\n    };\n    return PostScriptEvaluator;\n   }();\n   var PostScriptCompiler = function PostScriptCompilerClosure() {\n    function AstNode(type) {\n     this.type = type;\n    }\n    AstNode.prototype.visit = function (visitor) {\n     throw new Error('abstract method');\n    };\n    function AstArgument(index, min, max) {\n     AstNode.call(this, 'args');\n     this.index = index;\n     this.min = min;\n     this.max = max;\n    }\n    AstArgument.prototype = Object.create(AstNode.prototype);\n    AstArgument.prototype.visit = function (visitor) {\n     visitor.visitArgument(this);\n    };\n    function AstLiteral(number) {\n     AstNode.call(this, 'literal');\n     this.number = number;\n     this.min = number;\n     this.max = number;\n    }\n    AstLiteral.prototype = Object.create(AstNode.prototype);\n    AstLiteral.prototype.visit = function (visitor) {\n     visitor.visitLiteral(this);\n    };\n    function AstBinaryOperation(op, arg1, arg2, min, max) {\n     AstNode.call(this, 'binary');\n     this.op = op;\n     this.arg1 = arg1;\n     this.arg2 = arg2;\n     this.min = min;\n     this.max = max;\n    }\n    AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n    AstBinaryOperation.prototype.visit = function (visitor) {\n     visitor.visitBinaryOperation(this);\n    };\n    function AstMin(arg, max) {\n     AstNode.call(this, 'max');\n     this.arg = arg;\n     this.min = arg.min;\n     this.max = max;\n    }\n    AstMin.prototype = Object.create(AstNode.prototype);\n    AstMin.prototype.visit = function (visitor) {\n     visitor.visitMin(this);\n    };\n    function AstVariable(index, min, max) {\n     AstNode.call(this, 'var');\n     this.index = index;\n     this.min = min;\n     this.max = max;\n    }\n    AstVariable.prototype = Object.create(AstNode.prototype);\n    AstVariable.prototype.visit = function (visitor) {\n     visitor.visitVariable(this);\n    };\n    function AstVariableDefinition(variable, arg) {\n     AstNode.call(this, 'definition');\n     this.variable = variable;\n     this.arg = arg;\n    }\n    AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n    AstVariableDefinition.prototype.visit = function (visitor) {\n     visitor.visitVariableDefinition(this);\n    };\n    function ExpressionBuilderVisitor() {\n     this.parts = [];\n    }\n    ExpressionBuilderVisitor.prototype = {\n     visitArgument: function (arg) {\n      this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\n     },\n     visitVariable: function (variable) {\n      this.parts.push('v', variable.index);\n     },\n     visitLiteral: function (literal) {\n      this.parts.push(literal.number);\n     },\n     visitBinaryOperation: function (operation) {\n      this.parts.push('(');\n      operation.arg1.visit(this);\n      this.parts.push(' ', operation.op, ' ');\n      operation.arg2.visit(this);\n      this.parts.push(')');\n     },\n     visitVariableDefinition: function (definition) {\n      this.parts.push('var ');\n      definition.variable.visit(this);\n      this.parts.push(' = ');\n      definition.arg.visit(this);\n      this.parts.push(';');\n     },\n     visitMin: function (max) {\n      this.parts.push('Math.min(');\n      max.arg.visit(this);\n      this.parts.push(', ', max.max, ')');\n     },\n     toString: function () {\n      return this.parts.join('');\n     }\n    };\n    function buildAddOperation(num1, num2) {\n     if (num2.type === 'literal' && num2.number === 0) {\n      return num1;\n     }\n     if (num1.type === 'literal' && num1.number === 0) {\n      return num2;\n     }\n     if (num2.type === 'literal' && num1.type === 'literal') {\n      return new AstLiteral(num1.number + num2.number);\n     }\n     return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\n    }\n    function buildMulOperation(num1, num2) {\n     if (num2.type === 'literal') {\n      if (num2.number === 0) {\n       return new AstLiteral(0);\n      } else if (num2.number === 1) {\n       return num1;\n      } else if (num1.type === 'literal') {\n       return new AstLiteral(num1.number * num2.number);\n      }\n     }\n     if (num1.type === 'literal') {\n      if (num1.number === 0) {\n       return new AstLiteral(0);\n      } else if (num1.number === 1) {\n       return num2;\n      }\n     }\n     var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n     var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n     return new AstBinaryOperation('*', num1, num2, min, max);\n    }\n    function buildSubOperation(num1, num2) {\n     if (num2.type === 'literal') {\n      if (num2.number === 0) {\n       return num1;\n      } else if (num1.type === 'literal') {\n       return new AstLiteral(num1.number - num2.number);\n      }\n     }\n     if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n      return num2.arg2;\n     }\n     return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\n    }\n    function buildMinOperation(num1, max) {\n     if (num1.min >= max) {\n      return new AstLiteral(max);\n     } else if (num1.max <= max) {\n      return num1;\n     }\n     return new AstMin(num1, max);\n    }\n    function PostScriptCompiler() {\n    }\n    PostScriptCompiler.prototype = {\n     compile: function PostScriptCompiler_compile(code, domain, range) {\n      var stack = [];\n      var i, ii;\n      var instructions = [];\n      var inputSize = domain.length >> 1, outputSize = range.length >> 1;\n      var lastRegister = 0;\n      var n, j;\n      var num1, num2, ast1, ast2, tmpVar, item;\n      for (i = 0; i < inputSize; i++) {\n       stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n      }\n      for (i = 0, ii = code.length; i < ii; i++) {\n       item = code[i];\n       if (typeof item === 'number') {\n        stack.push(new AstLiteral(item));\n        continue;\n       }\n       switch (item) {\n       case 'add':\n        if (stack.length < 2) {\n         return null;\n        }\n        num2 = stack.pop();\n        num1 = stack.pop();\n        stack.push(buildAddOperation(num1, num2));\n        break;\n       case 'cvr':\n        if (stack.length < 1) {\n         return null;\n        }\n        break;\n       case 'mul':\n        if (stack.length < 2) {\n         return null;\n        }\n        num2 = stack.pop();\n        num1 = stack.pop();\n        stack.push(buildMulOperation(num1, num2));\n        break;\n       case 'sub':\n        if (stack.length < 2) {\n         return null;\n        }\n        num2 = stack.pop();\n        num1 = stack.pop();\n        stack.push(buildSubOperation(num1, num2));\n        break;\n       case 'exch':\n        if (stack.length < 2) {\n         return null;\n        }\n        ast1 = stack.pop();\n        ast2 = stack.pop();\n        stack.push(ast1, ast2);\n        break;\n       case 'pop':\n        if (stack.length < 1) {\n         return null;\n        }\n        stack.pop();\n        break;\n       case 'index':\n        if (stack.length < 1) {\n         return null;\n        }\n        num1 = stack.pop();\n        if (num1.type !== 'literal') {\n         return null;\n        }\n        n = num1.number;\n        if (n < 0 || (n | 0) !== n || stack.length < n) {\n         return null;\n        }\n        ast1 = stack[stack.length - n - 1];\n        if (ast1.type === 'literal' || ast1.type === 'var') {\n         stack.push(ast1);\n         break;\n        }\n        tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n        stack[stack.length - n - 1] = tmpVar;\n        stack.push(tmpVar);\n        instructions.push(new AstVariableDefinition(tmpVar, ast1));\n        break;\n       case 'dup':\n        if (stack.length < 1) {\n         return null;\n        }\n        if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n         num1 = stack.pop();\n         stack.push(buildMinOperation(num1, code[i + 1]));\n         i += 6;\n         break;\n        }\n        ast1 = stack[stack.length - 1];\n        if (ast1.type === 'literal' || ast1.type === 'var') {\n         stack.push(ast1);\n         break;\n        }\n        tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n        stack[stack.length - 1] = tmpVar;\n        stack.push(tmpVar);\n        instructions.push(new AstVariableDefinition(tmpVar, ast1));\n        break;\n       case 'roll':\n        if (stack.length < 2) {\n         return null;\n        }\n        num2 = stack.pop();\n        num1 = stack.pop();\n        if (num2.type !== 'literal' || num1.type !== 'literal') {\n         return null;\n        }\n        j = num2.number;\n        n = num1.number;\n        if (n <= 0 || (n | 0) !== n || (j | 0) !== j || stack.length < n) {\n         return null;\n        }\n        j = (j % n + n) % n;\n        if (j === 0) {\n         break;\n        }\n        Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n        break;\n       default:\n        return null;\n       }\n      }\n      if (stack.length !== outputSize) {\n       return null;\n      }\n      var result = [];\n      instructions.forEach(function (instruction) {\n       var statementBuilder = new ExpressionBuilderVisitor();\n       instruction.visit(statementBuilder);\n       result.push(statementBuilder.toString());\n      });\n      stack.forEach(function (expr, i) {\n       var statementBuilder = new ExpressionBuilderVisitor();\n       expr.visit(statementBuilder);\n       var min = range[i * 2], max = range[i * 2 + 1];\n       var out = [statementBuilder.toString()];\n       if (min > expr.min) {\n        out.unshift('Math.max(', min, ', ');\n        out.push(')');\n       }\n       if (max < expr.max) {\n        out.unshift('Math.min(', max, ', ');\n        out.push(')');\n       }\n       out.unshift('dest[destOffset + ', i, '] = ');\n       out.push(';');\n       result.push(out.join(''));\n      });\n      return result.join('\\n');\n     }\n    };\n    return PostScriptCompiler;\n   }();\n   exports.isPDFFunction = isPDFFunction;\n   exports.PDFFunction = PDFFunction;\n   exports.PostScriptEvaluator = PostScriptEvaluator;\n   exports.PostScriptCompiler = PostScriptCompiler;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsCoreParser = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreStream);\n  }(this, function (exports, sharedUtil, corePrimitives, coreStream) {\n   var MissingDataException = sharedUtil.MissingDataException;\n   var StreamType = sharedUtil.StreamType;\n   var assert = sharedUtil.assert;\n   var error = sharedUtil.error;\n   var info = sharedUtil.info;\n   var isArray = sharedUtil.isArray;\n   var isInt = sharedUtil.isInt;\n   var isNum = sharedUtil.isNum;\n   var isString = sharedUtil.isString;\n   var warn = sharedUtil.warn;\n   var EOF = corePrimitives.EOF;\n   var Cmd = corePrimitives.Cmd;\n   var Dict = corePrimitives.Dict;\n   var Name = corePrimitives.Name;\n   var Ref = corePrimitives.Ref;\n   var isEOF = corePrimitives.isEOF;\n   var isCmd = corePrimitives.isCmd;\n   var isDict = corePrimitives.isDict;\n   var isName = corePrimitives.isName;\n   var Ascii85Stream = coreStream.Ascii85Stream;\n   var AsciiHexStream = coreStream.AsciiHexStream;\n   var CCITTFaxStream = coreStream.CCITTFaxStream;\n   var FlateStream = coreStream.FlateStream;\n   var Jbig2Stream = coreStream.Jbig2Stream;\n   var JpegStream = coreStream.JpegStream;\n   var JpxStream = coreStream.JpxStream;\n   var LZWStream = coreStream.LZWStream;\n   var NullStream = coreStream.NullStream;\n   var PredictorStream = coreStream.PredictorStream;\n   var RunLengthStream = coreStream.RunLengthStream;\n   var MAX_LENGTH_TO_CACHE = 1000;\n   var Parser = function ParserClosure() {\n    function Parser(lexer, allowStreams, xref, recoveryMode) {\n     this.lexer = lexer;\n     this.allowStreams = allowStreams;\n     this.xref = xref;\n     this.recoveryMode = recoveryMode || false;\n     this.imageCache = Object.create(null);\n     this.refill();\n    }\n    Parser.prototype = {\n     refill: function Parser_refill() {\n      this.buf1 = this.lexer.getObj();\n      this.buf2 = this.lexer.getObj();\n     },\n     shift: function Parser_shift() {\n      if (isCmd(this.buf2, 'ID')) {\n       this.buf1 = this.buf2;\n       this.buf2 = null;\n      } else {\n       this.buf1 = this.buf2;\n       this.buf2 = this.lexer.getObj();\n      }\n     },\n     tryShift: function Parser_tryShift() {\n      try {\n       this.shift();\n       return true;\n      } catch (e) {\n       if (e instanceof MissingDataException) {\n        throw e;\n       }\n       return false;\n      }\n     },\n     getObj: function Parser_getObj(cipherTransform) {\n      var buf1 = this.buf1;\n      this.shift();\n      if (buf1 instanceof Cmd) {\n       switch (buf1.cmd) {\n       case 'BI':\n        return this.makeInlineImage(cipherTransform);\n       case '[':\n        var array = [];\n        while (!isCmd(this.buf1, ']') && !isEOF(this.buf1)) {\n         array.push(this.getObj(cipherTransform));\n        }\n        if (isEOF(this.buf1)) {\n         if (!this.recoveryMode) {\n          error('End of file inside array');\n         }\n         return array;\n        }\n        this.shift();\n        return array;\n       case '<<':\n        var dict = new Dict(this.xref);\n        while (!isCmd(this.buf1, '>>') && !isEOF(this.buf1)) {\n         if (!isName(this.buf1)) {\n          info('Malformed dictionary: key must be a name object');\n          this.shift();\n          continue;\n         }\n         var key = this.buf1.name;\n         this.shift();\n         if (isEOF(this.buf1)) {\n          break;\n         }\n         dict.set(key, this.getObj(cipherTransform));\n        }\n        if (isEOF(this.buf1)) {\n         if (!this.recoveryMode) {\n          error('End of file inside dictionary');\n         }\n         return dict;\n        }\n        if (isCmd(this.buf2, 'stream')) {\n         return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n        }\n        this.shift();\n        return dict;\n       default:\n        return buf1;\n       }\n      }\n      if (isInt(buf1)) {\n       var num = buf1;\n       if (isInt(this.buf1) && isCmd(this.buf2, 'R')) {\n        var ref = new Ref(num, this.buf1);\n        this.shift();\n        this.shift();\n        return ref;\n       }\n       return num;\n      }\n      if (isString(buf1)) {\n       var str = buf1;\n       if (cipherTransform) {\n        str = cipherTransform.decryptString(str);\n       }\n       return str;\n      }\n      return buf1;\n     },\n     findDefaultInlineStreamEnd: function Parser_findDefaultInlineStreamEnd(stream) {\n      var E = 0x45, I = 0x49, SPACE = 0x20, LF = 0xA, CR = 0xD;\n      var startPos = stream.pos, state = 0, ch, i, n, followingBytes;\n      while ((ch = stream.getByte()) !== -1) {\n       if (state === 0) {\n        state = ch === E ? 1 : 0;\n       } else if (state === 1) {\n        state = ch === I ? 2 : 0;\n       } else {\n        assert(state === 2);\n        if (ch === SPACE || ch === LF || ch === CR) {\n         n = 5;\n         followingBytes = stream.peekBytes(n);\n         for (i = 0; i < n; i++) {\n          ch = followingBytes[i];\n          if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n           state = 0;\n           break;\n          }\n         }\n         if (state === 2) {\n          break;\n         }\n        } else\n         {\n          state = 0;\n         }\n       }\n      }\n      return stream.pos - 4 - startPos;\n     },\n     findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\n      var startPos = stream.pos, foundEOI = false, b, markerLength, length;\n      while ((b = stream.getByte()) !== -1) {\n       if (b !== 0xFF) {\n        continue;\n       }\n       switch (stream.getByte()) {\n       case 0x00:\n        break;\n       case 0xFF:\n        stream.skip(-1);\n        break;\n       case 0xD9:\n        foundEOI = true;\n        break;\n       case 0xC0:\n       case 0xC1:\n       case 0xC2:\n       case 0xC3:\n       case 0xC5:\n       case 0xC6:\n       case 0xC7:\n       case 0xC9:\n       case 0xCA:\n       case 0xCB:\n       case 0xCD:\n       case 0xCE:\n       case 0xCF:\n       case 0xC4:\n       case 0xCC:\n       case 0xDA:\n       case 0xDB:\n       case 0xDC:\n       case 0xDD:\n       case 0xDE:\n       case 0xDF:\n       case 0xE0:\n       case 0xE1:\n       case 0xE2:\n       case 0xE3:\n       case 0xE4:\n       case 0xE5:\n       case 0xE6:\n       case 0xE7:\n       case 0xE8:\n       case 0xE9:\n       case 0xEA:\n       case 0xEB:\n       case 0xEC:\n       case 0xED:\n       case 0xEE:\n       case 0xEF:\n       case 0xFE:\n        markerLength = stream.getUint16();\n        if (markerLength > 2) {\n         stream.skip(markerLength - 2);\n        } else\n         {\n          stream.skip(-2);\n         }\n        break;\n       }\n       if (foundEOI) {\n        break;\n       }\n      }\n      length = stream.pos - startPos;\n      if (b === -1) {\n       warn('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\n       stream.skip(-length);\n       return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n     },\n     findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n      var TILDE = 0x7E, GT = 0x3E;\n      var startPos = stream.pos, ch, length;\n      while ((ch = stream.getByte()) !== -1) {\n       if (ch === TILDE && stream.peekByte() === GT) {\n        stream.skip();\n        break;\n       }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n       warn('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n       stream.skip(-length);\n       return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n     },\n     findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n      var GT = 0x3E;\n      var startPos = stream.pos, ch, length;\n      while ((ch = stream.getByte()) !== -1) {\n       if (ch === GT) {\n        break;\n       }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n       warn('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n       stream.skip(-length);\n       return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n     },\n     inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n      var E = 0x45, I = 0x49;\n      var state = 0, ch;\n      while ((ch = stream.getByte()) !== -1) {\n       if (state === 0) {\n        state = ch === E ? 1 : 0;\n       } else if (state === 1) {\n        state = ch === I ? 2 : 0;\n       } else if (state === 2) {\n        break;\n       }\n      }\n     },\n     makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      var dict = new Dict(this.xref);\n      while (!isCmd(this.buf1, 'ID') && !isEOF(this.buf1)) {\n       if (!isName(this.buf1)) {\n        error('Dictionary key must be a name object');\n       }\n       var key = this.buf1.name;\n       this.shift();\n       if (isEOF(this.buf1)) {\n        break;\n       }\n       dict.set(key, this.getObj(cipherTransform));\n      }\n      var filter = dict.get('Filter', 'F'), filterName;\n      if (isName(filter)) {\n       filterName = filter.name;\n      } else if (isArray(filter)) {\n       var filterZero = this.xref.fetchIfRef(filter[0]);\n       if (isName(filterZero)) {\n        filterName = filterZero.name;\n       }\n      }\n      var startPos = stream.pos, length, i, ii;\n      if (filterName === 'DCTDecode' || filterName === 'DCT') {\n       length = this.findDCTDecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCII85Decide' || filterName === 'A85') {\n       length = this.findASCII85DecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n       length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n      } else {\n       length = this.findDefaultInlineStreamEnd(stream);\n      }\n      var imageStream = stream.makeSubStream(startPos, length, dict);\n      var adler32;\n      if (length < MAX_LENGTH_TO_CACHE) {\n       var imageBytes = imageStream.getBytes();\n       imageStream.reset();\n       var a = 1;\n       var b = 0;\n       for (i = 0, ii = imageBytes.length; i < ii; ++i) {\n        a += imageBytes[i] & 0xff;\n        b += a;\n       }\n       adler32 = b % 65521 << 16 | a % 65521;\n       if (this.imageCache.adler32 === adler32) {\n        this.buf2 = Cmd.get('EI');\n        this.shift();\n        this.imageCache[adler32].reset();\n        return this.imageCache[adler32];\n       }\n      }\n      if (cipherTransform) {\n       imageStream = cipherTransform.createStream(imageStream, length);\n      }\n      imageStream = this.filter(imageStream, dict, length);\n      imageStream.dict = dict;\n      if (adler32 !== undefined) {\n       imageStream.cacheKey = 'inline_' + length + '_' + adler32;\n       this.imageCache[adler32] = imageStream;\n      }\n      this.buf2 = Cmd.get('EI');\n      this.shift();\n      return imageStream;\n     },\n     makeStream: function Parser_makeStream(dict, cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      lexer.skipToNextLine();\n      var pos = stream.pos - 1;\n      var length = dict.get('Length');\n      if (!isInt(length)) {\n       info('Bad ' + length + ' attribute in stream');\n       length = 0;\n      }\n      stream.pos = pos + length;\n      lexer.nextChar();\n      if (this.tryShift() && isCmd(this.buf2, 'endstream')) {\n       this.shift();\n      } else\n       {\n        stream.pos = pos;\n        var SCAN_BLOCK_SIZE = 2048;\n        var ENDSTREAM_SIGNATURE_LENGTH = 9;\n        var ENDSTREAM_SIGNATURE = [\n         0x65,\n         0x6E,\n         0x64,\n         0x73,\n         0x74,\n         0x72,\n         0x65,\n         0x61,\n         0x6D\n        ];\n        var skipped = 0, found = false, i, j;\n        while (stream.pos < stream.end) {\n         var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n         var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n         if (scanLength <= 0) {\n          break;\n         }\n         found = false;\n         i = 0;\n         while (i < scanLength) {\n          j = 0;\n          while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\n           j++;\n          }\n          if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n           found = true;\n           break;\n          }\n          i++;\n         }\n         if (found) {\n          skipped += i;\n          stream.pos += i;\n          break;\n         }\n         skipped += scanLength;\n         stream.pos += scanLength;\n        }\n        if (!found) {\n         error('Missing endstream');\n        }\n        length = skipped;\n        lexer.nextChar();\n        this.shift();\n        this.shift();\n       }\n      this.shift();\n      stream = stream.makeSubStream(pos, length, dict);\n      if (cipherTransform) {\n       stream = cipherTransform.createStream(stream, length);\n      }\n      stream = this.filter(stream, dict, length);\n      stream.dict = dict;\n      return stream;\n     },\n     filter: function Parser_filter(stream, dict, length) {\n      var filter = dict.get('Filter', 'F');\n      var params = dict.get('DecodeParms', 'DP');\n      if (isName(filter)) {\n       if (isArray(params)) {\n        params = this.xref.fetchIfRef(params[0]);\n       }\n       return this.makeFilter(stream, filter.name, length, params);\n      }\n      var maybeLength = length;\n      if (isArray(filter)) {\n       var filterArray = filter;\n       var paramsArray = params;\n       for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n        filter = this.xref.fetchIfRef(filterArray[i]);\n        if (!isName(filter)) {\n         error('Bad filter name: ' + filter);\n        }\n        params = null;\n        if (isArray(paramsArray) && i in paramsArray) {\n         params = this.xref.fetchIfRef(paramsArray[i]);\n        }\n        stream = this.makeFilter(stream, filter.name, maybeLength, params);\n        maybeLength = null;\n       }\n      }\n      return stream;\n     },\n     makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n      if (maybeLength === 0) {\n       warn('Empty \"' + name + '\" stream.');\n       return new NullStream(stream);\n      }\n      try {\n       var xrefStreamStats = this.xref.stats.streamTypes;\n       if (name === 'FlateDecode' || name === 'Fl') {\n        xrefStreamStats[StreamType.FLATE] = true;\n        if (params) {\n         return new PredictorStream(new FlateStream(stream, maybeLength), maybeLength, params);\n        }\n        return new FlateStream(stream, maybeLength);\n       }\n       if (name === 'LZWDecode' || name === 'LZW') {\n        xrefStreamStats[StreamType.LZW] = true;\n        var earlyChange = 1;\n        if (params) {\n         if (params.has('EarlyChange')) {\n          earlyChange = params.get('EarlyChange');\n         }\n         return new PredictorStream(new LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n        }\n        return new LZWStream(stream, maybeLength, earlyChange);\n       }\n       if (name === 'DCTDecode' || name === 'DCT') {\n        xrefStreamStats[StreamType.DCT] = true;\n        return new JpegStream(stream, maybeLength, stream.dict, params);\n       }\n       if (name === 'JPXDecode' || name === 'JPX') {\n        xrefStreamStats[StreamType.JPX] = true;\n        return new JpxStream(stream, maybeLength, stream.dict, params);\n       }\n       if (name === 'ASCII85Decode' || name === 'A85') {\n        xrefStreamStats[StreamType.A85] = true;\n        return new Ascii85Stream(stream, maybeLength);\n       }\n       if (name === 'ASCIIHexDecode' || name === 'AHx') {\n        xrefStreamStats[StreamType.AHX] = true;\n        return new AsciiHexStream(stream, maybeLength);\n       }\n       if (name === 'CCITTFaxDecode' || name === 'CCF') {\n        xrefStreamStats[StreamType.CCF] = true;\n        return new CCITTFaxStream(stream, maybeLength, params);\n       }\n       if (name === 'RunLengthDecode' || name === 'RL') {\n        xrefStreamStats[StreamType.RL] = true;\n        return new RunLengthStream(stream, maybeLength);\n       }\n       if (name === 'JBIG2Decode') {\n        xrefStreamStats[StreamType.JBIG] = true;\n        return new Jbig2Stream(stream, maybeLength, stream.dict, params);\n       }\n       warn('filter \"' + name + '\" not supported yet');\n       return stream;\n      } catch (ex) {\n       if (ex instanceof MissingDataException) {\n        throw ex;\n       }\n       warn('Invalid stream: \\\"' + ex + '\\\"');\n       return new NullStream(stream);\n      }\n     }\n    };\n    return Parser;\n   }();\n   var Lexer = function LexerClosure() {\n    function Lexer(stream, knownCommands) {\n     this.stream = stream;\n     this.nextChar();\n     this.strBuf = [];\n     this.knownCommands = knownCommands;\n    }\n    var specialChars = [\n     1,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     1,\n     1,\n     0,\n     1,\n     1,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     1,\n     0,\n     0,\n     0,\n     0,\n     2,\n     0,\n     0,\n     2,\n     2,\n     0,\n     0,\n     0,\n     0,\n     0,\n     2,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     2,\n     0,\n     2,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     2,\n     0,\n     2,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     2,\n     0,\n     2,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0,\n     0\n    ];\n    function toHexDigit(ch) {\n     if (ch >= 0x30 && ch <= 0x39) {\n      return ch & 0x0F;\n     }\n     if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n      return (ch & 0x0F) + 9;\n     }\n     return -1;\n    }\n    Lexer.prototype = {\n     nextChar: function Lexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n     },\n     peekChar: function Lexer_peekChar() {\n      return this.stream.peekByte();\n     },\n     getNumber: function Lexer_getNumber() {\n      var ch = this.currentChar;\n      var eNotation = false;\n      var divideBy = 0;\n      var sign = 1;\n      if (ch === 0x2D) {\n       sign = -1;\n       ch = this.nextChar();\n       if (ch === 0x2D) {\n        ch = this.nextChar();\n       }\n      } else if (ch === 0x2B) {\n       ch = this.nextChar();\n      }\n      if (ch === 0x2E) {\n       divideBy = 10;\n       ch = this.nextChar();\n      }\n      if (ch < 0x30 || ch > 0x39) {\n       error('Invalid number: ' + String.fromCharCode(ch));\n       return 0;\n      }\n      var baseValue = ch - 0x30;\n      var powerValue = 0;\n      var powerValueSign = 1;\n      while ((ch = this.nextChar()) >= 0) {\n       if (0x30 <= ch && ch <= 0x39) {\n        var currentDigit = ch - 0x30;\n        if (eNotation) {\n         powerValue = powerValue * 10 + currentDigit;\n        } else {\n         if (divideBy !== 0) {\n          divideBy *= 10;\n         }\n         baseValue = baseValue * 10 + currentDigit;\n        }\n       } else if (ch === 0x2E) {\n        if (divideBy === 0) {\n         divideBy = 1;\n        } else {\n         break;\n        }\n       } else if (ch === 0x2D) {\n        warn('Badly formatted number');\n       } else if (ch === 0x45 || ch === 0x65) {\n        ch = this.peekChar();\n        if (ch === 0x2B || ch === 0x2D) {\n         powerValueSign = ch === 0x2D ? -1 : 1;\n         this.nextChar();\n        } else if (ch < 0x30 || ch > 0x39) {\n         break;\n        }\n        eNotation = true;\n       } else {\n        break;\n       }\n      }\n      if (divideBy !== 0) {\n       baseValue /= divideBy;\n      }\n      if (eNotation) {\n       baseValue *= Math.pow(10, powerValueSign * powerValue);\n      }\n      return sign * baseValue;\n     },\n     getString: function Lexer_getString() {\n      var numParen = 1;\n      var done = false;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.nextChar();\n      while (true) {\n       var charBuffered = false;\n       switch (ch | 0) {\n       case -1:\n        warn('Unterminated string');\n        done = true;\n        break;\n       case 0x28:\n        ++numParen;\n        strBuf.push('(');\n        break;\n       case 0x29:\n        if (--numParen === 0) {\n         this.nextChar();\n         done = true;\n        } else {\n         strBuf.push(')');\n        }\n        break;\n       case 0x5C:\n        ch = this.nextChar();\n        switch (ch) {\n        case -1:\n         warn('Unterminated string');\n         done = true;\n         break;\n        case 0x6E:\n         strBuf.push('\\n');\n         break;\n        case 0x72:\n         strBuf.push('\\r');\n         break;\n        case 0x74:\n         strBuf.push('\\t');\n         break;\n        case 0x62:\n         strBuf.push('\\b');\n         break;\n        case 0x66:\n         strBuf.push('\\f');\n         break;\n        case 0x5C:\n        case 0x28:\n        case 0x29:\n         strBuf.push(String.fromCharCode(ch));\n         break;\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n         var x = ch & 0x0F;\n         ch = this.nextChar();\n         charBuffered = true;\n         if (ch >= 0x30 && ch <= 0x37) {\n          x = (x << 3) + (ch & 0x0F);\n          ch = this.nextChar();\n          if (ch >= 0x30 && ch <= 0x37) {\n           charBuffered = false;\n           x = (x << 3) + (ch & 0x0F);\n          }\n         }\n         strBuf.push(String.fromCharCode(x));\n         break;\n        case 0x0D:\n         if (this.peekChar() === 0x0A) {\n          this.nextChar();\n         }\n         break;\n        case 0x0A:\n         break;\n        default:\n         strBuf.push(String.fromCharCode(ch));\n         break;\n        }\n        break;\n       default:\n        strBuf.push(String.fromCharCode(ch));\n        break;\n       }\n       if (done) {\n        break;\n       }\n       if (!charBuffered) {\n        ch = this.nextChar();\n       }\n      }\n      return strBuf.join('');\n     },\n     getName: function Lexer_getName() {\n      var ch, previousCh;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n       if (ch === 0x23) {\n        ch = this.nextChar();\n        if (specialChars[ch]) {\n         warn('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\n         strBuf.push('#');\n         break;\n        }\n        var x = toHexDigit(ch);\n        if (x !== -1) {\n         previousCh = ch;\n         ch = this.nextChar();\n         var x2 = toHexDigit(ch);\n         if (x2 === -1) {\n          warn('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\n          strBuf.push('#', String.fromCharCode(previousCh));\n          if (specialChars[ch]) {\n           break;\n          }\n          strBuf.push(String.fromCharCode(ch));\n          continue;\n         }\n         strBuf.push(String.fromCharCode(x << 4 | x2));\n        } else {\n         strBuf.push('#', String.fromCharCode(ch));\n        }\n       } else {\n        strBuf.push(String.fromCharCode(ch));\n       }\n      }\n      if (strBuf.length > 127) {\n       warn('name token is longer than allowed by the spec: ' + strBuf.length);\n      }\n      return Name.get(strBuf.join(''));\n     },\n     getHexString: function Lexer_getHexString() {\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.currentChar;\n      var isFirstHex = true;\n      var firstDigit;\n      var secondDigit;\n      while (true) {\n       if (ch < 0) {\n        warn('Unterminated hex string');\n        break;\n       } else if (ch === 0x3E) {\n        this.nextChar();\n        break;\n       } else if (specialChars[ch] === 1) {\n        ch = this.nextChar();\n        continue;\n       } else {\n        if (isFirstHex) {\n         firstDigit = toHexDigit(ch);\n         if (firstDigit === -1) {\n          warn('Ignoring invalid character \"' + ch + '\" in hex string');\n          ch = this.nextChar();\n          continue;\n         }\n        } else {\n         secondDigit = toHexDigit(ch);\n         if (secondDigit === -1) {\n          warn('Ignoring invalid character \"' + ch + '\" in hex string');\n          ch = this.nextChar();\n          continue;\n         }\n         strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n        }\n        isFirstHex = !isFirstHex;\n        ch = this.nextChar();\n       }\n      }\n      return strBuf.join('');\n     },\n     getObj: function Lexer_getObj() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n       if (ch < 0) {\n        return EOF;\n       }\n       if (comment) {\n        if (ch === 0x0A || ch === 0x0D) {\n         comment = false;\n        }\n       } else if (ch === 0x25) {\n        comment = true;\n       } else if (specialChars[ch] !== 1) {\n        break;\n       }\n       ch = this.nextChar();\n      }\n      switch (ch | 0) {\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x2B:\n      case 0x2D:\n      case 0x2E:\n       return this.getNumber();\n      case 0x28:\n       return this.getString();\n      case 0x2F:\n       return this.getName();\n      case 0x5B:\n       this.nextChar();\n       return Cmd.get('[');\n      case 0x5D:\n       this.nextChar();\n       return Cmd.get(']');\n      case 0x3C:\n       ch = this.nextChar();\n       if (ch === 0x3C) {\n        this.nextChar();\n        return Cmd.get('<<');\n       }\n       return this.getHexString();\n      case 0x3E:\n       ch = this.nextChar();\n       if (ch === 0x3E) {\n        this.nextChar();\n        return Cmd.get('>>');\n       }\n       return Cmd.get('>');\n      case 0x7B:\n       this.nextChar();\n       return Cmd.get('{');\n      case 0x7D:\n       this.nextChar();\n       return Cmd.get('}');\n      case 0x29:\n       error('Illegal character: ' + ch);\n       break;\n      }\n      var str = String.fromCharCode(ch);\n      var knownCommands = this.knownCommands;\n      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n       var possibleCommand = str + String.fromCharCode(ch);\n       if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n        break;\n       }\n       if (str.length === 128) {\n        error('Command token too long: ' + str.length);\n       }\n       str = possibleCommand;\n       knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      }\n      if (str === 'true') {\n       return true;\n      }\n      if (str === 'false') {\n       return false;\n      }\n      if (str === 'null') {\n       return null;\n      }\n      return Cmd.get(str);\n     },\n     skipToNextLine: function Lexer_skipToNextLine() {\n      var ch = this.currentChar;\n      while (ch >= 0) {\n       if (ch === 0x0D) {\n        ch = this.nextChar();\n        if (ch === 0x0A) {\n         this.nextChar();\n        }\n        break;\n       } else if (ch === 0x0A) {\n        this.nextChar();\n        break;\n       }\n       ch = this.nextChar();\n      }\n     }\n    };\n    return Lexer;\n   }();\n   var Linearization = {\n    create: function LinearizationCreate(stream) {\n     function getInt(name, allowZeroValue) {\n      var obj = linDict.get(name);\n      if (isInt(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n       return obj;\n      }\n      throw new Error('The \"' + name + '\" parameter in the linearization ' + 'dictionary is invalid.');\n     }\n     function getHints() {\n      var hints = linDict.get('H'), hintsLength, item;\n      if (isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n       for (var index = 0; index < hintsLength; index++) {\n        if (!(isInt(item = hints[index]) && item > 0)) {\n         throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\n        }\n       }\n       return hints;\n      }\n      throw new Error('Hint array in the linearization dictionary is invalid.');\n     }\n     var parser = new Parser(new Lexer(stream), false, null);\n     var obj1 = parser.getObj();\n     var obj2 = parser.getObj();\n     var obj3 = parser.getObj();\n     var linDict = parser.getObj();\n     var obj, length;\n     if (!(isInt(obj1) && isInt(obj2) && isCmd(obj3, 'obj') && isDict(linDict) && isNum(obj = linDict.get('Linearized')) && obj > 0)) {\n      return null;\n     } else if ((length = getInt('L')) !== stream.length) {\n      throw new Error('The \"L\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\n     }\n     return {\n      length: length,\n      hints: getHints(),\n      objectNumberFirst: getInt('O'),\n      endFirst: getInt('E'),\n      numPages: getInt('N'),\n      mainXRefEntriesOffset: getInt('T'),\n      pageFirst: linDict.has('P') ? getInt('P', true) : 0\n     };\n    }\n   };\n   exports.Lexer = Lexer;\n   exports.Linearization = Linearization;\n   exports.Parser = Parser;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsCoreType1Parser = {}, root.pdfjsSharedUtil, root.pdfjsCoreStream, root.pdfjsCoreEncodings);\n  }(this, function (exports, sharedUtil, coreStream, coreEncodings) {\n   var warn = sharedUtil.warn;\n   var isSpace = sharedUtil.isSpace;\n   var Stream = coreStream.Stream;\n   var getEncoding = coreEncodings.getEncoding;\n   var HINTING_ENABLED = false;\n   var Type1CharString = function Type1CharStringClosure() {\n    var COMMAND_MAP = {\n     'hstem': [1],\n     'vstem': [3],\n     'vmoveto': [4],\n     'rlineto': [5],\n     'hlineto': [6],\n     'vlineto': [7],\n     'rrcurveto': [8],\n     'callsubr': [10],\n     'flex': [\n      12,\n      35\n     ],\n     'drop': [\n      12,\n      18\n     ],\n     'endchar': [14],\n     'rmoveto': [21],\n     'hmoveto': [22],\n     'vhcurveto': [30],\n     'hvcurveto': [31]\n    };\n    function Type1CharString() {\n     this.width = 0;\n     this.lsb = 0;\n     this.flexing = false;\n     this.output = [];\n     this.stack = [];\n    }\n    Type1CharString.prototype = {\n     convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n      var count = encoded.length;\n      var error = false;\n      var wx, sbx, subrNumber;\n      for (var i = 0; i < count; i++) {\n       var value = encoded[i];\n       if (value < 32) {\n        if (value === 12) {\n         value = (value << 8) + encoded[++i];\n        }\n        switch (value) {\n        case 1:\n         if (!HINTING_ENABLED) {\n          this.stack = [];\n          break;\n         }\n         error = this.executeCommand(2, COMMAND_MAP.hstem);\n         break;\n        case 3:\n         if (!HINTING_ENABLED) {\n          this.stack = [];\n          break;\n         }\n         error = this.executeCommand(2, COMMAND_MAP.vstem);\n         break;\n        case 4:\n         if (this.flexing) {\n          if (this.stack.length < 1) {\n           error = true;\n           break;\n          }\n          var dy = this.stack.pop();\n          this.stack.push(0, dy);\n          break;\n         }\n         error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n         break;\n        case 5:\n         error = this.executeCommand(2, COMMAND_MAP.rlineto);\n         break;\n        case 6:\n         error = this.executeCommand(1, COMMAND_MAP.hlineto);\n         break;\n        case 7:\n         error = this.executeCommand(1, COMMAND_MAP.vlineto);\n         break;\n        case 8:\n         error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n         break;\n        case 9:\n         this.stack = [];\n         break;\n        case 10:\n         if (this.stack.length < 1) {\n          error = true;\n          break;\n         }\n         subrNumber = this.stack.pop();\n         error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n         break;\n        case 11:\n         return error;\n        case 13:\n         if (this.stack.length < 2) {\n          error = true;\n          break;\n         }\n         wx = this.stack.pop();\n         sbx = this.stack.pop();\n         this.lsb = sbx;\n         this.width = wx;\n         this.stack.push(wx, sbx);\n         error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n         break;\n        case 14:\n         this.output.push(COMMAND_MAP.endchar[0]);\n         break;\n        case 21:\n         if (this.flexing) {\n          break;\n         }\n         error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n         break;\n        case 22:\n         if (this.flexing) {\n          this.stack.push(0);\n          break;\n         }\n         error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n         break;\n        case 30:\n         error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n         break;\n        case 31:\n         error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n         break;\n        case (12 << 8) + 0:\n         this.stack = [];\n         break;\n        case (12 << 8) + 1:\n         if (!HINTING_ENABLED) {\n          this.stack = [];\n          break;\n         }\n         error = this.executeCommand(2, COMMAND_MAP.vstem);\n         break;\n        case (12 << 8) + 2:\n         if (!HINTING_ENABLED) {\n          this.stack = [];\n          break;\n         }\n         error = this.executeCommand(2, COMMAND_MAP.hstem);\n         break;\n        case (12 << 8) + 6:\n         if (seacAnalysisEnabled) {\n          this.seac = this.stack.splice(-4, 4);\n          error = this.executeCommand(0, COMMAND_MAP.endchar);\n         } else {\n          error = this.executeCommand(4, COMMAND_MAP.endchar);\n         }\n         break;\n        case (12 << 8) + 7:\n         if (this.stack.length < 4) {\n          error = true;\n          break;\n         }\n         var wy = this.stack.pop();\n         wx = this.stack.pop();\n         var sby = this.stack.pop();\n         sbx = this.stack.pop();\n         this.lsb = sbx;\n         this.width = wx;\n         this.stack.push(wx, sbx, sby);\n         error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n         break;\n        case (12 << 8) + 12:\n         if (this.stack.length < 2) {\n          error = true;\n          break;\n         }\n         var num2 = this.stack.pop();\n         var num1 = this.stack.pop();\n         this.stack.push(num1 / num2);\n         break;\n        case (12 << 8) + 16:\n         if (this.stack.length < 2) {\n          error = true;\n          break;\n         }\n         subrNumber = this.stack.pop();\n         var numArgs = this.stack.pop();\n         if (subrNumber === 0 && numArgs === 3) {\n          var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n          this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n          error = this.executeCommand(13, COMMAND_MAP.flex, true);\n          this.flexing = false;\n          this.stack.push(flexArgs[15], flexArgs[16]);\n         } else if (subrNumber === 1 && numArgs === 0) {\n          this.flexing = true;\n         }\n         break;\n        case (12 << 8) + 17:\n         break;\n        case (12 << 8) + 33:\n         this.stack = [];\n         break;\n        default:\n         warn('Unknown type 1 charstring command of \"' + value + '\"');\n         break;\n        }\n        if (error) {\n         break;\n        }\n        continue;\n       } else if (value <= 246) {\n        value = value - 139;\n       } else if (value <= 250) {\n        value = (value - 247) * 256 + encoded[++i] + 108;\n       } else if (value <= 254) {\n        value = -((value - 251) * 256) - encoded[++i] - 108;\n       } else {\n        value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n       }\n       this.stack.push(value);\n      }\n      return error;\n     },\n     executeCommand: function (howManyArgs, command, keepStack) {\n      var stackLength = this.stack.length;\n      if (howManyArgs > stackLength) {\n       return true;\n      }\n      var start = stackLength - howManyArgs;\n      for (var i = start; i < stackLength; i++) {\n       var value = this.stack[i];\n       if (value === (value | 0)) {\n        this.output.push(28, value >> 8 & 0xff, value & 0xff);\n       } else {\n        value = 65536 * value | 0;\n        this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\n       }\n      }\n      this.output.push.apply(this.output, command);\n      if (keepStack) {\n       this.stack.splice(start, howManyArgs);\n      } else {\n       this.stack.length = 0;\n      }\n      return false;\n     }\n    };\n    return Type1CharString;\n   }();\n   var Type1Parser = function Type1ParserClosure() {\n    var EEXEC_ENCRYPT_KEY = 55665;\n    var CHAR_STRS_ENCRYPT_KEY = 4330;\n    function isHexDigit(code) {\n     return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n    }\n    function decrypt(data, key, discardNumber) {\n     if (discardNumber >= data.length) {\n      return new Uint8Array(0);\n     }\n     var r = key | 0, c1 = 52845, c2 = 22719, i, j;\n     for (i = 0; i < discardNumber; i++) {\n      r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n     }\n     var count = data.length - discardNumber;\n     var decrypted = new Uint8Array(count);\n     for (i = discardNumber, j = 0; j < count; i++, j++) {\n      var value = data[i];\n      decrypted[j] = value ^ r >> 8;\n      r = (value + r) * c1 + c2 & (1 << 16) - 1;\n     }\n     return decrypted;\n    }\n    function decryptAscii(data, key, discardNumber) {\n     var r = key | 0, c1 = 52845, c2 = 22719;\n     var count = data.length, maybeLength = count >>> 1;\n     var decrypted = new Uint8Array(maybeLength);\n     var i, j;\n     for (i = 0, j = 0; i < count; i++) {\n      var digit1 = data[i];\n      if (!isHexDigit(digit1)) {\n       continue;\n      }\n      i++;\n      var digit2;\n      while (i < count && !isHexDigit(digit2 = data[i])) {\n       i++;\n      }\n      if (i < count) {\n       var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n       decrypted[j++] = value ^ r >> 8;\n       r = (value + r) * c1 + c2 & (1 << 16) - 1;\n      }\n     }\n     return Array.prototype.slice.call(decrypted, discardNumber, j);\n    }\n    function isSpecial(c) {\n     return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\n    }\n    function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n     if (encrypted) {\n      var data = stream.getBytes();\n      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\n      stream = new Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n     }\n     this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n     this.stream = stream;\n     this.nextChar();\n    }\n    Type1Parser.prototype = {\n     readNumberArray: function Type1Parser_readNumberArray() {\n      this.getToken();\n      var array = [];\n      while (true) {\n       var token = this.getToken();\n       if (token === null || token === ']' || token === '}') {\n        break;\n       }\n       array.push(parseFloat(token || 0));\n      }\n      return array;\n     },\n     readNumber: function Type1Parser_readNumber() {\n      var token = this.getToken();\n      return parseFloat(token || 0);\n     },\n     readInt: function Type1Parser_readInt() {\n      var token = this.getToken();\n      return parseInt(token || 0, 10) | 0;\n     },\n     readBoolean: function Type1Parser_readBoolean() {\n      var token = this.getToken();\n      return token === 'true' ? 1 : 0;\n     },\n     nextChar: function Type1_nextChar() {\n      return this.currentChar = this.stream.getByte();\n     },\n     getToken: function Type1Parser_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n       if (ch === -1) {\n        return null;\n       }\n       if (comment) {\n        if (ch === 0x0A || ch === 0x0D) {\n         comment = false;\n        }\n       } else if (ch === 0x25) {\n        comment = true;\n       } else if (!isSpace(ch)) {\n        break;\n       }\n       ch = this.nextChar();\n      }\n      if (isSpecial(ch)) {\n       this.nextChar();\n       return String.fromCharCode(ch);\n      }\n      var token = '';\n      do {\n       token += String.fromCharCode(ch);\n       ch = this.nextChar();\n      } while (ch >= 0 && !isSpace(ch) && !isSpecial(ch));\n      return token;\n     },\n     extractFontProgram: function Type1Parser_extractFontProgram() {\n      var stream = this.stream;\n      var subrs = [], charstrings = [];\n      var privateData = Object.create(null);\n      privateData['lenIV'] = 4;\n      var program = {\n       subrs: [],\n       charstrings: [],\n       properties: { 'privateData': privateData }\n      };\n      var token, length, data, lenIV, encoded;\n      while ((token = this.getToken()) !== null) {\n       if (token !== '/') {\n        continue;\n       }\n       token = this.getToken();\n       switch (token) {\n       case 'CharStrings':\n        this.getToken();\n        this.getToken();\n        this.getToken();\n        this.getToken();\n        while (true) {\n         token = this.getToken();\n         if (token === null || token === 'end') {\n          break;\n         }\n         if (token !== '/') {\n          continue;\n         }\n         var glyph = this.getToken();\n         length = this.readInt();\n         this.getToken();\n         data = stream.makeSubStream(stream.pos, length);\n         lenIV = program.properties.privateData['lenIV'];\n         encoded = decrypt(data.getBytes(), CHAR_STRS_ENCRYPT_KEY, lenIV);\n         stream.skip(length);\n         this.nextChar();\n         token = this.getToken();\n         if (token === 'noaccess') {\n          this.getToken();\n         }\n         charstrings.push({\n          glyph: glyph,\n          encoded: encoded\n         });\n        }\n        break;\n       case 'Subrs':\n        var num = this.readInt();\n        this.getToken();\n        while ((token = this.getToken()) === 'dup') {\n         var index = this.readInt();\n         length = this.readInt();\n         this.getToken();\n         data = stream.makeSubStream(stream.pos, length);\n         lenIV = program.properties.privateData['lenIV'];\n         encoded = decrypt(data.getBytes(), CHAR_STRS_ENCRYPT_KEY, lenIV);\n         stream.skip(length);\n         this.nextChar();\n         token = this.getToken();\n         if (token === 'noaccess') {\n          this.getToken();\n         }\n         subrs[index] = encoded;\n        }\n        break;\n       case 'BlueValues':\n       case 'OtherBlues':\n       case 'FamilyBlues':\n       case 'FamilyOtherBlues':\n        var blueArray = this.readNumberArray();\n        if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n         program.properties.privateData[token] = blueArray;\n        }\n        break;\n       case 'StemSnapH':\n       case 'StemSnapV':\n        program.properties.privateData[token] = this.readNumberArray();\n        break;\n       case 'StdHW':\n       case 'StdVW':\n        program.properties.privateData[token] = this.readNumberArray()[0];\n        break;\n       case 'BlueShift':\n       case 'lenIV':\n       case 'BlueFuzz':\n       case 'BlueScale':\n       case 'LanguageGroup':\n       case 'ExpansionFactor':\n        program.properties.privateData[token] = this.readNumber();\n        break;\n       case 'ForceBold':\n        program.properties.privateData[token] = this.readBoolean();\n        break;\n       }\n      }\n      for (var i = 0; i < charstrings.length; i++) {\n       glyph = charstrings[i].glyph;\n       encoded = charstrings[i].encoded;\n       var charString = new Type1CharString();\n       var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n       var output = charString.output;\n       if (error) {\n        output = [14];\n       }\n       program.charstrings.push({\n        glyphName: glyph,\n        charstring: output,\n        width: charString.width,\n        lsb: charString.lsb,\n        seac: charString.seac\n       });\n      }\n      return program;\n     },\n     extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n      var token;\n      while ((token = this.getToken()) !== null) {\n       if (token !== '/') {\n        continue;\n       }\n       token = this.getToken();\n       switch (token) {\n       case 'FontMatrix':\n        var matrix = this.readNumberArray();\n        properties.fontMatrix = matrix;\n        break;\n       case 'Encoding':\n        var encodingArg = this.getToken();\n        var encoding;\n        if (!/^\\d+$/.test(encodingArg)) {\n         encoding = getEncoding(encodingArg);\n        } else {\n         encoding = [];\n         var size = parseInt(encodingArg, 10) | 0;\n         this.getToken();\n         for (var j = 0; j < size; j++) {\n          token = this.getToken();\n          while (token !== 'dup' && token !== 'def') {\n           token = this.getToken();\n           if (token === null) {\n            return;\n           }\n          }\n          if (token === 'def') {\n           break;\n          }\n          var index = this.readInt();\n          this.getToken();\n          var glyph = this.getToken();\n          encoding[index] = glyph;\n          this.getToken();\n         }\n        }\n        properties.builtInEncoding = encoding;\n        break;\n       case 'FontBBox':\n        var fontBBox = this.readNumberArray();\n        properties.ascent = fontBBox[3];\n        properties.descent = fontBBox[1];\n        properties.ascentScaled = true;\n        break;\n       }\n      }\n     }\n    };\n    return Type1Parser;\n   }();\n   exports.Type1Parser = Type1Parser;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsCoreCMap = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreStream, root.pdfjsCoreParser);\n  }(this, function (exports, sharedUtil, corePrimitives, coreStream, coreParser) {\n   var Util = sharedUtil.Util;\n   var assert = sharedUtil.assert;\n   var warn = sharedUtil.warn;\n   var error = sharedUtil.error;\n   var isInt = sharedUtil.isInt;\n   var isString = sharedUtil.isString;\n   var MissingDataException = sharedUtil.MissingDataException;\n   var isEOF = corePrimitives.isEOF;\n   var isName = corePrimitives.isName;\n   var isCmd = corePrimitives.isCmd;\n   var isStream = corePrimitives.isStream;\n   var StringStream = coreStream.StringStream;\n   var Lexer = coreParser.Lexer;\n   var BUILT_IN_CMAPS = [\n    'Adobe-GB1-UCS2',\n    'Adobe-CNS1-UCS2',\n    'Adobe-Japan1-UCS2',\n    'Adobe-Korea1-UCS2',\n    '78-EUC-H',\n    '78-EUC-V',\n    '78-H',\n    '78-RKSJ-H',\n    '78-RKSJ-V',\n    '78-V',\n    '78ms-RKSJ-H',\n    '78ms-RKSJ-V',\n    '83pv-RKSJ-H',\n    '90ms-RKSJ-H',\n    '90ms-RKSJ-V',\n    '90msp-RKSJ-H',\n    '90msp-RKSJ-V',\n    '90pv-RKSJ-H',\n    '90pv-RKSJ-V',\n    'Add-H',\n    'Add-RKSJ-H',\n    'Add-RKSJ-V',\n    'Add-V',\n    'Adobe-CNS1-0',\n    'Adobe-CNS1-1',\n    'Adobe-CNS1-2',\n    'Adobe-CNS1-3',\n    'Adobe-CNS1-4',\n    'Adobe-CNS1-5',\n    'Adobe-CNS1-6',\n    'Adobe-GB1-0',\n    'Adobe-GB1-1',\n    'Adobe-GB1-2',\n    'Adobe-GB1-3',\n    'Adobe-GB1-4',\n    'Adobe-GB1-5',\n    'Adobe-Japan1-0',\n    'Adobe-Japan1-1',\n    'Adobe-Japan1-2',\n    'Adobe-Japan1-3',\n    'Adobe-Japan1-4',\n    'Adobe-Japan1-5',\n    'Adobe-Japan1-6',\n    'Adobe-Korea1-0',\n    'Adobe-Korea1-1',\n    'Adobe-Korea1-2',\n    'B5-H',\n    'B5-V',\n    'B5pc-H',\n    'B5pc-V',\n    'CNS-EUC-H',\n    'CNS-EUC-V',\n    'CNS1-H',\n    'CNS1-V',\n    'CNS2-H',\n    'CNS2-V',\n    'ETHK-B5-H',\n    'ETHK-B5-V',\n    'ETen-B5-H',\n    'ETen-B5-V',\n    'ETenms-B5-H',\n    'ETenms-B5-V',\n    'EUC-H',\n    'EUC-V',\n    'Ext-H',\n    'Ext-RKSJ-H',\n    'Ext-RKSJ-V',\n    'Ext-V',\n    'GB-EUC-H',\n    'GB-EUC-V',\n    'GB-H',\n    'GB-V',\n    'GBK-EUC-H',\n    'GBK-EUC-V',\n    'GBK2K-H',\n    'GBK2K-V',\n    'GBKp-EUC-H',\n    'GBKp-EUC-V',\n    'GBT-EUC-H',\n    'GBT-EUC-V',\n    'GBT-H',\n    'GBT-V',\n    'GBTpc-EUC-H',\n    'GBTpc-EUC-V',\n    'GBpc-EUC-H',\n    'GBpc-EUC-V',\n    'H',\n    'HKdla-B5-H',\n    'HKdla-B5-V',\n    'HKdlb-B5-H',\n    'HKdlb-B5-V',\n    'HKgccs-B5-H',\n    'HKgccs-B5-V',\n    'HKm314-B5-H',\n    'HKm314-B5-V',\n    'HKm471-B5-H',\n    'HKm471-B5-V',\n    'HKscs-B5-H',\n    'HKscs-B5-V',\n    'Hankaku',\n    'Hiragana',\n    'KSC-EUC-H',\n    'KSC-EUC-V',\n    'KSC-H',\n    'KSC-Johab-H',\n    'KSC-Johab-V',\n    'KSC-V',\n    'KSCms-UHC-H',\n    'KSCms-UHC-HW-H',\n    'KSCms-UHC-HW-V',\n    'KSCms-UHC-V',\n    'KSCpc-EUC-H',\n    'KSCpc-EUC-V',\n    'Katakana',\n    'NWP-H',\n    'NWP-V',\n    'RKSJ-H',\n    'RKSJ-V',\n    'Roman',\n    'UniCNS-UCS2-H',\n    'UniCNS-UCS2-V',\n    'UniCNS-UTF16-H',\n    'UniCNS-UTF16-V',\n    'UniCNS-UTF32-H',\n    'UniCNS-UTF32-V',\n    'UniCNS-UTF8-H',\n    'UniCNS-UTF8-V',\n    'UniGB-UCS2-H',\n    'UniGB-UCS2-V',\n    'UniGB-UTF16-H',\n    'UniGB-UTF16-V',\n    'UniGB-UTF32-H',\n    'UniGB-UTF32-V',\n    'UniGB-UTF8-H',\n    'UniGB-UTF8-V',\n    'UniJIS-UCS2-H',\n    'UniJIS-UCS2-HW-H',\n    'UniJIS-UCS2-HW-V',\n    'UniJIS-UCS2-V',\n    'UniJIS-UTF16-H',\n    'UniJIS-UTF16-V',\n    'UniJIS-UTF32-H',\n    'UniJIS-UTF32-V',\n    'UniJIS-UTF8-H',\n    'UniJIS-UTF8-V',\n    'UniJIS2004-UTF16-H',\n    'UniJIS2004-UTF16-V',\n    'UniJIS2004-UTF32-H',\n    'UniJIS2004-UTF32-V',\n    'UniJIS2004-UTF8-H',\n    'UniJIS2004-UTF8-V',\n    'UniJISPro-UCS2-HW-V',\n    'UniJISPro-UCS2-V',\n    'UniJISPro-UTF8-V',\n    'UniJISX0213-UTF32-H',\n    'UniJISX0213-UTF32-V',\n    'UniJISX02132004-UTF32-H',\n    'UniJISX02132004-UTF32-V',\n    'UniKS-UCS2-H',\n    'UniKS-UCS2-V',\n    'UniKS-UTF16-H',\n    'UniKS-UTF16-V',\n    'UniKS-UTF32-H',\n    'UniKS-UTF32-V',\n    'UniKS-UTF8-H',\n    'UniKS-UTF8-V',\n    'V',\n    'WP-Symbol'\n   ];\n   var CMap = function CMapClosure() {\n    function CMap(builtInCMap) {\n     this.codespaceRanges = [\n      [],\n      [],\n      [],\n      []\n     ];\n     this.numCodespaceRanges = 0;\n     this._map = [];\n     this.name = '';\n     this.vertical = false;\n     this.useCMap = null;\n     this.builtInCMap = builtInCMap;\n    }\n    CMap.prototype = {\n     addCodespaceRange: function (n, low, high) {\n      this.codespaceRanges[n - 1].push(low, high);\n      this.numCodespaceRanges++;\n     },\n     mapCidRange: function (low, high, dstLow) {\n      while (low <= high) {\n       this._map[low++] = dstLow++;\n      }\n     },\n     mapBfRange: function (low, high, dstLow) {\n      var lastByte = dstLow.length - 1;\n      while (low <= high) {\n       this._map[low++] = dstLow;\n       dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n      }\n     },\n     mapBfRangeToArray: function (low, high, array) {\n      var i = 0, ii = array.length;\n      while (low <= high && i < ii) {\n       this._map[low] = array[i++];\n       ++low;\n      }\n     },\n     mapOne: function (src, dst) {\n      this._map[src] = dst;\n     },\n     lookup: function (code) {\n      return this._map[code];\n     },\n     contains: function (code) {\n      return this._map[code] !== undefined;\n     },\n     forEach: function (callback) {\n      var map = this._map;\n      var length = map.length;\n      var i;\n      if (length <= 0x10000) {\n       for (i = 0; i < length; i++) {\n        if (map[i] !== undefined) {\n         callback(i, map[i]);\n        }\n       }\n      } else {\n       for (i in this._map) {\n        callback(i, map[i]);\n       }\n      }\n     },\n     charCodeOf: function (value) {\n      return this._map.indexOf(value);\n     },\n     getMap: function () {\n      return this._map;\n     },\n     readCharCode: function (str, offset, out) {\n      var c = 0;\n      var codespaceRanges = this.codespaceRanges;\n      var codespaceRangesLen = this.codespaceRanges.length;\n      for (var n = 0; n < codespaceRangesLen; n++) {\n       c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n       var codespaceRange = codespaceRanges[n];\n       for (var k = 0, kk = codespaceRange.length; k < kk;) {\n        var low = codespaceRange[k++];\n        var high = codespaceRange[k++];\n        if (c >= low && c <= high) {\n         out.charcode = c;\n         out.length = n + 1;\n         return;\n        }\n       }\n      }\n      out.charcode = 0;\n      out.length = 1;\n     },\n     get length() {\n      return this._map.length;\n     },\n     get isIdentityCMap() {\n      if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\n       return false;\n      }\n      if (this._map.length !== 0x10000) {\n       return false;\n      }\n      for (var i = 0; i < 0x10000; i++) {\n       if (this._map[i] !== i) {\n        return false;\n       }\n      }\n      return true;\n     }\n    };\n    return CMap;\n   }();\n   var IdentityCMap = function IdentityCMapClosure() {\n    function IdentityCMap(vertical, n) {\n     CMap.call(this);\n     this.vertical = vertical;\n     this.addCodespaceRange(n, 0, 0xffff);\n    }\n    Util.inherit(IdentityCMap, CMap, {});\n    IdentityCMap.prototype = {\n     addCodespaceRange: CMap.prototype.addCodespaceRange,\n     mapCidRange: function (low, high, dstLow) {\n      error('should not call mapCidRange');\n     },\n     mapBfRange: function (low, high, dstLow) {\n      error('should not call mapBfRange');\n     },\n     mapBfRangeToArray: function (low, high, array) {\n      error('should not call mapBfRangeToArray');\n     },\n     mapOne: function (src, dst) {\n      error('should not call mapCidOne');\n     },\n     lookup: function (code) {\n      return isInt(code) && code <= 0xffff ? code : undefined;\n     },\n     contains: function (code) {\n      return isInt(code) && code <= 0xffff;\n     },\n     forEach: function (callback) {\n      for (var i = 0; i <= 0xffff; i++) {\n       callback(i, i);\n      }\n     },\n     charCodeOf: function (value) {\n      return isInt(value) && value <= 0xffff ? value : -1;\n     },\n     getMap: function () {\n      var map = new Array(0x10000);\n      for (var i = 0; i <= 0xffff; i++) {\n       map[i] = i;\n      }\n      return map;\n     },\n     readCharCode: CMap.prototype.readCharCode,\n     get length() {\n      return 0x10000;\n     },\n     get isIdentityCMap() {\n      error('should not access .isIdentityCMap');\n     }\n    };\n    return IdentityCMap;\n   }();\n   var BinaryCMapReader = function BinaryCMapReaderClosure() {\n    function fetchBinaryData(url) {\n     return new Promise(function (resolve, reject) {\n      var request = new XMLHttpRequest();\n      request.open('GET', url, true);\n      request.responseType = 'arraybuffer';\n      request.onreadystatechange = function () {\n       if (request.readyState === XMLHttpRequest.DONE) {\n        if (!request.response || request.status !== 200 && request.status !== 0) {\n         reject(new Error('Unable to get binary cMap at: ' + url));\n        } else {\n         resolve(new Uint8Array(request.response));\n        }\n       }\n      };\n      request.send(null);\n     });\n    }\n    function hexToInt(a, size) {\n     var n = 0;\n     for (var i = 0; i <= size; i++) {\n      n = n << 8 | a[i];\n     }\n     return n >>> 0;\n    }\n    function hexToStr(a, size) {\n     if (size === 1) {\n      return String.fromCharCode(a[0], a[1]);\n     }\n     if (size === 3) {\n      return String.fromCharCode(a[0], a[1], a[2], a[3]);\n     }\n     return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n    }\n    function addHex(a, b, size) {\n     var c = 0;\n     for (var i = size; i >= 0; i--) {\n      c += a[i] + b[i];\n      a[i] = c & 255;\n      c >>= 8;\n     }\n    }\n    function incHex(a, size) {\n     var c = 1;\n     for (var i = size; i >= 0 && c > 0; i--) {\n      c += a[i];\n      a[i] = c & 255;\n      c >>= 8;\n     }\n    }\n    var MAX_NUM_SIZE = 16;\n    var MAX_ENCODED_NUM_SIZE = 19;\n    function BinaryCMapStream(data) {\n     this.buffer = data;\n     this.pos = 0;\n     this.end = data.length;\n     this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n    }\n    BinaryCMapStream.prototype = {\n     readByte: function () {\n      if (this.pos >= this.end) {\n       return -1;\n      }\n      return this.buffer[this.pos++];\n     },\n     readNumber: function () {\n      var n = 0;\n      var last;\n      do {\n       var b = this.readByte();\n       if (b < 0) {\n        error('unexpected EOF in bcmap');\n       }\n       last = !(b & 0x80);\n       n = n << 7 | b & 0x7F;\n      } while (!last);\n      return n;\n     },\n     readSigned: function () {\n      var n = this.readNumber();\n      return n & 1 ? ~(n >>> 1) : n >>> 1;\n     },\n     readHex: function (num, size) {\n      num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n      this.pos += size + 1;\n     },\n     readHexNumber: function (num, size) {\n      var last;\n      var stack = this.tmpBuf, sp = 0;\n      do {\n       var b = this.readByte();\n       if (b < 0) {\n        error('unexpected EOF in bcmap');\n       }\n       last = !(b & 0x80);\n       stack[sp++] = b & 0x7F;\n      } while (!last);\n      var i = size, buffer = 0, bufferSize = 0;\n      while (i >= 0) {\n       while (bufferSize < 8 && stack.length > 0) {\n        buffer = stack[--sp] << bufferSize | buffer;\n        bufferSize += 7;\n       }\n       num[i] = buffer & 255;\n       i--;\n       buffer >>= 8;\n       bufferSize -= 8;\n      }\n     },\n     readHexSigned: function (num, size) {\n      this.readHexNumber(num, size);\n      var sign = num[size] & 1 ? 255 : 0;\n      var c = 0;\n      for (var i = 0; i <= size; i++) {\n       c = (c & 1) << 8 | num[i];\n       num[i] = c >> 1 ^ sign;\n      }\n     },\n     readString: function () {\n      var len = this.readNumber();\n      var s = '';\n      for (var i = 0; i < len; i++) {\n       s += String.fromCharCode(this.readNumber());\n      }\n      return s;\n     }\n    };\n    function processBinaryCMap(url, cMap, extend) {\n     return fetchBinaryData(url).then(function (data) {\n      var stream = new BinaryCMapStream(data);\n      var header = stream.readByte();\n      cMap.vertical = !!(header & 1);\n      var useCMap = null;\n      var start = new Uint8Array(MAX_NUM_SIZE);\n      var end = new Uint8Array(MAX_NUM_SIZE);\n      var char = new Uint8Array(MAX_NUM_SIZE);\n      var charCode = new Uint8Array(MAX_NUM_SIZE);\n      var tmp = new Uint8Array(MAX_NUM_SIZE);\n      var code;\n      var b;\n      while ((b = stream.readByte()) >= 0) {\n       var type = b >> 5;\n       if (type === 7) {\n        switch (b & 0x1F) {\n        case 0:\n         stream.readString();\n         break;\n        case 1:\n         useCMap = stream.readString();\n         break;\n        }\n        continue;\n       }\n       var sequence = !!(b & 0x10);\n       var dataSize = b & 15;\n       assert(dataSize + 1 <= MAX_NUM_SIZE);\n       var ucs2DataSize = 1;\n       var subitemsCount = stream.readNumber();\n       var i;\n       switch (type) {\n       case 0:\n        stream.readHex(start, dataSize);\n        stream.readHexNumber(end, dataSize);\n        addHex(end, start, dataSize);\n        cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n        for (i = 1; i < subitemsCount; i++) {\n         incHex(end, dataSize);\n         stream.readHexNumber(start, dataSize);\n         addHex(start, end, dataSize);\n         stream.readHexNumber(end, dataSize);\n         addHex(end, start, dataSize);\n         cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n        }\n        break;\n       case 1:\n        stream.readHex(start, dataSize);\n        stream.readHexNumber(end, dataSize);\n        addHex(end, start, dataSize);\n        code = stream.readNumber();\n        for (i = 1; i < subitemsCount; i++) {\n         incHex(end, dataSize);\n         stream.readHexNumber(start, dataSize);\n         addHex(start, end, dataSize);\n         stream.readHexNumber(end, dataSize);\n         addHex(end, start, dataSize);\n         code = stream.readNumber();\n        }\n        break;\n       case 2:\n        stream.readHex(char, dataSize);\n        code = stream.readNumber();\n        cMap.mapOne(hexToInt(char, dataSize), code);\n        for (i = 1; i < subitemsCount; i++) {\n         incHex(char, dataSize);\n         if (!sequence) {\n          stream.readHexNumber(tmp, dataSize);\n          addHex(char, tmp, dataSize);\n         }\n         code = stream.readSigned() + (code + 1);\n         cMap.mapOne(hexToInt(char, dataSize), code);\n        }\n        break;\n       case 3:\n        stream.readHex(start, dataSize);\n        stream.readHexNumber(end, dataSize);\n        addHex(end, start, dataSize);\n        code = stream.readNumber();\n        cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n        for (i = 1; i < subitemsCount; i++) {\n         incHex(end, dataSize);\n         if (!sequence) {\n          stream.readHexNumber(start, dataSize);\n          addHex(start, end, dataSize);\n         } else {\n          start.set(end);\n         }\n         stream.readHexNumber(end, dataSize);\n         addHex(end, start, dataSize);\n         code = stream.readNumber();\n         cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n        }\n        break;\n       case 4:\n        stream.readHex(char, ucs2DataSize);\n        stream.readHex(charCode, dataSize);\n        cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n        for (i = 1; i < subitemsCount; i++) {\n         incHex(char, ucs2DataSize);\n         if (!sequence) {\n          stream.readHexNumber(tmp, ucs2DataSize);\n          addHex(char, tmp, ucs2DataSize);\n         }\n         incHex(charCode, dataSize);\n         stream.readHexSigned(tmp, dataSize);\n         addHex(charCode, tmp, dataSize);\n         cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n        }\n        break;\n       case 5:\n        stream.readHex(start, ucs2DataSize);\n        stream.readHexNumber(end, ucs2DataSize);\n        addHex(end, start, ucs2DataSize);\n        stream.readHex(charCode, dataSize);\n        cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n        for (i = 1; i < subitemsCount; i++) {\n         incHex(end, ucs2DataSize);\n         if (!sequence) {\n          stream.readHexNumber(start, ucs2DataSize);\n          addHex(start, end, ucs2DataSize);\n         } else {\n          start.set(end);\n         }\n         stream.readHexNumber(end, ucs2DataSize);\n         addHex(end, start, ucs2DataSize);\n         stream.readHex(charCode, dataSize);\n         cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n        }\n        break;\n       default:\n        error('Unknown type: ' + type);\n        break;\n       }\n      }\n      if (useCMap) {\n       return extend(useCMap);\n      }\n      return cMap;\n     });\n    }\n    function BinaryCMapReader() {\n    }\n    BinaryCMapReader.prototype = { read: processBinaryCMap };\n    return BinaryCMapReader;\n   }();\n   var CMapFactory = function CMapFactoryClosure() {\n    function strToInt(str) {\n     var a = 0;\n     for (var i = 0; i < str.length; i++) {\n      a = a << 8 | str.charCodeAt(i);\n     }\n     return a >>> 0;\n    }\n    function expectString(obj) {\n     if (!isString(obj)) {\n      error('Malformed CMap: expected string.');\n     }\n    }\n    function expectInt(obj) {\n     if (!isInt(obj)) {\n      error('Malformed CMap: expected int.');\n     }\n    }\n    function parseBfChar(cMap, lexer) {\n     while (true) {\n      var obj = lexer.getObj();\n      if (isEOF(obj)) {\n       break;\n      }\n      if (isCmd(obj, 'endbfchar')) {\n       return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n     }\n    }\n    function parseBfRange(cMap, lexer) {\n     while (true) {\n      var obj = lexer.getObj();\n      if (isEOF(obj)) {\n       break;\n      }\n      if (isCmd(obj, 'endbfrange')) {\n       return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      if (isInt(obj) || isString(obj)) {\n       var dstLow = isInt(obj) ? String.fromCharCode(obj) : obj;\n       cMap.mapBfRange(low, high, dstLow);\n      } else if (isCmd(obj, '[')) {\n       obj = lexer.getObj();\n       var array = [];\n       while (!isCmd(obj, ']') && !isEOF(obj)) {\n        array.push(obj);\n        obj = lexer.getObj();\n       }\n       cMap.mapBfRangeToArray(low, high, array);\n      } else {\n       break;\n      }\n     }\n     error('Invalid bf range.');\n    }\n    function parseCidChar(cMap, lexer) {\n     while (true) {\n      var obj = lexer.getObj();\n      if (isEOF(obj)) {\n       break;\n      }\n      if (isCmd(obj, 'endcidchar')) {\n       return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n     }\n    }\n    function parseCidRange(cMap, lexer) {\n     while (true) {\n      var obj = lexer.getObj();\n      if (isEOF(obj)) {\n       break;\n      }\n      if (isCmd(obj, 'endcidrange')) {\n       return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dstLow = obj;\n      cMap.mapCidRange(low, high, dstLow);\n     }\n    }\n    function parseCodespaceRange(cMap, lexer) {\n     while (true) {\n      var obj = lexer.getObj();\n      if (isEOF(obj)) {\n       break;\n      }\n      if (isCmd(obj, 'endcodespacerange')) {\n       return;\n      }\n      if (!isString(obj)) {\n       break;\n      }\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      if (!isString(obj)) {\n       break;\n      }\n      var high = strToInt(obj);\n      cMap.addCodespaceRange(obj.length, low, high);\n     }\n     error('Invalid codespace range.');\n    }\n    function parseWMode(cMap, lexer) {\n     var obj = lexer.getObj();\n     if (isInt(obj)) {\n      cMap.vertical = !!obj;\n     }\n    }\n    function parseCMapName(cMap, lexer) {\n     var obj = lexer.getObj();\n     if (isName(obj) && isString(obj.name)) {\n      cMap.name = obj.name;\n     }\n    }\n    function parseCMap(cMap, lexer, builtInCMapParams, useCMap) {\n     var previous;\n     var embededUseCMap;\n     objLoop:\n      while (true) {\n       try {\n        var obj = lexer.getObj();\n        if (isEOF(obj)) {\n         break;\n        } else if (isName(obj)) {\n         if (obj.name === 'WMode') {\n          parseWMode(cMap, lexer);\n         } else if (obj.name === 'CMapName') {\n          parseCMapName(cMap, lexer);\n         }\n         previous = obj;\n        } else if (isCmd(obj)) {\n         switch (obj.cmd) {\n         case 'endcmap':\n          break objLoop;\n         case 'usecmap':\n          if (isName(previous)) {\n           embededUseCMap = previous.name;\n          }\n          break;\n         case 'begincodespacerange':\n          parseCodespaceRange(cMap, lexer);\n          break;\n         case 'beginbfchar':\n          parseBfChar(cMap, lexer);\n          break;\n         case 'begincidchar':\n          parseCidChar(cMap, lexer);\n          break;\n         case 'beginbfrange':\n          parseBfRange(cMap, lexer);\n          break;\n         case 'begincidrange':\n          parseCidRange(cMap, lexer);\n          break;\n         }\n        }\n       } catch (ex) {\n        if (ex instanceof MissingDataException) {\n         throw ex;\n        }\n        warn('Invalid cMap data: ' + ex);\n        continue;\n       }\n      }\n     if (!useCMap && embededUseCMap) {\n      useCMap = embededUseCMap;\n     }\n     if (useCMap) {\n      return extendCMap(cMap, builtInCMapParams, useCMap);\n     }\n     return Promise.resolve(cMap);\n    }\n    function extendCMap(cMap, builtInCMapParams, useCMap) {\n     return createBuiltInCMap(useCMap, builtInCMapParams).then(function (newCMap) {\n      cMap.useCMap = newCMap;\n      if (cMap.numCodespaceRanges === 0) {\n       var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n       for (var i = 0; i < useCodespaceRanges.length; i++) {\n        cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n       }\n       cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n      }\n      cMap.useCMap.forEach(function (key, value) {\n       if (!cMap.contains(key)) {\n        cMap.mapOne(key, cMap.useCMap.lookup(key));\n       }\n      });\n      return cMap;\n     });\n    }\n    function parseBinaryCMap(name, builtInCMapParams) {\n     var url = builtInCMapParams.url + name + '.bcmap';\n     var cMap = new CMap(true);\n     return new BinaryCMapReader().read(url, cMap, function (useCMap) {\n      return extendCMap(cMap, builtInCMapParams, useCMap);\n     });\n    }\n    function createBuiltInCMap(name, builtInCMapParams) {\n     if (name === 'Identity-H') {\n      return Promise.resolve(new IdentityCMap(false, 2));\n     } else if (name === 'Identity-V') {\n      return Promise.resolve(new IdentityCMap(true, 2));\n     }\n     if (BUILT_IN_CMAPS.indexOf(name) === -1) {\n      return Promise.reject(new Error('Unknown cMap name: ' + name));\n     }\n     assert(builtInCMapParams, 'built-in cMap parameters are not provided');\n     if (builtInCMapParams.packed) {\n      return parseBinaryCMap(name, builtInCMapParams);\n     }\n     return new Promise(function (resolve, reject) {\n      var url = builtInCMapParams.url + name;\n      var request = new XMLHttpRequest();\n      request.onreadystatechange = function () {\n       if (request.readyState === XMLHttpRequest.DONE) {\n        if (request.status === 200 || request.status === 0) {\n         var cMap = new CMap(true);\n         var lexer = new Lexer(new StringStream(request.responseText));\n         parseCMap(cMap, lexer, builtInCMapParams, null).then(function (parsedCMap) {\n          resolve(parsedCMap);\n         });\n        } else {\n         reject(new Error('Unable to get cMap at: ' + url));\n        }\n       }\n      };\n      request.open('GET', url, true);\n      request.send(null);\n     });\n    }\n    return {\n     create: function (encoding, builtInCMapParams, useCMap) {\n      if (isName(encoding)) {\n       return createBuiltInCMap(encoding.name, builtInCMapParams);\n      } else if (isStream(encoding)) {\n       var cMap = new CMap();\n       var lexer = new Lexer(encoding);\n       return parseCMap(cMap, lexer, builtInCMapParams, useCMap).then(function (parsedCMap) {\n        if (parsedCMap.isIdentityCMap) {\n         return createBuiltInCMap(parsedCMap.name, builtInCMapParams);\n        }\n        return parsedCMap;\n       });\n      }\n      return Promise.reject(new Error('Encoding required.'));\n     }\n    };\n   }();\n   exports.CMap = CMap;\n   exports.CMapFactory = CMapFactory;\n   exports.IdentityCMap = IdentityCMap;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsCoreColorSpace = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreFunction);\n  }(this, function (exports, sharedUtil, corePrimitives, coreFunction) {\n   var error = sharedUtil.error;\n   var info = sharedUtil.info;\n   var isArray = sharedUtil.isArray;\n   var isString = sharedUtil.isString;\n   var shadow = sharedUtil.shadow;\n   var warn = sharedUtil.warn;\n   var isDict = corePrimitives.isDict;\n   var isName = corePrimitives.isName;\n   var isStream = corePrimitives.isStream;\n   var PDFFunction = coreFunction.PDFFunction;\n   var ColorSpace = function ColorSpaceClosure() {\n    function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\n     var COMPONENTS = 3;\n     alpha01 = alpha01 !== 1 ? 0 : alpha01;\n     var xRatio = w1 / w2;\n     var yRatio = h1 / h2;\n     var i, j, py, newIndex = 0, oldIndex;\n     var xScaled = new Uint16Array(w2);\n     var w1Scanline = w1 * COMPONENTS;\n     for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n     }\n     for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n       oldIndex = py + xScaled[j];\n       dest[newIndex++] = src[oldIndex++];\n       dest[newIndex++] = src[oldIndex++];\n       dest[newIndex++] = src[oldIndex++];\n       newIndex += alpha01;\n      }\n     }\n    }\n    function ColorSpace() {\n     error('should not call ColorSpace constructor');\n    }\n    ColorSpace.prototype = {\n     getRgb: function ColorSpace_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      this.getRgbItem(src, srcOffset, rgb, 0);\n      return rgb;\n     },\n     getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\n      error('Should not call ColorSpace.getRgbItem');\n     },\n     getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      error('Should not call ColorSpace.getRgbBuffer');\n     },\n     getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\n      error('Should not call ColorSpace.getOutputLength');\n     },\n     isPassthrough: function ColorSpace_isPassthrough(bits) {\n      return false;\n     },\n     fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n      var count = originalWidth * originalHeight;\n      var rgbBuf = null;\n      var numComponentColors = 1 << bpc;\n      var needsResizing = originalHeight !== height || originalWidth !== width;\n      var i, ii;\n      if (this.isPassthrough(bpc)) {\n       rgbBuf = comps;\n      } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n       var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n       var key;\n       for (i = 0; i < numComponentColors; i++) {\n        allColors[i] = i;\n       }\n       var colorMap = new Uint8Array(numComponentColors * 3);\n       this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n       var destPos, rgbPos;\n       if (!needsResizing) {\n        destPos = 0;\n        for (i = 0; i < count; ++i) {\n         key = comps[i] * 3;\n         dest[destPos++] = colorMap[key];\n         dest[destPos++] = colorMap[key + 1];\n         dest[destPos++] = colorMap[key + 2];\n         destPos += alpha01;\n        }\n       } else {\n        rgbBuf = new Uint8Array(count * 3);\n        rgbPos = 0;\n        for (i = 0; i < count; ++i) {\n         key = comps[i] * 3;\n         rgbBuf[rgbPos++] = colorMap[key];\n         rgbBuf[rgbPos++] = colorMap[key + 1];\n         rgbBuf[rgbPos++] = colorMap[key + 2];\n        }\n       }\n      } else {\n       if (!needsResizing) {\n        this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n       } else {\n        rgbBuf = new Uint8Array(count * 3);\n        this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n       }\n      }\n      if (rgbBuf) {\n       if (needsResizing) {\n        resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\n       } else {\n        rgbPos = 0;\n        destPos = 0;\n        for (i = 0, ii = width * actualHeight; i < ii; i++) {\n         dest[destPos++] = rgbBuf[rgbPos++];\n         dest[destPos++] = rgbBuf[rgbPos++];\n         dest[destPos++] = rgbBuf[rgbPos++];\n         destPos += alpha01;\n        }\n       }\n      }\n     },\n     usesZeroToOneRange: true\n    };\n    ColorSpace.parse = function ColorSpace_parse(cs, xref, res) {\n     var IR = ColorSpace.parseToIR(cs, xref, res);\n     if (IR instanceof AlternateCS) {\n      return IR;\n     }\n     return ColorSpace.fromIR(IR);\n    };\n    ColorSpace.fromIR = function ColorSpace_fromIR(IR) {\n     var name = isArray(IR) ? IR[0] : IR;\n     var whitePoint, blackPoint, gamma;\n     switch (name) {\n     case 'DeviceGrayCS':\n      return this.singletons.gray;\n     case 'DeviceRgbCS':\n      return this.singletons.rgb;\n     case 'DeviceCmykCS':\n      return this.singletons.cmyk;\n     case 'CalGrayCS':\n      whitePoint = IR[1];\n      blackPoint = IR[2];\n      gamma = IR[3];\n      return new CalGrayCS(whitePoint, blackPoint, gamma);\n     case 'CalRGBCS':\n      whitePoint = IR[1];\n      blackPoint = IR[2];\n      gamma = IR[3];\n      var matrix = IR[4];\n      return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n     case 'PatternCS':\n      var basePatternCS = IR[1];\n      if (basePatternCS) {\n       basePatternCS = ColorSpace.fromIR(basePatternCS);\n      }\n      return new PatternCS(basePatternCS);\n     case 'IndexedCS':\n      var baseIndexedCS = IR[1];\n      var hiVal = IR[2];\n      var lookup = IR[3];\n      return new IndexedCS(ColorSpace.fromIR(baseIndexedCS), hiVal, lookup);\n     case 'AlternateCS':\n      var numComps = IR[1];\n      var alt = IR[2];\n      var tintFnIR = IR[3];\n      return new AlternateCS(numComps, ColorSpace.fromIR(alt), PDFFunction.fromIR(tintFnIR));\n     case 'LabCS':\n      whitePoint = IR[1];\n      blackPoint = IR[2];\n      var range = IR[3];\n      return new LabCS(whitePoint, blackPoint, range);\n     default:\n      error('Unknown name ' + name);\n     }\n     return null;\n    };\n    ColorSpace.parseToIR = function ColorSpace_parseToIR(cs, xref, res) {\n     if (isName(cs)) {\n      var colorSpaces = res.get('ColorSpace');\n      if (isDict(colorSpaces)) {\n       var refcs = colorSpaces.get(cs.name);\n       if (refcs) {\n        cs = refcs;\n       }\n      }\n     }\n     cs = xref.fetchIfRef(cs);\n     if (isName(cs)) {\n      switch (cs.name) {\n      case 'DeviceGray':\n      case 'G':\n       return 'DeviceGrayCS';\n      case 'DeviceRGB':\n      case 'RGB':\n       return 'DeviceRgbCS';\n      case 'DeviceCMYK':\n      case 'CMYK':\n       return 'DeviceCmykCS';\n      case 'Pattern':\n       return [\n        'PatternCS',\n        null\n       ];\n      default:\n       error('unrecognized colorspace ' + cs.name);\n      }\n     } else if (isArray(cs)) {\n      var mode = xref.fetchIfRef(cs[0]).name;\n      var numComps, params, alt, whitePoint, blackPoint, gamma;\n      switch (mode) {\n      case 'DeviceGray':\n      case 'G':\n       return 'DeviceGrayCS';\n      case 'DeviceRGB':\n      case 'RGB':\n       return 'DeviceRgbCS';\n      case 'DeviceCMYK':\n      case 'CMYK':\n       return 'DeviceCmykCS';\n      case 'CalGray':\n       params = xref.fetchIfRef(cs[1]);\n       whitePoint = params.getArray('WhitePoint');\n       blackPoint = params.getArray('BlackPoint');\n       gamma = params.get('Gamma');\n       return [\n        'CalGrayCS',\n        whitePoint,\n        blackPoint,\n        gamma\n       ];\n      case 'CalRGB':\n       params = xref.fetchIfRef(cs[1]);\n       whitePoint = params.getArray('WhitePoint');\n       blackPoint = params.getArray('BlackPoint');\n       gamma = params.getArray('Gamma');\n       var matrix = params.getArray('Matrix');\n       return [\n        'CalRGBCS',\n        whitePoint,\n        blackPoint,\n        gamma,\n        matrix\n       ];\n      case 'ICCBased':\n       var stream = xref.fetchIfRef(cs[1]);\n       var dict = stream.dict;\n       numComps = dict.get('N');\n       alt = dict.get('Alternate');\n       if (alt) {\n        var altIR = ColorSpace.parseToIR(alt, xref, res);\n        var altCS = ColorSpace.fromIR(altIR);\n        if (altCS.numComps === numComps) {\n         return altIR;\n        }\n        warn('ICCBased color space: Ignoring incorrect /Alternate entry.');\n       }\n       if (numComps === 1) {\n        return 'DeviceGrayCS';\n       } else if (numComps === 3) {\n        return 'DeviceRgbCS';\n       } else if (numComps === 4) {\n        return 'DeviceCmykCS';\n       }\n       break;\n      case 'Pattern':\n       var basePatternCS = cs[1] || null;\n       if (basePatternCS) {\n        basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res);\n       }\n       return [\n        'PatternCS',\n        basePatternCS\n       ];\n      case 'Indexed':\n      case 'I':\n       var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res);\n       var hiVal = xref.fetchIfRef(cs[2]) + 1;\n       var lookup = xref.fetchIfRef(cs[3]);\n       if (isStream(lookup)) {\n        lookup = lookup.getBytes();\n       }\n       return [\n        'IndexedCS',\n        baseIndexedCS,\n        hiVal,\n        lookup\n       ];\n      case 'Separation':\n      case 'DeviceN':\n       var name = xref.fetchIfRef(cs[1]);\n       numComps = isArray(name) ? name.length : 1;\n       alt = ColorSpace.parseToIR(cs[2], xref, res);\n       var tintFnIR = PDFFunction.getIR(xref, xref.fetchIfRef(cs[3]));\n       return [\n        'AlternateCS',\n        numComps,\n        alt,\n        tintFnIR\n       ];\n      case 'Lab':\n       params = xref.fetchIfRef(cs[1]);\n       whitePoint = params.getArray('WhitePoint');\n       blackPoint = params.getArray('BlackPoint');\n       var range = params.getArray('Range');\n       return [\n        'LabCS',\n        whitePoint,\n        blackPoint,\n        range\n       ];\n      default:\n       error('unimplemented color space object \"' + mode + '\"');\n      }\n     } else {\n      error('unrecognized color space object: \"' + cs + '\"');\n     }\n     return null;\n    };\n    ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n     if (!isArray(decode)) {\n      return true;\n     }\n     if (n * 2 !== decode.length) {\n      warn('The decode map is not the correct length');\n      return true;\n     }\n     for (var i = 0, ii = decode.length; i < ii; i += 2) {\n      if (decode[i] !== 0 || decode[i + 1] !== 1) {\n       return false;\n      }\n     }\n     return true;\n    };\n    ColorSpace.singletons = {\n     get gray() {\n      return shadow(this, 'gray', new DeviceGrayCS());\n     },\n     get rgb() {\n      return shadow(this, 'rgb', new DeviceRgbCS());\n     },\n     get cmyk() {\n      return shadow(this, 'cmyk', new DeviceCmykCS());\n     }\n    };\n    return ColorSpace;\n   }();\n   var AlternateCS = function AlternateCSClosure() {\n    function AlternateCS(numComps, base, tintFn) {\n     this.name = 'Alternate';\n     this.numComps = numComps;\n     this.defaultColor = new Float32Array(numComps);\n     for (var i = 0; i < numComps; ++i) {\n      this.defaultColor[i] = 1;\n     }\n     this.base = base;\n     this.tintFn = tintFn;\n     this.tmpBuf = new Float32Array(base.numComps);\n    }\n    AlternateCS.prototype = {\n     getRgb: ColorSpace.prototype.getRgb,\n     getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var tmpBuf = this.tmpBuf;\n      this.tintFn(src, srcOffset, tmpBuf, 0);\n      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n     },\n     getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var tintFn = this.tintFn;\n      var base = this.base;\n      var scale = 1 / ((1 << bits) - 1);\n      var baseNumComps = base.numComps;\n      var usesZeroToOneRange = base.usesZeroToOneRange;\n      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n      var pos = isPassthrough ? destOffset : 0;\n      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n      var numComps = this.numComps;\n      var scaled = new Float32Array(numComps);\n      var tinted = new Float32Array(baseNumComps);\n      var i, j;\n      for (i = 0; i < count; i++) {\n       for (j = 0; j < numComps; j++) {\n        scaled[j] = src[srcOffset++] * scale;\n       }\n       tintFn(scaled, 0, tinted, 0);\n       if (usesZeroToOneRange) {\n        for (j = 0; j < baseNumComps; j++) {\n         baseBuf[pos++] = tinted[j] * 255;\n        }\n       } else {\n        base.getRgbItem(tinted, 0, baseBuf, pos);\n        pos += baseNumComps;\n       }\n      }\n      if (!isPassthrough) {\n       base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n      }\n     },\n     getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n     },\n     isPassthrough: ColorSpace.prototype.isPassthrough,\n     fillRgb: ColorSpace.prototype.fillRgb,\n     isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n     },\n     usesZeroToOneRange: true\n    };\n    return AlternateCS;\n   }();\n   var PatternCS = function PatternCSClosure() {\n    function PatternCS(baseCS) {\n     this.name = 'Pattern';\n     this.base = baseCS;\n    }\n    PatternCS.prototype = {};\n    return PatternCS;\n   }();\n   var IndexedCS = function IndexedCSClosure() {\n    function IndexedCS(base, highVal, lookup) {\n     this.name = 'Indexed';\n     this.numComps = 1;\n     this.defaultColor = new Uint8Array(this.numComps);\n     this.base = base;\n     this.highVal = highVal;\n     var baseNumComps = base.numComps;\n     var length = baseNumComps * highVal;\n     if (isStream(lookup)) {\n      this.lookup = new Uint8Array(length);\n      var bytes = lookup.getBytes(length);\n      this.lookup.set(bytes);\n     } else if (isString(lookup)) {\n      this.lookup = new Uint8Array(length);\n      for (var i = 0; i < length; ++i) {\n       this.lookup[i] = lookup.charCodeAt(i);\n      }\n     } else if (lookup instanceof Uint8Array || lookup instanceof Array) {\n      this.lookup = lookup;\n     } else {\n      error('Unrecognized lookup table: ' + lookup);\n     }\n    }\n    IndexedCS.prototype = {\n     getRgb: ColorSpace.prototype.getRgb,\n     getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var numComps = this.base.numComps;\n      var start = src[srcOffset] * numComps;\n      this.base.getRgbItem(this.lookup, start, dest, destOffset);\n     },\n     getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var base = this.base;\n      var numComps = base.numComps;\n      var outputDelta = base.getOutputLength(numComps, alpha01);\n      var lookup = this.lookup;\n      for (var i = 0; i < count; ++i) {\n       var lookupPos = src[srcOffset++] * numComps;\n       base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n       destOffset += outputDelta;\n      }\n     },\n     getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n     },\n     isPassthrough: ColorSpace.prototype.isPassthrough,\n     fillRgb: ColorSpace.prototype.fillRgb,\n     isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n      return true;\n     },\n     usesZeroToOneRange: true\n    };\n    return IndexedCS;\n   }();\n   var DeviceGrayCS = function DeviceGrayCSClosure() {\n    function DeviceGrayCS() {\n     this.name = 'DeviceGray';\n     this.numComps = 1;\n     this.defaultColor = new Float32Array(this.numComps);\n    }\n    DeviceGrayCS.prototype = {\n     getRgb: ColorSpace.prototype.getRgb,\n     getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var c = src[srcOffset] * 255 | 0;\n      c = c < 0 ? 0 : c > 255 ? 255 : c;\n      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n     },\n     getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset, q = destOffset;\n      for (var i = 0; i < count; ++i) {\n       var c = scale * src[j++] | 0;\n       dest[q++] = c;\n       dest[q++] = c;\n       dest[q++] = c;\n       q += alpha01;\n      }\n     },\n     getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n     },\n     isPassthrough: ColorSpace.prototype.isPassthrough,\n     fillRgb: ColorSpace.prototype.fillRgb,\n     isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n     },\n     usesZeroToOneRange: true\n    };\n    return DeviceGrayCS;\n   }();\n   var DeviceRgbCS = function DeviceRgbCSClosure() {\n    function DeviceRgbCS() {\n     this.name = 'DeviceRGB';\n     this.numComps = 3;\n     this.defaultColor = new Float32Array(this.numComps);\n    }\n    DeviceRgbCS.prototype = {\n     getRgb: ColorSpace.prototype.getRgb,\n     getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var r = src[srcOffset] * 255 | 0;\n      var g = src[srcOffset + 1] * 255 | 0;\n      var b = src[srcOffset + 2] * 255 | 0;\n      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n     },\n     getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      if (bits === 8 && alpha01 === 0) {\n       dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n       return;\n      }\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset, q = destOffset;\n      for (var i = 0; i < count; ++i) {\n       dest[q++] = scale * src[j++] | 0;\n       dest[q++] = scale * src[j++] | 0;\n       dest[q++] = scale * src[j++] | 0;\n       q += alpha01;\n      }\n     },\n     getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n     },\n     isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n      return bits === 8;\n     },\n     fillRgb: ColorSpace.prototype.fillRgb,\n     isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n     },\n     usesZeroToOneRange: true\n    };\n    return DeviceRgbCS;\n   }();\n   var DeviceCmykCS = function DeviceCmykCSClosure() {\n    function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n     var c = src[srcOffset + 0] * srcScale;\n     var m = src[srcOffset + 1] * srcScale;\n     var y = src[srcOffset + 2] * srcScale;\n     var k = src[srcOffset + 3] * srcScale;\n     var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\n     var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\n     var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\n     dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n     dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n     dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n    }\n    function DeviceCmykCS() {\n     this.name = 'DeviceCMYK';\n     this.numComps = 4;\n     this.defaultColor = new Float32Array(this.numComps);\n     this.defaultColor[3] = 1;\n    }\n    DeviceCmykCS.prototype = {\n     getRgb: ColorSpace.prototype.getRgb,\n     getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(src, srcOffset, 1, dest, destOffset);\n     },\n     getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; i++) {\n       convertToRgb(src, srcOffset, scale, dest, destOffset);\n       srcOffset += 4;\n       destOffset += 3 + alpha01;\n      }\n     },\n     getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\n      return inputLength / 4 * (3 + alpha01) | 0;\n     },\n     isPassthrough: ColorSpace.prototype.isPassthrough,\n     fillRgb: ColorSpace.prototype.fillRgb,\n     isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n     },\n     usesZeroToOneRange: true\n    };\n    return DeviceCmykCS;\n   }();\n   var CalGrayCS = function CalGrayCSClosure() {\n    function CalGrayCS(whitePoint, blackPoint, gamma) {\n     this.name = 'CalGray';\n     this.numComps = 1;\n     this.defaultColor = new Float32Array(this.numComps);\n     if (!whitePoint) {\n      error('WhitePoint missing - required for color space CalGray');\n     }\n     blackPoint = blackPoint || [\n      0,\n      0,\n      0\n     ];\n     gamma = gamma || 1;\n     this.XW = whitePoint[0];\n     this.YW = whitePoint[1];\n     this.ZW = whitePoint[2];\n     this.XB = blackPoint[0];\n     this.YB = blackPoint[1];\n     this.ZB = blackPoint[2];\n     this.G = gamma;\n     if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      error('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n     }\n     if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      info('Invalid BlackPoint for ' + this.name + ', falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n     }\n     if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n      warn(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\n     }\n     if (this.G < 1) {\n      info('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\n      this.G = 1;\n     }\n    }\n    function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n     var A = src[srcOffset] * scale;\n     var AG = Math.pow(A, cs.G);\n     var L = cs.YW * AG;\n     var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n     dest[destOffset] = val;\n     dest[destOffset + 1] = val;\n     dest[destOffset + 2] = val;\n    }\n    CalGrayCS.prototype = {\n     getRgb: ColorSpace.prototype.getRgb,\n     getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n     },\n     getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n       convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n       srcOffset += 1;\n       destOffset += 3 + alpha01;\n      }\n     },\n     getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n     },\n     isPassthrough: ColorSpace.prototype.isPassthrough,\n     fillRgb: ColorSpace.prototype.fillRgb,\n     isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n     },\n     usesZeroToOneRange: true\n    };\n    return CalGrayCS;\n   }();\n   var CalRGBCS = function CalRGBCSClosure() {\n    var BRADFORD_SCALE_MATRIX = new Float32Array([\n     0.8951,\n     0.2664,\n     -0.1614,\n     -0.7502,\n     1.7135,\n     0.0367,\n     0.0389,\n     -0.0685,\n     1.0296\n    ]);\n    var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([\n     0.9869929,\n     -0.1470543,\n     0.1599627,\n     0.4323053,\n     0.5183603,\n     0.0492912,\n     -0.0085287,\n     0.0400428,\n     0.9684867\n    ]);\n    var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([\n     3.2404542,\n     -1.5371385,\n     -0.4985314,\n     -0.9692660,\n     1.8760108,\n     0.0415560,\n     0.0556434,\n     -0.2040259,\n     1.0572252\n    ]);\n    var FLAT_WHITEPOINT_MATRIX = new Float32Array([\n     1,\n     1,\n     1\n    ]);\n    var tempNormalizeMatrix = new Float32Array(3);\n    var tempConvertMatrix1 = new Float32Array(3);\n    var tempConvertMatrix2 = new Float32Array(3);\n    var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n    function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n     this.name = 'CalRGB';\n     this.numComps = 3;\n     this.defaultColor = new Float32Array(this.numComps);\n     if (!whitePoint) {\n      error('WhitePoint missing - required for color space CalRGB');\n     }\n     blackPoint = blackPoint || new Float32Array(3);\n     gamma = gamma || new Float32Array([\n      1,\n      1,\n      1\n     ]);\n     matrix = matrix || new Float32Array([\n      1,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      1\n     ]);\n     var XW = whitePoint[0];\n     var YW = whitePoint[1];\n     var ZW = whitePoint[2];\n     this.whitePoint = whitePoint;\n     var XB = blackPoint[0];\n     var YB = blackPoint[1];\n     var ZB = blackPoint[2];\n     this.blackPoint = blackPoint;\n     this.GR = gamma[0];\n     this.GG = gamma[1];\n     this.GB = gamma[2];\n     this.MXA = matrix[0];\n     this.MYA = matrix[1];\n     this.MZA = matrix[2];\n     this.MXB = matrix[3];\n     this.MYB = matrix[4];\n     this.MZB = matrix[5];\n     this.MXC = matrix[6];\n     this.MYC = matrix[7];\n     this.MZC = matrix[8];\n     if (XW < 0 || ZW < 0 || YW !== 1) {\n      error('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n     }\n     if (XB < 0 || YB < 0 || ZB < 0) {\n      info('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\n      this.blackPoint = new Float32Array(3);\n     }\n     if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n      info('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\n      this.GR = this.GG = this.GB = 1;\n     }\n     if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n      info('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\n      this.MXA = this.MYB = this.MZC = 1;\n      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n     }\n    }\n    function matrixProduct(a, b, result) {\n     result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n     result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n     result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n    }\n    function convertToFlat(sourceWhitePoint, LMS, result) {\n     result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n     result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n     result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n    }\n    function convertToD65(sourceWhitePoint, LMS, result) {\n     var D65X = 0.95047;\n     var D65Y = 1;\n     var D65Z = 1.08883;\n     result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n     result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n     result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n    }\n    function sRGBTransferFunction(color) {\n     if (color <= 0.0031308) {\n      return adjustToRange(0, 1, 12.92 * color);\n     }\n     return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n    }\n    function adjustToRange(min, max, value) {\n     return Math.max(min, Math.min(max, value));\n    }\n    function decodeL(L) {\n     if (L < 0) {\n      return -decodeL(-L);\n     }\n     if (L > 8.0) {\n      return Math.pow((L + 16) / 116, 3);\n     }\n     return L * DECODE_L_CONSTANT;\n    }\n    function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n     if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n      result[0] = XYZ_Flat[0];\n      result[1] = XYZ_Flat[1];\n      result[2] = XYZ_Flat[2];\n      return;\n     }\n     var zeroDecodeL = decodeL(0);\n     var X_DST = zeroDecodeL;\n     var X_SRC = decodeL(sourceBlackPoint[0]);\n     var Y_DST = zeroDecodeL;\n     var Y_SRC = decodeL(sourceBlackPoint[1]);\n     var Z_DST = zeroDecodeL;\n     var Z_SRC = decodeL(sourceBlackPoint[2]);\n     var X_Scale = (1 - X_DST) / (1 - X_SRC);\n     var X_Offset = 1 - X_Scale;\n     var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n     var Y_Offset = 1 - Y_Scale;\n     var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n     var Z_Offset = 1 - Z_Scale;\n     result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n     result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n     result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n    }\n    function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n     if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n      result[0] = XYZ_In[0];\n      result[1] = XYZ_In[1];\n      result[2] = XYZ_In[2];\n      return;\n     }\n     var LMS = result;\n     matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n     var LMS_Flat = tempNormalizeMatrix;\n     convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n     matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n    }\n    function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n     var LMS = result;\n     matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n     var LMS_D65 = tempNormalizeMatrix;\n     convertToD65(sourceWhitePoint, LMS, LMS_D65);\n     matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n    }\n    function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n     var A = adjustToRange(0, 1, src[srcOffset] * scale);\n     var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n     var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n     var AGR = Math.pow(A, cs.GR);\n     var BGG = Math.pow(B, cs.GG);\n     var CGB = Math.pow(C, cs.GB);\n     var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n     var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n     var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n     var XYZ = tempConvertMatrix1;\n     XYZ[0] = X;\n     XYZ[1] = Y;\n     XYZ[2] = Z;\n     var XYZ_Flat = tempConvertMatrix2;\n     normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n     var XYZ_Black = tempConvertMatrix1;\n     compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n     var XYZ_D65 = tempConvertMatrix2;\n     normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n     var SRGB = tempConvertMatrix1;\n     matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n     var sR = sRGBTransferFunction(SRGB[0]);\n     var sG = sRGBTransferFunction(SRGB[1]);\n     var sB = sRGBTransferFunction(SRGB[2]);\n     dest[destOffset] = Math.round(sR * 255);\n     dest[destOffset + 1] = Math.round(sG * 255);\n     dest[destOffset + 2] = Math.round(sB * 255);\n    }\n    CalRGBCS.prototype = {\n     getRgb: function CalRGBCS_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      this.getRgbItem(src, srcOffset, rgb, 0);\n      return rgb;\n     },\n     getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n     },\n     getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n       convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n       srcOffset += 3;\n       destOffset += 3 + alpha01;\n      }\n     },\n     getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n     },\n     isPassthrough: ColorSpace.prototype.isPassthrough,\n     fillRgb: ColorSpace.prototype.fillRgb,\n     isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n     },\n     usesZeroToOneRange: true\n    };\n    return CalRGBCS;\n   }();\n   var LabCS = function LabCSClosure() {\n    function LabCS(whitePoint, blackPoint, range) {\n     this.name = 'Lab';\n     this.numComps = 3;\n     this.defaultColor = new Float32Array(this.numComps);\n     if (!whitePoint) {\n      error('WhitePoint missing - required for color space Lab');\n     }\n     blackPoint = blackPoint || [\n      0,\n      0,\n      0\n     ];\n     range = range || [\n      -100,\n      100,\n      -100,\n      100\n     ];\n     this.XW = whitePoint[0];\n     this.YW = whitePoint[1];\n     this.ZW = whitePoint[2];\n     this.amin = range[0];\n     this.amax = range[1];\n     this.bmin = range[2];\n     this.bmax = range[3];\n     this.XB = blackPoint[0];\n     this.YB = blackPoint[1];\n     this.ZB = blackPoint[2];\n     if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      error('Invalid WhitePoint components, no fallback available');\n     }\n     if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      info('Invalid BlackPoint, falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n     }\n     if (this.amin > this.amax || this.bmin > this.bmax) {\n      info('Invalid Range, falling back to defaults');\n      this.amin = -100;\n      this.amax = 100;\n      this.bmin = -100;\n      this.bmax = 100;\n     }\n    }\n    function fn_g(x) {\n     var result;\n     if (x >= 6 / 29) {\n      result = x * x * x;\n     } else {\n      result = 108 / 841 * (x - 4 / 29);\n     }\n     return result;\n    }\n    function decode(value, high1, low2, high2) {\n     return low2 + value * (high2 - low2) / high1;\n    }\n    function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n     var Ls = src[srcOffset];\n     var as = src[srcOffset + 1];\n     var bs = src[srcOffset + 2];\n     if (maxVal !== false) {\n      Ls = decode(Ls, maxVal, 0, 100);\n      as = decode(as, maxVal, cs.amin, cs.amax);\n      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n     }\n     as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n     bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n     var M = (Ls + 16) / 116;\n     var L = M + as / 500;\n     var N = M - bs / 200;\n     var X = cs.XW * fn_g(L);\n     var Y = cs.YW * fn_g(M);\n     var Z = cs.ZW * fn_g(N);\n     var r, g, b;\n     if (cs.ZW < 1) {\n      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n     } else {\n      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n     }\n     dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n     dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n     dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n    }\n    LabCS.prototype = {\n     getRgb: ColorSpace.prototype.getRgb,\n     getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, false, dest, destOffset);\n     },\n     getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var maxVal = (1 << bits) - 1;\n      for (var i = 0; i < count; i++) {\n       convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n       srcOffset += 3;\n       destOffset += 3 + alpha01;\n      }\n     },\n     getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n     },\n     isPassthrough: ColorSpace.prototype.isPassthrough,\n     fillRgb: ColorSpace.prototype.fillRgb,\n     isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n      return true;\n     },\n     usesZeroToOneRange: false\n    };\n    return LabCS;\n   }();\n   exports.ColorSpace = ColorSpace;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsCoreFonts = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreStream, root.pdfjsCoreGlyphList, root.pdfjsCoreFontRenderer, root.pdfjsCoreEncodings, root.pdfjsCoreStandardFonts, root.pdfjsCoreUnicode, root.pdfjsCoreType1Parser, root.pdfjsCoreCFFParser);\n  }(this, function (exports, sharedUtil, corePrimitives, coreStream, coreGlyphList, coreFontRenderer, coreEncodings, coreStandardFonts, coreUnicode, coreType1Parser, coreCFFParser) {\n   var FONT_IDENTITY_MATRIX = sharedUtil.FONT_IDENTITY_MATRIX;\n   var FontType = sharedUtil.FontType;\n   var assert = sharedUtil.assert;\n   var bytesToString = sharedUtil.bytesToString;\n   var error = sharedUtil.error;\n   var info = sharedUtil.info;\n   var isArray = sharedUtil.isArray;\n   var isInt = sharedUtil.isInt;\n   var isNum = sharedUtil.isNum;\n   var readUint32 = sharedUtil.readUint32;\n   var shadow = sharedUtil.shadow;\n   var string32 = sharedUtil.string32;\n   var warn = sharedUtil.warn;\n   var MissingDataException = sharedUtil.MissingDataException;\n   var isSpace = sharedUtil.isSpace;\n   var Stream = coreStream.Stream;\n   var getGlyphsUnicode = coreGlyphList.getGlyphsUnicode;\n   var getDingbatsGlyphsUnicode = coreGlyphList.getDingbatsGlyphsUnicode;\n   var FontRendererFactory = coreFontRenderer.FontRendererFactory;\n   var StandardEncoding = coreEncodings.StandardEncoding;\n   var MacRomanEncoding = coreEncodings.MacRomanEncoding;\n   var SymbolSetEncoding = coreEncodings.SymbolSetEncoding;\n   var ZapfDingbatsEncoding = coreEncodings.ZapfDingbatsEncoding;\n   var getEncoding = coreEncodings.getEncoding;\n   var getStdFontMap = coreStandardFonts.getStdFontMap;\n   var getNonStdFontMap = coreStandardFonts.getNonStdFontMap;\n   var getGlyphMapForStandardFonts = coreStandardFonts.getGlyphMapForStandardFonts;\n   var getSupplementalGlyphMapForArialBlack = coreStandardFonts.getSupplementalGlyphMapForArialBlack;\n   var getUnicodeRangeFor = coreUnicode.getUnicodeRangeFor;\n   var mapSpecialUnicodeValues = coreUnicode.mapSpecialUnicodeValues;\n   var getUnicodeForGlyph = coreUnicode.getUnicodeForGlyph;\n   var Type1Parser = coreType1Parser.Type1Parser;\n   var CFFStandardStrings = coreCFFParser.CFFStandardStrings;\n   var CFFParser = coreCFFParser.CFFParser;\n   var CFFCompiler = coreCFFParser.CFFCompiler;\n   var CFF = coreCFFParser.CFF;\n   var CFFHeader = coreCFFParser.CFFHeader;\n   var CFFTopDict = coreCFFParser.CFFTopDict;\n   var CFFPrivateDict = coreCFFParser.CFFPrivateDict;\n   var CFFStrings = coreCFFParser.CFFStrings;\n   var CFFIndex = coreCFFParser.CFFIndex;\n   var CFFCharset = coreCFFParser.CFFCharset;\n   var PRIVATE_USE_OFFSET_START = 0xE000;\n   var PRIVATE_USE_OFFSET_END = 0xF8FF;\n   var SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\n   var PDF_GLYPH_SPACE_UNITS = 1000;\n   var SEAC_ANALYSIS_ENABLED = false;\n   var FontFlags = {\n    FixedPitch: 1,\n    Serif: 2,\n    Symbolic: 4,\n    Script: 8,\n    Nonsymbolic: 32,\n    Italic: 64,\n    AllCap: 65536,\n    SmallCap: 131072,\n    ForceBold: 262144\n   };\n   var MacStandardGlyphOrdering = [\n    '.notdef',\n    '.null',\n    'nonmarkingreturn',\n    'space',\n    'exclam',\n    'quotedbl',\n    'numbersign',\n    'dollar',\n    'percent',\n    'ampersand',\n    'quotesingle',\n    'parenleft',\n    'parenright',\n    'asterisk',\n    'plus',\n    'comma',\n    'hyphen',\n    'period',\n    'slash',\n    'zero',\n    'one',\n    'two',\n    'three',\n    'four',\n    'five',\n    'six',\n    'seven',\n    'eight',\n    'nine',\n    'colon',\n    'semicolon',\n    'less',\n    'equal',\n    'greater',\n    'question',\n    'at',\n    'A',\n    'B',\n    'C',\n    'D',\n    'E',\n    'F',\n    'G',\n    'H',\n    'I',\n    'J',\n    'K',\n    'L',\n    'M',\n    'N',\n    'O',\n    'P',\n    'Q',\n    'R',\n    'S',\n    'T',\n    'U',\n    'V',\n    'W',\n    'X',\n    'Y',\n    'Z',\n    'bracketleft',\n    'backslash',\n    'bracketright',\n    'asciicircum',\n    'underscore',\n    'grave',\n    'a',\n    'b',\n    'c',\n    'd',\n    'e',\n    'f',\n    'g',\n    'h',\n    'i',\n    'j',\n    'k',\n    'l',\n    'm',\n    'n',\n    'o',\n    'p',\n    'q',\n    'r',\n    's',\n    't',\n    'u',\n    'v',\n    'w',\n    'x',\n    'y',\n    'z',\n    'braceleft',\n    'bar',\n    'braceright',\n    'asciitilde',\n    'Adieresis',\n    'Aring',\n    'Ccedilla',\n    'Eacute',\n    'Ntilde',\n    'Odieresis',\n    'Udieresis',\n    'aacute',\n    'agrave',\n    'acircumflex',\n    'adieresis',\n    'atilde',\n    'aring',\n    'ccedilla',\n    'eacute',\n    'egrave',\n    'ecircumflex',\n    'edieresis',\n    'iacute',\n    'igrave',\n    'icircumflex',\n    'idieresis',\n    'ntilde',\n    'oacute',\n    'ograve',\n    'ocircumflex',\n    'odieresis',\n    'otilde',\n    'uacute',\n    'ugrave',\n    'ucircumflex',\n    'udieresis',\n    'dagger',\n    'degree',\n    'cent',\n    'sterling',\n    'section',\n    'bullet',\n    'paragraph',\n    'germandbls',\n    'registered',\n    'copyright',\n    'trademark',\n    'acute',\n    'dieresis',\n    'notequal',\n    'AE',\n    'Oslash',\n    'infinity',\n    'plusminus',\n    'lessequal',\n    'greaterequal',\n    'yen',\n    'mu',\n    'partialdiff',\n    'summation',\n    'product',\n    'pi',\n    'integral',\n    'ordfeminine',\n    'ordmasculine',\n    'Omega',\n    'ae',\n    'oslash',\n    'questiondown',\n    'exclamdown',\n    'logicalnot',\n    'radical',\n    'florin',\n    'approxequal',\n    'Delta',\n    'guillemotleft',\n    'guillemotright',\n    'ellipsis',\n    'nonbreakingspace',\n    'Agrave',\n    'Atilde',\n    'Otilde',\n    'OE',\n    'oe',\n    'endash',\n    'emdash',\n    'quotedblleft',\n    'quotedblright',\n    'quoteleft',\n    'quoteright',\n    'divide',\n    'lozenge',\n    'ydieresis',\n    'Ydieresis',\n    'fraction',\n    'currency',\n    'guilsinglleft',\n    'guilsinglright',\n    'fi',\n    'fl',\n    'daggerdbl',\n    'periodcentered',\n    'quotesinglbase',\n    'quotedblbase',\n    'perthousand',\n    'Acircumflex',\n    'Ecircumflex',\n    'Aacute',\n    'Edieresis',\n    'Egrave',\n    'Iacute',\n    'Icircumflex',\n    'Idieresis',\n    'Igrave',\n    'Oacute',\n    'Ocircumflex',\n    'apple',\n    'Ograve',\n    'Uacute',\n    'Ucircumflex',\n    'Ugrave',\n    'dotlessi',\n    'circumflex',\n    'tilde',\n    'macron',\n    'breve',\n    'dotaccent',\n    'ring',\n    'cedilla',\n    'hungarumlaut',\n    'ogonek',\n    'caron',\n    'Lslash',\n    'lslash',\n    'Scaron',\n    'scaron',\n    'Zcaron',\n    'zcaron',\n    'brokenbar',\n    'Eth',\n    'eth',\n    'Yacute',\n    'yacute',\n    'Thorn',\n    'thorn',\n    'minus',\n    'multiply',\n    'onesuperior',\n    'twosuperior',\n    'threesuperior',\n    'onehalf',\n    'onequarter',\n    'threequarters',\n    'franc',\n    'Gbreve',\n    'gbreve',\n    'Idotaccent',\n    'Scedilla',\n    'scedilla',\n    'Cacute',\n    'cacute',\n    'Ccaron',\n    'ccaron',\n    'dcroat'\n   ];\n   function adjustWidths(properties) {\n    if (!properties.fontMatrix) {\n     return;\n    }\n    if (properties.fontMatrix[0] === FONT_IDENTITY_MATRIX[0]) {\n     return;\n    }\n    var scale = 0.001 / properties.fontMatrix[0];\n    var glyphsWidths = properties.widths;\n    for (var glyph in glyphsWidths) {\n     glyphsWidths[glyph] *= scale;\n    }\n    properties.defaultWidth *= scale;\n   }\n   function adjustToUnicode(properties, builtInEncoding) {\n    if (properties.hasIncludedToUnicodeMap) {\n     return;\n    }\n    if (properties.hasEncoding) {\n     return;\n    }\n    if (builtInEncoding === properties.defaultEncoding) {\n     return;\n    }\n    if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n     return;\n    }\n    var toUnicode = [], glyphsUnicodeMap = getGlyphsUnicode();\n    for (var charCode in builtInEncoding) {\n     var glyphName = builtInEncoding[charCode];\n     var unicode = getUnicodeForGlyph(glyphName, glyphsUnicodeMap);\n     if (unicode !== -1) {\n      toUnicode[charCode] = String.fromCharCode(unicode);\n     }\n    }\n    properties.toUnicode.amend(toUnicode);\n   }\n   function getFontType(type, subtype) {\n    switch (type) {\n    case 'Type1':\n     return subtype === 'Type1C' ? FontType.TYPE1C : FontType.TYPE1;\n    case 'CIDFontType0':\n     return subtype === 'CIDFontType0C' ? FontType.CIDFONTTYPE0C : FontType.CIDFONTTYPE0;\n    case 'OpenType':\n     return FontType.OPENTYPE;\n    case 'TrueType':\n     return FontType.TRUETYPE;\n    case 'CIDFontType2':\n     return FontType.CIDFONTTYPE2;\n    case 'MMType1':\n     return FontType.MMTYPE1;\n    case 'Type0':\n     return FontType.TYPE0;\n    default:\n     return FontType.UNKNOWN;\n    }\n   }\n   function recoverGlyphName(name, glyphsUnicodeMap) {\n    if (glyphsUnicodeMap[name] !== undefined) {\n     return name;\n    }\n    var unicode = getUnicodeForGlyph(name, glyphsUnicodeMap);\n    if (unicode !== -1) {\n     for (var key in glyphsUnicodeMap) {\n      if (glyphsUnicodeMap[key] === unicode) {\n       return key;\n      }\n     }\n    }\n    info('Unable to recover a standard glyph name for: ' + name);\n    return name;\n   }\n   var Glyph = function GlyphClosure() {\n    function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n     this.fontChar = fontChar;\n     this.unicode = unicode;\n     this.accent = accent;\n     this.width = width;\n     this.vmetric = vmetric;\n     this.operatorListId = operatorListId;\n     this.isSpace = isSpace;\n     this.isInFont = isInFont;\n    }\n    Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n     return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n    };\n    return Glyph;\n   }();\n   var ToUnicodeMap = function ToUnicodeMapClosure() {\n    function ToUnicodeMap(cmap) {\n     this._map = cmap;\n    }\n    ToUnicodeMap.prototype = {\n     get length() {\n      return this._map.length;\n     },\n     forEach: function (callback) {\n      for (var charCode in this._map) {\n       callback(charCode, this._map[charCode].charCodeAt(0));\n      }\n     },\n     has: function (i) {\n      return this._map[i] !== undefined;\n     },\n     get: function (i) {\n      return this._map[i];\n     },\n     charCodeOf: function (v) {\n      return this._map.indexOf(v);\n     },\n     amend: function (map) {\n      for (var charCode in map) {\n       this._map[charCode] = map[charCode];\n      }\n     }\n    };\n    return ToUnicodeMap;\n   }();\n   var IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n    function IdentityToUnicodeMap(firstChar, lastChar) {\n     this.firstChar = firstChar;\n     this.lastChar = lastChar;\n    }\n    IdentityToUnicodeMap.prototype = {\n     get length() {\n      return this.lastChar + 1 - this.firstChar;\n     },\n     forEach: function (callback) {\n      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n       callback(i, i);\n      }\n     },\n     has: function (i) {\n      return this.firstChar <= i && i <= this.lastChar;\n     },\n     get: function (i) {\n      if (this.firstChar <= i && i <= this.lastChar) {\n       return String.fromCharCode(i);\n      }\n      return undefined;\n     },\n     charCodeOf: function (v) {\n      return isInt(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n     },\n     amend: function (map) {\n      error('Should not call amend()');\n     }\n    };\n    return IdentityToUnicodeMap;\n   }();\n   var OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n    function writeInt16(dest, offset, num) {\n     dest[offset] = num >> 8 & 0xFF;\n     dest[offset + 1] = num & 0xFF;\n    }\n    function writeInt32(dest, offset, num) {\n     dest[offset] = num >> 24 & 0xFF;\n     dest[offset + 1] = num >> 16 & 0xFF;\n     dest[offset + 2] = num >> 8 & 0xFF;\n     dest[offset + 3] = num & 0xFF;\n    }\n    function writeData(dest, offset, data) {\n     var i, ii;\n     if (data instanceof Uint8Array) {\n      dest.set(data, offset);\n     } else if (typeof data === 'string') {\n      for (i = 0, ii = data.length; i < ii; i++) {\n       dest[offset++] = data.charCodeAt(i) & 0xFF;\n      }\n     } else {\n      for (i = 0, ii = data.length; i < ii; i++) {\n       dest[offset++] = data[i] & 0xFF;\n      }\n     }\n    }\n    function OpenTypeFileBuilder(sfnt) {\n     this.sfnt = sfnt;\n     this.tables = Object.create(null);\n    }\n    OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n     var maxPower2 = 1, log2 = 0;\n     while ((maxPower2 ^ entriesCount) > maxPower2) {\n      maxPower2 <<= 1;\n      log2++;\n     }\n     var searchRange = maxPower2 * entrySize;\n     return {\n      range: searchRange,\n      entry: log2,\n      rangeShift: entrySize * entriesCount - searchRange\n     };\n    };\n    var OTF_HEADER_SIZE = 12;\n    var OTF_TABLE_ENTRY_SIZE = 16;\n    OpenTypeFileBuilder.prototype = {\n     toArray: function OpenTypeFileBuilder_toArray() {\n      var sfnt = this.sfnt;\n      var tables = this.tables;\n      var tablesNames = Object.keys(tables);\n      tablesNames.sort();\n      var numTables = tablesNames.length;\n      var i, j, jj, table, tableName;\n      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n      var tableOffsets = [offset];\n      for (i = 0; i < numTables; i++) {\n       table = tables[tablesNames[i]];\n       var paddedLength = (table.length + 3 & ~3) >>> 0;\n       offset += paddedLength;\n       tableOffsets.push(offset);\n      }\n      var file = new Uint8Array(offset);\n      for (i = 0; i < numTables; i++) {\n       table = tables[tablesNames[i]];\n       writeData(file, tableOffsets[i], table);\n      }\n      if (sfnt === 'true') {\n       sfnt = string32(0x00010000);\n      }\n      file[0] = sfnt.charCodeAt(0) & 0xFF;\n      file[1] = sfnt.charCodeAt(1) & 0xFF;\n      file[2] = sfnt.charCodeAt(2) & 0xFF;\n      file[3] = sfnt.charCodeAt(3) & 0xFF;\n      writeInt16(file, 4, numTables);\n      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n      writeInt16(file, 6, searchParams.range);\n      writeInt16(file, 8, searchParams.entry);\n      writeInt16(file, 10, searchParams.rangeShift);\n      offset = OTF_HEADER_SIZE;\n      for (i = 0; i < numTables; i++) {\n       tableName = tablesNames[i];\n       file[offset] = tableName.charCodeAt(0) & 0xFF;\n       file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n       file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n       file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n       var checksum = 0;\n       for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n        var quad = readUint32(file, j);\n        checksum = checksum + quad >>> 0;\n       }\n       writeInt32(file, offset + 4, checksum);\n       writeInt32(file, offset + 8, tableOffsets[i]);\n       writeInt32(file, offset + 12, tables[tableName].length);\n       offset += OTF_TABLE_ENTRY_SIZE;\n      }\n      return file;\n     },\n     addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n      if (tag in this.tables) {\n       throw new Error('Table ' + tag + ' already exists');\n      }\n      this.tables[tag] = data;\n     }\n    };\n    return OpenTypeFileBuilder;\n   }();\n   var ProblematicCharRanges = new Int32Array([\n    0x0000,\n    0x0020,\n    0x007F,\n    0x00A1,\n    0x00AD,\n    0x00AE,\n    0x0600,\n    0x0780,\n    0x08A0,\n    0x10A0,\n    0x1780,\n    0x1800,\n    0x1C00,\n    0x1C50,\n    0x2000,\n    0x2010,\n    0x2011,\n    0x2012,\n    0x2028,\n    0x2030,\n    0x205F,\n    0x2070,\n    0x25CC,\n    0x25CD,\n    0x3000,\n    0x3001,\n    0xAA60,\n    0xAA80,\n    0xFFF0,\n    0x10000\n   ]);\n   var Font = function FontClosure() {\n    function Font(name, file, properties) {\n     var charCode, glyphName, unicode;\n     this.name = name;\n     this.loadedName = properties.loadedName;\n     this.isType3Font = properties.isType3Font;\n     this.sizes = [];\n     this.missingFile = false;\n     this.glyphCache = Object.create(null);\n     var names = name.split('+');\n     names = names.length > 1 ? names[1] : names[0];\n     names = names.split(/[-,_]/g)[0];\n     this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n     this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n     this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n     var type = properties.type;\n     var subtype = properties.subtype;\n     this.type = type;\n     this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\n     this.differences = properties.differences;\n     this.widths = properties.widths;\n     this.defaultWidth = properties.defaultWidth;\n     this.composite = properties.composite;\n     this.wideChars = properties.wideChars;\n     this.cMap = properties.cMap;\n     this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n     this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n     this.fontMatrix = properties.fontMatrix;\n     this.bbox = properties.bbox;\n     this.toUnicode = properties.toUnicode;\n     this.toFontChar = [];\n     if (properties.type === 'Type3') {\n      for (charCode = 0; charCode < 256; charCode++) {\n       this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n      }\n      this.fontType = FontType.TYPE3;\n      return;\n     }\n     this.cidEncoding = properties.cidEncoding;\n     this.vertical = properties.vertical;\n     if (this.vertical) {\n      this.vmetrics = properties.vmetrics;\n      this.defaultVMetrics = properties.defaultVMetrics;\n     }\n     var glyphsUnicodeMap;\n     if (!file || file.isEmpty) {\n      if (file) {\n       warn('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n      }\n      this.missingFile = true;\n      var fontName = name.replace(/[,_]/g, '-');\n      var stdFontMap = getStdFontMap(), nonStdFontMap = getNonStdFontMap();\n      var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n      this.bold = fontName.search(/bold/gi) !== -1;\n      this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n      this.black = name.search(/Black/g) !== -1;\n      this.remeasure = Object.keys(this.widths).length > 0;\n      if (isStandardFont && type === 'CIDFontType2' && properties.cidEncoding.indexOf('Identity-') === 0) {\n       var GlyphMapForStandardFonts = getGlyphMapForStandardFonts();\n       var map = [];\n       for (charCode in GlyphMapForStandardFonts) {\n        map[+charCode] = GlyphMapForStandardFonts[charCode];\n       }\n       if (/Arial-?Black/i.test(name)) {\n        var SupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack();\n        for (charCode in SupplementalGlyphMapForArialBlack) {\n         map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\n        }\n       }\n       var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n       if (!isIdentityUnicode) {\n        this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n         map[+charCode] = unicodeCharCode;\n        });\n       }\n       this.toFontChar = map;\n       this.toUnicode = new ToUnicodeMap(map);\n      } else if (/Symbol/i.test(fontName)) {\n       this.toFontChar = buildToFontChar(SymbolSetEncoding, getGlyphsUnicode(), properties.differences);\n      } else if (/Dingbats/i.test(fontName)) {\n       if (/Wingdings/i.test(name)) {\n        warn('Non-embedded Wingdings font, falling back to ZapfDingbats.');\n       }\n       this.toFontChar = buildToFontChar(ZapfDingbatsEncoding, getDingbatsGlyphsUnicode(), properties.differences);\n      } else if (isStandardFont) {\n       this.toFontChar = buildToFontChar(properties.defaultEncoding, getGlyphsUnicode(), properties.differences);\n      } else {\n       glyphsUnicodeMap = getGlyphsUnicode();\n       this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n        if (!this.composite) {\n         glyphName = properties.differences[charCode] || properties.defaultEncoding[charCode];\n         unicode = getUnicodeForGlyph(glyphName, glyphsUnicodeMap);\n         if (unicode !== -1) {\n          unicodeCharCode = unicode;\n         }\n        }\n        this.toFontChar[charCode] = unicodeCharCode;\n       }.bind(this));\n      }\n      this.loadedName = fontName.split('-')[0];\n      this.loading = false;\n      this.fontType = getFontType(type, subtype);\n      return;\n     }\n     if (subtype === 'Type1C') {\n      if (type !== 'Type1' && type !== 'MMType1') {\n       if (isTrueTypeFile(file)) {\n        subtype = 'TrueType';\n       } else {\n        type = 'Type1';\n       }\n      } else if (isOpenTypeFile(file)) {\n       type = subtype = 'OpenType';\n      }\n     }\n     if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n      type = 'CIDFontType0';\n     }\n     if (subtype === 'OpenType') {\n      type = 'OpenType';\n     }\n     if (type === 'CIDFontType0') {\n      if (isType1File(file)) {\n       subtype = 'CIDFontType0';\n      } else if (isOpenTypeFile(file)) {\n       type = subtype = 'OpenType';\n      } else {\n       subtype = 'CIDFontType0C';\n      }\n     }\n     var data;\n     switch (type) {\n     case 'MMType1':\n      info('MMType1 font (' + name + '), falling back to Type1.');\n     case 'Type1':\n     case 'CIDFontType0':\n      this.mimetype = 'font/opentype';\n      var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n      adjustWidths(properties);\n      data = this.convert(name, cff, properties);\n      break;\n     case 'OpenType':\n     case 'TrueType':\n     case 'CIDFontType2':\n      this.mimetype = 'font/opentype';\n      data = this.checkAndRepair(name, file, properties);\n      if (this.isOpenType) {\n       adjustWidths(properties);\n       type = 'OpenType';\n      }\n      break;\n     default:\n      error('Font ' + type + ' is not supported');\n      break;\n     }\n     this.data = data;\n     this.fontType = getFontType(type, subtype);\n     this.fontMatrix = properties.fontMatrix;\n     this.widths = properties.widths;\n     this.defaultWidth = properties.defaultWidth;\n     this.toUnicode = properties.toUnicode;\n     this.encoding = properties.baseEncoding;\n     this.seacMap = properties.seacMap;\n     this.loading = true;\n    }\n    Font.getFontID = function () {\n     var ID = 1;\n     return function Font_getFontID() {\n      return String(ID++);\n     };\n    }();\n    function int16(b0, b1) {\n     return (b0 << 8) + b1;\n    }\n    function signedInt16(b0, b1) {\n     var value = (b0 << 8) + b1;\n     return value & 1 << 15 ? value - 0x10000 : value;\n    }\n    function int32(b0, b1, b2, b3) {\n     return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    }\n    function string16(value) {\n     return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n    }\n    function safeString16(value) {\n     value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\n     return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n    }\n    function isTrueTypeFile(file) {\n     var header = file.peekBytes(4);\n     return readUint32(header, 0) === 0x00010000;\n    }\n    function isOpenTypeFile(file) {\n     var header = file.peekBytes(4);\n     return bytesToString(header) === 'OTTO';\n    }\n    function isType1File(file) {\n     var header = file.peekBytes(2);\n     if (header[0] === 0x25 && header[1] === 0x21) {\n      return true;\n     }\n     if (header[0] === 0x80 && header[1] === 0x01) {\n      return true;\n     }\n     return false;\n    }\n    function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n     var toFontChar = [], unicode;\n     for (var i = 0, ii = encoding.length; i < ii; i++) {\n      unicode = getUnicodeForGlyph(encoding[i], glyphsUnicodeMap);\n      if (unicode !== -1) {\n       toFontChar[i] = unicode;\n      }\n     }\n     for (var charCode in differences) {\n      unicode = getUnicodeForGlyph(differences[charCode], glyphsUnicodeMap);\n      if (unicode !== -1) {\n       toFontChar[+charCode] = unicode;\n      }\n     }\n     return toFontChar;\n    }\n    function isProblematicUnicodeLocation(code) {\n     var i = 0, j = ProblematicCharRanges.length - 1;\n     while (i < j) {\n      var c = i + j + 1 >> 1;\n      if (code < ProblematicCharRanges[c]) {\n       j = c - 1;\n      } else {\n       i = c;\n      }\n     }\n     return !(i & 1);\n    }\n    function adjustMapping(charCodeToGlyphId, properties) {\n     var toUnicode = properties.toUnicode;\n     var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n     var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\n     var newMap = Object.create(null);\n     var toFontChar = [];\n     var usedFontCharCodes = [];\n     var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n     for (var originalCharCode in charCodeToGlyphId) {\n      originalCharCode |= 0;\n      var glyphId = charCodeToGlyphId[originalCharCode];\n      var fontCharCode = originalCharCode;\n      var hasUnicodeValue = false;\n      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n       hasUnicodeValue = true;\n       var unicode = toUnicode.get(fontCharCode);\n       if (unicode.length === 1) {\n        fontCharCode = unicode.charCodeAt(0);\n       }\n      }\n      if ((usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) && nextAvailableFontCharCode <= PRIVATE_USE_OFFSET_END) {\n       do {\n        fontCharCode = nextAvailableFontCharCode++;\n        if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n         fontCharCode = 0xF020;\n         nextAvailableFontCharCode = fontCharCode + 1;\n        }\n       } while (usedFontCharCodes[fontCharCode] !== undefined && nextAvailableFontCharCode <= PRIVATE_USE_OFFSET_END);\n      }\n      newMap[fontCharCode] = glyphId;\n      toFontChar[originalCharCode] = fontCharCode;\n      usedFontCharCodes[fontCharCode] = true;\n     }\n     return {\n      toFontChar: toFontChar,\n      charCodeToGlyphId: newMap,\n      nextAvailableFontCharCode: nextAvailableFontCharCode\n     };\n    }\n    function getRanges(glyphs, numGlyphs) {\n     var codes = [];\n     for (var charCode in glyphs) {\n      if (glyphs[charCode] >= numGlyphs) {\n       continue;\n      }\n      codes.push({\n       fontCharCode: charCode | 0,\n       glyphId: glyphs[charCode]\n      });\n     }\n     codes.sort(function fontGetRangesSort(a, b) {\n      return a.fontCharCode - b.fontCharCode;\n     });\n     var ranges = [];\n     var length = codes.length;\n     for (var n = 0; n < length;) {\n      var start = codes[n].fontCharCode;\n      var codeIndices = [codes[n].glyphId];\n      ++n;\n      var end = start;\n      while (n < length && end + 1 === codes[n].fontCharCode) {\n       codeIndices.push(codes[n].glyphId);\n       ++end;\n       ++n;\n       if (end === 0xFFFF) {\n        break;\n       }\n      }\n      ranges.push([\n       start,\n       end,\n       codeIndices\n      ]);\n     }\n     return ranges;\n    }\n    function createCmapTable(glyphs, numGlyphs) {\n     var ranges = getRanges(glyphs, numGlyphs);\n     var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n     var cmap = '\\x00\\x00' + string16(numTables) + '\\x00\\x03' + '\\x00\\x01' + string32(4 + numTables * 8);\n     var i, ii, j, jj;\n     for (i = ranges.length - 1; i >= 0; --i) {\n      if (ranges[i][0] <= 0xFFFF) {\n       break;\n      }\n     }\n     var bmpLength = i + 1;\n     if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n      ranges[i][1] = 0xFFFE;\n     }\n     var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n     var segCount = bmpLength + trailingRangesCount;\n     var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n     var startCount = '';\n     var endCount = '';\n     var idDeltas = '';\n     var idRangeOffsets = '';\n     var glyphsIds = '';\n     var bias = 0;\n     var range, start, end, codes;\n     for (i = 0, ii = bmpLength; i < ii; i++) {\n      range = ranges[i];\n      start = range[0];\n      end = range[1];\n      startCount += string16(start);\n      endCount += string16(end);\n      codes = range[2];\n      var contiguous = true;\n      for (j = 1, jj = codes.length; j < jj; ++j) {\n       if (codes[j] !== codes[j - 1] + 1) {\n        contiguous = false;\n        break;\n       }\n      }\n      if (!contiguous) {\n       var offset = (segCount - i) * 2 + bias * 2;\n       bias += end - start + 1;\n       idDeltas += string16(0);\n       idRangeOffsets += string16(offset);\n       for (j = 0, jj = codes.length; j < jj; ++j) {\n        glyphsIds += string16(codes[j]);\n       }\n      } else {\n       var startCode = codes[0];\n       idDeltas += string16(startCode - start & 0xFFFF);\n       idRangeOffsets += string16(0);\n      }\n     }\n     if (trailingRangesCount > 0) {\n      endCount += '\\xFF\\xFF';\n      startCount += '\\xFF\\xFF';\n      idDeltas += '\\x00\\x01';\n      idRangeOffsets += '\\x00\\x00';\n     }\n     var format314 = '\\x00\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\x00\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\n     var format31012 = '';\n     var header31012 = '';\n     if (numTables > 1) {\n      cmap += '\\x00\\x03' + '\\x00\\x0A' + string32(4 + numTables * 8 + 4 + format314.length);\n      format31012 = '';\n      for (i = 0, ii = ranges.length; i < ii; i++) {\n       range = ranges[i];\n       start = range[0];\n       codes = range[2];\n       var code = codes[0];\n       for (j = 1, jj = codes.length; j < jj; ++j) {\n        if (codes[j] !== codes[j - 1] + 1) {\n         end = range[0] + j - 1;\n         format31012 += string32(start) + string32(end) + string32(code);\n         start = end + 1;\n         code = codes[j];\n        }\n       }\n       format31012 += string32(start) + string32(range[1]) + string32(code);\n      }\n      header31012 = '\\x00\\x0C' + '\\x00\\x00' + string32(format31012.length + 16) + '\\x00\\x00\\x00\\x00' + string32(format31012.length / 12);\n     }\n     return cmap + '\\x00\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\n    }\n    function validateOS2Table(os2) {\n     var stream = new Stream(os2.data);\n     var version = stream.getUint16();\n     stream.getBytes(60);\n     var selection = stream.getUint16();\n     if (version < 4 && selection & 0x0300) {\n      return false;\n     }\n     var firstChar = stream.getUint16();\n     var lastChar = stream.getUint16();\n     if (firstChar > lastChar) {\n      return false;\n     }\n     stream.getBytes(6);\n     var usWinAscent = stream.getUint16();\n     if (usWinAscent === 0) {\n      return false;\n     }\n     os2.data[8] = os2.data[9] = 0;\n     return true;\n    }\n    function createOS2Table(properties, charstrings, override) {\n     override = override || {\n      unitsPerEm: 0,\n      yMax: 0,\n      yMin: 0,\n      ascent: 0,\n      descent: 0\n     };\n     var ulUnicodeRange1 = 0;\n     var ulUnicodeRange2 = 0;\n     var ulUnicodeRange3 = 0;\n     var ulUnicodeRange4 = 0;\n     var firstCharIndex = null;\n     var lastCharIndex = 0;\n     if (charstrings) {\n      for (var code in charstrings) {\n       code |= 0;\n       if (firstCharIndex > code || !firstCharIndex) {\n        firstCharIndex = code;\n       }\n       if (lastCharIndex < code) {\n        lastCharIndex = code;\n       }\n       var position = getUnicodeRangeFor(code);\n       if (position < 32) {\n        ulUnicodeRange1 |= 1 << position;\n       } else if (position < 64) {\n        ulUnicodeRange2 |= 1 << position - 32;\n       } else if (position < 96) {\n        ulUnicodeRange3 |= 1 << position - 64;\n       } else if (position < 123) {\n        ulUnicodeRange4 |= 1 << position - 96;\n       } else {\n        error('Unicode ranges Bits > 123 are reserved for internal usage');\n       }\n      }\n     } else {\n      firstCharIndex = 0;\n      lastCharIndex = 255;\n     }\n     var bbox = properties.bbox || [\n      0,\n      0,\n      0,\n      0\n     ];\n     var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || FONT_IDENTITY_MATRIX)[0];\n     var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n     var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n     var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n     if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n      typoDescent = -typoDescent;\n     }\n     var winAscent = override.yMax || typoAscent;\n     var winDescent = -override.yMin || -typoDescent;\n     return '\\x00\\x03' + '\\x02\\x24' + '\\x01\\xF4' + '\\x00\\x05' + '\\x00\\x00' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x00\\x8C' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x01\\xDF' + '\\x00\\x31' + '\\x01\\x02' + '\\x00\\x00' + '\\x00\\x00\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\x00\\x00\\x00\\x00\\x00\\x00' + string32(ulUnicodeRange1) + string32(ulUnicodeRange2) + string32(ulUnicodeRange3) + string32(ulUnicodeRange4) + '\\x2A\\x32\\x31\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\x00\\x64' + string16(winAscent) + string16(winDescent) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\x00\\x03';\n    }\n    function createPostTable(properties) {\n     var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n     return '\\x00\\x03\\x00\\x00' + string32(angle) + '\\x00\\x00' + '\\x00\\x00' + string32(properties.fixedPitch) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00';\n    }\n    function createNameTable(name, proto) {\n     if (!proto) {\n      proto = [\n       [],\n       []\n      ];\n     }\n     var strings = [\n      proto[0][0] || 'Original licence',\n      proto[0][1] || name,\n      proto[0][2] || 'Unknown',\n      proto[0][3] || 'uniqueID',\n      proto[0][4] || name,\n      proto[0][5] || 'Version 0.11',\n      proto[0][6] || '',\n      proto[0][7] || 'Unknown',\n      proto[0][8] || 'Unknown',\n      proto[0][9] || 'Unknown'\n     ];\n     var stringsUnicode = [];\n     var i, ii, j, jj, str;\n     for (i = 0, ii = strings.length; i < ii; i++) {\n      str = proto[1][i] || strings[i];\n      var strBufUnicode = [];\n      for (j = 0, jj = str.length; j < jj; j++) {\n       strBufUnicode.push(string16(str.charCodeAt(j)));\n      }\n      stringsUnicode.push(strBufUnicode.join(''));\n     }\n     var names = [\n      strings,\n      stringsUnicode\n     ];\n     var platforms = [\n      '\\x00\\x01',\n      '\\x00\\x03'\n     ];\n     var encodings = [\n      '\\x00\\x00',\n      '\\x00\\x01'\n     ];\n     var languages = [\n      '\\x00\\x00',\n      '\\x04\\x09'\n     ];\n     var namesRecordCount = strings.length * platforms.length;\n     var nameTable = '\\x00\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n     var strOffset = 0;\n     for (i = 0, ii = platforms.length; i < ii; i++) {\n      var strs = names[i];\n      for (j = 0, jj = strs.length; j < jj; j++) {\n       str = strs[j];\n       var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n       nameTable += nameRecord;\n       strOffset += str.length;\n      }\n     }\n     nameTable += strings.join('') + stringsUnicode.join('');\n     return nameTable;\n    }\n    Font.prototype = {\n     name: null,\n     font: null,\n     mimetype: null,\n     encoding: null,\n     get renderer() {\n      var renderer = FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n      return shadow(this, 'renderer', renderer);\n     },\n     exportData: function Font_exportData() {\n      var data = {};\n      for (var i in this) {\n       if (this.hasOwnProperty(i)) {\n        data[i] = this[i];\n       }\n      }\n      return data;\n     },\n     checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n      function readTableEntry(file) {\n       var tag = bytesToString(file.getBytes(4));\n       var checksum = file.getInt32() >>> 0;\n       var offset = file.getInt32() >>> 0;\n       var length = file.getInt32() >>> 0;\n       var previousPosition = file.pos;\n       file.pos = file.start ? file.start : 0;\n       file.skip(offset);\n       var data = file.getBytes(length);\n       file.pos = previousPosition;\n       if (tag === 'head') {\n        data[8] = data[9] = data[10] = data[11] = 0;\n        data[17] |= 0x20;\n       }\n       return {\n        tag: tag,\n        checksum: checksum,\n        length: length,\n        offset: offset,\n        data: data\n       };\n      }\n      function readOpenTypeHeader(ttf) {\n       return {\n        version: bytesToString(ttf.getBytes(4)),\n        numTables: ttf.getUint16(),\n        searchRange: ttf.getUint16(),\n        entrySelector: ttf.getUint16(),\n        rangeShift: ttf.getUint16()\n       };\n      }\n      function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\n       if (!cmap) {\n        warn('No cmap table available.');\n        return {\n         platformId: -1,\n         encodingId: -1,\n         mappings: [],\n         hasShortCmap: false\n        };\n       }\n       var segment;\n       var start = (font.start ? font.start : 0) + cmap.offset;\n       font.pos = start;\n       var version = font.getUint16();\n       var numTables = font.getUint16();\n       var potentialTable;\n       var canBreak = false;\n       for (var i = 0; i < numTables; i++) {\n        var platformId = font.getUint16();\n        var encodingId = font.getUint16();\n        var offset = font.getInt32() >>> 0;\n        var useTable = false;\n        if (platformId === 0 && encodingId === 0) {\n         useTable = true;\n        } else if (platformId === 1 && encodingId === 0) {\n         useTable = true;\n        } else if (platformId === 3 && encodingId === 1 && (!isSymbolicFont && hasEncoding || !potentialTable)) {\n         useTable = true;\n         if (!isSymbolicFont) {\n          canBreak = true;\n         }\n        } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n         useTable = true;\n         canBreak = true;\n        }\n        if (useTable) {\n         potentialTable = {\n          platformId: platformId,\n          encodingId: encodingId,\n          offset: offset\n         };\n        }\n        if (canBreak) {\n         break;\n        }\n       }\n       if (potentialTable) {\n        font.pos = start + potentialTable.offset;\n       }\n       if (!potentialTable || font.peekByte() === -1) {\n        warn('Could not find a preferred cmap table.');\n        return {\n         platformId: -1,\n         encodingId: -1,\n         mappings: [],\n         hasShortCmap: false\n        };\n       }\n       var format = font.getUint16();\n       var length = font.getUint16();\n       var language = font.getUint16();\n       var hasShortCmap = false;\n       var mappings = [];\n       var j, glyphId;\n       if (format === 0) {\n        for (j = 0; j < 256; j++) {\n         var index = font.getByte();\n         if (!index) {\n          continue;\n         }\n         mappings.push({\n          charCode: j,\n          glyphId: index\n         });\n        }\n        hasShortCmap = true;\n       } else if (format === 4) {\n        var segCount = font.getUint16() >> 1;\n        font.getBytes(6);\n        var segIndex, segments = [];\n        for (segIndex = 0; segIndex < segCount; segIndex++) {\n         segments.push({ end: font.getUint16() });\n        }\n        font.getUint16();\n        for (segIndex = 0; segIndex < segCount; segIndex++) {\n         segments[segIndex].start = font.getUint16();\n        }\n        for (segIndex = 0; segIndex < segCount; segIndex++) {\n         segments[segIndex].delta = font.getUint16();\n        }\n        var offsetsCount = 0;\n        for (segIndex = 0; segIndex < segCount; segIndex++) {\n         segment = segments[segIndex];\n         var rangeOffset = font.getUint16();\n         if (!rangeOffset) {\n          segment.offsetIndex = -1;\n          continue;\n         }\n         var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n         segment.offsetIndex = offsetIndex;\n         offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n        }\n        var offsets = [];\n        for (j = 0; j < offsetsCount; j++) {\n         offsets.push(font.getUint16());\n        }\n        for (segIndex = 0; segIndex < segCount; segIndex++) {\n         segment = segments[segIndex];\n         start = segment.start;\n         var end = segment.end;\n         var delta = segment.delta;\n         offsetIndex = segment.offsetIndex;\n         for (j = start; j <= end; j++) {\n          if (j === 0xFFFF) {\n           continue;\n          }\n          glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n          glyphId = glyphId + delta & 0xFFFF;\n          if (glyphId === 0) {\n           continue;\n          }\n          mappings.push({\n           charCode: j,\n           glyphId: glyphId\n          });\n         }\n        }\n       } else if (format === 6) {\n        var firstCode = font.getUint16();\n        var entryCount = font.getUint16();\n        for (j = 0; j < entryCount; j++) {\n         glyphId = font.getUint16();\n         var charCode = firstCode + j;\n         mappings.push({\n          charCode: charCode,\n          glyphId: glyphId\n         });\n        }\n       } else {\n        warn('cmap table has unsupported format: ' + format);\n        return {\n         platformId: -1,\n         encodingId: -1,\n         mappings: [],\n         hasShortCmap: false\n        };\n       }\n       mappings.sort(function (a, b) {\n        return a.charCode - b.charCode;\n       });\n       for (i = 1; i < mappings.length; i++) {\n        if (mappings[i - 1].charCode === mappings[i].charCode) {\n         mappings.splice(i, 1);\n         i--;\n        }\n       }\n       return {\n        platformId: potentialTable.platformId,\n        encodingId: potentialTable.encodingId,\n        mappings: mappings,\n        hasShortCmap: hasShortCmap\n       };\n      }\n      function sanitizeMetrics(font, header, metrics, numGlyphs) {\n       if (!header) {\n        if (metrics) {\n         metrics.data = null;\n        }\n        return;\n       }\n       font.pos = (font.start ? font.start : 0) + header.offset;\n       font.pos += header.length - 2;\n       var numOfMetrics = font.getUint16();\n       if (numOfMetrics > numGlyphs) {\n        info('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\n        numOfMetrics = numGlyphs;\n        header.data[34] = (numOfMetrics & 0xff00) >> 8;\n        header.data[35] = numOfMetrics & 0x00ff;\n       }\n       var numOfSidebearings = numGlyphs - numOfMetrics;\n       var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n       if (numMissing > 0) {\n        var entries = new Uint8Array(metrics.length + numMissing * 2);\n        entries.set(metrics.data);\n        metrics.data = entries;\n       }\n      }\n      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n       if (sourceEnd - sourceStart <= 12) {\n        return 0;\n       }\n       var glyf = source.subarray(sourceStart, sourceEnd);\n       var contoursCount = glyf[0] << 8 | glyf[1];\n       if (contoursCount & 0x8000) {\n        dest.set(glyf, destStart);\n        return glyf.length;\n       }\n       var i, j = 10, flagsCount = 0;\n       for (i = 0; i < contoursCount; i++) {\n        var endPoint = glyf[j] << 8 | glyf[j + 1];\n        flagsCount = endPoint + 1;\n        j += 2;\n       }\n       var instructionsStart = j;\n       var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n       j += 2 + instructionsLength;\n       var instructionsEnd = j;\n       var coordinatesLength = 0;\n       for (i = 0; i < flagsCount; i++) {\n        var flag = glyf[j++];\n        if (flag & 0xC0) {\n         glyf[j - 1] = flag & 0x3F;\n        }\n        var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\n        coordinatesLength += xyLength;\n        if (flag & 8) {\n         var repeat = glyf[j++];\n         i += repeat;\n         coordinatesLength += repeat * xyLength;\n        }\n       }\n       if (coordinatesLength === 0) {\n        return 0;\n       }\n       var glyphDataLength = j + coordinatesLength;\n       if (glyphDataLength > glyf.length) {\n        return 0;\n       }\n       if (!hintsValid && instructionsLength > 0) {\n        dest.set(glyf.subarray(0, instructionsStart), destStart);\n        dest.set([\n         0,\n         0\n        ], destStart + instructionsStart);\n        dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n        glyphDataLength -= instructionsLength;\n        if (glyf.length - glyphDataLength > 3) {\n         glyphDataLength = glyphDataLength + 3 & ~3;\n        }\n        return glyphDataLength;\n       }\n       if (glyf.length - glyphDataLength > 3) {\n        glyphDataLength = glyphDataLength + 3 & ~3;\n        dest.set(glyf.subarray(0, glyphDataLength), destStart);\n        return glyphDataLength;\n       }\n       dest.set(glyf, destStart);\n       return glyf.length;\n      }\n      function sanitizeHead(head, numGlyphs, locaLength) {\n       var data = head.data;\n       var version = int32(data[0], data[1], data[2], data[3]);\n       if (version >> 16 !== 1) {\n        info('Attempting to fix invalid version in head table: ' + version);\n        data[0] = 0;\n        data[1] = 1;\n        data[2] = 0;\n        data[3] = 0;\n       }\n       var indexToLocFormat = int16(data[50], data[51]);\n       if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n        info('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\n        var numGlyphsPlusOne = numGlyphs + 1;\n        if (locaLength === numGlyphsPlusOne << 1) {\n         data[50] = 0;\n         data[51] = 0;\n        } else if (locaLength === numGlyphsPlusOne << 2) {\n         data[50] = 0;\n         data[51] = 1;\n        } else {\n         warn('Could not fix indexToLocFormat: ' + indexToLocFormat);\n        }\n       }\n      }\n      function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry) {\n       var itemSize, itemDecode, itemEncode;\n       if (isGlyphLocationsLong) {\n        itemSize = 4;\n        itemDecode = function fontItemDecodeLong(data, offset) {\n         return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n        };\n        itemEncode = function fontItemEncodeLong(data, offset, value) {\n         data[offset] = value >>> 24 & 0xFF;\n         data[offset + 1] = value >> 16 & 0xFF;\n         data[offset + 2] = value >> 8 & 0xFF;\n         data[offset + 3] = value & 0xFF;\n        };\n       } else {\n        itemSize = 2;\n        itemDecode = function fontItemDecode(data, offset) {\n         return data[offset] << 9 | data[offset + 1] << 1;\n        };\n        itemEncode = function fontItemEncode(data, offset, value) {\n         data[offset] = value >> 9 & 0xFF;\n         data[offset + 1] = value >> 1 & 0xFF;\n        };\n       }\n       var locaData = loca.data;\n       var locaDataSize = itemSize * (1 + numGlyphs);\n       if (locaData.length !== locaDataSize) {\n        locaData = new Uint8Array(locaDataSize);\n        locaData.set(loca.data.subarray(0, locaDataSize));\n        loca.data = locaData;\n       }\n       var oldGlyfData = glyf.data;\n       var oldGlyfDataLength = oldGlyfData.length;\n       var newGlyfData = new Uint8Array(oldGlyfDataLength);\n       var startOffset = itemDecode(locaData, 0);\n       var writeOffset = 0;\n       var missingGlyphData = Object.create(null);\n       itemEncode(locaData, 0, writeOffset);\n       var i, j;\n       for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n        var endOffset = itemDecode(locaData, j);\n        if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\n         endOffset = oldGlyfDataLength;\n        }\n        if (endOffset > oldGlyfDataLength) {\n         itemEncode(locaData, j, writeOffset);\n         startOffset = endOffset;\n         continue;\n        }\n        if (startOffset === endOffset) {\n         missingGlyphData[i] = true;\n        }\n        var newLength = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\n        writeOffset += newLength;\n        itemEncode(locaData, j, writeOffset);\n        startOffset = endOffset;\n       }\n       if (writeOffset === 0) {\n        var simpleGlyph = new Uint8Array([\n         0,\n         1,\n         0,\n         0,\n         0,\n         0,\n         0,\n         0,\n         0,\n         0,\n         0,\n         0,\n         0,\n         0,\n         49,\n         0\n        ]);\n        for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n         itemEncode(locaData, j, simpleGlyph.length);\n        }\n        glyf.data = simpleGlyph;\n        return missingGlyphData;\n       }\n       if (dupFirstEntry) {\n        var firstEntryLength = itemDecode(locaData, itemSize);\n        if (newGlyfData.length > firstEntryLength + writeOffset) {\n         glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n        } else {\n         glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n         glyf.data.set(newGlyfData.subarray(0, writeOffset));\n        }\n        glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n        itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n       } else {\n        glyf.data = newGlyfData.subarray(0, writeOffset);\n       }\n       return missingGlyphData;\n      }\n      function readPostScriptTable(post, properties, maxpNumGlyphs) {\n       var start = (font.start ? font.start : 0) + post.offset;\n       font.pos = start;\n       var length = post.length, end = start + length;\n       var version = font.getInt32();\n       font.getBytes(28);\n       var glyphNames;\n       var valid = true;\n       var i;\n       switch (version) {\n       case 0x00010000:\n        glyphNames = MacStandardGlyphOrdering;\n        break;\n       case 0x00020000:\n        var numGlyphs = font.getUint16();\n        if (numGlyphs !== maxpNumGlyphs) {\n         valid = false;\n         break;\n        }\n        var glyphNameIndexes = [];\n        for (i = 0; i < numGlyphs; ++i) {\n         var index = font.getUint16();\n         if (index >= 32768) {\n          valid = false;\n          break;\n         }\n         glyphNameIndexes.push(index);\n        }\n        if (!valid) {\n         break;\n        }\n        var customNames = [];\n        var strBuf = [];\n        while (font.pos < end) {\n         var stringLength = font.getByte();\n         strBuf.length = stringLength;\n         for (i = 0; i < stringLength; ++i) {\n          strBuf[i] = String.fromCharCode(font.getByte());\n         }\n         customNames.push(strBuf.join(''));\n        }\n        glyphNames = [];\n        for (i = 0; i < numGlyphs; ++i) {\n         var j = glyphNameIndexes[i];\n         if (j < 258) {\n          glyphNames.push(MacStandardGlyphOrdering[j]);\n          continue;\n         }\n         glyphNames.push(customNames[j - 258]);\n        }\n        break;\n       case 0x00030000:\n        break;\n       default:\n        warn('Unknown/unsupported post table version ' + version);\n        valid = false;\n        if (properties.defaultEncoding) {\n         glyphNames = properties.defaultEncoding;\n        }\n        break;\n       }\n       properties.glyphNames = glyphNames;\n       return valid;\n      }\n      function readNameTable(nameTable) {\n       var start = (font.start ? font.start : 0) + nameTable.offset;\n       font.pos = start;\n       var names = [\n        [],\n        []\n       ];\n       var length = nameTable.length, end = start + length;\n       var format = font.getUint16();\n       var FORMAT_0_HEADER_LENGTH = 6;\n       if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n        return names;\n       }\n       var numRecords = font.getUint16();\n       var stringsStart = font.getUint16();\n       var records = [];\n       var NAME_RECORD_LENGTH = 12;\n       var i, ii;\n       for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n        var r = {\n         platform: font.getUint16(),\n         encoding: font.getUint16(),\n         language: font.getUint16(),\n         name: font.getUint16(),\n         length: font.getUint16(),\n         offset: font.getUint16()\n        };\n        if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n         records.push(r);\n        }\n       }\n       for (i = 0, ii = records.length; i < ii; i++) {\n        var record = records[i];\n        if (record.length <= 0) {\n         continue;\n        }\n        var pos = start + stringsStart + record.offset;\n        if (pos + record.length > end) {\n         continue;\n        }\n        font.pos = pos;\n        var nameIndex = record.name;\n        if (record.encoding) {\n         var str = '';\n         for (var j = 0, jj = record.length; j < jj; j += 2) {\n          str += String.fromCharCode(font.getUint16());\n         }\n         names[1][nameIndex] = str;\n        } else {\n         names[0][nameIndex] = bytesToString(font.getBytes(record.length));\n        }\n       }\n       return names;\n      }\n      var TTOpsStackDeltas = [\n       0,\n       0,\n       0,\n       0,\n       0,\n       0,\n       0,\n       0,\n       -2,\n       -2,\n       -2,\n       -2,\n       0,\n       0,\n       -2,\n       -5,\n       -1,\n       -1,\n       -1,\n       -1,\n       -1,\n       -1,\n       -1,\n       -1,\n       0,\n       0,\n       -1,\n       0,\n       -1,\n       -1,\n       -1,\n       -1,\n       1,\n       -1,\n       -999,\n       0,\n       1,\n       0,\n       -1,\n       -2,\n       0,\n       -1,\n       -2,\n       -1,\n       -1,\n       0,\n       -1,\n       -1,\n       0,\n       0,\n       -999,\n       -999,\n       -1,\n       -1,\n       -1,\n       -1,\n       -2,\n       -999,\n       -2,\n       -2,\n       -999,\n       0,\n       -2,\n       -2,\n       0,\n       0,\n       -2,\n       0,\n       -2,\n       0,\n       0,\n       0,\n       -2,\n       -1,\n       -1,\n       1,\n       1,\n       0,\n       0,\n       -1,\n       -1,\n       -1,\n       -1,\n       -1,\n       -1,\n       -1,\n       0,\n       0,\n       -1,\n       0,\n       -1,\n       -1,\n       0,\n       -999,\n       -1,\n       -1,\n       -1,\n       -1,\n       -1,\n       -1,\n       0,\n       0,\n       0,\n       0,\n       0,\n       0,\n       0,\n       0,\n       0,\n       0,\n       0,\n       0,\n       -2,\n       -999,\n       -999,\n       -999,\n       -999,\n       -999,\n       -1,\n       -1,\n       -2,\n       -2,\n       0,\n       0,\n       0,\n       0,\n       -1,\n       -1,\n       -999,\n       -2,\n       -2,\n       0,\n       0,\n       -1,\n       -2,\n       -2,\n       0,\n       0,\n       0,\n       -1,\n       -1,\n       -1,\n       -2\n      ];\n      function sanitizeTTProgram(table, ttContext) {\n       var data = table.data;\n       var i = 0, j, n, b, funcId, pc, lastEndf = 0, lastDeff = 0;\n       var stack = [];\n       var callstack = [];\n       var functionsCalled = [];\n       var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n       var inFDEF = false, ifLevel = 0, inELSE = 0;\n       for (var ii = data.length; i < ii;) {\n        var op = data[i++];\n        if (op === 0x40) {\n         n = data[i++];\n         if (inFDEF || inELSE) {\n          i += n;\n         } else {\n          for (j = 0; j < n; j++) {\n           stack.push(data[i++]);\n          }\n         }\n        } else if (op === 0x41) {\n         n = data[i++];\n         if (inFDEF || inELSE) {\n          i += n * 2;\n         } else {\n          for (j = 0; j < n; j++) {\n           b = data[i++];\n           stack.push(b << 8 | data[i++]);\n          }\n         }\n        } else if ((op & 0xF8) === 0xB0) {\n         n = op - 0xB0 + 1;\n         if (inFDEF || inELSE) {\n          i += n;\n         } else {\n          for (j = 0; j < n; j++) {\n           stack.push(data[i++]);\n          }\n         }\n        } else if ((op & 0xF8) === 0xB8) {\n         n = op - 0xB8 + 1;\n         if (inFDEF || inELSE) {\n          i += n * 2;\n         } else {\n          for (j = 0; j < n; j++) {\n           b = data[i++];\n           stack.push(b << 8 | data[i++]);\n          }\n         }\n        } else if (op === 0x2B && !tooComplexToFollowFunctions) {\n         if (!inFDEF && !inELSE) {\n          funcId = stack[stack.length - 1];\n          ttContext.functionsUsed[funcId] = true;\n          if (funcId in ttContext.functionsStackDeltas) {\n           stack.length += ttContext.functionsStackDeltas[funcId];\n          } else if (funcId in ttContext.functionsDefined && functionsCalled.indexOf(funcId) < 0) {\n           callstack.push({\n            data: data,\n            i: i,\n            stackTop: stack.length - 1\n           });\n           functionsCalled.push(funcId);\n           pc = ttContext.functionsDefined[funcId];\n           if (!pc) {\n            warn('TT: CALL non-existent function');\n            ttContext.hintsValid = false;\n            return;\n           }\n           data = pc.data;\n           i = pc.i;\n          }\n         }\n        } else if (op === 0x2C && !tooComplexToFollowFunctions) {\n         if (inFDEF || inELSE) {\n          warn('TT: nested FDEFs not allowed');\n          tooComplexToFollowFunctions = true;\n         }\n         inFDEF = true;\n         lastDeff = i;\n         funcId = stack.pop();\n         ttContext.functionsDefined[funcId] = {\n          data: data,\n          i: i\n         };\n        } else if (op === 0x2D) {\n         if (inFDEF) {\n          inFDEF = false;\n          lastEndf = i;\n         } else {\n          pc = callstack.pop();\n          if (!pc) {\n           warn('TT: ENDF bad stack');\n           ttContext.hintsValid = false;\n           return;\n          }\n          funcId = functionsCalled.pop();\n          data = pc.data;\n          i = pc.i;\n          ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n         }\n        } else if (op === 0x89) {\n         if (inFDEF || inELSE) {\n          warn('TT: nested IDEFs not allowed');\n          tooComplexToFollowFunctions = true;\n         }\n         inFDEF = true;\n         lastDeff = i;\n        } else if (op === 0x58) {\n         ++ifLevel;\n        } else if (op === 0x1B) {\n         inELSE = ifLevel;\n        } else if (op === 0x59) {\n         if (inELSE === ifLevel) {\n          inELSE = 0;\n         }\n         --ifLevel;\n        } else if (op === 0x1C) {\n         if (!inFDEF && !inELSE) {\n          var offset = stack[stack.length - 1];\n          if (offset > 0) {\n           i += offset - 1;\n          }\n         }\n        }\n        if (!inFDEF && !inELSE) {\n         var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n         if (op >= 0x71 && op <= 0x75) {\n          n = stack.pop();\n          if (!isNaN(n)) {\n           stackDelta = -n * 2;\n          }\n         }\n         while (stackDelta < 0 && stack.length > 0) {\n          stack.pop();\n          stackDelta++;\n         }\n         while (stackDelta > 0) {\n          stack.push(NaN);\n          stackDelta--;\n         }\n        }\n       }\n       ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n       var content = [data];\n       if (i > data.length) {\n        content.push(new Uint8Array(i - data.length));\n       }\n       if (lastDeff > lastEndf) {\n        warn('TT: complementing a missing function tail');\n        content.push(new Uint8Array([\n         0x22,\n         0x2D\n        ]));\n       }\n       foldTTTable(table, content);\n      }\n      function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n       if (ttContext.tooComplexToFollowFunctions) {\n        return;\n       }\n       if (ttContext.functionsDefined.length > maxFunctionDefs) {\n        warn('TT: more functions defined than expected');\n        ttContext.hintsValid = false;\n        return;\n       }\n       for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n        if (j > maxFunctionDefs) {\n         warn('TT: invalid function id: ' + j);\n         ttContext.hintsValid = false;\n         return;\n        }\n        if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n         warn('TT: undefined function: ' + j);\n         ttContext.hintsValid = false;\n         return;\n        }\n       }\n      }\n      function foldTTTable(table, content) {\n       if (content.length > 1) {\n        var newLength = 0;\n        var j, jj;\n        for (j = 0, jj = content.length; j < jj; j++) {\n         newLength += content[j].length;\n        }\n        newLength = newLength + 3 & ~3;\n        var result = new Uint8Array(newLength);\n        var pos = 0;\n        for (j = 0, jj = content.length; j < jj; j++) {\n         result.set(content[j], pos);\n         pos += content[j].length;\n        }\n        table.data = result;\n        table.length = newLength;\n       }\n      }\n      function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n       var ttContext = {\n        functionsDefined: [],\n        functionsUsed: [],\n        functionsStackDeltas: [],\n        tooComplexToFollowFunctions: false,\n        hintsValid: true\n       };\n       if (fpgm) {\n        sanitizeTTProgram(fpgm, ttContext);\n       }\n       if (prep) {\n        sanitizeTTProgram(prep, ttContext);\n       }\n       if (fpgm) {\n        checkInvalidFunctions(ttContext, maxFunctionDefs);\n       }\n       if (cvt && cvt.length & 1) {\n        var cvtData = new Uint8Array(cvt.length + 1);\n        cvtData.set(cvt.data);\n        cvt.data = cvtData;\n       }\n       return ttContext.hintsValid;\n      }\n      font = new Stream(new Uint8Array(font.getBytes()));\n      var VALID_TABLES = [\n       'OS/2',\n       'cmap',\n       'head',\n       'hhea',\n       'hmtx',\n       'maxp',\n       'name',\n       'post',\n       'loca',\n       'glyf',\n       'fpgm',\n       'prep',\n       'cvt ',\n       'CFF '\n      ];\n      var header = readOpenTypeHeader(font);\n      var numTables = header.numTables;\n      var cff, cffFile;\n      var tables = Object.create(null);\n      tables['OS/2'] = null;\n      tables['cmap'] = null;\n      tables['head'] = null;\n      tables['hhea'] = null;\n      tables['hmtx'] = null;\n      tables['maxp'] = null;\n      tables['name'] = null;\n      tables['post'] = null;\n      var table;\n      for (var i = 0; i < numTables; i++) {\n       table = readTableEntry(font);\n       if (VALID_TABLES.indexOf(table.tag) < 0) {\n        continue;\n       }\n       if (table.length === 0) {\n        continue;\n       }\n       tables[table.tag] = table;\n      }\n      var isTrueType = !tables['CFF '];\n      if (!isTrueType) {\n       if (header.version === 'OTTO' && !properties.composite || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\n        cffFile = new Stream(tables['CFF '].data);\n        cff = new CFFFont(cffFile, properties);\n        adjustWidths(properties);\n        return this.convert(name, cff, properties);\n       }\n       delete tables['glyf'];\n       delete tables['loca'];\n       delete tables['fpgm'];\n       delete tables['prep'];\n       delete tables['cvt '];\n       this.isOpenType = true;\n      } else {\n       if (!tables['loca']) {\n        error('Required \"loca\" table is not found');\n       }\n       if (!tables['glyf']) {\n        warn('Required \"glyf\" table is not found -- trying to recover.');\n        tables['glyf'] = {\n         tag: 'glyf',\n         data: new Uint8Array(0)\n        };\n       }\n       this.isOpenType = false;\n      }\n      if (!tables['maxp']) {\n       error('Required \"maxp\" table is not found');\n      }\n      font.pos = (font.start || 0) + tables['maxp'].offset;\n      var version = font.getInt32();\n      var numGlyphs = font.getUint16();\n      var maxFunctionDefs = 0;\n      if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n       font.pos += 8;\n       var maxZones = font.getUint16();\n       if (maxZones > 2) {\n        tables['maxp'].data[14] = 0;\n        tables['maxp'].data[15] = 2;\n       }\n       font.pos += 4;\n       maxFunctionDefs = font.getUint16();\n      }\n      var dupFirstEntry = false;\n      if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\u0000') {\n       dupFirstEntry = true;\n       numGlyphs++;\n       tables['maxp'].data[4] = numGlyphs >> 8;\n       tables['maxp'].data[5] = numGlyphs & 255;\n      }\n      var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\n      if (!hintsValid) {\n       delete tables['fpgm'];\n       delete tables['prep'];\n       delete tables['cvt '];\n      }\n      sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\n      if (!tables['head']) {\n       error('Required \"head\" table is not found');\n      }\n      sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\n      var missingGlyphs = Object.create(null);\n      if (isTrueType) {\n       var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\n       missingGlyphs = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry);\n      }\n      if (!tables['hhea']) {\n       error('Required \"hhea\" table is not found');\n      }\n      if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\n       tables['hhea'].data[10] = 0xFF;\n       tables['hhea'].data[11] = 0xFF;\n      }\n      var metricsOverride = {\n       unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\n       yMax: int16(tables['head'].data[42], tables['head'].data[43]),\n       yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\n       ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\n       descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\n      };\n      this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n      this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n      if (tables['post']) {\n       var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\n       if (!valid) {\n        tables['post'] = null;\n       }\n      }\n      var charCodeToGlyphId = [], charCode;\n      var toUnicode = properties.toUnicode, widths = properties.widths;\n      var skipToUnicode = toUnicode instanceof IdentityToUnicodeMap || toUnicode.length === 0x10000;\n      function hasGlyph(glyphId, charCode, widthCode) {\n       if (!missingGlyphs[glyphId]) {\n        return true;\n       }\n       if (!skipToUnicode && charCode >= 0 && toUnicode.has(charCode)) {\n        return true;\n       }\n       if (widths && widthCode >= 0 && isNum(widths[widthCode])) {\n        return true;\n       }\n       return false;\n      }\n      if (properties.composite) {\n       var cidToGidMap = properties.cidToGidMap || [];\n       var isCidToGidMapEmpty = cidToGidMap.length === 0;\n       properties.cMap.forEach(function (charCode, cid) {\n        assert(cid <= 0xffff, 'Max size of CID is 65,535');\n        var glyphId = -1;\n        if (isCidToGidMapEmpty) {\n         glyphId = cid;\n        } else if (cidToGidMap[cid] !== undefined) {\n         glyphId = cidToGidMap[cid];\n        }\n        if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId, charCode, cid)) {\n         charCodeToGlyphId[charCode] = glyphId;\n        }\n       });\n       if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\n        charCodeToGlyphId[0] = numGlyphs - 1;\n       }\n      } else {\n       var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\n       var cmapPlatformId = cmapTable.platformId;\n       var cmapEncodingId = cmapTable.encodingId;\n       var cmapMappings = cmapTable.mappings;\n       var cmapMappingsLength = cmapMappings.length;\n       if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!getEncoding(properties.baseEncodingName)) {\n        var baseEncoding = [];\n        if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\n         baseEncoding = getEncoding(properties.baseEncodingName);\n        }\n        var glyphsUnicodeMap = getGlyphsUnicode();\n        for (charCode = 0; charCode < 256; charCode++) {\n         var glyphName, standardGlyphName;\n         if (this.differences && charCode in this.differences) {\n          glyphName = this.differences[charCode];\n         } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\n          glyphName = baseEncoding[charCode];\n         } else {\n          glyphName = StandardEncoding[charCode];\n         }\n         if (!glyphName) {\n          continue;\n         }\n         standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n         var unicodeOrCharCode, isUnicode = false;\n         if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n          unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n          isUnicode = true;\n         } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n          unicodeOrCharCode = MacRomanEncoding.indexOf(standardGlyphName);\n         }\n         var found = false;\n         for (i = 0; i < cmapMappingsLength; ++i) {\n          if (cmapMappings[i].charCode !== unicodeOrCharCode) {\n           continue;\n          }\n          var code = isUnicode ? charCode : unicodeOrCharCode;\n          if (hasGlyph(cmapMappings[i].glyphId, code, -1)) {\n           charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n           found = true;\n           break;\n          }\n         }\n         if (!found && properties.glyphNames) {\n          var glyphId = properties.glyphNames.indexOf(glyphName);\n          if (glyphId === -1 && standardGlyphName !== glyphName) {\n           glyphId = properties.glyphNames.indexOf(standardGlyphName);\n          }\n          if (glyphId > 0 && hasGlyph(glyphId, -1, -1)) {\n           charCodeToGlyphId[charCode] = glyphId;\n           found = true;\n          }\n         }\n         if (!found) {\n          charCodeToGlyphId[charCode] = 0;\n         }\n        }\n       } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n        for (i = 0; i < cmapMappingsLength; ++i) {\n         charCodeToGlyphId[cmapMappings[i].charCode] = cmapMappings[i].glyphId;\n        }\n       } else {\n        for (i = 0; i < cmapMappingsLength; ++i) {\n         charCode = cmapMappings[i].charCode & 0xFF;\n         charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n        }\n       }\n      }\n      if (charCodeToGlyphId.length === 0) {\n       charCodeToGlyphId[0] = 0;\n      }\n      var newMapping = adjustMapping(charCodeToGlyphId, properties);\n      this.toFontChar = newMapping.toFontChar;\n      tables['cmap'] = {\n       tag: 'cmap',\n       data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\n      };\n      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n       tables['OS/2'] = {\n        tag: 'OS/2',\n        data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n       };\n      }\n      if (!tables['post']) {\n       tables['post'] = {\n        tag: 'post',\n        data: createPostTable(properties)\n       };\n      }\n      if (!isTrueType) {\n       try {\n        cffFile = new Stream(tables['CFF '].data);\n        var parser = new CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n        cff = parser.parse();\n        var compiler = new CFFCompiler(cff);\n        tables['CFF '].data = compiler.compile();\n       } catch (e) {\n        warn('Failed to compile font ' + properties.loadedName);\n       }\n      }\n      if (!tables['name']) {\n       tables['name'] = {\n        tag: 'name',\n        data: createNameTable(this.name)\n       };\n      } else {\n       var namePrototype = readNameTable(tables['name']);\n       tables['name'].data = createNameTable(name, namePrototype);\n      }\n      var builder = new OpenTypeFileBuilder(header.version);\n      for (var tableTag in tables) {\n       builder.addTable(tableTag, tables[tableTag].data);\n      }\n      return builder.toArray();\n     },\n     convert: function Font_convert(fontName, font, properties) {\n      properties.fixedPitch = false;\n      if (properties.builtInEncoding) {\n       adjustToUnicode(properties, properties.builtInEncoding);\n      }\n      var mapping = font.getGlyphMapping(properties);\n      var newMapping = adjustMapping(mapping, properties);\n      this.toFontChar = newMapping.toFontChar;\n      var numGlyphs = font.numGlyphs;\n      function getCharCodes(charCodeToGlyphId, glyphId) {\n       var charCodes = null;\n       for (var charCode in charCodeToGlyphId) {\n        if (glyphId === charCodeToGlyphId[charCode]) {\n         if (!charCodes) {\n          charCodes = [];\n         }\n         charCodes.push(charCode | 0);\n        }\n       }\n       return charCodes;\n      }\n      function createCharCode(charCodeToGlyphId, glyphId) {\n       for (var charCode in charCodeToGlyphId) {\n        if (glyphId === charCodeToGlyphId[charCode]) {\n         return charCode | 0;\n        }\n       }\n       newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n       return newMapping.nextAvailableFontCharCode++;\n      }\n      var seacs = font.seacs;\n      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n       var matrix = properties.fontMatrix || FONT_IDENTITY_MATRIX;\n       var charset = font.getCharset();\n       var seacMap = Object.create(null);\n       for (var glyphId in seacs) {\n        glyphId |= 0;\n        var seac = seacs[glyphId];\n        var baseGlyphName = StandardEncoding[seac[2]];\n        var accentGlyphName = StandardEncoding[seac[3]];\n        var baseGlyphId = charset.indexOf(baseGlyphName);\n        var accentGlyphId = charset.indexOf(accentGlyphName);\n        if (baseGlyphId < 0 || accentGlyphId < 0) {\n         continue;\n        }\n        var accentOffset = {\n         x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n         y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n        };\n        var charCodes = getCharCodes(mapping, glyphId);\n        if (!charCodes) {\n         continue;\n        }\n        for (var i = 0, ii = charCodes.length; i < ii; i++) {\n         var charCode = charCodes[i];\n         var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n         var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n         var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n         seacMap[charCode] = {\n          baseFontCharCode: baseFontCharCode,\n          accentFontCharCode: accentFontCharCode,\n          accentOffset: accentOffset\n         };\n        }\n       }\n       properties.seacMap = seacMap;\n      }\n      var unitsPerEm = 1 / (properties.fontMatrix || FONT_IDENTITY_MATRIX)[0];\n      var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n      builder.addTable('CFF ', font.data);\n      builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\n      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n      builder.addTable('head', '\\x00\\x01\\x00\\x00' + '\\x00\\x00\\x10\\x00' + '\\x00\\x00\\x00\\x00' + '\\x5F\\x0F\\x3C\\xF5' + '\\x00\\x00' + safeString16(unitsPerEm) + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00' + safeString16(properties.descent) + '\\x0F\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\x00\\x11' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00');\n      builder.addTable('hhea', '\\x00\\x01\\x00\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\x00\\x00' + '\\xFF\\xFF' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + string16(numGlyphs));\n      builder.addTable('hmtx', function fontFieldsHmtx() {\n       var charstrings = font.charstrings;\n       var cffWidths = font.cff ? font.cff.widths : null;\n       var hmtx = '\\x00\\x00\\x00\\x00';\n       for (var i = 1, ii = numGlyphs; i < ii; i++) {\n        var width = 0;\n        if (charstrings) {\n         var charstring = charstrings[i - 1];\n         width = 'width' in charstring ? charstring.width : 0;\n        } else if (cffWidths) {\n         width = Math.ceil(cffWidths[i] || 0);\n        }\n        hmtx += string16(width) + string16(0);\n       }\n       return hmtx;\n      }());\n      builder.addTable('maxp', '\\x00\\x00\\x50\\x00' + string16(numGlyphs));\n      builder.addTable('name', createNameTable(fontName));\n      builder.addTable('post', createPostTable(properties));\n      return builder.toArray();\n     },\n     get spaceWidth() {\n      if ('_shadowWidth' in this) {\n       return this._shadowWidth;\n      }\n      var possibleSpaceReplacements = [\n       'space',\n       'minus',\n       'one',\n       'i',\n       'I'\n      ];\n      var width;\n      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n       var glyphName = possibleSpaceReplacements[i];\n       if (glyphName in this.widths) {\n        width = this.widths[glyphName];\n        break;\n       }\n       var glyphsUnicodeMap = getGlyphsUnicode();\n       var glyphUnicode = glyphsUnicodeMap[glyphName];\n       var charcode = 0;\n       if (this.composite) {\n        if (this.cMap.contains(glyphUnicode)) {\n         charcode = this.cMap.lookup(glyphUnicode);\n        }\n       }\n       if (!charcode && this.toUnicode) {\n        charcode = this.toUnicode.charCodeOf(glyphUnicode);\n       }\n       if (charcode <= 0) {\n        charcode = glyphUnicode;\n       }\n       width = this.widths[charcode];\n       if (width) {\n        break;\n       }\n      }\n      width = width || this.defaultWidth;\n      this._shadowWidth = width;\n      return width;\n     },\n     charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n      var fontCharCode, width, operatorListId;\n      var widthCode = charcode;\n      if (this.cMap && this.cMap.contains(charcode)) {\n       widthCode = this.cMap.lookup(charcode);\n      }\n      width = this.widths[widthCode];\n      width = isNum(width) ? width : this.defaultWidth;\n      var vmetric = this.vmetrics && this.vmetrics[widthCode];\n      var unicode = this.toUnicode.get(charcode) || charcode;\n      if (typeof unicode === 'number') {\n       unicode = String.fromCharCode(unicode);\n      }\n      var isInFont = charcode in this.toFontChar;\n      fontCharCode = this.toFontChar[charcode] || charcode;\n      if (this.missingFile) {\n       fontCharCode = mapSpecialUnicodeValues(fontCharCode);\n      }\n      if (this.isType3Font) {\n       operatorListId = fontCharCode;\n      }\n      var accent = null;\n      if (this.seacMap && this.seacMap[charcode]) {\n       isInFont = true;\n       var seac = this.seacMap[charcode];\n       fontCharCode = seac.baseFontCharCode;\n       accent = {\n        fontChar: String.fromCharCode(seac.accentFontCharCode),\n        offset: seac.accentOffset\n       };\n      }\n      var fontChar = String.fromCharCode(fontCharCode);\n      var glyph = this.glyphCache[charcode];\n      if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n       glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n       this.glyphCache[charcode] = glyph;\n      }\n      return glyph;\n     },\n     charsToGlyphs: function Font_charsToGlyphs(chars) {\n      var charsCache = this.charsCache;\n      var glyphs, glyph, charcode;\n      if (charsCache) {\n       glyphs = charsCache[chars];\n       if (glyphs) {\n        return glyphs;\n       }\n      }\n      if (!charsCache) {\n       charsCache = this.charsCache = Object.create(null);\n      }\n      glyphs = [];\n      var charsCacheKey = chars;\n      var i = 0, ii;\n      if (this.cMap) {\n       var c = Object.create(null);\n       while (i < chars.length) {\n        this.cMap.readCharCode(chars, i, c);\n        charcode = c.charcode;\n        var length = c.length;\n        i += length;\n        var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n        glyph = this.charToGlyph(charcode, isSpace);\n        glyphs.push(glyph);\n       }\n      } else {\n       for (i = 0, ii = chars.length; i < ii; ++i) {\n        charcode = chars.charCodeAt(i);\n        glyph = this.charToGlyph(charcode, charcode === 0x20);\n        glyphs.push(glyph);\n       }\n      }\n      return charsCache[charsCacheKey] = glyphs;\n     }\n    };\n    return Font;\n   }();\n   var ErrorFont = function ErrorFontClosure() {\n    function ErrorFont(error) {\n     this.error = error;\n     this.loadedName = 'g_font_error';\n     this.loading = false;\n    }\n    ErrorFont.prototype = {\n     charsToGlyphs: function ErrorFont_charsToGlyphs() {\n      return [];\n     },\n     exportData: function ErrorFont_exportData() {\n      return { error: this.error };\n     }\n    };\n    return ErrorFont;\n   }();\n   function type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n    var charCodeToGlyphId = Object.create(null);\n    var glyphId, charCode, baseEncoding;\n    var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n    if (properties.baseEncodingName) {\n     baseEncoding = getEncoding(properties.baseEncodingName);\n     for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n       charCodeToGlyphId[charCode] = glyphId;\n      } else {\n       charCodeToGlyphId[charCode] = 0;\n      }\n     }\n    } else if (isSymbolicFont) {\n     for (charCode in builtInEncoding) {\n      charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n     }\n    } else {\n     baseEncoding = StandardEncoding;\n     for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n       charCodeToGlyphId[charCode] = glyphId;\n      } else {\n       charCodeToGlyphId[charCode] = 0;\n      }\n     }\n    }\n    var differences = properties.differences, glyphsUnicodeMap;\n    if (differences) {\n     for (charCode in differences) {\n      var glyphName = differences[charCode];\n      glyphId = glyphNames.indexOf(glyphName);\n      if (glyphId === -1) {\n       if (!glyphsUnicodeMap) {\n        glyphsUnicodeMap = getGlyphsUnicode();\n       }\n       var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n       if (standardGlyphName !== glyphName) {\n        glyphId = glyphNames.indexOf(standardGlyphName);\n       }\n      }\n      if (glyphId >= 0) {\n       charCodeToGlyphId[charCode] = glyphId;\n      } else {\n       charCodeToGlyphId[charCode] = 0;\n      }\n     }\n    }\n    return charCodeToGlyphId;\n   }\n   var Type1Font = function Type1FontClosure() {\n    function findBlock(streamBytes, signature, startIndex) {\n     var streamBytesLength = streamBytes.length;\n     var signatureLength = signature.length;\n     var scanLength = streamBytesLength - signatureLength;\n     var i = startIndex, j, found = false;\n     while (i < scanLength) {\n      j = 0;\n      while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n       j++;\n      }\n      if (j >= signatureLength) {\n       i += j;\n       while (i < streamBytesLength && isSpace(streamBytes[i])) {\n        i++;\n       }\n       found = true;\n       break;\n      }\n      i++;\n     }\n     return {\n      found: found,\n      length: i\n     };\n    }\n    function getHeaderBlock(stream, suggestedLength) {\n     var EEXEC_SIGNATURE = [\n      0x65,\n      0x65,\n      0x78,\n      0x65,\n      0x63\n     ];\n     var streamStartPos = stream.pos;\n     var headerBytes, headerBytesLength, block;\n     try {\n      headerBytes = stream.getBytes(suggestedLength);\n      headerBytesLength = headerBytes.length;\n     } catch (ex) {\n      if (ex instanceof MissingDataException) {\n       throw ex;\n      }\n     }\n     if (headerBytesLength === suggestedLength) {\n      block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n      if (block.found && block.length === suggestedLength) {\n       return {\n        stream: new Stream(headerBytes),\n        length: suggestedLength\n       };\n      }\n     }\n     warn('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n     stream.pos = streamStartPos;\n     var SCAN_BLOCK_LENGTH = 2048;\n     var actualLength;\n     while (true) {\n      var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n      block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n      if (block.length === 0) {\n       break;\n      }\n      stream.pos += block.length;\n      if (block.found) {\n       actualLength = stream.pos - streamStartPos;\n       break;\n      }\n     }\n     stream.pos = streamStartPos;\n     if (actualLength) {\n      return {\n       stream: new Stream(stream.getBytes(actualLength)),\n       length: actualLength\n      };\n     }\n     warn('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n     return {\n      stream: new Stream(stream.getBytes(suggestedLength)),\n      length: suggestedLength\n     };\n    }\n    function getEexecBlock(stream, suggestedLength) {\n     var eexecBytes = stream.getBytes();\n     return {\n      stream: new Stream(eexecBytes),\n      length: eexecBytes.length\n     };\n    }\n    function Type1Font(name, file, properties) {\n     var PFB_HEADER_SIZE = 6;\n     var headerBlockLength = properties.length1;\n     var eexecBlockLength = properties.length2;\n     var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n     var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n     if (pfbHeaderPresent) {\n      file.skip(PFB_HEADER_SIZE);\n      headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n     }\n     var headerBlock = getHeaderBlock(file, headerBlockLength);\n     headerBlockLength = headerBlock.length;\n     var headerBlockParser = new Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n     headerBlockParser.extractFontHeader(properties);\n     if (pfbHeaderPresent) {\n      pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n      eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n     }\n     var eexecBlock = getEexecBlock(file, eexecBlockLength);\n     eexecBlockLength = eexecBlock.length;\n     var eexecBlockParser = new Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n     var data = eexecBlockParser.extractFontProgram();\n     for (var info in data.properties) {\n      properties[info] = data.properties[info];\n     }\n     var charstrings = data.charstrings;\n     var type2Charstrings = this.getType2Charstrings(charstrings);\n     var subrs = this.getType2Subrs(data.subrs);\n     this.charstrings = charstrings;\n     this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n     this.seacs = this.getSeacs(data.charstrings);\n    }\n    Type1Font.prototype = {\n     get numGlyphs() {\n      return this.charstrings.length + 1;\n     },\n     getCharset: function Type1Font_getCharset() {\n      var charset = ['.notdef'];\n      var charstrings = this.charstrings;\n      for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n       charset.push(charstrings[glyphId].glyphName);\n      }\n      return charset;\n     },\n     getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n      var charstrings = this.charstrings;\n      var glyphNames = ['.notdef'], glyphId;\n      for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n       glyphNames.push(charstrings[glyphId].glyphName);\n      }\n      var encoding = properties.builtInEncoding;\n      if (encoding) {\n       var builtInEncoding = Object.create(null);\n       for (var charCode in encoding) {\n        glyphId = glyphNames.indexOf(encoding[charCode]);\n        if (glyphId >= 0) {\n         builtInEncoding[charCode] = glyphId;\n        }\n       }\n      }\n      return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n     },\n     getSeacs: function Type1Font_getSeacs(charstrings) {\n      var i, ii;\n      var seacMap = [];\n      for (i = 0, ii = charstrings.length; i < ii; i++) {\n       var charstring = charstrings[i];\n       if (charstring.seac) {\n        seacMap[i + 1] = charstring.seac;\n       }\n      }\n      return seacMap;\n     },\n     getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n      var type2Charstrings = [];\n      for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n       type2Charstrings.push(type1Charstrings[i].charstring);\n      }\n      return type2Charstrings;\n     },\n     getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n      var bias = 0;\n      var count = type1Subrs.length;\n      if (count < 1133) {\n       bias = 107;\n      } else if (count < 33769) {\n       bias = 1131;\n      } else {\n       bias = 32768;\n      }\n      var type2Subrs = [];\n      var i;\n      for (i = 0; i < bias; i++) {\n       type2Subrs.push([0x0B]);\n      }\n      for (i = 0; i < count; i++) {\n       type2Subrs.push(type1Subrs[i]);\n      }\n      return type2Subrs;\n     },\n     wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n      var cff = new CFF();\n      cff.header = new CFFHeader(1, 0, 4, 4);\n      cff.names = [name];\n      var topDict = new CFFTopDict();\n      topDict.setByName('version', 391);\n      topDict.setByName('Notice', 392);\n      topDict.setByName('FullName', 393);\n      topDict.setByName('FamilyName', 394);\n      topDict.setByName('Weight', 395);\n      topDict.setByName('Encoding', null);\n      topDict.setByName('FontMatrix', properties.fontMatrix);\n      topDict.setByName('FontBBox', properties.bbox);\n      topDict.setByName('charset', null);\n      topDict.setByName('CharStrings', null);\n      topDict.setByName('Private', null);\n      cff.topDict = topDict;\n      var strings = new CFFStrings();\n      strings.add('Version 0.11');\n      strings.add('See original notice');\n      strings.add(name);\n      strings.add(name);\n      strings.add('Medium');\n      cff.strings = strings;\n      cff.globalSubrIndex = new CFFIndex();\n      var count = glyphs.length;\n      var charsetArray = [0];\n      var i, ii;\n      for (i = 0; i < count; i++) {\n       var index = CFFStandardStrings.indexOf(charstrings[i].glyphName);\n       if (index === -1) {\n        index = 0;\n       }\n       charsetArray.push(index >> 8 & 0xff, index & 0xff);\n      }\n      cff.charset = new CFFCharset(false, 0, [], charsetArray);\n      var charStringsIndex = new CFFIndex();\n      charStringsIndex.add([\n       0x8B,\n       0x0E\n      ]);\n      for (i = 0; i < count; i++) {\n       var glyph = glyphs[i];\n       if (glyph.length === 0) {\n        charStringsIndex.add([\n         0x8B,\n         0x0E\n        ]);\n        continue;\n       }\n       charStringsIndex.add(glyph);\n      }\n      cff.charStrings = charStringsIndex;\n      var privateDict = new CFFPrivateDict();\n      privateDict.setByName('Subrs', null);\n      var fields = [\n       'BlueValues',\n       'OtherBlues',\n       'FamilyBlues',\n       'FamilyOtherBlues',\n       'StemSnapH',\n       'StemSnapV',\n       'BlueShift',\n       'BlueFuzz',\n       'BlueScale',\n       'LanguageGroup',\n       'ExpansionFactor',\n       'ForceBold',\n       'StdHW',\n       'StdVW'\n      ];\n      for (i = 0, ii = fields.length; i < ii; i++) {\n       var field = fields[i];\n       if (!(field in properties.privateData)) {\n        continue;\n       }\n       var value = properties.privateData[field];\n       if (isArray(value)) {\n        for (var j = value.length - 1; j > 0; j--) {\n         value[j] -= value[j - 1];\n        }\n       }\n       privateDict.setByName(field, value);\n      }\n      cff.topDict.privateDict = privateDict;\n      var subrIndex = new CFFIndex();\n      for (i = 0, ii = subrs.length; i < ii; i++) {\n       subrIndex.add(subrs[i]);\n      }\n      privateDict.subrsIndex = subrIndex;\n      var compiler = new CFFCompiler(cff);\n      return compiler.compile();\n     }\n    };\n    return Type1Font;\n   }();\n   var CFFFont = function CFFFontClosure() {\n    function CFFFont(file, properties) {\n     this.properties = properties;\n     var parser = new CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n     this.cff = parser.parse();\n     var compiler = new CFFCompiler(this.cff);\n     this.seacs = this.cff.seacs;\n     try {\n      this.data = compiler.compile();\n     } catch (e) {\n      warn('Failed to compile font ' + properties.loadedName);\n      this.data = file;\n     }\n    }\n    CFFFont.prototype = {\n     get numGlyphs() {\n      return this.cff.charStrings.count;\n     },\n     getCharset: function CFFFont_getCharset() {\n      return this.cff.charset.charset;\n     },\n     getGlyphMapping: function CFFFont_getGlyphMapping() {\n      var cff = this.cff;\n      var properties = this.properties;\n      var charsets = cff.charset.charset;\n      var charCodeToGlyphId;\n      var glyphId;\n      if (properties.composite) {\n       charCodeToGlyphId = Object.create(null);\n       if (cff.isCIDFont) {\n        for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n         var cid = charsets[glyphId];\n         var charCode = properties.cMap.charCodeOf(cid);\n         charCodeToGlyphId[charCode] = glyphId;\n        }\n       } else {\n        for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n         charCodeToGlyphId[glyphId] = glyphId;\n        }\n       }\n       return charCodeToGlyphId;\n      }\n      var encoding = cff.encoding ? cff.encoding.encoding : null;\n      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n      return charCodeToGlyphId;\n     }\n    };\n    return CFFFont;\n   }();\n   (function checkSeacSupport() {\n    if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\n     SEAC_ANALYSIS_ENABLED = true;\n    }\n   }());\n   (function checkChromeWindows() {\n    if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\n     SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n    }\n   }());\n   exports.ErrorFont = ErrorFont;\n   exports.Font = Font;\n   exports.FontFlags = FontFlags;\n   exports.IdentityToUnicodeMap = IdentityToUnicodeMap;\n   exports.ToUnicodeMap = ToUnicodeMap;\n   exports.getFontType = getFontType;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsCoreImage = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreColorSpace, root.pdfjsCoreStream, root.pdfjsCoreJpx);\n  }(this, function (exports, sharedUtil, corePrimitives, coreColorSpace, coreStream, coreJpx) {\n   var ImageKind = sharedUtil.ImageKind;\n   var assert = sharedUtil.assert;\n   var error = sharedUtil.error;\n   var info = sharedUtil.info;\n   var isArray = sharedUtil.isArray;\n   var warn = sharedUtil.warn;\n   var Name = corePrimitives.Name;\n   var isStream = corePrimitives.isStream;\n   var ColorSpace = coreColorSpace.ColorSpace;\n   var DecodeStream = coreStream.DecodeStream;\n   var JpegStream = coreStream.JpegStream;\n   var JpxImage = coreJpx.JpxImage;\n   var PDFImage = function PDFImageClosure() {\n    function handleImageData(image, nativeDecoder) {\n     if (nativeDecoder && nativeDecoder.canDecode(image)) {\n      return nativeDecoder.decode(image);\n     }\n     return Promise.resolve(image);\n    }\n    function decodeAndClamp(value, addend, coefficient, max) {\n     value = addend + value * coefficient;\n     return value < 0 ? 0 : value > max ? max : value;\n    }\n    function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n     var length = w2 * h2;\n     var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n     var xRatio = w1 / w2;\n     var yRatio = h1 / h2;\n     var i, j, py, newIndex = 0, oldIndex;\n     var xScaled = new Uint16Array(w2);\n     var w1Scanline = w1;\n     for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio);\n     }\n     for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n       oldIndex = py + xScaled[j];\n       dest[newIndex++] = src[oldIndex];\n      }\n     }\n     return dest;\n    }\n    function PDFImage(xref, res, image, inline, smask, mask, isMask) {\n     this.image = image;\n     var dict = image.dict;\n     if (dict.has('Filter')) {\n      var filter = dict.get('Filter').name;\n      if (filter === 'JPXDecode') {\n       var jpxImage = new JpxImage();\n       jpxImage.parseImageProperties(image.stream);\n       image.stream.reset();\n       image.bitsPerComponent = jpxImage.bitsPerComponent;\n       image.numComps = jpxImage.componentsCount;\n      } else if (filter === 'JBIG2Decode') {\n       image.bitsPerComponent = 1;\n       image.numComps = 1;\n      }\n     }\n     this.width = dict.get('Width', 'W');\n     this.height = dict.get('Height', 'H');\n     if (this.width < 1 || this.height < 1) {\n      error('Invalid image width: ' + this.width + ' or height: ' + this.height);\n     }\n     this.interpolate = dict.get('Interpolate', 'I') || false;\n     this.imageMask = dict.get('ImageMask', 'IM') || false;\n     this.matte = dict.get('Matte') || false;\n     var bitsPerComponent = image.bitsPerComponent;\n     if (!bitsPerComponent) {\n      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n      if (!bitsPerComponent) {\n       if (this.imageMask) {\n        bitsPerComponent = 1;\n       } else {\n        error('Bits per component missing in image: ' + this.imageMask);\n       }\n      }\n     }\n     this.bpc = bitsPerComponent;\n     if (!this.imageMask) {\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      if (!colorSpace) {\n       info('JPX images (which do not require color spaces)');\n       switch (image.numComps) {\n       case 1:\n        colorSpace = Name.get('DeviceGray');\n        break;\n       case 3:\n        colorSpace = Name.get('DeviceRGB');\n        break;\n       case 4:\n        colorSpace = Name.get('DeviceCMYK');\n        break;\n       default:\n        error('JPX images with ' + this.numComps + ' color components not supported.');\n       }\n      }\n      this.colorSpace = ColorSpace.parse(colorSpace, xref, res);\n      this.numComps = this.colorSpace.numComps;\n     }\n     this.decode = dict.getArray('Decode', 'D');\n     this.needsDecode = false;\n     if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !ColorSpace.isDefaultDecode(this.decode, 1))) {\n      this.needsDecode = true;\n      var max = (1 << bitsPerComponent) - 1;\n      this.decodeCoefficients = [];\n      this.decodeAddends = [];\n      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n       var dmin = this.decode[i];\n       var dmax = this.decode[i + 1];\n       this.decodeCoefficients[j] = dmax - dmin;\n       this.decodeAddends[j] = max * dmin;\n      }\n     }\n     if (smask) {\n      this.smask = new PDFImage(xref, res, smask, false);\n     } else if (mask) {\n      if (isStream(mask)) {\n       var maskDict = mask.dict, imageMask = maskDict.get('ImageMask', 'IM');\n       if (!imageMask) {\n        warn('Ignoring /Mask in image without /ImageMask.');\n       } else {\n        this.mask = new PDFImage(xref, res, mask, false, null, null, true);\n       }\n      } else {\n       this.mask = mask;\n      }\n     }\n    }\n    PDFImage.buildImage = function PDFImage_buildImage(handler, xref, res, image, inline, nativeDecoder) {\n     var imagePromise = handleImageData(image, nativeDecoder);\n     var smaskPromise;\n     var maskPromise;\n     var smask = image.dict.get('SMask');\n     var mask = image.dict.get('Mask');\n     if (smask) {\n      smaskPromise = handleImageData(smask, nativeDecoder);\n      maskPromise = Promise.resolve(null);\n     } else {\n      smaskPromise = Promise.resolve(null);\n      if (mask) {\n       if (isStream(mask)) {\n        maskPromise = handleImageData(mask, nativeDecoder);\n       } else if (isArray(mask)) {\n        maskPromise = Promise.resolve(mask);\n       } else {\n        warn('Unsupported mask format.');\n        maskPromise = Promise.resolve(null);\n       }\n      } else {\n       maskPromise = Promise.resolve(null);\n      }\n     }\n     return Promise.all([\n      imagePromise,\n      smaskPromise,\n      maskPromise\n     ]).then(function (results) {\n      var imageData = results[0];\n      var smaskData = results[1];\n      var maskData = results[2];\n      return new PDFImage(xref, res, imageData, inline, smaskData, maskData);\n     });\n    };\n    PDFImage.createMask = function PDFImage_createMask(imgArray, width, height, imageIsFromDecodeStream, inverseDecode) {\n     var computedLength = (width + 7 >> 3) * height;\n     var actualLength = imgArray.byteLength;\n     var haveFullData = computedLength === actualLength;\n     var data, i;\n     if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n      data = imgArray;\n     } else if (!inverseDecode) {\n      data = new Uint8Array(actualLength);\n      data.set(imgArray);\n     } else {\n      data = new Uint8Array(computedLength);\n      data.set(imgArray);\n      for (i = actualLength; i < computedLength; i++) {\n       data[i] = 0xff;\n      }\n     }\n     if (inverseDecode) {\n      for (i = 0; i < actualLength; i++) {\n       data[i] = ~data[i];\n      }\n     }\n     return {\n      data: data,\n      width: width,\n      height: height\n     };\n    };\n    PDFImage.prototype = {\n     get drawWidth() {\n      return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n     },\n     get drawHeight() {\n      return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n     },\n     decodeBuffer: function PDFImage_decodeBuffer(buffer) {\n      var bpc = this.bpc;\n      var numComps = this.numComps;\n      var decodeAddends = this.decodeAddends;\n      var decodeCoefficients = this.decodeCoefficients;\n      var max = (1 << bpc) - 1;\n      var i, ii;\n      if (bpc === 1) {\n       for (i = 0, ii = buffer.length; i < ii; i++) {\n        buffer[i] = +!buffer[i];\n       }\n       return;\n      }\n      var index = 0;\n      for (i = 0, ii = this.width * this.height; i < ii; i++) {\n       for (var j = 0; j < numComps; j++) {\n        buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n        index++;\n       }\n      }\n     },\n     getComponents: function PDFImage_getComponents(buffer) {\n      var bpc = this.bpc;\n      if (bpc === 8) {\n       return buffer;\n      }\n      var width = this.width;\n      var height = this.height;\n      var numComps = this.numComps;\n      var length = width * height * numComps;\n      var bufferPos = 0;\n      var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n      var rowComps = width * numComps;\n      var max = (1 << bpc) - 1;\n      var i = 0, ii, buf;\n      if (bpc === 1) {\n       var mask, loop1End, loop2End;\n       for (var j = 0; j < height; j++) {\n        loop1End = i + (rowComps & ~7);\n        loop2End = i + rowComps;\n        while (i < loop1End) {\n         buf = buffer[bufferPos++];\n         output[i] = buf >> 7 & 1;\n         output[i + 1] = buf >> 6 & 1;\n         output[i + 2] = buf >> 5 & 1;\n         output[i + 3] = buf >> 4 & 1;\n         output[i + 4] = buf >> 3 & 1;\n         output[i + 5] = buf >> 2 & 1;\n         output[i + 6] = buf >> 1 & 1;\n         output[i + 7] = buf & 1;\n         i += 8;\n        }\n        if (i < loop2End) {\n         buf = buffer[bufferPos++];\n         mask = 128;\n         while (i < loop2End) {\n          output[i++] = +!!(buf & mask);\n          mask >>= 1;\n         }\n        }\n       }\n      } else {\n       var bits = 0;\n       buf = 0;\n       for (i = 0, ii = length; i < ii; ++i) {\n        if (i % rowComps === 0) {\n         buf = 0;\n         bits = 0;\n        }\n        while (bits < bpc) {\n         buf = buf << 8 | buffer[bufferPos++];\n         bits += 8;\n        }\n        var remainingBits = bits - bpc;\n        var value = buf >> remainingBits;\n        output[i] = value < 0 ? 0 : value > max ? max : value;\n        buf = buf & (1 << remainingBits) - 1;\n        bits = remainingBits;\n       }\n      }\n      return output;\n     },\n     fillOpacity: function PDFImage_fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n      var smask = this.smask;\n      var mask = this.mask;\n      var alphaBuf, sw, sh, i, ii, j;\n      if (smask) {\n       sw = smask.width;\n       sh = smask.height;\n       alphaBuf = new Uint8Array(sw * sh);\n       smask.fillGrayBuffer(alphaBuf);\n       if (sw !== width || sh !== height) {\n        alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n       }\n      } else if (mask) {\n       if (mask instanceof PDFImage) {\n        sw = mask.width;\n        sh = mask.height;\n        alphaBuf = new Uint8Array(sw * sh);\n        mask.numComps = 1;\n        mask.fillGrayBuffer(alphaBuf);\n        for (i = 0, ii = sw * sh; i < ii; ++i) {\n         alphaBuf[i] = 255 - alphaBuf[i];\n        }\n        if (sw !== width || sh !== height) {\n         alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n        }\n       } else if (isArray(mask)) {\n        alphaBuf = new Uint8Array(width * height);\n        var numComps = this.numComps;\n        for (i = 0, ii = width * height; i < ii; ++i) {\n         var opacity = 0;\n         var imageOffset = i * numComps;\n         for (j = 0; j < numComps; ++j) {\n          var color = image[imageOffset + j];\n          var maskOffset = j * 2;\n          if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n           opacity = 255;\n           break;\n          }\n         }\n         alphaBuf[i] = opacity;\n        }\n       } else {\n        error('Unknown mask format.');\n       }\n      }\n      if (alphaBuf) {\n       for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n        rgbaBuf[j] = alphaBuf[i];\n       }\n      } else {\n       for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n        rgbaBuf[j] = 255;\n       }\n      }\n     },\n     undoPreblend: function PDFImage_undoPreblend(buffer, width, height) {\n      var matte = this.smask && this.smask.matte;\n      if (!matte) {\n       return;\n      }\n      var matteRgb = this.colorSpace.getRgb(matte, 0);\n      var matteR = matteRgb[0];\n      var matteG = matteRgb[1];\n      var matteB = matteRgb[2];\n      var length = width * height * 4;\n      var r, g, b;\n      for (var i = 0; i < length; i += 4) {\n       var alpha = buffer[i + 3];\n       if (alpha === 0) {\n        buffer[i] = 255;\n        buffer[i + 1] = 255;\n        buffer[i + 2] = 255;\n        continue;\n       }\n       var k = 255 / alpha;\n       r = (buffer[i] - matteR) * k + matteR;\n       g = (buffer[i + 1] - matteG) * k + matteG;\n       b = (buffer[i + 2] - matteB) * k + matteB;\n       buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n       buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n       buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n      }\n     },\n     createImageData: function PDFImage_createImageData(forceRGBA) {\n      var drawWidth = this.drawWidth;\n      var drawHeight = this.drawHeight;\n      var imgData = {\n       width: drawWidth,\n       height: drawHeight\n      };\n      var numComps = this.numComps;\n      var originalWidth = this.width;\n      var originalHeight = this.height;\n      var bpc = this.bpc;\n      var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n      var imgArray;\n      if (!forceRGBA) {\n       var kind;\n       if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n        kind = ImageKind.GRAYSCALE_1BPP;\n       } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\n        kind = ImageKind.RGB_24BPP;\n       }\n       if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n        imgData.kind = kind;\n        imgArray = this.getImageBytes(originalHeight * rowBytes);\n        if (this.image instanceof DecodeStream) {\n         imgData.data = imgArray;\n        } else {\n         var newArray = new Uint8Array(imgArray.length);\n         newArray.set(imgArray);\n         imgData.data = newArray;\n        }\n        if (this.needsDecode) {\n         assert(kind === ImageKind.GRAYSCALE_1BPP);\n         var buffer = imgData.data;\n         for (var i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] ^= 0xff;\n         }\n        }\n        return imgData;\n       }\n       if (this.image instanceof JpegStream && !this.smask && !this.mask && (this.colorSpace.name === 'DeviceGray' || this.colorSpace.name === 'DeviceRGB' || this.colorSpace.name === 'DeviceCMYK')) {\n        imgData.kind = ImageKind.RGB_24BPP;\n        imgData.data = this.getImageBytes(originalHeight * rowBytes, drawWidth, drawHeight, true);\n        return imgData;\n       }\n      }\n      imgArray = this.getImageBytes(originalHeight * rowBytes);\n      var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n      var comps = this.getComponents(imgArray);\n      var alpha01, maybeUndoPreblend;\n      if (!forceRGBA && !this.smask && !this.mask) {\n       imgData.kind = ImageKind.RGB_24BPP;\n       imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n       alpha01 = 0;\n       maybeUndoPreblend = false;\n      } else {\n       imgData.kind = ImageKind.RGBA_32BPP;\n       imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n       alpha01 = 1;\n       maybeUndoPreblend = true;\n       this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n      }\n      if (this.needsDecode) {\n       this.decodeBuffer(comps);\n      }\n      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n      if (maybeUndoPreblend) {\n       this.undoPreblend(imgData.data, drawWidth, actualHeight);\n      }\n      return imgData;\n     },\n     fillGrayBuffer: function PDFImage_fillGrayBuffer(buffer) {\n      var numComps = this.numComps;\n      if (numComps !== 1) {\n       error('Reading gray scale from a color image: ' + numComps);\n      }\n      var width = this.width;\n      var height = this.height;\n      var bpc = this.bpc;\n      var rowBytes = width * numComps * bpc + 7 >> 3;\n      var imgArray = this.getImageBytes(height * rowBytes);\n      var comps = this.getComponents(imgArray);\n      var i, length;\n      if (bpc === 1) {\n       length = width * height;\n       if (this.needsDecode) {\n        for (i = 0; i < length; ++i) {\n         buffer[i] = comps[i] - 1 & 255;\n        }\n       } else {\n        for (i = 0; i < length; ++i) {\n         buffer[i] = -comps[i] & 255;\n        }\n       }\n       return;\n      }\n      if (this.needsDecode) {\n       this.decodeBuffer(comps);\n      }\n      length = width * height;\n      var scale = 255 / ((1 << bpc) - 1);\n      for (i = 0; i < length; ++i) {\n       buffer[i] = scale * comps[i] | 0;\n      }\n     },\n     getImageBytes: function PDFImage_getImageBytes(length, drawWidth, drawHeight, forceRGB) {\n      this.image.reset();\n      this.image.drawWidth = drawWidth || this.width;\n      this.image.drawHeight = drawHeight || this.height;\n      this.image.forceRGB = !!forceRGB;\n      return this.image.getBytes(length);\n     }\n    };\n    return PDFImage;\n   }();\n   exports.PDFImage = PDFImage;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsCoreObj = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreCrypto, root.pdfjsCoreParser, root.pdfjsCoreChunkedStream, root.pdfjsCoreColorSpace);\n  }(this, function (exports, sharedUtil, corePrimitives, coreCrypto, coreParser, coreChunkedStream, coreColorSpace) {\n   var InvalidPDFException = sharedUtil.InvalidPDFException;\n   var MissingDataException = sharedUtil.MissingDataException;\n   var XRefParseException = sharedUtil.XRefParseException;\n   var assert = sharedUtil.assert;\n   var bytesToString = sharedUtil.bytesToString;\n   var createPromiseCapability = sharedUtil.createPromiseCapability;\n   var error = sharedUtil.error;\n   var info = sharedUtil.info;\n   var isArray = sharedUtil.isArray;\n   var isBool = sharedUtil.isBool;\n   var isInt = sharedUtil.isInt;\n   var isString = sharedUtil.isString;\n   var shadow = sharedUtil.shadow;\n   var stringToPDFString = sharedUtil.stringToPDFString;\n   var stringToUTF8String = sharedUtil.stringToUTF8String;\n   var warn = sharedUtil.warn;\n   var createValidAbsoluteUrl = sharedUtil.createValidAbsoluteUrl;\n   var Util = sharedUtil.Util;\n   var Ref = corePrimitives.Ref;\n   var RefSet = corePrimitives.RefSet;\n   var RefSetCache = corePrimitives.RefSetCache;\n   var isName = corePrimitives.isName;\n   var isCmd = corePrimitives.isCmd;\n   var isDict = corePrimitives.isDict;\n   var isRef = corePrimitives.isRef;\n   var isRefsEqual = corePrimitives.isRefsEqual;\n   var isStream = corePrimitives.isStream;\n   var CipherTransformFactory = coreCrypto.CipherTransformFactory;\n   var Lexer = coreParser.Lexer;\n   var Parser = coreParser.Parser;\n   var ChunkedStream = coreChunkedStream.ChunkedStream;\n   var ColorSpace = coreColorSpace.ColorSpace;\n   var Catalog = function CatalogClosure() {\n    function Catalog(pdfManager, xref, pageFactory) {\n     this.pdfManager = pdfManager;\n     this.xref = xref;\n     this.catDict = xref.getCatalogObj();\n     this.fontCache = new RefSetCache();\n     assert(isDict(this.catDict), 'catalog object is not a dictionary');\n     this.pageFactory = pageFactory;\n     this.pagePromises = [];\n    }\n    Catalog.prototype = {\n     get metadata() {\n      var streamRef = this.catDict.getRaw('Metadata');\n      if (!isRef(streamRef)) {\n       return shadow(this, 'metadata', null);\n      }\n      var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\n      var stream = this.xref.fetch(streamRef, !encryptMetadata);\n      var metadata;\n      if (stream && isDict(stream.dict)) {\n       var type = stream.dict.get('Type');\n       var subtype = stream.dict.get('Subtype');\n       if (isName(type, 'Metadata') && isName(subtype, 'XML')) {\n        try {\n         metadata = stringToUTF8String(bytesToString(stream.getBytes()));\n        } catch (e) {\n         info('Skipping invalid metadata.');\n        }\n       }\n      }\n      return shadow(this, 'metadata', metadata);\n     },\n     get toplevelPagesDict() {\n      var pagesObj = this.catDict.get('Pages');\n      assert(isDict(pagesObj), 'invalid top-level pages dictionary');\n      return shadow(this, 'toplevelPagesDict', pagesObj);\n     },\n     get documentOutline() {\n      var obj = null;\n      try {\n       obj = this.readDocumentOutline();\n      } catch (ex) {\n       if (ex instanceof MissingDataException) {\n        throw ex;\n       }\n       warn('Unable to read document outline');\n      }\n      return shadow(this, 'documentOutline', obj);\n     },\n     readDocumentOutline: function Catalog_readDocumentOutline() {\n      var obj = this.catDict.get('Outlines');\n      if (!isDict(obj)) {\n       return null;\n      }\n      obj = obj.getRaw('First');\n      if (!isRef(obj)) {\n       return null;\n      }\n      var root = { items: [] };\n      var queue = [{\n        obj: obj,\n        parent: root\n       }];\n      var processed = new RefSet();\n      processed.put(obj);\n      var xref = this.xref, blackColor = new Uint8Array(3);\n      while (queue.length > 0) {\n       var i = queue.shift();\n       var outlineDict = xref.fetchIfRef(i.obj);\n       if (outlineDict === null) {\n        continue;\n       }\n       assert(outlineDict.has('Title'), 'Invalid outline item');\n       var data = {\n        url: null,\n        dest: null\n       };\n       Catalog.parseDestDictionary({\n        destDict: outlineDict,\n        resultObj: data,\n        docBaseUrl: this.pdfManager.docBaseUrl\n       });\n       var title = outlineDict.get('Title');\n       var flags = outlineDict.get('F') || 0;\n       var color = outlineDict.getArray('C'), rgbColor = blackColor;\n       if (isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n        rgbColor = ColorSpace.singletons.rgb.getRgb(color, 0);\n       }\n       var outlineItem = {\n        dest: data.dest,\n        url: data.url,\n        unsafeUrl: data.unsafeUrl,\n        newWindow: data.newWindow,\n        title: stringToPDFString(title),\n        color: rgbColor,\n        count: outlineDict.get('Count'),\n        bold: !!(flags & 2),\n        italic: !!(flags & 1),\n        items: []\n       };\n       i.parent.items.push(outlineItem);\n       obj = outlineDict.getRaw('First');\n       if (isRef(obj) && !processed.has(obj)) {\n        queue.push({\n         obj: obj,\n         parent: outlineItem\n        });\n        processed.put(obj);\n       }\n       obj = outlineDict.getRaw('Next');\n       if (isRef(obj) && !processed.has(obj)) {\n        queue.push({\n         obj: obj,\n         parent: i.parent\n        });\n        processed.put(obj);\n       }\n      }\n      return root.items.length > 0 ? root.items : null;\n     },\n     get numPages() {\n      var obj = this.toplevelPagesDict.get('Count');\n      assert(isInt(obj), 'page count in top level pages object is not an integer');\n      return shadow(this, 'num', obj);\n     },\n     get destinations() {\n      function fetchDestination(dest) {\n       return isDict(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dests = {}, nameTreeRef, nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n       nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n       nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n       obj = nameDictionaryRef;\n       obj.forEach(function catalogForEach(key, value) {\n        if (!value) {\n         return;\n        }\n        dests[key] = fetchDestination(value);\n       });\n      }\n      if (nameTreeRef) {\n       var nameTree = new NameTree(nameTreeRef, xref);\n       var names = nameTree.getAll();\n       for (var name in names) {\n        dests[name] = fetchDestination(names[name]);\n       }\n      }\n      return shadow(this, 'destinations', dests);\n     },\n     getDestination: function Catalog_getDestination(destinationId) {\n      function fetchDestination(dest) {\n       return isDict(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dest = null, nameTreeRef, nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n       nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n       nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n       var value = nameDictionaryRef.get(destinationId);\n       if (value) {\n        dest = fetchDestination(value);\n       }\n      }\n      if (nameTreeRef) {\n       var nameTree = new NameTree(nameTreeRef, xref);\n       dest = fetchDestination(nameTree.get(destinationId));\n      }\n      return dest;\n     },\n     get pageLabels() {\n      var obj = null;\n      try {\n       obj = this.readPageLabels();\n      } catch (ex) {\n       if (ex instanceof MissingDataException) {\n        throw ex;\n       }\n       warn('Unable to read page labels.');\n      }\n      return shadow(this, 'pageLabels', obj);\n     },\n     readPageLabels: function Catalog_readPageLabels() {\n      var obj = this.catDict.getRaw('PageLabels');\n      if (!obj) {\n       return null;\n      }\n      var pageLabels = new Array(this.numPages);\n      var style = null;\n      var prefix = '';\n      var numberTree = new NumberTree(obj, this.xref);\n      var nums = numberTree.getAll();\n      var currentLabel = '', currentIndex = 1;\n      for (var i = 0, ii = this.numPages; i < ii; i++) {\n       if (i in nums) {\n        var labelDict = nums[i];\n        assert(isDict(labelDict), 'The PageLabel is not a dictionary.');\n        var type = labelDict.get('Type');\n        assert(!type || isName(type, 'PageLabel'), 'Invalid type in PageLabel dictionary.');\n        var s = labelDict.get('S');\n        assert(!s || isName(s), 'Invalid style in PageLabel dictionary.');\n        style = s ? s.name : null;\n        var p = labelDict.get('P');\n        assert(!p || isString(p), 'Invalid prefix in PageLabel dictionary.');\n        prefix = p ? stringToPDFString(p) : '';\n        var st = labelDict.get('St');\n        assert(!st || isInt(st) && st >= 1, 'Invalid start in PageLabel dictionary.');\n        currentIndex = st || 1;\n       }\n       switch (style) {\n       case 'D':\n        currentLabel = currentIndex;\n        break;\n       case 'R':\n       case 'r':\n        currentLabel = Util.toRoman(currentIndex, style === 'r');\n        break;\n       case 'A':\n       case 'a':\n        var LIMIT = 26;\n        var A_UPPER_CASE = 0x41, A_LOWER_CASE = 0x61;\n        var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\n        var letterIndex = currentIndex - 1;\n        var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n        var charBuf = [];\n        for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n         charBuf.push(character);\n        }\n        currentLabel = charBuf.join('');\n        break;\n       default:\n        assert(!style, 'Invalid style \"' + style + '\" in PageLabel dictionary.');\n       }\n       pageLabels[i] = prefix + currentLabel;\n       currentLabel = '';\n       currentIndex++;\n      }\n      return pageLabels;\n     },\n     get attachments() {\n      var xref = this.xref;\n      var attachments = null, nameTreeRef;\n      var obj = this.catDict.get('Names');\n      if (obj) {\n       nameTreeRef = obj.getRaw('EmbeddedFiles');\n      }\n      if (nameTreeRef) {\n       var nameTree = new NameTree(nameTreeRef, xref);\n       var names = nameTree.getAll();\n       for (var name in names) {\n        var fs = new FileSpec(names[name], xref);\n        if (!attachments) {\n         attachments = Object.create(null);\n        }\n        attachments[stringToPDFString(name)] = fs.serializable;\n       }\n      }\n      return shadow(this, 'attachments', attachments);\n     },\n     get javaScript() {\n      var xref = this.xref;\n      var obj = this.catDict.get('Names');\n      var javaScript = [];\n      function appendIfJavaScriptDict(jsDict) {\n       var type = jsDict.get('S');\n       if (!isName(type, 'JavaScript')) {\n        return;\n       }\n       var js = jsDict.get('JS');\n       if (isStream(js)) {\n        js = bytesToString(js.getBytes());\n       } else if (!isString(js)) {\n        return;\n       }\n       javaScript.push(stringToPDFString(js));\n      }\n      if (obj && obj.has('JavaScript')) {\n       var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n       var names = nameTree.getAll();\n       for (var name in names) {\n        var jsDict = names[name];\n        if (isDict(jsDict)) {\n         appendIfJavaScriptDict(jsDict);\n        }\n       }\n      }\n      var openactionDict = this.catDict.get('OpenAction');\n      if (isDict(openactionDict, 'Action')) {\n       var actionType = openactionDict.get('S');\n       if (isName(actionType, 'Named')) {\n        var action = openactionDict.get('N');\n        if (isName(action, 'Print')) {\n         javaScript.push('print({});');\n        }\n       } else {\n        appendIfJavaScriptDict(openactionDict);\n       }\n      }\n      return shadow(this, 'javaScript', javaScript);\n     },\n     cleanup: function Catalog_cleanup() {\n      var promises = [];\n      this.fontCache.forEach(function (promise) {\n       promises.push(promise);\n      });\n      return Promise.all(promises).then(function (translatedFonts) {\n       for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n        var font = translatedFonts[i].dict;\n        delete font.translated;\n       }\n       this.fontCache.clear();\n      }.bind(this));\n     },\n     getPage: function Catalog_getPage(pageIndex) {\n      if (!(pageIndex in this.pagePromises)) {\n       this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (a) {\n        var dict = a[0];\n        var ref = a[1];\n        return this.pageFactory.createPage(pageIndex, dict, ref, this.fontCache);\n       }.bind(this));\n      }\n      return this.pagePromises[pageIndex];\n     },\n     getPageDict: function Catalog_getPageDict(pageIndex) {\n      var capability = createPromiseCapability();\n      var nodesToVisit = [this.catDict.getRaw('Pages')];\n      var currentPageIndex = 0;\n      var xref = this.xref;\n      var checkAllKids = false;\n      function next() {\n       while (nodesToVisit.length) {\n        var currentNode = nodesToVisit.pop();\n        if (isRef(currentNode)) {\n         xref.fetchAsync(currentNode).then(function (obj) {\n          if (isDict(obj, 'Page') || isDict(obj) && !obj.has('Kids')) {\n           if (pageIndex === currentPageIndex) {\n            capability.resolve([\n             obj,\n             currentNode\n            ]);\n           } else {\n            currentPageIndex++;\n            next();\n           }\n           return;\n          }\n          nodesToVisit.push(obj);\n          next();\n         }, capability.reject);\n         return;\n        }\n        assert(isDict(currentNode), 'page dictionary kid reference points to wrong type of object');\n        var count = currentNode.get('Count');\n        if (count === 0) {\n         checkAllKids = true;\n        }\n        if (currentPageIndex + count <= pageIndex) {\n         currentPageIndex += count;\n         continue;\n        }\n        var kids = currentNode.get('Kids');\n        assert(isArray(kids), 'page dictionary kids object is not an array');\n        if (!checkAllKids && count === kids.length) {\n         nodesToVisit = [kids[pageIndex - currentPageIndex]];\n         currentPageIndex = pageIndex;\n         continue;\n        } else {\n         for (var last = kids.length - 1; last >= 0; last--) {\n          nodesToVisit.push(kids[last]);\n         }\n        }\n       }\n       capability.reject('Page index ' + pageIndex + ' not found.');\n      }\n      next();\n      return capability.promise;\n     },\n     getPageIndex: function Catalog_getPageIndex(pageRef) {\n      var xref = this.xref;\n      function pagesBeforeRef(kidRef) {\n       var total = 0;\n       var parentRef;\n       return xref.fetchAsync(kidRef).then(function (node) {\n        if (isRefsEqual(kidRef, pageRef) && !isDict(node, 'Page') && !(isDict(node) && !node.has('Type') && node.has('Contents'))) {\n         throw new Error('The reference does not point to a /Page Dict.');\n        }\n        if (!node) {\n         return null;\n        }\n        assert(isDict(node), 'node must be a Dict.');\n        parentRef = node.getRaw('Parent');\n        return node.getAsync('Parent');\n       }).then(function (parent) {\n        if (!parent) {\n         return null;\n        }\n        assert(isDict(parent), 'parent must be a Dict.');\n        return parent.getAsync('Kids');\n       }).then(function (kids) {\n        if (!kids) {\n         return null;\n        }\n        var kidPromises = [];\n        var found = false;\n        for (var i = 0; i < kids.length; i++) {\n         var kid = kids[i];\n         assert(isRef(kid), 'kid must be a Ref.');\n         if (kid.num === kidRef.num) {\n          found = true;\n          break;\n         }\n         kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n          if (kid.has('Count')) {\n           var count = kid.get('Count');\n           total += count;\n          } else {\n           total++;\n          }\n         }));\n        }\n        if (!found) {\n         error('kid ref not found in parents kids');\n        }\n        return Promise.all(kidPromises).then(function () {\n         return [\n          total,\n          parentRef\n         ];\n        });\n       });\n      }\n      var total = 0;\n      function next(ref) {\n       return pagesBeforeRef(ref).then(function (args) {\n        if (!args) {\n         return total;\n        }\n        var count = args[0];\n        var parentRef = args[1];\n        total += count;\n        return next(parentRef);\n       });\n      }\n      return next(pageRef);\n     }\n    };\n    Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\n     function addDefaultProtocolToUrl(url) {\n      if (url.indexOf('www.') === 0) {\n       return 'http://' + url;\n      }\n      return url;\n     }\n     function tryConvertUrlEncoding(url) {\n      try {\n       return stringToUTF8String(url);\n      } catch (e) {\n       return url;\n      }\n     }\n     var destDict = params.destDict;\n     if (!isDict(destDict)) {\n      warn('Catalog_parseDestDictionary: \"destDict\" must be a dictionary.');\n      return;\n     }\n     var resultObj = params.resultObj;\n     if (typeof resultObj !== 'object') {\n      warn('Catalog_parseDestDictionary: \"resultObj\" must be an object.');\n      return;\n     }\n     var docBaseUrl = params.docBaseUrl || null;\n     var action = destDict.get('A'), url, dest;\n     if (isDict(action)) {\n      var linkType = action.get('S').name;\n      switch (linkType) {\n      case 'URI':\n       url = action.get('URI');\n       if (isName(url)) {\n        url = '/' + url.name;\n       } else if (isString(url)) {\n        url = addDefaultProtocolToUrl(url);\n       }\n       break;\n      case 'GoTo':\n       dest = action.get('D');\n       break;\n      case 'Launch':\n      case 'GoToR':\n       var urlDict = action.get('F');\n       if (isDict(urlDict)) {\n        url = urlDict.get('F') || null;\n       } else if (isString(urlDict)) {\n        url = urlDict;\n       }\n       var remoteDest = action.get('D');\n       if (remoteDest) {\n        if (isName(remoteDest)) {\n         remoteDest = remoteDest.name;\n        }\n        if (isString(url)) {\n         var baseUrl = url.split('#')[0];\n         if (isString(remoteDest)) {\n          url = baseUrl + '#' + (/^\\d+$/.test(remoteDest) ? 'nameddest=' : '') + remoteDest;\n         } else if (isArray(remoteDest)) {\n          url = baseUrl + '#' + JSON.stringify(remoteDest);\n         }\n        }\n       }\n       var newWindow = action.get('NewWindow');\n       if (isBool(newWindow)) {\n        resultObj.newWindow = newWindow;\n       }\n       break;\n      case 'Named':\n       var namedAction = action.get('N');\n       if (isName(namedAction)) {\n        resultObj.action = namedAction.name;\n       }\n       break;\n      case 'JavaScript':\n       var jsAction = action.get('JS'), js;\n       if (isStream(jsAction)) {\n        js = bytesToString(jsAction.getBytes());\n       } else if (isString(jsAction)) {\n        js = jsAction;\n       }\n       if (js) {\n        var URL_OPEN_METHODS = [\n         'app.launchURL',\n         'window.open'\n        ];\n        var regex = new RegExp('^(?:' + URL_OPEN_METHODS.join('|') + ')' + '\\\\((?:\\'|\\\")(\\\\S+)(?:\\'|\\\")(?:,|\\\\))');\n        var jsUrl = regex.exec(stringToPDFString(js), 'i');\n        if (jsUrl && jsUrl[1]) {\n         url = jsUrl[1];\n         break;\n        }\n       }\n      default:\n       warn('Catalog_parseDestDictionary: Unrecognized link type \"' + linkType + '\".');\n       break;\n      }\n     } else if (destDict.has('Dest')) {\n      dest = destDict.get('Dest');\n     }\n     if (isString(url)) {\n      url = tryConvertUrlEncoding(url);\n      var absoluteUrl = createValidAbsoluteUrl(url, docBaseUrl);\n      if (absoluteUrl) {\n       resultObj.url = absoluteUrl.href;\n      }\n      resultObj.unsafeUrl = url;\n     }\n     if (dest) {\n      if (isName(dest)) {\n       dest = dest.name;\n      }\n      if (isString(dest) || isArray(dest)) {\n       resultObj.dest = dest;\n      }\n     }\n    };\n    return Catalog;\n   }();\n   var XRef = function XRefClosure() {\n    function XRef(stream, pdfManager) {\n     this.stream = stream;\n     this.pdfManager = pdfManager;\n     this.entries = [];\n     this.xrefstms = Object.create(null);\n     this.cache = [];\n     this.stats = {\n      streamTypes: [],\n      fontTypes: []\n     };\n    }\n    XRef.prototype = {\n     setStartXRef: function XRef_setStartXRef(startXRef) {\n      this.startXRefQueue = [startXRef];\n     },\n     parse: function XRef_parse(recoveryMode) {\n      var trailerDict;\n      if (!recoveryMode) {\n       trailerDict = this.readXRef();\n      } else {\n       warn('Indexing all PDF objects');\n       trailerDict = this.indexObjects();\n      }\n      trailerDict.assignXref(this);\n      this.trailer = trailerDict;\n      var encrypt = trailerDict.get('Encrypt');\n      if (isDict(encrypt)) {\n       var ids = trailerDict.get('ID');\n       var fileId = ids && ids.length ? ids[0] : '';\n       encrypt.suppressEncryption = true;\n       this.encrypt = new CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n      }\n      if (!(this.root = trailerDict.get('Root'))) {\n       error('Invalid root reference');\n      }\n     },\n     processXRefTable: function XRef_processXRefTable(parser) {\n      if (!('tableState' in this)) {\n       this.tableState = {\n        entryNum: 0,\n        streamPos: parser.lexer.stream.pos,\n        parserBuf1: parser.buf1,\n        parserBuf2: parser.buf2\n       };\n      }\n      var obj = this.readXRefTable(parser);\n      if (!isCmd(obj, 'trailer')) {\n       error('Invalid XRef table: could not find trailer dictionary');\n      }\n      var dict = parser.getObj();\n      if (!isDict(dict) && dict.dict) {\n       dict = dict.dict;\n      }\n      if (!isDict(dict)) {\n       error('Invalid XRef table: could not parse trailer dictionary');\n      }\n      delete this.tableState;\n      return dict;\n     },\n     readXRefTable: function XRef_readXRefTable(parser) {\n      var stream = parser.lexer.stream;\n      var tableState = this.tableState;\n      stream.pos = tableState.streamPos;\n      parser.buf1 = tableState.parserBuf1;\n      parser.buf2 = tableState.parserBuf2;\n      var obj;\n      while (true) {\n       if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n        if (isCmd(obj = parser.getObj(), 'trailer')) {\n         break;\n        }\n        tableState.firstEntryNum = obj;\n        tableState.entryCount = parser.getObj();\n       }\n       var first = tableState.firstEntryNum;\n       var count = tableState.entryCount;\n       if (!isInt(first) || !isInt(count)) {\n        error('Invalid XRef table: wrong types in subsection header');\n       }\n       for (var i = tableState.entryNum; i < count; i++) {\n        tableState.streamPos = stream.pos;\n        tableState.entryNum = i;\n        tableState.parserBuf1 = parser.buf1;\n        tableState.parserBuf2 = parser.buf2;\n        var entry = {};\n        entry.offset = parser.getObj();\n        entry.gen = parser.getObj();\n        var type = parser.getObj();\n        if (isCmd(type, 'f')) {\n         entry.free = true;\n        } else if (isCmd(type, 'n')) {\n         entry.uncompressed = true;\n        }\n        if (!isInt(entry.offset) || !isInt(entry.gen) || !(entry.free || entry.uncompressed)) {\n         error('Invalid entry in XRef subsection: ' + first + ', ' + count);\n        }\n        if (i === 0 && entry.free && first === 1) {\n         first = 0;\n        }\n        if (!this.entries[i + first]) {\n         this.entries[i + first] = entry;\n        }\n       }\n       tableState.entryNum = 0;\n       tableState.streamPos = stream.pos;\n       tableState.parserBuf1 = parser.buf1;\n       tableState.parserBuf2 = parser.buf2;\n       delete tableState.firstEntryNum;\n       delete tableState.entryCount;\n      }\n      if (this.entries[0] && !this.entries[0].free) {\n       error('Invalid XRef table: unexpected first object');\n      }\n      return obj;\n     },\n     processXRefStream: function XRef_processXRefStream(stream) {\n      if (!('streamState' in this)) {\n       var streamParameters = stream.dict;\n       var byteWidths = streamParameters.get('W');\n       var range = streamParameters.get('Index');\n       if (!range) {\n        range = [\n         0,\n         streamParameters.get('Size')\n        ];\n       }\n       this.streamState = {\n        entryRanges: range,\n        byteWidths: byteWidths,\n        entryNum: 0,\n        streamPos: stream.pos\n       };\n      }\n      this.readXRefStream(stream);\n      delete this.streamState;\n      return stream.dict;\n     },\n     readXRefStream: function XRef_readXRefStream(stream) {\n      var i, j;\n      var streamState = this.streamState;\n      stream.pos = streamState.streamPos;\n      var byteWidths = streamState.byteWidths;\n      var typeFieldWidth = byteWidths[0];\n      var offsetFieldWidth = byteWidths[1];\n      var generationFieldWidth = byteWidths[2];\n      var entryRanges = streamState.entryRanges;\n      while (entryRanges.length > 0) {\n       var first = entryRanges[0];\n       var n = entryRanges[1];\n       if (!isInt(first) || !isInt(n)) {\n        error('Invalid XRef range fields: ' + first + ', ' + n);\n       }\n       if (!isInt(typeFieldWidth) || !isInt(offsetFieldWidth) || !isInt(generationFieldWidth)) {\n        error('Invalid XRef entry fields length: ' + first + ', ' + n);\n       }\n       for (i = streamState.entryNum; i < n; ++i) {\n        streamState.entryNum = i;\n        streamState.streamPos = stream.pos;\n        var type = 0, offset = 0, generation = 0;\n        for (j = 0; j < typeFieldWidth; ++j) {\n         type = type << 8 | stream.getByte();\n        }\n        if (typeFieldWidth === 0) {\n         type = 1;\n        }\n        for (j = 0; j < offsetFieldWidth; ++j) {\n         offset = offset << 8 | stream.getByte();\n        }\n        for (j = 0; j < generationFieldWidth; ++j) {\n         generation = generation << 8 | stream.getByte();\n        }\n        var entry = {};\n        entry.offset = offset;\n        entry.gen = generation;\n        switch (type) {\n        case 0:\n         entry.free = true;\n         break;\n        case 1:\n         entry.uncompressed = true;\n         break;\n        case 2:\n         break;\n        default:\n         error('Invalid XRef entry type: ' + type);\n        }\n        if (!this.entries[first + i]) {\n         this.entries[first + i] = entry;\n        }\n       }\n       streamState.entryNum = 0;\n       streamState.streamPos = stream.pos;\n       entryRanges.splice(0, 2);\n      }\n     },\n     indexObjects: function XRef_indexObjects() {\n      var TAB = 0x9, LF = 0xA, CR = 0xD, SPACE = 0x20;\n      var PERCENT = 0x25, LT = 0x3C;\n      function readToken(data, offset) {\n       var token = '', ch = data[offset];\n       while (ch !== LF && ch !== CR && ch !== LT) {\n        if (++offset >= data.length) {\n         break;\n        }\n        token += String.fromCharCode(ch);\n        ch = data[offset];\n       }\n       return token;\n      }\n      function skipUntil(data, offset, what) {\n       var length = what.length, dataLength = data.length;\n       var skipped = 0;\n       while (offset < dataLength) {\n        var i = 0;\n        while (i < length && data[offset + i] === what[i]) {\n         ++i;\n        }\n        if (i >= length) {\n         break;\n        }\n        offset++;\n        skipped++;\n       }\n       return skipped;\n      }\n      var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n      var trailerBytes = new Uint8Array([\n       116,\n       114,\n       97,\n       105,\n       108,\n       101,\n       114\n      ]);\n      var startxrefBytes = new Uint8Array([\n       115,\n       116,\n       97,\n       114,\n       116,\n       120,\n       114,\n       101,\n       102\n      ]);\n      var endobjBytes = new Uint8Array([\n       101,\n       110,\n       100,\n       111,\n       98,\n       106\n      ]);\n      var xrefBytes = new Uint8Array([\n       47,\n       88,\n       82,\n       101,\n       102\n      ]);\n      this.entries.length = 0;\n      var stream = this.stream;\n      stream.pos = 0;\n      var buffer = stream.getBytes();\n      var position = stream.start, length = buffer.length;\n      var trailers = [], xrefStms = [];\n      while (position < length) {\n       var ch = buffer[position];\n       if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n        ++position;\n        continue;\n       }\n       if (ch === PERCENT) {\n        do {\n         ++position;\n         if (position >= length) {\n          break;\n         }\n         ch = buffer[position];\n        } while (ch !== LF && ch !== CR);\n        continue;\n       }\n       var token = readToken(buffer, position);\n       var m;\n       if (token.indexOf('xref') === 0 && (token.length === 4 || /\\s/.test(token[4]))) {\n        position += skipUntil(buffer, position, trailerBytes);\n        trailers.push(position);\n        position += skipUntil(buffer, position, startxrefBytes);\n       } else if (m = objRegExp.exec(token)) {\n        if (typeof this.entries[m[1]] === 'undefined') {\n         this.entries[m[1]] = {\n          offset: position - stream.start,\n          gen: m[2] | 0,\n          uncompressed: true\n         };\n        }\n        var contentLength = skipUntil(buffer, position, endobjBytes) + 7;\n        var content = buffer.subarray(position, position + contentLength);\n        var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n        if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n         xrefStms.push(position - stream.start);\n         this.xrefstms[position - stream.start] = 1;\n        }\n        position += contentLength;\n       } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\s/.test(token[7]))) {\n        trailers.push(position);\n        position += skipUntil(buffer, position, startxrefBytes);\n       } else {\n        position += token.length + 1;\n       }\n      }\n      var i, ii;\n      for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n       this.startXRefQueue.push(xrefStms[i]);\n       this.readXRef(true);\n      }\n      var dict;\n      for (i = 0, ii = trailers.length; i < ii; ++i) {\n       stream.pos = trailers[i];\n       var parser = new Parser(new Lexer(stream), true, this, true);\n       var obj = parser.getObj();\n       if (!isCmd(obj, 'trailer')) {\n        continue;\n       }\n       dict = parser.getObj();\n       if (!isDict(dict)) {\n        continue;\n       }\n       if (dict.has('ID')) {\n        return dict;\n       }\n      }\n      if (dict) {\n       return dict;\n      }\n      throw new InvalidPDFException('Invalid PDF structure');\n     },\n     readXRef: function XRef_readXRef(recoveryMode) {\n      var stream = this.stream;\n      try {\n       while (this.startXRefQueue.length) {\n        var startXRef = this.startXRefQueue[0];\n        stream.pos = startXRef + stream.start;\n        var parser = new Parser(new Lexer(stream), true, this);\n        var obj = parser.getObj();\n        var dict;\n        if (isCmd(obj, 'xref')) {\n         dict = this.processXRefTable(parser);\n         if (!this.topDict) {\n          this.topDict = dict;\n         }\n         obj = dict.get('XRefStm');\n         if (isInt(obj)) {\n          var pos = obj;\n          if (!(pos in this.xrefstms)) {\n           this.xrefstms[pos] = 1;\n           this.startXRefQueue.push(pos);\n          }\n         }\n        } else if (isInt(obj)) {\n         if (!isInt(parser.getObj()) || !isCmd(parser.getObj(), 'obj') || !isStream(obj = parser.getObj())) {\n          error('Invalid XRef stream');\n         }\n         dict = this.processXRefStream(obj);\n         if (!this.topDict) {\n          this.topDict = dict;\n         }\n         if (!dict) {\n          error('Failed to read XRef stream');\n         }\n        } else {\n         error('Invalid XRef stream header');\n        }\n        obj = dict.get('Prev');\n        if (isInt(obj)) {\n         this.startXRefQueue.push(obj);\n        } else if (isRef(obj)) {\n         this.startXRefQueue.push(obj.num);\n        }\n        this.startXRefQueue.shift();\n       }\n       return this.topDict;\n      } catch (e) {\n       if (e instanceof MissingDataException) {\n        throw e;\n       }\n       info('(while reading XRef): ' + e);\n      }\n      if (recoveryMode) {\n       return;\n      }\n      throw new XRefParseException();\n     },\n     getEntry: function XRef_getEntry(i) {\n      var xrefEntry = this.entries[i];\n      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n       return xrefEntry;\n      }\n      return null;\n     },\n     fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n      if (!isRef(obj)) {\n       return obj;\n      }\n      return this.fetch(obj, suppressEncryption);\n     },\n     fetch: function XRef_fetch(ref, suppressEncryption) {\n      assert(isRef(ref), 'ref object is not a reference');\n      var num = ref.num;\n      if (num in this.cache) {\n       var cacheEntry = this.cache[num];\n       return cacheEntry;\n      }\n      var xrefEntry = this.getEntry(num);\n      if (xrefEntry === null) {\n       return this.cache[num] = null;\n      }\n      if (xrefEntry.uncompressed) {\n       xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n      } else {\n       xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n      }\n      if (isDict(xrefEntry)) {\n       xrefEntry.objId = ref.toString();\n      } else if (isStream(xrefEntry)) {\n       xrefEntry.dict.objId = ref.toString();\n      }\n      return xrefEntry;\n     },\n     fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\n      var gen = ref.gen;\n      var num = ref.num;\n      if (xrefEntry.gen !== gen) {\n       error('inconsistent generation in XRef');\n      }\n      var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n      var parser = new Parser(new Lexer(stream), true, this);\n      var obj1 = parser.getObj();\n      var obj2 = parser.getObj();\n      var obj3 = parser.getObj();\n      if (!isInt(obj1) || parseInt(obj1, 10) !== num || !isInt(obj2) || parseInt(obj2, 10) !== gen || !isCmd(obj3)) {\n       error('bad XRef entry');\n      }\n      if (!isCmd(obj3, 'obj')) {\n       if (obj3.cmd.indexOf('obj') === 0) {\n        num = parseInt(obj3.cmd.substring(3), 10);\n        if (!isNaN(num)) {\n         return num;\n        }\n       }\n       error('bad XRef entry');\n      }\n      if (this.encrypt && !suppressEncryption) {\n       xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n      } else {\n       xrefEntry = parser.getObj();\n      }\n      if (!isStream(xrefEntry)) {\n       this.cache[num] = xrefEntry;\n      }\n      return xrefEntry;\n     },\n     fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\n      var tableOffset = xrefEntry.offset;\n      var stream = this.fetch(new Ref(tableOffset, 0));\n      if (!isStream(stream)) {\n       error('bad ObjStm stream');\n      }\n      var first = stream.dict.get('First');\n      var n = stream.dict.get('N');\n      if (!isInt(first) || !isInt(n)) {\n       error('invalid first and n parameters for ObjStm stream');\n      }\n      var parser = new Parser(new Lexer(stream), false, this);\n      parser.allowStreams = true;\n      var i, entries = [], num, nums = [];\n      for (i = 0; i < n; ++i) {\n       num = parser.getObj();\n       if (!isInt(num)) {\n        error('invalid object number in the ObjStm stream: ' + num);\n       }\n       nums.push(num);\n       var offset = parser.getObj();\n       if (!isInt(offset)) {\n        error('invalid object offset in the ObjStm stream: ' + offset);\n       }\n      }\n      for (i = 0; i < n; ++i) {\n       entries.push(parser.getObj());\n       if (isCmd(parser.buf1, 'endobj')) {\n        parser.shift();\n       }\n       num = nums[i];\n       var entry = this.entries[num];\n       if (entry && entry.offset === tableOffset && entry.gen === i) {\n        this.cache[num] = entries[i];\n       }\n      }\n      xrefEntry = entries[xrefEntry.gen];\n      if (xrefEntry === undefined) {\n       error('bad XRef entry for compressed object');\n      }\n      return xrefEntry;\n     },\n     fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\n      if (!isRef(obj)) {\n       return Promise.resolve(obj);\n      }\n      return this.fetchAsync(obj, suppressEncryption);\n     },\n     fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n      var streamManager = this.stream.manager;\n      var xref = this;\n      return new Promise(function tryFetch(resolve, reject) {\n       try {\n        resolve(xref.fetch(ref, suppressEncryption));\n       } catch (e) {\n        if (e instanceof MissingDataException) {\n         streamManager.requestRange(e.begin, e.end).then(function () {\n          tryFetch(resolve, reject);\n         }, reject);\n         return;\n        }\n        reject(e);\n       }\n      });\n     },\n     getCatalogObj: function XRef_getCatalogObj() {\n      return this.root;\n     }\n    };\n    return XRef;\n   }();\n   var NameOrNumberTree = function NameOrNumberTreeClosure() {\n    function NameOrNumberTree(root, xref) {\n     throw new Error('Cannot initialize NameOrNumberTree.');\n    }\n    NameOrNumberTree.prototype = {\n     getAll: function NameOrNumberTree_getAll() {\n      var dict = Object.create(null);\n      if (!this.root) {\n       return dict;\n      }\n      var xref = this.xref;\n      var processed = new RefSet();\n      processed.put(this.root);\n      var queue = [this.root];\n      while (queue.length > 0) {\n       var i, n;\n       var obj = xref.fetchIfRef(queue.shift());\n       if (!isDict(obj)) {\n        continue;\n       }\n       if (obj.has('Kids')) {\n        var kids = obj.get('Kids');\n        for (i = 0, n = kids.length; i < n; i++) {\n         var kid = kids[i];\n         assert(!processed.has(kid), 'Duplicate entry in \"' + this._type + '\" tree.');\n         queue.push(kid);\n         processed.put(kid);\n        }\n        continue;\n       }\n       var entries = obj.get(this._type);\n       if (isArray(entries)) {\n        for (i = 0, n = entries.length; i < n; i += 2) {\n         dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\n        }\n       }\n      }\n      return dict;\n     },\n     get: function NameOrNumberTree_get(key) {\n      if (!this.root) {\n       return null;\n      }\n      var xref = this.xref;\n      var kidsOrEntries = xref.fetchIfRef(this.root);\n      var loopCount = 0;\n      var MAX_LEVELS = 10;\n      var l, r, m;\n      while (kidsOrEntries.has('Kids')) {\n       if (++loopCount > MAX_LEVELS) {\n        warn('Search depth limit reached for \"' + this._type + '\" tree.');\n        return null;\n       }\n       var kids = kidsOrEntries.get('Kids');\n       if (!isArray(kids)) {\n        return null;\n       }\n       l = 0;\n       r = kids.length - 1;\n       while (l <= r) {\n        m = l + r >> 1;\n        var kid = xref.fetchIfRef(kids[m]);\n        var limits = kid.get('Limits');\n        if (key < xref.fetchIfRef(limits[0])) {\n         r = m - 1;\n        } else if (key > xref.fetchIfRef(limits[1])) {\n         l = m + 1;\n        } else {\n         kidsOrEntries = xref.fetchIfRef(kids[m]);\n         break;\n        }\n       }\n       if (l > r) {\n        return null;\n       }\n      }\n      var entries = kidsOrEntries.get(this._type);\n      if (isArray(entries)) {\n       l = 0;\n       r = entries.length - 2;\n       while (l <= r) {\n        m = l + r & ~1;\n        var currentKey = xref.fetchIfRef(entries[m]);\n        if (key < currentKey) {\n         r = m - 2;\n        } else if (key > currentKey) {\n         l = m + 2;\n        } else {\n         return xref.fetchIfRef(entries[m + 1]);\n        }\n       }\n      }\n      return null;\n     }\n    };\n    return NameOrNumberTree;\n   }();\n   var NameTree = function NameTreeClosure() {\n    function NameTree(root, xref) {\n     this.root = root;\n     this.xref = xref;\n     this._type = 'Names';\n    }\n    Util.inherit(NameTree, NameOrNumberTree, {});\n    return NameTree;\n   }();\n   var NumberTree = function NumberTreeClosure() {\n    function NumberTree(root, xref) {\n     this.root = root;\n     this.xref = xref;\n     this._type = 'Nums';\n    }\n    Util.inherit(NumberTree, NameOrNumberTree, {});\n    return NumberTree;\n   }();\n   var FileSpec = function FileSpecClosure() {\n    function FileSpec(root, xref) {\n     if (!root || !isDict(root)) {\n      return;\n     }\n     this.xref = xref;\n     this.root = root;\n     if (root.has('FS')) {\n      this.fs = root.get('FS');\n     }\n     this.description = root.has('Desc') ? stringToPDFString(root.get('Desc')) : '';\n     if (root.has('RF')) {\n      warn('Related file specifications are not supported');\n     }\n     this.contentAvailable = true;\n     if (!root.has('EF')) {\n      this.contentAvailable = false;\n      warn('Non-embedded file specifications are not supported');\n     }\n    }\n    function pickPlatformItem(dict) {\n     if (dict.has('UF')) {\n      return dict.get('UF');\n     } else if (dict.has('F')) {\n      return dict.get('F');\n     } else if (dict.has('Unix')) {\n      return dict.get('Unix');\n     } else if (dict.has('Mac')) {\n      return dict.get('Mac');\n     } else if (dict.has('DOS')) {\n      return dict.get('DOS');\n     }\n     return null;\n    }\n    FileSpec.prototype = {\n     get filename() {\n      if (!this._filename && this.root) {\n       var filename = pickPlatformItem(this.root) || 'unnamed';\n       this._filename = stringToPDFString(filename).replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\//g, '/').replace(/\\\\/g, '/');\n      }\n      return this._filename;\n     },\n     get content() {\n      if (!this.contentAvailable) {\n       return null;\n      }\n      if (!this.contentRef && this.root) {\n       this.contentRef = pickPlatformItem(this.root.get('EF'));\n      }\n      var content = null;\n      if (this.contentRef) {\n       var xref = this.xref;\n       var fileObj = xref.fetchIfRef(this.contentRef);\n       if (fileObj && isStream(fileObj)) {\n        content = fileObj.getBytes();\n       } else {\n        warn('Embedded file specification points to non-existing/invalid ' + 'content');\n       }\n      } else {\n       warn('Embedded file specification does not have a content');\n      }\n      return content;\n     },\n     get serializable() {\n      return {\n       filename: this.filename,\n       content: this.content\n      };\n     }\n    };\n    return FileSpec;\n   }();\n   var ObjectLoader = function () {\n    function mayHaveChildren(value) {\n     return isRef(value) || isDict(value) || isArray(value) || isStream(value);\n    }\n    function addChildren(node, nodesToVisit) {\n     var value;\n     if (isDict(node) || isStream(node)) {\n      var map;\n      if (isDict(node)) {\n       map = node.map;\n      } else {\n       map = node.dict.map;\n      }\n      for (var key in map) {\n       value = map[key];\n       if (mayHaveChildren(value)) {\n        nodesToVisit.push(value);\n       }\n      }\n     } else if (isArray(node)) {\n      for (var i = 0, ii = node.length; i < ii; i++) {\n       value = node[i];\n       if (mayHaveChildren(value)) {\n        nodesToVisit.push(value);\n       }\n      }\n     }\n    }\n    function ObjectLoader(obj, keys, xref) {\n     this.obj = obj;\n     this.keys = keys;\n     this.xref = xref;\n     this.refSet = null;\n     this.capability = null;\n    }\n    ObjectLoader.prototype = {\n     load: function ObjectLoader_load() {\n      var keys = this.keys;\n      this.capability = createPromiseCapability();\n      if (!(this.xref.stream instanceof ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\n       this.capability.resolve();\n       return this.capability.promise;\n      }\n      this.refSet = new RefSet();\n      var nodesToVisit = [];\n      for (var i = 0; i < keys.length; i++) {\n       nodesToVisit.push(this.obj[keys[i]]);\n      }\n      this._walk(nodesToVisit);\n      return this.capability.promise;\n     },\n     _walk: function ObjectLoader_walk(nodesToVisit) {\n      var nodesToRevisit = [];\n      var pendingRequests = [];\n      while (nodesToVisit.length) {\n       var currentNode = nodesToVisit.pop();\n       if (isRef(currentNode)) {\n        if (this.refSet.has(currentNode)) {\n         continue;\n        }\n        try {\n         var ref = currentNode;\n         this.refSet.put(ref);\n         currentNode = this.xref.fetch(currentNode);\n        } catch (e) {\n         if (!(e instanceof MissingDataException)) {\n          throw e;\n         }\n         nodesToRevisit.push(currentNode);\n         pendingRequests.push({\n          begin: e.begin,\n          end: e.end\n         });\n        }\n       }\n       if (currentNode && currentNode.getBaseStreams) {\n        var baseStreams = currentNode.getBaseStreams();\n        var foundMissingData = false;\n        for (var i = 0; i < baseStreams.length; i++) {\n         var stream = baseStreams[i];\n         if (stream.getMissingChunks && stream.getMissingChunks().length) {\n          foundMissingData = true;\n          pendingRequests.push({\n           begin: stream.start,\n           end: stream.end\n          });\n         }\n        }\n        if (foundMissingData) {\n         nodesToRevisit.push(currentNode);\n        }\n       }\n       addChildren(currentNode, nodesToVisit);\n      }\n      if (pendingRequests.length) {\n       this.xref.stream.manager.requestRanges(pendingRequests).then(function pendingRequestCallback() {\n        nodesToVisit = nodesToRevisit;\n        for (var i = 0; i < nodesToRevisit.length; i++) {\n         var node = nodesToRevisit[i];\n         if (isRef(node)) {\n          this.refSet.remove(node);\n         }\n        }\n        this._walk(nodesToVisit);\n       }.bind(this), this.capability.reject);\n       return;\n      }\n      this.refSet = null;\n      this.capability.resolve();\n     }\n    };\n    return ObjectLoader;\n   }();\n   exports.Catalog = Catalog;\n   exports.ObjectLoader = ObjectLoader;\n   exports.XRef = XRef;\n   exports.FileSpec = FileSpec;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsCorePattern = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreFunction, root.pdfjsCoreColorSpace);\n  }(this, function (exports, sharedUtil, corePrimitives, coreFunction, coreColorSpace) {\n   var UNSUPPORTED_FEATURES = sharedUtil.UNSUPPORTED_FEATURES;\n   var MissingDataException = sharedUtil.MissingDataException;\n   var Util = sharedUtil.Util;\n   var assert = sharedUtil.assert;\n   var error = sharedUtil.error;\n   var info = sharedUtil.info;\n   var warn = sharedUtil.warn;\n   var isStream = corePrimitives.isStream;\n   var PDFFunction = coreFunction.PDFFunction;\n   var ColorSpace = coreColorSpace.ColorSpace;\n   var ShadingType = {\n    FUNCTION_BASED: 1,\n    AXIAL: 2,\n    RADIAL: 3,\n    FREE_FORM_MESH: 4,\n    LATTICE_FORM_MESH: 5,\n    COONS_PATCH_MESH: 6,\n    TENSOR_PATCH_MESH: 7\n   };\n   var Pattern = function PatternClosure() {\n    function Pattern() {\n     error('should not call Pattern constructor');\n    }\n    Pattern.prototype = {\n     getPattern: function Pattern_getPattern(ctx) {\n      error('Should not call Pattern.getStyle: ' + ctx);\n     }\n    };\n    Pattern.parseShading = function Pattern_parseShading(shading, matrix, xref, res, handler) {\n     var dict = isStream(shading) ? shading.dict : shading;\n     var type = dict.get('ShadingType');\n     try {\n      switch (type) {\n      case ShadingType.AXIAL:\n      case ShadingType.RADIAL:\n       return new Shadings.RadialAxial(dict, matrix, xref, res);\n      case ShadingType.FREE_FORM_MESH:\n      case ShadingType.LATTICE_FORM_MESH:\n      case ShadingType.COONS_PATCH_MESH:\n      case ShadingType.TENSOR_PATCH_MESH:\n       return new Shadings.Mesh(shading, matrix, xref, res);\n      default:\n       throw new Error('Unsupported ShadingType: ' + type);\n      }\n     } catch (ex) {\n      if (ex instanceof MissingDataException) {\n       throw ex;\n      }\n      handler.send('UnsupportedFeature', { featureId: UNSUPPORTED_FEATURES.shadingPattern });\n      warn(ex);\n      return new Shadings.Dummy();\n     }\n    };\n    return Pattern;\n   }();\n   var Shadings = {};\n   Shadings.SMALL_NUMBER = 1e-6;\n   Shadings.RadialAxial = function RadialAxialClosure() {\n    function RadialAxial(dict, matrix, xref, res) {\n     this.matrix = matrix;\n     this.coordsArr = dict.getArray('Coords');\n     this.shadingType = dict.get('ShadingType');\n     this.type = 'Pattern';\n     var cs = dict.get('ColorSpace', 'CS');\n     cs = ColorSpace.parse(cs, xref, res);\n     this.cs = cs;\n     var t0 = 0.0, t1 = 1.0;\n     if (dict.has('Domain')) {\n      var domainArr = dict.getArray('Domain');\n      t0 = domainArr[0];\n      t1 = domainArr[1];\n     }\n     var extendStart = false, extendEnd = false;\n     if (dict.has('Extend')) {\n      var extendArr = dict.getArray('Extend');\n      extendStart = extendArr[0];\n      extendEnd = extendArr[1];\n     }\n     if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n      var x1 = this.coordsArr[0];\n      var y1 = this.coordsArr[1];\n      var r1 = this.coordsArr[2];\n      var x2 = this.coordsArr[3];\n      var y2 = this.coordsArr[4];\n      var r2 = this.coordsArr[5];\n      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n      if (r1 <= r2 + distance && r2 <= r1 + distance) {\n       warn('Unsupported radial gradient.');\n      }\n     }\n     this.extendStart = extendStart;\n     this.extendEnd = extendEnd;\n     var fnObj = dict.get('Function');\n     var fn = PDFFunction.parseArray(xref, fnObj);\n     var diff = t1 - t0;\n     var step = diff / 10;\n     var colorStops = this.colorStops = [];\n     if (t0 >= t1 || step <= 0) {\n      info('Bad shading domain.');\n      return;\n     }\n     var color = new Float32Array(cs.numComps), ratio = new Float32Array(1);\n     var rgbColor;\n     for (var i = t0; i <= t1; i += step) {\n      ratio[0] = i;\n      fn(ratio, 0, color, 0);\n      rgbColor = cs.getRgb(color, 0);\n      var cssColor = Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n      colorStops.push([\n       (i - t0) / diff,\n       cssColor\n      ]);\n     }\n     var background = 'transparent';\n     if (dict.has('Background')) {\n      rgbColor = cs.getRgb(dict.get('Background'), 0);\n      background = Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n     }\n     if (!extendStart) {\n      colorStops.unshift([\n       0,\n       background\n      ]);\n      colorStops[1][0] += Shadings.SMALL_NUMBER;\n     }\n     if (!extendEnd) {\n      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n      colorStops.push([\n       1,\n       background\n      ]);\n     }\n     this.colorStops = colorStops;\n    }\n    RadialAxial.prototype = {\n     getIR: function RadialAxial_getIR() {\n      var coordsArr = this.coordsArr;\n      var shadingType = this.shadingType;\n      var type, p0, p1, r0, r1;\n      if (shadingType === ShadingType.AXIAL) {\n       p0 = [\n        coordsArr[0],\n        coordsArr[1]\n       ];\n       p1 = [\n        coordsArr[2],\n        coordsArr[3]\n       ];\n       r0 = null;\n       r1 = null;\n       type = 'axial';\n      } else if (shadingType === ShadingType.RADIAL) {\n       p0 = [\n        coordsArr[0],\n        coordsArr[1]\n       ];\n       p1 = [\n        coordsArr[3],\n        coordsArr[4]\n       ];\n       r0 = coordsArr[2];\n       r1 = coordsArr[5];\n       type = 'radial';\n      } else {\n       error('getPattern type unknown: ' + shadingType);\n      }\n      var matrix = this.matrix;\n      if (matrix) {\n       p0 = Util.applyTransform(p0, matrix);\n       p1 = Util.applyTransform(p1, matrix);\n       if (shadingType === ShadingType.RADIAL) {\n        var scale = Util.singularValueDecompose2dScale(matrix);\n        r0 *= scale[0];\n        r1 *= scale[1];\n       }\n      }\n      return [\n       'RadialAxial',\n       type,\n       this.colorStops,\n       p0,\n       p1,\n       r0,\n       r1\n      ];\n     }\n    };\n    return RadialAxial;\n   }();\n   Shadings.Mesh = function MeshClosure() {\n    function MeshStreamReader(stream, context) {\n     this.stream = stream;\n     this.context = context;\n     this.buffer = 0;\n     this.bufferLength = 0;\n     var numComps = context.numComps;\n     this.tmpCompsBuf = new Float32Array(numComps);\n     var csNumComps = context.colorSpace.numComps;\n     this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n    }\n    MeshStreamReader.prototype = {\n     get hasData() {\n      if (this.stream.end) {\n       return this.stream.pos < this.stream.end;\n      }\n      if (this.bufferLength > 0) {\n       return true;\n      }\n      var nextByte = this.stream.getByte();\n      if (nextByte < 0) {\n       return false;\n      }\n      this.buffer = nextByte;\n      this.bufferLength = 8;\n      return true;\n     },\n     readBits: function MeshStreamReader_readBits(n) {\n      var buffer = this.buffer;\n      var bufferLength = this.bufferLength;\n      if (n === 32) {\n       if (bufferLength === 0) {\n        return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n       }\n       buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n       var nextByte = this.stream.getByte();\n       this.buffer = nextByte & (1 << bufferLength) - 1;\n       return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\n      }\n      if (n === 8 && bufferLength === 0) {\n       return this.stream.getByte();\n      }\n      while (bufferLength < n) {\n       buffer = buffer << 8 | this.stream.getByte();\n       bufferLength += 8;\n      }\n      bufferLength -= n;\n      this.bufferLength = bufferLength;\n      this.buffer = buffer & (1 << bufferLength) - 1;\n      return buffer >> bufferLength;\n     },\n     align: function MeshStreamReader_align() {\n      this.buffer = 0;\n      this.bufferLength = 0;\n     },\n     readFlag: function MeshStreamReader_readFlag() {\n      return this.readBits(this.context.bitsPerFlag);\n     },\n     readCoordinate: function MeshStreamReader_readCoordinate() {\n      var bitsPerCoordinate = this.context.bitsPerCoordinate;\n      var xi = this.readBits(bitsPerCoordinate);\n      var yi = this.readBits(bitsPerCoordinate);\n      var decode = this.context.decode;\n      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n      return [\n       xi * scale * (decode[1] - decode[0]) + decode[0],\n       yi * scale * (decode[3] - decode[2]) + decode[2]\n      ];\n     },\n     readComponents: function MeshStreamReader_readComponents() {\n      var numComps = this.context.numComps;\n      var bitsPerComponent = this.context.bitsPerComponent;\n      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n      var decode = this.context.decode;\n      var components = this.tmpCompsBuf;\n      for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n       var ci = this.readBits(bitsPerComponent);\n       components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n      }\n      var color = this.tmpCsCompsBuf;\n      if (this.context.colorFn) {\n       this.context.colorFn(components, 0, color, 0);\n      }\n      return this.context.colorSpace.getRgb(color, 0);\n     }\n    };\n    function decodeType4Shading(mesh, reader) {\n     var coords = mesh.coords;\n     var colors = mesh.colors;\n     var operators = [];\n     var ps = [];\n     var verticesLeft = 0;\n     while (reader.hasData) {\n      var f = reader.readFlag();\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      if (verticesLeft === 0) {\n       assert(0 <= f && f <= 2, 'Unknown type4 flag');\n       switch (f) {\n       case 0:\n        verticesLeft = 3;\n        break;\n       case 1:\n        ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n        verticesLeft = 1;\n        break;\n       case 2:\n        ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n        verticesLeft = 1;\n        break;\n       }\n       operators.push(f);\n      }\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n      verticesLeft--;\n      reader.align();\n     }\n     mesh.figures.push({\n      type: 'triangles',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps)\n     });\n    }\n    function decodeType5Shading(mesh, reader, verticesPerRow) {\n     var coords = mesh.coords;\n     var colors = mesh.colors;\n     var ps = [];\n     while (reader.hasData) {\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n     }\n     mesh.figures.push({\n      type: 'lattice',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps),\n      verticesPerRow: verticesPerRow\n     });\n    }\n    var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n    var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n    var TRIANGLE_DENSITY = 20;\n    var getB = function getBClosure() {\n     function buildB(count) {\n      var lut = [];\n      for (var i = 0; i <= count; i++) {\n       var t = i / count, t_ = 1 - t;\n       lut.push(new Float32Array([\n        t_ * t_ * t_,\n        3 * t * t_ * t_,\n        3 * t * t * t_,\n        t * t * t\n       ]));\n      }\n      return lut;\n     }\n     var cache = [];\n     return function getB(count) {\n      if (!cache[count]) {\n       cache[count] = buildB(count);\n      }\n      return cache[count];\n     };\n    }();\n    function buildFigureFromPatch(mesh, index) {\n     var figure = mesh.figures[index];\n     assert(figure.type === 'patch', 'Unexpected patch mesh figure');\n     var coords = mesh.coords, colors = mesh.colors;\n     var pi = figure.coords;\n     var ci = figure.colors;\n     var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n     var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n     var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n     var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n     var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n     splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n     var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n     splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n     var verticesPerRow = splitXBy + 1;\n     var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n     var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n     var k = 0;\n     var cl = new Uint8Array(3), cr = new Uint8Array(3);\n     var c0 = colors[ci[0]], c1 = colors[ci[1]], c2 = colors[ci[2]], c3 = colors[ci[3]];\n     var bRow = getB(splitYBy), bCol = getB(splitXBy);\n     for (var row = 0; row <= splitYBy; row++) {\n      cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n      cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n      cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n      cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n      cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n      cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n      for (var col = 0; col <= splitXBy; col++, k++) {\n       if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n        continue;\n       }\n       var x = 0, y = 0;\n       var q = 0;\n       for (var i = 0; i <= 3; i++) {\n        for (var j = 0; j <= 3; j++, q++) {\n         var m = bRow[row][i] * bCol[col][j];\n         x += coords[pi[q]][0] * m;\n         y += coords[pi[q]][1] * m;\n        }\n       }\n       figureCoords[k] = coords.length;\n       coords.push([\n        x,\n        y\n       ]);\n       figureColors[k] = colors.length;\n       var newColor = new Uint8Array(3);\n       newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n       newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n       newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n       colors.push(newColor);\n      }\n     }\n     figureCoords[0] = pi[0];\n     figureColors[0] = ci[0];\n     figureCoords[splitXBy] = pi[3];\n     figureColors[splitXBy] = ci[1];\n     figureCoords[verticesPerRow * splitYBy] = pi[12];\n     figureColors[verticesPerRow * splitYBy] = ci[2];\n     figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n     figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n     mesh.figures[index] = {\n      type: 'lattice',\n      coords: figureCoords,\n      colors: figureColors,\n      verticesPerRow: verticesPerRow\n     };\n    }\n    function decodeType6Shading(mesh, reader) {\n     var coords = mesh.coords;\n     var colors = mesh.colors;\n     var ps = new Int32Array(16);\n     var cs = new Int32Array(4);\n     while (reader.hasData) {\n      var f = reader.readFlag();\n      assert(0 <= f && f <= 3, 'Unknown type6 flag');\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n       coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n       colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n      case 0:\n       ps[12] = pi + 3;\n       ps[13] = pi + 4;\n       ps[14] = pi + 5;\n       ps[15] = pi + 6;\n       ps[8] = pi + 2;\n       ps[11] = pi + 7;\n       ps[4] = pi + 1;\n       ps[7] = pi + 8;\n       ps[0] = pi;\n       ps[1] = pi + 11;\n       ps[2] = pi + 10;\n       ps[3] = pi + 9;\n       cs[2] = ci + 1;\n       cs[3] = ci + 2;\n       cs[0] = ci;\n       cs[1] = ci + 3;\n       break;\n      case 1:\n       tmp1 = ps[12];\n       tmp2 = ps[13];\n       tmp3 = ps[14];\n       tmp4 = ps[15];\n       ps[12] = tmp4;\n       ps[13] = pi + 0;\n       ps[14] = pi + 1;\n       ps[15] = pi + 2;\n       ps[8] = tmp3;\n       ps[11] = pi + 3;\n       ps[4] = tmp2;\n       ps[7] = pi + 4;\n       ps[0] = tmp1;\n       ps[1] = pi + 7;\n       ps[2] = pi + 6;\n       ps[3] = pi + 5;\n       tmp1 = cs[2];\n       tmp2 = cs[3];\n       cs[2] = tmp2;\n       cs[3] = ci;\n       cs[0] = tmp1;\n       cs[1] = ci + 1;\n       break;\n      case 2:\n       tmp1 = ps[15];\n       tmp2 = ps[11];\n       ps[12] = ps[3];\n       ps[13] = pi + 0;\n       ps[14] = pi + 1;\n       ps[15] = pi + 2;\n       ps[8] = ps[7];\n       ps[11] = pi + 3;\n       ps[4] = tmp2;\n       ps[7] = pi + 4;\n       ps[0] = tmp1;\n       ps[1] = pi + 7;\n       ps[2] = pi + 6;\n       ps[3] = pi + 5;\n       tmp1 = cs[3];\n       cs[2] = cs[1];\n       cs[3] = ci;\n       cs[0] = tmp1;\n       cs[1] = ci + 1;\n       break;\n      case 3:\n       ps[12] = ps[0];\n       ps[13] = pi + 0;\n       ps[14] = pi + 1;\n       ps[15] = pi + 2;\n       ps[8] = ps[1];\n       ps[11] = pi + 3;\n       ps[4] = ps[2];\n       ps[7] = pi + 4;\n       ps[0] = ps[3];\n       ps[1] = pi + 7;\n       ps[2] = pi + 6;\n       ps[3] = pi + 5;\n       cs[2] = cs[0];\n       cs[3] = ci;\n       cs[0] = cs[1];\n       cs[1] = ci + 1;\n       break;\n      }\n      ps[5] = coords.length;\n      coords.push([\n       (-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9,\n       (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9\n      ]);\n      ps[6] = coords.length;\n      coords.push([\n       (-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9,\n       (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9\n      ]);\n      ps[9] = coords.length;\n      coords.push([\n       (-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9,\n       (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9\n      ]);\n      ps[10] = coords.length;\n      coords.push([\n       (-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9,\n       (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9\n      ]);\n      mesh.figures.push({\n       type: 'patch',\n       coords: new Int32Array(ps),\n       colors: new Int32Array(cs)\n      });\n     }\n    }\n    function decodeType7Shading(mesh, reader) {\n     var coords = mesh.coords;\n     var colors = mesh.colors;\n     var ps = new Int32Array(16);\n     var cs = new Int32Array(4);\n     while (reader.hasData) {\n      var f = reader.readFlag();\n      assert(0 <= f && f <= 3, 'Unknown type7 flag');\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n       coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n       colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n      case 0:\n       ps[12] = pi + 3;\n       ps[13] = pi + 4;\n       ps[14] = pi + 5;\n       ps[15] = pi + 6;\n       ps[8] = pi + 2;\n       ps[9] = pi + 13;\n       ps[10] = pi + 14;\n       ps[11] = pi + 7;\n       ps[4] = pi + 1;\n       ps[5] = pi + 12;\n       ps[6] = pi + 15;\n       ps[7] = pi + 8;\n       ps[0] = pi;\n       ps[1] = pi + 11;\n       ps[2] = pi + 10;\n       ps[3] = pi + 9;\n       cs[2] = ci + 1;\n       cs[3] = ci + 2;\n       cs[0] = ci;\n       cs[1] = ci + 3;\n       break;\n      case 1:\n       tmp1 = ps[12];\n       tmp2 = ps[13];\n       tmp3 = ps[14];\n       tmp4 = ps[15];\n       ps[12] = tmp4;\n       ps[13] = pi + 0;\n       ps[14] = pi + 1;\n       ps[15] = pi + 2;\n       ps[8] = tmp3;\n       ps[9] = pi + 9;\n       ps[10] = pi + 10;\n       ps[11] = pi + 3;\n       ps[4] = tmp2;\n       ps[5] = pi + 8;\n       ps[6] = pi + 11;\n       ps[7] = pi + 4;\n       ps[0] = tmp1;\n       ps[1] = pi + 7;\n       ps[2] = pi + 6;\n       ps[3] = pi + 5;\n       tmp1 = cs[2];\n       tmp2 = cs[3];\n       cs[2] = tmp2;\n       cs[3] = ci;\n       cs[0] = tmp1;\n       cs[1] = ci + 1;\n       break;\n      case 2:\n       tmp1 = ps[15];\n       tmp2 = ps[11];\n       ps[12] = ps[3];\n       ps[13] = pi + 0;\n       ps[14] = pi + 1;\n       ps[15] = pi + 2;\n       ps[8] = ps[7];\n       ps[9] = pi + 9;\n       ps[10] = pi + 10;\n       ps[11] = pi + 3;\n       ps[4] = tmp2;\n       ps[5] = pi + 8;\n       ps[6] = pi + 11;\n       ps[7] = pi + 4;\n       ps[0] = tmp1;\n       ps[1] = pi + 7;\n       ps[2] = pi + 6;\n       ps[3] = pi + 5;\n       tmp1 = cs[3];\n       cs[2] = cs[1];\n       cs[3] = ci;\n       cs[0] = tmp1;\n       cs[1] = ci + 1;\n       break;\n      case 3:\n       ps[12] = ps[0];\n       ps[13] = pi + 0;\n       ps[14] = pi + 1;\n       ps[15] = pi + 2;\n       ps[8] = ps[1];\n       ps[9] = pi + 9;\n       ps[10] = pi + 10;\n       ps[11] = pi + 3;\n       ps[4] = ps[2];\n       ps[5] = pi + 8;\n       ps[6] = pi + 11;\n       ps[7] = pi + 4;\n       ps[0] = ps[3];\n       ps[1] = pi + 7;\n       ps[2] = pi + 6;\n       ps[3] = pi + 5;\n       cs[2] = cs[0];\n       cs[3] = ci;\n       cs[0] = cs[1];\n       cs[1] = ci + 1;\n       break;\n      }\n      mesh.figures.push({\n       type: 'patch',\n       coords: new Int32Array(ps),\n       colors: new Int32Array(cs)\n      });\n     }\n    }\n    function updateBounds(mesh) {\n     var minX = mesh.coords[0][0], minY = mesh.coords[0][1], maxX = minX, maxY = minY;\n     for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n      var x = mesh.coords[i][0], y = mesh.coords[i][1];\n      minX = minX > x ? x : minX;\n      minY = minY > y ? y : minY;\n      maxX = maxX < x ? x : maxX;\n      maxY = maxY < y ? y : maxY;\n     }\n     mesh.bounds = [\n      minX,\n      minY,\n      maxX,\n      maxY\n     ];\n    }\n    function packData(mesh) {\n     var i, ii, j, jj;\n     var coords = mesh.coords;\n     var coordsPacked = new Float32Array(coords.length * 2);\n     for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n      var xy = coords[i];\n      coordsPacked[j++] = xy[0];\n      coordsPacked[j++] = xy[1];\n     }\n     mesh.coords = coordsPacked;\n     var colors = mesh.colors;\n     var colorsPacked = new Uint8Array(colors.length * 3);\n     for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n      var c = colors[i];\n      colorsPacked[j++] = c[0];\n      colorsPacked[j++] = c[1];\n      colorsPacked[j++] = c[2];\n     }\n     mesh.colors = colorsPacked;\n     var figures = mesh.figures;\n     for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i], ps = figure.coords, cs = figure.colors;\n      for (j = 0, jj = ps.length; j < jj; j++) {\n       ps[j] *= 2;\n       cs[j] *= 3;\n      }\n     }\n    }\n    function Mesh(stream, matrix, xref, res) {\n     assert(isStream(stream), 'Mesh data is not a stream');\n     var dict = stream.dict;\n     this.matrix = matrix;\n     this.shadingType = dict.get('ShadingType');\n     this.type = 'Pattern';\n     this.bbox = dict.getArray('BBox');\n     var cs = dict.get('ColorSpace', 'CS');\n     cs = ColorSpace.parse(cs, xref, res);\n     this.cs = cs;\n     this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\n     var fnObj = dict.get('Function');\n     var fn = fnObj ? PDFFunction.parseArray(xref, fnObj) : null;\n     this.coords = [];\n     this.colors = [];\n     this.figures = [];\n     var decodeContext = {\n      bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n      bitsPerComponent: dict.get('BitsPerComponent'),\n      bitsPerFlag: dict.get('BitsPerFlag'),\n      decode: dict.getArray('Decode'),\n      colorFn: fn,\n      colorSpace: cs,\n      numComps: fn ? 1 : cs.numComps\n     };\n     var reader = new MeshStreamReader(stream, decodeContext);\n     var patchMesh = false;\n     switch (this.shadingType) {\n     case ShadingType.FREE_FORM_MESH:\n      decodeType4Shading(this, reader);\n      break;\n     case ShadingType.LATTICE_FORM_MESH:\n      var verticesPerRow = dict.get('VerticesPerRow') | 0;\n      assert(verticesPerRow >= 2, 'Invalid VerticesPerRow');\n      decodeType5Shading(this, reader, verticesPerRow);\n      break;\n     case ShadingType.COONS_PATCH_MESH:\n      decodeType6Shading(this, reader);\n      patchMesh = true;\n      break;\n     case ShadingType.TENSOR_PATCH_MESH:\n      decodeType7Shading(this, reader);\n      patchMesh = true;\n      break;\n     default:\n      error('Unsupported mesh type.');\n      break;\n     }\n     if (patchMesh) {\n      updateBounds(this);\n      for (var i = 0, ii = this.figures.length; i < ii; i++) {\n       buildFigureFromPatch(this, i);\n      }\n     }\n     updateBounds(this);\n     packData(this);\n    }\n    Mesh.prototype = {\n     getIR: function Mesh_getIR() {\n      return [\n       'Mesh',\n       this.shadingType,\n       this.coords,\n       this.colors,\n       this.figures,\n       this.bounds,\n       this.matrix,\n       this.bbox,\n       this.background\n      ];\n     }\n    };\n    return Mesh;\n   }();\n   Shadings.Dummy = function DummyClosure() {\n    function Dummy() {\n     this.type = 'Pattern';\n    }\n    Dummy.prototype = {\n     getIR: function Dummy_getIR() {\n      return ['Dummy'];\n     }\n    };\n    return Dummy;\n   }();\n   function getTilingPatternIR(operatorList, dict, args) {\n    var matrix = dict.getArray('Matrix');\n    var bbox = dict.getArray('BBox');\n    var xstep = dict.get('XStep');\n    var ystep = dict.get('YStep');\n    var paintType = dict.get('PaintType');\n    var tilingType = dict.get('TilingType');\n    return [\n     'TilingPattern',\n     args,\n     operatorList,\n     matrix,\n     bbox,\n     xstep,\n     ystep,\n     paintType,\n     tilingType\n    ];\n   }\n   exports.Pattern = Pattern;\n   exports.getTilingPatternIR = getTilingPatternIR;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsCoreEvaluator = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreStream, root.pdfjsCoreParser, root.pdfjsCoreImage, root.pdfjsCoreColorSpace, root.pdfjsCoreMurmurHash3, root.pdfjsCoreFonts, root.pdfjsCoreFunction, root.pdfjsCorePattern, root.pdfjsCoreCMap, root.pdfjsCoreMetrics, root.pdfjsCoreBidi, root.pdfjsCoreEncodings, root.pdfjsCoreStandardFonts, root.pdfjsCoreUnicode, root.pdfjsCoreGlyphList);\n  }(this, function (exports, sharedUtil, corePrimitives, coreStream, coreParser, coreImage, coreColorSpace, coreMurmurHash3, coreFonts, coreFunction, corePattern, coreCMap, coreMetrics, coreBidi, coreEncodings, coreStandardFonts, coreUnicode, coreGlyphList) {\n   var FONT_IDENTITY_MATRIX = sharedUtil.FONT_IDENTITY_MATRIX;\n   var IDENTITY_MATRIX = sharedUtil.IDENTITY_MATRIX;\n   var UNSUPPORTED_FEATURES = sharedUtil.UNSUPPORTED_FEATURES;\n   var ImageKind = sharedUtil.ImageKind;\n   var OPS = sharedUtil.OPS;\n   var TextRenderingMode = sharedUtil.TextRenderingMode;\n   var Util = sharedUtil.Util;\n   var assert = sharedUtil.assert;\n   var createPromiseCapability = sharedUtil.createPromiseCapability;\n   var error = sharedUtil.error;\n   var info = sharedUtil.info;\n   var isArray = sharedUtil.isArray;\n   var isNum = sharedUtil.isNum;\n   var isString = sharedUtil.isString;\n   var getLookupTableFactory = sharedUtil.getLookupTableFactory;\n   var warn = sharedUtil.warn;\n   var Dict = corePrimitives.Dict;\n   var Name = corePrimitives.Name;\n   var isEOF = corePrimitives.isEOF;\n   var isCmd = corePrimitives.isCmd;\n   var isDict = corePrimitives.isDict;\n   var isName = corePrimitives.isName;\n   var isRef = corePrimitives.isRef;\n   var isStream = corePrimitives.isStream;\n   var DecodeStream = coreStream.DecodeStream;\n   var JpegStream = coreStream.JpegStream;\n   var Stream = coreStream.Stream;\n   var Lexer = coreParser.Lexer;\n   var Parser = coreParser.Parser;\n   var PDFImage = coreImage.PDFImage;\n   var ColorSpace = coreColorSpace.ColorSpace;\n   var MurmurHash3_64 = coreMurmurHash3.MurmurHash3_64;\n   var ErrorFont = coreFonts.ErrorFont;\n   var FontFlags = coreFonts.FontFlags;\n   var Font = coreFonts.Font;\n   var IdentityToUnicodeMap = coreFonts.IdentityToUnicodeMap;\n   var ToUnicodeMap = coreFonts.ToUnicodeMap;\n   var getFontType = coreFonts.getFontType;\n   var isPDFFunction = coreFunction.isPDFFunction;\n   var PDFFunction = coreFunction.PDFFunction;\n   var Pattern = corePattern.Pattern;\n   var getTilingPatternIR = corePattern.getTilingPatternIR;\n   var CMapFactory = coreCMap.CMapFactory;\n   var IdentityCMap = coreCMap.IdentityCMap;\n   var getMetrics = coreMetrics.getMetrics;\n   var bidi = coreBidi.bidi;\n   var WinAnsiEncoding = coreEncodings.WinAnsiEncoding;\n   var StandardEncoding = coreEncodings.StandardEncoding;\n   var MacRomanEncoding = coreEncodings.MacRomanEncoding;\n   var SymbolSetEncoding = coreEncodings.SymbolSetEncoding;\n   var ZapfDingbatsEncoding = coreEncodings.ZapfDingbatsEncoding;\n   var getEncoding = coreEncodings.getEncoding;\n   var getStdFontMap = coreStandardFonts.getStdFontMap;\n   var getSerifFonts = coreStandardFonts.getSerifFonts;\n   var getSymbolsFonts = coreStandardFonts.getSymbolsFonts;\n   var getNormalizedUnicodes = coreUnicode.getNormalizedUnicodes;\n   var reverseIfRtl = coreUnicode.reverseIfRtl;\n   var getUnicodeForGlyph = coreUnicode.getUnicodeForGlyph;\n   var getGlyphsUnicode = coreGlyphList.getGlyphsUnicode;\n   var PartialEvaluator = function PartialEvaluatorClosure() {\n    var DefaultPartialEvaluatorOptions = {\n     forceDataSchema: false,\n     maxImageSize: -1,\n     disableFontFace: false,\n     cMapOptions: {\n      url: null,\n      packed: false\n     }\n    };\n    function NativeImageDecoder(xref, resources, handler, forceDataSchema) {\n     this.xref = xref;\n     this.resources = resources;\n     this.handler = handler;\n     this.forceDataSchema = forceDataSchema;\n    }\n    NativeImageDecoder.prototype = {\n     canDecode: function (image) {\n      return image instanceof JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources);\n     },\n     decode: function (image) {\n      var dict = image.dict;\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      colorSpace = ColorSpace.parse(colorSpace, this.xref, this.resources);\n      var numComps = colorSpace.numComps;\n      var decodePromise = this.handler.sendWithPromise('JpegDecode', [\n       image.getIR(this.forceDataSchema),\n       numComps\n      ]);\n      return decodePromise.then(function (message) {\n       var data = message.data;\n       return new Stream(data, 0, data.length, image.dict);\n      });\n     }\n    };\n    NativeImageDecoder.isSupported = function NativeImageDecoder_isSupported(image, xref, res) {\n     var dict = image.dict;\n     if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n     }\n     var cs = ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res);\n     return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n    };\n    NativeImageDecoder.isDecodable = function NativeImageDecoder_isDecodable(image, xref, res) {\n     var dict = image.dict;\n     if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n     }\n     var cs = ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res);\n     return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n    };\n    function PartialEvaluator(pdfManager, xref, handler, pageIndex, idFactory, fontCache, options) {\n     this.pdfManager = pdfManager;\n     this.xref = xref;\n     this.handler = handler;\n     this.pageIndex = pageIndex;\n     this.idFactory = idFactory;\n     this.fontCache = fontCache;\n     this.options = options || DefaultPartialEvaluatorOptions;\n    }\n    var TIME_SLOT_DURATION_MS = 20;\n    var CHECK_TIME_EVERY = 100;\n    function TimeSlotManager() {\n     this.reset();\n    }\n    TimeSlotManager.prototype = {\n     check: function TimeSlotManager_check() {\n      if (++this.checked < CHECK_TIME_EVERY) {\n       return false;\n      }\n      this.checked = 0;\n      return this.endTime <= Date.now();\n     },\n     reset: function TimeSlotManager_reset() {\n      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n      this.checked = 0;\n     }\n    };\n    var deferred = Promise.resolve();\n    var TILING_PATTERN = 1, SHADING_PATTERN = 2;\n    PartialEvaluator.prototype = {\n     hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n      if (!isDict(resources)) {\n       return false;\n      }\n      var processed = Object.create(null);\n      if (resources.objId) {\n       processed[resources.objId] = true;\n      }\n      var nodes = [resources], xref = this.xref;\n      while (nodes.length) {\n       var key, i, ii;\n       var node = nodes.shift();\n       var graphicStates = node.get('ExtGState');\n       if (isDict(graphicStates)) {\n        var graphicStatesKeys = graphicStates.getKeys();\n        for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\n         key = graphicStatesKeys[i];\n         var graphicState = graphicStates.get(key);\n         var bm = graphicState.get('BM');\n         if (isName(bm) && bm.name !== 'Normal') {\n          return true;\n         }\n        }\n       }\n       var xObjects = node.get('XObject');\n       if (!isDict(xObjects)) {\n        continue;\n       }\n       var xObjectsKeys = xObjects.getKeys();\n       for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\n        key = xObjectsKeys[i];\n        var xObject = xObjects.getRaw(key);\n        if (isRef(xObject)) {\n         if (processed[xObject.toString()]) {\n          continue;\n         }\n         xObject = xref.fetch(xObject);\n        }\n        if (!isStream(xObject)) {\n         continue;\n        }\n        if (xObject.dict.objId) {\n         if (processed[xObject.dict.objId]) {\n          continue;\n         }\n         processed[xObject.dict.objId] = true;\n        }\n        var xResources = xObject.dict.get('Resources');\n        if (isDict(xResources) && (!xResources.objId || !processed[xResources.objId])) {\n         nodes.push(xResources);\n         if (xResources.objId) {\n          processed[xResources.objId] = true;\n         }\n        }\n       }\n      }\n      return false;\n     },\n     buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\n      var matrix = xobj.dict.getArray('Matrix');\n      var bbox = xobj.dict.getArray('BBox');\n      var group = xobj.dict.get('Group');\n      if (group) {\n       var groupOptions = {\n        matrix: matrix,\n        bbox: bbox,\n        smask: smask,\n        isolated: false,\n        knockout: false\n       };\n       var groupSubtype = group.get('S');\n       var colorSpace;\n       if (isName(groupSubtype, 'Transparency')) {\n        groupOptions.isolated = group.get('I') || false;\n        groupOptions.knockout = group.get('K') || false;\n        colorSpace = group.has('CS') ? ColorSpace.parse(group.get('CS'), this.xref, resources) : null;\n       }\n       if (smask && smask.backdrop) {\n        colorSpace = colorSpace || ColorSpace.singletons.rgb;\n        smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n       }\n       operatorList.addOp(OPS.beginGroup, [groupOptions]);\n      }\n      operatorList.addOp(OPS.paintFormXObjectBegin, [\n       matrix,\n       bbox\n      ]);\n      return this.getOperatorList(xobj, task, xobj.dict.get('Resources') || resources, operatorList, initialState).then(function () {\n       operatorList.addOp(OPS.paintFormXObjectEnd, []);\n       if (group) {\n        operatorList.addOp(OPS.endGroup, [groupOptions]);\n       }\n      });\n     },\n     buildPaintImageXObject: function PartialEvaluator_buildPaintImageXObject(resources, image, inline, operatorList, cacheKey, imageCache) {\n      var self = this;\n      var dict = image.dict;\n      var w = dict.get('Width', 'W');\n      var h = dict.get('Height', 'H');\n      if (!(w && isNum(w)) || !(h && isNum(h))) {\n       warn('Image dimensions are missing, or not numbers.');\n       return;\n      }\n      var maxImageSize = this.options.maxImageSize;\n      if (maxImageSize !== -1 && w * h > maxImageSize) {\n       warn('Image exceeded maximum allowed size and was removed.');\n       return;\n      }\n      var imageMask = dict.get('ImageMask', 'IM') || false;\n      var imgData, args;\n      if (imageMask) {\n       var width = dict.get('Width', 'W');\n       var height = dict.get('Height', 'H');\n       var bitStrideLength = width + 7 >> 3;\n       var imgArray = image.getBytes(bitStrideLength * height);\n       var decode = dict.getArray('Decode', 'D');\n       var inverseDecode = !!decode && decode[0] > 0;\n       imgData = PDFImage.createMask(imgArray, width, height, image instanceof DecodeStream, inverseDecode);\n       imgData.cached = true;\n       args = [imgData];\n       operatorList.addOp(OPS.paintImageMaskXObject, args);\n       if (cacheKey) {\n        imageCache[cacheKey] = {\n         fn: OPS.paintImageMaskXObject,\n         args: args\n        };\n       }\n       return;\n      }\n      var softMask = dict.get('SMask', 'SM') || false;\n      var mask = dict.get('Mask') || false;\n      var SMALL_IMAGE_DIMENSIONS = 200;\n      if (inline && !softMask && !mask && !(image instanceof JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\n       var imageObj = new PDFImage(this.xref, resources, image, inline, null, null);\n       imgData = imageObj.createImageData(true);\n       operatorList.addOp(OPS.paintInlineImageXObject, [imgData]);\n       return;\n      }\n      var objId = 'img_' + this.idFactory.createObjId();\n      operatorList.addDependency(objId);\n      args = [\n       objId,\n       w,\n       h\n      ];\n      if (!softMask && !mask && image instanceof JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources)) {\n       operatorList.addOp(OPS.paintJpegXObject, args);\n       this.handler.send('obj', [\n        objId,\n        this.pageIndex,\n        'JpegStream',\n        image.getIR(this.options.forceDataSchema)\n       ]);\n       return;\n      }\n      var nativeImageDecoder = null;\n      if (image instanceof JpegStream || mask instanceof JpegStream || softMask instanceof JpegStream) {\n       nativeImageDecoder = new NativeImageDecoder(self.xref, resources, self.handler, self.options.forceDataSchema);\n      }\n      PDFImage.buildImage(self.handler, self.xref, resources, image, inline, nativeImageDecoder).then(function (imageObj) {\n       var imgData = imageObj.createImageData(false);\n       self.handler.send('obj', [\n        objId,\n        self.pageIndex,\n        'Image',\n        imgData\n       ], [imgData.data.buffer]);\n      }).then(undefined, function (reason) {\n       warn('Unable to decode image: ' + reason);\n       self.handler.send('obj', [\n        objId,\n        self.pageIndex,\n        'Image',\n        null\n       ]);\n      });\n      operatorList.addOp(OPS.paintImageXObject, args);\n      if (cacheKey) {\n       imageCache[cacheKey] = {\n        fn: OPS.paintImageXObject,\n        args: args\n       };\n      }\n     },\n     handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\n      var smaskContent = smask.get('G');\n      var smaskOptions = {\n       subtype: smask.get('S').name,\n       backdrop: smask.get('BC')\n      };\n      var transferObj = smask.get('TR');\n      if (isPDFFunction(transferObj)) {\n       var transferFn = PDFFunction.parse(this.xref, transferObj);\n       var transferMap = new Uint8Array(256);\n       var tmp = new Float32Array(1);\n       for (var i = 0; i < 256; i++) {\n        tmp[0] = i / 255;\n        transferFn(tmp, 0, tmp, 0);\n        transferMap[i] = tmp[0] * 255 | 0;\n       }\n       smaskOptions.transferMap = transferMap;\n      }\n      return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\n     },\n     handleTilingType: function PartialEvaluator_handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n      var tilingOpList = new OperatorList();\n      var resourcesArray = [\n       patternDict.get('Resources'),\n       resources\n      ];\n      var patternResources = Dict.merge(this.xref, resourcesArray);\n      return this.getOperatorList(pattern, task, patternResources, tilingOpList).then(function () {\n       operatorList.addDependencies(tilingOpList.dependencies);\n       operatorList.addOp(fn, getTilingPatternIR({\n        fnArray: tilingOpList.fnArray,\n        argsArray: tilingOpList.argsArray\n       }, patternDict, args));\n      });\n     },\n     handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n      var fontName;\n      if (fontArgs) {\n       fontArgs = fontArgs.slice();\n       fontName = fontArgs[0].name;\n      }\n      var self = this;\n      return this.loadFont(fontName, fontRef, this.xref, resources).then(function (translated) {\n       if (!translated.font.isType3Font) {\n        return translated;\n       }\n       return translated.loadType3Data(self, resources, operatorList, task).then(function () {\n        return translated;\n       }, function (reason) {\n        self.handler.send('UnsupportedFeature', { featureId: UNSUPPORTED_FEATURES.font });\n        return new TranslatedFont('g_font_error', new ErrorFont('Type3 font load error: ' + reason), translated.font);\n       });\n      }).then(function (translated) {\n       state.font = translated.font;\n       translated.send(self.handler);\n       return translated.loadedName;\n      });\n     },\n     handleText: function PartialEvaluator_handleText(chars, state) {\n      var font = state.font;\n      var glyphs = font.charsToGlyphs(chars);\n      var isAddToPathSet = !!(state.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG);\n      if (font.data && (isAddToPathSet || this.options.disableFontFace)) {\n       var buildPath = function (fontChar) {\n        if (!font.renderer.hasBuiltPath(fontChar)) {\n         var path = font.renderer.getPathJs(fontChar);\n         this.handler.send('commonobj', [\n          font.loadedName + '_path_' + fontChar,\n          'FontPath',\n          path\n         ]);\n        }\n       }.bind(this);\n       for (var i = 0, ii = glyphs.length; i < ii; i++) {\n        var glyph = glyphs[i];\n        buildPath(glyph.fontChar);\n        var accent = glyph.accent;\n        if (accent && accent.fontChar) {\n         buildPath(accent.fontChar);\n        }\n       }\n      }\n      return glyphs;\n     },\n     setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, xref, stateManager) {\n      var gStateObj = [];\n      var gStateKeys = gState.getKeys();\n      var self = this;\n      var promise = Promise.resolve();\n      for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\n       var key = gStateKeys[i];\n       var value = gState.get(key);\n       switch (key) {\n       case 'Type':\n        break;\n       case 'LW':\n       case 'LC':\n       case 'LJ':\n       case 'ML':\n       case 'D':\n       case 'RI':\n       case 'FL':\n       case 'CA':\n       case 'ca':\n        gStateObj.push([\n         key,\n         value\n        ]);\n        break;\n       case 'Font':\n        promise = promise.then(function () {\n         return self.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n          operatorList.addDependency(loadedName);\n          gStateObj.push([\n           key,\n           [\n            loadedName,\n            value[1]\n           ]\n          ]);\n         });\n        });\n        break;\n       case 'BM':\n        gStateObj.push([\n         key,\n         value\n        ]);\n        break;\n       case 'SMask':\n        if (isName(value, 'None')) {\n         gStateObj.push([\n          key,\n          false\n         ]);\n         break;\n        }\n        if (isDict(value)) {\n         promise = promise.then(function (dict) {\n          return self.handleSMask(dict, resources, operatorList, task, stateManager);\n         }.bind(this, value));\n         gStateObj.push([\n          key,\n          true\n         ]);\n        } else {\n         warn('Unsupported SMask type');\n        }\n        break;\n       case 'OP':\n       case 'op':\n       case 'OPM':\n       case 'BG':\n       case 'BG2':\n       case 'UCR':\n       case 'UCR2':\n       case 'TR':\n       case 'TR2':\n       case 'HT':\n       case 'SM':\n       case 'SA':\n       case 'AIS':\n       case 'TK':\n        info('graphic state operator ' + key);\n        break;\n       default:\n        info('Unknown graphic state operator ' + key);\n        break;\n       }\n      }\n      return promise.then(function () {\n       if (gStateObj.length > 0) {\n        operatorList.addOp(OPS.setGState, [gStateObj]);\n       }\n      });\n     },\n     loadFont: function PartialEvaluator_loadFont(fontName, font, xref, resources) {\n      function errorFont() {\n       return Promise.resolve(new TranslatedFont('g_font_error', new ErrorFont('Font ' + fontName + ' is not available'), font));\n      }\n      var fontRef;\n      if (font) {\n       assert(isRef(font));\n       fontRef = font;\n      } else {\n       var fontRes = resources.get('Font');\n       if (fontRes) {\n        fontRef = fontRes.getRaw(fontName);\n       } else {\n        warn('fontRes not available');\n        return errorFont();\n       }\n      }\n      if (!fontRef) {\n       warn('fontRef not available');\n       return errorFont();\n      }\n      if (this.fontCache.has(fontRef)) {\n       return this.fontCache.get(fontRef);\n      }\n      font = xref.fetchIfRef(fontRef);\n      if (!isDict(font)) {\n       return errorFont();\n      }\n      if (font.translated) {\n       return font.translated;\n      }\n      var fontCapability = createPromiseCapability();\n      var preEvaluatedFont = this.preEvaluateFont(font, xref);\n      var descriptor = preEvaluatedFont.descriptor;\n      var fontRefIsRef = isRef(fontRef), fontID;\n      if (fontRefIsRef) {\n       fontID = fontRef.toString();\n      }\n      if (isDict(descriptor)) {\n       if (!descriptor.fontAliases) {\n        descriptor.fontAliases = Object.create(null);\n       }\n       var fontAliases = descriptor.fontAliases;\n       var hash = preEvaluatedFont.hash;\n       if (fontAliases[hash]) {\n        var aliasFontRef = fontAliases[hash].aliasRef;\n        if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n         this.fontCache.putAlias(fontRef, aliasFontRef);\n         return this.fontCache.get(fontRef);\n        }\n       } else {\n        fontAliases[hash] = { fontID: Font.getFontID() };\n       }\n       if (fontRefIsRef) {\n        fontAliases[hash].aliasRef = fontRef;\n       }\n       fontID = fontAliases[hash].fontID;\n      }\n      if (fontRefIsRef) {\n       this.fontCache.put(fontRef, fontCapability.promise);\n      } else {\n       if (!fontID) {\n        fontID = this.idFactory.createObjId();\n       }\n       this.fontCache.put('id_' + fontID, fontCapability.promise);\n      }\n      assert(fontID, 'The \"fontID\" must be defined.');\n      font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\n      font.translated = fontCapability.promise;\n      var translatedPromise;\n      try {\n       translatedPromise = this.translateFont(preEvaluatedFont, xref);\n      } catch (e) {\n       translatedPromise = Promise.reject(e);\n      }\n      var self = this;\n      translatedPromise.then(function (translatedFont) {\n       if (translatedFont.fontType !== undefined) {\n        var xrefFontStats = xref.stats.fontTypes;\n        xrefFontStats[translatedFont.fontType] = true;\n       }\n       fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\n      }, function (reason) {\n       self.handler.send('UnsupportedFeature', { featureId: UNSUPPORTED_FEATURES.font });\n       try {\n        var descriptor = preEvaluatedFont.descriptor;\n        var fontFile3 = descriptor && descriptor.get('FontFile3');\n        var subtype = fontFile3 && fontFile3.get('Subtype');\n        var fontType = getFontType(preEvaluatedFont.type, subtype && subtype.name);\n        var xrefFontStats = xref.stats.fontTypes;\n        xrefFontStats[fontType] = true;\n       } catch (ex) {\n       }\n       fontCapability.resolve(new TranslatedFont(font.loadedName, new ErrorFont(reason instanceof Error ? reason.message : reason), font));\n      });\n      return fontCapability.promise;\n     },\n     buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n      var lastIndex = operatorList.length - 1;\n      if (!args) {\n       args = [];\n      }\n      if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== OPS.constructPath) {\n       operatorList.addOp(OPS.constructPath, [\n        [fn],\n        args\n       ]);\n      } else {\n       var opArgs = operatorList.argsArray[lastIndex];\n       opArgs[0].push(fn);\n       Array.prototype.push.apply(opArgs[1], args);\n      }\n     },\n     handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task, xref) {\n      var patternName = args[args.length - 1];\n      var pattern;\n      if (isName(patternName) && (pattern = patterns.get(patternName.name))) {\n       var dict = isStream(pattern) ? pattern.dict : pattern;\n       var typeNum = dict.get('PatternType');\n       if (typeNum === TILING_PATTERN) {\n        var color = cs.base ? cs.base.getRgb(args, 0) : null;\n        return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\n       } else if (typeNum === SHADING_PATTERN) {\n        var shading = dict.get('Shading');\n        var matrix = dict.getArray('Matrix');\n        pattern = Pattern.parseShading(shading, matrix, xref, resources, this.handler);\n        operatorList.addOp(fn, pattern.getIR());\n        return Promise.resolve();\n       }\n       return Promise.reject('Unknown PatternType: ' + typeNum);\n      }\n      operatorList.addOp(fn, args);\n      return Promise.resolve();\n     },\n     getOperatorList: function PartialEvaluator_getOperatorList(stream, task, resources, operatorList, initialState) {\n      var self = this;\n      var xref = this.xref;\n      var imageCache = Object.create(null);\n      assert(operatorList);\n      resources = resources || Dict.empty;\n      var xobjs = resources.get('XObject') || Dict.empty;\n      var patterns = resources.get('Pattern') || Dict.empty;\n      var stateManager = new StateManager(initialState || new EvalState());\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var timeSlotManager = new TimeSlotManager();\n      return new Promise(function promiseBody(resolve, reject) {\n       var next = function (promise) {\n        promise.then(function () {\n         try {\n          promiseBody(resolve, reject);\n         } catch (ex) {\n          reject(ex);\n         }\n        }, reject);\n       };\n       task.ensureNotTerminated();\n       timeSlotManager.reset();\n       var stop, operation = {}, i, ii, cs;\n       while (!(stop = timeSlotManager.check())) {\n        operation.args = null;\n        if (!preprocessor.read(operation)) {\n         break;\n        }\n        var args = operation.args;\n        var fn = operation.fn;\n        switch (fn | 0) {\n        case OPS.paintXObject:\n         if (args[0].code) {\n          break;\n         }\n         var name = args[0].name;\n         if (!name) {\n          warn('XObject must be referred to by name.');\n          continue;\n         }\n         if (imageCache[name] !== undefined) {\n          operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n          args = null;\n          continue;\n         }\n         var xobj = xobjs.get(name);\n         if (xobj) {\n          assert(isStream(xobj), 'XObject should be a stream');\n          var type = xobj.dict.get('Subtype');\n          assert(isName(type), 'XObject should have a Name subtype');\n          if (type.name === 'Form') {\n           stateManager.save();\n           next(self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\n            stateManager.restore();\n           }));\n           return;\n          } else if (type.name === 'Image') {\n           self.buildPaintImageXObject(resources, xobj, false, operatorList, name, imageCache);\n           args = null;\n           continue;\n          } else if (type.name === 'PS') {\n           info('Ignored XObject subtype PS');\n           continue;\n          } else {\n           error('Unhandled XObject subtype ' + type.name);\n          }\n         }\n         break;\n        case OPS.setFont:\n         var fontSize = args[1];\n         next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n          operatorList.addDependency(loadedName);\n          operatorList.addOp(OPS.setFont, [\n           loadedName,\n           fontSize\n          ]);\n         }));\n         return;\n        case OPS.endInlineImage:\n         var cacheKey = args[0].cacheKey;\n         if (cacheKey) {\n          var cacheEntry = imageCache[cacheKey];\n          if (cacheEntry !== undefined) {\n           operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n           args = null;\n           continue;\n          }\n         }\n         self.buildPaintImageXObject(resources, args[0], true, operatorList, cacheKey, imageCache);\n         args = null;\n         continue;\n        case OPS.showText:\n         args[0] = self.handleText(args[0], stateManager.state);\n         break;\n        case OPS.showSpacedText:\n         var arr = args[0];\n         var combinedGlyphs = [];\n         var arrLength = arr.length;\n         var state = stateManager.state;\n         for (i = 0; i < arrLength; ++i) {\n          var arrItem = arr[i];\n          if (isString(arrItem)) {\n           Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n          } else if (isNum(arrItem)) {\n           combinedGlyphs.push(arrItem);\n          }\n         }\n         args[0] = combinedGlyphs;\n         fn = OPS.showText;\n         break;\n        case OPS.nextLineShowText:\n         operatorList.addOp(OPS.nextLine);\n         args[0] = self.handleText(args[0], stateManager.state);\n         fn = OPS.showText;\n         break;\n        case OPS.nextLineSetSpacingShowText:\n         operatorList.addOp(OPS.nextLine);\n         operatorList.addOp(OPS.setWordSpacing, [args.shift()]);\n         operatorList.addOp(OPS.setCharSpacing, [args.shift()]);\n         args[0] = self.handleText(args[0], stateManager.state);\n         fn = OPS.showText;\n         break;\n        case OPS.setTextRenderingMode:\n         stateManager.state.textRenderingMode = args[0];\n         break;\n        case OPS.setFillColorSpace:\n         stateManager.state.fillColorSpace = ColorSpace.parse(args[0], xref, resources);\n         continue;\n        case OPS.setStrokeColorSpace:\n         stateManager.state.strokeColorSpace = ColorSpace.parse(args[0], xref, resources);\n         continue;\n        case OPS.setFillColor:\n         cs = stateManager.state.fillColorSpace;\n         args = cs.getRgb(args, 0);\n         fn = OPS.setFillRGBColor;\n         break;\n        case OPS.setStrokeColor:\n         cs = stateManager.state.strokeColorSpace;\n         args = cs.getRgb(args, 0);\n         fn = OPS.setStrokeRGBColor;\n         break;\n        case OPS.setFillGray:\n         stateManager.state.fillColorSpace = ColorSpace.singletons.gray;\n         args = ColorSpace.singletons.gray.getRgb(args, 0);\n         fn = OPS.setFillRGBColor;\n         break;\n        case OPS.setStrokeGray:\n         stateManager.state.strokeColorSpace = ColorSpace.singletons.gray;\n         args = ColorSpace.singletons.gray.getRgb(args, 0);\n         fn = OPS.setStrokeRGBColor;\n         break;\n        case OPS.setFillCMYKColor:\n         stateManager.state.fillColorSpace = ColorSpace.singletons.cmyk;\n         args = ColorSpace.singletons.cmyk.getRgb(args, 0);\n         fn = OPS.setFillRGBColor;\n         break;\n        case OPS.setStrokeCMYKColor:\n         stateManager.state.strokeColorSpace = ColorSpace.singletons.cmyk;\n         args = ColorSpace.singletons.cmyk.getRgb(args, 0);\n         fn = OPS.setStrokeRGBColor;\n         break;\n        case OPS.setFillRGBColor:\n         stateManager.state.fillColorSpace = ColorSpace.singletons.rgb;\n         args = ColorSpace.singletons.rgb.getRgb(args, 0);\n         break;\n        case OPS.setStrokeRGBColor:\n         stateManager.state.strokeColorSpace = ColorSpace.singletons.rgb;\n         args = ColorSpace.singletons.rgb.getRgb(args, 0);\n         break;\n        case OPS.setFillColorN:\n         cs = stateManager.state.fillColorSpace;\n         if (cs.name === 'Pattern') {\n          next(self.handleColorN(operatorList, OPS.setFillColorN, args, cs, patterns, resources, task, xref));\n          return;\n         }\n         args = cs.getRgb(args, 0);\n         fn = OPS.setFillRGBColor;\n         break;\n        case OPS.setStrokeColorN:\n         cs = stateManager.state.strokeColorSpace;\n         if (cs.name === 'Pattern') {\n          next(self.handleColorN(operatorList, OPS.setStrokeColorN, args, cs, patterns, resources, task, xref));\n          return;\n         }\n         args = cs.getRgb(args, 0);\n         fn = OPS.setStrokeRGBColor;\n         break;\n        case OPS.shadingFill:\n         var shadingRes = resources.get('Shading');\n         if (!shadingRes) {\n          error('No shading resource found');\n         }\n         var shading = shadingRes.get(args[0].name);\n         if (!shading) {\n          error('No shading object found');\n         }\n         var shadingFill = Pattern.parseShading(shading, null, xref, resources, self.handler);\n         var patternIR = shadingFill.getIR();\n         args = [patternIR];\n         fn = OPS.shadingFill;\n         break;\n        case OPS.setGState:\n         var dictName = args[0];\n         var extGState = resources.get('ExtGState');\n         if (!isDict(extGState) || !extGState.has(dictName.name)) {\n          break;\n         }\n         var gState = extGState.get(dictName.name);\n         next(self.setGState(resources, gState, operatorList, task, xref, stateManager));\n         return;\n        case OPS.moveTo:\n        case OPS.lineTo:\n        case OPS.curveTo:\n        case OPS.curveTo2:\n        case OPS.curveTo3:\n        case OPS.closePath:\n         self.buildPath(operatorList, fn, args);\n         continue;\n        case OPS.rectangle:\n         self.buildPath(operatorList, fn, args);\n         continue;\n        case OPS.markPoint:\n        case OPS.markPointProps:\n        case OPS.beginMarkedContent:\n        case OPS.beginMarkedContentProps:\n        case OPS.endMarkedContent:\n        case OPS.beginCompat:\n        case OPS.endCompat:\n         continue;\n        default:\n         if (args !== null) {\n          for (i = 0, ii = args.length; i < ii; i++) {\n           if (args[i] instanceof Dict) {\n            break;\n           }\n          }\n          if (i < ii) {\n           warn('getOperatorList - ignoring operator: ' + fn);\n           continue;\n          }\n         }\n        }\n        operatorList.addOp(fn, args);\n       }\n       if (stop) {\n        next(deferred);\n        return;\n       }\n       for (i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n        operatorList.addOp(OPS.restore, []);\n       }\n       resolve();\n      });\n     },\n     getTextContent: function PartialEvaluator_getTextContent(stream, task, resources, stateManager, normalizeWhitespace, combineTextItems) {\n      stateManager = stateManager || new StateManager(new TextState());\n      var WhitespaceRegexp = /\\s/g;\n      var textContent = {\n       items: [],\n       styles: Object.create(null)\n      };\n      var textContentItem = {\n       initialized: false,\n       str: [],\n       width: 0,\n       height: 0,\n       vertical: false,\n       lastAdvanceWidth: 0,\n       lastAdvanceHeight: 0,\n       textAdvanceScale: 0,\n       spaceWidth: 0,\n       fakeSpaceMin: Infinity,\n       fakeMultiSpaceMin: Infinity,\n       fakeMultiSpaceMax: -0,\n       textRunBreakAllowed: false,\n       transform: null,\n       fontName: null\n      };\n      var SPACE_FACTOR = 0.3;\n      var MULTI_SPACE_FACTOR = 1.5;\n      var MULTI_SPACE_FACTOR_MAX = 4;\n      var self = this;\n      var xref = this.xref;\n      resources = xref.fetchIfRef(resources) || Dict.empty;\n      var xobjs = null;\n      var xobjsCache = Object.create(null);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var textState;\n      function ensureTextContentItem() {\n       if (textContentItem.initialized) {\n        return textContentItem;\n       }\n       var font = textState.font;\n       if (!(font.loadedName in textContent.styles)) {\n        textContent.styles[font.loadedName] = {\n         fontFamily: font.fallbackName,\n         ascent: font.ascent,\n         descent: font.descent,\n         vertical: font.vertical\n        };\n       }\n       textContentItem.fontName = font.loadedName;\n       var tsm = [\n        textState.fontSize * textState.textHScale,\n        0,\n        0,\n        textState.fontSize,\n        0,\n        textState.textRise\n       ];\n       if (font.isType3Font && textState.fontMatrix !== FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\n        var glyphHeight = font.bbox[3] - font.bbox[1];\n        if (glyphHeight > 0) {\n         glyphHeight = glyphHeight * textState.fontMatrix[3];\n         tsm[3] *= glyphHeight;\n        }\n       }\n       var trm = Util.transform(textState.ctm, Util.transform(textState.textMatrix, tsm));\n       textContentItem.transform = trm;\n       if (!font.vertical) {\n        textContentItem.width = 0;\n        textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n        textContentItem.vertical = false;\n       } else {\n        textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n        textContentItem.height = 0;\n        textContentItem.vertical = true;\n       }\n       var a = textState.textLineMatrix[0];\n       var b = textState.textLineMatrix[1];\n       var scaleLineX = Math.sqrt(a * a + b * b);\n       a = textState.ctm[0];\n       b = textState.ctm[1];\n       var scaleCtmX = Math.sqrt(a * a + b * b);\n       textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n       textContentItem.lastAdvanceWidth = 0;\n       textContentItem.lastAdvanceHeight = 0;\n       var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n       if (spaceWidth) {\n        textContentItem.spaceWidth = spaceWidth;\n        textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n        textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n        textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n        textContentItem.textRunBreakAllowed = !font.isMonospace;\n       } else {\n        textContentItem.spaceWidth = 0;\n        textContentItem.fakeSpaceMin = Infinity;\n        textContentItem.fakeMultiSpaceMin = Infinity;\n        textContentItem.fakeMultiSpaceMax = 0;\n        textContentItem.textRunBreakAllowed = false;\n       }\n       textContentItem.initialized = true;\n       return textContentItem;\n      }\n      function replaceWhitespace(str) {\n       var i = 0, ii = str.length, code;\n       while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\n        i++;\n       }\n       return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\n      }\n      function runBidiTransform(textChunk) {\n       var str = textChunk.str.join('');\n       var bidiResult = bidi(str, -1, textChunk.vertical);\n       return {\n        str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n        dir: bidiResult.dir,\n        width: textChunk.width,\n        height: textChunk.height,\n        transform: textChunk.transform,\n        fontName: textChunk.fontName\n       };\n      }\n      function handleSetFont(fontName, fontRef) {\n       return self.loadFont(fontName, fontRef, xref, resources).then(function (translated) {\n        textState.font = translated.font;\n        textState.fontMatrix = translated.font.fontMatrix || FONT_IDENTITY_MATRIX;\n       });\n      }\n      function buildTextContentItem(chars) {\n       var font = textState.font;\n       var textChunk = ensureTextContentItem();\n       var width = 0;\n       var height = 0;\n       var glyphs = font.charsToGlyphs(chars);\n       var defaultVMetrics = font.defaultVMetrics;\n       for (var i = 0; i < glyphs.length; i++) {\n        var glyph = glyphs[i];\n        var vMetricX = null;\n        var vMetricY = null;\n        var glyphWidth = null;\n        if (font.vertical) {\n         if (glyph.vmetric) {\n          glyphWidth = glyph.vmetric[0];\n          vMetricX = glyph.vmetric[1];\n          vMetricY = glyph.vmetric[2];\n         } else {\n          glyphWidth = glyph.width;\n          vMetricX = glyph.width * 0.5;\n          vMetricY = defaultVMetrics[2];\n         }\n        } else {\n         glyphWidth = glyph.width;\n        }\n        var glyphUnicode = glyph.unicode;\n        var NormalizedUnicodes = getNormalizedUnicodes();\n        if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n         glyphUnicode = NormalizedUnicodes[glyphUnicode];\n        }\n        glyphUnicode = reverseIfRtl(glyphUnicode);\n        var charSpacing = textState.charSpacing;\n        if (glyph.isSpace) {\n         var wordSpacing = textState.wordSpacing;\n         charSpacing += wordSpacing;\n         if (wordSpacing > 0) {\n          addFakeSpaces(wordSpacing, textChunk.str);\n         }\n        }\n        var tx = 0;\n        var ty = 0;\n        if (!font.vertical) {\n         var w0 = glyphWidth * textState.fontMatrix[0];\n         tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n         width += tx;\n        } else {\n         var w1 = glyphWidth * textState.fontMatrix[0];\n         ty = w1 * textState.fontSize + charSpacing;\n         height += ty;\n        }\n        textState.translateTextMatrix(tx, ty);\n        textChunk.str.push(glyphUnicode);\n       }\n       if (!font.vertical) {\n        textChunk.lastAdvanceWidth = width;\n        textChunk.width += width;\n       } else {\n        textChunk.lastAdvanceHeight = height;\n        textChunk.height += Math.abs(height);\n       }\n       return textChunk;\n      }\n      function addFakeSpaces(width, strBuf) {\n       if (width < textContentItem.fakeSpaceMin) {\n        return;\n       }\n       if (width < textContentItem.fakeMultiSpaceMin) {\n        strBuf.push(' ');\n        return;\n       }\n       var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n       while (fakeSpaces-- > 0) {\n        strBuf.push(' ');\n       }\n      }\n      function flushTextContentItem() {\n       if (!textContentItem.initialized) {\n        return;\n       }\n       textContentItem.width *= textContentItem.textAdvanceScale;\n       textContentItem.height *= textContentItem.textAdvanceScale;\n       textContent.items.push(runBidiTransform(textContentItem));\n       textContentItem.initialized = false;\n       textContentItem.str.length = 0;\n      }\n      var timeSlotManager = new TimeSlotManager();\n      return new Promise(function promiseBody(resolve, reject) {\n       var next = function (promise) {\n        promise.then(function () {\n         try {\n          promiseBody(resolve, reject);\n         } catch (ex) {\n          reject(ex);\n         }\n        }, reject);\n       };\n       task.ensureNotTerminated();\n       timeSlotManager.reset();\n       var stop, operation = {}, args = [];\n       while (!(stop = timeSlotManager.check())) {\n        args.length = 0;\n        operation.args = args;\n        if (!preprocessor.read(operation)) {\n         break;\n        }\n        textState = stateManager.state;\n        var fn = operation.fn;\n        args = operation.args;\n        var advance, diff;\n        switch (fn | 0) {\n        case OPS.setFont:\n         var fontNameArg = args[0].name, fontSizeArg = args[1];\n         if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n          break;\n         }\n         flushTextContentItem();\n         textState.fontName = fontNameArg;\n         textState.fontSize = fontSizeArg;\n         next(handleSetFont(fontNameArg, null));\n         return;\n        case OPS.setTextRise:\n         flushTextContentItem();\n         textState.textRise = args[0];\n         break;\n        case OPS.setHScale:\n         flushTextContentItem();\n         textState.textHScale = args[0] / 100;\n         break;\n        case OPS.setLeading:\n         flushTextContentItem();\n         textState.leading = args[0];\n         break;\n        case OPS.moveText:\n         var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n         advance = args[0] - args[1];\n         if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n          textState.translateTextLineMatrix(args[0], args[1]);\n          textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n          textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n          diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n          addFakeSpaces(diff, textContentItem.str);\n          break;\n         }\n         flushTextContentItem();\n         textState.translateTextLineMatrix(args[0], args[1]);\n         textState.textMatrix = textState.textLineMatrix.slice();\n         break;\n        case OPS.setLeadingMoveText:\n         flushTextContentItem();\n         textState.leading = -args[1];\n         textState.translateTextLineMatrix(args[0], args[1]);\n         textState.textMatrix = textState.textLineMatrix.slice();\n         break;\n        case OPS.nextLine:\n         flushTextContentItem();\n         textState.carriageReturn();\n         break;\n        case OPS.setTextMatrix:\n         advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n         if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n          textState.translateTextLineMatrix(advance.width, advance.height);\n          textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n          textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n          diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n          addFakeSpaces(diff, textContentItem.str);\n          break;\n         }\n         flushTextContentItem();\n         textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n         textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n         break;\n        case OPS.setCharSpacing:\n         textState.charSpacing = args[0];\n         break;\n        case OPS.setWordSpacing:\n         textState.wordSpacing = args[0];\n         break;\n        case OPS.beginText:\n         flushTextContentItem();\n         textState.textMatrix = IDENTITY_MATRIX.slice();\n         textState.textLineMatrix = IDENTITY_MATRIX.slice();\n         break;\n        case OPS.showSpacedText:\n         var items = args[0];\n         var offset;\n         for (var j = 0, jj = items.length; j < jj; j++) {\n          if (typeof items[j] === 'string') {\n           buildTextContentItem(items[j]);\n          } else if (isNum(items[j])) {\n           ensureTextContentItem();\n           advance = items[j] * textState.fontSize / 1000;\n           var breakTextRun = false;\n           if (textState.font.vertical) {\n            offset = advance;\n            textState.translateTextMatrix(0, offset);\n            breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n            if (!breakTextRun) {\n             textContentItem.height += offset;\n            }\n           } else {\n            advance = -advance;\n            offset = advance * textState.textHScale;\n            textState.translateTextMatrix(offset, 0);\n            breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n            if (!breakTextRun) {\n             textContentItem.width += offset;\n            }\n           }\n           if (breakTextRun) {\n            flushTextContentItem();\n           } else if (advance > 0) {\n            addFakeSpaces(advance, textContentItem.str);\n           }\n          }\n         }\n         break;\n        case OPS.showText:\n         buildTextContentItem(args[0]);\n         break;\n        case OPS.nextLineShowText:\n         flushTextContentItem();\n         textState.carriageReturn();\n         buildTextContentItem(args[0]);\n         break;\n        case OPS.nextLineSetSpacingShowText:\n         flushTextContentItem();\n         textState.wordSpacing = args[0];\n         textState.charSpacing = args[1];\n         textState.carriageReturn();\n         buildTextContentItem(args[2]);\n         break;\n        case OPS.paintXObject:\n         flushTextContentItem();\n         if (args[0].code) {\n          break;\n         }\n         if (!xobjs) {\n          xobjs = resources.get('XObject') || Dict.empty;\n         }\n         var name = args[0].name;\n         if (xobjsCache.key === name) {\n          if (xobjsCache.texts) {\n           Util.appendToArray(textContent.items, xobjsCache.texts.items);\n           Util.extendObj(textContent.styles, xobjsCache.texts.styles);\n          }\n          break;\n         }\n         var xobj = xobjs.get(name);\n         if (!xobj) {\n          break;\n         }\n         assert(isStream(xobj), 'XObject should be a stream');\n         var type = xobj.dict.get('Subtype');\n         assert(isName(type), 'XObject should have a Name subtype');\n         if ('Form' !== type.name) {\n          xobjsCache.key = name;\n          xobjsCache.texts = null;\n          break;\n         }\n         stateManager.save();\n         var matrix = xobj.dict.getArray('Matrix');\n         if (isArray(matrix) && matrix.length === 6) {\n          stateManager.transform(matrix);\n         }\n         next(self.getTextContent(xobj, task, xobj.dict.get('Resources') || resources, stateManager, normalizeWhitespace, combineTextItems).then(function (formTextContent) {\n          Util.appendToArray(textContent.items, formTextContent.items);\n          Util.extendObj(textContent.styles, formTextContent.styles);\n          stateManager.restore();\n          xobjsCache.key = name;\n          xobjsCache.texts = formTextContent;\n         }));\n         return;\n        case OPS.setGState:\n         flushTextContentItem();\n         var dictName = args[0];\n         var extGState = resources.get('ExtGState');\n         if (!isDict(extGState) || !isName(dictName)) {\n          break;\n         }\n         var gState = extGState.get(dictName.name);\n         if (!isDict(gState)) {\n          break;\n         }\n         var gStateFont = gState.get('Font');\n         if (gStateFont) {\n          textState.fontName = null;\n          textState.fontSize = gStateFont[1];\n          next(handleSetFont(null, gStateFont[0]));\n          return;\n         }\n         break;\n        }\n       }\n       if (stop) {\n        next(deferred);\n        return;\n       }\n       flushTextContentItem();\n       resolve(textContent);\n      });\n     },\n     extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, xref, properties) {\n      var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n      var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n      if (properties.composite) {\n       var cidSystemInfo = dict.get('CIDSystemInfo');\n       if (isDict(cidSystemInfo)) {\n        properties.cidSystemInfo = {\n         registry: cidSystemInfo.get('Registry'),\n         ordering: cidSystemInfo.get('Ordering'),\n         supplement: cidSystemInfo.get('Supplement')\n        };\n       }\n       var cidToGidMap = dict.get('CIDToGIDMap');\n       if (isStream(cidToGidMap)) {\n        properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n       }\n      }\n      var differences = [];\n      var baseEncodingName = null;\n      var encoding;\n      if (dict.has('Encoding')) {\n       encoding = dict.get('Encoding');\n       if (isDict(encoding)) {\n        baseEncodingName = encoding.get('BaseEncoding');\n        baseEncodingName = isName(baseEncodingName) ? baseEncodingName.name : null;\n        if (encoding.has('Differences')) {\n         var diffEncoding = encoding.get('Differences');\n         var index = 0;\n         for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n          var data = xref.fetchIfRef(diffEncoding[j]);\n          if (isNum(data)) {\n           index = data;\n          } else if (isName(data)) {\n           differences[index++] = data.name;\n          } else {\n           error('Invalid entry in \\'Differences\\' array: ' + data);\n          }\n         }\n        }\n       } else if (isName(encoding)) {\n        baseEncodingName = encoding.name;\n       } else {\n        error('Encoding is not a Name nor a Dict');\n       }\n       if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\n        baseEncodingName = null;\n       }\n      }\n      if (baseEncodingName) {\n       properties.defaultEncoding = getEncoding(baseEncodingName).slice();\n      } else {\n       var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n       var isNonsymbolicFont = !!(properties.flags & FontFlags.Nonsymbolic);\n       encoding = StandardEncoding;\n       if (properties.type === 'TrueType' && !isNonsymbolicFont) {\n        encoding = WinAnsiEncoding;\n       }\n       if (isSymbolicFont) {\n        encoding = MacRomanEncoding;\n        if (!properties.file) {\n         if (/Symbol/i.test(properties.name)) {\n          encoding = SymbolSetEncoding;\n         } else if (/Dingbats/i.test(properties.name)) {\n          encoding = ZapfDingbatsEncoding;\n         }\n        }\n       }\n       properties.defaultEncoding = encoding;\n      }\n      properties.differences = differences;\n      properties.baseEncodingName = baseEncodingName;\n      properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n      properties.dict = dict;\n      return toUnicodePromise.then(function (toUnicode) {\n       properties.toUnicode = toUnicode;\n       return this.buildToUnicode(properties);\n      }.bind(this)).then(function (toUnicode) {\n       properties.toUnicode = toUnicode;\n       return properties;\n      });\n     },\n     buildToUnicode: function PartialEvaluator_buildToUnicode(properties) {\n      properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n      if (properties.hasIncludedToUnicodeMap) {\n       return Promise.resolve(properties.toUnicode);\n      }\n      var toUnicode, charcode, glyphName;\n      if (!properties.composite)\n       {\n        toUnicode = [];\n        var encoding = properties.defaultEncoding.slice();\n        var baseEncodingName = properties.baseEncodingName;\n        var differences = properties.differences;\n        for (charcode in differences) {\n         glyphName = differences[charcode];\n         if (glyphName === '.notdef') {\n          continue;\n         }\n         encoding[charcode] = glyphName;\n        }\n        var glyphsUnicodeMap = getGlyphsUnicode();\n        for (charcode in encoding) {\n         glyphName = encoding[charcode];\n         if (glyphName === '') {\n          continue;\n         } else if (glyphsUnicodeMap[glyphName] === undefined) {\n          var code = 0;\n          switch (glyphName[0]) {\n          case 'G':\n           if (glyphName.length === 3) {\n            code = parseInt(glyphName.substr(1), 16);\n           }\n           break;\n          case 'g':\n           if (glyphName.length === 5) {\n            code = parseInt(glyphName.substr(1), 16);\n           }\n           break;\n          case 'C':\n          case 'c':\n           if (glyphName.length >= 3) {\n            code = +glyphName.substr(1);\n           }\n           break;\n          default:\n           var unicode = getUnicodeForGlyph(glyphName, glyphsUnicodeMap);\n           if (unicode !== -1) {\n            code = unicode;\n           }\n          }\n          if (code) {\n           if (baseEncodingName && code === +charcode) {\n            var baseEncoding = getEncoding(baseEncodingName);\n            if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n             toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n             continue;\n            }\n           }\n           toUnicode[charcode] = String.fromCharCode(code);\n          }\n          continue;\n         }\n         toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n        }\n        return Promise.resolve(new ToUnicodeMap(toUnicode));\n       }\n      if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\n       var registry = properties.cidSystemInfo.registry;\n       var ordering = properties.cidSystemInfo.ordering;\n       var ucs2CMapName = Name.get(registry + '-' + ordering + '-UCS2');\n       return CMapFactory.create(ucs2CMapName, this.options.cMapOptions, null).then(function (ucs2CMap) {\n        var cMap = properties.cMap;\n        toUnicode = [];\n        cMap.forEach(function (charcode, cid) {\n         assert(cid <= 0xffff, 'Max size of CID is 65,535');\n         var ucs2 = ucs2CMap.lookup(cid);\n         if (ucs2) {\n          toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n         }\n        });\n        return new ToUnicodeMap(toUnicode);\n       });\n      }\n      return Promise.resolve(new IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n     },\n     readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n      var cmapObj = toUnicode;\n      if (isName(cmapObj)) {\n       return CMapFactory.create(cmapObj, this.options.cMapOptions, null).then(function (cmap) {\n        if (cmap instanceof IdentityCMap) {\n         return new IdentityToUnicodeMap(0, 0xFFFF);\n        }\n        return new ToUnicodeMap(cmap.getMap());\n       });\n      } else if (isStream(cmapObj)) {\n       return CMapFactory.create(cmapObj, this.options.cMapOptions, null).then(function (cmap) {\n        if (cmap instanceof IdentityCMap) {\n         return new IdentityToUnicodeMap(0, 0xFFFF);\n        }\n        var map = new Array(cmap.length);\n        cmap.forEach(function (charCode, token) {\n         var str = [];\n         for (var k = 0; k < token.length; k += 2) {\n          var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n          if ((w1 & 0xF800) !== 0xD800) {\n           str.push(w1);\n           continue;\n          }\n          k += 2;\n          var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n          str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n         }\n         map[charCode] = String.fromCharCode.apply(String, str);\n        });\n        return new ToUnicodeMap(map);\n       });\n      }\n      return Promise.resolve(null);\n     },\n     readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n      var glyphsData = cidToGidStream.getBytes();\n      var result = [];\n      for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n       var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n       if (glyphID === 0) {\n        continue;\n       }\n       var code = j >> 1;\n       result[code] = glyphID;\n      }\n      return result;\n     },\n     extractWidths: function PartialEvaluator_extractWidths(dict, xref, descriptor, properties) {\n      var glyphsWidths = [];\n      var defaultWidth = 0;\n      var glyphsVMetrics = [];\n      var defaultVMetrics;\n      var i, ii, j, jj, start, code, widths;\n      if (properties.composite) {\n       defaultWidth = dict.get('DW') || 1000;\n       widths = dict.get('W');\n       if (widths) {\n        for (i = 0, ii = widths.length; i < ii; i++) {\n         start = xref.fetchIfRef(widths[i++]);\n         code = xref.fetchIfRef(widths[i]);\n         if (isArray(code)) {\n          for (j = 0, jj = code.length; j < jj; j++) {\n           glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n          }\n         } else {\n          var width = xref.fetchIfRef(widths[++i]);\n          for (j = start; j <= code; j++) {\n           glyphsWidths[j] = width;\n          }\n         }\n        }\n       }\n       if (properties.vertical) {\n        var vmetrics = dict.getArray('DW2') || [\n         880,\n         -1000\n        ];\n        defaultVMetrics = [\n         vmetrics[1],\n         defaultWidth * 0.5,\n         vmetrics[0]\n        ];\n        vmetrics = dict.get('W2');\n        if (vmetrics) {\n         for (i = 0, ii = vmetrics.length; i < ii; i++) {\n          start = xref.fetchIfRef(vmetrics[i++]);\n          code = xref.fetchIfRef(vmetrics[i]);\n          if (isArray(code)) {\n           for (j = 0, jj = code.length; j < jj; j++) {\n            glyphsVMetrics[start++] = [\n             xref.fetchIfRef(code[j++]),\n             xref.fetchIfRef(code[j++]),\n             xref.fetchIfRef(code[j])\n            ];\n           }\n          } else {\n           var vmetric = [\n            xref.fetchIfRef(vmetrics[++i]),\n            xref.fetchIfRef(vmetrics[++i]),\n            xref.fetchIfRef(vmetrics[++i])\n           ];\n           for (j = start; j <= code; j++) {\n            glyphsVMetrics[j] = vmetric;\n           }\n          }\n         }\n        }\n       }\n      } else {\n       var firstChar = properties.firstChar;\n       widths = dict.get('Widths');\n       if (widths) {\n        j = firstChar;\n        for (i = 0, ii = widths.length; i < ii; i++) {\n         glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n        }\n        defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\n       } else {\n        var baseFontName = dict.get('BaseFont');\n        if (isName(baseFontName)) {\n         var metrics = this.getBaseFontMetrics(baseFontName.name);\n         glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n         defaultWidth = metrics.defaultWidth;\n        }\n       }\n      }\n      var isMonospace = true;\n      var firstWidth = defaultWidth;\n      for (var glyph in glyphsWidths) {\n       var glyphWidth = glyphsWidths[glyph];\n       if (!glyphWidth) {\n        continue;\n       }\n       if (!firstWidth) {\n        firstWidth = glyphWidth;\n        continue;\n       }\n       if (firstWidth !== glyphWidth) {\n        isMonospace = false;\n        break;\n       }\n      }\n      if (isMonospace) {\n       properties.flags |= FontFlags.FixedPitch;\n      }\n      properties.defaultWidth = defaultWidth;\n      properties.widths = glyphsWidths;\n      properties.defaultVMetrics = defaultVMetrics;\n      properties.vmetrics = glyphsVMetrics;\n     },\n     isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n      var fontNameWoStyle = baseFontName.split('-')[0];\n      return fontNameWoStyle in getSerifFonts() || fontNameWoStyle.search(/serif/gi) !== -1;\n     },\n     getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n      var defaultWidth = 0;\n      var widths = [];\n      var monospace = false;\n      var stdFontMap = getStdFontMap();\n      var lookupName = stdFontMap[name] || name;\n      var Metrics = getMetrics();\n      if (!(lookupName in Metrics)) {\n       if (this.isSerifFont(name)) {\n        lookupName = 'Times-Roman';\n       } else {\n        lookupName = 'Helvetica';\n       }\n      }\n      var glyphWidths = Metrics[lookupName];\n      if (isNum(glyphWidths)) {\n       defaultWidth = glyphWidths;\n       monospace = true;\n      } else {\n       widths = glyphWidths();\n      }\n      return {\n       defaultWidth: defaultWidth,\n       monospace: monospace,\n       widths: widths\n      };\n     },\n     buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\n      var widths = Object.create(null);\n      var differences = properties.differences;\n      var encoding = properties.defaultEncoding;\n      for (var charCode = 0; charCode < 256; charCode++) {\n       if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n        widths[charCode] = widthsByGlyphName[differences[charCode]];\n        continue;\n       }\n       if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n        widths[charCode] = widthsByGlyphName[encoding[charCode]];\n        continue;\n       }\n      }\n      return widths;\n     },\n     preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict, xref) {\n      var baseDict = dict;\n      var type = dict.get('Subtype');\n      assert(isName(type), 'invalid font Subtype');\n      var composite = false;\n      var uint8array;\n      if (type.name === 'Type0') {\n       var df = dict.get('DescendantFonts');\n       if (!df) {\n        error('Descendant fonts are not specified');\n       }\n       dict = isArray(df) ? xref.fetchIfRef(df[0]) : df;\n       type = dict.get('Subtype');\n       assert(isName(type), 'invalid font Subtype');\n       composite = true;\n      }\n      var descriptor = dict.get('FontDescriptor');\n      if (descriptor) {\n       var hash = new MurmurHash3_64();\n       var encoding = baseDict.getRaw('Encoding');\n       if (isName(encoding)) {\n        hash.update(encoding.name);\n       } else if (isRef(encoding)) {\n        hash.update(encoding.toString());\n       } else if (isDict(encoding)) {\n        var keys = encoding.getKeys();\n        for (var i = 0, ii = keys.length; i < ii; i++) {\n         var entry = encoding.getRaw(keys[i]);\n         if (isName(entry)) {\n          hash.update(entry.name);\n         } else if (isRef(entry)) {\n          hash.update(entry.toString());\n         } else if (isArray(entry)) {\n          var diffLength = entry.length, diffBuf = new Array(diffLength);\n          for (var j = 0; j < diffLength; j++) {\n           var diffEntry = entry[j];\n           if (isName(diffEntry)) {\n            diffBuf[j] = diffEntry.name;\n           } else if (isNum(diffEntry) || isRef(diffEntry)) {\n            diffBuf[j] = diffEntry.toString();\n           }\n          }\n          hash.update(diffBuf.join());\n         }\n        }\n       }\n       var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n       if (isStream(toUnicode)) {\n        var stream = toUnicode.str || toUnicode;\n        uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n        hash.update(uint8array);\n       } else if (isName(toUnicode)) {\n        hash.update(toUnicode.name);\n       }\n       var widths = dict.get('Widths') || baseDict.get('Widths');\n       if (widths) {\n        uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n        hash.update(uint8array);\n       }\n      }\n      return {\n       descriptor: descriptor,\n       dict: dict,\n       baseDict: baseDict,\n       composite: composite,\n       type: type.name,\n       hash: hash ? hash.hexdigest() : ''\n      };\n     },\n     translateFont: function PartialEvaluator_translateFont(preEvaluatedFont, xref) {\n      var baseDict = preEvaluatedFont.baseDict;\n      var dict = preEvaluatedFont.dict;\n      var composite = preEvaluatedFont.composite;\n      var descriptor = preEvaluatedFont.descriptor;\n      var type = preEvaluatedFont.type;\n      var maxCharIndex = composite ? 0xFFFF : 0xFF;\n      var cMapOptions = this.options.cMapOptions;\n      var properties;\n      if (!descriptor) {\n       if (type === 'Type3') {\n        descriptor = new Dict(null);\n        descriptor.set('FontName', Name.get(type));\n        descriptor.set('FontBBox', dict.getArray('FontBBox'));\n       } else {\n        var baseFontName = dict.get('BaseFont');\n        if (!isName(baseFontName)) {\n         error('Base font is not specified');\n        }\n        baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n        var metrics = this.getBaseFontMetrics(baseFontName);\n        var fontNameWoStyle = baseFontName.split('-')[0];\n        var flags = (this.isSerifFont(fontNameWoStyle) ? FontFlags.Serif : 0) | (metrics.monospace ? FontFlags.FixedPitch : 0) | (getSymbolsFonts()[fontNameWoStyle] ? FontFlags.Symbolic : FontFlags.Nonsymbolic);\n        properties = {\n         type: type,\n         name: baseFontName,\n         widths: metrics.widths,\n         defaultWidth: metrics.defaultWidth,\n         flags: flags,\n         firstChar: 0,\n         lastChar: maxCharIndex\n        };\n        return this.extractDataStructures(dict, dict, xref, properties).then(function (properties) {\n         properties.widths = this.buildCharCodeToWidth(metrics.widths, properties);\n         return new Font(baseFontName, null, properties);\n        }.bind(this));\n       }\n      }\n      var firstChar = dict.get('FirstChar') || 0;\n      var lastChar = dict.get('LastChar') || maxCharIndex;\n      var fontName = descriptor.get('FontName');\n      var baseFont = dict.get('BaseFont');\n      if (isString(fontName)) {\n       fontName = Name.get(fontName);\n      }\n      if (isString(baseFont)) {\n       baseFont = Name.get(baseFont);\n      }\n      if (type !== 'Type3') {\n       var fontNameStr = fontName && fontName.name;\n       var baseFontStr = baseFont && baseFont.name;\n       if (fontNameStr !== baseFontStr) {\n        info('The FontDescriptor\\'s FontName is \"' + fontNameStr + '\" but should be the same as the Font\\'s BaseFont \"' + baseFontStr + '\"');\n        if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\n         fontName = baseFont;\n        }\n       }\n      }\n      fontName = fontName || baseFont;\n      assert(isName(fontName), 'invalid font name');\n      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n      if (fontFile) {\n       if (fontFile.dict) {\n        var subtype = fontFile.dict.get('Subtype');\n        if (subtype) {\n         subtype = subtype.name;\n        }\n        var length1 = fontFile.dict.get('Length1');\n        var length2 = fontFile.dict.get('Length2');\n        var length3 = fontFile.dict.get('Length3');\n       }\n      }\n      properties = {\n       type: type,\n       name: fontName.name,\n       subtype: subtype,\n       file: fontFile,\n       length1: length1,\n       length2: length2,\n       length3: length3,\n       loadedName: baseDict.loadedName,\n       composite: composite,\n       wideChars: composite,\n       fixedPitch: false,\n       fontMatrix: dict.getArray('FontMatrix') || FONT_IDENTITY_MATRIX,\n       firstChar: firstChar || 0,\n       lastChar: lastChar || maxCharIndex,\n       bbox: descriptor.getArray('FontBBox'),\n       ascent: descriptor.get('Ascent'),\n       descent: descriptor.get('Descent'),\n       xHeight: descriptor.get('XHeight'),\n       capHeight: descriptor.get('CapHeight'),\n       flags: descriptor.get('Flags'),\n       italicAngle: descriptor.get('ItalicAngle'),\n       coded: false\n      };\n      var cMapPromise;\n      if (composite) {\n       var cidEncoding = baseDict.get('Encoding');\n       if (isName(cidEncoding)) {\n        properties.cidEncoding = cidEncoding.name;\n       }\n       cMapPromise = CMapFactory.create(cidEncoding, cMapOptions, null).then(function (cMap) {\n        properties.cMap = cMap;\n        properties.vertical = properties.cMap.vertical;\n       });\n      } else {\n       cMapPromise = Promise.resolve(undefined);\n      }\n      return cMapPromise.then(function () {\n       return this.extractDataStructures(dict, baseDict, xref, properties);\n      }.bind(this)).then(function (properties) {\n       this.extractWidths(dict, xref, descriptor, properties);\n       if (type === 'Type3') {\n        properties.isType3Font = true;\n       }\n       return new Font(fontName.name, fontFile, properties);\n      }.bind(this));\n     }\n    };\n    return PartialEvaluator;\n   }();\n   var TranslatedFont = function TranslatedFontClosure() {\n    function TranslatedFont(loadedName, font, dict) {\n     this.loadedName = loadedName;\n     this.font = font;\n     this.dict = dict;\n     this.type3Loaded = null;\n     this.sent = false;\n    }\n    TranslatedFont.prototype = {\n     send: function (handler) {\n      if (this.sent) {\n       return;\n      }\n      var fontData = this.font.exportData();\n      handler.send('commonobj', [\n       this.loadedName,\n       'Font',\n       fontData\n      ]);\n      this.sent = true;\n     },\n     loadType3Data: function (evaluator, resources, parentOperatorList, task) {\n      assert(this.font.isType3Font);\n      if (this.type3Loaded) {\n       return this.type3Loaded;\n      }\n      var translatedFont = this.font;\n      var loadCharProcsPromise = Promise.resolve();\n      var charProcs = this.dict.get('CharProcs');\n      var fontResources = this.dict.get('Resources') || resources;\n      var charProcKeys = charProcs.getKeys();\n      var charProcOperatorList = Object.create(null);\n      for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n       loadCharProcsPromise = loadCharProcsPromise.then(function (key) {\n        var glyphStream = charProcs.get(key);\n        var operatorList = new OperatorList();\n        return evaluator.getOperatorList(glyphStream, task, fontResources, operatorList).then(function () {\n         charProcOperatorList[key] = operatorList.getIR();\n         parentOperatorList.addDependencies(operatorList.dependencies);\n        }, function (reason) {\n         warn('Type3 font resource \\\"' + key + '\\\" is not available');\n         var operatorList = new OperatorList();\n         charProcOperatorList[key] = operatorList.getIR();\n        });\n       }.bind(this, charProcKeys[i]));\n      }\n      this.type3Loaded = loadCharProcsPromise.then(function () {\n       translatedFont.charProcOperatorList = charProcOperatorList;\n      });\n      return this.type3Loaded;\n     }\n    };\n    return TranslatedFont;\n   }();\n   var OperatorList = function OperatorListClosure() {\n    var CHUNK_SIZE = 1000;\n    var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n    function getTransfers(queue) {\n     var transfers = [];\n     var fnArray = queue.fnArray, argsArray = queue.argsArray;\n     for (var i = 0, ii = queue.length; i < ii; i++) {\n      switch (fnArray[i]) {\n      case OPS.paintInlineImageXObject:\n      case OPS.paintInlineImageXObjectGroup:\n      case OPS.paintImageMaskXObject:\n       var arg = argsArray[i][0];\n       if (!arg.cached) {\n        transfers.push(arg.data.buffer);\n       }\n       break;\n      }\n     }\n     return transfers;\n    }\n    function OperatorList(intent, messageHandler, pageIndex) {\n     this.messageHandler = messageHandler;\n     this.fnArray = [];\n     this.argsArray = [];\n     this.dependencies = Object.create(null);\n     this._totalLength = 0;\n     this.pageIndex = pageIndex;\n     this.intent = intent;\n    }\n    OperatorList.prototype = {\n     get length() {\n      return this.argsArray.length;\n     },\n     get totalLength() {\n      return this._totalLength + this.length;\n     },\n     addOp: function (fn, args) {\n      this.fnArray.push(fn);\n      this.argsArray.push(args);\n      if (this.messageHandler) {\n       if (this.fnArray.length >= CHUNK_SIZE) {\n        this.flush();\n       } else if (this.fnArray.length >= CHUNK_SIZE_ABOUT && (fn === OPS.restore || fn === OPS.endText)) {\n        this.flush();\n       }\n      }\n     },\n     addDependency: function (dependency) {\n      if (dependency in this.dependencies) {\n       return;\n      }\n      this.dependencies[dependency] = true;\n      this.addOp(OPS.dependency, [dependency]);\n     },\n     addDependencies: function (dependencies) {\n      for (var key in dependencies) {\n       this.addDependency(key);\n      }\n     },\n     addOpList: function (opList) {\n      Util.extendObj(this.dependencies, opList.dependencies);\n      for (var i = 0, ii = opList.length; i < ii; i++) {\n       this.addOp(opList.fnArray[i], opList.argsArray[i]);\n      }\n     },\n     getIR: function () {\n      return {\n       fnArray: this.fnArray,\n       argsArray: this.argsArray,\n       length: this.length\n      };\n     },\n     flush: function (lastChunk) {\n      if (this.intent !== 'oplist') {\n       new QueueOptimizer().optimize(this);\n      }\n      var transfers = getTransfers(this);\n      var length = this.length;\n      this._totalLength += length;\n      this.messageHandler.send('RenderPageChunk', {\n       operatorList: {\n        fnArray: this.fnArray,\n        argsArray: this.argsArray,\n        lastChunk: lastChunk,\n        length: length\n       },\n       pageIndex: this.pageIndex,\n       intent: this.intent\n      }, transfers);\n      this.dependencies = Object.create(null);\n      this.fnArray.length = 0;\n      this.argsArray.length = 0;\n     }\n    };\n    return OperatorList;\n   }();\n   var StateManager = function StateManagerClosure() {\n    function StateManager(initialState) {\n     this.state = initialState;\n     this.stateStack = [];\n    }\n    StateManager.prototype = {\n     save: function () {\n      var old = this.state;\n      this.stateStack.push(this.state);\n      this.state = old.clone();\n     },\n     restore: function () {\n      var prev = this.stateStack.pop();\n      if (prev) {\n       this.state = prev;\n      }\n     },\n     transform: function (args) {\n      this.state.ctm = Util.transform(this.state.ctm, args);\n     }\n    };\n    return StateManager;\n   }();\n   var TextState = function TextStateClosure() {\n    function TextState() {\n     this.ctm = new Float32Array(IDENTITY_MATRIX);\n     this.fontName = null;\n     this.fontSize = 0;\n     this.font = null;\n     this.fontMatrix = FONT_IDENTITY_MATRIX;\n     this.textMatrix = IDENTITY_MATRIX.slice();\n     this.textLineMatrix = IDENTITY_MATRIX.slice();\n     this.charSpacing = 0;\n     this.wordSpacing = 0;\n     this.leading = 0;\n     this.textHScale = 1;\n     this.textRise = 0;\n    }\n    TextState.prototype = {\n     setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n     },\n     setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textLineMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n     },\n     translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n     },\n     translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textLineMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n     },\n     calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n      var font = this.font;\n      if (!font) {\n       return null;\n      }\n      var m = this.textLineMatrix;\n      if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n       return null;\n      }\n      var txDiff = e - m[4], tyDiff = f - m[5];\n      if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n       return null;\n      }\n      var tx, ty, denominator = a * d - b * c;\n      if (font.vertical) {\n       tx = -tyDiff * c / denominator;\n       ty = tyDiff * a / denominator;\n      } else {\n       tx = txDiff * d / denominator;\n       ty = -txDiff * b / denominator;\n      }\n      return {\n       width: tx,\n       height: ty,\n       value: font.vertical ? ty : tx\n      };\n     },\n     calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n      var tsm = [\n       this.fontSize * this.textHScale,\n       0,\n       0,\n       this.fontSize,\n       0,\n       this.textRise\n      ];\n      return Util.transform(ctm, Util.transform(this.textMatrix, tsm));\n     },\n     carriageReturn: function TextState_carriageReturn() {\n      this.translateTextLineMatrix(0, -this.leading);\n      this.textMatrix = this.textLineMatrix.slice();\n     },\n     clone: function TextState_clone() {\n      var clone = Object.create(this);\n      clone.textMatrix = this.textMatrix.slice();\n      clone.textLineMatrix = this.textLineMatrix.slice();\n      clone.fontMatrix = this.fontMatrix.slice();\n      return clone;\n     }\n    };\n    return TextState;\n   }();\n   var EvalState = function EvalStateClosure() {\n    function EvalState() {\n     this.ctm = new Float32Array(IDENTITY_MATRIX);\n     this.font = null;\n     this.textRenderingMode = TextRenderingMode.FILL;\n     this.fillColorSpace = ColorSpace.singletons.gray;\n     this.strokeColorSpace = ColorSpace.singletons.gray;\n    }\n    EvalState.prototype = {\n     clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n     }\n    };\n    return EvalState;\n   }();\n   var EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\n    var getOPMap = getLookupTableFactory(function (t) {\n     t['w'] = {\n      id: OPS.setLineWidth,\n      numArgs: 1,\n      variableArgs: false\n     };\n     t['J'] = {\n      id: OPS.setLineCap,\n      numArgs: 1,\n      variableArgs: false\n     };\n     t['j'] = {\n      id: OPS.setLineJoin,\n      numArgs: 1,\n      variableArgs: false\n     };\n     t['M'] = {\n      id: OPS.setMiterLimit,\n      numArgs: 1,\n      variableArgs: false\n     };\n     t['d'] = {\n      id: OPS.setDash,\n      numArgs: 2,\n      variableArgs: false\n     };\n     t['ri'] = {\n      id: OPS.setRenderingIntent,\n      numArgs: 1,\n      variableArgs: false\n     };\n     t['i'] = {\n      id: OPS.setFlatness,\n      numArgs: 1,\n      variableArgs: false\n     };\n     t['gs'] = {\n      id: OPS.setGState,\n      numArgs: 1,\n      variableArgs: false\n     };\n     t['q'] = {\n      id: OPS.save,\n      numArgs: 0,\n      variableArgs: false\n     };\n     t['Q'] = {\n      id: OPS.restore,\n      numArgs: 0,\n      variableArgs: false\n     };\n     t['cm'] = {\n      id: OPS.transform,\n      numArgs: 6,\n      variableArgs: false\n     };\n     t['m'] = {\n      id: OPS.moveTo,\n      numArgs: 2,\n      variableArgs: false\n     };\n     t['l'] = {\n      id: OPS.lineTo,\n      numArgs: 2,\n      variableArgs: false\n     };\n     t['c'] = {\n      id: OPS.curveTo,\n      numArgs: 6,\n      variableArgs: false\n     };\n     t['v'] = {\n      id: OPS.curveTo2,\n      numArgs: 4,\n      variableArgs: false\n     };\n     t['y'] = {\n      id: OPS.curveTo3,\n      numArgs: 4,\n      variableArgs: false\n     };\n     t['h'] = {\n      id: OPS.closePath,\n      numArgs: 0,\n      variableArgs: false\n     };\n     t['re'] = {\n      id: OPS.rectangle,\n      numArgs: 4,\n      variableArgs: false\n     };\n     t['S'] = {\n      id: OPS.stroke,\n      numArgs: 0,\n      variableArgs: false\n     };\n     t['s'] = {\n      id: OPS.closeStroke,\n      numArgs: 0,\n      variableArgs: false\n     };\n     t['f'] = {\n      id: OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n     };\n     t['F'] = {\n      id: OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n     };\n     t['f*'] = {\n      id: OPS.eoFill,\n      numArgs: 0,\n      variableArgs: false\n     };\n     t['B'] = {\n      id: OPS.fillStroke,\n      numArgs: 0,\n      variableArgs: false\n     };\n     t['B*'] = {\n      id: OPS.eoFillStroke,\n      numArgs: 0,\n      variableArgs: false\n     };\n     t['b'] = {\n      id: OPS.closeFillStroke,\n      numArgs: 0,\n      variableArgs: false\n     };\n     t['b*'] = {\n      id: OPS.closeEOFillStroke,\n      numArgs: 0,\n      variableArgs: false\n     };\n     t['n'] = {\n      id: OPS.endPath,\n      numArgs: 0,\n      variableArgs: false\n     };\n     t['W'] = {\n      id: OPS.clip,\n      numArgs: 0,\n      variableArgs: false\n     };\n     t['W*'] = {\n      id: OPS.eoClip,\n      numArgs: 0,\n      variableArgs: false\n     };\n     t['BT'] = {\n      id: OPS.beginText,\n      numArgs: 0,\n      variableArgs: false\n     };\n     t['ET'] = {\n      id: OPS.endText,\n      numArgs: 0,\n      variableArgs: false\n     };\n     t['Tc'] = {\n      id: OPS.setCharSpacing,\n      numArgs: 1,\n      variableArgs: false\n     };\n     t['Tw'] = {\n      id: OPS.setWordSpacing,\n      numArgs: 1,\n      variableArgs: false\n     };\n     t['Tz'] = {\n      id: OPS.setHScale,\n      numArgs: 1,\n      variableArgs: false\n     };\n     t['TL'] = {\n      id: OPS.setLeading,\n      numArgs: 1,\n      variableArgs: false\n     };\n     t['Tf'] = {\n      id: OPS.setFont,\n      numArgs: 2,\n      variableArgs: false\n     };\n     t['Tr'] = {\n      id: OPS.setTextRenderingMode,\n      numArgs: 1,\n      variableArgs: false\n     };\n     t['Ts'] = {\n      id: OPS.setTextRise,\n      numArgs: 1,\n      variableArgs: false\n     };\n     t['Td'] = {\n      id: OPS.moveText,\n      numArgs: 2,\n      variableArgs: false\n     };\n     t['TD'] = {\n      id: OPS.setLeadingMoveText,\n      numArgs: 2,\n      variableArgs: false\n     };\n     t['Tm'] = {\n      id: OPS.setTextMatrix,\n      numArgs: 6,\n      variableArgs: false\n     };\n     t['T*'] = {\n      id: OPS.nextLine,\n      numArgs: 0,\n      variableArgs: false\n     };\n     t['Tj'] = {\n      id: OPS.showText,\n      numArgs: 1,\n      variableArgs: false\n     };\n     t['TJ'] = {\n      id: OPS.showSpacedText,\n      numArgs: 1,\n      variableArgs: false\n     };\n     t['\\''] = {\n      id: OPS.nextLineShowText,\n      numArgs: 1,\n      variableArgs: false\n     };\n     t['\"'] = {\n      id: OPS.nextLineSetSpacingShowText,\n      numArgs: 3,\n      variableArgs: false\n     };\n     t['d0'] = {\n      id: OPS.setCharWidth,\n      numArgs: 2,\n      variableArgs: false\n     };\n     t['d1'] = {\n      id: OPS.setCharWidthAndBounds,\n      numArgs: 6,\n      variableArgs: false\n     };\n     t['CS'] = {\n      id: OPS.setStrokeColorSpace,\n      numArgs: 1,\n      variableArgs: false\n     };\n     t['cs'] = {\n      id: OPS.setFillColorSpace,\n      numArgs: 1,\n      variableArgs: false\n     };\n     t['SC'] = {\n      id: OPS.setStrokeColor,\n      numArgs: 4,\n      variableArgs: true\n     };\n     t['SCN'] = {\n      id: OPS.setStrokeColorN,\n      numArgs: 33,\n      variableArgs: true\n     };\n     t['sc'] = {\n      id: OPS.setFillColor,\n      numArgs: 4,\n      variableArgs: true\n     };\n     t['scn'] = {\n      id: OPS.setFillColorN,\n      numArgs: 33,\n      variableArgs: true\n     };\n     t['G'] = {\n      id: OPS.setStrokeGray,\n      numArgs: 1,\n      variableArgs: false\n     };\n     t['g'] = {\n      id: OPS.setFillGray,\n      numArgs: 1,\n      variableArgs: false\n     };\n     t['RG'] = {\n      id: OPS.setStrokeRGBColor,\n      numArgs: 3,\n      variableArgs: false\n     };\n     t['rg'] = {\n      id: OPS.setFillRGBColor,\n      numArgs: 3,\n      variableArgs: false\n     };\n     t['K'] = {\n      id: OPS.setStrokeCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n     };\n     t['k'] = {\n      id: OPS.setFillCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n     };\n     t['sh'] = {\n      id: OPS.shadingFill,\n      numArgs: 1,\n      variableArgs: false\n     };\n     t['BI'] = {\n      id: OPS.beginInlineImage,\n      numArgs: 0,\n      variableArgs: false\n     };\n     t['ID'] = {\n      id: OPS.beginImageData,\n      numArgs: 0,\n      variableArgs: false\n     };\n     t['EI'] = {\n      id: OPS.endInlineImage,\n      numArgs: 1,\n      variableArgs: false\n     };\n     t['Do'] = {\n      id: OPS.paintXObject,\n      numArgs: 1,\n      variableArgs: false\n     };\n     t['MP'] = {\n      id: OPS.markPoint,\n      numArgs: 1,\n      variableArgs: false\n     };\n     t['DP'] = {\n      id: OPS.markPointProps,\n      numArgs: 2,\n      variableArgs: false\n     };\n     t['BMC'] = {\n      id: OPS.beginMarkedContent,\n      numArgs: 1,\n      variableArgs: false\n     };\n     t['BDC'] = {\n      id: OPS.beginMarkedContentProps,\n      numArgs: 2,\n      variableArgs: false\n     };\n     t['EMC'] = {\n      id: OPS.endMarkedContent,\n      numArgs: 0,\n      variableArgs: false\n     };\n     t['BX'] = {\n      id: OPS.beginCompat,\n      numArgs: 0,\n      variableArgs: false\n     };\n     t['EX'] = {\n      id: OPS.endCompat,\n      numArgs: 0,\n      variableArgs: false\n     };\n     t['BM'] = null;\n     t['BD'] = null;\n     t['true'] = null;\n     t['fa'] = null;\n     t['fal'] = null;\n     t['fals'] = null;\n     t['false'] = null;\n     t['nu'] = null;\n     t['nul'] = null;\n     t['null'] = null;\n    });\n    function EvaluatorPreprocessor(stream, xref, stateManager) {\n     this.opMap = getOPMap();\n     this.parser = new Parser(new Lexer(stream, this.opMap), false, xref);\n     this.stateManager = stateManager;\n     this.nonProcessedArgs = [];\n    }\n    EvaluatorPreprocessor.prototype = {\n     get savedStatesDepth() {\n      return this.stateManager.stateStack.length;\n     },\n     read: function EvaluatorPreprocessor_read(operation) {\n      var args = operation.args;\n      while (true) {\n       var obj = this.parser.getObj();\n       if (isCmd(obj)) {\n        var cmd = obj.cmd;\n        var opSpec = this.opMap[cmd];\n        if (!opSpec) {\n         warn('Unknown command \"' + cmd + '\"');\n         continue;\n        }\n        var fn = opSpec.id;\n        var numArgs = opSpec.numArgs;\n        var argsLength = args !== null ? args.length : 0;\n        if (!opSpec.variableArgs) {\n         if (argsLength !== numArgs) {\n          var nonProcessedArgs = this.nonProcessedArgs;\n          while (argsLength > numArgs) {\n           nonProcessedArgs.push(args.shift());\n           argsLength--;\n          }\n          while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n           if (args === null) {\n            args = [];\n           }\n           args.unshift(nonProcessedArgs.pop());\n           argsLength++;\n          }\n         }\n         if (argsLength < numArgs) {\n          warn('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\n          if (args !== null) {\n           args.length = 0;\n          }\n          continue;\n         }\n        } else if (argsLength > numArgs) {\n         info('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\n        }\n        this.preprocessCommand(fn, args);\n        operation.fn = fn;\n        operation.args = args;\n        return true;\n       }\n       if (isEOF(obj)) {\n        return false;\n       }\n       if (obj !== null) {\n        if (args === null) {\n         args = [];\n        }\n        args.push(obj);\n        assert(args.length <= 33, 'Too many arguments');\n       }\n      }\n     },\n     preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n      switch (fn | 0) {\n      case OPS.save:\n       this.stateManager.save();\n       break;\n      case OPS.restore:\n       this.stateManager.restore();\n       break;\n      case OPS.transform:\n       this.stateManager.transform(args);\n       break;\n      }\n     }\n    };\n    return EvaluatorPreprocessor;\n   }();\n   var QueueOptimizer = function QueueOptimizerClosure() {\n    function addState(parentState, pattern, fn) {\n     var state = parentState;\n     for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n      var item = pattern[i];\n      state = state[item] || (state[item] = []);\n     }\n     state[pattern[pattern.length - 1]] = fn;\n    }\n    function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n     var iFirstPIMXO = iFirstSave + 2;\n     for (var i = 0; i < count; i++) {\n      var arg = argsArray[iFirstPIMXO + 4 * i];\n      var imageMask = arg.length === 1 && arg[0];\n      if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n       fnArray[iFirstPIMXO + 4 * i] = OPS.paintSolidColorImageMask;\n       continue;\n      }\n      break;\n     }\n     return count - i;\n    }\n    var InitialState = [];\n    addState(InitialState, [\n     OPS.save,\n     OPS.transform,\n     OPS.paintInlineImageXObject,\n     OPS.restore\n    ], function foundInlineImageGroup(context) {\n     var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n     var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n     var MAX_WIDTH = 1000;\n     var IMAGE_PADDING = 1;\n     var fnArray = context.fnArray, argsArray = context.argsArray;\n     var curr = context.iCurr;\n     var iFirstSave = curr - 3;\n     var iFirstTransform = curr - 2;\n     var iFirstPIIXO = curr - 1;\n     var i = iFirstSave + 4;\n     var ii = fnArray.length;\n     while (i + 3 < ii) {\n      if (fnArray[i] !== OPS.save || fnArray[i + 1] !== OPS.transform || fnArray[i + 2] !== OPS.paintInlineImageXObject || fnArray[i + 3] !== OPS.restore) {\n       break;\n      }\n      i += 4;\n     }\n     var count = Math.min((i - iFirstSave) / 4, MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n     if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n      return i;\n     }\n     var maxX = 0;\n     var map = [], maxLineHeight = 0;\n     var currentX = IMAGE_PADDING, currentY = IMAGE_PADDING;\n     var q;\n     for (q = 0; q < count; q++) {\n      var transform = argsArray[iFirstTransform + (q << 2)];\n      var img = argsArray[iFirstPIIXO + (q << 2)][0];\n      if (currentX + img.width > MAX_WIDTH) {\n       maxX = Math.max(maxX, currentX);\n       currentY += maxLineHeight + 2 * IMAGE_PADDING;\n       currentX = 0;\n       maxLineHeight = 0;\n      }\n      map.push({\n       transform: transform,\n       x: currentX,\n       y: currentY,\n       w: img.width,\n       h: img.height\n      });\n      currentX += img.width + 2 * IMAGE_PADDING;\n      maxLineHeight = Math.max(maxLineHeight, img.height);\n     }\n     var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n     var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n     var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n     var imgRowSize = imgWidth << 2;\n     for (q = 0; q < count; q++) {\n      var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n      var rowSize = map[q].w << 2;\n      var dataOffset = 0;\n      var offset = map[q].x + map[q].y * imgWidth << 2;\n      imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n      for (var k = 0, kk = map[q].h; k < kk; k++) {\n       imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n       dataOffset += rowSize;\n       offset += imgRowSize;\n      }\n      imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n      while (offset >= 0) {\n       data[offset - 4] = data[offset];\n       data[offset - 3] = data[offset + 1];\n       data[offset - 2] = data[offset + 2];\n       data[offset - 1] = data[offset + 3];\n       data[offset + rowSize] = data[offset + rowSize - 4];\n       data[offset + rowSize + 1] = data[offset + rowSize - 3];\n       data[offset + rowSize + 2] = data[offset + rowSize - 2];\n       data[offset + rowSize + 3] = data[offset + rowSize - 1];\n       offset -= imgRowSize;\n      }\n     }\n     fnArray.splice(iFirstSave, count * 4, OPS.paintInlineImageXObjectGroup);\n     argsArray.splice(iFirstSave, count * 4, [\n      {\n       width: imgWidth,\n       height: imgHeight,\n       kind: ImageKind.RGBA_32BPP,\n       data: imgData\n      },\n      map\n     ]);\n     return iFirstSave + 1;\n    });\n    addState(InitialState, [\n     OPS.save,\n     OPS.transform,\n     OPS.paintImageMaskXObject,\n     OPS.restore\n    ], function foundImageMaskGroup(context) {\n     var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n     var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n     var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n     var fnArray = context.fnArray, argsArray = context.argsArray;\n     var curr = context.iCurr;\n     var iFirstSave = curr - 3;\n     var iFirstTransform = curr - 2;\n     var iFirstPIMXO = curr - 1;\n     var i = iFirstSave + 4;\n     var ii = fnArray.length;\n     while (i + 3 < ii) {\n      if (fnArray[i] !== OPS.save || fnArray[i + 1] !== OPS.transform || fnArray[i + 2] !== OPS.paintImageMaskXObject || fnArray[i + 3] !== OPS.restore) {\n       break;\n      }\n      i += 4;\n     }\n     var count = (i - iFirstSave) / 4;\n     count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n     if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n      return i;\n     }\n     var q;\n     var isSameImage = false;\n     var iTransform, transformArgs;\n     var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n     if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\n      isSameImage = true;\n      var firstTransformArg0 = argsArray[iFirstTransform][0];\n      var firstTransformArg3 = argsArray[iFirstTransform][3];\n      iTransform = iFirstTransform + 4;\n      var iPIMXO = iFirstPIMXO + 4;\n      for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n       transformArgs = argsArray[iTransform];\n       if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\n        if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n         isSameImage = false;\n        } else {\n         count = q;\n        }\n        break;\n       }\n      }\n     }\n     if (isSameImage) {\n      count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n      var positions = new Float32Array(count * 2);\n      iTransform = iFirstTransform;\n      for (q = 0; q < count; q++, iTransform += 4) {\n       transformArgs = argsArray[iTransform];\n       positions[q << 1] = transformArgs[4];\n       positions[(q << 1) + 1] = transformArgs[5];\n      }\n      fnArray.splice(iFirstSave, count * 4, OPS.paintImageMaskXObjectRepeat);\n      argsArray.splice(iFirstSave, count * 4, [\n       firstPIMXOArg0,\n       firstTransformArg0,\n       firstTransformArg3,\n       positions\n      ]);\n     } else {\n      count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n      var images = [];\n      for (q = 0; q < count; q++) {\n       transformArgs = argsArray[iFirstTransform + (q << 2)];\n       var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n       images.push({\n        data: maskParams.data,\n        width: maskParams.width,\n        height: maskParams.height,\n        transform: transformArgs\n       });\n      }\n      fnArray.splice(iFirstSave, count * 4, OPS.paintImageMaskXObjectGroup);\n      argsArray.splice(iFirstSave, count * 4, [images]);\n     }\n     return iFirstSave + 1;\n    });\n    addState(InitialState, [\n     OPS.save,\n     OPS.transform,\n     OPS.paintImageXObject,\n     OPS.restore\n    ], function (context) {\n     var MIN_IMAGES_IN_BLOCK = 3;\n     var MAX_IMAGES_IN_BLOCK = 1000;\n     var fnArray = context.fnArray, argsArray = context.argsArray;\n     var curr = context.iCurr;\n     var iFirstSave = curr - 3;\n     var iFirstTransform = curr - 2;\n     var iFirstPIXO = curr - 1;\n     var iFirstRestore = curr;\n     if (argsArray[iFirstTransform][1] !== 0 || argsArray[iFirstTransform][2] !== 0) {\n      return iFirstRestore + 1;\n     }\n     var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n     var firstTransformArg0 = argsArray[iFirstTransform][0];\n     var firstTransformArg3 = argsArray[iFirstTransform][3];\n     var i = iFirstSave + 4;\n     var ii = fnArray.length;\n     while (i + 3 < ii) {\n      if (fnArray[i] !== OPS.save || fnArray[i + 1] !== OPS.transform || fnArray[i + 2] !== OPS.paintImageXObject || fnArray[i + 3] !== OPS.restore) {\n       break;\n      }\n      if (argsArray[i + 1][0] !== firstTransformArg0 || argsArray[i + 1][1] !== 0 || argsArray[i + 1][2] !== 0 || argsArray[i + 1][3] !== firstTransformArg3) {\n       break;\n      }\n      if (argsArray[i + 2][0] !== firstPIXOArg0) {\n       break;\n      }\n      i += 4;\n     }\n     var count = Math.min((i - iFirstSave) / 4, MAX_IMAGES_IN_BLOCK);\n     if (count < MIN_IMAGES_IN_BLOCK) {\n      return i;\n     }\n     var positions = new Float32Array(count * 2);\n     var iTransform = iFirstTransform;\n     for (var q = 0; q < count; q++, iTransform += 4) {\n      var transformArgs = argsArray[iTransform];\n      positions[q << 1] = transformArgs[4];\n      positions[(q << 1) + 1] = transformArgs[5];\n     }\n     var args = [\n      firstPIXOArg0,\n      firstTransformArg0,\n      firstTransformArg3,\n      positions\n     ];\n     fnArray.splice(iFirstSave, count * 4, OPS.paintImageXObjectRepeat);\n     argsArray.splice(iFirstSave, count * 4, args);\n     return iFirstSave + 1;\n    });\n    addState(InitialState, [\n     OPS.beginText,\n     OPS.setFont,\n     OPS.setTextMatrix,\n     OPS.showText,\n     OPS.endText\n    ], function (context) {\n     var MIN_CHARS_IN_BLOCK = 3;\n     var MAX_CHARS_IN_BLOCK = 1000;\n     var fnArray = context.fnArray, argsArray = context.argsArray;\n     var curr = context.iCurr;\n     var iFirstBeginText = curr - 4;\n     var iFirstSetFont = curr - 3;\n     var iFirstSetTextMatrix = curr - 2;\n     var iFirstShowText = curr - 1;\n     var iFirstEndText = curr;\n     var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n     var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n     var i = iFirstBeginText + 5;\n     var ii = fnArray.length;\n     while (i + 4 < ii) {\n      if (fnArray[i] !== OPS.beginText || fnArray[i + 1] !== OPS.setFont || fnArray[i + 2] !== OPS.setTextMatrix || fnArray[i + 3] !== OPS.showText || fnArray[i + 4] !== OPS.endText) {\n       break;\n      }\n      if (argsArray[i + 1][0] !== firstSetFontArg0 || argsArray[i + 1][1] !== firstSetFontArg1) {\n       break;\n      }\n      i += 5;\n     }\n     var count = Math.min((i - iFirstBeginText) / 5, MAX_CHARS_IN_BLOCK);\n     if (count < MIN_CHARS_IN_BLOCK) {\n      return i;\n     }\n     var iFirst = iFirstBeginText;\n     if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n      count++;\n      iFirst -= 5;\n     }\n     var iEndText = iFirst + 4;\n     for (var q = 1; q < count; q++) {\n      fnArray.splice(iEndText, 3);\n      argsArray.splice(iEndText, 3);\n      iEndText += 2;\n     }\n     return iEndText + 1;\n    });\n    function QueueOptimizer() {\n    }\n    QueueOptimizer.prototype = {\n     optimize: function QueueOptimizer_optimize(queue) {\n      var fnArray = queue.fnArray, argsArray = queue.argsArray;\n      var context = {\n       iCurr: 0,\n       fnArray: fnArray,\n       argsArray: argsArray\n      };\n      var state;\n      var i = 0, ii = fnArray.length;\n      while (i < ii) {\n       state = (state || InitialState)[fnArray[i]];\n       if (typeof state === 'function') {\n        context.iCurr = i;\n        i = state(context);\n        state = undefined;\n        ii = context.fnArray.length;\n       } else {\n        i++;\n       }\n      }\n     }\n    };\n    return QueueOptimizer;\n   }();\n   exports.OperatorList = OperatorList;\n   exports.PartialEvaluator = PartialEvaluator;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsCoreAnnotation = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreStream, root.pdfjsCoreColorSpace, root.pdfjsCoreObj, root.pdfjsCoreEvaluator);\n  }(this, function (exports, sharedUtil, corePrimitives, coreStream, coreColorSpace, coreObj, coreEvaluator) {\n   var AnnotationBorderStyleType = sharedUtil.AnnotationBorderStyleType;\n   var AnnotationFieldFlag = sharedUtil.AnnotationFieldFlag;\n   var AnnotationFlag = sharedUtil.AnnotationFlag;\n   var AnnotationType = sharedUtil.AnnotationType;\n   var OPS = sharedUtil.OPS;\n   var Util = sharedUtil.Util;\n   var isString = sharedUtil.isString;\n   var isArray = sharedUtil.isArray;\n   var isInt = sharedUtil.isInt;\n   var stringToBytes = sharedUtil.stringToBytes;\n   var stringToPDFString = sharedUtil.stringToPDFString;\n   var warn = sharedUtil.warn;\n   var Dict = corePrimitives.Dict;\n   var isDict = corePrimitives.isDict;\n   var isName = corePrimitives.isName;\n   var isRef = corePrimitives.isRef;\n   var Stream = coreStream.Stream;\n   var ColorSpace = coreColorSpace.ColorSpace;\n   var Catalog = coreObj.Catalog;\n   var ObjectLoader = coreObj.ObjectLoader;\n   var FileSpec = coreObj.FileSpec;\n   var OperatorList = coreEvaluator.OperatorList;\n   function AnnotationFactory() {\n   }\n   AnnotationFactory.prototype = {\n    create: function AnnotationFactory_create(xref, ref, pdfManager, idFactory) {\n     var dict = xref.fetchIfRef(ref);\n     if (!isDict(dict)) {\n      return;\n     }\n     var id = isRef(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\n     var subtype = dict.get('Subtype');\n     subtype = isName(subtype) ? subtype.name : null;\n     var parameters = {\n      xref: xref,\n      dict: dict,\n      ref: isRef(ref) ? ref : null,\n      subtype: subtype,\n      id: id,\n      pdfManager: pdfManager\n     };\n     switch (subtype) {\n     case 'Link':\n      return new LinkAnnotation(parameters);\n     case 'Text':\n      return new TextAnnotation(parameters);\n     case 'Widget':\n      var fieldType = Util.getInheritableProperty(dict, 'FT');\n      fieldType = isName(fieldType) ? fieldType.name : null;\n      switch (fieldType) {\n      case 'Tx':\n       return new TextWidgetAnnotation(parameters);\n      case 'Btn':\n       return new ButtonWidgetAnnotation(parameters);\n      case 'Ch':\n       return new ChoiceWidgetAnnotation(parameters);\n      }\n      warn('Unimplemented widget field type \"' + fieldType + '\", ' + 'falling back to base field type.');\n      return new WidgetAnnotation(parameters);\n     case 'Popup':\n      return new PopupAnnotation(parameters);\n     case 'Highlight':\n      return new HighlightAnnotation(parameters);\n     case 'Underline':\n      return new UnderlineAnnotation(parameters);\n     case 'Squiggly':\n      return new SquigglyAnnotation(parameters);\n     case 'StrikeOut':\n      return new StrikeOutAnnotation(parameters);\n     case 'FileAttachment':\n      return new FileAttachmentAnnotation(parameters);\n     default:\n      if (!subtype) {\n       warn('Annotation is missing the required /Subtype.');\n      } else {\n       warn('Unimplemented annotation type \"' + subtype + '\", ' + 'falling back to base annotation.');\n      }\n      return new Annotation(parameters);\n     }\n    }\n   };\n   var Annotation = function AnnotationClosure() {\n    function getTransformMatrix(rect, bbox, matrix) {\n     var bounds = Util.getAxialAlignedBoundingBox(bbox, matrix);\n     var minX = bounds[0];\n     var minY = bounds[1];\n     var maxX = bounds[2];\n     var maxY = bounds[3];\n     if (minX === maxX || minY === maxY) {\n      return [\n       1,\n       0,\n       0,\n       1,\n       rect[0],\n       rect[1]\n      ];\n     }\n     var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n     var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n     return [\n      xRatio,\n      0,\n      0,\n      yRatio,\n      rect[0] - minX * xRatio,\n      rect[1] - minY * yRatio\n     ];\n    }\n    function getDefaultAppearance(dict) {\n     var appearanceState = dict.get('AP');\n     if (!isDict(appearanceState)) {\n      return;\n     }\n     var appearance;\n     var appearances = appearanceState.get('N');\n     if (isDict(appearances)) {\n      var as = dict.get('AS');\n      if (as && appearances.has(as.name)) {\n       appearance = appearances.get(as.name);\n      }\n     } else {\n      appearance = appearances;\n     }\n     return appearance;\n    }\n    function Annotation(params) {\n     var dict = params.dict;\n     this.setFlags(dict.get('F'));\n     this.setRectangle(dict.getArray('Rect'));\n     this.setColor(dict.getArray('C'));\n     this.setBorderStyle(dict);\n     this.appearance = getDefaultAppearance(dict);\n     this.data = {};\n     this.data.id = params.id;\n     this.data.subtype = params.subtype;\n     this.data.annotationFlags = this.flags;\n     this.data.rect = this.rectangle;\n     this.data.color = this.color;\n     this.data.borderStyle = this.borderStyle;\n     this.data.hasAppearance = !!this.appearance;\n    }\n    Annotation.prototype = {\n     _hasFlag: function Annotation_hasFlag(flags, flag) {\n      return !!(flags & flag);\n     },\n     _isViewable: function Annotation_isViewable(flags) {\n      return !this._hasFlag(flags, AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, AnnotationFlag.HIDDEN) && !this._hasFlag(flags, AnnotationFlag.NOVIEW);\n     },\n     _isPrintable: function AnnotationFlag_isPrintable(flags) {\n      return this._hasFlag(flags, AnnotationFlag.PRINT) && !this._hasFlag(flags, AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, AnnotationFlag.HIDDEN);\n     },\n     get viewable() {\n      if (this.flags === 0) {\n       return true;\n      }\n      return this._isViewable(this.flags);\n     },\n     get printable() {\n      if (this.flags === 0) {\n       return false;\n      }\n      return this._isPrintable(this.flags);\n     },\n     setFlags: function Annotation_setFlags(flags) {\n      this.flags = isInt(flags) && flags > 0 ? flags : 0;\n     },\n     hasFlag: function Annotation_hasFlag(flag) {\n      return this._hasFlag(this.flags, flag);\n     },\n     setRectangle: function Annotation_setRectangle(rectangle) {\n      if (isArray(rectangle) && rectangle.length === 4) {\n       this.rectangle = Util.normalizeRect(rectangle);\n      } else {\n       this.rectangle = [\n        0,\n        0,\n        0,\n        0\n       ];\n      }\n     },\n     setColor: function Annotation_setColor(color) {\n      var rgbColor = new Uint8Array(3);\n      if (!isArray(color)) {\n       this.color = rgbColor;\n       return;\n      }\n      switch (color.length) {\n      case 0:\n       this.color = null;\n       break;\n      case 1:\n       ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n       this.color = rgbColor;\n       break;\n      case 3:\n       ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n       this.color = rgbColor;\n       break;\n      case 4:\n       ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n       this.color = rgbColor;\n       break;\n      default:\n       this.color = rgbColor;\n       break;\n      }\n     },\n     setBorderStyle: function Annotation_setBorderStyle(borderStyle) {\n      this.borderStyle = new AnnotationBorderStyle();\n      if (!isDict(borderStyle)) {\n       return;\n      }\n      if (borderStyle.has('BS')) {\n       var dict = borderStyle.get('BS');\n       var dictType = dict.get('Type');\n       if (!dictType || isName(dictType, 'Border')) {\n        this.borderStyle.setWidth(dict.get('W'));\n        this.borderStyle.setStyle(dict.get('S'));\n        this.borderStyle.setDashArray(dict.getArray('D'));\n       }\n      } else if (borderStyle.has('Border')) {\n       var array = borderStyle.getArray('Border');\n       if (isArray(array) && array.length >= 3) {\n        this.borderStyle.setHorizontalCornerRadius(array[0]);\n        this.borderStyle.setVerticalCornerRadius(array[1]);\n        this.borderStyle.setWidth(array[2]);\n        if (array.length === 4) {\n         this.borderStyle.setDashArray(array[3]);\n        }\n       }\n      } else {\n       this.borderStyle.setWidth(0);\n      }\n     },\n     _preparePopup: function Annotation_preparePopup(dict) {\n      if (!dict.has('C')) {\n       this.data.color = null;\n      }\n      this.data.hasPopup = dict.has('Popup');\n      this.data.title = stringToPDFString(dict.get('T') || '');\n      this.data.contents = stringToPDFString(dict.get('Contents') || '');\n     },\n     loadResources: function Annotation_loadResources(keys) {\n      return new Promise(function (resolve, reject) {\n       this.appearance.dict.getAsync('Resources').then(function (resources) {\n        if (!resources) {\n         resolve();\n         return;\n        }\n        var objectLoader = new ObjectLoader(resources.map, keys, resources.xref);\n        objectLoader.load().then(function () {\n         resolve(resources);\n        }, reject);\n       }, reject);\n      }.bind(this));\n     },\n     getOperatorList: function Annotation_getOperatorList(evaluator, task, renderForms) {\n      if (!this.appearance) {\n       return Promise.resolve(new OperatorList());\n      }\n      var data = this.data;\n      var appearanceDict = this.appearance.dict;\n      var resourcesPromise = this.loadResources([\n       'ExtGState',\n       'ColorSpace',\n       'Pattern',\n       'Shading',\n       'XObject',\n       'Font'\n      ]);\n      var bbox = appearanceDict.getArray('BBox') || [\n       0,\n       0,\n       1,\n       1\n      ];\n      var matrix = appearanceDict.getArray('Matrix') || [\n       1,\n       0,\n       0,\n       1,\n       0,\n       0\n      ];\n      var transform = getTransformMatrix(data.rect, bbox, matrix);\n      var self = this;\n      return resourcesPromise.then(function (resources) {\n       var opList = new OperatorList();\n       opList.addOp(OPS.beginAnnotation, [\n        data.rect,\n        transform,\n        matrix\n       ]);\n       return evaluator.getOperatorList(self.appearance, task, resources, opList).then(function () {\n        opList.addOp(OPS.endAnnotation, []);\n        self.appearance.reset();\n        return opList;\n       });\n      });\n     }\n    };\n    Annotation.appendToOperatorList = function Annotation_appendToOperatorList(annotations, opList, partialEvaluator, task, intent, renderForms) {\n     var annotationPromises = [];\n     for (var i = 0, n = annotations.length; i < n; ++i) {\n      if (intent === 'display' && annotations[i].viewable || intent === 'print' && annotations[i].printable) {\n       annotationPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderForms));\n      }\n     }\n     return Promise.all(annotationPromises).then(function (operatorLists) {\n      opList.addOp(OPS.beginAnnotations, []);\n      for (var i = 0, n = operatorLists.length; i < n; ++i) {\n       opList.addOpList(operatorLists[i]);\n      }\n      opList.addOp(OPS.endAnnotations, []);\n     });\n    };\n    return Annotation;\n   }();\n   var AnnotationBorderStyle = function AnnotationBorderStyleClosure() {\n    function AnnotationBorderStyle() {\n     this.width = 1;\n     this.style = AnnotationBorderStyleType.SOLID;\n     this.dashArray = [3];\n     this.horizontalCornerRadius = 0;\n     this.verticalCornerRadius = 0;\n    }\n    AnnotationBorderStyle.prototype = {\n     setWidth: function AnnotationBorderStyle_setWidth(width) {\n      if (width === (width | 0)) {\n       this.width = width;\n      }\n     },\n     setStyle: function AnnotationBorderStyle_setStyle(style) {\n      if (!style) {\n       return;\n      }\n      switch (style.name) {\n      case 'S':\n       this.style = AnnotationBorderStyleType.SOLID;\n       break;\n      case 'D':\n       this.style = AnnotationBorderStyleType.DASHED;\n       break;\n      case 'B':\n       this.style = AnnotationBorderStyleType.BEVELED;\n       break;\n      case 'I':\n       this.style = AnnotationBorderStyleType.INSET;\n       break;\n      case 'U':\n       this.style = AnnotationBorderStyleType.UNDERLINE;\n       break;\n      default:\n       break;\n      }\n     },\n     setDashArray: function AnnotationBorderStyle_setDashArray(dashArray) {\n      if (isArray(dashArray) && dashArray.length > 0) {\n       var isValid = true;\n       var allZeros = true;\n       for (var i = 0, len = dashArray.length; i < len; i++) {\n        var element = dashArray[i];\n        var validNumber = +element >= 0;\n        if (!validNumber) {\n         isValid = false;\n         break;\n        } else if (element > 0) {\n         allZeros = false;\n        }\n       }\n       if (isValid && !allZeros) {\n        this.dashArray = dashArray;\n       } else {\n        this.width = 0;\n       }\n      } else if (dashArray) {\n       this.width = 0;\n      }\n     },\n     setHorizontalCornerRadius: function AnnotationBorderStyle_setHorizontalCornerRadius(radius) {\n      if (radius === (radius | 0)) {\n       this.horizontalCornerRadius = radius;\n      }\n     },\n     setVerticalCornerRadius: function AnnotationBorderStyle_setVerticalCornerRadius(radius) {\n      if (radius === (radius | 0)) {\n       this.verticalCornerRadius = radius;\n      }\n     }\n    };\n    return AnnotationBorderStyle;\n   }();\n   var WidgetAnnotation = function WidgetAnnotationClosure() {\n    function WidgetAnnotation(params) {\n     Annotation.call(this, params);\n     var dict = params.dict;\n     var data = this.data;\n     data.annotationType = AnnotationType.WIDGET;\n     data.fieldName = this._constructFieldName(dict);\n     data.fieldValue = Util.getInheritableProperty(dict, 'V', true);\n     data.alternativeText = stringToPDFString(dict.get('TU') || '');\n     data.defaultAppearance = Util.getInheritableProperty(dict, 'DA') || '';\n     var fieldType = Util.getInheritableProperty(dict, 'FT');\n     data.fieldType = isName(fieldType) ? fieldType.name : null;\n     this.fieldResources = Util.getInheritableProperty(dict, 'DR') || Dict.empty;\n     data.fieldFlags = Util.getInheritableProperty(dict, 'Ff');\n     if (!isInt(data.fieldFlags) || data.fieldFlags < 0) {\n      data.fieldFlags = 0;\n     }\n     data.readOnly = this.hasFieldFlag(AnnotationFieldFlag.READONLY);\n     if (data.fieldType === 'Sig') {\n      this.setFlags(AnnotationFlag.HIDDEN);\n     }\n    }\n    Util.inherit(WidgetAnnotation, Annotation, {\n     _constructFieldName: function WidgetAnnotation_constructFieldName(dict) {\n      if (!dict.has('T') && !dict.has('Parent')) {\n       warn('Unknown field name, falling back to empty field name.');\n       return '';\n      }\n      if (!dict.has('Parent')) {\n       return stringToPDFString(dict.get('T'));\n      }\n      var fieldName = [];\n      if (dict.has('T')) {\n       fieldName.unshift(stringToPDFString(dict.get('T')));\n      }\n      var loopDict = dict;\n      while (loopDict.has('Parent')) {\n       loopDict = loopDict.get('Parent');\n       if (loopDict.has('T')) {\n        fieldName.unshift(stringToPDFString(loopDict.get('T')));\n       }\n      }\n      return fieldName.join('.');\n     },\n     hasFieldFlag: function WidgetAnnotation_hasFieldFlag(flag) {\n      return !!(this.data.fieldFlags & flag);\n     }\n    });\n    return WidgetAnnotation;\n   }();\n   var TextWidgetAnnotation = function TextWidgetAnnotationClosure() {\n    function TextWidgetAnnotation(params) {\n     WidgetAnnotation.call(this, params);\n     this.data.fieldValue = stringToPDFString(this.data.fieldValue || '');\n     var alignment = Util.getInheritableProperty(params.dict, 'Q');\n     if (!isInt(alignment) || alignment < 0 || alignment > 2) {\n      alignment = null;\n     }\n     this.data.textAlignment = alignment;\n     var maximumLength = Util.getInheritableProperty(params.dict, 'MaxLen');\n     if (!isInt(maximumLength) || maximumLength < 0) {\n      maximumLength = null;\n     }\n     this.data.maxLen = maximumLength;\n     this.data.multiLine = this.hasFieldFlag(AnnotationFieldFlag.MULTILINE);\n     this.data.comb = this.hasFieldFlag(AnnotationFieldFlag.COMB) && !this.hasFieldFlag(AnnotationFieldFlag.MULTILINE) && !this.hasFieldFlag(AnnotationFieldFlag.PASSWORD) && !this.hasFieldFlag(AnnotationFieldFlag.FILESELECT) && this.data.maxLen !== null;\n    }\n    Util.inherit(TextWidgetAnnotation, WidgetAnnotation, {\n     getOperatorList: function TextWidgetAnnotation_getOperatorList(evaluator, task, renderForms) {\n      var operatorList = new OperatorList();\n      if (renderForms) {\n       return Promise.resolve(operatorList);\n      }\n      if (this.appearance) {\n       return Annotation.prototype.getOperatorList.call(this, evaluator, task, renderForms);\n      }\n      if (!this.data.defaultAppearance) {\n       return Promise.resolve(operatorList);\n      }\n      var stream = new Stream(stringToBytes(this.data.defaultAppearance));\n      return evaluator.getOperatorList(stream, task, this.fieldResources, operatorList).then(function () {\n       return operatorList;\n      });\n     }\n    });\n    return TextWidgetAnnotation;\n   }();\n   var ButtonWidgetAnnotation = function ButtonWidgetAnnotationClosure() {\n    function ButtonWidgetAnnotation(params) {\n     WidgetAnnotation.call(this, params);\n     this.data.checkBox = !this.hasFieldFlag(AnnotationFieldFlag.RADIO) && !this.hasFieldFlag(AnnotationFieldFlag.PUSHBUTTON);\n     if (this.data.checkBox) {\n      if (!isName(this.data.fieldValue)) {\n       return;\n      }\n      this.data.fieldValue = this.data.fieldValue.name;\n     }\n     this.data.radioButton = this.hasFieldFlag(AnnotationFieldFlag.RADIO) && !this.hasFieldFlag(AnnotationFieldFlag.PUSHBUTTON);\n     if (this.data.radioButton) {\n      this.data.fieldValue = this.data.buttonValue = null;\n      var fieldParent = params.dict.get('Parent');\n      if (!isDict(fieldParent) || !fieldParent.has('V')) {\n       return;\n      }\n      var fieldParentValue = fieldParent.get('V');\n      if (!isName(fieldParentValue)) {\n       return;\n      }\n      this.data.fieldValue = fieldParentValue.name;\n      var appearanceStates = params.dict.get('AP');\n      if (!isDict(appearanceStates)) {\n       return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if (!isDict(normalAppearanceState)) {\n       return;\n      }\n      var keys = normalAppearanceState.getKeys();\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n       if (keys[i] !== 'Off') {\n        this.data.buttonValue = keys[i];\n        break;\n       }\n      }\n     }\n    }\n    Util.inherit(ButtonWidgetAnnotation, WidgetAnnotation, {\n     getOperatorList: function ButtonWidgetAnnotation_getOperatorList(evaluator, task, renderForms) {\n      var operatorList = new OperatorList();\n      if (renderForms) {\n       return Promise.resolve(operatorList);\n      }\n      if (this.appearance) {\n       return Annotation.prototype.getOperatorList.call(this, evaluator, task, renderForms);\n      }\n      return Promise.resolve(operatorList);\n     }\n    });\n    return ButtonWidgetAnnotation;\n   }();\n   var ChoiceWidgetAnnotation = function ChoiceWidgetAnnotationClosure() {\n    function ChoiceWidgetAnnotation(params) {\n     WidgetAnnotation.call(this, params);\n     this.data.options = [];\n     var options = params.dict.get('Opt');\n     if (isArray(options)) {\n      var xref = params.xref;\n      for (var i = 0, ii = options.length; i < ii; i++) {\n       var option = xref.fetchIfRef(options[i]);\n       var isOptionArray = isArray(option);\n       this.data.options[i] = {\n        exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\n        displayValue: isOptionArray ? xref.fetchIfRef(option[1]) : option\n       };\n      }\n     }\n     if (!isArray(this.data.fieldValue)) {\n      this.data.fieldValue = [this.data.fieldValue];\n     }\n     this.data.combo = this.hasFieldFlag(AnnotationFieldFlag.COMBO);\n     this.data.multiSelect = this.hasFieldFlag(AnnotationFieldFlag.MULTISELECT);\n    }\n    Util.inherit(ChoiceWidgetAnnotation, WidgetAnnotation, {\n     getOperatorList: function ChoiceWidgetAnnotation_getOperatorList(evaluator, task, renderForms) {\n      var operatorList = new OperatorList();\n      if (renderForms) {\n       return Promise.resolve(operatorList);\n      }\n      return Annotation.prototype.getOperatorList.call(this, evaluator, task, renderForms);\n     }\n    });\n    return ChoiceWidgetAnnotation;\n   }();\n   var TextAnnotation = function TextAnnotationClosure() {\n    var DEFAULT_ICON_SIZE = 22;\n    function TextAnnotation(parameters) {\n     Annotation.call(this, parameters);\n     this.data.annotationType = AnnotationType.TEXT;\n     if (this.data.hasAppearance) {\n      this.data.name = 'NoIcon';\n     } else {\n      this.data.rect[1] = this.data.rect[3] - DEFAULT_ICON_SIZE;\n      this.data.rect[2] = this.data.rect[0] + DEFAULT_ICON_SIZE;\n      this.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\n     }\n     this._preparePopup(parameters.dict);\n    }\n    Util.inherit(TextAnnotation, Annotation, {});\n    return TextAnnotation;\n   }();\n   var LinkAnnotation = function LinkAnnotationClosure() {\n    function LinkAnnotation(params) {\n     Annotation.call(this, params);\n     var data = this.data;\n     data.annotationType = AnnotationType.LINK;\n     Catalog.parseDestDictionary({\n      destDict: params.dict,\n      resultObj: data,\n      docBaseUrl: params.pdfManager.docBaseUrl\n     });\n    }\n    Util.inherit(LinkAnnotation, Annotation, {});\n    return LinkAnnotation;\n   }();\n   var PopupAnnotation = function PopupAnnotationClosure() {\n    function PopupAnnotation(parameters) {\n     Annotation.call(this, parameters);\n     this.data.annotationType = AnnotationType.POPUP;\n     var dict = parameters.dict;\n     var parentItem = dict.get('Parent');\n     if (!parentItem) {\n      warn('Popup annotation has a missing or invalid parent annotation.');\n      return;\n     }\n     this.data.parentId = dict.getRaw('Parent').toString();\n     this.data.title = stringToPDFString(parentItem.get('T') || '');\n     this.data.contents = stringToPDFString(parentItem.get('Contents') || '');\n     if (!parentItem.has('C')) {\n      this.data.color = null;\n     } else {\n      this.setColor(parentItem.getArray('C'));\n      this.data.color = this.color;\n     }\n     if (!this.viewable) {\n      var parentFlags = parentItem.get('F');\n      if (this._isViewable(parentFlags)) {\n       this.setFlags(parentFlags);\n      }\n     }\n    }\n    Util.inherit(PopupAnnotation, Annotation, {});\n    return PopupAnnotation;\n   }();\n   var HighlightAnnotation = function HighlightAnnotationClosure() {\n    function HighlightAnnotation(parameters) {\n     Annotation.call(this, parameters);\n     this.data.annotationType = AnnotationType.HIGHLIGHT;\n     this._preparePopup(parameters.dict);\n     this.data.borderStyle.setWidth(0);\n    }\n    Util.inherit(HighlightAnnotation, Annotation, {});\n    return HighlightAnnotation;\n   }();\n   var UnderlineAnnotation = function UnderlineAnnotationClosure() {\n    function UnderlineAnnotation(parameters) {\n     Annotation.call(this, parameters);\n     this.data.annotationType = AnnotationType.UNDERLINE;\n     this._preparePopup(parameters.dict);\n     this.data.borderStyle.setWidth(0);\n    }\n    Util.inherit(UnderlineAnnotation, Annotation, {});\n    return UnderlineAnnotation;\n   }();\n   var SquigglyAnnotation = function SquigglyAnnotationClosure() {\n    function SquigglyAnnotation(parameters) {\n     Annotation.call(this, parameters);\n     this.data.annotationType = AnnotationType.SQUIGGLY;\n     this._preparePopup(parameters.dict);\n     this.data.borderStyle.setWidth(0);\n    }\n    Util.inherit(SquigglyAnnotation, Annotation, {});\n    return SquigglyAnnotation;\n   }();\n   var StrikeOutAnnotation = function StrikeOutAnnotationClosure() {\n    function StrikeOutAnnotation(parameters) {\n     Annotation.call(this, parameters);\n     this.data.annotationType = AnnotationType.STRIKEOUT;\n     this._preparePopup(parameters.dict);\n     this.data.borderStyle.setWidth(0);\n    }\n    Util.inherit(StrikeOutAnnotation, Annotation, {});\n    return StrikeOutAnnotation;\n   }();\n   var FileAttachmentAnnotation = function FileAttachmentAnnotationClosure() {\n    function FileAttachmentAnnotation(parameters) {\n     Annotation.call(this, parameters);\n     var file = new FileSpec(parameters.dict.get('FS'), parameters.xref);\n     this.data.annotationType = AnnotationType.FILEATTACHMENT;\n     this.data.file = file.serializable;\n     this._preparePopup(parameters.dict);\n    }\n    Util.inherit(FileAttachmentAnnotation, Annotation, {});\n    return FileAttachmentAnnotation;\n   }();\n   exports.Annotation = Annotation;\n   exports.AnnotationBorderStyle = AnnotationBorderStyle;\n   exports.AnnotationFactory = AnnotationFactory;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsCoreDocument = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCoreStream, root.pdfjsCoreObj, root.pdfjsCoreParser, root.pdfjsCoreCrypto, root.pdfjsCoreEvaluator, root.pdfjsCoreAnnotation);\n  }(this, function (exports, sharedUtil, corePrimitives, coreStream, coreObj, coreParser, coreCrypto, coreEvaluator, coreAnnotation) {\n   var MissingDataException = sharedUtil.MissingDataException;\n   var Util = sharedUtil.Util;\n   var assert = sharedUtil.assert;\n   var error = sharedUtil.error;\n   var info = sharedUtil.info;\n   var isArray = sharedUtil.isArray;\n   var isArrayBuffer = sharedUtil.isArrayBuffer;\n   var isNum = sharedUtil.isNum;\n   var isString = sharedUtil.isString;\n   var shadow = sharedUtil.shadow;\n   var stringToBytes = sharedUtil.stringToBytes;\n   var stringToPDFString = sharedUtil.stringToPDFString;\n   var warn = sharedUtil.warn;\n   var isSpace = sharedUtil.isSpace;\n   var Dict = corePrimitives.Dict;\n   var isDict = corePrimitives.isDict;\n   var isName = corePrimitives.isName;\n   var isStream = corePrimitives.isStream;\n   var NullStream = coreStream.NullStream;\n   var Stream = coreStream.Stream;\n   var StreamsSequenceStream = coreStream.StreamsSequenceStream;\n   var Catalog = coreObj.Catalog;\n   var ObjectLoader = coreObj.ObjectLoader;\n   var XRef = coreObj.XRef;\n   var Linearization = coreParser.Linearization;\n   var calculateMD5 = coreCrypto.calculateMD5;\n   var OperatorList = coreEvaluator.OperatorList;\n   var PartialEvaluator = coreEvaluator.PartialEvaluator;\n   var Annotation = coreAnnotation.Annotation;\n   var AnnotationFactory = coreAnnotation.AnnotationFactory;\n   var Page = function PageClosure() {\n    var DEFAULT_USER_UNIT = 1.0;\n    var LETTER_SIZE_MEDIABOX = [\n     0,\n     0,\n     612,\n     792\n    ];\n    function Page(pdfManager, xref, pageIndex, pageDict, ref, fontCache) {\n     this.pdfManager = pdfManager;\n     this.pageIndex = pageIndex;\n     this.pageDict = pageDict;\n     this.xref = xref;\n     this.ref = ref;\n     this.fontCache = fontCache;\n     this.evaluatorOptions = pdfManager.evaluatorOptions;\n     this.resourcesPromise = null;\n     var uniquePrefix = 'p' + this.pageIndex + '_';\n     var idCounters = { obj: 0 };\n     this.idFactory = {\n      createObjId: function () {\n       return uniquePrefix + ++idCounters.obj;\n      }\n     };\n    }\n    Page.prototype = {\n     getPageProp: function Page_getPageProp(key) {\n      return this.pageDict.get(key);\n     },\n     getInheritedPageProp: function Page_getInheritedPageProp(key, getArray) {\n      var dict = this.pageDict, valueArray = null, loopCount = 0;\n      var MAX_LOOP_COUNT = 100;\n      getArray = getArray || false;\n      while (dict) {\n       var value = getArray ? dict.getArray(key) : dict.get(key);\n       if (value) {\n        if (!valueArray) {\n         valueArray = [];\n        }\n        valueArray.push(value);\n       }\n       if (++loopCount > MAX_LOOP_COUNT) {\n        warn('Page_getInheritedPageProp: maximum loop count exceeded.');\n        break;\n       }\n       dict = dict.get('Parent');\n      }\n      if (!valueArray) {\n       return Dict.empty;\n      }\n      if (valueArray.length === 1 || !isDict(valueArray[0]) || loopCount > MAX_LOOP_COUNT) {\n       return valueArray[0];\n      }\n      return Dict.merge(this.xref, valueArray);\n     },\n     get content() {\n      return this.getPageProp('Contents');\n     },\n     get resources() {\n      return shadow(this, 'resources', this.getInheritedPageProp('Resources'));\n     },\n     get mediaBox() {\n      var mediaBox = this.getInheritedPageProp('MediaBox', true);\n      if (!isArray(mediaBox) || mediaBox.length !== 4) {\n       return shadow(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\n      }\n      return shadow(this, 'mediaBox', mediaBox);\n     },\n     get cropBox() {\n      var cropBox = this.getInheritedPageProp('CropBox', true);\n      if (!isArray(cropBox) || cropBox.length !== 4) {\n       return shadow(this, 'cropBox', this.mediaBox);\n      }\n      return shadow(this, 'cropBox', cropBox);\n     },\n     get userUnit() {\n      var obj = this.getPageProp('UserUnit');\n      if (!isNum(obj) || obj <= 0) {\n       obj = DEFAULT_USER_UNIT;\n      }\n      return shadow(this, 'userUnit', obj);\n     },\n     get view() {\n      var mediaBox = this.mediaBox, cropBox = this.cropBox;\n      if (mediaBox === cropBox) {\n       return shadow(this, 'view', mediaBox);\n      }\n      var intersection = Util.intersect(cropBox, mediaBox);\n      return shadow(this, 'view', intersection || mediaBox);\n     },\n     get rotate() {\n      var rotate = this.getInheritedPageProp('Rotate') || 0;\n      if (rotate % 90 !== 0) {\n       rotate = 0;\n      } else if (rotate >= 360) {\n       rotate = rotate % 360;\n      } else if (rotate < 0) {\n       rotate = (rotate % 360 + 360) % 360;\n      }\n      return shadow(this, 'rotate', rotate);\n     },\n     getContentStream: function Page_getContentStream() {\n      var content = this.content;\n      var stream;\n      if (isArray(content)) {\n       var xref = this.xref;\n       var i, n = content.length;\n       var streams = [];\n       for (i = 0; i < n; ++i) {\n        streams.push(xref.fetchIfRef(content[i]));\n       }\n       stream = new StreamsSequenceStream(streams);\n      } else if (isStream(content)) {\n       stream = content;\n      } else {\n       stream = new NullStream();\n      }\n      return stream;\n     },\n     loadResources: function Page_loadResources(keys) {\n      if (!this.resourcesPromise) {\n       this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n      }\n      return this.resourcesPromise.then(function resourceSuccess() {\n       var objectLoader = new ObjectLoader(this.resources.map, keys, this.xref);\n       return objectLoader.load();\n      }.bind(this));\n     },\n     getOperatorList: function Page_getOperatorList(handler, task, intent, renderInteractiveForms) {\n      var self = this;\n      var pdfManager = this.pdfManager;\n      var contentStreamPromise = pdfManager.ensure(this, 'getContentStream', []);\n      var resourcesPromise = this.loadResources([\n       'ExtGState',\n       'ColorSpace',\n       'Pattern',\n       'Shading',\n       'XObject',\n       'Font'\n      ]);\n      var partialEvaluator = new PartialEvaluator(pdfManager, this.xref, handler, this.pageIndex, this.idFactory, this.fontCache, this.evaluatorOptions);\n      var dataPromises = Promise.all([\n       contentStreamPromise,\n       resourcesPromise\n      ]);\n      var pageListPromise = dataPromises.then(function (data) {\n       var contentStream = data[0];\n       var opList = new OperatorList(intent, handler, self.pageIndex);\n       handler.send('StartRenderPage', {\n        transparency: partialEvaluator.hasBlendModes(self.resources),\n        pageIndex: self.pageIndex,\n        intent: intent\n       });\n       return partialEvaluator.getOperatorList(contentStream, task, self.resources, opList).then(function () {\n        return opList;\n       });\n      });\n      var annotationsPromise = pdfManager.ensure(this, 'annotations');\n      return Promise.all([\n       pageListPromise,\n       annotationsPromise\n      ]).then(function (datas) {\n       var pageOpList = datas[0];\n       var annotations = datas[1];\n       if (annotations.length === 0) {\n        pageOpList.flush(true);\n        return pageOpList;\n       }\n       var annotationsReadyPromise = Annotation.appendToOperatorList(annotations, pageOpList, partialEvaluator, task, intent, renderInteractiveForms);\n       return annotationsReadyPromise.then(function () {\n        pageOpList.flush(true);\n        return pageOpList;\n       });\n      });\n     },\n     extractTextContent: function Page_extractTextContent(task, normalizeWhitespace, combineTextItems) {\n      var handler = {\n       on: function nullHandlerOn() {\n       },\n       send: function nullHandlerSend() {\n       }\n      };\n      var self = this;\n      var pdfManager = this.pdfManager;\n      var contentStreamPromise = pdfManager.ensure(this, 'getContentStream', []);\n      var resourcesPromise = this.loadResources([\n       'ExtGState',\n       'XObject',\n       'Font'\n      ]);\n      var dataPromises = Promise.all([\n       contentStreamPromise,\n       resourcesPromise\n      ]);\n      return dataPromises.then(function (data) {\n       var contentStream = data[0];\n       var partialEvaluator = new PartialEvaluator(pdfManager, self.xref, handler, self.pageIndex, self.idFactory, self.fontCache, self.evaluatorOptions);\n       return partialEvaluator.getTextContent(contentStream, task, self.resources, null, normalizeWhitespace, combineTextItems);\n      });\n     },\n     getAnnotationsData: function Page_getAnnotationsData(intent) {\n      var annotations = this.annotations;\n      var annotationsData = [];\n      for (var i = 0, n = annotations.length; i < n; ++i) {\n       if (intent) {\n        if (!(intent === 'display' && annotations[i].viewable) && !(intent === 'print' && annotations[i].printable)) {\n         continue;\n        }\n       }\n       annotationsData.push(annotations[i].data);\n      }\n      return annotationsData;\n     },\n     get annotations() {\n      var annotations = [];\n      var annotationRefs = this.getInheritedPageProp('Annots') || [];\n      var annotationFactory = new AnnotationFactory();\n      for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n       var annotationRef = annotationRefs[i];\n       var annotation = annotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\n       if (annotation) {\n        annotations.push(annotation);\n       }\n      }\n      return shadow(this, 'annotations', annotations);\n     }\n    };\n    return Page;\n   }();\n   var PDFDocument = function PDFDocumentClosure() {\n    var FINGERPRINT_FIRST_BYTES = 1024;\n    var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n    function PDFDocument(pdfManager, arg) {\n     var stream;\n     if (isStream(arg)) {\n      stream = arg;\n     } else if (isArrayBuffer(arg)) {\n      stream = new Stream(arg);\n     } else {\n      error('PDFDocument: Unknown argument type');\n     }\n     assert(stream.length > 0, 'stream must have data');\n     this.pdfManager = pdfManager;\n     this.stream = stream;\n     this.xref = new XRef(stream, pdfManager);\n    }\n    function find(stream, needle, limit, backwards) {\n     var pos = stream.pos;\n     var end = stream.end;\n     var strBuf = [];\n     if (pos + limit > end) {\n      limit = end - pos;\n     }\n     for (var n = 0; n < limit; ++n) {\n      strBuf.push(String.fromCharCode(stream.getByte()));\n     }\n     var str = strBuf.join('');\n     stream.pos = pos;\n     var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n     if (index === -1) {\n      return false;\n     }\n     stream.pos += index;\n     return true;\n    }\n    var DocumentInfoValidators = {\n     get entries() {\n      return shadow(this, 'entries', {\n       Title: isString,\n       Author: isString,\n       Subject: isString,\n       Keywords: isString,\n       Creator: isString,\n       Producer: isString,\n       CreationDate: isString,\n       ModDate: isString,\n       Trapped: isName\n      });\n     }\n    };\n    PDFDocument.prototype = {\n     parse: function PDFDocument_parse(recoveryMode) {\n      this.setup(recoveryMode);\n      var version = this.catalog.catDict.get('Version');\n      if (isName(version)) {\n       this.pdfFormatVersion = version.name;\n      }\n      try {\n       this.acroForm = this.catalog.catDict.get('AcroForm');\n       if (this.acroForm) {\n        this.xfa = this.acroForm.get('XFA');\n        var fields = this.acroForm.get('Fields');\n        if ((!fields || !isArray(fields) || fields.length === 0) && !this.xfa) {\n         this.acroForm = null;\n        }\n       }\n      } catch (ex) {\n       info('Something wrong with AcroForm entry');\n       this.acroForm = null;\n      }\n     },\n     get linearization() {\n      var linearization = null;\n      if (this.stream.length) {\n       try {\n        linearization = Linearization.create(this.stream);\n       } catch (err) {\n        if (err instanceof MissingDataException) {\n         throw err;\n        }\n        info(err);\n       }\n      }\n      return shadow(this, 'linearization', linearization);\n     },\n     get startXRef() {\n      var stream = this.stream;\n      var startXRef = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n       stream.reset();\n       if (find(stream, 'endobj', 1024)) {\n        startXRef = stream.pos + 6;\n       }\n      } else {\n       var step = 1024;\n       var found = false, pos = stream.end;\n       while (!found && pos > 0) {\n        pos -= step - 'startxref'.length;\n        if (pos < 0) {\n         pos = 0;\n        }\n        stream.pos = pos;\n        found = find(stream, 'startxref', step, true);\n       }\n       if (found) {\n        stream.skip(9);\n        var ch;\n        do {\n         ch = stream.getByte();\n        } while (isSpace(ch));\n        var str = '';\n        while (ch >= 0x20 && ch <= 0x39) {\n         str += String.fromCharCode(ch);\n         ch = stream.getByte();\n        }\n        startXRef = parseInt(str, 10);\n        if (isNaN(startXRef)) {\n         startXRef = 0;\n        }\n       }\n      }\n      return shadow(this, 'startXRef', startXRef);\n     },\n     get mainXRefEntriesOffset() {\n      var mainXRefEntriesOffset = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n       mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n      }\n      return shadow(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n     },\n     checkHeader: function PDFDocument_checkHeader() {\n      var stream = this.stream;\n      stream.reset();\n      if (find(stream, '%PDF-', 1024)) {\n       stream.moveStart();\n       var MAX_VERSION_LENGTH = 12;\n       var version = '', ch;\n       while ((ch = stream.getByte()) > 0x20) {\n        if (version.length >= MAX_VERSION_LENGTH) {\n         break;\n        }\n        version += String.fromCharCode(ch);\n       }\n       if (!this.pdfFormatVersion) {\n        this.pdfFormatVersion = version.substring(5);\n       }\n       return;\n      }\n     },\n     parseStartXRef: function PDFDocument_parseStartXRef() {\n      var startXRef = this.startXRef;\n      this.xref.setStartXRef(startXRef);\n     },\n     setup: function PDFDocument_setup(recoveryMode) {\n      this.xref.parse(recoveryMode);\n      var self = this;\n      var pageFactory = {\n       createPage: function (pageIndex, dict, ref, fontCache) {\n        return new Page(self.pdfManager, self.xref, pageIndex, dict, ref, fontCache);\n       }\n      };\n      this.catalog = new Catalog(this.pdfManager, this.xref, pageFactory);\n     },\n     get numPages() {\n      var linearization = this.linearization;\n      var num = linearization ? linearization.numPages : this.catalog.numPages;\n      return shadow(this, 'numPages', num);\n     },\n     get documentInfo() {\n      var docInfo = {\n       PDFFormatVersion: this.pdfFormatVersion,\n       IsAcroFormPresent: !!this.acroForm,\n       IsXFAPresent: !!this.xfa\n      };\n      var infoDict;\n      try {\n       infoDict = this.xref.trailer.get('Info');\n      } catch (err) {\n       info('The document information dictionary is invalid.');\n      }\n      if (infoDict) {\n       var validEntries = DocumentInfoValidators.entries;\n       for (var key in validEntries) {\n        if (infoDict.has(key)) {\n         var value = infoDict.get(key);\n         if (validEntries[key](value)) {\n          docInfo[key] = typeof value !== 'string' ? value : stringToPDFString(value);\n         } else {\n          info('Bad value in document info for \"' + key + '\"');\n         }\n        }\n       }\n      }\n      return shadow(this, 'documentInfo', docInfo);\n     },\n     get fingerprint() {\n      var xref = this.xref, hash, fileID = '';\n      var idArray = xref.trailer.get('ID');\n      if (idArray && isArray(idArray) && idArray[0] && isString(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n       hash = stringToBytes(idArray[0]);\n      } else {\n       if (this.stream.ensureRange) {\n        this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n       }\n       hash = calculateMD5(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n      }\n      for (var i = 0, n = hash.length; i < n; i++) {\n       var hex = hash[i].toString(16);\n       fileID += hex.length === 1 ? '0' + hex : hex;\n      }\n      return shadow(this, 'fingerprint', fileID);\n     },\n     getPage: function PDFDocument_getPage(pageIndex) {\n      return this.catalog.getPage(pageIndex);\n     },\n     cleanup: function PDFDocument_cleanup() {\n      return this.catalog.cleanup();\n     }\n    };\n    return PDFDocument;\n   }();\n   exports.Page = Page;\n   exports.PDFDocument = PDFDocument;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsCorePdfManager = {}, root.pdfjsSharedUtil, root.pdfjsCoreStream, root.pdfjsCoreChunkedStream, root.pdfjsCoreDocument);\n  }(this, function (exports, sharedUtil, coreStream, coreChunkedStream, coreDocument) {\n   var warn = sharedUtil.warn;\n   var createValidAbsoluteUrl = sharedUtil.createValidAbsoluteUrl;\n   var shadow = sharedUtil.shadow;\n   var NotImplementedException = sharedUtil.NotImplementedException;\n   var MissingDataException = sharedUtil.MissingDataException;\n   var createPromiseCapability = sharedUtil.createPromiseCapability;\n   var Util = sharedUtil.Util;\n   var Stream = coreStream.Stream;\n   var ChunkedStreamManager = coreChunkedStream.ChunkedStreamManager;\n   var PDFDocument = coreDocument.PDFDocument;\n   var BasePdfManager = function BasePdfManagerClosure() {\n    function BasePdfManager() {\n     throw new Error('Cannot initialize BaseManagerManager');\n    }\n    BasePdfManager.prototype = {\n     get docId() {\n      return this._docId;\n     },\n     get password() {\n      return this._password;\n     },\n     get docBaseUrl() {\n      var docBaseUrl = null;\n      if (this._docBaseUrl) {\n       var absoluteUrl = createValidAbsoluteUrl(this._docBaseUrl);\n       if (absoluteUrl) {\n        docBaseUrl = absoluteUrl.href;\n       } else {\n        warn('Invalid absolute docBaseUrl: \"' + this._docBaseUrl + '\".');\n       }\n      }\n      return shadow(this, 'docBaseUrl', docBaseUrl);\n     },\n     onLoadedStream: function BasePdfManager_onLoadedStream() {\n      throw new NotImplementedException();\n     },\n     ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n      return this.ensure(this.pdfDocument, prop, args);\n     },\n     ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n      return this.ensure(this.pdfDocument.xref, prop, args);\n     },\n     ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n      return this.ensure(this.pdfDocument.catalog, prop, args);\n     },\n     getPage: function BasePdfManager_getPage(pageIndex) {\n      return this.pdfDocument.getPage(pageIndex);\n     },\n     cleanup: function BasePdfManager_cleanup() {\n      return this.pdfDocument.cleanup();\n     },\n     ensure: function BasePdfManager_ensure(obj, prop, args) {\n      return new NotImplementedException();\n     },\n     requestRange: function BasePdfManager_requestRange(begin, end) {\n      return new NotImplementedException();\n     },\n     requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n      return new NotImplementedException();\n     },\n     sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n      return new NotImplementedException();\n     },\n     updatePassword: function BasePdfManager_updatePassword(password) {\n      this._password = password;\n     },\n     terminate: function BasePdfManager_terminate() {\n      return new NotImplementedException();\n     }\n    };\n    return BasePdfManager;\n   }();\n   var LocalPdfManager = function LocalPdfManagerClosure() {\n    function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n     this._docId = docId;\n     this._password = password;\n     this._docBaseUrl = docBaseUrl;\n     this.evaluatorOptions = evaluatorOptions;\n     var stream = new Stream(data);\n     this.pdfDocument = new PDFDocument(this, stream);\n     this._loadedStreamCapability = createPromiseCapability();\n     this._loadedStreamCapability.resolve(stream);\n    }\n    Util.inherit(LocalPdfManager, BasePdfManager, {\n     ensure: function LocalPdfManager_ensure(obj, prop, args) {\n      return new Promise(function (resolve, reject) {\n       try {\n        var value = obj[prop];\n        var result;\n        if (typeof value === 'function') {\n         result = value.apply(obj, args);\n        } else {\n         result = value;\n        }\n        resolve(result);\n       } catch (e) {\n        reject(e);\n       }\n      });\n     },\n     requestRange: function LocalPdfManager_requestRange(begin, end) {\n      return Promise.resolve();\n     },\n     requestLoadedStream: function LocalPdfManager_requestLoadedStream() {\n     },\n     onLoadedStream: function LocalPdfManager_onLoadedStream() {\n      return this._loadedStreamCapability.promise;\n     },\n     terminate: function LocalPdfManager_terminate() {\n     }\n    });\n    return LocalPdfManager;\n   }();\n   var NetworkPdfManager = function NetworkPdfManagerClosure() {\n    function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n     this._docId = docId;\n     this._password = args.password;\n     this._docBaseUrl = docBaseUrl;\n     this.msgHandler = args.msgHandler;\n     this.evaluatorOptions = evaluatorOptions;\n     var params = {\n      msgHandler: args.msgHandler,\n      url: args.url,\n      length: args.length,\n      disableAutoFetch: args.disableAutoFetch,\n      rangeChunkSize: args.rangeChunkSize\n     };\n     this.streamManager = new ChunkedStreamManager(pdfNetworkStream, params);\n     this.pdfDocument = new PDFDocument(this, this.streamManager.getStream());\n    }\n    Util.inherit(NetworkPdfManager, BasePdfManager, {\n     ensure: function NetworkPdfManager_ensure(obj, prop, args) {\n      var pdfManager = this;\n      return new Promise(function (resolve, reject) {\n       function ensureHelper() {\n        try {\n         var result;\n         var value = obj[prop];\n         if (typeof value === 'function') {\n          result = value.apply(obj, args);\n         } else {\n          result = value;\n         }\n         resolve(result);\n        } catch (e) {\n         if (!(e instanceof MissingDataException)) {\n          reject(e);\n          return;\n         }\n         pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\n        }\n       }\n       ensureHelper();\n      });\n     },\n     requestRange: function NetworkPdfManager_requestRange(begin, end) {\n      return this.streamManager.requestRange(begin, end);\n     },\n     requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\n      this.streamManager.requestAllChunks();\n     },\n     sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\n      this.streamManager.onReceiveData({ chunk: chunk });\n     },\n     onLoadedStream: function NetworkPdfManager_onLoadedStream() {\n      return this.streamManager.onLoadedStream();\n     },\n     terminate: function NetworkPdfManager_terminate() {\n      this.streamManager.abort();\n     }\n    });\n    return NetworkPdfManager;\n   }();\n   exports.LocalPdfManager = LocalPdfManager;\n   exports.NetworkPdfManager = NetworkPdfManager;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsCoreWorker = {}, root.pdfjsSharedUtil, root.pdfjsCorePrimitives, root.pdfjsCorePdfManager);\n  }(this, function (exports, sharedUtil, corePrimitives, corePdfManager) {\n   var UNSUPPORTED_FEATURES = sharedUtil.UNSUPPORTED_FEATURES;\n   var InvalidPDFException = sharedUtil.InvalidPDFException;\n   var MessageHandler = sharedUtil.MessageHandler;\n   var MissingPDFException = sharedUtil.MissingPDFException;\n   var UnexpectedResponseException = sharedUtil.UnexpectedResponseException;\n   var PasswordException = sharedUtil.PasswordException;\n   var PasswordResponses = sharedUtil.PasswordResponses;\n   var UnknownErrorException = sharedUtil.UnknownErrorException;\n   var XRefParseException = sharedUtil.XRefParseException;\n   var arrayByteLength = sharedUtil.arrayByteLength;\n   var arraysToBytes = sharedUtil.arraysToBytes;\n   var assert = sharedUtil.assert;\n   var createPromiseCapability = sharedUtil.createPromiseCapability;\n   var error = sharedUtil.error;\n   var info = sharedUtil.info;\n   var warn = sharedUtil.warn;\n   var setVerbosityLevel = sharedUtil.setVerbosityLevel;\n   var Ref = corePrimitives.Ref;\n   var LocalPdfManager = corePdfManager.LocalPdfManager;\n   var NetworkPdfManager = corePdfManager.NetworkPdfManager;\n   var globalScope = sharedUtil.globalScope;\n   var WorkerTask = function WorkerTaskClosure() {\n    function WorkerTask(name) {\n     this.name = name;\n     this.terminated = false;\n     this._capability = createPromiseCapability();\n    }\n    WorkerTask.prototype = {\n     get finished() {\n      return this._capability.promise;\n     },\n     finish: function () {\n      this._capability.resolve();\n     },\n     terminate: function () {\n      this.terminated = true;\n     },\n     ensureNotTerminated: function () {\n      if (this.terminated) {\n       throw new Error('Worker task was terminated');\n      }\n     }\n    };\n    return WorkerTask;\n   }();\n   var PDFWorkerStream = function PDFWorkerStreamClosure() {\n    function PDFWorkerStream(params, msgHandler) {\n     this._queuedChunks = [];\n     var initialData = params.initialData;\n     if (initialData && initialData.length > 0) {\n      this._queuedChunks.push(initialData);\n     }\n     this._msgHandler = msgHandler;\n     this._isRangeSupported = !params.disableRange;\n     this._isStreamingSupported = !params.disableStream;\n     this._contentLength = params.length;\n     this._fullRequestReader = null;\n     this._rangeReaders = [];\n     msgHandler.on('OnDataRange', this._onReceiveData.bind(this));\n     msgHandler.on('OnDataProgress', this._onProgress.bind(this));\n    }\n    PDFWorkerStream.prototype = {\n     _onReceiveData: function PDFWorkerStream_onReceiveData(args) {\n      if (args.begin === undefined) {\n       if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(args.chunk);\n       } else {\n        this._queuedChunks.push(args.chunk);\n       }\n      } else {\n       var found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n         return false;\n        }\n        rangeReader._enqueue(args.chunk);\n        return true;\n       });\n       assert(found);\n      }\n     },\n     _onProgress: function PDFWorkerStream_onProgress(evt) {\n      if (this._rangeReaders.length > 0) {\n       var firstReader = this._rangeReaders[0];\n       if (firstReader.onProgress) {\n        firstReader.onProgress({ loaded: evt.loaded });\n       }\n      }\n     },\n     _removeRangeReader: function PDFWorkerStream_removeRangeReader(reader) {\n      var i = this._rangeReaders.indexOf(reader);\n      if (i >= 0) {\n       this._rangeReaders.splice(i, 1);\n      }\n     },\n     getFullReader: function PDFWorkerStream_getFullReader() {\n      assert(!this._fullRequestReader);\n      var queuedChunks = this._queuedChunks;\n      this._queuedChunks = null;\n      return new PDFWorkerStreamReader(this, queuedChunks);\n     },\n     getRangeReader: function PDFWorkerStream_getRangeReader(begin, end) {\n      var reader = new PDFWorkerStreamRangeReader(this, begin, end);\n      this._msgHandler.send('RequestDataRange', {\n       begin: begin,\n       end: end\n      });\n      this._rangeReaders.push(reader);\n      return reader;\n     },\n     cancelAllRequests: function PDFWorkerStream_cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n       this._fullRequestReader.cancel(reason);\n      }\n      var readers = this._rangeReaders.slice(0);\n      readers.forEach(function (rangeReader) {\n       rangeReader.cancel(reason);\n      });\n     }\n    };\n    function PDFWorkerStreamReader(stream, queuedChunks) {\n     this._stream = stream;\n     this._done = false;\n     this._queuedChunks = queuedChunks || [];\n     this._requests = [];\n     this._headersReady = Promise.resolve();\n     stream._fullRequestReader = this;\n     this.onProgress = null;\n    }\n    PDFWorkerStreamReader.prototype = {\n     _enqueue: function PDFWorkerStreamReader_enqueue(chunk) {\n      if (this._done) {\n       return;\n      }\n      if (this._requests.length > 0) {\n       var requestCapability = this._requests.shift();\n       requestCapability.resolve({\n        value: chunk,\n        done: false\n       });\n       return;\n      }\n      this._queuedChunks.push(chunk);\n     },\n     get headersReady() {\n      return this._headersReady;\n     },\n     get isRangeSupported() {\n      return this._stream._isRangeSupported;\n     },\n     get isStreamingSupported() {\n      return this._stream._isStreamingSupported;\n     },\n     get contentLength() {\n      return this._stream._contentLength;\n     },\n     read: function PDFWorkerStreamReader_read() {\n      if (this._queuedChunks.length > 0) {\n       var chunk = this._queuedChunks.shift();\n       return Promise.resolve({\n        value: chunk,\n        done: false\n       });\n      }\n      if (this._done) {\n       return Promise.resolve({\n        value: undefined,\n        done: true\n       });\n      }\n      var requestCapability = createPromiseCapability();\n      this._requests.push(requestCapability);\n      return requestCapability.promise;\n     },\n     cancel: function PDFWorkerStreamReader_cancel(reason) {\n      this._done = true;\n      this._requests.forEach(function (requestCapability) {\n       requestCapability.resolve({\n        value: undefined,\n        done: true\n       });\n      });\n      this._requests = [];\n     }\n    };\n    function PDFWorkerStreamRangeReader(stream, begin, end) {\n     this._stream = stream;\n     this._begin = begin;\n     this._end = end;\n     this._queuedChunk = null;\n     this._requests = [];\n     this._done = false;\n     this.onProgress = null;\n    }\n    PDFWorkerStreamRangeReader.prototype = {\n     _enqueue: function PDFWorkerStreamRangeReader_enqueue(chunk) {\n      if (this._done) {\n       return;\n      }\n      if (this._requests.length === 0) {\n       this._queuedChunk = chunk;\n      } else {\n       var requestsCapability = this._requests.shift();\n       requestsCapability.resolve({\n        value: chunk,\n        done: false\n       });\n       this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({\n         value: undefined,\n         done: true\n        });\n       });\n       this._requests = [];\n      }\n      this._done = true;\n      this._stream._removeRangeReader(this);\n     },\n     get isStreamingSupported() {\n      return false;\n     },\n     read: function PDFWorkerStreamRangeReader_read() {\n      if (this._queuedChunk) {\n       return Promise.resolve({\n        value: this._queuedChunk,\n        done: false\n       });\n      }\n      if (this._done) {\n       return Promise.resolve({\n        value: undefined,\n        done: true\n       });\n      }\n      var requestCapability = createPromiseCapability();\n      this._requests.push(requestCapability);\n      return requestCapability.promise;\n     },\n     cancel: function PDFWorkerStreamRangeReader_cancel(reason) {\n      this._done = true;\n      this._requests.forEach(function (requestCapability) {\n       requestCapability.resolve({\n        value: undefined,\n        done: true\n       });\n      });\n      this._requests = [];\n      this._stream._removeRangeReader(this);\n     }\n    };\n    return PDFWorkerStream;\n   }();\n   var PDFNetworkStream;\n   function setPDFNetworkStreamClass(cls) {\n    PDFNetworkStream = cls;\n   }\n   var WorkerMessageHandler = {\n    setup: function wphSetup(handler, port) {\n     var testMessageProcessed = false;\n     handler.on('test', function wphSetupTest(data) {\n      if (testMessageProcessed) {\n       return;\n      }\n      testMessageProcessed = true;\n      if (!(data instanceof Uint8Array)) {\n       handler.send('test', 'main', false);\n       return;\n      }\n      var supportTransfers = data[0] === 255;\n      handler.postMessageTransfers = supportTransfers;\n      var xhr = new XMLHttpRequest();\n      var responseExists = 'response' in xhr;\n      try {\n       var dummy = xhr.responseType;\n      } catch (e) {\n       responseExists = false;\n      }\n      if (!responseExists) {\n       handler.send('test', false);\n       return;\n      }\n      handler.send('test', {\n       supportTypedArray: true,\n       supportTransfers: supportTransfers\n      });\n     });\n     handler.on('configure', function wphConfigure(data) {\n      setVerbosityLevel(data.verbosity);\n     });\n     handler.on('GetDocRequest', function wphSetupDoc(data) {\n      return WorkerMessageHandler.createDocumentHandler(data, port);\n     });\n    },\n    createDocumentHandler: function wphCreateDocumentHandler(docParams, port) {\n     var pdfManager;\n     var terminated = false;\n     var cancelXHRs = null;\n     var WorkerTasks = [];\n     var docId = docParams.docId;\n     var docBaseUrl = docParams.docBaseUrl;\n     var workerHandlerName = docParams.docId + '_worker';\n     var handler = new MessageHandler(workerHandlerName, docId, port);\n     handler.postMessageTransfers = docParams.postMessageTransfers;\n     function ensureNotTerminated() {\n      if (terminated) {\n       throw new Error('Worker was terminated');\n      }\n     }\n     function startWorkerTask(task) {\n      WorkerTasks.push(task);\n     }\n     function finishWorkerTask(task) {\n      task.finish();\n      var i = WorkerTasks.indexOf(task);\n      WorkerTasks.splice(i, 1);\n     }\n     function loadDocument(recoveryMode) {\n      var loadDocumentCapability = createPromiseCapability();\n      var parseSuccess = function parseSuccess() {\n       var numPagesPromise = pdfManager.ensureDoc('numPages');\n       var fingerprintPromise = pdfManager.ensureDoc('fingerprint');\n       var encryptedPromise = pdfManager.ensureXRef('encrypt');\n       Promise.all([\n        numPagesPromise,\n        fingerprintPromise,\n        encryptedPromise\n       ]).then(function onDocReady(results) {\n        var doc = {\n         numPages: results[0],\n         fingerprint: results[1],\n         encrypted: !!results[2]\n        };\n        loadDocumentCapability.resolve(doc);\n       }, parseFailure);\n      };\n      var parseFailure = function parseFailure(e) {\n       loadDocumentCapability.reject(e);\n      };\n      pdfManager.ensureDoc('checkHeader', []).then(function () {\n       pdfManager.ensureDoc('parseStartXRef', []).then(function () {\n        pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\n       }, parseFailure);\n      }, parseFailure);\n      return loadDocumentCapability.promise;\n     }\n     function getPdfManager(data, evaluatorOptions) {\n      var pdfManagerCapability = createPromiseCapability();\n      var pdfManager;\n      var source = data.source;\n      if (source.data) {\n       try {\n        pdfManager = new LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n        pdfManagerCapability.resolve(pdfManager);\n       } catch (ex) {\n        pdfManagerCapability.reject(ex);\n       }\n       return pdfManagerCapability.promise;\n      }\n      var pdfStream;\n      try {\n       if (source.chunkedViewerLoading) {\n        pdfStream = new PDFWorkerStream(source, handler);\n       } else {\n        assert(PDFNetworkStream, 'pdfjs/core/network module is not loaded');\n        pdfStream = new PDFNetworkStream(data);\n       }\n      } catch (ex) {\n       pdfManagerCapability.reject(ex);\n       return pdfManagerCapability.promise;\n      }\n      var fullRequest = pdfStream.getFullReader();\n      fullRequest.headersReady.then(function () {\n       if (!fullRequest.isStreamingSupported || !fullRequest.isRangeSupported) {\n        fullRequest.onProgress = function (evt) {\n         handler.send('DocProgress', {\n          loaded: evt.loaded,\n          total: evt.total\n         });\n        };\n       }\n       if (!fullRequest.isRangeSupported) {\n        return;\n       }\n       var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n       pdfManager = new NetworkPdfManager(docId, pdfStream, {\n        msgHandler: handler,\n        url: source.url,\n        password: source.password,\n        length: fullRequest.contentLength,\n        disableAutoFetch: disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize\n       }, evaluatorOptions, docBaseUrl);\n       pdfManagerCapability.resolve(pdfManager);\n       cancelXHRs = null;\n      }).catch(function (reason) {\n       pdfManagerCapability.reject(reason);\n       cancelXHRs = null;\n      });\n      var cachedChunks = [], loaded = 0;\n      var flushChunks = function () {\n       var pdfFile = arraysToBytes(cachedChunks);\n       if (source.length && pdfFile.length !== source.length) {\n        warn('reported HTTP length is different from actual');\n       }\n       try {\n        pdfManager = new LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n        pdfManagerCapability.resolve(pdfManager);\n       } catch (ex) {\n        pdfManagerCapability.reject(ex);\n       }\n       cachedChunks = [];\n      };\n      var readPromise = new Promise(function (resolve, reject) {\n       var readChunk = function (chunk) {\n        try {\n         ensureNotTerminated();\n         if (chunk.done) {\n          if (!pdfManager) {\n           flushChunks();\n          }\n          cancelXHRs = null;\n          return;\n         }\n         var data = chunk.value;\n         loaded += arrayByteLength(data);\n         if (!fullRequest.isStreamingSupported) {\n          handler.send('DocProgress', {\n           loaded: loaded,\n           total: Math.max(loaded, fullRequest.contentLength || 0)\n          });\n         }\n         if (pdfManager) {\n          pdfManager.sendProgressiveData(data);\n         } else {\n          cachedChunks.push(data);\n         }\n         fullRequest.read().then(readChunk, reject);\n        } catch (e) {\n         reject(e);\n        }\n       };\n       fullRequest.read().then(readChunk, reject);\n      });\n      readPromise.catch(function (e) {\n       pdfManagerCapability.reject(e);\n       cancelXHRs = null;\n      });\n      cancelXHRs = function () {\n       pdfStream.cancelAllRequests('abort');\n      };\n      return pdfManagerCapability.promise;\n     }\n     function setupDoc(data) {\n      function onSuccess(doc) {\n       ensureNotTerminated();\n       handler.send('GetDoc', { pdfInfo: doc });\n      }\n      function onFailure(e) {\n       if (e instanceof PasswordException) {\n        var task = new WorkerTask('PasswordException: response ' + e.code);\n        startWorkerTask(task);\n        handler.sendWithPromise('PasswordRequest', e).then(function (data) {\n         finishWorkerTask(task);\n         pdfManager.updatePassword(data.password);\n         pdfManagerReady();\n        }).catch(function (ex) {\n         finishWorkerTask(task);\n         handler.send('PasswordException', ex);\n        }.bind(null, e));\n       } else if (e instanceof InvalidPDFException) {\n        handler.send('InvalidPDF', e);\n       } else if (e instanceof MissingPDFException) {\n        handler.send('MissingPDF', e);\n       } else if (e instanceof UnexpectedResponseException) {\n        handler.send('UnexpectedResponse', e);\n       } else {\n        handler.send('UnknownError', new UnknownErrorException(e.message, e.toString()));\n       }\n      }\n      function pdfManagerReady() {\n       ensureNotTerminated();\n       loadDocument(false).then(onSuccess, function loadFailure(ex) {\n        ensureNotTerminated();\n        if (!(ex instanceof XRefParseException)) {\n         onFailure(ex);\n         return;\n        }\n        pdfManager.requestLoadedStream();\n        pdfManager.onLoadedStream().then(function () {\n         ensureNotTerminated();\n         loadDocument(true).then(onSuccess, onFailure);\n        });\n       }, onFailure);\n      }\n      ensureNotTerminated();\n      var cMapOptions = {\n       url: data.cMapUrl === undefined ? null : data.cMapUrl,\n       packed: data.cMapPacked === true\n      };\n      var evaluatorOptions = {\n       forceDataSchema: data.disableCreateObjectURL,\n       maxImageSize: data.maxImageSize === undefined ? -1 : data.maxImageSize,\n       disableFontFace: data.disableFontFace,\n       cMapOptions: cMapOptions\n      };\n      getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n       if (terminated) {\n        newPdfManager.terminate();\n        throw new Error('Worker was terminated');\n       }\n       pdfManager = newPdfManager;\n       handler.send('PDFManagerReady', null);\n       pdfManager.onLoadedStream().then(function (stream) {\n        handler.send('DataLoaded', { length: stream.bytes.byteLength });\n       });\n      }).then(pdfManagerReady, onFailure);\n     }\n     handler.on('GetPage', function wphSetupGetPage(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n       var rotatePromise = pdfManager.ensure(page, 'rotate');\n       var refPromise = pdfManager.ensure(page, 'ref');\n       var userUnitPromise = pdfManager.ensure(page, 'userUnit');\n       var viewPromise = pdfManager.ensure(page, 'view');\n       return Promise.all([\n        rotatePromise,\n        refPromise,\n        userUnitPromise,\n        viewPromise\n       ]).then(function (results) {\n        return {\n         rotate: results[0],\n         ref: results[1],\n         userUnit: results[2],\n         view: results[3]\n        };\n       });\n      });\n     });\n     handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n      var ref = new Ref(data.ref.num, data.ref.gen);\n      var catalog = pdfManager.pdfDocument.catalog;\n      return catalog.getPageIndex(ref);\n     });\n     handler.on('GetDestinations', function wphSetupGetDestinations(data) {\n      return pdfManager.ensureCatalog('destinations');\n     });\n     handler.on('GetDestination', function wphSetupGetDestination(data) {\n      return pdfManager.ensureCatalog('getDestination', [data.id]);\n     });\n     handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\n      return pdfManager.ensureCatalog('pageLabels');\n     });\n     handler.on('GetAttachments', function wphSetupGetAttachments(data) {\n      return pdfManager.ensureCatalog('attachments');\n     });\n     handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\n      return pdfManager.ensureCatalog('javaScript');\n     });\n     handler.on('GetOutline', function wphSetupGetOutline(data) {\n      return pdfManager.ensureCatalog('documentOutline');\n     });\n     handler.on('GetMetadata', function wphSetupGetMetadata(data) {\n      return Promise.all([\n       pdfManager.ensureDoc('documentInfo'),\n       pdfManager.ensureCatalog('metadata')\n      ]);\n     });\n     handler.on('GetData', function wphSetupGetData(data) {\n      pdfManager.requestLoadedStream();\n      return pdfManager.onLoadedStream().then(function (stream) {\n       return stream.bytes;\n      });\n     });\n     handler.on('GetStats', function wphSetupGetStats(data) {\n      return pdfManager.pdfDocument.xref.stats;\n     });\n     handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n       return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\n      });\n     });\n     handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n      var pageIndex = data.pageIndex;\n      pdfManager.getPage(pageIndex).then(function (page) {\n       var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\n       startWorkerTask(task);\n       var pageNum = pageIndex + 1;\n       var start = Date.now();\n       page.getOperatorList(handler, task, data.intent, data.renderInteractiveForms).then(function (operatorList) {\n        finishWorkerTask(task);\n        info('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\n       }, function (e) {\n        finishWorkerTask(task);\n        if (task.terminated) {\n         return;\n        }\n        handler.send('UnsupportedFeature', { featureId: UNSUPPORTED_FEATURES.unknown });\n        var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\n        var wrappedException;\n        if (typeof e === 'string') {\n         wrappedException = {\n          message: e,\n          stack: minimumStackMessage\n         };\n        } else if (typeof e === 'object') {\n         wrappedException = {\n          message: e.message || e.toString(),\n          stack: e.stack || minimumStackMessage\n         };\n        } else {\n         wrappedException = {\n          message: 'Unknown exception type: ' + typeof e,\n          stack: minimumStackMessage\n         };\n        }\n        handler.send('PageError', {\n         pageNum: pageNum,\n         error: wrappedException,\n         intent: data.intent\n        });\n       });\n      });\n     }, this);\n     handler.on('GetTextContent', function wphExtractText(data) {\n      var pageIndex = data.pageIndex;\n      var normalizeWhitespace = data.normalizeWhitespace;\n      var combineTextItems = data.combineTextItems;\n      return pdfManager.getPage(pageIndex).then(function (page) {\n       var task = new WorkerTask('GetTextContent: page ' + pageIndex);\n       startWorkerTask(task);\n       var pageNum = pageIndex + 1;\n       var start = Date.now();\n       return page.extractTextContent(task, normalizeWhitespace, combineTextItems).then(function (textContent) {\n        finishWorkerTask(task);\n        info('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\n        return textContent;\n       }, function (reason) {\n        finishWorkerTask(task);\n        if (task.terminated) {\n         return;\n        }\n        throw reason;\n       });\n      });\n     });\n     handler.on('Cleanup', function wphCleanup(data) {\n      return pdfManager.cleanup();\n     });\n     handler.on('Terminate', function wphTerminate(data) {\n      terminated = true;\n      if (pdfManager) {\n       pdfManager.terminate();\n       pdfManager = null;\n      }\n      if (cancelXHRs) {\n       cancelXHRs();\n      }\n      var waitOn = [];\n      WorkerTasks.forEach(function (task) {\n       waitOn.push(task.finished);\n       task.terminate();\n      });\n      return Promise.all(waitOn).then(function () {\n       handler.destroy();\n       handler = null;\n      });\n     });\n     handler.on('Ready', function wphReady(data) {\n      setupDoc(docParams);\n      docParams = null;\n     });\n     return workerHandlerName;\n    }\n   };\n   function initializeWorker() {\n    if (!('console' in globalScope)) {\n     var consoleTimer = {};\n     var workerConsole = {\n      log: function log() {\n       var args = Array.prototype.slice.call(arguments);\n       globalScope.postMessage({\n        targetName: 'main',\n        action: 'console_log',\n        data: args\n       });\n      },\n      error: function error() {\n       var args = Array.prototype.slice.call(arguments);\n       globalScope.postMessage({\n        targetName: 'main',\n        action: 'console_error',\n        data: args\n       });\n       throw 'pdf.js execution error';\n      },\n      time: function time(name) {\n       consoleTimer[name] = Date.now();\n      },\n      timeEnd: function timeEnd(name) {\n       var time = consoleTimer[name];\n       if (!time) {\n        error('Unknown timer name ' + name);\n       }\n       this.log('Timer:', name, Date.now() - time);\n      }\n     };\n     globalScope.console = workerConsole;\n    }\n    var handler = new MessageHandler('worker', 'main', self);\n    WorkerMessageHandler.setup(handler, self);\n    handler.send('ready', null);\n   }\n   if (typeof window === 'undefined' && !(typeof module !== 'undefined' && module.require)) {\n    initializeWorker();\n   }\n   exports.setPDFNetworkStreamClass = setPDFNetworkStreamClass;\n   exports.WorkerTask = WorkerTask;\n   exports.WorkerMessageHandler = WorkerMessageHandler;\n  }));\n  (function (root, factory) {\n   factory(root.pdfjsCoreNetwork = {}, root.pdfjsSharedUtil, root.pdfjsCoreWorker);\n  }(this, function (exports, sharedUtil, coreWorker) {\n   var OK_RESPONSE = 200;\n   var PARTIAL_CONTENT_RESPONSE = 206;\n   function NetworkManager(url, args) {\n    this.url = url;\n    args = args || {};\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = this.isHttp && args.httpHeaders || {};\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr = args.getXhr || function NetworkManager_getXhr() {\n     return new XMLHttpRequest();\n    };\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n    this.loadedRequests = Object.create(null);\n   }\n   function getArrayBuffer(xhr) {\n    var data = xhr.response;\n    if (typeof data !== 'string') {\n     return data;\n    }\n    var length = data.length;\n    var array = new Uint8Array(length);\n    for (var i = 0; i < length; i++) {\n     array[i] = data.charCodeAt(i) & 0xFF;\n    }\n    return array.buffer;\n   }\n   var supportsMozChunked = function supportsMozChunkedClosure() {\n    try {\n     var x = new XMLHttpRequest();\n     x.open('GET', 'https://example.com');\n     x.responseType = 'moz-chunked-arraybuffer';\n     return x.responseType === 'moz-chunked-arraybuffer';\n    } catch (e) {\n     return false;\n    }\n   }();\n   NetworkManager.prototype = {\n    requestRange: function NetworkManager_requestRange(begin, end, listeners) {\n     var args = {\n      begin: begin,\n      end: end\n     };\n     for (var prop in listeners) {\n      args[prop] = listeners[prop];\n     }\n     return this.request(args);\n    },\n    requestFull: function NetworkManager_requestFull(listeners) {\n     return this.request(listeners);\n    },\n    request: function NetworkManager_request(args) {\n     var xhr = this.getXhr();\n     var xhrId = this.currXhrId++;\n     var pendingRequest = this.pendingRequests[xhrId] = { xhr: xhr };\n     xhr.open('GET', this.url);\n     xhr.withCredentials = this.withCredentials;\n     for (var property in this.httpHeaders) {\n      var value = this.httpHeaders[property];\n      if (typeof value === 'undefined') {\n       continue;\n      }\n      xhr.setRequestHeader(property, value);\n     }\n     if (this.isHttp && 'begin' in args && 'end' in args) {\n      var rangeStr = args.begin + '-' + (args.end - 1);\n      xhr.setRequestHeader('Range', 'bytes=' + rangeStr);\n      pendingRequest.expectedStatus = 206;\n     } else {\n      pendingRequest.expectedStatus = 200;\n     }\n     var useMozChunkedLoading = supportsMozChunked && !!args.onProgressiveData;\n     if (useMozChunkedLoading) {\n      xhr.responseType = 'moz-chunked-arraybuffer';\n      pendingRequest.onProgressiveData = args.onProgressiveData;\n      pendingRequest.mozChunked = true;\n     } else {\n      xhr.responseType = 'arraybuffer';\n     }\n     if (args.onError) {\n      xhr.onerror = function (evt) {\n       args.onError(xhr.status);\n      };\n     }\n     xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n     xhr.onprogress = this.onProgress.bind(this, xhrId);\n     pendingRequest.onHeadersReceived = args.onHeadersReceived;\n     pendingRequest.onDone = args.onDone;\n     pendingRequest.onError = args.onError;\n     pendingRequest.onProgress = args.onProgress;\n     xhr.send(null);\n     return xhrId;\n    },\n    onProgress: function NetworkManager_onProgress(xhrId, evt) {\n     var pendingRequest = this.pendingRequests[xhrId];\n     if (!pendingRequest) {\n      return;\n     }\n     if (pendingRequest.mozChunked) {\n      var chunk = getArrayBuffer(pendingRequest.xhr);\n      pendingRequest.onProgressiveData(chunk);\n     }\n     var onProgress = pendingRequest.onProgress;\n     if (onProgress) {\n      onProgress(evt);\n     }\n    },\n    onStateChange: function NetworkManager_onStateChange(xhrId, evt) {\n     var pendingRequest = this.pendingRequests[xhrId];\n     if (!pendingRequest) {\n      return;\n     }\n     var xhr = pendingRequest.xhr;\n     if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n     }\n     if (xhr.readyState !== 4) {\n      return;\n     }\n     if (!(xhrId in this.pendingRequests)) {\n      return;\n     }\n     delete this.pendingRequests[xhrId];\n     if (xhr.status === 0 && this.isHttp) {\n      if (pendingRequest.onError) {\n       pendingRequest.onError(xhr.status);\n      }\n      return;\n     }\n     var xhrStatus = xhr.status || OK_RESPONSE;\n     var ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n     if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {\n      if (pendingRequest.onError) {\n       pendingRequest.onError(xhr.status);\n      }\n      return;\n     }\n     this.loadedRequests[xhrId] = true;\n     var chunk = getArrayBuffer(xhr);\n     if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      var rangeHeader = xhr.getResponseHeader('Content-Range');\n      var matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      var begin = parseInt(matches[1], 10);\n      pendingRequest.onDone({\n       begin: begin,\n       chunk: chunk\n      });\n     } else if (pendingRequest.onProgressiveData) {\n      pendingRequest.onDone(null);\n     } else if (chunk) {\n      pendingRequest.onDone({\n       begin: 0,\n       chunk: chunk\n      });\n     } else if (pendingRequest.onError) {\n      pendingRequest.onError(xhr.status);\n     }\n    },\n    hasPendingRequests: function NetworkManager_hasPendingRequests() {\n     for (var xhrId in this.pendingRequests) {\n      return true;\n     }\n     return false;\n    },\n    getRequestXhr: function NetworkManager_getXhr(xhrId) {\n     return this.pendingRequests[xhrId].xhr;\n    },\n    isStreamingRequest: function NetworkManager_isStreamingRequest(xhrId) {\n     return !!this.pendingRequests[xhrId].onProgressiveData;\n    },\n    isPendingRequest: function NetworkManager_isPendingRequest(xhrId) {\n     return xhrId in this.pendingRequests;\n    },\n    isLoadedRequest: function NetworkManager_isLoadedRequest(xhrId) {\n     return xhrId in this.loadedRequests;\n    },\n    abortAllRequests: function NetworkManager_abortAllRequests() {\n     for (var xhrId in this.pendingRequests) {\n      this.abortRequest(xhrId | 0);\n     }\n    },\n    abortRequest: function NetworkManager_abortRequest(xhrId) {\n     var xhr = this.pendingRequests[xhrId].xhr;\n     delete this.pendingRequests[xhrId];\n     xhr.abort();\n    }\n   };\n   var assert = sharedUtil.assert;\n   var createPromiseCapability = sharedUtil.createPromiseCapability;\n   var isInt = sharedUtil.isInt;\n   var MissingPDFException = sharedUtil.MissingPDFException;\n   var UnexpectedResponseException = sharedUtil.UnexpectedResponseException;\n   function PDFNetworkStream(options) {\n    this._options = options;\n    var source = options.source;\n    this._manager = new NetworkManager(source.url, {\n     httpHeaders: source.httpHeaders,\n     withCredentials: source.withCredentials\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n   }\n   PDFNetworkStream.prototype = {\n    _onRangeRequestReaderClosed: function PDFNetworkStream_onRangeRequestReaderClosed(reader) {\n     var i = this._rangeRequestReaders.indexOf(reader);\n     if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n     }\n    },\n    getFullReader: function PDFNetworkStream_getFullReader() {\n     assert(!this._fullRequestReader);\n     this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._options);\n     return this._fullRequestReader;\n    },\n    getRangeReader: function PDFNetworkStream_getRangeReader(begin, end) {\n     var reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);\n     reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n     this._rangeRequestReaders.push(reader);\n     return reader;\n    },\n    cancelAllRequests: function PDFNetworkStream_cancelAllRequests(reason) {\n     if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n     }\n     var readers = this._rangeRequestReaders.slice(0);\n     readers.forEach(function (reader) {\n      reader.cancel(reason);\n     });\n    }\n   };\n   function PDFNetworkStreamFullRequestReader(manager, options) {\n    this._manager = manager;\n    var source = options.source;\n    var args = {\n     onHeadersReceived: this._onHeadersReceived.bind(this),\n     onProgressiveData: source.disableStream ? null : this._onProgressiveData.bind(this),\n     onDone: this._onDone.bind(this),\n     onError: this._onError.bind(this),\n     onProgress: this._onProgress.bind(this)\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = createPromiseCapability();\n    this._disableRange = options.disableRange || false;\n    this._contentLength = source.length;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n     this._disableRange = true;\n    }\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this.onProgress = null;\n   }\n   PDFNetworkStreamFullRequestReader.prototype = {\n    _validateRangeRequestCapabilities: function PDFNetworkStreamFullRequestReader_validateRangeRequestCapabilities() {\n     if (this._disableRange) {\n      return false;\n     }\n     var networkManager = this._manager;\n     if (!networkManager.isHttp) {\n      return false;\n     }\n     var fullRequestXhrId = this._fullRequestId;\n     var fullRequestXhr = networkManager.getRequestXhr(fullRequestXhrId);\n     if (fullRequestXhr.getResponseHeader('Accept-Ranges') !== 'bytes') {\n      return false;\n     }\n     var contentEncoding = fullRequestXhr.getResponseHeader('Content-Encoding') || 'identity';\n     if (contentEncoding !== 'identity') {\n      return false;\n     }\n     var length = fullRequestXhr.getResponseHeader('Content-Length');\n     length = parseInt(length, 10);\n     if (!isInt(length)) {\n      return false;\n     }\n     this._contentLength = length;\n     if (length <= 2 * this._rangeChunkSize) {\n      return false;\n     }\n     return true;\n    },\n    _onHeadersReceived: function PDFNetworkStreamFullRequestReader_onHeadersReceived() {\n     if (this._validateRangeRequestCapabilities()) {\n      this._isRangeSupported = true;\n     }\n     var networkManager = this._manager;\n     var fullRequestXhrId = this._fullRequestId;\n     if (networkManager.isStreamingRequest(fullRequestXhrId)) {\n      this._isStreamingSupported = true;\n     } else if (this._isRangeSupported) {\n      networkManager.abortRequest(fullRequestXhrId);\n     }\n     this._headersReceivedCapability.resolve();\n    },\n    _onProgressiveData: function PDFNetworkStreamFullRequestReader_onProgressiveData(chunk) {\n     if (this._requests.length > 0) {\n      var requestCapability = this._requests.shift();\n      requestCapability.resolve({\n       value: chunk,\n       done: false\n      });\n     } else {\n      this._cachedChunks.push(chunk);\n     }\n    },\n    _onDone: function PDFNetworkStreamFullRequestReader_onDone(args) {\n     if (args) {\n      this._onProgressiveData(args.chunk);\n     }\n     this._done = true;\n     if (this._cachedChunks.length > 0) {\n      return;\n     }\n     this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({\n       value: undefined,\n       done: true\n      });\n     });\n     this._requests = [];\n    },\n    _onError: function PDFNetworkStreamFullRequestReader_onError(status) {\n     var url = this._url;\n     var exception;\n     if (status === 404 || status === 0 && /^file:/.test(url)) {\n      exception = new MissingPDFException('Missing PDF \"' + url + '\".');\n     } else {\n      exception = new UnexpectedResponseException('Unexpected server response (' + status + ') while retrieving PDF \"' + url + '\".', status);\n     }\n     this._storedError = exception;\n     this._headersReceivedCapability.reject(exception);\n     this._requests.forEach(function (requestCapability) {\n      requestCapability.reject(exception);\n     });\n     this._requests = [];\n     this._cachedChunks = [];\n    },\n    _onProgress: function PDFNetworkStreamFullRequestReader_onProgress(data) {\n     if (this.onProgress) {\n      this.onProgress({\n       loaded: data.loaded,\n       total: data.lengthComputable ? data.total : this._contentLength\n      });\n     }\n    },\n    get isRangeSupported() {\n     return this._isRangeSupported;\n    },\n    get isStreamingSupported() {\n     return this._isStreamingSupported;\n    },\n    get contentLength() {\n     return this._contentLength;\n    },\n    get headersReady() {\n     return this._headersReceivedCapability.promise;\n    },\n    read: function PDFNetworkStreamFullRequestReader_read() {\n     if (this._storedError) {\n      return Promise.reject(this._storedError);\n     }\n     if (this._cachedChunks.length > 0) {\n      var chunk = this._cachedChunks.shift();\n      return Promise.resolve(chunk);\n     }\n     if (this._done) {\n      return Promise.resolve({\n       value: undefined,\n       done: true\n      });\n     }\n     var requestCapability = createPromiseCapability();\n     this._requests.push(requestCapability);\n     return requestCapability.promise;\n    },\n    cancel: function PDFNetworkStreamFullRequestReader_cancel(reason) {\n     this._done = true;\n     this._headersReceivedCapability.reject(reason);\n     this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({\n       value: undefined,\n       done: true\n      });\n     });\n     this._requests = [];\n     if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n     }\n     this._fullRequestReader = null;\n    }\n   };\n   function PDFNetworkStreamRangeRequestReader(manager, begin, end) {\n    this._manager = manager;\n    var args = {\n     onDone: this._onDone.bind(this),\n     onProgress: this._onProgress.bind(this)\n    };\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n    this.onProgress = null;\n    this.onClosed = null;\n   }\n   PDFNetworkStreamRangeRequestReader.prototype = {\n    _close: function PDFNetworkStreamRangeRequestReader_close() {\n     if (this.onClosed) {\n      this.onClosed(this);\n     }\n    },\n    _onDone: function PDFNetworkStreamRangeRequestReader_onDone(data) {\n     var chunk = data.chunk;\n     if (this._requests.length > 0) {\n      var requestCapability = this._requests.shift();\n      requestCapability.resolve({\n       value: chunk,\n       done: false\n      });\n     } else {\n      this._queuedChunk = chunk;\n     }\n     this._done = true;\n     this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({\n       value: undefined,\n       done: true\n      });\n     });\n     this._requests = [];\n     this._close();\n    },\n    _onProgress: function PDFNetworkStreamRangeRequestReader_onProgress(evt) {\n     if (!this.isStreamingSupported && this.onProgress) {\n      this.onProgress({ loaded: evt.loaded });\n     }\n    },\n    get isStreamingSupported() {\n     return false;\n    },\n    read: function PDFNetworkStreamRangeRequestReader_read() {\n     if (this._queuedChunk !== null) {\n      var chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return Promise.resolve({\n       value: chunk,\n       done: false\n      });\n     }\n     if (this._done) {\n      return Promise.resolve({\n       value: undefined,\n       done: true\n      });\n     }\n     var requestCapability = createPromiseCapability();\n     this._requests.push(requestCapability);\n     return requestCapability.promise;\n    },\n    cancel: function PDFNetworkStreamRangeRequestReader_cancel(reason) {\n     this._done = true;\n     this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({\n       value: undefined,\n       done: true\n      });\n     });\n     this._requests = [];\n     if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n     }\n     this._close();\n    }\n   };\n   coreWorker.setPDFNetworkStreamClass(PDFNetworkStream);\n   exports.PDFNetworkStream = PDFNetworkStream;\n   exports.NetworkManager = NetworkManager;\n  }));\n }.call(pdfjsLibs));\n exports.WorkerMessageHandler = pdfjsLibs.pdfjsCoreWorker.WorkerMessageHandler;\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/build/pdf.worker.js\n// module id = 208\n// module chunks = 1 2"],"sourceRoot":""}